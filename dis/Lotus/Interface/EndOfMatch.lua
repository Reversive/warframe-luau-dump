; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  190

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Utilities"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x2d0fad09
  5 [-]: LOADK     R2 K2        ; R2 := "Lotus.Interface.UIUtilities"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x2d0fad09
  8 [-]: LOADK     R3 K3        ; R3 := "Lotus.Interface.CrossPlatformUtilities"
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x2d0fad09
 11 [-]: LOADK     R4 K4        ; R4 := "Lotus.Interface.LotusUtilities"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x2d0fad09
 14 [-]: LOADK     R5 K5        ; R5 := "Lotus.Interface.UIStyleUtilities"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K0        ; R5 := 0x2d0fad09
 17 [-]: LOADK     R6 K6        ; R6 := "Lotus.Interface.CardUtilitiesRedux"
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K0        ; R6 := 0x2d0fad09
 20 [-]: LOADK     R7 K7        ; R7 := "Lotus.Interface.RewardUtilities"
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: GETGLOBAL R7 K0        ; R7 := 0x2d0fad09
 23 [-]: LOADK     R8 K8        ; R8 := "Lotus.Interface.StoreItemUtilities"
 24 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 25 [-]: GETGLOBAL R8 K0        ; R8 := 0x2d0fad09
 26 [-]: LOADK     R9 K9        ; R9 := "Lotus.Scripts.Effects.EffectsColorUtilities"
 27 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 28 [-]: GETGLOBAL R9 K0        ; R9 := 0x2d0fad09
 29 [-]: LOADK     R10 K10      ; R10 := "Lotus.Scripts.Nemesis.NemesisGenerator"
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: GETGLOBAL R10 K0       ; R10 := 0x2d0fad09
 32 [-]: LOADK     R11 K11      ; R11 := "Lotus.Scripts.Libs.TransmissionSet"
 33 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 34 [-]: GETGLOBAL R11 K0       ; R11 := 0x2d0fad09
 35 [-]: LOADK     R12 K12      ; R12 := "Lotus.Scripts.PVP.PVPHelper"
 36 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 37 [-]: GETGLOBAL R12 K0       ; R12 := 0x2d0fad09
 38 [-]: LOADK     R13 K13      ; R13 := "Lotus.Interface.Components.ThemedProgressInfoGridItem"
 39 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 40 [-]: NEWTABLE  R13 0 14     ; R13 := {}
 41 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 42 [-]: LOADK     R15 K16      ; R15 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
 43 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 44 [-]: SETTABLE  R13 K14 R14  ; R13["Enhancement"] := R14
 45 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 46 [-]: LOADK     R15 K18      ; R15 := "/Lotus/Upgrades/Mods/Fusers/LegendaryModFuser"
 47 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 48 [-]: SETTABLE  R13 K17 R14  ; R13["LegendaryCore"] := R14
 49 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 50 [-]: LOADK     R15 K20      ; R15 := "/Lotus/Upgrades/Mods/Railjack/RailjackBaseMod"
 51 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 52 [-]: SETTABLE  R13 K19 R14  ; R13["RailjackMod"] := R14
 53 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 54 [-]: LOADK     R15 K22      ; R15 := "/Lotus/Types/Game/LotusSigil"
 55 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 56 [-]: SETTABLE  R13 K21 R14  ; R13["Sigil"] := R14
 57 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 58 [-]: LOADK     R15 K24      ; R15 := "/Lotus/Types/Items/MiscItems/VoidTearDrop"
 59 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 60 [-]: SETTABLE  R13 K23 R14  ; R13["VoidTrace"] := R14
 61 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 62 [-]: LOADK     R15 K26      ; R15 := "/Lotus/Types/Game/KubrowPet/KubrowPetPowerSuit"
 63 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 64 [-]: SETTABLE  R13 K25 R14  ; R13["KubrowPetSuit"] := R14
 65 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 66 [-]: LOADK     R15 K28      ; R15 := "/Lotus/Types/Game/CatbrowPet/CatbrowPetPowerSuit"
 67 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 68 [-]: SETTABLE  R13 K27 R14  ; R13["CatbrowPetSuit"] := R14
 69 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 70 [-]: LOADK     R15 K30      ; R15 := "/Lotus/Types/Items/MiscItems/TransientMiscItem"
 71 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 72 [-]: SETTABLE  R13 K29 R14  ; R13["TransientMiscItem"] := R14
 73 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 74 [-]: LOADK     R15 K32      ; R15 := "/Lotus/Types/Items/MiscItems/Kuva"
 75 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 76 [-]: SETTABLE  R13 K31 R14  ; R13["KuvaItem"] := R14
 77 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 78 [-]: LOADK     R15 K34      ; R15 := "/Lotus/Types/Items/Events/OperationsCredits"
 79 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 80 [-]: SETTABLE  R13 K33 R14  ; R13["ScarletCredits"] := R14
 81 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 82 [-]: LOADK     R15 K36      ; R15 := "/Lotus/Types/Items/SyndicateDogTags/NoraDogTag"
 83 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 84 [-]: SETTABLE  R13 K35 R14  ; R13["NoraDogTag"] := R14
 85 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 86 [-]: LOADK     R15 K38      ; R15 := "/Lotus/Types/Restoratives/Consumable/NemesisBait"
 87 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 88 [-]: SETTABLE  R13 K37 R14  ; R13["RequiemUltimatum"] := R14
 89 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 90 [-]: LOADK     R15 K40      ; R15 := "/Lotus/Types/Gameplay/Zariman/Resources/ZarimanDogTag"
 91 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 92 [-]: SETTABLE  R13 K39 R14  ; R13["ZarimanDogTag"] := R14
 93 [-]: GETGLOBAL R14 K15      ; R14 := 0x7ed0a956
 94 [-]: LOADK     R15 K42      ; R15 := "/Lotus/Types/Gameplay/Zariman/Resources/ZarimanResourceItem"
 95 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 96 [-]: SETTABLE  R13 K41 R14  ; R13["ZarimanResourceItem"] := R14
 97 [-]: LOADKB    R14 1 0      ; R14 := true
 98 [-]: SETGLOBAL R14 K43      ; mShowDuringLoadingScreen := R14
 99 [-]: LOADNIL   R14 R14      ; R14 := nil
100 [-]: SETGLOBAL R14 K44      ; mDioramaLoader := R14
101 [-]: CONST     R14 0        ; R14 := 0.000000
102 [-]: SETGLOBAL R14 K45      ; mBG := R14
103 [-]: LOADNIL   R14 R14      ; R14 := nil
104 [-]: SETGLOBAL R14 K46      ; mDioramaLevel := R14
105 [-]: LOADNIL   R14 R14      ; R14 := nil
106 [-]: SETGLOBAL R14 K47      ; mPulseBG := R14
107 [-]: LOADK     R14 K49      ; R14 := ""
108 [-]: SETGLOBAL R14 K48      ; mPetName := R14
109 [-]: LOADK     R14 K49      ; R14 := ""
110 [-]: SETGLOBAL R14 K50      ; mKDriveName := R14
111 [-]: NEWTABLE  R14 0 0      ; R14 := {}
112 [-]: SETGLOBAL R14 K51      ; mSquadLoadoutsInfo := R14
113 [-]: LOADKB    R14 0 0      ; R14 := false
114 [-]: SETGLOBAL R14 K52      ; mAbortingAndWasDoingPvpChallenge := R14
115 [-]: LOADNIL   R14 R14      ; R14 := nil
116 [-]: SETGLOBAL R14 K53      ; mAnchorMgr := R14
117 [-]: LOADNIL   R14 R14      ; R14 := nil
118 [-]: SETGLOBAL R14 K54      ; mTimerMgr := R14
119 [-]: LOADKB    R14 0 0      ; R14 := false
120 [-]: SETGLOBAL R14 K55      ; mInitialized := R14
121 [-]: LOADKB    R14 0 0      ; R14 := false
122 [-]: SETGLOBAL R14 K56      ; mShouldClose := R14
123 [-]: LOADKB    R14 0 0      ; R14 := false
124 [-]: SETGLOBAL R14 K57      ; mWaitingForReturnToShip := R14
125 [-]: LOADKB    R14 0 0      ; R14 := false
126 [-]: SETGLOBAL R14 K58      ; mWaitingForDbUpdate := R14
127 [-]: LOADKB    R14 0 0      ; R14 := false
128 [-]: SETGLOBAL R14 K59      ; mWaitingForMissionComplete := R14
129 [-]: LOADKB    R14 0 0      ; R14 := false
130 [-]: SETGLOBAL R14 K60      ; mCloseWhenDbUpdateComplete := R14
131 [-]: CONST     R14 -1       ; R14 := -1.000000
132 [-]: SETGLOBAL R14 K61      ; mAutoCloseDelay := R14
133 [-]: LOADNIL   R14 R14      ; R14 := nil
134 [-]: SETGLOBAL R14 K62      ; mCountdownMessage := R14
135 [-]: LOADNIL   R14 R14      ; R14 := nil
136 [-]: SETGLOBAL R14 K63      ; mPlayerMissionInfo := R14
137 [-]: CONST     R14 1        ; R14 := 1.000000
138 [-]: SETGLOBAL R14 K64      ; mFadeOut := R14
139 [-]: LOADKB    R14 0 0      ; R14 := false
140 [-]: SETGLOBAL R14 K65      ; mPanelTransitionOutActive := R14
141 [-]: CONST     R14 0        ; R14 := 0.000000
142 [-]: SETGLOBAL R14 K66      ; mPendingTallies := R14
143 [-]: LOADNIL   R14 R14      ; R14 := nil
144 [-]: SETGLOBAL R14 K67      ; mXpTallySoundInst := R14
145 [-]: CONST     R14 -1       ; R14 := -1.000000
146 [-]: SETGLOBAL R14 K68      ; mReturningToLobbyTime := R14
147 [-]: LOADKB    R14 0 0      ; R14 := false
148 [-]: SETGLOBAL R14 K69      ; mOpenedFromPauseMenu := R14
149 [-]: LOADNIL   R14 R14      ; R14 := nil
150 [-]: SETGLOBAL R14 K70      ; mChildMovie := R14
151 [-]: LOADNIL   R14 R14      ; R14 := nil
152 [-]: SETGLOBAL R14 K71      ; mPvpMovie := R14
153 [-]: LOADKB    R14 0 0      ; R14 := false
154 [-]: SETGLOBAL R14 K72      ; mKudosScreenClosed := R14
155 [-]: LOADKB    R14 0 0      ; R14 := false
156 [-]: SETGLOBAL R14 K73      ; mMedalsValidated := R14
157 [-]: CONST     R14 10       ; R14 := 10.000000
158 [-]: SETGLOBAL R14 K74      ; AUTO_CLOSE_DELAY := R14
159 [-]: CONST     R14 0        ; R14 := 0.250000
160 [-]: SETGLOBAL R14 K75      ; AUTO_CLOSE_FADEOUT_TIME := R14
161 [-]: LOADK     R14 K77      ; R14 := 0.150000
162 [-]: SETGLOBAL R14 K76      ; PROGRESS_BAR_FILL_MIN_SECONDS := R14
163 [-]: CONST     R14 1        ; R14 := 1.250000
164 [-]: SETGLOBAL R14 K78      ; PROGRESS_BAR_FILL_MAX_SECONDS := R14
165 [-]: CONST     R14 100      ; R14 := 100.000000
166 [-]: SETGLOBAL R14 K79      ; PROGRESS_BAR_FILL_XP_PER_SECOND := R14
167 [-]: CONST     R14 80       ; R14 := 80.000000
168 [-]: SETGLOBAL R14 K80      ; BACKER_ALPHA := R14
169 [-]: CONST     R14 30       ; R14 := 30.000000
170 [-]: SETGLOBAL R14 K81      ; BORDER_ALPHA := R14
171 [-]: NEWTABLE  R14 0 12     ; R14 := {}
172 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
173 [-]: LOADK     R16 K84      ; R16 := "Wave"
174 [-]: CALL      R15 2 2      ; R15 := R15(R16)
175 [-]: SETTABLE  R14 K82 R15  ; R14["WAVE_NUMBER"] := R15
176 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
177 [-]: LOADK     R16 K86      ; R16 := "TimeElapsed"
178 [-]: CALL      R15 2 2      ; R15 := R15(R16)
179 [-]: SETTABLE  R14 K85 R15  ; R14["TIME_ELAPSED"] := R15
180 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
181 [-]: LOADK     R16 K88      ; R16 := "Score"
182 [-]: CALL      R15 2 2      ; R15 := R15(R16)
183 [-]: SETTABLE  R14 K87 R15  ; R14["MISSION_SCORE"] := R15
184 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
185 [-]: LOADK     R16 K90      ; R16 := "RescueEventScore"
186 [-]: CALL      R15 2 2      ; R15 := R15(R16)
187 [-]: SETTABLE  R14 K89 R15  ; R14["RESCUE_SCORE"] := R15
188 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
189 [-]: LOADK     R16 K92      ; R16 := "HiveEventScore"
190 [-]: CALL      R15 2 2      ; R15 := R15(R16)
191 [-]: SETTABLE  R14 K91 R15  ; R14["HIVE_SCORE"] := R15
192 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
193 [-]: LOADK     R16 K94      ; R16 := "FactionHunterSpawned"
194 [-]: CALL      R15 2 2      ; R15 := R15(R16)
195 [-]: SETTABLE  R14 K93 R15  ; R14["FACTION_HUNTER_SPAWNED"] := R15
196 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
197 [-]: LOADK     R16 K96      ; R16 := "NumDeathSquadVictims"
198 [-]: CALL      R15 2 2      ; R15 := R15(R16)
199 [-]: SETTABLE  R14 K95 R15  ; R14["NUM_DEATH_SQUAD_VICTIMS"] := R15
200 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
201 [-]: LOADK     R16 K98      ; R16 := "MoonEarth"
202 [-]: CALL      R15 2 2      ; R15 := R15(R16)
203 [-]: SETTABLE  R14 K97 R15  ; R14["REGION_TAG_MOON_EARTH"] := R15
204 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
205 [-]: LOADK     R16 K100     ; R16 := "MoonVoid"
206 [-]: CALL      R15 2 2      ; R15 := R15(R16)
207 [-]: SETTABLE  R14 K99 R15  ; R14["REGION_TAG_MOON_VOID"] := R15
208 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
209 [-]: LOADK     R16 K102     ; R16 := "EARNED_ITEM"
210 [-]: CALL      R15 2 2      ; R15 := R15(R16)
211 [-]: SETTABLE  R14 K101 R15 ; R14["EARNED_ITEM_TAG"] := R15
212 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
213 [-]: LOADK     R16 K104     ; R16 := "CrewBattleNode556"
214 [-]: CALL      R15 2 2      ; R15 := R15(R16)
215 [-]: SETTABLE  R14 K103 R15 ; R14["FREE_FLIGHT_NODE"] := R15
216 [-]: GETGLOBAL R15 K83      ; R15 := 0x0469f296
217 [-]: LOADK     R16 K106     ; R16 := "MissionSuccess"
218 [-]: CALL      R15 2 2      ; R15 := R15(R16)
219 [-]: SETTABLE  R14 K105 R15 ; R14["NV_MISSION_SUCCESS"] := R15
220 [-]: LOADKB    R15 0 0      ; R15 := false
221 [-]: SETGLOBAL R15 K107     ; mAskedPauseMenuToClose := R15
222 [-]: LOADKB    R15 0 0      ; R15 := false
223 [-]: SETGLOBAL R15 K108     ; mQuestMissionChecked := R15
224 [-]: LOADNIL   R15 R15      ; R15 := nil
225 [-]: SETGLOBAL R15 K109     ; mAffinityGrid := R15
226 [-]: LOADKB    R15 0 0      ; R15 := false
227 [-]: SETGLOBAL R15 K110     ; mQueueUpdateButtons := R15
228 [-]: LOADNIL   R15 R15      ; R15 := nil
229 [-]: SETGLOBAL R15 K111     ; mRewardGrid := R15
230 [-]: LOADNIL   R15 R15      ; R15 := nil
231 [-]: SETGLOBAL R15 K112     ; mSearchBox := R15
232 [-]: NEWTABLE  R15 0 0      ; R15 := {}
233 [-]: SETGLOBAL R15 K113     ; mRewards := R15
234 [-]: NEWTABLE  R15 0 0      ; R15 := {}
235 [-]: SETGLOBAL R15 K114     ; mMods := R15
236 [-]: LOADNIL   R15 R15      ; R15 := nil
237 [-]: SETGLOBAL R15 K115     ; mStatsGrid := R15
238 [-]: LOADNIL   R15 R15      ; R15 := nil
239 [-]: SETGLOBAL R15 K116     ; mMission := R15
240 [-]: LOADNIL   R15 R15      ; R15 := nil
241 [-]: SETGLOBAL R15 K117     ; mGameData := R15
242 [-]: NEWTABLE  R15 0 0      ; R15 := {}
243 [-]: SETGLOBAL R15 K118     ; mOtherStuff := R15
244 [-]: NEWTABLE  R15 0 0      ; R15 := {}
245 [-]: SETGLOBAL R15 K119     ; mSortRewardItems := R15
246 [-]: CONST     R15 5        ; R15 := 5.000000
247 [-]: SETGLOBAL R15 K120     ; mFusionPointsSortPriority := R15
248 [-]: NEWTABLE  R15 0 0      ; R15 := {}
249 [-]: SETGLOBAL R15 K121     ; mStatTable := R15
250 [-]: LOADKB    R15 0 0      ; R15 := false
251 [-]: SETGLOBAL R15 K122     ; mMissionSuccessful := R15
252 [-]: LOADKB    R15 0 0      ; R15 := false
253 [-]: SETGLOBAL R15 K123     ; mMissionFailed := R15
254 [-]: LOADKB    R15 1 0      ; R15 := true
255 [-]: SETGLOBAL R15 K124     ; mInputBlocked := R15
256 [-]: CONST     R15 8        ; R15 := 8.000000
257 [-]: SETGLOBAL R15 K125     ; mMaxPlayers := R15
258 [-]: NEWTABLE  R15 0 5      ; R15 := {}
259 [-]: SETTABLE  R15 K127 K128; R15["Affinity"] := 0.000000
260 [-]: SETTABLE  R15 K129 K128; R15["Rewards"] := 0.000000
261 [-]: SETTABLE  R15 K130 K128; R15["Mods"] := 0.000000
262 [-]: SETTABLE  R15 K131 K128; R15["Stats"] := 0.000000
263 [-]: SETTABLE  R15 K132 K128; R15["Title"] := 0.000000
264 [-]: SETGLOBAL R15 K126     ; mPanelStartY := R15
265 [-]: LOADNIL   R15 R15      ; R15 := nil
266 [-]: SETGLOBAL R15 K133     ; mPlayerIconFx := R15
267 [-]: LOADNIL   R15 R15      ; R15 := nil
268 [-]: SETGLOBAL R15 K134     ; mLocalPlayerMissionStats := R15
269 [-]: LOADNIL   R15 R15      ; R15 := nil
270 [-]: SETGLOBAL R15 K135     ; mStatColumnSeparation := R15
271 [-]: LOADNIL   R15 R15      ; R15 := nil
272 [-]: SETGLOBAL R15 K136     ; mPlayersForStats := R15
273 [-]: CONST     R15 0        ; R15 := 0.000000
274 [-]: SETGLOBAL R15 K137     ; mNumberOfLoadoutSlotsUsed := R15
275 [-]: NEWTABLE  R15 0 5      ; R15 := {}
276 [-]: SETTABLE  R15 K139 K140; R15["ITEMS"] := 1.000000
277 [-]: SETTABLE  R15 K141 K142; R15["REP"] := 2.000000
278 [-]: SETTABLE  R15 K143 K144; R15["SCOREBOARD"] := 3.000000
279 [-]: SETTABLE  R15 K145 K146; R15["MASTERY"] := 4.000000
280 [-]: SETTABLE  R15 K147 K148; R15["KAHL"] := 5.000000
281 [-]: SETGLOBAL R15 K138     ; ScreenType := R15
282 [-]: GETGLOBAL R15 K138     ; R15 := ScreenType
283 [-]: GETTABLE  R15 R15 K141 ; R15 := R15["REP"]
284 [-]: SETGLOBAL R15 K149     ; mCurrentScreenType := R15
285 [-]: LOADKB    R15 0 0      ; R15 := false
286 [-]: SETGLOBAL R15 K150     ; mReputationScreenInitialized := R15
287 [-]: LOADKB    R15 0 0      ; R15 := false
288 [-]: SETGLOBAL R15 K151     ; mArchWingRequired := R15
289 [-]: LOADNIL   R15 R15      ; R15 := nil
290 [-]: SETGLOBAL R15 K152     ; mIntrinsicPoints := R15
291 [-]: NEWTABLE  R15 0 5      ; R15 := {}
292 [-]: SETTABLE  R15 K153 K154; R15["isPvp"] := false
293 [-]: SETTABLE  R15 K155 K154; R15["allPlayersCommitted"] := false
294 [-]: SETTABLE  R15 K156 K140; R15["pvpType"] := 1.000000
295 [-]: SETTABLE  R15 K158 K159; R15["CurrMapVoteId"] := nil
296 [-]: SETTABLE  R15 K160 K154; R15["MapVoteInProgress"] := false
297 [-]: NEWTABLE  R16 0 0      ; R16 := {}
298 [-]: NEWTABLE  R17 0 0      ; R17 := {}
299 [-]: NEWTABLE  R18 0 0      ; R18 := {}
300 [-]: NEWTABLE  R19 0 0      ; R19 := {}
301 [-]: NEWTABLE  R20 0 0      ; R20 := {}
302 [-]: NEWTABLE  R21 0 0      ; R21 := {}
303 [-]: LOADKB    R22 0 0      ; R22 := false
304 [-]: LOADK     R23 K49      ; R23 := ""
305 [-]: NEWTABLE  R24 0 3      ; R24 := {}
306 [-]: SETTABLE  R24 K161 K140; R24["QUICK_PREVIEW"] := 1.000000
307 [-]: SETTABLE  R24 K162 K142; R24["DETAILED_PREVIEW"] := 2.000000
308 [-]: SETTABLE  R24 K163 K144; R24["ACTUAL_EOM"] := 3.000000
309 [-]: LOADKB    R25 0 0      ; R25 := false
310 [-]: NEWTABLE  R26 0 0      ; R26 := {}
311 [-]: LOADKB    R27 0 0      ; R27 := false
312 [-]: LOADKB    R28 0 0      ; R28 := false
313 [-]: CONST     R29 0        ; R29 := 0.000000
314 [-]: LOADKB    R30 0 0      ; R30 := false
315 [-]: LOADKB    R31 0 0      ; R31 := false
316 [-]: LOADKB    R32 0 0      ; R32 := false
317 [-]: LOADKB    R33 0 0      ; R33 := false
318 [-]: LOADNIL   R34 R34      ; R34 := nil
319 [-]: LOADKB    R35 0 0      ; R35 := false
320 [-]: LOADKB    R36 0 0      ; R36 := false
321 [-]: LOADNIL   R37 R37      ; R37 := nil
322 [-]: LOADK     R38 K49      ; R38 := ""
323 [-]: CONST     R39 0        ; R39 := 0.000000
324 [-]: LOADNIL   R40 R40      ; R40 := nil
325 [-]: NEWTABLE  R41 0 0      ; R41 := {}
326 [-]: LOADKB    R42 0 0      ; R42 := false
327 [-]: LOADNIL   R43 R43      ; R43 := nil
328 [-]: LOADKB    R44 1 0      ; R44 := true
329 [-]: CONST     R45 0        ; R45 := 0.000000
330 [-]: LOADK     R46 K49      ; R46 := ""
331 [-]: LOADNIL   R47 R47      ; R47 := nil
332 [-]: LOADKB    R48 0 0      ; R48 := false
333 [-]: LOADK     R49 K49      ; R49 := ""
334 [-]: LOADNIL   R50 R50      ; R50 := nil
335 [-]: CONST     R51 0        ; R51 := 0.000000
336 [-]: GETGLOBAL R52 K15      ; R52 := 0x7ed0a956
337 [-]: LOADK     R53 K164     ; R53 := "/Lotus/Sounds/Lotus/TransmissionSets/Gamemodes/SpecialMissions/HardModeTransmissions"
338 [-]: CALL      R52 2 2      ; R52 := R52(R53)
339 [-]: LOADNIL   R53 R54      ; R53 := R54 := nil
340 [-]: NEWTABLE  R55 0 6      ; R55 := {}
341 [-]: SETTABLE  R55 K165 K128; R55["ALL"] := 0.000000
342 [-]: SETTABLE  R55 K166 K140; R55["MODS"] := 1.000000
343 [-]: SETTABLE  R55 K167 K142; R55["AVIONICS"] := 2.000000
344 [-]: SETTABLE  R55 K168 K144; R55["RELICS"] := 3.000000
345 [-]: SETTABLE  R55 K169 K146; R55["RESOURCES"] := 4.000000
346 [-]: SETTABLE  R55 K170 K148; R55["MISC"] := 5.000000
347 [-]: NEWTABLE  R56 5 0      ; R56 := {}
348 [-]: NEWTABLE  R57 0 2      ; R57 := {}
349 [-]: GETGLOBAL R58 K172     ; R58 := gRecipeItemType
350 [-]: SETTABLE  R57 K171 R58 ; R57["Type"] := R58
351 [-]: SETTABLE  R57 K173 K146; R57["Priority"] := 4.000000
352 [-]: NEWTABLE  R58 0 2      ; R58 := {}
353 [-]: GETGLOBAL R59 K174     ; R59 := gFusionBundleType
354 [-]: SETTABLE  R58 K171 R59 ; R58["Type"] := R59
355 [-]: SETTABLE  R58 K173 K175; R58["Priority"] := 10.000000
356 [-]: NEWTABLE  R59 0 2      ; R59 := {}
357 [-]: GETTABLE  R60 R13 K14  ; R60 := R13["Enhancement"]
358 [-]: SETTABLE  R59 K171 R60 ; R59["Type"] := R60
359 [-]: SETTABLE  R59 K173 K148; R59["Priority"] := 5.000000
360 [-]: NEWTABLE  R60 0 2      ; R60 := {}
361 [-]: GETTABLE  R61 R13 K37  ; R61 := R13["RequiemUltimatum"]
362 [-]: SETTABLE  R60 K171 R61 ; R60["Type"] := R61
363 [-]: SETTABLE  R60 K173 K176; R60["Priority"] := 6.000000
364 [-]: NEWTABLE  R61 0 2      ; R61 := {}
365 [-]: GETGLOBAL R62 K177     ; R62 := gLotusBoosterUpgradeType
366 [-]: SETTABLE  R61 K171 R62 ; R61["Type"] := R62
367 [-]: SETTABLE  R61 K173 K178; R61["Priority"] := 7.000000
368 [-]: SETLIST   R56 5 1      ; R56[(1-1)*FPF+i] := R(56+i), 1 <= i <= 5
369 [-]: NEWTABLE  R57 0 0      ; R57 := {}
370 [-]: SETGLOBAL R57 K179     ; mPinnedAvatarImageResources := R57
371 [-]: CLOSURE   R57 0        ; R57 := closure(Function #1)
372 [-]: MOVE      R0 R22       ; R0 := R22
373 [-]: MOVE      R0 R24       ; R0 := R24
374 [-]: CLOSURE   R58 1        ; R58 := closure(Function #2)
375 [-]: CLOSURE   R59 2        ; R59 := closure(Function #3)
376 [-]: MOVE      R0 R3        ; R0 := R3
377 [-]: CLOSURE   R60 3        ; R60 := closure(Function #4)
378 [-]: CLOSURE   R61 4        ; R61 := closure(Function #5)
379 [-]: MOVE      R0 R60       ; R0 := R60
380 [-]: MOVE      R0 R20       ; R0 := R20
381 [-]: MOVE      R0 R21       ; R0 := R21
382 [-]: CLOSURE   R62 5        ; R62 := closure(Function #6)
383 [-]: MOVE      R0 R0        ; R0 := R0
384 [-]: MOVE      R0 R21       ; R0 := R21
385 [-]: MOVE      R0 R20       ; R0 := R20
386 [-]: CLOSURE   R63 6        ; R63 := closure(Function #7)
387 [-]: CLOSURE   R64 7        ; R64 := closure(Function #8)
388 [-]: CLOSURE   R65 8        ; R65 := closure(Function #9)
389 [-]: MOVE      R0 R24       ; R0 := R24
390 [-]: CLOSURE   R66 9        ; R66 := closure(Function #10)
391 [-]: MOVE      R0 R35       ; R0 := R35
392 [-]: MOVE      R0 R65       ; R0 := R65
393 [-]: CLOSURE   R67 10       ; R67 := closure(Function #11)
394 [-]: MOVE      R0 R35       ; R0 := R35
395 [-]: MOVE      R0 R65       ; R0 := R65
396 [-]: CLOSURE   R68 11       ; R68 := closure(Function #12)
397 [-]: MOVE      R0 R36       ; R0 := R36
398 [-]: MOVE      R0 R65       ; R0 := R65
399 [-]: CLOSURE   R69 12       ; R69 := closure(Function #13)
400 [-]: MOVE      R0 R39       ; R0 := R39
401 [-]: MOVE      R0 R65       ; R0 := R65
402 [-]: CLOSURE   R70 13       ; R70 := closure(Function #14)
403 [-]: MOVE      R0 R3        ; R0 := R3
404 [-]: MOVE      R0 R69       ; R0 := R69
405 [-]: CLOSURE   R71 14       ; R71 := closure(Function #15)
406 [-]: MOVE      R0 R0        ; R0 := R0
407 [-]: MOVE      R0 R65       ; R0 := R65
408 [-]: MOVE      R0 R63       ; R0 := R63
409 [-]: MOVE      R0 R39       ; R0 := R39
410 [-]: MOVE      R0 R69       ; R0 := R69
411 [-]: CLOSURE   R72 15       ; R72 := closure(Function #16)
412 [-]: MOVE      R0 R71       ; R0 := R71
413 [-]: CLOSURE   R73 16       ; R73 := closure(Function #17)
414 [-]: CLOSURE   R74 17       ; R74 := closure(Function #18)
415 [-]: MOVE      R0 R30       ; R0 := R30
416 [-]: CLOSURE   R75 18       ; R75 := closure(Function #19)
417 [-]: MOVE      R0 R73       ; R0 := R73
418 [-]: MOVE      R0 R42       ; R0 := R42
419 [-]: MOVE      R0 R24       ; R0 := R24
420 [-]: MOVE      R0 R74       ; R0 := R74
421 [-]: CLOSURE   R76 19       ; R76 := closure(Function #20)
422 [-]: MOVE      R0 R24       ; R0 := R24
423 [-]: MOVE      R0 R28       ; R0 := R28
424 [-]: CLOSURE   R77 20       ; R77 := closure(Function #21)
425 [-]: MOVE      R0 R76       ; R0 := R76
426 [-]: SETGLOBAL R77 K180     ; DisablePause := R77
427 [-]: CLOSURE   R77 21       ; R77 := closure(Function #22)
428 [-]: MOVE      R0 R3        ; R0 := R3
429 [-]: MOVE      R0 R30       ; R0 := R30
430 [-]: MOVE      R0 R57       ; R0 := R57
431 [-]: MOVE      R0 R24       ; R0 := R24
432 [-]: MOVE      R0 R35       ; R0 := R35
433 [-]: MOVE      R0 R36       ; R0 := R36
434 [-]: MOVE      R0 R73       ; R0 := R73
435 [-]: MOVE      R0 R1        ; R0 := R1
436 [-]: MOVE      R0 R28       ; R0 := R28
437 [-]: MOVE      R0 R22       ; R0 := R22
438 [-]: MOVE      R0 R0        ; R0 := R0
439 [-]: MOVE      R0 R27       ; R0 := R27
440 [-]: SETGLOBAL R77 K181     ; Shutdown := R77
441 [-]: CLOSURE   R77 22       ; R77 := closure(Function #23)
442 [-]: CLOSURE   R78 23       ; R78 := closure(Function #24)
443 [-]: CLOSURE   R79 24       ; R79 := closure(Function #25)
444 [-]: MOVE      R0 R78       ; R0 := R78
445 [-]: CLOSURE   R80 25       ; R80 := closure(Function #26)
446 [-]: CLOSURE   R81 26       ; R81 := closure(Function #27)
447 [-]: MOVE      R0 R59       ; R0 := R59
448 [-]: MOVE      R0 R15       ; R0 := R15
449 [-]: MOVE      R0 R11       ; R0 := R11
450 [-]: CLOSURE   R82 27       ; R82 := closure(Function #28)
451 [-]: MOVE      R0 R13       ; R0 := R13
452 [-]: CLOSURE   R83 28       ; R83 := closure(Function #29)
453 [-]: MOVE      R0 R3        ; R0 := R3
454 [-]: MOVE      R0 R77       ; R0 := R77
455 [-]: CLOSURE   R84 29       ; R84 := closure(Function #30)
456 [-]: MOVE      R0 R83       ; R0 := R83
457 [-]: CLOSURE   R85 30       ; R85 := closure(Function #31)
458 [-]: MOVE      R0 R84       ; R0 := R84
459 [-]: MOVE      R0 R83       ; R0 := R83
460 [-]: MOVE      R0 R45       ; R0 := R45
461 [-]: CLOSURE   R86 31       ; R86 := closure(Function #32)
462 [-]: MOVE      R0 R34       ; R0 := R34
463 [-]: MOVE      R0 R85       ; R0 := R85
464 [-]: CLOSURE   R87 32       ; R87 := closure(Function #33)
465 [-]: MOVE      R0 R66       ; R0 := R66
466 [-]: MOVE      R0 R67       ; R0 := R67
467 [-]: MOVE      R0 R68       ; R0 := R68
468 [-]: MOVE      R0 R0        ; R0 := R0
469 [-]: MOVE      R0 R15       ; R0 := R15
470 [-]: MOVE      R0 R72       ; R0 := R72
471 [-]: MOVE      R0 R46       ; R0 := R46
472 [-]: MOVE      R0 R37       ; R0 := R37
473 [-]: MOVE      R0 R34       ; R0 := R34
474 [-]: MOVE      R0 R44       ; R0 := R44
475 [-]: MOVE      R0 R65       ; R0 := R65
476 [-]: CLOSURE   R88 33       ; R88 := closure(Function #34)
477 [-]: MOVE      R0 R71       ; R0 := R71
478 [-]: MOVE      R0 R34       ; R0 := R34
479 [-]: MOVE      R0 R87       ; R0 := R87
480 [-]: SETGLOBAL R88 K182     ; onViewportSizeChanged := R88
481 [-]: CLOSURE   R88 34       ; R88 := closure(Function #35)
482 [-]: MOVE      R0 R4        ; R0 := R4
483 [-]: MOVE      R0 R43       ; R0 := R43
484 [-]: MOVE      R0 R8        ; R0 := R8
485 [-]: MOVE      R0 R64       ; R0 := R64
486 [-]: MOVE      R0 R34       ; R0 := R34
487 [-]: MOVE      R0 R44       ; R0 := R44
488 [-]: MOVE      R0 R83       ; R0 := R83
489 [-]: MOVE      R0 R47       ; R0 := R47
490 [-]: MOVE      R0 R87       ; R0 := R87
491 [-]: MOVE      R0 R0        ; R0 := R0
492 [-]: MOVE      R0 R65       ; R0 := R65
493 [-]: CLOSURE   R89 35       ; R89 := closure(Function #36)
494 [-]: SETGLOBAL R89 K183     ; HideArrowFill := R89
495 [-]: CLOSURE   R89 36       ; R89 := closure(Function #37)
496 [-]: SETGLOBAL R89 K184     ; ShowArrowFill := R89
497 [-]: CLOSURE   R89 37       ; R89 := closure(Function #38)
498 [-]: CLOSURE   R90 38       ; R90 := closure(Function #39)
499 [-]: CLOSURE   R91 39       ; R91 := closure(Function #40)
500 [-]: MOVE      R0 R24       ; R0 := R24
501 [-]: MOVE      R0 R90       ; R0 := R90
502 [-]: MOVE      R0 R3        ; R0 := R3
503 [-]: CLOSURE   R92 40       ; R92 := closure(Function #41)
504 [-]: MOVE      R0 R89       ; R0 := R89
505 [-]: MOVE      R0 R91       ; R0 := R91
506 [-]: SETGLOBAL R92 K185     ; TransitionOut := R92
507 [-]: CLOSURE   R92 41       ; R92 := closure(Function #42)
508 [-]: MOVE      R0 R3        ; R0 := R3
509 [-]: MOVE      R0 R91       ; R0 := R91
510 [-]: MOVE      R0 R24       ; R0 := R24
511 [-]: MOVE      R0 R0        ; R0 := R0
512 [-]: CLOSURE   R93 42       ; R93 := closure(Function #43)
513 [-]: MOVE      R0 R22       ; R0 := R22
514 [-]: MOVE      R0 R92       ; R0 := R92
515 [-]: CLOSURE   R94 43       ; R94 := closure(Function #44)
516 [-]: CLOSURE   R95 44       ; R95 := closure(Function #45)
517 [-]: MOVE      R0 R59       ; R0 := R59
518 [-]: CLOSURE   R96 45       ; R96 := closure(Function #46)
519 [-]: MOVE      R0 R59       ; R0 := R59
520 [-]: CLOSURE   R97 46       ; R97 := closure(Function #47)
521 [-]: MOVE      R0 R3        ; R0 := R3
522 [-]: MOVE      R0 R95       ; R0 := R95
523 [-]: MOVE      R0 R96       ; R0 := R96
524 [-]: MOVE      R0 R24       ; R0 := R24
525 [-]: CLOSURE   R98 47       ; R98 := closure(Function #48)
526 [-]: MOVE      R0 R97       ; R0 := R97
527 [-]: MOVE      R0 R92       ; R0 := R92
528 [-]: SETGLOBAL R98 K186     ; ExitScreen := R98
529 [-]: CLOSURE   R98 48       ; R98 := closure(Function #49)
530 [-]: CLOSURE   R99 49       ; R99 := closure(Function #50)
531 [-]: MOVE      R0 R30       ; R0 := R30
532 [-]: MOVE      R0 R71       ; R0 := R71
533 [-]: MOVE      R0 R75       ; R0 := R75
534 [-]: MOVE      R0 R32       ; R0 := R32
535 [-]: MOVE      R0 R3        ; R0 := R3
536 [-]: MOVE      R0 R65       ; R0 := R65
537 [-]: MOVE      R0 R35       ; R0 := R35
538 [-]: MOVE      R0 R98       ; R0 := R98
539 [-]: MOVE      R0 R88       ; R0 := R88
540 [-]: MOVE      R0 R99       ; R0 := R99
541 [-]: MOVE      R0 R23       ; R0 := R23
542 [-]: MOVE      R0 R0        ; R0 := R0
543 [-]: MOVE      R0 R59       ; R0 := R59
544 [-]: MOVE      R0 R93       ; R0 := R93
545 [-]: MOVE      R0 R24       ; R0 := R24
546 [-]: MOVE      R0 R95       ; R0 := R95
547 [-]: MOVE      R0 R96       ; R0 := R96
548 [-]: MOVE      R0 R77       ; R0 := R77
549 [-]: CLOSURE   R100 50      ; R100 := closure(Function #51)
550 [-]: MOVE      R0 R3        ; R0 := R3
551 [-]: CLOSURE   R101 51      ; R101 := closure(Function #52)
552 [-]: MOVE      R0 R100      ; R0 := R100
553 [-]: CLOSURE   R102 52      ; R102 := closure(Function #53)
554 [-]: MOVE      R0 R59       ; R0 := R59
555 [-]: CLOSURE   R103 53      ; R103 := closure(Function #54)
556 [-]: MOVE      R0 R95       ; R0 := R95
557 [-]: CLOSURE   R104 54      ; R104 := closure(Function #55)
558 [-]: MOVE      R0 R59       ; R0 := R59
559 [-]: CLOSURE   R105 55      ; R105 := closure(Function #56)
560 [-]: MOVE      R0 R3        ; R0 := R3
561 [-]: MOVE      R0 R59       ; R0 := R59
562 [-]: CLOSURE   R106 56      ; R106 := closure(Function #57)
563 [-]: MOVE      R0 R105      ; R0 := R105
564 [-]: MOVE      R0 R46       ; R0 := R46
565 [-]: CLOSURE   R107 57      ; R107 := closure(Function #58)
566 [-]: MOVE      R0 R38       ; R0 := R38
567 [-]: MOVE      R0 R15       ; R0 := R15
568 [-]: MOVE      R0 R78       ; R0 := R78
569 [-]: MOVE      R0 R79       ; R0 := R79
570 [-]: MOVE      R0 R59       ; R0 := R59
571 [-]: MOVE      R0 R104      ; R0 := R104
572 [-]: MOVE      R0 R105      ; R0 := R105
573 [-]: MOVE      R0 R0        ; R0 := R0
574 [-]: CLOSURE   R108 58      ; R108 := closure(Function #59)
575 [-]: MOVE      R0 R15       ; R0 := R15
576 [-]: MOVE      R0 R103      ; R0 := R103
577 [-]: MOVE      R0 R94       ; R0 := R94
578 [-]: MOVE      R0 R102      ; R0 := R102
579 [-]: MOVE      R0 R0        ; R0 := R0
580 [-]: CLOSURE   R109 59      ; R109 := closure(Function #60)
581 [-]: CLOSURE   R110 60      ; R110 := closure(Function #61)
582 [-]: MOVE      R0 R80       ; R0 := R80
583 [-]: MOVE      R0 R3        ; R0 := R3
584 [-]: MOVE      R0 R109      ; R0 := R109
585 [-]: CLOSURE   R111 61      ; R111 := closure(Function #62)
586 [-]: SETGLOBAL R111 K187    ; OnOnslaughtBackgroundReady := R111
587 [-]: CLOSURE   R111 62      ; R111 := closure(Function #63)
588 [-]: MOVE      R0 R0        ; R0 := R0
589 [-]: SETGLOBAL R111 K188    ; OnOnslaughtTransmissionReady := R111
590 [-]: CLOSURE   R111 63      ; R111 := closure(Function #64)
591 [-]: MOVE      R0 R0        ; R0 := R0
592 [-]: SETGLOBAL R111 K189    ; OnOnslaughtMusicReady := R111
593 [-]: CLOSURE   R111 64      ; R111 := closure(Function #65)
594 [-]: MOVE      R0 R3        ; R0 := R3
595 [-]: MOVE      R0 R106      ; R0 := R106
596 [-]: MOVE      R0 R0        ; R0 := R0
597 [-]: MOVE      R0 R109      ; R0 := R109
598 [-]: CLOSURE   R112 65      ; R112 := closure(Function #66)
599 [-]: MOVE      R0 R3        ; R0 := R3
600 [-]: MOVE      R0 R24       ; R0 := R24
601 [-]: MOVE      R0 R59       ; R0 := R59
602 [-]: MOVE      R0 R0        ; R0 := R0
603 [-]: CLOSURE   R113 66      ; R113 := closure(Function #67)
604 [-]: MOVE      R0 R104      ; R0 := R104
605 [-]: MOVE      R0 R111      ; R0 := R111
606 [-]: MOVE      R0 R112      ; R0 := R112
607 [-]: MOVE      R0 R3        ; R0 := R3
608 [-]: MOVE      R0 R24       ; R0 := R24
609 [-]: MOVE      R0 R109      ; R0 := R109
610 [-]: CLOSURE   R114 67      ; R114 := closure(Function #68)
611 [-]: MOVE      R0 R110      ; R0 := R110
612 [-]: MOVE      R0 R113      ; R0 := R113
613 [-]: CLOSURE   R115 68      ; R115 := closure(Function #69)
614 [-]: CLOSURE   R116 69      ; R116 := closure(Function #70)
615 [-]: CLOSURE   R117 70      ; R117 := closure(Function #71)
616 [-]: SETGLOBAL R117 K190    ; ZoomCam := R117
617 [-]: CLOSURE   R117 71      ; R117 := closure(Function #72)
618 [-]: MOVE      R0 R59       ; R0 := R59
619 [-]: SETGLOBAL R117 K191    ; PrepareCinematic := R117
620 [-]: CLOSURE   R117 72      ; R117 := closure(Function #73)
621 [-]: MOVE      R0 R3        ; R0 := R3
622 [-]: MOVE      R0 R42       ; R0 := R42
623 [-]: MOVE      R0 R89       ; R0 := R89
624 [-]: CLOSURE   R118 73      ; R118 := closure(Function #74)
625 [-]: MOVE      R0 R59       ; R0 := R59
626 [-]: CLOSURE   R119 74      ; R119 := closure(Function #75)
627 [-]: MOVE      R0 R59       ; R0 := R59
628 [-]: CLOSURE   R120 75      ; R120 := closure(Function #76)
629 [-]: MOVE      R0 R59       ; R0 := R59
630 [-]: CLOSURE   R121 76      ; R121 := closure(Function #77)
631 [-]: MOVE      R0 R59       ; R0 := R59
632 [-]: CLOSURE   R122 77      ; R122 := closure(Function #78)
633 [-]: MOVE      R0 R59       ; R0 := R59
634 [-]: CLOSURE   R123 78      ; R123 := closure(Function #79)
635 [-]: MOVE      R0 R59       ; R0 := R59
636 [-]: CLOSURE   R124 79      ; R124 := closure(Function #80)
637 [-]: MOVE      R0 R59       ; R0 := R59
638 [-]: CLOSURE   R125 80      ; R125 := closure(Function #81)
639 [-]: MOVE      R0 R59       ; R0 := R59
640 [-]: CLOSURE   R126 81      ; R126 := closure(Function #82)
641 [-]: MOVE      R0 R24       ; R0 := R24
642 [-]: MOVE      R0 R52       ; R0 := R52
643 [-]: MOVE      R0 R26       ; R0 := R26
644 [-]: MOVE      R0 R10       ; R0 := R10
645 [-]: MOVE      R0 R0        ; R0 := R0
646 [-]: MOVE      R0 R104      ; R0 := R104
647 [-]: MOVE      R0 R118      ; R0 := R118
648 [-]: CLOSURE   R127 82      ; R127 := closure(Function #83)
649 [-]: CLOSURE   R128 83      ; R128 := closure(Function #84)
650 [-]: CLOSURE   R129 84      ; R129 := closure(Function #85)
651 [-]: MOVE      R0 R59       ; R0 := R59
652 [-]: MOVE      R0 R125      ; R0 := R125
653 [-]: MOVE      R0 R104      ; R0 := R104
654 [-]: CLOSURE   R130 85      ; R130 := closure(Function #86)
655 [-]: MOVE      R0 R59       ; R0 := R59
656 [-]: MOVE      R0 R125      ; R0 := R125
657 [-]: MOVE      R0 R121      ; R0 := R121
658 [-]: MOVE      R0 R120      ; R0 := R120
659 [-]: MOVE      R0 R118      ; R0 := R118
660 [-]: MOVE      R0 R119      ; R0 := R119
661 [-]: MOVE      R0 R124      ; R0 := R124
662 [-]: MOVE      R0 R104      ; R0 := R104
663 [-]: MOVE      R0 R3        ; R0 := R3
664 [-]: CLOSURE   R131 86      ; R131 := closure(Function #87)
665 [-]: MOVE      R0 R3        ; R0 := R3
666 [-]: MOVE      R0 R0        ; R0 := R0
667 [-]: CLOSURE   R132 87      ; R132 := closure(Function #88)
668 [-]: MOVE      R0 R3        ; R0 := R3
669 [-]: MOVE      R0 R59       ; R0 := R59
670 [-]: MOVE      R0 R83       ; R0 := R83
671 [-]: MOVE      R0 R127      ; R0 := R127
672 [-]: MOVE      R0 R0        ; R0 := R0
673 [-]: MOVE      R0 R130      ; R0 := R130
674 [-]: MOVE      R0 R129      ; R0 := R129
675 [-]: MOVE      R0 R62       ; R0 := R62
676 [-]: MOVE      R0 R128      ; R0 := R128
677 [-]: MOVE      R0 R16       ; R0 := R16
678 [-]: MOVE      R0 R18       ; R0 := R18
679 [-]: MOVE      R0 R17       ; R0 := R17
680 [-]: MOVE      R0 R70       ; R0 := R70
681 [-]: MOVE      R0 R24       ; R0 := R24
682 [-]: MOVE      R0 R131      ; R0 := R131
683 [-]: MOVE      R0 R84       ; R0 := R84
684 [-]: MOVE      R0 R2        ; R0 := R2
685 [-]: MOVE      R0 R45       ; R0 := R45
686 [-]: MOVE      R0 R85       ; R0 := R85
687 [-]: MOVE      R0 R88       ; R0 := R88
688 [-]: CLOSURE   R133 88      ; R133 := closure(Function #89)
689 [-]: MOVE      R0 R132      ; R0 := R132
690 [-]: SETGLOBAL R133 K192    ; OnStatsReady := R133
691 [-]: CLOSURE   R133 89      ; R133 := closure(Function #90)
692 [-]: MOVE      R0 R3        ; R0 := R3
693 [-]: CLOSURE   R134 90      ; R134 := closure(Function #91)
694 [-]: MOVE      R0 R59       ; R0 := R59
695 [-]: MOVE      R0 R24       ; R0 := R24
696 [-]: MOVE      R0 R118      ; R0 := R118
697 [-]: MOVE      R0 R6        ; R0 := R6
698 [-]: MOVE      R0 R104      ; R0 := R104
699 [-]: MOVE      R0 R96       ; R0 := R96
700 [-]: CLOSURE   R135 91      ; R135 := closure(Function #92)
701 [-]: MOVE      R0 R61       ; R0 := R61
702 [-]: CLOSURE   R136 92      ; R136 := closure(Function #93)
703 [-]: CLOSURE   R137 93      ; R137 := closure(Function #94)
704 [-]: CLOSURE   R138 94      ; R138 := closure(Function #95)
705 [-]: MOVE      R0 R24       ; R0 := R24
706 [-]: MOVE      R0 R59       ; R0 := R59
707 [-]: MOVE      R0 R0        ; R0 := R0
708 [-]: MOVE      R0 R77       ; R0 := R77
709 [-]: MOVE      R0 R101      ; R0 := R101
710 [-]: MOVE      R0 R120      ; R0 := R120
711 [-]: MOVE      R0 R15       ; R0 := R15
712 [-]: MOVE      R0 R123      ; R0 := R123
713 [-]: MOVE      R0 R14       ; R0 := R14
714 [-]: MOVE      R0 R122      ; R0 := R122
715 [-]: MOVE      R0 R118      ; R0 := R118
716 [-]: MOVE      R0 R121      ; R0 := R121
717 [-]: MOVE      R0 R124      ; R0 := R124
718 [-]: MOVE      R0 R104      ; R0 := R104
719 [-]: MOVE      R0 R125      ; R0 := R125
720 [-]: MOVE      R0 R96       ; R0 := R96
721 [-]: MOVE      R0 R3        ; R0 := R3
722 [-]: MOVE      R0 R100      ; R0 := R100
723 [-]: MOVE      R0 R80       ; R0 := R80
724 [-]: MOVE      R0 R133      ; R0 := R133
725 [-]: MOVE      R0 R78       ; R0 := R78
726 [-]: MOVE      R0 R33       ; R0 := R33
727 [-]: MOVE      R0 R137      ; R0 := R137
728 [-]: CLOSURE   R139 95      ; R139 := closure(Function #96)
729 [-]: MOVE      R0 R3        ; R0 := R3
730 [-]: MOVE      R0 R0        ; R0 := R0
731 [-]: CLOSURE   R140 96      ; R140 := closure(Function #97)
732 [-]: MOVE      R0 R139      ; R0 := R139
733 [-]: CLOSURE   R141 97      ; R141 := closure(Function #98)
734 [-]: MOVE      R0 R0        ; R0 := R0
735 [-]: CLOSURE   R142 98      ; R142 := closure(Function #99)
736 [-]: CLOSURE   R143 99      ; R143 := closure(Function #100)
737 [-]: MOVE      R0 R24       ; R0 := R24
738 [-]: MOVE      R0 R141      ; R0 := R141
739 [-]: MOVE      R0 R12       ; R0 := R12
740 [-]: MOVE      R0 R142      ; R0 := R142
741 [-]: MOVE      R0 R139      ; R0 := R139
742 [-]: MOVE      R0 R140      ; R0 := R140
743 [-]: MOVE      R0 R3        ; R0 := R3
744 [-]: MOVE      R0 R0        ; R0 := R0
745 [-]: CLOSURE   R144 100     ; R144 := closure(Function #101)
746 [-]: MOVE      R0 R7        ; R0 := R7
747 [-]: MOVE      R0 R115      ; R0 := R115
748 [-]: MOVE      R0 R3        ; R0 := R3
749 [-]: MOVE      R0 R24       ; R0 := R24
750 [-]: MOVE      R0 R0        ; R0 := R0
751 [-]: MOVE      R0 R12       ; R0 := R12
752 [-]: MOVE      R0 R142      ; R0 := R142
753 [-]: MOVE      R0 R139      ; R0 := R139
754 [-]: MOVE      R0 R140      ; R0 := R140
755 [-]: CLOSURE   R145 101     ; R145 := closure(Function #102)
756 [-]: MOVE      R0 R0        ; R0 := R0
757 [-]: MOVE      R0 R12       ; R0 := R12
758 [-]: MOVE      R0 R142      ; R0 := R142
759 [-]: MOVE      R0 R139      ; R0 := R139
760 [-]: MOVE      R0 R3        ; R0 := R3
761 [-]: MOVE      R0 R140      ; R0 := R140
762 [-]: CLOSURE   R146 102     ; R146 := closure(Function #103)
763 [-]: MOVE      R0 R12       ; R0 := R12
764 [-]: MOVE      R0 R142      ; R0 := R142
765 [-]: MOVE      R0 R0        ; R0 := R0
766 [-]: CLOSURE   R147 103     ; R147 := closure(Function #104)
767 [-]: MOVE      R0 R12       ; R0 := R12
768 [-]: MOVE      R0 R142      ; R0 := R142
769 [-]: CLOSURE   R148 104     ; R148 := closure(Function #105)
770 [-]: MOVE      R0 R12       ; R0 := R12
771 [-]: MOVE      R0 R142      ; R0 := R142
772 [-]: MOVE      R0 R34       ; R0 := R34
773 [-]: CLOSURE   R149 105     ; R149 := closure(Function #106)
774 [-]: MOVE      R0 R12       ; R0 := R12
775 [-]: MOVE      R0 R142      ; R0 := R142
776 [-]: CLOSURE   R150 106     ; R150 := closure(Function #107)
777 [-]: CLOSURE   R151 107     ; R151 := closure(Function #108)
778 [-]: MOVE      R0 R1        ; R0 := R1
779 [-]: CLOSURE   R152 108     ; R152 := closure(Function #109)
780 [-]: MOVE      R0 R1        ; R0 := R1
781 [-]: MOVE      R0 R150      ; R0 := R150
782 [-]: CLOSURE   R153 109     ; R153 := closure(Function #110)
783 [-]: MOVE      R0 R1        ; R0 := R1
784 [-]: MOVE      R0 R150      ; R0 := R150
785 [-]: CLOSURE   R154 110     ; R154 := closure(Function #111)
786 [-]: MOVE      R0 R149      ; R0 := R149
787 [-]: MOVE      R0 R147      ; R0 := R147
788 [-]: MOVE      R0 R148      ; R0 := R148
789 [-]: MOVE      R0 R146      ; R0 := R146
790 [-]: MOVE      R0 R145      ; R0 := R145
791 [-]: MOVE      R0 R143      ; R0 := R143
792 [-]: MOVE      R0 R144      ; R0 := R144
793 [-]: MOVE      R0 R1        ; R0 := R1
794 [-]: MOVE      R0 R150      ; R0 := R150
795 [-]: CLOSURE   R155 111     ; R155 := closure(Function #112)
796 [-]: MOVE      R0 R151      ; R0 := R151
797 [-]: MOVE      R0 R152      ; R0 := R152
798 [-]: MOVE      R0 R153      ; R0 := R153
799 [-]: MOVE      R0 R154      ; R0 := R154
800 [-]: MOVE      R0 R96       ; R0 := R96
801 [-]: MOVE      R0 R3        ; R0 := R3
802 [-]: MOVE      R0 R100      ; R0 := R100
803 [-]: CLOSURE   R156 112     ; R156 := closure(Function #113)
804 [-]: MOVE      R0 R40       ; R0 := R40
805 [-]: MOVE      R0 R7        ; R0 := R7
806 [-]: MOVE      R0 R13       ; R0 := R13
807 [-]: MOVE      R0 R0        ; R0 := R0
808 [-]: CLOSURE   R157 113     ; R157 := closure(Function #114)
809 [-]: MOVE      R0 R3        ; R0 := R3
810 [-]: MOVE      R0 R41       ; R0 := R41
811 [-]: MOVE      R0 R0        ; R0 := R0
812 [-]: CLOSURE   R158 114     ; R158 := closure(Function #115)
813 [-]: MOVE      R0 R156      ; R0 := R156
814 [-]: MOVE      R0 R94       ; R0 := R94
815 [-]: MOVE      R0 R157      ; R0 := R157
816 [-]: MOVE      R0 R0        ; R0 := R0
817 [-]: MOVE      R0 R115      ; R0 := R115
818 [-]: CLOSURE   R159 115     ; R159 := closure(Function #116)
819 [-]: MOVE      R0 R3        ; R0 := R3
820 [-]: MOVE      R0 R0        ; R0 := R0
821 [-]: MOVE      R0 R41       ; R0 := R41
822 [-]: CLOSURE   R160 116     ; R160 := closure(Function #117)
823 [-]: MOVE      R0 R3        ; R0 := R3
824 [-]: MOVE      R0 R100      ; R0 := R100
825 [-]: MOVE      R0 R0        ; R0 := R0
826 [-]: MOVE      R0 R15       ; R0 := R15
827 [-]: MOVE      R0 R40       ; R0 := R40
828 [-]: MOVE      R0 R80       ; R0 := R80
829 [-]: MOVE      R0 R114      ; R0 := R114
830 [-]: MOVE      R0 R104      ; R0 := R104
831 [-]: MOVE      R0 R111      ; R0 := R111
832 [-]: MOVE      R0 R112      ; R0 := R112
833 [-]: MOVE      R0 R103      ; R0 := R103
834 [-]: MOVE      R0 R158      ; R0 := R158
835 [-]: MOVE      R0 R159      ; R0 := R159
836 [-]: MOVE      R0 R59       ; R0 := R59
837 [-]: MOVE      R0 R7        ; R0 := R7
838 [-]: MOVE      R0 R102      ; R0 := R102
839 [-]: MOVE      R0 R41       ; R0 := R41
840 [-]: CLOSURE   R161 117     ; R161 := closure(Function #118)
841 [-]: MOVE      R0 R16       ; R0 := R16
842 [-]: MOVE      R0 R17       ; R0 := R17
843 [-]: CLOSURE   R162 118     ; R162 := closure(Function #119)
844 [-]: MOVE      R0 R100      ; R0 := R100
845 [-]: MOVE      R0 R3        ; R0 := R3
846 [-]: MOVE      R0 R15       ; R0 := R15
847 [-]: MOVE      R0 R19       ; R0 := R19
848 [-]: MOVE      R0 R16       ; R0 := R16
849 [-]: MOVE      R0 R18       ; R0 := R18
850 [-]: MOVE      R0 R134      ; R0 := R134
851 [-]: MOVE      R0 R17       ; R0 := R17
852 [-]: MOVE      R0 R24       ; R0 := R24
853 [-]: MOVE      R0 R13       ; R0 := R13
854 [-]: MOVE      R0 R130      ; R0 := R130
855 [-]: MOVE      R0 R129      ; R0 := R129
856 [-]: MOVE      R0 R65       ; R0 := R65
857 [-]: MOVE      R0 R161      ; R0 := R161
858 [-]: MOVE      R0 R62       ; R0 := R62
859 [-]: MOVE      R0 R0        ; R0 := R0
860 [-]: MOVE      R0 R58       ; R0 := R58
861 [-]: CLOSURE   R163 119     ; R163 := closure(Function #120)
862 [-]: CLOSURE   R164 120     ; R164 := closure(Function #121)
863 [-]: MOVE      R0 R1        ; R0 := R1
864 [-]: CLOSURE   R165 121     ; R165 := closure(Function #122)
865 [-]: MOVE      R0 R1        ; R0 := R1
866 [-]: MOVE      R0 R163      ; R0 := R163
867 [-]: CLOSURE   R166 122     ; R166 := closure(Function #123)
868 [-]: MOVE      R0 R1        ; R0 := R1
869 [-]: MOVE      R0 R163      ; R0 := R163
870 [-]: CLOSURE   R167 123     ; R167 := closure(Function #124)
871 [-]: MOVE      R0 R0        ; R0 := R0
872 [-]: MOVE      R0 R1        ; R0 := R1
873 [-]: MOVE      R0 R163      ; R0 := R163
874 [-]: CLOSURE   R168 124     ; R168 := closure(Function #125)
875 [-]: MOVE      R0 R0        ; R0 := R0
876 [-]: MOVE      R0 R164      ; R0 := R164
877 [-]: MOVE      R0 R165      ; R0 := R165
878 [-]: MOVE      R0 R166      ; R0 := R166
879 [-]: MOVE      R0 R167      ; R0 := R167
880 [-]: MOVE      R0 R55       ; R0 := R55
881 [-]: MOVE      R0 R1        ; R0 := R1
882 [-]: CLOSURE   R169 125     ; R169 := closure(Function #126)
883 [-]: MOVE      R0 R56       ; R0 := R56
884 [-]: CLOSURE   R170 126     ; R170 := closure(Function #127)
885 [-]: MOVE      R0 R13       ; R0 := R13
886 [-]: MOVE      R0 R55       ; R0 := R55
887 [-]: CLOSURE   R171 127     ; R171 := closure(Function #128)
888 [-]: MOVE      R0 R59       ; R0 := R59
889 [-]: MOVE      R0 R18       ; R0 := R18
890 [-]: MOVE      R0 R82       ; R0 := R82
891 [-]: MOVE      R0 R13       ; R0 := R13
892 [-]: MOVE      R0 R116      ; R0 := R116
893 [-]: MOVE      R0 R24       ; R0 := R24
894 [-]: MOVE      R0 R16       ; R0 := R16
895 [-]: MOVE      R0 R3        ; R0 := R3
896 [-]: MOVE      R0 R5        ; R0 := R5
897 [-]: MOVE      R0 R55       ; R0 := R55
898 [-]: MOVE      R0 R7        ; R0 := R7
899 [-]: CLOSURE   R172 128     ; R172 := closure(Function #129)
900 [-]: MOVE      R0 R21       ; R0 := R21
901 [-]: MOVE      R0 R33       ; R0 := R33
902 [-]: MOVE      R0 R135      ; R0 := R135
903 [-]: MOVE      R0 R7        ; R0 := R7
904 [-]: MOVE      R0 R62       ; R0 := R62
905 [-]: MOVE      R0 R0        ; R0 := R0
906 [-]: MOVE      R0 R82       ; R0 := R82
907 [-]: MOVE      R0 R24       ; R0 := R24
908 [-]: MOVE      R0 R3        ; R0 := R3
909 [-]: MOVE      R0 R59       ; R0 := R59
910 [-]: MOVE      R0 R18       ; R0 := R18
911 [-]: MOVE      R0 R13       ; R0 := R13
912 [-]: MOVE      R0 R14       ; R0 := R14
913 [-]: MOVE      R0 R19       ; R0 := R19
914 [-]: MOVE      R0 R17       ; R0 := R17
915 [-]: MOVE      R0 R120      ; R0 := R120
916 [-]: MOVE      R0 R40       ; R0 := R40
917 [-]: MOVE      R0 R1        ; R0 := R1
918 [-]: MOVE      R0 R16       ; R0 := R16
919 [-]: MOVE      R0 R169      ; R0 := R169
920 [-]: MOVE      R0 R170      ; R0 := R170
921 [-]: MOVE      R0 R55       ; R0 := R55
922 [-]: MOVE      R0 R171      ; R0 := R171
923 [-]: CLOSURE   R173 129     ; R173 := closure(Function #130)
924 [-]: MOVE      R0 R29       ; R0 := R29
925 [-]: MOVE      R0 R70       ; R0 := R70
926 [-]: CLOSURE   R174 130     ; R174 := closure(Function #131)
927 [-]: MOVE      R0 R0        ; R0 := R0
928 [-]: MOVE      R0 R65       ; R0 := R65
929 [-]: MOVE      R0 R86       ; R0 := R86
930 [-]: MOVE      R0 R173      ; R0 := R173
931 [-]: CLOSURE   R175 131     ; R175 := closure(Function #132)
932 [-]: CLOSURE   R176 132     ; R176 := closure(Function #133)
933 [-]: SETGLOBAL R176 K193    ; SetupInitializeParams := R176
934 [-]: CLOSURE   R176 133     ; R176 := closure(Function #134)
935 [-]: MOVE      R0 R30       ; R0 := R30
936 [-]: MOVE      R0 R99       ; R0 := R99
937 [-]: SETGLOBAL R176 K194    ; ReturnedToShip := R176
938 [-]: CLOSURE   R176 134     ; R176 := closure(Function #135)
939 [-]: MOVE      R0 R24       ; R0 := R24
940 [-]: MOVE      R0 R27       ; R0 := R27
941 [-]: MOVE      R0 R32       ; R0 := R32
942 [-]: MOVE      R0 R106      ; R0 := R106
943 [-]: MOVE      R0 R49       ; R0 := R49
944 [-]: MOVE      R0 R75       ; R0 := R75
945 [-]: MOVE      R0 R99       ; R0 := R99
946 [-]: SETGLOBAL R176 K195    ; ProgressScreenOpened := R176
947 [-]: CLOSURE   R176 135     ; R176 := closure(Function #136)
948 [-]: MOVE      R0 R71       ; R0 := R71
949 [-]: CLOSURE   R177 136     ; R177 := closure(Function #137)
950 [-]: CLOSURE   R178 137     ; R178 := closure(Function #138)
951 [-]: MOVE      R0 R14       ; R0 := R14
952 [-]: MOVE      R0 R30       ; R0 := R30
953 [-]: MOVE      R0 R26       ; R0 := R26
954 [-]: MOVE      R0 R126      ; R0 := R126
955 [-]: MOVE      R0 R15       ; R0 := R15
956 [-]: MOVE      R0 R0        ; R0 := R0
957 [-]: MOVE      R0 R104      ; R0 := R104
958 [-]: MOVE      R0 R107      ; R0 := R107
959 [-]: MOVE      R0 R77       ; R0 := R77
960 [-]: MOVE      R0 R78       ; R0 := R78
961 [-]: MOVE      R0 R65       ; R0 := R65
962 [-]: MOVE      R0 R138      ; R0 := R138
963 [-]: MOVE      R0 R133      ; R0 := R133
964 [-]: MOVE      R0 R108      ; R0 := R108
965 [-]: MOVE      R0 R155      ; R0 := R155
966 [-]: MOVE      R0 R160      ; R0 := R160
967 [-]: MOVE      R0 R162      ; R0 := R162
968 [-]: MOVE      R0 R168      ; R0 := R168
969 [-]: MOVE      R0 R172      ; R0 := R172
970 [-]: MOVE      R0 R174      ; R0 := R174
971 [-]: MOVE      R0 R132      ; R0 := R132
972 [-]: MOVE      R0 R173      ; R0 := R173
973 [-]: MOVE      R0 R98       ; R0 := R98
974 [-]: MOVE      R0 R177      ; R0 := R177
975 [-]: MOVE      R0 R74       ; R0 := R74
976 [-]: MOVE      R0 R75       ; R0 := R75
977 [-]: CLOSURE   R179 138     ; R179 := closure(Function #139)
978 [-]: MOVE      R0 R3        ; R0 := R3
979 [-]: MOVE      R0 R30       ; R0 := R30
980 [-]: MOVE      R0 R96       ; R0 := R96
981 [-]: MOVE      R0 R40       ; R0 := R40
982 [-]: MOVE      R0 R176      ; R0 := R176
983 [-]: MOVE      R0 R70       ; R0 := R70
984 [-]: MOVE      R0 R59       ; R0 := R59
985 [-]: MOVE      R0 R15       ; R0 := R15
986 [-]: MOVE      R0 R49       ; R0 := R49
987 [-]: MOVE      R0 R106      ; R0 := R106
988 [-]: MOVE      R0 R24       ; R0 := R24
989 [-]: MOVE      R0 R105      ; R0 := R105
990 [-]: MOVE      R0 R23       ; R0 := R23
991 [-]: MOVE      R0 R76       ; R0 := R76
992 [-]: MOVE      R0 R36       ; R0 := R36
993 [-]: MOVE      R0 R81       ; R0 := R81
994 [-]: MOVE      R0 R0        ; R0 := R0
995 [-]: MOVE      R0 R104      ; R0 := R104
996 [-]: MOVE      R0 R65       ; R0 := R65
997 [-]: MOVE      R0 R27       ; R0 := R27
998 [-]: MOVE      R0 R175      ; R0 := R175
999 [-]: MOVE      R0 R68       ; R0 := R68
1000 [-]: MOVE      R0 R178      ; R0 := R178
1001 [-]: MOVE      R0 R99       ; R0 := R99
1002 [-]: MOVE      R0 R98       ; R0 := R98
1003 [-]: MOVE      R0 R88       ; R0 := R88
1004 [-]: MOVE      R0 R71       ; R0 := R71
1005 [-]: SETGLOBAL R179 K196    ; Initialize := R179
1006 [-]: CLOSURE   R179 139     ; R179 := closure(Function #140)
1007 [-]: CLOSURE   R180 140     ; R180 := closure(Function #141)
1008 [-]: SETGLOBAL R180 K197    ; AutoClose := R180
1009 [-]: CLOSURE   R180 141     ; R180 := closure(Function #142)
1010 [-]: CLOSURE   R181 142     ; R181 := closure(Function #143)
1011 [-]: CLOSURE   R182 143     ; R182 := closure(Function #144)
1012 [-]: MOVE      R0 R54       ; R0 := R54
1013 [-]: MOVE      R0 R53       ; R0 := R53
1014 [-]: MOVE      R0 R24       ; R0 := R24
1015 [-]: MOVE      R0 R76       ; R0 := R76
1016 [-]: MOVE      R0 R117      ; R0 := R117
1017 [-]: MOVE      R0 R51       ; R0 := R51
1018 [-]: MOVE      R0 R91       ; R0 := R91
1019 [-]: MOVE      R0 R31       ; R0 := R31
1020 [-]: MOVE      R0 R30       ; R0 := R30
1021 [-]: MOVE      R0 R27       ; R0 := R27
1022 [-]: MOVE      R0 R48       ; R0 := R48
1023 [-]: MOVE      R0 R15       ; R0 := R15
1024 [-]: MOVE      R0 R106      ; R0 := R106
1025 [-]: MOVE      R0 R3        ; R0 := R3
1026 [-]: MOVE      R0 R179      ; R0 := R179
1027 [-]: MOVE      R0 R97       ; R0 := R97
1028 [-]: MOVE      R0 R59       ; R0 := R59
1029 [-]: MOVE      R0 R14       ; R0 := R14
1030 [-]: MOVE      R0 R136      ; R0 := R136
1031 [-]: MOVE      R0 R0        ; R0 := R0
1032 [-]: MOVE      R0 R137      ; R0 := R137
1033 [-]: MOVE      R0 R181      ; R0 := R181
1034 [-]: MOVE      R0 R96       ; R0 := R96
1035 [-]: MOVE      R0 R99       ; R0 := R99
1036 [-]: MOVE      R0 R133      ; R0 := R133
1037 [-]: MOVE      R0 R5        ; R0 := R5
1038 [-]: MOVE      R0 R180      ; R0 := R180
1039 [-]: MOVE      R0 R139      ; R0 := R139
1040 [-]: MOVE      R0 R70       ; R0 := R70
1041 [-]: MOVE      R0 R50       ; R0 := R50
1042 [-]: SETGLOBAL R182 K198    ; Update := R182
1043 [-]: CLOSURE   R182 144     ; R182 := closure(Function #145)
1044 [-]: MOVE      R0 R18       ; R0 := R18
1045 [-]: CLOSURE   R183 145     ; R183 := closure(Function #146)
1046 [-]: MOVE      R0 R3        ; R0 := R3
1047 [-]: CLOSURE   R53 146      ; R53 := closure(Function #147)
1048 [-]: MOVE      R0 R54       ; R0 := R54
1049 [-]: MOVE      R0 R106      ; R0 := R106
1050 [-]: MOVE      R0 R182      ; R0 := R182
1051 [-]: MOVE      R0 R18       ; R0 := R18
1052 [-]: MOVE      R0 R62       ; R0 := R62
1053 [-]: MOVE      R0 R0        ; R0 := R0
1054 [-]: MOVE      R0 R9        ; R0 := R9
1055 [-]: MOVE      R0 R183      ; R0 := R183
1056 [-]: MOVE      R0 R29       ; R0 := R29
1057 [-]: MOVE      R0 R13       ; R0 := R13
1058 [-]: MOVE      R0 R17       ; R0 := R17
1059 [-]: MOVE      R0 R77       ; R0 := R77
1060 [-]: MOVE      R0 R15       ; R0 := R15
1061 [-]: MOVE      R0 R59       ; R0 := R59
1062 [-]: MOVE      R0 R7        ; R0 := R7
1063 [-]: MOVE      R0 R96       ; R0 := R96
1064 [-]: MOVE      R0 R3        ; R0 := R3
1065 [-]: MOVE      R0 R100      ; R0 := R100
1066 [-]: MOVE      R0 R133      ; R0 := R133
1067 [-]: MOVE      R0 R128      ; R0 := R128
1068 [-]: MOVE      R0 R172      ; R0 := R172
1069 [-]: MOVE      R0 R104      ; R0 := R104
1070 [-]: MOVE      R0 R179      ; R0 := R179
1071 [-]: CLOSURE   R184 147     ; R184 := closure(Function #148)
1072 [-]: MOVE      R0 R54       ; R0 := R54
1073 [-]: MOVE      R0 R53       ; R0 := R53
1074 [-]: SETGLOBAL R184 K199    ; DbUpdateComplete := R184
1075 [-]: CLOSURE   R184 148     ; R184 := closure(Function #149)
1076 [-]: SETGLOBAL R184 K200    ; MainMenu := R184
1077 [-]: CLOSURE   R184 149     ; R184 := closure(Function #150)
1078 [-]: MOVE      R0 R24       ; R0 := R24
1079 [-]: SETGLOBAL R184 K201    ; onRawInputEvent := R184
1080 [-]: CLOSURE   R184 150     ; R184 := closure(Function #151)
1081 [-]: SETGLOBAL R184 K202    ; PvpUpdateMapVoteCount := R184
1082 [-]: CLOSURE   R184 151     ; R184 := closure(Function #152)
1083 [-]: SETGLOBAL R184 K203    ; PvpSetNextMapsInfo := R184
1084 [-]: CLOSURE   R184 152     ; R184 := closure(Function #153)
1085 [-]: SETGLOBAL R184 K204    ; PvpShowWinningMap := R184
1086 [-]: CLOSURE   R184 153     ; R184 := closure(Function #154)
1087 [-]: MOVE      R0 R15       ; R0 := R15
1088 [-]: MOVE      R0 R91       ; R0 := R91
1089 [-]: SETGLOBAL R184 K205    ; PvpAllPlayersCommitted := R184
1090 [-]: CLOSURE   R184 154     ; R184 := closure(Function #155)
1091 [-]: MOVE      R0 R65       ; R0 := R65
1092 [-]: MOVE      R0 R35       ; R0 := R35
1093 [-]: SETGLOBAL R184 K206    ; onKeyDown_MENU_MOUSE_Z := R184
1094 [-]: CLOSURE   R184 155     ; R184 := closure(Function #156)
1095 [-]: SETGLOBAL R184 K207    ; ExitPvpAtEOM := R184
1096 [-]: CLOSURE   R184 156     ; R184 := closure(Function #157)
1097 [-]: MOVE      R0 R0        ; R0 := R0
1098 [-]: CLOSURE   R185 157     ; R185 := closure(Function #158)
1099 [-]: MOVE      R0 R92       ; R0 := R92
1100 [-]: SETGLOBAL R185 K208    ; OnDoneButton := R185
1101 [-]: CLOSURE   R185 158     ; R185 := closure(Function #159)
1102 [-]: MOVE      R0 R32       ; R0 := R32
1103 [-]: MOVE      R0 R0        ; R0 := R0
1104 [-]: MOVE      R0 R1        ; R0 := R1
1105 [-]: MOVE      R0 R3        ; R0 := R3
1106 [-]: MOVE      R0 R99       ; R0 := R99
1107 [-]: CLOSURE   R186 159     ; R186 := closure(Function #160)
1108 [-]: MOVE      R0 R185      ; R0 := R185
1109 [-]: SETGLOBAL R186 K209    ; PreviewDiorama := R186
1110 [-]: CLOSURE   R186 160     ; R186 := closure(Function #161)
1111 [-]: MOVE      R0 R185      ; R0 := R185
1112 [-]: SETGLOBAL R186 K210    ; EndDioramaPreview := R186
1113 [-]: CLOSURE   R186 161     ; R186 := closure(Function #162)
1114 [-]: MOVE      R0 R77       ; R0 := R77
1115 [-]: MOVE      R0 R3        ; R0 := R3
1116 [-]: MOVE      R0 R24       ; R0 := R24
1117 [-]: MOVE      R0 R184      ; R0 := R184
1118 [-]: MOVE      R0 R32       ; R0 := R32
1119 [-]: MOVE      R0 R185      ; R0 := R185
1120 [-]: MOVE      R0 R97       ; R0 := R97
1121 [-]: MOVE      R0 R92       ; R0 := R92
1122 [-]: SETGLOBAL R186 K211    ; onKeyDown_MENU_CANCEL := R186
1123 [-]: CLOSURE   R186 162     ; R186 := closure(Function #163)
1124 [-]: SETGLOBAL R186 K212    ; RewardItemSelected := R186
1125 [-]: CLOSURE   R186 163     ; R186 := closure(Function #164)
1126 [-]: SETGLOBAL R186 K213    ; RewardItemFocused := R186
1127 [-]: CLOSURE   R186 164     ; R186 := closure(Function #165)
1128 [-]: SETGLOBAL R186 K214    ; RewardItemUnfocused := R186
1129 [-]: CLOSURE   R186 165     ; R186 := closure(Function #166)
1130 [-]: MOVE      R0 R47       ; R0 := R47
1131 [-]: MOVE      R0 R34       ; R0 := R34
1132 [-]: CLOSURE   R187 166     ; R187 := closure(Function #167)
1133 [-]: CLOSURE   R188 167     ; R188 := closure(Function #168)
1134 [-]: MOVE      R0 R97       ; R0 := R97
1135 [-]: MOVE      R0 R83       ; R0 := R83
1136 [-]: MOVE      R0 R187      ; R0 := R187
1137 [-]: SETGLOBAL R188 K215    ; SelectPlayer := R188
1138 [-]: CLOSURE   R188 168     ; R188 := closure(Function #169)
1139 [-]: MOVE      R0 R186      ; R0 := R186
1140 [-]: MOVE      R0 R0        ; R0 := R0
1141 [-]: SETGLOBAL R188 K216    ; RollOverPlayer := R188
1142 [-]: CLOSURE   R188 169     ; R188 := closure(Function #170)
1143 [-]: MOVE      R0 R186      ; R0 := R186
1144 [-]: SETGLOBAL R188 K217    ; RollOutPlayer := R188
1145 [-]: CLOSURE   R188 170     ; R188 := closure(Function #171)
1146 [-]: MOVE      R0 R0        ; R0 := R0
1147 [-]: SETGLOBAL R188 K218    ; onKeyUp_MENU_LTRIGGER2 := R188
1148 [-]: CLOSURE   R188 171     ; R188 := closure(Function #172)
1149 [-]: MOVE      R0 R0        ; R0 := R0
1150 [-]: SETGLOBAL R188 K219    ; onKeyUp_MENU_RTRIGGER2 := R188
1151 [-]: CLOSURE   R188 172     ; R188 := closure(Function #173)
1152 [-]: MOVE      R0 R0        ; R0 := R0
1153 [-]: SETGLOBAL R188 K220    ; onKeyDown_MENU_LTRIGGER2 := R188
1154 [-]: CLOSURE   R188 173     ; R188 := closure(Function #174)
1155 [-]: MOVE      R0 R0        ; R0 := R0
1156 [-]: SETGLOBAL R188 K221    ; onKeyDown_MENU_RTRIGGER2 := R188
1157 [-]: CLOSURE   R188 174     ; R188 := closure(Function #175)
1158 [-]: SETGLOBAL R188 K222    ; CategoryFocused := R188
1159 [-]: CLOSURE   R188 175     ; R188 := closure(Function #176)
1160 [-]: SETGLOBAL R188 K223    ; CategoryUnfocused := R188
1161 [-]: CLOSURE   R188 176     ; R188 := closure(Function #177)
1162 [-]: MOVE      R0 R72       ; R0 := R72
1163 [-]: SETGLOBAL R188 K224    ; CategoryPressed := R188
1164 [-]: CLOSURE   R188 177     ; R188 := closure(Function #178)
1165 [-]: SETGLOBAL R188 K225    ; AffinityFocused := R188
1166 [-]: CLOSURE   R188 178     ; R188 := closure(Function #179)
1167 [-]: SETGLOBAL R188 K226    ; AffinityUnfocused := R188
1168 [-]: CLOSURE   R188 179     ; R188 := closure(Function #180)
1169 [-]: SETGLOBAL R188 K227    ; AffinitySelected := R188
1170 [-]: CLOSURE   R188 180     ; R188 := closure(Function #181)
1171 [-]: MOVE      R0 R36       ; R0 := R36
1172 [-]: MOVE      R0 R88       ; R0 := R88
1173 [-]: MOVE      R0 R99       ; R0 := R99
1174 [-]: SETGLOBAL R188 K228    ; ExpandPressed := R188
1175 [-]: CLOSURE   R188 181     ; R188 := closure(Function #182)
1176 [-]: MOVE      R0 R34       ; R0 := R34
1177 [-]: SETGLOBAL R188 K229    ; ExpandFocused := R188
1178 [-]: CLOSURE   R188 182     ; R188 := closure(Function #183)
1179 [-]: MOVE      R0 R34       ; R0 := R34
1180 [-]: SETGLOBAL R188 K230    ; ExpandUnfocused := R188
1181 [-]: CLOSURE   R188 183     ; R188 := closure(Function #184)
1182 [-]: SETGLOBAL R188 K231    ; SetCountdownMessage := R188
1183 [-]: CLOSURE   R188 184     ; R188 := closure(Function #185)
1184 [-]: MOVE      R0 R25       ; R0 := R25
1185 [-]: MOVE      R0 R3        ; R0 := R3
1186 [-]: MOVE      R0 R141      ; R0 := R141
1187 [-]: MOVE      R0 R172      ; R0 := R172
1188 [-]: CLOSURE   R189 185     ; R189 := closure(Function #186)
1189 [-]: MOVE      R0 R31       ; R0 := R31
1190 [-]: MOVE      R0 R99       ; R0 := R99
1191 [-]: SETGLOBAL R189 K232    ; HaveClosedAccoladeVoting := R189
1192 [-]: CLOSURE   R189 186     ; R189 := closure(Function #187)
1193 [-]: MOVE      R0 R188      ; R0 := R188
1194 [-]: SETGLOBAL R189 K233    ; IconCacheFlushed := R189
1195 [-]: CLOSURE   R189 187     ; R189 := closure(Function #188)
1196 [-]: MOVE      R0 R25       ; R0 := R25
1197 [-]: MOVE      R0 R188      ; R0 := R188
1198 [-]: SETGLOBAL R189 K234    ; CommonResourcesReady := R189
1199 [-]: CLOSURE   R189 188     ; R189 := closure(Function #189)
1200 [-]: SETGLOBAL R189 K235    ; OpenedFromPauseMenu := R189
1201 [-]: CLOSURE   R189 189     ; R189 := closure(Function #190)
1202 [-]: MOVE      R0 R91       ; R0 := R91
1203 [-]: SETGLOBAL R189 K236    ; OnLevelStreaming := R189
1204 [-]: CLOSURE   R189 190     ; R189 := closure(Function #191)
1205 [-]: SETGLOBAL R189 K237    ; OnGamepadTransition := R189
1206 [-]: CLOSURE   R189 191     ; R189 := closure(Function #192)
1207 [-]: MOVE      R0 R88       ; R0 := R88
1208 [-]: SETGLOBAL R189 K238    ; OnStyleChangedCallback := R189
1209 [-]: CLOSURE   R189 192     ; R189 := closure(Function #193)
1210 [-]: SETGLOBAL R189 K239    ; SupportsThemes := R189
1211 [-]: CLOSURE   R189 193     ; R189 := closure(Function #194)
1212 [-]: MOVE      R0 R87       ; R0 := R87
1213 [-]: MOVE      R0 R3        ; R0 := R3
1214 [-]: SETGLOBAL R189 K240    ; ShowEndOfMatch := R189
1215 [-]: CLOSURE   R189 194     ; R189 := closure(Function #195)
1216 [-]: SETGLOBAL R189 K241    ; ShowEndOfMatchTitle := R189
1217 [-]: CLOSURE   R189 195     ; R189 := closure(Function #196)
1218 [-]: MOVE      R0 R38       ; R0 := R38
1219 [-]: MOVE      R0 R0        ; R0 := R0
1220 [-]: SETGLOBAL R189 K242    ; UpdateMissionCompleteTitle := R189
1221 [-]: CLOSURE   R189 196     ; R189 := closure(Function #197)
1222 [-]: SETGLOBAL R189 K243    ; OnTextAnimFrameEnter := R189
1223 [-]: CLOSURE   R189 197     ; R189 := closure(Function #198)
1224 [-]: SETGLOBAL R189 K244    ; OnArrowEndsFrameEnter := R189
1225 [-]: CLOSURE   R189 198     ; R189 := closure(Function #199)
1226 [-]: SETGLOBAL R189 K245    ; OnExpandArrowFrameEnter := R189
1227 [-]: CLOSURE   R189 199     ; R189 := closure(Function #200)
1228 [-]: MOVE      R0 R96       ; R0 := R96
1229 [-]: MOVE      R0 R3        ; R0 := R3
1230 [-]: SETGLOBAL R189 K246    ; ForceHideEOM := R189
1231 [-]: CLOSURE   R189 200     ; R189 := closure(Function #201)
1232 [-]: SETGLOBAL R189 K247    ; IsEndOfMatch := R189
1233 [-]: CLOSURE   R189 201     ; R189 := closure(Function #202)
1234 [-]: MOVE      R0 R91       ; R0 := R91
1235 [-]: SETGLOBAL R189 K248    ; OnUserChangedFunction := R189
1236 [-]: CLOSURE   R189 202     ; R189 := closure(Function #203)
1237 [-]: MOVE      R0 R30       ; R0 := R30
1238 [-]: SETGLOBAL R189 K249    ; IsForceHidden := R189
1239 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 288
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 20
  3 [-]: JMP       20           ; PC := 20
  4 [-]: GETGLOBAL R0 K0        ; R0 := _T
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ACTUAL_EOM"]
  8 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 11 [-]: GETGLOBAL R1 K4        ; R1 := 0x25d99d89
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 16 [-]: GETGLOBAL R1 K5        ; R1 := 0x0dbe8d3a
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 0         ; if not R0 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R0 K4        ; R0 := 0x25d99d89
 22 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xc0300d9d]
 23 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 24 [-]: LEN       R1 R0        ; R1 := # R0
 25 [-]: LT        0 K7 R1      ; if 0.000000 >= R1 then PC := 46
 26 [-]: JMP       46           ; PC := 46
 27 [-]: GETTABLE  R1 R0 K8     ; R1 := R0[1.000000]
 28 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mSurveyLocation"]
 29 [-]: EQ        0 R1 K10     ; if R1 ~= "EOM" then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: GETGLOBAL R1 K12       ; R1 := 0xae91e43b
 32 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x1fd6abd0]
 33 [-]: GETGLOBAL R3 K5        ; R3 := 0x0dbe8d3a
 34 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 35 [-]: SETGLOBAL R1 K11       ; mChildMovie := R1
 36 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
 37 [-]: GETGLOBAL R2 K11       ; R2 := mChildMovie
 38 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 39 [-]: TEST      R1 1         ; if R1 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETGLOBAL R1 K11       ; R1 := mChildMovie
 42 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0xe4162eed]
 43 [-]: LOADK     R3 K15       ; R3 := "OnEndOfMatch"
 44 [-]: LOADK     R4 K16       ; R4 := ""
 45 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 46 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 306
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: CONST     R0 0         ; R0 := 0.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K1        ; R2 := mPlayerMissionInfo
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETGLOBAL R1 K1        ; R1 := mPlayerMissionInfo
  8 [-]: GETTABLE  R0 R1 K2     ; R0 := R1["mMissionCompleteCreditBonus"]
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0x3d106989
 10 [-]: LOADK     R2 K4        ; R2 := "GetMissionCompleteCreditBonus: "
 11 [-]: GETGLOBAL R3 K1        ; R3 := mPlayerMissionInfo
 12 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mMissionCompleteCreditBonus"]
 13 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 318
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMission
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETGLOBAL R0 K0        ; R0 := mMission
  5 [-]: RETURN    R0 2         ; return R0
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xcdc34211]
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: TEST      R0 0         ; if not R0 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0xbe190284
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 34
 15 [-]: JMP       34           ; PC := 34
 16 [-]: GETGLOBAL R0 K4        ; R0 := 0xbe190284
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xef893aec]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x8f89d633]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: SETGLOBAL R0 K0        ; mMission := R0
 22 [-]: JMP       34           ; PC := 34
 23 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 24 [-]: GETGLOBAL R1 K7        ; R1 := 0x25d99d89
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: TEST      R0 1         ; if R0 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R0 K7        ; R0 := 0x25d99d89
 29 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xb1c6f9c6]
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x8f89d633]
 32 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 33 [-]: SETGLOBAL R0 K0        ; mMission := R0
 34 [-]: GETGLOBAL R0 K0        ; R0 := mMission
 35 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: GETGLOBAL R0 K0        ; R0 := mMission
 38 [-]: RETURN    R0 2         ; return R0
 39 [-]: GETGLOBAL R0 K9        ; R0 := 0x6c97a788
 40 [-]: GETTABLE  R0 R0 K10    ; R0 := R0[0x6e0e9f85]
 41 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 42 [-]: RETURN    R0 0         ; return R0,...
 43 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 339
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xcfc01047
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  4 [-]: JMP       23           ; PC := 23
  5 [-]: LEN       R7 R5        ; R7 := # R5
  6 [-]: LT        0 K1 R7      ; if 0.000000 >= R7 then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: LEN       R7 R1        ; R7 := # R1
  9 [-]: LT        0 K1 R7      ; if 0.000000 >= R7 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: MOVE      R7 R1        ; R7 := R1
 12 [-]: LOADK     R8 K2        ; R8 := "\r"
 13 [-]: CONCAT    R1 R7 R8     ; R1 := R7 .. R8
 14 [-]: LT        0 K3 R6      ; if 1.000000 >= R6 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: MOVE      R7 R5        ; R7 := R5
 17 [-]: LOADK     R8 K4        ; R8 := " x"
 18 [-]: MOVE      R9 R6        ; R9 := R6
 19 [-]: CONCAT    R5 R7 R9     ; R5 := R7 .. R8 .. R9
 20 [-]: MOVE      R7 R1        ; R7 := R1
 21 [-]: MOVE      R8 R5        ; R8 := R5
 22 [-]: CONCAT    R1 R7 R8     ; R1 := R7 .. R8
 23 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 5; R4 := R5 end
 24 [-]: JMP       5            ; PC := 5
 25 [-]: RETURN    R1 2         ; return R1
 26 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 354
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K1        ; R1 := ""
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: LOADK     R1 K1        ; R1 := ""
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  9 [-]: TEST      R3 1         ; if R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: MOVE      R1 R2        ; R1 := R2
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 18 [-]: TEST      R3 1         ; if R3 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: MOVE      R1 R2        ; R1 := R2
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 366
; #Upvalues:       3
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: CONST     R0 0         ; R0 := 0.000000
  4 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: LT        0 K1 R1      ; if 0.000000 >= R1 then PC := 27
  7 [-]: JMP       27           ; PC := 27
  8 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 27
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0x06d055f9]
 12 [-]: MOVE      R6 R4        ; R6 := R4
 13 [-]: GETUPVAL  R7 U1        ; R7 := U1
 14 [-]: GETUPVAL  R8 U2        ; R8 := U2
 15 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 16 [-]: GETTABLE  R6 R5 R2     ; R6 := R5[R2]
 17 [-]: TEST      R6 1         ; if R6 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 20 [-]: SETTABLE  R5 R2 R6     ; R5[R2] := R6
 21 [-]: GETTABLE  R7 R6 R3     ; R7 := R6[R3]
 22 [-]: TEST      R7 1         ; if R7 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: CONST     R7 0         ; R7 := 0.000000
 25 [-]: ADD       R7 R7 K3     ; R7 := R7 + 1.000000
 26 [-]: SETTABLE  R6 R3 R7     ; R6[R3] := R7
 27 [-]: ADD       R7 R0 R1     ; R7 := R0 + R1
 28 [-]: RETURN    R7 2         ; return R7
 29 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 379
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x830eea67]
  7 [-]: GETGLOBAL R6 K2        ; R6 := 0x6c97a788
  8 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["VISIBILITY_CENTER"]
  9 [-]: MOVE      R7 R1        ; R7 := R1
 10 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 11 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x830eea67]
 12 [-]: GETGLOBAL R6 K2        ; R6 := 0x6c97a788
 13 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["VISIBILITY_SIZE"]
 14 [-]: MOVE      R7 R2        ; R7 := R2
 15 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 16 [-]: TEST      R3 1         ; if R3 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x830eea67]
 19 [-]: GETGLOBAL R6 K2        ; R6 := 0x6c97a788
 20 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["VISIBILITY_FADE_SIZE"]
 21 [-]: LOADK     R7 K6        ; R7 := 0.010000
 22 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 23 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 389
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["red"]
  3 [-]: DIV       R2 R2 K2     ; R2 := R2 / 255.000000
  4 [-]: SETTABLE  R1 K0 R2     ; R1["r"] := R2
  5 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["green"]
  6 [-]: DIV       R2 R2 K2     ; R2 := R2 / 255.000000
  7 [-]: SETTABLE  R1 K3 R2     ; R1["g"] := R2
  8 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["blue"]
  9 [-]: DIV       R2 R2 K2     ; R2 := R2 / 255.000000
 10 [-]: SETTABLE  R1 K5 R2     ; R1["b"] := R2
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 393
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["QUICK_PREVIEW"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 8
  8 [-]: LOADKB    R0 1 0       ; R0 := true
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 397
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 2       ; R0 := R0()
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 401
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 2       ; R0 := R0()
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 8
  8 [-]: LOADKB    R0 1 0       ; R0 := true
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 405
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 2       ; R0 := R0()
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 409
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x91a24e4b]
  3 [-]: LOADK     R2 K2        ; R2 := "ExpandableArea.Progression.Affinity.MissionTime.Label"
  4 [-]: CONST     R3 33        ; R3 := 33.000000
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CONST     R2 13        ; R2 := 13.000000
  8 [-]: CONST     R3 10        ; R3 := 10.000000
  9 [-]: GETUPVAL  R4 U1        ; R4 := U1
 10 [-]: CALL      R4 1 2       ; R4 := R4()
 11 [-]: TEST      R4 0         ; if not R4 then PC := 25
 12 [-]: JMP       25           ; PC := 25
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 14 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x091c120e]
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 17 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0x91a24e4b]
 18 [-]: LOADK     R7 K4        ; R7 := "ExpandableArea.Progression.Affinity"
 19 [-]: CONST     R8 2         ; R8 := 2.000000
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: MUL       R5 R5 K5     ; R5 := R5 * 2.000000
 22 [-]: SUB       R1 R4 R5     ; R1 := R4 - R5
 23 [-]: CONST     R2 0         ; R2 := 0.000000
 24 [-]: CONST     R3 0         ; R3 := 0.000000
 25 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 26 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 27 [-]: LOADK     R6 K7        ; R6 := "ExpandableArea.Progression.Affinity.MissionTime"
 28 [-]: CONST     R7 0         ; R7 := 0.000000
 29 [-]: SUB       R8 R1 R3     ; R8 := R1 - R3
 30 [-]: DIV       R8 R8 K5     ; R8 := R8 / 2.000000
 31 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 32 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 33 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 34 [-]: LOADK     R6 K8        ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Mid"
 35 [-]: CONST     R7 12        ; R7 := 12.000000
 36 [-]: MOVE      R8 R0        ; R8 := R0
 37 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 38 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 39 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 40 [-]: LOADK     R6 K9        ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.LeftSwoop"
 41 [-]: CONST     R7 0         ; R7 := 0.000000
 42 [-]: UNM       R8 R0        ; R8 :=  R0
 43 [-]: DIV       R8 R8 K5     ; R8 := R8 / 2.000000
 44 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 45 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 46 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 47 [-]: LOADK     R6 K10       ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.RightSwoop"
 48 [-]: CONST     R7 0         ; R7 := 0.000000
 49 [-]: DIV       R8 R0 K5     ; R8 := R0 / 2.000000
 50 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 51 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 52 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 53 [-]: LOADK     R6 K11       ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Left"
 54 [-]: CONST     R7 0         ; R7 := 0.000000
 55 [-]: UNM       R8 R0        ; R8 :=  R0
 56 [-]: DIV       R8 R8 K5     ; R8 := R8 / 2.000000
 57 [-]: SUB       R8 R8 K12    ; R8 := R8 - 16.000000
 58 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 59 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 60 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 61 [-]: LOADK     R6 K13       ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Right"
 62 [-]: CONST     R7 0         ; R7 := 0.000000
 63 [-]: DIV       R8 R0 K5     ; R8 := R0 / 2.000000
 64 [-]: ADD       R8 R8 K12    ; R8 := R8 + 16.000000
 65 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 66 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 67 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 68 [-]: LOADK     R6 K11       ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Left"
 69 [-]: CONST     R7 12        ; R7 := 12.000000
 70 [-]: SUB       R8 R1 R0     ; R8 := R1 - R0
 71 [-]: DIV       R8 R8 K5     ; R8 := R8 / 2.000000
 72 [-]: SUB       R8 R8 R2     ; R8 := R8 - R2
 73 [-]: DIV       R9 R3 K5     ; R9 := R3 / 2.000000
 74 [-]: SUB       R8 R8 R9     ; R8 := R8 - R9
 75 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 76 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 77 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 78 [-]: LOADK     R6 K13       ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Right"
 79 [-]: CONST     R7 12        ; R7 := 12.000000
 80 [-]: SUB       R8 R1 R0     ; R8 := R1 - R0
 81 [-]: DIV       R8 R8 K5     ; R8 := R8 / 2.000000
 82 [-]: SUB       R8 R8 R2     ; R8 := R8 - R2
 83 [-]: DIV       R9 R3 K5     ; R9 := R3 / 2.000000
 84 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 85 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 86 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 429
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x817b1503]
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: LOADK     R4 K2        ; R4 := "Compact"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x42b04007]
  9 [-]: LOADK     R4 K4        ; R4 := "<TIMER>"
 10 [-]: LOADKB    R5 1 0       ; R5 := true
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 14 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x5f56eeab]
 16 [-]: LOADK     R5 K6        ; R5 := "ExpandableArea.Progression.Affinity.MissionTime.Label"
 17 [-]: CONST     R6 29        ; R6 := 29.000000
 18 [-]: MOVE      R7 R2        ; R7 := R2
 19 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: CALL      R3 1 1       ; R3()
 22 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 436
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  70

  1 [-]: GETGLOBAL R1 K0        ; R1 := mCurrentScreenType
  2 [-]: GETGLOBAL R2 K1        ; R2 := ScreenType
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["KAHL"]
  4 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0x9ba7909f
  8 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xbcfb64ab]
  9 [-]: GETGLOBAL R4 K6        ; R4 := 0x0032441c
 10 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["UIMovie_DetailedPurchaseDialog"]
 11 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: TEST      R1 1         ; if R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0x44537adf]
 18 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 19 [-]: CALL      R1 2 3       ; R1,R2 := R1(R2)
 20 [-]: GETGLOBAL R3 K9        ; R3 := 0xae91e43b
 21 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x091c120e]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: MUL       R3 R3 K11    ; R3 := R3 * 0.100000
 24 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 25 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0x2cc9d281]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: MUL       R4 R4 K11    ; R4 := R4 * 0.100000
 28 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 29 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x91a24e4b]
 30 [-]: LOADK     R7 K14       ; R7 := "ExpandableArea.Progression.Affinity.Grid"
 31 [-]: CONST     R8 3         ; R8 := 3.000000
 32 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 33 [-]: GETUPVAL  R6 U0        ; R6 := U0
 34 [-]: GETTABLE  R6 R6 K15    ; R6 := R6[0x06d055f9]
 35 [-]: GETUPVAL  R7 U1        ; R7 := U1
 36 [-]: CALL      R7 1 2       ; R7 := R7()
 37 [-]: CONST     R8 512       ; R8 := 512.000000
 38 [-]: MOVE      R9 R2        ; R9 := R2
 39 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 40 [-]: SUB       R6 R6 R5     ; R6 := R6 - R5
 41 [-]: SUB       R6 R6 R4     ; R6 := R6 - R4
 42 [-]: ADD       R6 R6 K16    ; R6 := R6 + 2.000000
 43 [-]: GETGLOBAL R7 K17       ; R7 := mAffinityGrid
 44 [-]: EQ        1 R7 K18     ; if R7 == nil then PC := 129
 45 [-]: JMP       129          ; PC := 129
 46 [-]: GETGLOBAL R7 K19       ; R7 := mRewardGrid
 47 [-]: EQ        1 R7 K18     ; if R7 == nil then PC := 129
 48 [-]: JMP       129          ; PC := 129
 49 [-]: GETGLOBAL R7 K20       ; R7 := 0x5bced4c4
 50 [-]: GETTABLE  R7 R7 K21    ; R7 := R7[0x99675e23]
 51 [-]: GETGLOBAL R8 K17       ; R8 := mAffinityGrid
 52 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["mRowSeparation"]
 53 [-]: DIV       R8 R6 R8     ; R8 := R6 / R8
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: GETGLOBAL R8 K20       ; R8 := 0x5bced4c4
 56 [-]: GETTABLE  R8 R8 K21    ; R8 := R8[0x99675e23]
 57 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
 58 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["mRowSeparation"]
 59 [-]: DIV       R9 R6 R9     ; R9 := R6 / R9
 60 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 61 [-]: GETGLOBAL R9 K17       ; R9 := mAffinityGrid
 62 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["mScrollBar"]
 63 [-]: SELF      R9 R9 K24    ; R10 := R9; R9 := R9[0x425b8f0d]
 64 [-]: ADD       R11 R6 K25   ; R11 := R6 + 6.000000
 65 [-]: CALL      R9 3 1       ; R9(R10,R11)
 66 [-]: GETGLOBAL R9 K17       ; R9 := mAffinityGrid
 67 [-]: SELF      R9 R9 K26    ; R10 := R9; R9 := R9[0x4c4f8717]
 68 [-]: CONST     R11 1        ; R11 := 1.000000
 69 [-]: LOADKB    R12 1 0      ; R12 := true
 70 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 71 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
 72 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["mScrollBar"]
 73 [-]: SELF      R9 R9 K24    ; R10 := R9; R9 := R9[0x425b8f0d]
 74 [-]: ADD       R11 R6 K25   ; R11 := R6 + 6.000000
 75 [-]: CALL      R9 3 1       ; R9(R10,R11)
 76 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
 77 [-]: SELF      R9 R9 K26    ; R10 := R9; R9 := R9[0x4c4f8717]
 78 [-]: CONST     R11 1        ; R11 := 1.000000
 79 [-]: LOADKB    R12 1 0      ; R12 := true
 80 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 81 [-]: GETGLOBAL R9 K17       ; R9 := mAffinityGrid
 82 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["mRows"]
 83 [-]: EQ        0 R9 R7      ; if R9 ~= R7 then PC := 89
 84 [-]: JMP       89           ; PC := 89
 85 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
 86 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["mRows"]
 87 [-]: EQ        1 R9 R8      ; if R9 == R8 then PC := 95
 88 [-]: JMP       95           ; PC := 95
 89 [-]: GETGLOBAL R9 K17       ; R9 := mAffinityGrid
 90 [-]: SETTABLE  R9 K27 R7    ; R9["mRows"] := R7
 91 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
 92 [-]: SETTABLE  R9 K27 R8    ; R9["mRows"] := R8
 93 [-]: LOADKB    R0 0 0       ; R0 := false
 94 [-]: JMP       111          ; PC := 111
 95 [-]: GETGLOBAL R9 K17       ; R9 := mAffinityGrid
 96 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0x71e9ac81]
 97 [-]: LOADNIL   R11 R11      ; R11 := nil
 98 [-]: LOADKB    R12 0 0      ; R12 := false
 99 [-]: LOADKB    R13 1 0      ; R13 := true
100 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
101 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
102 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0x71e9ac81]
103 [-]: LOADNIL   R11 R11      ; R11 := nil
104 [-]: LOADKB    R12 0 0      ; R12 := false
105 [-]: LOADKB    R13 1 0      ; R13 := true
106 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
107 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
108 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9[0xea061e98]
109 [-]: CLOSURE   R11 0        ; R11 := closure(Function #15.1)
110 [-]: CALL      R9 3 1       ; R9(R10,R11)
111 [-]: GETGLOBAL R9 K19       ; R9 := mRewardGrid
112 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["mRowSeparation"]
113 [-]: GETGLOBAL R10 K19      ; R10 := mRewardGrid
114 [-]: GETTABLE  R10 R10 K27  ; R10 := R10["mRows"]
115 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
116 [-]: GETGLOBAL R10 K19      ; R10 := mRewardGrid
117 [-]: GETTABLE  R10 R10 K30  ; R10 := R10["ElementDimBuffer"]
118 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
119 [-]: GETGLOBAL R10 K19      ; R10 := mRewardGrid
120 [-]: SUB       R11 R9 R6    ; R11 := R9 - R6
121 [-]: SUB       R11 R11 K32  ; R11 := R11 - 8.000000
122 [-]: GETGLOBAL R12 K19      ; R12 := mRewardGrid
123 [-]: GETTABLE  R12 R12 K22  ; R12 := R12["mRowSeparation"]
124 [-]: GETGLOBAL R13 K19      ; R13 := mRewardGrid
125 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["ElementDimBuffer"]
126 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
127 [-]: DIV       R11 R11 R12  ; R11 := R11 / R12
128 [-]: SETTABLE  R10 K31 R11  ; R10["mExtraRowScroll"] := R11
129 [-]: GETUPVAL  R10 U0       ; R10 := U0
130 [-]: GETTABLE  R10 R10 K33  ; R10 := R10[0xe5e5a417]
131 [-]: GETGLOBAL R11 K9       ; R11 := 0xae91e43b
132 [-]: DIV       R12 R6 K16   ; R12 := R6 / 2.000000
133 [-]: ADD       R12 R5 R12   ; R12 := R5 + R12
134 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
135 [-]: GETUPVAL  R11 U0       ; R11 := U0
136 [-]: GETTABLE  R11 R11 K34  ; R11 := R11[0xd718f59b]
137 [-]: GETGLOBAL R12 K9       ; R12 := 0xae91e43b
138 [-]: MOVE      R13 R6       ; R13 := R6
139 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
140 [-]: GETUPVAL  R12 U2       ; R12 := U2
141 [-]: GETGLOBAL R13 K35      ; R13 := 0xfee8dbfd
142 [-]: MOVE      R14 R10      ; R14 := R10
143 [-]: MOVE      R15 R11      ; R15 := R11
144 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
145 [-]: GETUPVAL  R12 U2       ; R12 := U2
146 [-]: GETGLOBAL R13 K36      ; R13 := 0xbacf3724
147 [-]: MOVE      R14 R10      ; R14 := R10
148 [-]: MOVE      R15 R11      ; R15 := R11
149 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
150 [-]: GETUPVAL  R12 U2       ; R12 := U2
151 [-]: GETGLOBAL R13 K37      ; R13 := 0x2bbc1c3b
152 [-]: MOVE      R14 R10      ; R14 := R10
153 [-]: MOVE      R15 R11      ; R15 := R11
154 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
155 [-]: GETGLOBAL R12 K38      ; R12 := 0xcfc01047
156 [-]: GETGLOBAL R13 K6       ; R13 := 0x0032441c
157 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["UIMaterial_Mods"]
158 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
159 [-]: JMP       171          ; PC := 171
160 [-]: GETGLOBAL R17 K38      ; R17 := 0xcfc01047
161 [-]: MOVE      R18 R16      ; R18 := R16
162 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
163 [-]: JMP       169          ; PC := 169
164 [-]: GETUPVAL  R22 U2       ; R22 := U2
165 [-]: MOVE      R23 R21      ; R23 := R21
166 [-]: MOVE      R24 R10      ; R24 := R10
167 [-]: MOVE      R25 R11      ; R25 := R11
168 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
169 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 164; R19 := R20 end
170 [-]: JMP       164          ; PC := 164
171 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 160; R14 := R15 end
172 [-]: JMP       160          ; PC := 160
173 [-]: GETGLOBAL R22 K38      ; R22 := 0xcfc01047
174 [-]: GETGLOBAL R23 K6       ; R23 := 0x0032441c
175 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["UIMaterial_CosmeticEnhancersStore"]
176 [-]: CALL      R22 2 4      ; R22,R23,R24 := R22(R23)
177 [-]: JMP       183          ; PC := 183
178 [-]: GETUPVAL  R27 U2       ; R27 := U2
179 [-]: MOVE      R28 R26      ; R28 := R26
180 [-]: MOVE      R29 R10      ; R29 := R10
181 [-]: MOVE      R30 R11      ; R30 := R11
182 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
183 [-]: TFORLOOP  R22 2        ; R25,R26 :=  R22(R23,R24); if R25 ~= nil then begin PC = 178; R24 := R25 end
184 [-]: JMP       178          ; PC := 178
185 [-]: GETGLOBAL R27 K41      ; R27 := 0xc8802016
186 [-]: GETGLOBAL R28 K6       ; R28 := 0x0032441c
187 [-]: GETTABLE  R28 R28 K42  ; R28 := R28["UIMaterial_RailjackModStore"]
188 [-]: CALL      R27 2 4      ; R27,R28,R29 := R27(R28)
189 [-]: JMP       195          ; PC := 195
190 [-]: GETUPVAL  R32 U2       ; R32 := U2
191 [-]: MOVE      R33 R31      ; R33 := R31
192 [-]: MOVE      R34 R10      ; R34 := R10
193 [-]: MOVE      R35 R11      ; R35 := R11
194 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
195 [-]: TFORLOOP  R27 2        ; R30,R31 :=  R27(R28,R29); if R30 ~= nil then begin PC = 190; R29 := R30 end
196 [-]: JMP       190          ; PC := 190
197 [-]: GETGLOBAL R32 K38      ; R32 := 0xcfc01047
198 [-]: GETGLOBAL R33 K6       ; R33 := 0x0032441c
199 [-]: GETTABLE  R33 R33 K43  ; R33 := R33["UIMaterial_FocusLensStore"]
200 [-]: CALL      R32 2 4      ; R32,R33,R34 := R32(R33)
201 [-]: JMP       207          ; PC := 207
202 [-]: GETUPVAL  R37 U2       ; R37 := U2
203 [-]: MOVE      R38 R36      ; R38 := R36
204 [-]: MOVE      R39 R10      ; R39 := R10
205 [-]: MOVE      R40 R11      ; R40 := R11
206 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
207 [-]: TFORLOOP  R32 2        ; R35,R36 :=  R32(R33,R34); if R35 ~= nil then begin PC = 202; R34 := R35 end
208 [-]: JMP       202          ; PC := 202
209 [-]: GETGLOBAL R37 K38      ; R37 := 0xcfc01047
210 [-]: GETGLOBAL R38 K6       ; R38 := 0x0032441c
211 [-]: GETTABLE  R38 R38 K44  ; R38 := R38["UIMaterial_ArchonShardsStore"]
212 [-]: CALL      R37 2 4      ; R37,R38,R39 := R37(R38)
213 [-]: JMP       219          ; PC := 219
214 [-]: GETUPVAL  R42 U2       ; R42 := U2
215 [-]: MOVE      R43 R41      ; R43 := R41
216 [-]: MOVE      R44 R10      ; R44 := R10
217 [-]: MOVE      R45 R11      ; R45 := R11
218 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
219 [-]: TFORLOOP  R37 2        ; R40,R41 :=  R37(R38,R39); if R40 ~= nil then begin PC = 214; R39 := R40 end
220 [-]: JMP       214          ; PC := 214
221 [-]: GETUPVAL  R42 U2       ; R42 := U2
222 [-]: GETGLOBAL R43 K6       ; R43 := 0x0032441c
223 [-]: GETTABLE  R43 R43 K45  ; R43 := R43["UIMaterial_SalvageMaterials"]
224 [-]: GETTABLE  R43 R43 K16  ; R43 := R43[2.000000]
225 [-]: MOVE      R44 R10      ; R44 := R10
226 [-]: MOVE      R45 R11      ; R45 := R11
227 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
228 [-]: GETUPVAL  R42 U2       ; R42 := U2
229 [-]: GETGLOBAL R43 K6       ; R43 := 0x0032441c
230 [-]: GETTABLE  R43 R43 K46  ; R43 := R43["UIMaterial_PigmentVisibilityRange"]
231 [-]: MOVE      R44 R10      ; R44 := R10
232 [-]: MOVE      R45 R11      ; R45 := R11
233 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
234 [-]: GETGLOBAL R42 K9       ; R42 := 0xae91e43b
235 [-]: SELF      R42 R42 K13  ; R43 := R42; R42 := R42[0x91a24e4b]
236 [-]: LOADK     R44 K47      ; R44 := "ExpandableArea.PlayerInfo.PlayerStats"
237 [-]: CONST     R45 3        ; R45 := 3.000000
238 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
239 [-]: ADD       R10 R42 K48  ; R10 := R42 + 90.000000
240 [-]: SUB       R42 K49 R10  ; R42 := 900.000000 - R10
241 [-]: SUB       R42 R42 R4   ; R42 := R42 - R4
242 [-]: SUB       R11 R42 K16  ; R11 := R42 - 2.000000
243 [-]: GETGLOBAL R42 K50      ; R42 := mStatsGrid
244 [-]: EQ        1 R42 K18    ; if R42 == nil then PC := 270
245 [-]: JMP       270          ; PC := 270
246 [-]: GETGLOBAL R42 K50      ; R42 := mStatsGrid
247 [-]: GETGLOBAL R43 K20      ; R43 := 0x5bced4c4
248 [-]: GETTABLE  R43 R43 K21  ; R43 := R43[0x99675e23]
249 [-]: GETGLOBAL R44 K50      ; R44 := mStatsGrid
250 [-]: GETTABLE  R44 R44 K52  ; R44 := R44["mForcedVerticalSeparation"]
251 [-]: DIV       R44 R11 R44  ; R44 := R11 / R44
252 [-]: CALL      R43 2 2      ; R43 := R43(R44)
253 [-]: SETTABLE  R42 K51 R43  ; R42["mVisibleElements"] := R43
254 [-]: GETGLOBAL R42 K50      ; R42 := mStatsGrid
255 [-]: GETTABLE  R42 R42 K23  ; R42 := R42["mScrollBar"]
256 [-]: SELF      R42 R42 K24  ; R43 := R42; R42 := R42[0x425b8f0d]
257 [-]: ADD       R44 R11 K53  ; R44 := R11 + 15.000000
258 [-]: CALL      R42 3 1      ; R42(R43,R44)
259 [-]: GETGLOBAL R42 K50      ; R42 := mStatsGrid
260 [-]: SELF      R42 R42 K26  ; R43 := R42; R42 := R42[0x4c4f8717]
261 [-]: CONST     R44 1        ; R44 := 1.000000
262 [-]: LOADKB    R45 1 0      ; R45 := true
263 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
264 [-]: GETGLOBAL R42 K50      ; R42 := mStatsGrid
265 [-]: SELF      R42 R42 K28  ; R43 := R42; R42 := R42[0x71e9ac81]
266 [-]: LOADNIL   R44 R44      ; R44 := nil
267 [-]: LOADKB    R45 0 0      ; R45 := false
268 [-]: LOADKB    R46 1 0      ; R46 := true
269 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
270 [-]: GETUPVAL  R42 U0       ; R42 := U0
271 [-]: GETTABLE  R42 R42 K33  ; R42 := R42[0xe5e5a417]
272 [-]: GETGLOBAL R43 K9       ; R43 := 0xae91e43b
273 [-]: DIV       R44 R11 K16  ; R44 := R11 / 2.000000
274 [-]: ADD       R44 R10 R44  ; R44 := R10 + R44
275 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
276 [-]: MOVE      R10 R42      ; R10 := R42
277 [-]: GETUPVAL  R42 U0       ; R42 := U0
278 [-]: GETTABLE  R42 R42 K34  ; R42 := R42[0xd718f59b]
279 [-]: GETGLOBAL R43 K9       ; R43 := 0xae91e43b
280 [-]: MOVE      R44 R11      ; R44 := R11
281 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
282 [-]: MOVE      R11 R42      ; R11 := R42
283 [-]: GETUPVAL  R42 U2       ; R42 := U2
284 [-]: GETGLOBAL R43 K54      ; R43 := 0x1606c7e7
285 [-]: MOVE      R44 R10      ; R44 := R10
286 [-]: MOVE      R45 R11      ; R45 := R11
287 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
288 [-]: GETUPVAL  R42 U2       ; R42 := U2
289 [-]: GETGLOBAL R43 K55      ; R43 := 0xc13a88d8
290 [-]: MOVE      R44 R10      ; R44 := R10
291 [-]: MOVE      R45 R11      ; R45 := R11
292 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
293 [-]: TEST      R0 0         ; if not R0 then PC := 296
294 [-]: JMP       296          ; PC := 296
295 [-]: RETURN    R0 1         ; return 
296 [-]: GETGLOBAL R42 K3       ; R42 := 0x7b998233
297 [-]: GETGLOBAL R43 K56      ; R43 := mAnchorMgr
298 [-]: CALL      R42 2 2      ; R42 := R42(R43)
299 [-]: TEST      R42 1        ; if R42 then PC := 310
300 [-]: JMP       310          ; PC := 310
301 [-]: GETGLOBAL R42 K56      ; R42 := mAnchorMgr
302 [-]: SELF      R42 R42 K57  ; R43 := R42; R42 := R42[0xfaa69527]
303 [-]: GETGLOBAL R44 K9       ; R44 := 0xae91e43b
304 [-]: SELF      R44 R44 K58  ; R45 := R44; R44 := R44[0x6b837788]
305 [-]: CALL      R44 2 2      ; R44 := R44(R45)
306 [-]: GETGLOBAL R45 K9       ; R45 := 0xae91e43b
307 [-]: SELF      R45 R45 K59  ; R46 := R45; R45 := R45[0xaf9fda9f]
308 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
309 [-]: CALL      R42 0 1      ; R42(R43,...)
310 [-]: CONST     R42 25       ; R42 := 25.000000
311 [-]: SUB       R43 R1 R3    ; R43 := R1 - R3
312 [-]: SUB       R43 R43 R42  ; R43 := R43 - R42
313 [-]: DIV       R43 R43 K16  ; R43 := R43 / 2.000000
314 [-]: SETUPVAL  R43 U3       ; U82 := R3
315 [-]: GETGLOBAL R43 K17      ; R43 := mAffinityGrid
316 [-]: EQ        1 R43 K18    ; if R43 == nil then PC := 411
317 [-]: JMP       411          ; PC := 411
318 [-]: GETGLOBAL R43 K17      ; R43 := mAffinityGrid
319 [-]: GETGLOBAL R44 K20      ; R44 := 0x5bced4c4
320 [-]: GETTABLE  R44 R44 K61  ; R44 := R44[0x55f27c30]
321 [-]: GETUPVAL  R45 U3       ; R45 := U3
322 [-]: GETGLOBAL R46 K17      ; R46 := mAffinityGrid
323 [-]: GETTABLE  R46 R46 K62  ; R46 := R46["mColumnSeparation"]
324 [-]: DIV       R45 R45 R46  ; R45 := R45 / R46
325 [-]: CALL      R44 2 2      ; R44 := R44(R45)
326 [-]: SETTABLE  R43 K60 R44  ; R43["mColumns"] := R44
327 [-]: GETGLOBAL R43 K17      ; R43 := mAffinityGrid
328 [-]: GETGLOBAL R44 K17      ; R44 := mAffinityGrid
329 [-]: GETTABLE  R44 R44 K60  ; R44 := R44["mColumns"]
330 [-]: GETGLOBAL R45 K17      ; R45 := mAffinityGrid
331 [-]: GETTABLE  R45 R45 K27  ; R45 := R45["mRows"]
332 [-]: MUL       R44 R44 R45  ; R44 := R44 * R45
333 [-]: SETTABLE  R43 K51 R44  ; R43["mVisibleElements"] := R44
334 [-]: GETGLOBAL R43 K17      ; R43 := mAffinityGrid
335 [-]: GETTABLE  R43 R43 K60  ; R43 := R43["mColumns"]
336 [-]: GETGLOBAL R44 K17      ; R44 := mAffinityGrid
337 [-]: GETTABLE  R44 R44 K62  ; R44 := R44["mColumnSeparation"]
338 [-]: MUL       R43 R43 R44  ; R43 := R43 * R44
339 [-]: SETUPVAL  R43 U3       ; U82 := R3
340 [-]: GETGLOBAL R43 K9       ; R43 := 0xae91e43b
341 [-]: SELF      R43 R43 K63  ; R44 := R43; R43 := R43[0x67bc869f]
342 [-]: LOADK     R45 K64      ; R45 := "ExpandableArea.Progression.Affinity.ScrollBar"
343 [-]: CONST     R46 0        ; R46 := 0.000000
344 [-]: GETUPVAL  R47 U3       ; R47 := U3
345 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
346 [-]: GETGLOBAL R43 K17      ; R43 := mAffinityGrid
347 [-]: GETTABLE  R43 R43 K65  ; R43 := R43["mElements"]
348 [-]: LEN       R43 R43      ; R43 := # R43
349 [-]: CONST     R44 1        ; R44 := 1.000000
350 [-]: CONST     R45 -1       ; R45 := -1.000000
351 [-]: FORPREP   R43 364      ; R43 -= R45; PC := 364
352 [-]: GETGLOBAL R47 K17      ; R47 := mAffinityGrid
353 [-]: GETTABLE  R47 R47 K65  ; R47 := R47["mElements"]
354 [-]: GETTABLE  R47 R47 R46  ; R47 := R47[R46]
355 [-]: GETTABLE  R47 R47 K66  ; R47 := R47["Filler"]
356 [-]: TEST      R47 0        ; if not R47 then PC := 364
357 [-]: JMP       364          ; PC := 364
358 [-]: GETGLOBAL R47 K17      ; R47 := mAffinityGrid
359 [-]: SELF      R47 R47 K67  ; R48 := R47; R47 := R47[0x9ae7e2d2]
360 [-]: MOVE      R49 R46      ; R49 := R46
361 [-]: LOADKB    R50 1 0      ; R50 := true
362 [-]: LOADKB    R51 1 0      ; R51 := true
363 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
364 [-]: FORLOOP   R43 352      ; R43 += R45; if R43 <= R44 then begin PC := 352; R46 := R43 end
365 [-]: GETGLOBAL R47 K17      ; R47 := mAffinityGrid
366 [-]: GETTABLE  R47 R47 K65  ; R47 := R47["mElements"]
367 [-]: LEN       R47 R47      ; R47 := # R47
368 [-]: GETGLOBAL R48 K20      ; R48 := 0x5bced4c4
369 [-]: GETTABLE  R48 R48 K21  ; R48 := R48[0x99675e23]
370 [-]: GETGLOBAL R49 K17      ; R49 := mAffinityGrid
371 [-]: GETTABLE  R49 R49 K60  ; R49 := R49["mColumns"]
372 [-]: DIV       R49 R47 R49  ; R49 := R47 / R49
373 [-]: CALL      R48 2 2      ; R48 := R48(R49)
374 [-]: GETGLOBAL R49 K20      ; R49 := 0x5bced4c4
375 [-]: GETTABLE  R49 R49 K68  ; R49 := R49[0xb62ecfe0]
376 [-]: GETGLOBAL R50 K17      ; R50 := mAffinityGrid
377 [-]: GETTABLE  R50 R50 K27  ; R50 := R50["mRows"]
378 [-]: GETGLOBAL R51 K17      ; R51 := mAffinityGrid
379 [-]: GETTABLE  R51 R51 K60  ; R51 := R51["mColumns"]
380 [-]: MUL       R50 R50 R51  ; R50 := R50 * R51
381 [-]: GETGLOBAL R51 K17      ; R51 := mAffinityGrid
382 [-]: GETTABLE  R51 R51 K60  ; R51 := R51["mColumns"]
383 [-]: MUL       R51 R48 R51  ; R51 := R48 * R51
384 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
385 [-]: ADD       R50 R47 K69  ; R50 := R47 + 1.000000
386 [-]: MOVE      R51 R49      ; R51 := R49
387 [-]: CONST     R52 1        ; R52 := 1.000000
388 [-]: FORPREP   R50 395      ; R50 -= R52; PC := 395
389 [-]: GETGLOBAL R54 K17      ; R54 := mAffinityGrid
390 [-]: SELF      R54 R54 K70  ; R55 := R54; R54 := R54[0xbad4316f]
391 [-]: NEWTABLE  R56 0 1      ; R56 := {}
392 [-]: SETTABLE  R56 K66 K71  ; R56["Filler"] := true
393 [-]: LOADKB    R57 1 0      ; R57 := true
394 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
395 [-]: FORLOOP   R50 389      ; R50 += R52; if R50 <= R51 then begin PC := 389; R53 := R50 end
396 [-]: GETGLOBAL R54 K17      ; R54 := mAffinityGrid
397 [-]: SELF      R54 R54 K28  ; R55 := R54; R54 := R54[0x71e9ac81]
398 [-]: LOADNIL   R56 R56      ; R56 := nil
399 [-]: LOADKB    R57 0 0      ; R57 := false
400 [-]: LOADKB    R58 1 0      ; R58 := true
401 [-]: CALL      R54 5 1      ; R54(R55,R56,R57,R58)
402 [-]: GETGLOBAL R54 K9       ; R54 := 0xae91e43b
403 [-]: SELF      R54 R54 K63  ; R55 := R54; R54 := R54[0x67bc869f]
404 [-]: LOADK     R56 K72      ; R56 := "ExpandableArea.Progression.Affinity"
405 [-]: CONST     R57 0        ; R57 := 0.000000
406 [-]: SUB       R58 R1 R3    ; R58 := R1 - R3
407 [-]: UNM       R58 R58      ; R58 :=  R58
408 [-]: DIV       R58 R58 K16  ; R58 := R58 / 2.000000
409 [-]: ADD       R58 R58 K73  ; R58 := R58 + 3.000000
410 [-]: CALL      R54 5 1      ; R54(R55,R56,R57,R58)
411 [-]: GETGLOBAL R54 K19      ; R54 := mRewardGrid
412 [-]: EQ        1 R54 K18    ; if R54 == nil then PC := 492
413 [-]: JMP       492          ; PC := 492
414 [-]: SUB       R54 R1 R3    ; R54 := R1 - R3
415 [-]: GETUPVAL  R55 U3       ; R55 := U3
416 [-]: SUB       R54 R54 R55  ; R54 := R54 - R55
417 [-]: SUB       R54 R54 R42  ; R54 := R54 - R42
418 [-]: GETGLOBAL R55 K19      ; R55 := mRewardGrid
419 [-]: GETGLOBAL R56 K20      ; R56 := 0x5bced4c4
420 [-]: GETTABLE  R56 R56 K61  ; R56 := R56[0x55f27c30]
421 [-]: GETGLOBAL R57 K19      ; R57 := mRewardGrid
422 [-]: GETTABLE  R57 R57 K62  ; R57 := R57["mColumnSeparation"]
423 [-]: DIV       R57 R54 R57  ; R57 := R54 / R57
424 [-]: CALL      R56 2 2      ; R56 := R56(R57)
425 [-]: SETTABLE  R55 K60 R56  ; R55["mColumns"] := R56
426 [-]: GETGLOBAL R55 K19      ; R55 := mRewardGrid
427 [-]: GETGLOBAL R56 K19      ; R56 := mRewardGrid
428 [-]: GETTABLE  R56 R56 K60  ; R56 := R56["mColumns"]
429 [-]: GETGLOBAL R57 K19      ; R57 := mRewardGrid
430 [-]: GETTABLE  R57 R57 K27  ; R57 := R57["mRows"]
431 [-]: MUL       R56 R56 R57  ; R56 := R56 * R57
432 [-]: SETTABLE  R55 K51 R56  ; R55["mVisibleElements"] := R56
433 [-]: GETGLOBAL R55 K19      ; R55 := mRewardGrid
434 [-]: GETTABLE  R55 R55 K60  ; R55 := R55["mColumns"]
435 [-]: GETGLOBAL R56 K19      ; R56 := mRewardGrid
436 [-]: GETTABLE  R56 R56 K62  ; R56 := R56["mColumnSeparation"]
437 [-]: MUL       R54 R55 R56  ; R54 := R55 * R56
438 [-]: GETGLOBAL R55 K9       ; R55 := 0xae91e43b
439 [-]: SELF      R55 R55 K63  ; R56 := R55; R55 := R55[0x67bc869f]
440 [-]: LOADK     R57 K74      ; R57 := "ExpandableArea.Progression.Rewards.ScrollBar"
441 [-]: CONST     R58 0        ; R58 := 0.000000
442 [-]: MOVE      R59 R54      ; R59 := R54
443 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
444 [-]: GETGLOBAL R55 K19      ; R55 := mRewardGrid
445 [-]: GETTABLE  R55 R55 K65  ; R55 := R55["mElements"]
446 [-]: LEN       R55 R55      ; R55 := # R55
447 [-]: CONST     R56 1        ; R56 := 1.000000
448 [-]: CONST     R57 -1       ; R57 := -1.000000
449 [-]: FORPREP   R55 462      ; R55 -= R57; PC := 462
450 [-]: GETGLOBAL R59 K19      ; R59 := mRewardGrid
451 [-]: GETTABLE  R59 R59 K65  ; R59 := R59["mElements"]
452 [-]: GETTABLE  R59 R59 R58  ; R59 := R59[R58]
453 [-]: GETTABLE  R59 R59 K66  ; R59 := R59["Filler"]
454 [-]: TEST      R59 0        ; if not R59 then PC := 462
455 [-]: JMP       462          ; PC := 462
456 [-]: GETGLOBAL R59 K19      ; R59 := mRewardGrid
457 [-]: SELF      R59 R59 K67  ; R60 := R59; R59 := R59[0x9ae7e2d2]
458 [-]: MOVE      R61 R58      ; R61 := R58
459 [-]: LOADKB    R62 1 0      ; R62 := true
460 [-]: LOADKB    R63 1 0      ; R63 := true
461 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
462 [-]: FORLOOP   R55 450      ; R55 += R57; if R55 <= R56 then begin PC := 450; R58 := R55 end
463 [-]: GETGLOBAL R59 K19      ; R59 := mRewardGrid
464 [-]: SELF      R59 R59 K75  ; R60 := R59; R59 := R59[0x37bcb720]
465 [-]: CALL      R59 2 1      ; R59(R60)
466 [-]: GETGLOBAL R59 K19      ; R59 := mRewardGrid
467 [-]: SELF      R59 R59 K28  ; R60 := R59; R59 := R59[0x71e9ac81]
468 [-]: LOADNIL   R61 R61      ; R61 := nil
469 [-]: LOADKB    R62 0 0      ; R62 := false
470 [-]: LOADKB    R63 1 0      ; R63 := true
471 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
472 [-]: CONST     R59 -7       ; R59 := -7.000000
473 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
474 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
475 [-]: LOADK     R62 K76      ; R62 := "ExpandableArea.Progression.Rewards"
476 [-]: CONST     R63 0        ; R63 := 0.000000
477 [-]: SUB       R64 R1 R3    ; R64 := R1 - R3
478 [-]: GETGLOBAL R65 K19      ; R65 := mRewardGrid
479 [-]: GETTABLE  R65 R65 K77  ; R65 := R65["ElementWidth"]
480 [-]: ADD       R64 R64 R65  ; R64 := R64 + R65
481 [-]: DIV       R64 R64 K16  ; R64 := R64 / 2.000000
482 [-]: SUB       R64 R64 R54  ; R64 := R64 - R54
483 [-]: ADD       R64 R64 R59  ; R64 := R64 + R59
484 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
485 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
486 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
487 [-]: LOADK     R62 K78      ; R62 := "ExpandableArea.Progression.Rewards.SearchAndSort"
488 [-]: CONST     R63 0        ; R63 := 0.000000
489 [-]: SUB       R64 R54 K79  ; R64 := R54 - 527.000000
490 [-]: SUB       R64 R64 R59  ; R64 := R64 - R59
491 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
492 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
493 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
494 [-]: LOADK     R62 K80      ; R62 := "ExpandableArea.PlayerInfo.PlayerBar.Backer"
495 [-]: CONST     R63 12       ; R63 := 12.000000
496 [-]: ADD       R64 R1 K81   ; R64 := R1 + 100.000000
497 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
498 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
499 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
500 [-]: LOADK     R62 K82      ; R62 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
501 [-]: CONST     R63 12       ; R63 := 12.000000
502 [-]: ADD       R64 R1 K81   ; R64 := R1 + 100.000000
503 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
504 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
505 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
506 [-]: LOADK     R62 K83      ; R62 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
507 [-]: CONST     R63 12       ; R63 := 12.000000
508 [-]: ADD       R64 R1 K81   ; R64 := R1 + 100.000000
509 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
510 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
511 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
512 [-]: LOADK     R62 K84      ; R62 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
513 [-]: CONST     R63 12       ; R63 := 12.000000
514 [-]: ADD       R64 R1 K81   ; R64 := R1 + 100.000000
515 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
516 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
517 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
518 [-]: LOADK     R62 K85      ; R62 := "ExpandableArea.FullScreenFade"
519 [-]: CONST     R63 12       ; R63 := 12.000000
520 [-]: MOVE      R64 R1       ; R64 := R1
521 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
522 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
523 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
524 [-]: LOADK     R62 K85      ; R62 := "ExpandableArea.FullScreenFade"
525 [-]: CONST     R63 13       ; R63 := 13.000000
526 [-]: MOVE      R64 R2       ; R64 := R2
527 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
528 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
529 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
530 [-]: LOADK     R62 K86      ; R62 := "FullScreenFade"
531 [-]: CONST     R63 12       ; R63 := 12.000000
532 [-]: MOVE      R64 R1       ; R64 := R1
533 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
534 [-]: GETGLOBAL R60 K9       ; R60 := 0xae91e43b
535 [-]: SELF      R60 R60 K63  ; R61 := R60; R60 := R60[0x67bc869f]
536 [-]: LOADK     R62 K86      ; R62 := "FullScreenFade"
537 [-]: CONST     R63 13       ; R63 := 13.000000
538 [-]: MOVE      R64 R2       ; R64 := R2
539 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
540 [-]: SUB       R60 R1 R3    ; R60 := R1 - R3
541 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
542 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
543 [-]: LOADK     R63 K87      ; R63 := "ExpandableArea.Progression.Tile"
544 [-]: CONST     R64 12       ; R64 := 12.000000
545 [-]: ADD       R65 R60 K88  ; R65 := R60 + 30.000000
546 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
547 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
548 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
549 [-]: LOADK     R63 K87      ; R63 := "ExpandableArea.Progression.Tile"
550 [-]: CONST     R64 13       ; R64 := 13.000000
551 [-]: MOVE      R65 R2       ; R65 := R2
552 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
553 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
554 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
555 [-]: LOADK     R63 K89      ; R63 := "ExpandableArea.Progression.Blurer"
556 [-]: CONST     R64 12       ; R64 := 12.000000
557 [-]: ADD       R65 R60 K88  ; R65 := R60 + 30.000000
558 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
559 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
560 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
561 [-]: LOADK     R63 K89      ; R63 := "ExpandableArea.Progression.Blurer"
562 [-]: CONST     R64 13       ; R64 := 13.000000
563 [-]: MOVE      R65 R2       ; R65 := R2
564 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
565 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
566 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
567 [-]: LOADK     R63 K90      ; R63 := "ExpandableArea.Progression.Lines.Mid"
568 [-]: CONST     R64 12       ; R64 := 12.000000
569 [-]: MOVE      R65 R60      ; R65 := R60
570 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
571 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
572 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
573 [-]: LOADK     R63 K91      ; R63 := "ExpandableArea.Progression.Lines.LeftCorner"
574 [-]: CONST     R64 0        ; R64 := 0.000000
575 [-]: UNM       R65 R60      ; R65 :=  R60
576 [-]: DIV       R65 R65 K16  ; R65 := R65 / 2.000000
577 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
578 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
579 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
580 [-]: LOADK     R63 K92      ; R63 := "ExpandableArea.Progression.Lines.RightCorner"
581 [-]: CONST     R64 0        ; R64 := 0.000000
582 [-]: DIV       R65 R60 K16  ; R65 := R60 / 2.000000
583 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
584 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
585 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
586 [-]: LOADK     R63 K93      ; R63 := "ExpandableArea.Progression.Lines.LeftSide"
587 [-]: CONST     R64 0        ; R64 := 0.000000
588 [-]: UNM       R65 R60      ; R65 :=  R60
589 [-]: DIV       R65 R65 K16  ; R65 := R65 / 2.000000
590 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
591 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
592 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
593 [-]: LOADK     R63 K94      ; R63 := "ExpandableArea.Progression.Lines.RightSide"
594 [-]: CONST     R64 0        ; R64 := 0.000000
595 [-]: DIV       R65 R60 K16  ; R65 := R60 / 2.000000
596 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
597 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
598 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
599 [-]: LOADK     R63 K93      ; R63 := "ExpandableArea.Progression.Lines.LeftSide"
600 [-]: CONST     R64 13       ; R64 := 13.000000
601 [-]: MOVE      R65 R2       ; R65 := R2
602 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
603 [-]: GETGLOBAL R61 K9       ; R61 := 0xae91e43b
604 [-]: SELF      R61 R61 K63  ; R62 := R61; R61 := R61[0x67bc869f]
605 [-]: LOADK     R63 K94      ; R63 := "ExpandableArea.Progression.Lines.RightSide"
606 [-]: CONST     R64 13       ; R64 := 13.000000
607 [-]: MOVE      R65 R2       ; R65 := R2
608 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
609 [-]: ADD       R61 R1 K81   ; R61 := R1 + 100.000000
610 [-]: DIV       R61 R61 K16  ; R61 := R61 / 2.000000
611 [-]: GETUPVAL  R62 U1       ; R62 := U1
612 [-]: CALL      R62 1 2      ; R62 := R62()
613 [-]: TEST      R62 1        ; if R62 then PC := 617
614 [-]: JMP       617          ; PC := 617
615 [-]: DIV       R62 R60 K16  ; R62 := R60 / 2.000000
616 [-]: SUB       R61 R62 K95  ; R61 := R62 - 18.000000
617 [-]: GETGLOBAL R62 K9       ; R62 := 0xae91e43b
618 [-]: SELF      R62 R62 K63  ; R63 := R62; R62 := R62[0x67bc869f]
619 [-]: LOADK     R64 K96      ; R64 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
620 [-]: CONST     R65 0        ; R65 := 0.000000
621 [-]: MOVE      R66 R61      ; R66 := R61
622 [-]: CALL      R62 5 1      ; R62(R63,R64,R65,R66)
623 [-]: GETGLOBAL R62 K9       ; R62 := 0xae91e43b
624 [-]: SELF      R62 R62 K63  ; R63 := R62; R62 := R62[0x67bc869f]
625 [-]: LOADK     R64 K82      ; R64 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
626 [-]: CONST     R65 0        ; R65 := 0.000000
627 [-]: SUB       R66 R61 K97  ; R66 := R61 - 23.000000
628 [-]: CALL      R62 5 1      ; R62(R63,R64,R65,R66)
629 [-]: GETGLOBAL R62 K9       ; R62 := 0xae91e43b
630 [-]: SELF      R62 R62 K63  ; R63 := R62; R62 := R62[0x67bc869f]
631 [-]: LOADK     R64 K83      ; R64 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
632 [-]: CONST     R65 0        ; R65 := 0.000000
633 [-]: ADD       R66 R61 K97  ; R66 := R61 + 23.000000
634 [-]: CALL      R62 5 1      ; R62(R63,R64,R65,R66)
635 [-]: GETGLOBAL R62 K9       ; R62 := 0xae91e43b
636 [-]: SELF      R62 R62 K63  ; R63 := R62; R62 := R62[0x67bc869f]
637 [-]: LOADK     R64 K98      ; R64 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
638 [-]: CONST     R65 0        ; R65 := 0.000000
639 [-]: UNM       R66 R61      ; R66 :=  R61
640 [-]: SUB       R66 R66 K99  ; R66 := R66 - 17.000000
641 [-]: CALL      R62 5 1      ; R62(R63,R64,R65,R66)
642 [-]: GETUPVAL  R62 U4       ; R62 := U4
643 [-]: CALL      R62 1 1      ; R62()
644 [-]: GETUPVAL  R62 U0       ; R62 := U0
645 [-]: GETTABLE  R62 R62 K100 ; R62 := R62[0x0db7934d]
646 [-]: GETGLOBAL R63 K9       ; R63 := 0xae91e43b
647 [-]: CONST     R64 100      ; R64 := 100.000000
648 [-]: CALL      R62 3 2      ; R62 := R62(R63,R64)
649 [-]: GETGLOBAL R63 K101     ; R63 := 0x5dcb0a6f
650 [-]: SELF      R63 R63 K102 ; R64 := R63; R63 := R63[0x830eea67]
651 [-]: GETGLOBAL R65 K103     ; R65 := 0x6c97a788
652 [-]: GETTABLE  R65 R65 K104 ; R65 := R65["VISIBILITY_FADE_SIZE"]
653 [-]: MOVE      R66 R62      ; R66 := R62
654 [-]: CALL      R63 4 1      ; R63(R64,R65,R66)
655 [-]: GETUPVAL  R63 U0       ; R63 := U0
656 [-]: GETTABLE  R63 R63 K33  ; R63 := R63[0xe5e5a417]
657 [-]: GETGLOBAL R64 K9       ; R64 := 0xae91e43b
658 [-]: MOVE      R65 R5       ; R65 := R5
659 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
660 [-]: MOVE      R10 R63      ; R10 := R63
661 [-]: GETUPVAL  R63 U0       ; R63 := U0
662 [-]: GETTABLE  R63 R63 K34  ; R63 := R63[0xd718f59b]
663 [-]: GETGLOBAL R64 K9       ; R64 := 0xae91e43b
664 [-]: MUL       R65 R6 K16   ; R65 := R6 * 2.000000
665 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
666 [-]: MOVE      R11 R63      ; R11 := R63
667 [-]: GETUPVAL  R63 U2       ; R63 := U2
668 [-]: GETGLOBAL R64 K101     ; R64 := 0x5dcb0a6f
669 [-]: MOVE      R65 R10      ; R65 := R10
670 [-]: MUL       R66 R62 K105 ; R66 := R62 * 1.500000
671 [-]: SUB       R66 R11 R66  ; R66 := R11 - R66
672 [-]: LOADKB    R67 1 0      ; R67 := true
673 [-]: CALL      R63 5 1      ; R63(R64,R65,R66,R67)
674 [-]: GETUPVAL  R63 U0       ; R63 := U0
675 [-]: GETTABLE  R63 R63 K33  ; R63 := R63[0xe5e5a417]
676 [-]: GETGLOBAL R64 K9       ; R64 := 0xae91e43b
677 [-]: GETGLOBAL R65 K9       ; R65 := 0xae91e43b
678 [-]: SELF      R65 R65 K13  ; R66 := R65; R65 := R65[0x91a24e4b]
679 [-]: LOADK     R67 K106     ; R67 := "ExpandableArea.Progression.Affinity.MissionTime"
680 [-]: CONST     R68 2        ; R68 := 2.000000
681 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
682 [-]: LOADKB    R66 1 0      ; R66 := true
683 [-]: CALL      R63 4 2      ; R63 := R63(R64,R65,R66)
684 [-]: GETUPVAL  R64 U0       ; R64 := U0
685 [-]: GETTABLE  R64 R64 K34  ; R64 := R64[0xd718f59b]
686 [-]: GETGLOBAL R65 K9       ; R65 := 0xae91e43b
687 [-]: GETUPVAL  R66 U3       ; R66 := U3
688 [-]: LOADKB    R67 1 0      ; R67 := true
689 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
690 [-]: GETUPVAL  R65 U2       ; R65 := U2
691 [-]: GETGLOBAL R66 K107     ; R66 := 0xea90a9b2
692 [-]: MOVE      R67 R63      ; R67 := R63
693 [-]: SUB       R68 R64 K108 ; R68 := R64 - 0.200000
694 [-]: LOADKB    R69 1 0      ; R69 := true
695 [-]: CALL      R65 5 1      ; R65(R66,R67,R68,R69)
696 [-]: RETURN    R0 1         ; return 


; Function #15.1:
;
; Name:            
; Defined at line: 462
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIndex"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R2 K2        ; R2 := mRewardGrid
  5 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x1d246732]
  6 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Id"]
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: MOVE      R1 R2        ; R1 := R2
  9 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R2 K2        ; R2 := mRewardGrid
 12 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xbe07f4f4]
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R2 3 1       ; R2(R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 622
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADKB    R1 1 0       ; R1 := true
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 626
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x0032441c
  2 [-]: SETTABLE  R0 K1 K2     ; R0["DisableLoadingDiorama"] := false
  3 [-]: GETGLOBAL R0 K3        ; R0 := mDioramaLevel
  4 [-]: EQ        1 R0 K4      ; if R0 == nil then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K5        ; R0 := 0x9ba7909f
  7 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xb21930e8]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: LOADNIL   R0 R0        ; R0 := nil
 10 [-]: SETGLOBAL R0 K3        ; mDioramaLevel := R0
 11 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 634
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0xf2deaf69]
 12 [-]: GETGLOBAL R4 K2        ; R4 := gLevelType
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: MOVE      R1 R0        ; R1 := R0
 17 [-]: JMP       21           ; PC := 21
 18 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x1044f972]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: GETTABLE  R1 R2 K4     ; R1 := R2["level"]
 21 [-]: GETGLOBAL R2 K5        ; R2 := mDioramaLevel
 22 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETGLOBAL R2 K6        ; R2 := mDioramaLoader
 26 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x522b2215]
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 29 [-]: TEST      R2 0         ; if not R2 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: LOADKB    R2 1 0       ; R2 := true
 32 [-]: SETGLOBAL R2 K8        ; mInputBlocked := R2
 33 [-]: SETGLOBAL R1 K5        ; mDioramaLevel := R1
 34 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 658
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UIMovie_DetailedPurchaseDialog"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
 13 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbcfb64ab]
 14 [-]: GETGLOBAL R3 K5        ; R3 := 0x82fd6cc3
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0xe4162eed]
 22 [-]: LOADK     R4 K7        ; R4 := "UnloadDiorama"
 23 [-]: LOADK     R5 K8        ; R5 := ""
 24 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 25 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 26 [-]: GETGLOBAL R3 K9        ; R3 := mDioramaLoader
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 0         ; if not R2 then PC := 38
 29 [-]: JMP       38           ; PC := 38
 30 [-]: GETGLOBAL R2 K10       ; R2 := 0x2d0fad09
 31 [-]: LOADK     R3 K11       ; R3 := "Lotus.Interface.Libs.DioramaLoader"
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: GETTABLE  R3 R2 K12    ; R3 := R2[0xbec1f4ee]
 34 [-]: GETGLOBAL R4 K13       ; R4 := 0xae91e43b
 35 [-]: LOADKB    R5 1 0       ; R5 := true
 36 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 37 [-]: SETGLOBAL R3 K9        ; mDioramaLoader := R3
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: CALL      R3 1 1       ; R3()
 40 [-]: LOADKB    R3 1 0       ; R3 := true
 41 [-]: SETUPVAL  R3 U1        ; U82 := R1
 42 [-]: GETGLOBAL R3 K2        ; R3 := 0x0032441c
 43 [-]: SETTABLE  R3 K14 K15   ; R3["DisableLoadingDiorama"] := false
 44 [-]: GETGLOBAL R3 K9        ; R3 := mDioramaLoader
 45 [-]: SETTABLE  R3 K16 K15   ; R3["mSyncAvatars"] := false
 46 [-]: LOADNIL   R3 R3        ; R3 := nil
 47 [-]: GETGLOBAL R4 K17       ; R4 := _T
 48 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["eomScreenMode"]
 49 [-]: GETUPVAL  R5 U2        ; R5 := U2
 50 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["ACTUAL_EOM"]
 51 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 72
 52 [-]: JMP       72           ; PC := 72
 53 [-]: GETGLOBAL R4 K20       ; R4 := mCurrentScreenType
 54 [-]: GETGLOBAL R5 K21       ; R5 := ScreenType
 55 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["KAHL"]
 56 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 61
 57 [-]: JMP       61           ; PC := 61
 58 [-]: GETGLOBAL R4 K23       ; R4 := 0x8b460e35
 59 [-]: TESTSET   R3 R4 1      ; if R4 then PC := 62 else R3 := R4
 60 [-]: JMP       62           ; PC := 62
 61 [-]: GETGLOBAL R3 K24       ; R3 := 0x3e1de041
 62 [-]: GETGLOBAL R4 K25       ; R4 := 0xbd496aa1
 63 [-]: GETTABLE  R4 R4 K26    ; R4 := R4[0x42645da3]
 64 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 65 [-]: SELF      R6 R3 K27    ; R7 := R3; R6 := R3[0xed4e0128]
 66 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 67 [-]: SETLIST   R5 0 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 0
 68 [-]: LOADKB    R6 1 0       ; R6 := true
 69 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 70 [-]: SELF      R5 R4 K28    ; R6 := R4; R5 := R4[0x28f42b1e]
 71 [-]: CALL      R5 2 1       ; R5(R6)
 72 [-]: GETUPVAL  R5 U3        ; R5 := U3
 73 [-]: GETGLOBAL R6 K29       ; R6 := 0xb009bbc6
 74 [-]: MOVE      R7 R3        ; R7 := R3
 75 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 76 [-]: CALL      R5 0 1       ; R5(R6,...)
 77 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 689
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ACTUAL_EOM"]
  5 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 36
  6 [-]: JMP       36           ; PC := 36
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  8 [-]: GETGLOBAL R1 K4        ; R1 := 0xbe190284
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 36
 11 [-]: JMP       36           ; PC := 36
 12 [-]: GETGLOBAL R0 K4        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xf230485c]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: LOADKB    R0 1 0       ; R0 := true
 18 [-]: SETUPVAL  R0 U1        ; U82 := R1
 19 [-]: GETGLOBAL R0 K4        ; R0 := 0xbe190284
 20 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xc02f2cb8]
 21 [-]: LOADKB    R2 1 0       ; R2 := true
 22 [-]: CALL      R0 3 1       ; R0(R1,R2)
 23 [-]: GETGLOBAL R0 K7        ; R0 := mAskedPauseMenuToClose
 24 [-]: TEST      R0 1         ; if R0 then PC := 36
 25 [-]: JMP       36           ; PC := 36
 26 [-]: GETGLOBAL R0 K4        ; R0 := 0xbe190284
 27 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x9ac735d2]
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: LOADKB    R0 1 0       ; R0 := true
 32 [-]: SETGLOBAL R0 K7        ; mAskedPauseMenuToClose := R0
 33 [-]: GETGLOBAL R0 K4        ; R0 := 0xbe190284
 34 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xaeb5aa53]
 35 [-]: CALL      R0 2 1       ; R0(R1)
 36 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 702
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 706
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["EOMOpen"] := nil
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0x9e3d3434]
  5 [-]: LOADKB    R1 0 0       ; R1 := false
  6 [-]: CALL      R0 2 1       ; R0(R1)
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: SETTABLE  R0 K4 K2     ; R0["gToolTip"] := nil
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: SETTABLE  R0 K5 K2     ; R0["InfoPopup_Data"] := nil
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: SETTABLE  R0 K6 K2     ; R0["InfoPopup_Grid"] := nil
 13 [-]: GETGLOBAL R0 K7        ; R0 := mWaitingForMissionComplete
 14 [-]: TEST      R0 0         ; if not R0 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: GETTABLE  R0 R0 K8     ; R0 := R0[0x56d89411]
 18 [-]: LOADKB    R1 0 0       ; R1 := false
 19 [-]: CALL      R0 2 1       ; R0(R1)
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: TEST      R0 0         ; if not R0 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETTABLE  R0 R0 K9     ; R0 := R0[0x154d0ad2]
 25 [-]: LOADKB    R1 0 0       ; R1 := false
 26 [-]: CALL      R0 2 1       ; R0(R1)
 27 [-]: GETUPVAL  R0 U2        ; R0 := U2
 28 [-]: CALL      R0 1 1       ; R0()
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: GETTABLE  R0 R0 K10    ; R0 := R0[0xcdc34211]
 31 [-]: CALL      R0 1 2       ; R0 := R0()
 32 [-]: GETGLOBAL R1 K0        ; R1 := _T
 33 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["eomScreenMode"]
 34 [-]: GETUPVAL  R2 U3        ; R2 := U3
 35 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["ACTUAL_EOM"]
 36 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 39
 39 [-]: LOADKB    R1 1 0       ; R1 := true
 40 [-]: TEST      R1 1         ; if R1 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: TEST      R0 1         ; if R0 then PC := 67
 43 [-]: JMP       67           ; PC := 67
 44 [-]: GETGLOBAL R2 K13       ; R2 := 0x76ea806b
 45 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x3f3ae64c]
 46 [-]: CONST     R4 0         ; R4 := 0.000000
 47 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 48 [-]: GETGLOBAL R3 K15       ; R3 := 0x7b998233
 49 [-]: MOVE      R4 R2        ; R4 := R2
 50 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 51 [-]: TEST      R3 1         ; if R3 then PC := 67
 52 [-]: JMP       67           ; PC := 67
 53 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2[0x40e9c32b]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: CONST     R4 0         ; R4 := 0.000000
 56 [-]: GETUPVAL  R5 U4        ; R5 := U4
 57 [-]: TEST      R5 0         ; if not R5 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: ADD       R4 R4 K17    ; R4 := R4 + 1.000000
 60 [-]: GETUPVAL  R5 U5        ; R5 := U5
 61 [-]: TEST      R5 0         ; if not R5 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: ADD       R4 R4 K18    ; R4 := R4 + 2.000000
 64 [-]: SELF      R5 R3 K19    ; R6 := R3; R5 := R3[0x92d13f60]
 65 [-]: MOVE      R7 R4        ; R7 := R4
 66 [-]: CALL      R5 3 1       ; R5(R6,R7)
 67 [-]: GETUPVAL  R5 U6        ; R5 := U6
 68 [-]: CALL      R5 1 1       ; R5()
 69 [-]: GETUPVAL  R5 U7        ; R5 := U7
 70 [-]: GETTABLE  R5 R5 K20    ; R5 := R5[0xc4b927cd]
 71 [-]: CALL      R5 1 1       ; R5()
 72 [-]: GETUPVAL  R5 U8        ; R5 := U8
 73 [-]: TEST      R5 0         ; if not R5 then PC := 90
 74 [-]: JMP       90           ; PC := 90
 75 [-]: GETGLOBAL R5 K15       ; R5 := 0x7b998233
 76 [-]: GETGLOBAL R6 K21       ; R6 := 0xbe190284
 77 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 78 [-]: TEST      R5 1         ; if R5 then PC := 90
 79 [-]: JMP       90           ; PC := 90
 80 [-]: GETGLOBAL R5 K0        ; R5 := _T
 81 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["eomScreenMode"]
 82 [-]: GETUPVAL  R6 U3        ; R6 := U3
 83 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["ACTUAL_EOM"]
 84 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 90
 85 [-]: JMP       90           ; PC := 90
 86 [-]: GETGLOBAL R5 K21       ; R5 := 0xbe190284
 87 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0xc02f2cb8]
 88 [-]: LOADKB    R7 0 0       ; R7 := false
 89 [-]: CALL      R5 3 1       ; R5(R6,R7)
 90 [-]: GETGLOBAL R5 K15       ; R5 := 0x7b998233
 91 [-]: GETGLOBAL R6 K23       ; R6 := mPlayerIconFx
 92 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 93 [-]: TEST      R5 1         ; if R5 then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETGLOBAL R5 K23       ; R5 := mPlayerIconFx
 96 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5[0xa2880940]
 97 [-]: CALL      R5 2 1       ; R5(R6)
 98 [-]: GETGLOBAL R5 K15       ; R5 := 0x7b998233
 99 [-]: GETGLOBAL R6 K25       ; R6 := mPvpMovie
100 [-]: CALL      R5 2 2       ; R5 := R5(R6)
101 [-]: TEST      R5 1         ; if R5 then PC := 106
102 [-]: JMP       106          ; PC := 106
103 [-]: GETGLOBAL R5 K25       ; R5 := mPvpMovie
104 [-]: SELF      R5 R5 K26    ; R6 := R5; R5 := R5[0x32302b4a]
105 [-]: CALL      R5 2 1       ; R5(R6)
106 [-]: GETUPVAL  R5 U9        ; R5 := U9
107 [-]: TEST      R5 0         ; if not R5 then PC := 170
108 [-]: JMP       170          ; PC := 170
109 [-]: GETGLOBAL R5 K15       ; R5 := 0x7b998233
110 [-]: GETGLOBAL R6 K27       ; R6 := mGameData
111 [-]: CALL      R5 2 2       ; R5 := R5(R6)
112 [-]: TEST      R5 1         ; if R5 then PC := 138
113 [-]: JMP       138          ; PC := 138
114 [-]: GETGLOBAL R5 K0        ; R5 := _T
115 [-]: GETGLOBAL R6 K27       ; R6 := mGameData
116 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6[0x4b0ebe0c]
117 [-]: CALL      R6 2 2       ; R6 := R6(R7)
118 [-]: SETTABLE  R5 K28 R6    ; R5["DesiredGoToNode"] := R6
119 [-]: GETGLOBAL R5 K27       ; R5 := mGameData
120 [-]: SELF      R5 R5 K30    ; R6 := R5; R5 := R5[0x30d7508a]
121 [-]: CALL      R5 2 2       ; R5 := R5(R6)
122 [-]: GETUPVAL  R6 U0        ; R6 := U0
123 [-]: GETTABLE  R6 R6 K31    ; R6 := R6[0x2090e949]
124 [-]: MOVE      R7 R5        ; R7 := R5
125 [-]: CALL      R6 2 2       ; R6 := R6(R7)
126 [-]: GETGLOBAL R7 K0        ; R7 := _T
127 [-]: SETTABLE  R7 K32 R6    ; R7["DesiredGoToNodeTag"] := R6
128 [-]: GETGLOBAL R7 K27       ; R7 := mGameData
129 [-]: SELF      R7 R7 K33    ; R8 := R7; R7 := R7[0x24e9c7b4]
130 [-]: CALL      R7 2 2       ; R7 := R7(R8)
131 [-]: EQ        1 R7 K34     ; if R7 == "" then PC := 136
132 [-]: JMP       136          ; PC := 136
133 [-]: GETGLOBAL R8 K0        ; R8 := _T
134 [-]: SETTABLE  R8 K35 R7    ; R8["MissionToSkipTo"] := R7
135 [-]: JMP       138          ; PC := 138
136 [-]: GETGLOBAL R8 K0        ; R8 := _T
137 [-]: SETTABLE  R8 K35 K2    ; R8["MissionToSkipTo"] := nil
138 [-]: GETGLOBAL R8 K0        ; R8 := _T
139 [-]: GETTABLE  R8 R8 K36    ; R8 := R8["TopMenuOpen"]
140 [-]: TEST      R8 0         ; if not R8 then PC := 156
141 [-]: JMP       156          ; PC := 156
142 [-]: GETGLOBAL R8 K37       ; R8 := 0x9ba7909f
143 [-]: SELF      R8 R8 K38    ; R9 := R8; R8 := R8[0xbcfb64ab]
144 [-]: GETGLOBAL R10 K39      ; R10 := 0x6a400c4e
145 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
146 [-]: GETGLOBAL R9 K15       ; R9 := 0x7b998233
147 [-]: MOVE      R10 R8       ; R10 := R8
148 [-]: CALL      R9 2 2       ; R9 := R9(R10)
149 [-]: TEST      R9 1         ; if R9 then PC := 184
150 [-]: JMP       184          ; PC := 184
151 [-]: SELF      R9 R8 K40    ; R10 := R8; R9 := R8[0xe4162eed]
152 [-]: LOADK     R11 K41      ; R11 := "TriggerConsole"
153 [-]: LOADK     R12 K42      ; R12 := "SolarMapOrigin"
154 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
155 [-]: JMP       184          ; PC := 184
156 [-]: GETGLOBAL R9 K0        ; R9 := _T
157 [-]: SETTABLE  R9 K43 K42   ; R9["triggeredConsoleTag"] := "SolarMapOrigin"
158 [-]: GETUPVAL  R9 U10       ; R9 := U10
159 [-]: GETTABLE  R9 R9 K44    ; R9 := R9[0xa9882367]
160 [-]: LOADK     R10 K45      ; R10 := "ConsoleTeleportAndActivate"
161 [-]: CALL      R9 2 2       ; R9 := R9(R10)
162 [-]: GETGLOBAL R10 K15      ; R10 := 0x7b998233
163 [-]: MOVE      R11 R9       ; R11 := R9
164 [-]: CALL      R10 2 2      ; R10 := R10(R11)
165 [-]: TEST      R10 1        ; if R10 then PC := 184
166 [-]: JMP       184          ; PC := 184
167 [-]: SELF      R10 R9 K46   ; R11 := R9; R10 := R9[0xd91e1179]
168 [-]: CALL      R10 2 1      ; R10(R11)
169 [-]: JMP       184          ; PC := 184
170 [-]: TEST      R0 1         ; if R0 then PC := 184
171 [-]: JMP       184          ; PC := 184
172 [-]: GETGLOBAL R10 K15      ; R10 := 0x7b998233
173 [-]: GETGLOBAL R11 K27      ; R11 := mGameData
174 [-]: CALL      R10 2 2      ; R10 := R10(R11)
175 [-]: TEST      R10 1        ; if R10 then PC := 184
176 [-]: JMP       184          ; PC := 184
177 [-]: GETGLOBAL R10 K0       ; R10 := _T
178 [-]: GETGLOBAL R11 K48      ; R11 := 0x0469f296
179 [-]: GETGLOBAL R12 K27      ; R12 := mGameData
180 [-]: SELF      R12 R12 K29  ; R13 := R12; R12 := R12[0x4b0ebe0c]
181 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
182 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
183 [-]: SETTABLE  R10 K47 R11  ; R10["LastMissionResultNode"] := R11
184 [-]: GETGLOBAL R10 K15      ; R10 := 0x7b998233
185 [-]: GETGLOBAL R11 K49      ; R11 := mRewardGrid
186 [-]: CALL      R10 2 2      ; R10 := R10(R11)
187 [-]: TEST      R10 1        ; if R10 then PC := 210
188 [-]: JMP       210          ; PC := 210
189 [-]: GETGLOBAL R10 K49      ; R10 := mRewardGrid
190 [-]: SELF      R10 R10 K50  ; R11 := R10; R10 := R10[0xc32ccf2e]
191 [-]: CALL      R10 2 2      ; R10 := R10(R11)
192 [-]: GETGLOBAL R11 K15      ; R11 := 0x7b998233
193 [-]: MOVE      R12 R10      ; R12 := R10
194 [-]: CALL      R11 2 2      ; R11 := R11(R12)
195 [-]: TEST      R11 1        ; if R11 then PC := 210
196 [-]: JMP       210          ; PC := 210
197 [-]: GETGLOBAL R11 K15      ; R11 := 0x7b998233
198 [-]: GETGLOBAL R12 K51      ; R12 := 0x25d99d89
199 [-]: CALL      R11 2 2      ; R11 := R11(R12)
200 [-]: TEST      R11 1        ; if R11 then PC := 210
201 [-]: JMP       210          ; PC := 210
202 [-]: GETGLOBAL R11 K52      ; R11 := 0xae91e43b
203 [-]: SELF      R11 R11 K53  ; R12 := R11; R11 := R11[0x492f9da2]
204 [-]: CALL      R11 2 2      ; R11 := R11(R12)
205 [-]: GETGLOBAL R12 K51      ; R12 := 0x25d99d89
206 [-]: SELF      R12 R12 K54  ; R13 := R12; R12 := R12[0x7855ea52]
207 [-]: MOVE      R14 R11      ; R14 := R11
208 [-]: MOVE      R15 R10      ; R15 := R10
209 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
210 [-]: GETGLOBAL R12 K0       ; R12 := _T
211 [-]: GETTABLE  R12 R12 K36  ; R12 := R12["TopMenuOpen"]
212 [-]: TEST      R12 0        ; if not R12 then PC := 231
213 [-]: JMP       231          ; PC := 231
214 [-]: GETUPVAL  R12 U11      ; R12 := U11
215 [-]: TEST      R12 0        ; if not R12 then PC := 231
216 [-]: JMP       231          ; PC := 231
217 [-]: GETGLOBAL R12 K37      ; R12 := 0x9ba7909f
218 [-]: SELF      R12 R12 K38  ; R13 := R12; R12 := R12[0xbcfb64ab]
219 [-]: GETGLOBAL R14 K39      ; R14 := 0x6a400c4e
220 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
221 [-]: GETGLOBAL R13 K15      ; R13 := 0x7b998233
222 [-]: MOVE      R14 R12      ; R14 := R12
223 [-]: CALL      R13 2 2      ; R13 := R13(R14)
224 [-]: TEST      R13 1        ; if R13 then PC := 245
225 [-]: JMP       245          ; PC := 245
226 [-]: SELF      R13 R12 K40  ; R14 := R12; R13 := R12[0xe4162eed]
227 [-]: LOADK     R15 K55      ; R15 := "SetWasUIEnabled"
228 [-]: LOADK     R16 K56      ; R16 := "false"
229 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
230 [-]: JMP       245          ; PC := 245
231 [-]: GETGLOBAL R13 K0       ; R13 := _T
232 [-]: GETTABLE  R13 R13 K36  ; R13 := R13["TopMenuOpen"]
233 [-]: TEST      R13 1        ; if R13 then PC := 245
234 [-]: JMP       245          ; PC := 245
235 [-]: GETUPVAL  R13 U11      ; R13 := U11
236 [-]: TEST      R13 0        ; if not R13 then PC := 245
237 [-]: JMP       245          ; PC := 245
238 [-]: GETGLOBAL R13 K0       ; R13 := _T
239 [-]: GETTABLE  R13 R13 K57  ; R13 := R13["DisableUIInput"]
240 [-]: TEST      R13 0        ; if not R13 then PC := 245
241 [-]: JMP       245          ; PC := 245
242 [-]: GETGLOBAL R13 K0       ; R13 := _T
243 [-]: GETTABLE  R13 R13 K58  ; R13 := R13[0x80172c74]
244 [-]: CALL      R13 1 1      ; R13()
245 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 807
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPvpGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 12
 12 [-]: LOADKB    R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 811
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPveDeathmatchGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 12
 12 [-]: LOADKB    R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 815
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 0         ; if not R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  6 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x5fe24169]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: EQ        1 R0 K3      ; if R0 == 1.000000 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 11
 11 [-]: LOADKB    R0 1 0       ; R0 := true
 12 [-]: RETURN    R0 2         ; return R0
 13 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 820
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 49
  5 [-]: JMP       49           ; PC := 49
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x32316a21]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 49
 10 [-]: JMP       49           ; PC := 49
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x89326c93
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xfb64e76c]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 49
 18 [-]: JMP       49           ; PC := 49
 19 [-]: CONST     R1 0         ; R1 := 0.000000
 20 [-]: GETGLOBAL R2 K5        ; R2 := 0xba7dfcd2
 21 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x1ff3fca6]
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: SUB       R2 R2 K7     ; R2 := R2 - 1.000000
 25 [-]: CONST     R3 1         ; R3 := 1.000000
 26 [-]: FORPREP   R1 48        ; R1 -= R3; PC := 48
 27 [-]: GETGLOBAL R5 K5        ; R5 := 0xba7dfcd2
 28 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0x94df81ff]
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: MOVE      R8 R4        ; R8 := R4
 31 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 32 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
 33 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x69727e0b]
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0x11900845]
 36 [-]: MOVE      R8 R5        ; R8 := R5
 37 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 38 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
 39 [-]: MOVE      R8 R6        ; R8 := R6
 40 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 41 [-]: TEST      R7 1         ; if R7 then PC := 48
 42 [-]: JMP       48           ; PC := 48
 43 [-]: GETTABLE  R7 R6 K12    ; R7 := R6["mCategory"]
 44 [-]: EQ        0 R7 K14     ; if R7 ~= 0.000000 then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: LOADKB    R7 1 0       ; R7 := true
 47 [-]: RETURN    R7 2         ; return R7
 48 [-]: FORLOOP   R1 27        ; R1 += R3; if R1 <= R2 then begin PC := 27; R4 := R1 end
 49 [-]: LOADKB    R7 0 0       ; R7 := false
 50 [-]: RETURN    R7 2         ; return R7
 51 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 840
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["location"]
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x6d604ba7]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETUPVAL  R3 U2        ; R3 := U2
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0x719234cc]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: SETTABLE  R2 K2 R3     ; R2["pvpType"] := R3
 12 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 847
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xf2deaf69]
  7 [-]: GETGLOBAL R3 K2        ; R3 := gLotusArtifactUpgradeType
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 1         ; if R1 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADKB    R1 0 0       ; R1 := false
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xf2deaf69]
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Enhancement"]
 16 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 17 [-]: TEST      R1 1         ; if R1 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xf2deaf69]
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["LegendaryCore"]
 22 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 23 [-]: TEST      R1 0         ; if not R1 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADKB    R1 0 0       ; R1 := false
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: LOADKB    R1 1 0       ; R1 := true
 28 [-]: RETURN    R1 2         ; return R1
 29 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 860
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPlayersForStats
  2 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 120
  3 [-]: JMP       120          ; PC := 120
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xcdc34211]
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: TEST      R0 1         ; if R0 then PC := 18
  8 [-]: JMP       18           ; PC := 18
  9 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 10 [-]: GETGLOBAL R1 K4        ; R1 := mGameData
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 1         ; if R0 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETGLOBAL R0 K4        ; R0 := mGameData
 15 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x01f12112]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 19
 19 [-]: LOADKB    R0 1 0       ; R0 := true
 20 [-]: TEST      R0 1         ; if R0 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R1 K6        ; R1 := 0xe7f2b02f
 23 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x6d0aa187]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: SETGLOBAL R1 K0        ; mPlayersForStats := R1
 26 [-]: JMP       56           ; PC := 56
 27 [-]: GETGLOBAL R1 K4        ; R1 := mGameData
 28 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xaebb9855]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: SETGLOBAL R1 K0        ; mPlayersForStats := R1
 31 [-]: GETGLOBAL R1 K0        ; R1 := mPlayersForStats
 32 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 56
 33 [-]: JMP       56           ; PC := 56
 34 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 35 [-]: SETGLOBAL R1 K0        ; mPlayersForStats := R1
 36 [-]: GETGLOBAL R1 K9        ; R1 := 0x76ea806b
 37 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x3f3ae64c]
 38 [-]: CONST     R3 0         ; R3 := 0.000000
 39 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 40 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 41 [-]: MOVE      R3 R1        ; R3 := R1
 42 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 43 [-]: TEST      R2 1         ; if R2 then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: GETGLOBAL R2 K11       ; R2 := 0x6c97a788
 46 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[0xd6ea5f1c]
 47 [-]: CALL      R2 1 2       ; R2 := R2()
 48 [-]: SELF      R3 R1 K14    ; R4 := R1; R3 := R1[0x5ca33548]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: SETTABLE  R2 K13 R3    ; R2["name"] := R3
 51 [-]: GETGLOBAL R3 K15       ; R3 := 0x33bdd652
 52 [-]: GETTABLE  R3 R3 K16    ; R3 := R3[0x23d5322f]
 53 [-]: GETGLOBAL R4 K0        ; R4 := mPlayersForStats
 54 [-]: MOVE      R5 R2        ; R5 := R2
 55 [-]: CALL      R3 3 1       ; R3(R4,R5)
 56 [-]: GETGLOBAL R3 K17       ; R3 := 0xc8802016
 57 [-]: GETGLOBAL R4 K0        ; R4 := mPlayersForStats
 58 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 59 [-]: JMP       71           ; PC := 71
 60 [-]: GETTABLE  R8 R7 K13    ; R8 := R7["name"]
 61 [-]: GETUPVAL  R9 U0        ; R9 := U0
 62 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["HIDDEN_PLAYER_NAME"]
 63 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 71
 64 [-]: JMP       71           ; PC := 71
 65 [-]: GETGLOBAL R8 K15       ; R8 := 0x33bdd652
 66 [-]: GETTABLE  R8 R8 K19    ; R8 := R8[0x9c1f3b5a]
 67 [-]: GETGLOBAL R9 K0        ; R9 := mPlayersForStats
 68 [-]: MOVE      R10 R6       ; R10 := R6
 69 [-]: CALL      R8 3 1       ; R8(R9,R10)
 70 [-]: JMP       73           ; PC := 73
 71 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 60; R5 := R6 end
 72 [-]: JMP       60           ; PC := 60
 73 [-]: GETUPVAL  R8 U1        ; R8 := U1
 74 [-]: CALL      R8 1 2       ; R8 := R8()
 75 [-]: TEST      R8 0         ; if not R8 then PC := 97
 76 [-]: JMP       97           ; PC := 97
 77 [-]: GETGLOBAL R8 K0        ; R8 := mPlayersForStats
 78 [-]: TEST      R8 0         ; if not R8 then PC := 97
 79 [-]: JMP       97           ; PC := 97
 80 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 81 [-]: GETGLOBAL R9 K17       ; R9 := 0xc8802016
 82 [-]: GETGLOBAL R10 K0       ; R10 := mPlayersForStats
 83 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 84 [-]: JMP       90           ; PC := 90
 85 [-]: GETGLOBAL R14 K15      ; R14 := 0x33bdd652
 86 [-]: GETTABLE  R14 R14 K16  ; R14 := R14[0x23d5322f]
 87 [-]: MOVE      R15 R8       ; R15 := R8
 88 [-]: MOVE      R16 R13      ; R16 := R13
 89 [-]: CALL      R14 3 1      ; R14(R15,R16)
 90 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 85; R11 := R12 end
 91 [-]: JMP       85           ; PC := 85
 92 [-]: GETGLOBAL R14 K15      ; R14 := 0x33bdd652
 93 [-]: GETTABLE  R14 R14 K20  ; R14 := R14[0xf21b1d8e]
 94 [-]: GETGLOBAL R15 K0       ; R15 := mPlayersForStats
 95 [-]: CLOSURE   R16 0        ; R16 := closure(Function #29.1)
 96 [-]: CALL      R14 3 1      ; R14(R15,R16)
 97 [-]: GETGLOBAL R14 K21      ; R14 := _T
 98 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["TestPlayerCount"]
 99 [-]: EQ        1 R14 K1     ; if R14 == nil then PC := 120
100 [-]: JMP       120          ; PC := 120
101 [-]: GETGLOBAL R14 K0       ; R14 := mPlayersForStats
102 [-]: LEN       R14 R14      ; R14 := # R14
103 [-]: LT        0 K23 R14    ; if 0.000000 >= R14 then PC := 120
104 [-]: JMP       120          ; PC := 120
105 [-]: CONST     R14 1        ; R14 := 1.000000
106 [-]: GETGLOBAL R15 K21      ; R15 := _T
107 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["TestPlayerCount"]
108 [-]: GETGLOBAL R16 K0       ; R16 := mPlayersForStats
109 [-]: LEN       R16 R16      ; R16 := # R16
110 [-]: SUB       R15 R15 R16  ; R15 := R15 - R16
111 [-]: CONST     R16 1        ; R16 := 1.000000
112 [-]: FORPREP   R14 119      ; R14 -= R16; PC := 119
113 [-]: GETGLOBAL R18 K15      ; R18 := 0x33bdd652
114 [-]: GETTABLE  R18 R18 K16  ; R18 := R18[0x23d5322f]
115 [-]: GETGLOBAL R19 K0       ; R19 := mPlayersForStats
116 [-]: GETGLOBAL R20 K0       ; R20 := mPlayersForStats
117 [-]: GETTABLE  R20 R20 R17  ; R20 := R20[R17]
118 [-]: CALL      R18 3 1      ; R18(R19,R20)
119 [-]: FORLOOP   R14 113      ; R14 += R16; if R14 <= R15 then begin PC := 113; R17 := R14 end
120 [-]: GETGLOBAL R18 K0       ; R18 := mPlayersForStats
121 [-]: RETURN    R18 2        ; return R18
122 [-]: RETURN    R0 1         ; return 


; Function #29.1:
;
; Name:            
; Defined at line: 895
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["teamId"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["teamId"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADKB    R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 910
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: CONST     R0 4         ; R0 := 4.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x6b837788]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xaf9fda9f]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x2cc9d281]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x5bced4c4
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xb62ecfe0]
 15 [-]: CONST     R3 1600      ; R3 := 1600.000000
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x091c120e]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: MUL       R3 R3 K7     ; R3 := R3 * 0.100000
 22 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 23 [-]: GETGLOBAL R3 K4        ; R3 := 0x5bced4c4
 24 [-]: GETTABLE  R3 R3 K9     ; R3 := R3[0x55f27c30]
 25 [-]: GETGLOBAL R4 K4        ; R4 := 0x5bced4c4
 26 [-]: GETTABLE  R4 R4 K5     ; R4 := R4[0xb62ecfe0]
 27 [-]: GETUPVAL  R5 U0        ; R5 := U0
 28 [-]: CALL      R5 1 2       ; R5 := R5()
 29 [-]: LEN       R5 R5        ; R5 := # R5
 30 [-]: MOVE      R6 R0        ; R6 := R0
 31 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 32 [-]: ADD       R4 R4 K10    ; R4 := R4 + 1.000000
 33 [-]: DIV       R4 R2 R4     ; R4 := R2 / R4
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SETGLOBAL R3 K8        ; mStatColumnSeparation := R3
 36 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 918
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mStatColumnSeparation
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: LEN       R1 R1        ; R1 := # R1
  9 [-]: GETGLOBAL R2 K0        ; R2 := mStatColumnSeparation
 10 [-]: MUL       R2 R2 K2     ; R2 := R2 * 0.500000
 11 [-]: UNM       R2 R2        ; R2 :=  R2
 12 [-]: SUB       R3 R1 K3     ; R3 := R1 - 1.000000
 13 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
 14 [-]: EQ        0 R1 K3      ; if R1 ~= 1.000000 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: DIV       R3 R3 K4     ; R3 := R3 / 2.000000
 18 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 19 [-]: SUB       R3 R0 K3     ; R3 := R0 - 1.000000
 20 [-]: GETGLOBAL R4 K0        ; R4 := mStatColumnSeparation
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: ADD       R3 R2 R3     ; R3 := R2 + R3
 23 [-]: RETURN    R3 2         ; return R3
 24 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 931
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["FloatingContentInt"]
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x20b98db3]
  9 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
 10 [-]: LOADK     R5 K5        ; R5 := ".Label.text"
 11 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 12 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["Label"]
 13 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 16 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
 17 [-]: LOADK     R5 K6        ; R5 := "Label"
 18 [-]: CONST     R6 9         ; R6 := 9.000000
 19 [-]: MOVE      R7 R1        ; R7 := R1
 20 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 21 [-]: LOADNIL   R2 R2        ; R2 := nil
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["Value"]
 23 [-]: LEN       R3 R3        ; R3 := # R3
 24 [-]: GETGLOBAL R4 K9        ; R4 := 0x03f57322
 25 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["Id"]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: GETGLOBAL R5 K11       ; R5 := mStatTable
 28 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 29 [-]: LT        0 K12 R3     ; if 1.000000 >= R3 then PC := 50
 30 [-]: JMP       50           ; PC := 50
 31 [-]: CONST     R6 1         ; R6 := 1.000000
 32 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["Value"]
 33 [-]: LEN       R7 R7        ; R7 := # R7
 34 [-]: CONST     R8 1         ; R8 := 1.000000
 35 [-]: FORPREP   R6 49        ; R6 -= R8; PC := 49
 36 [-]: GETTABLE  R10 R5 K8    ; R10 := R5["Value"]
 37 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 38 [-]: GETTABLE  R11 R5 K13   ; R11 := R5["BestValue"]
 39 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 49
 40 [-]: JMP       49           ; PC := 49
 41 [-]: GETTABLE  R10 R5 K13   ; R10 := R5["BestValue"]
 42 [-]: EQ        0 R10 K14    ; if R10 ~= 0.000000 then PC := 47
 43 [-]: JMP       47           ; PC := 47
 44 [-]: GETTABLE  R10 R5 K15   ; R10 := R5["BestIsMax"]
 45 [-]: TEST      R10 1        ; if R10 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: MOVE      R2 R9        ; R2 := R9
 48 [-]: JMP       50           ; PC := 50
 49 [-]: FORLOOP   R6 36        ; R6 += R8; if R6 <= R7 then begin PC := 36; R9 := R6 end
 50 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
 51 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10[0x6b837788]
 52 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 53 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
 54 [-]: SELF      R11 R11 K17  ; R12 := R11; R11 := R11[0xaf9fda9f]
 55 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 56 [-]: DIV       R10 R10 R11  ; R10 := R10 / R11
 57 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
 58 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11[0x2cc9d281]
 59 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 60 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
 61 [-]: GETGLOBAL R11 K19      ; R11 := 0x5bced4c4
 62 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[0xb62ecfe0]
 63 [-]: CONST     R12 1600     ; R12 := 1600.000000
 64 [-]: MOVE      R13 R10      ; R13 := R10
 65 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 66 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
 67 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12[0x091c120e]
 68 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 69 [-]: MUL       R12 R12 K22  ; R12 := R12 * 0.100000
 70 [-]: SUB       R11 R11 R12  ; R11 := R11 - R12
 71 [-]: SUB       R11 R11 K23  ; R11 := R11 - 26.000000
 72 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
 73 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12[0xf64b7262]
 74 [-]: GETTABLE  R14 R0 K4    ; R14 := R0["mClipName"]
 75 [-]: LOADK     R15 K6       ; R15 := "Label"
 76 [-]: CONST     R16 0        ; R16 := 0.000000
 77 [-]: SUB       R17 R11 K24  ; R17 := R11 - 24.000000
 78 [-]: UNM       R17 R17      ; R17 :=  R17
 79 [-]: DIV       R17 R17 K25  ; R17 := R17 / 2.000000
 80 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 81 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
 82 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12[0xf64b7262]
 83 [-]: GETTABLE  R14 R0 K4    ; R14 := R0["mClipName"]
 84 [-]: LOADK     R15 K26      ; R15 := "Backer"
 85 [-]: CONST     R16 12       ; R16 := 12.000000
 86 [-]: MOVE      R17 R11      ; R17 := R11
 87 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 88 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
 89 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12[0x67bc869f]
 90 [-]: LOADK     R14 K28      ; R14 := "ExpandableArea.PlayerInfo.PlayerStats.ScrollBar"
 91 [-]: CONST     R15 0        ; R15 := 0.000000
 92 [-]: DIV       R16 R11 K25  ; R16 := R11 / 2.000000
 93 [-]: ADD       R16 R16 K29  ; R16 := R16 + 10.000000
 94 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 95 [-]: LOADNIL   R12 R12      ; R12 := nil
 96 [-]: LOADK     R13 K30      ; R13 := ""
 97 [-]: CONST     R14 1        ; R14 := 1.000000
 98 [-]: GETGLOBAL R15 K19      ; R15 := 0x5bced4c4
 99 [-]: GETTABLE  R15 R15 K31  ; R15 := R15[0xac1b386a]
100 [-]: GETGLOBAL R16 K32      ; R16 := mMaxPlayers
101 [-]: MOVE      R17 R3       ; R17 := R3
102 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
103 [-]: CONST     R16 1        ; R16 := 1.000000
104 [-]: FORPREP   R14 161      ; R14 -= R16; PC := 161
105 [-]: GETTABLE  R18 R0 K4    ; R18 := R0["mClipName"]
106 [-]: LOADK     R19 K33      ; R19 := ".Value"
107 [-]: MOVE      R20 R17      ; R20 := R17
108 [-]: CONCAT    R12 R18 R20  ; R12 := R18 .. R19 .. R20
109 [-]: GETTABLE  R18 R5 K34   ; R18 := R5["IsRatio"]
110 [-]: TEST      R18 0        ; if not R18 then PC := 125
111 [-]: JMP       125          ; PC := 125
112 [-]: GETGLOBAL R18 K35      ; R18 := 0x7f5022cf
113 [-]: GETTABLE  R18 R18 K36  ; R18 := R18[0xe8072ded]
114 [-]: LOADK     R19 K37      ; R19 := "%d%%"
115 [-]: GETGLOBAL R20 K19      ; R20 := 0x5bced4c4
116 [-]: GETTABLE  R20 R20 K38  ; R20 := R20[0x55f27c30]
117 [-]: GETTABLE  R21 R0 K8    ; R21 := R0["Value"]
118 [-]: GETTABLE  R21 R21 R17  ; R21 := R21[R17]
119 [-]: MUL       R21 R21 K39  ; R21 := R21 * 100.000000
120 [-]: ADD       R21 R21 K40  ; R21 := R21 + 0.500000
121 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
122 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
123 [-]: MOVE      R13 R18      ; R13 := R18
124 [-]: JMP       127          ; PC := 127
125 [-]: GETTABLE  R18 R0 K8    ; R18 := R0["Value"]
126 [-]: GETTABLE  R13 R18 R17  ; R13 := R18[R17]
127 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
128 [-]: SELF      R18 R18 K27  ; R19 := R18; R18 := R18[0x67bc869f]
129 [-]: MOVE      R20 R12      ; R20 := R12
130 [-]: CONST     R21 0        ; R21 := 0.000000
131 [-]: GETUPVAL  R22 U1       ; R22 := U1
132 [-]: MOVE      R23 R17      ; R23 := R17
133 [-]: CALL      R22 2 2      ; R22 := R22(R23)
134 [-]: ADD       R22 R22 K41  ; R22 := R22 + 40.000000
135 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
136 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
137 [-]: SELF      R18 R18 K42  ; R19 := R18; R18 := R18[0xc0a3774b]
138 [-]: MOVE      R20 R12      ; R20 := R12
139 [-]: LOADK     R21 K43      ; R21 := "TopStat"
140 [-]: CONST     R22 11       ; R22 := 11.000000
141 [-]: EQ        1 R17 R2     ; if R17 == R2 then PC := 144
142 [-]: JMP       144          ; PC := 144
143 [-]: LOADKB    R23 0 1      ; R23 := false; PC := 144
144 [-]: LOADKB    R23 1 0      ; R23 := true
145 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
146 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
147 [-]: SELF      R18 R18 K44  ; R19 := R18; R18 := R18[0x5f56eeab]
148 [-]: MOVE      R20 R12      ; R20 := R12
149 [-]: LOADK     R21 K45      ; R21 := ".Label"
150 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
151 [-]: CONST     R21 29       ; R21 := 29.000000
152 [-]: MOVE      R22 R13      ; R22 := R13
153 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
154 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
155 [-]: SELF      R18 R18 K7   ; R19 := R18; R18 := R18[0xf64b7262]
156 [-]: MOVE      R20 R12      ; R20 := R12
157 [-]: LOADK     R21 K6       ; R21 := "Label"
158 [-]: CONST     R22 9        ; R22 := 9.000000
159 [-]: MOVE      R23 R1       ; R23 := R1
160 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
161 [-]: FORLOOP   R14 105      ; R14 += R16; if R14 <= R15 then begin PC := 105; R17 := R14 end
162 [-]: GETUPVAL  R18 U0       ; R18 := U0
163 [-]: GETTABLE  R18 R18 K46  ; R18 := R18["Content"]
164 [-]: MOD       R19 R4 K25   ; R19 := R4 % 2.000000
165 [-]: EQ        0 R19 K14    ; if R19 ~= 0.000000 then PC := 190
166 [-]: JMP       190          ; PC := 190
167 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
168 [-]: SELF      R19 R19 K47  ; R20 := R19; R19 := R19[0x91e13703]
169 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
170 [-]: LOADK     R22 K48      ; R22 := ".Backer"
171 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
172 [-]: LOADK     R22 K49      ; R22 := "RectEdgeColor"
173 [-]: GETTABLE  R23 R18 K50  ; R23 := R18["r"]
174 [-]: GETTABLE  R24 R18 K51  ; R24 := R18["g"]
175 [-]: GETTABLE  R25 R18 K52  ; R25 := R18["b"]
176 [-]: LOADK     R26 K53      ; R26 := 0.050000
177 [-]: CALL      R19 8 1      ; R19(R20,R21,R22,R23,R24,R25,R26)
178 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
179 [-]: SELF      R19 R19 K47  ; R20 := R19; R19 := R19[0x91e13703]
180 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
181 [-]: LOADK     R22 K48      ; R22 := ".Backer"
182 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
183 [-]: LOADK     R22 K54      ; R22 := "RectInnerColor"
184 [-]: GETTABLE  R23 R18 K50  ; R23 := R18["r"]
185 [-]: GETTABLE  R24 R18 K51  ; R24 := R18["g"]
186 [-]: GETTABLE  R25 R18 K52  ; R25 := R18["b"]
187 [-]: LOADK     R26 K53      ; R26 := 0.050000
188 [-]: CALL      R19 8 1      ; R19(R20,R21,R22,R23,R24,R25,R26)
189 [-]: JMP       212          ; PC := 212
190 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
191 [-]: SELF      R19 R19 K47  ; R20 := R19; R19 := R19[0x91e13703]
192 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
193 [-]: LOADK     R22 K48      ; R22 := ".Backer"
194 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
195 [-]: LOADK     R22 K49      ; R22 := "RectEdgeColor"
196 [-]: CONST     R23 0        ; R23 := 0.000000
197 [-]: CONST     R24 0        ; R24 := 0.000000
198 [-]: CONST     R25 0        ; R25 := 0.000000
199 [-]: CONST     R26 0        ; R26 := 0.000000
200 [-]: CALL      R19 8 1      ; R19(R20,R21,R22,R23,R24,R25,R26)
201 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
202 [-]: SELF      R19 R19 K47  ; R20 := R19; R19 := R19[0x91e13703]
203 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
204 [-]: LOADK     R22 K48      ; R22 := ".Backer"
205 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
206 [-]: LOADK     R22 K54      ; R22 := "RectInnerColor"
207 [-]: CONST     R23 0        ; R23 := 0.000000
208 [-]: CONST     R24 0        ; R24 := 0.000000
209 [-]: CONST     R25 0        ; R25 := 0.000000
210 [-]: CONST     R26 0        ; R26 := 0.000000
211 [-]: CALL      R19 8 1      ; R19(R20,R21,R22,R23,R24,R25,R26)
212 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 991
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWaitingForMissionComplete
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: GETUPVAL  R2 U2        ; R2 := U2
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: LOADK     R3 K1        ; R3 := 0.200000
 12 [-]: CONST     R4 0         ; R4 := 0.000000
 13 [-]: CONST     R5 90        ; R5 := 90.000000
 14 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 15 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x6b837788]
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 18 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7[0x091c120e]
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: DIV       R6 R6 R7     ; R6 := R6 / R7
 21 [-]: GETUPVAL  R7 U3        ; R7 := U3
 22 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x44537adf]
 23 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 24 [-]: CALL      R7 2 3       ; R7,R8 := R7(R8)
 25 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
 26 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9[0x67bc869f]
 27 [-]: LOADK     R11 K7       ; R11 := "FullScreenFade"
 28 [-]: CONST     R12 1        ; R12 := 1.000000
 29 [-]: GETUPVAL  R13 U3       ; R13 := U3
 30 [-]: GETTABLE  R13 R13 K8   ; R13 := R13[0x06d055f9]
 31 [-]: GETUPVAL  R14 U4       ; R14 := U4
 32 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["isPvp"]
 33 [-]: CONST     R15 0        ; R15 := 0.000000
 34 [-]: UNM       R16 R5       ; R16 :=  R5
 35 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 36 [-]: CALL      R9 0 1       ; R9(R10,...)
 37 [-]: GETGLOBAL R9 K10       ; R9 := mInitialized
 38 [-]: TEST      R9 1         ; if R9 then PC := 57
 39 [-]: JMP       57           ; PC := 57
 40 [-]: TEST      R2 0         ; if not R2 then PC := 57
 41 [-]: JMP       57           ; PC := 57
 42 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
 43 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9[0x67bc869f]
 44 [-]: LOADK     R11 K11      ; R11 := "ExpandableArea"
 45 [-]: CONST     R12 1        ; R12 := 1.000000
 46 [-]: MOVE      R13 R5       ; R13 := R5
 47 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 48 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
 49 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9[0x67bc869f]
 50 [-]: LOADK     R11 K12      ; R11 := "ExpandableArea.FullScreenFade"
 51 [-]: CONST     R12 1        ; R12 := 1.000000
 52 [-]: UNM       R13 R5       ; R13 :=  R5
 53 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 54 [-]: GETUPVAL  R9 U5        ; R9 := U5
 55 [-]: CALL      R9 1 1       ; R9()
 56 [-]: JMP       94           ; PC := 94
 57 [-]: GETGLOBAL R9 K13       ; R9 := 0x25312c9b
 58 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
 59 [-]: LOADK     R11 K11      ; R11 := "ExpandableArea"
 60 [-]: CONST     R12 2        ; R12 := 2.000000
 61 [-]: NEWTABLE  R13 2 0      ; R13 := {}
 62 [-]: CONST     R14 1        ; R14 := 1.000000
 63 [-]: GETUPVAL  R15 U5       ; R15 := U5
 64 [-]: SETLIST   R13 2 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 2
 65 [-]: NEWTABLE  R14 2 0      ; R14 := {}
 66 [-]: TEST      R2 0         ; if not R2 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: TESTSET   R15 R5 1     ; if R5 then PC := 71 else R15 := R5
 69 [-]: JMP       71           ; PC := 71
 70 [-]: SUB       R15 R8 K15   ; R15 := R8 - 510.000000
 71 [-]: CONST     R16 1        ; R16 := 1.000000
 72 [-]: SETLIST   R14 2 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 2
 73 [-]: MOVE      R15 R3       ; R15 := R3
 74 [-]: MOVE      R16 R4       ; R16 := R4
 75 [-]: GETUPVAL  R17 U5       ; R17 := U5
 76 [-]: CALL      R9 9 1       ; R9(R10,R11,R12,R13,R14,R15,R16,R17)
 77 [-]: GETGLOBAL R9 K13       ; R9 := 0x25312c9b
 78 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
 79 [-]: LOADK     R11 K12      ; R11 := "ExpandableArea.FullScreenFade"
 80 [-]: CONST     R12 2        ; R12 := 2.000000
 81 [-]: NEWTABLE  R13 1 0      ; R13 := {}
 82 [-]: CONST     R14 1        ; R14 := 1.000000
 83 [-]: SETLIST   R13 1 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
 84 [-]: NEWTABLE  R14 1 0      ; R14 := {}
 85 [-]: TEST      R2 0         ; if not R2 then PC := 90
 86 [-]: JMP       90           ; PC := 90
 87 [-]: UNM       R15 R5       ; R15 :=  R5
 88 [-]: TEST      R15 1        ; if R15 then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: CONST     R15 70       ; R15 := 70.000000
 91 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
 92 [-]: MOVE      R15 R3       ; R15 := R3
 93 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
 94 [-]: TEST      R2 1         ; if R2 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: GETUPVAL  R9 U6        ; R9 := U6
 97 [-]: LEN       R9 R9        ; R9 := # R9
 98 [-]: EQ        0 R9 K16     ; if R9 ~= 0.000000 then PC := 103
 99 [-]: JMP       103          ; PC := 103
100 [-]: CONST     R9 -23       ; R9 := -23.000000
101 [-]: TEST      R9 1         ; if R9 then PC := 104
102 [-]: JMP       104          ; PC := 104
103 [-]: CONST     R9 0         ; R9 := 0.000000
104 [-]: GETGLOBAL R10 K13      ; R10 := 0x25312c9b
105 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
106 [-]: LOADK     R12 K17      ; R12 := "TopAnchor.Header.DescBacker"
107 [-]: CONST     R13 2        ; R13 := 2.000000
108 [-]: NEWTABLE  R14 1 0      ; R14 := {}
109 [-]: CONST     R15 10       ; R15 := 10.000000
110 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
111 [-]: NEWTABLE  R15 1 0      ; R15 := {}
112 [-]: TEST      R2 1         ; if R2 then PC := 117
113 [-]: JMP       117          ; PC := 117
114 [-]: CONST     R16 50       ; R16 := 50.000000
115 [-]: TEST      R16 1        ; if R16 then PC := 118
116 [-]: JMP       118          ; PC := 118
117 [-]: CONST     R16 0        ; R16 := 0.000000
118 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
119 [-]: MOVE      R16 R3       ; R16 := R3
120 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
121 [-]: GETGLOBAL R10 K13      ; R10 := 0x25312c9b
122 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
123 [-]: LOADK     R12 K18      ; R12 := "TopAnchor.Header.Desc"
124 [-]: CONST     R13 2        ; R13 := 2.000000
125 [-]: NEWTABLE  R14 1 0      ; R14 := {}
126 [-]: CONST     R15 10       ; R15 := 10.000000
127 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
128 [-]: NEWTABLE  R15 1 0      ; R15 := {}
129 [-]: TEST      R2 1         ; if R2 then PC := 134
130 [-]: JMP       134          ; PC := 134
131 [-]: CONST     R16 100      ; R16 := 100.000000
132 [-]: TEST      R16 1        ; if R16 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: CONST     R16 0        ; R16 := 0.000000
135 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
136 [-]: MOVE      R16 R3       ; R16 := R3
137 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
138 [-]: GETGLOBAL R10 K13      ; R10 := 0x25312c9b
139 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
140 [-]: LOADK     R12 K19      ; R12 := "TopAnchor.Header.Lines"
141 [-]: CONST     R13 2        ; R13 := 2.000000
142 [-]: NEWTABLE  R14 1 0      ; R14 := {}
143 [-]: CONST     R15 1        ; R15 := 1.000000
144 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
145 [-]: NEWTABLE  R15 1 0      ; R15 := {}
146 [-]: ADD       R16 K20 R9   ; R16 := 43.000000 + R9
147 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
148 [-]: MOVE      R16 R3       ; R16 := R3
149 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
150 [-]: GETGLOBAL R10 K13      ; R10 := 0x25312c9b
151 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
152 [-]: LOADK     R12 K21      ; R12 := "TopAnchor.Header.ArrowEnds"
153 [-]: CONST     R13 2        ; R13 := 2.000000
154 [-]: NEWTABLE  R14 1 0      ; R14 := {}
155 [-]: CONST     R15 1        ; R15 := 1.000000
156 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
157 [-]: NEWTABLE  R15 1 0      ; R15 := {}
158 [-]: ADD       R16 K20 R9   ; R16 := 43.000000 + R9
159 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
160 [-]: MOVE      R16 R3       ; R16 := R3
161 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
162 [-]: GETGLOBAL R10 K13      ; R10 := 0x25312c9b
163 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
164 [-]: LOADK     R12 K22      ; R12 := "TopAnchor.Header.Backer"
165 [-]: CONST     R13 2        ; R13 := 2.000000
166 [-]: NEWTABLE  R14 1 0      ; R14 := {}
167 [-]: CONST     R15 1        ; R15 := 1.000000
168 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
169 [-]: NEWTABLE  R15 1 0      ; R15 := {}
170 [-]: ADD       R16 K20 R9   ; R16 := 43.000000 + R9
171 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
172 [-]: MOVE      R16 R3       ; R16 := R3
173 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
174 [-]: GETUPVAL  R10 U7       ; R10 := U7
175 [-]: EQ        1 R10 R2     ; if R10 == R2 then PC := 198
176 [-]: JMP       198          ; PC := 198
177 [-]: SETUPVAL  R2 U7        ; U82 := R7
178 [-]: GETGLOBAL R10 K23      ; R10 := 0x38f10e85
179 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
180 [-]: LOADK     R12 K24      ; R12 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.gotoAndPlay"
181 [-]: GETUPVAL  R13 U3       ; R13 := U3
182 [-]: GETTABLE  R13 R13 K8   ; R13 := R13[0x06d055f9]
183 [-]: MOVE      R14 R2       ; R14 := R2
184 [-]: LOADK     R15 K25      ; R15 := "Expand"
185 [-]: LOADK     R16 K26      ; R16 := "Collapse"
186 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
187 [-]: CALL      R10 0 1      ; R10(R11,...)
188 [-]: GETGLOBAL R10 K23      ; R10 := 0x38f10e85
189 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
190 [-]: LOADK     R12 K27      ; R12 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross.gotoAndPlay"
191 [-]: GETUPVAL  R13 U3       ; R13 := U3
192 [-]: GETTABLE  R13 R13 K8   ; R13 := R13[0x06d055f9]
193 [-]: MOVE      R14 R2       ; R14 := R2
194 [-]: LOADK     R15 K25      ; R15 := "Expand"
195 [-]: LOADK     R16 K26      ; R16 := "Collapse"
196 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
197 [-]: CALL      R10 0 1      ; R10(R11,...)
198 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
199 [-]: SELF      R10 R10 K28  ; R11 := R10; R10 := R10[0x91a24e4b]
200 [-]: LOADK     R12 K29      ; R12 := "TopAnchor.Header.Label"
201 [-]: CONST     R13 9        ; R13 := 9.000000
202 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
203 [-]: TEST      R2 1         ; if R2 then PC := 209
204 [-]: JMP       209          ; PC := 209
205 [-]: GETUPVAL  R11 U8       ; R11 := U8
206 [-]: GETTABLE  R11 R11 K30  ; R11 := R11["FloatingContentHighlightInt"]
207 [-]: TEST      R11 1        ; if R11 then PC := 211
208 [-]: JMP       211          ; PC := 211
209 [-]: GETUPVAL  R11 U8       ; R11 := U8
210 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["FloatingContentInt"]
211 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 216
212 [-]: JMP       216          ; PC := 216
213 [-]: GETUPVAL  R12 U9       ; R12 := U9
214 [-]: TEST      R12 0        ; if not R12 then PC := 235
215 [-]: JMP       235          ; PC := 235
216 [-]: CLOSURE   R12 0        ; R12 := closure(Function #33.1)
217 [-]: GETUPVAL  R0 U3        ; R0 := U3
218 [-]: MOVE      R0 R10       ; R0 := R10
219 [-]: MOVE      R0 R11       ; R0 := R11
220 [-]: GETGLOBAL R13 K13      ; R13 := 0x25312c9b
221 [-]: GETGLOBAL R14 K2       ; R14 := 0xae91e43b
222 [-]: LOADK     R15 K29      ; R15 := "TopAnchor.Header.Label"
223 [-]: CONST     R16 2        ; R16 := 2.000000
224 [-]: NEWTABLE  R17 2 0      ; R17 := {}
225 [-]: CONST     R18 1        ; R18 := 1.000000
226 [-]: MOVE      R19 R12      ; R19 := R12
227 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
228 [-]: NEWTABLE  R18 2 0      ; R18 := {}
229 [-]: ADD       R19 K32 R9   ; R19 := 18.000000 + R9
230 [-]: CONST     R20 1        ; R20 := 1.000000
231 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
232 [-]: MOVE      R19 R3       ; R19 := R3
233 [-]: MOVE      R20 R4       ; R20 := R4
234 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
235 [-]: GETGLOBAL R13 K2       ; R13 := 0xae91e43b
236 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13[0xaade900e]
237 [-]: LOADK     R15 K34      ; R15 := "ExpandableArea.Progression"
238 [-]: CONST     R16 11       ; R16 := 11.000000
239 [-]: MOVE      R17 R1       ; R17 := R1
240 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
241 [-]: GETGLOBAL R13 K2       ; R13 := 0xae91e43b
242 [-]: SELF      R13 R13 K6   ; R14 := R13; R13 := R13[0x67bc869f]
243 [-]: LOADK     R15 K34      ; R15 := "ExpandableArea.Progression"
244 [-]: CONST     R16 1        ; R16 := 1.000000
245 [-]: GETUPVAL  R17 U3       ; R17 := U3
246 [-]: GETTABLE  R17 R17 K8   ; R17 := R17[0x06d055f9]
247 [-]: MOVE      R18 R0       ; R18 := R0
248 [-]: CONST     R19 59       ; R19 := 59.000000
249 [-]: CONST     R20 138      ; R20 := 138.000000
250 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
251 [-]: CALL      R13 0 1      ; R13(R14,...)
252 [-]: GETGLOBAL R13 K2       ; R13 := 0xae91e43b
253 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13[0xaade900e]
254 [-]: LOADK     R15 K35      ; R15 := "ExpandableArea.PlayerInfo.PlayerStats"
255 [-]: CONST     R16 11       ; R16 := 11.000000
256 [-]: MOVE      R17 R0       ; R17 := R0
257 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
258 [-]: GETGLOBAL R13 K2       ; R13 := 0xae91e43b
259 [-]: SELF      R13 R13 K6   ; R14 := R13; R13 := R13[0x67bc869f]
260 [-]: LOADK     R15 K36      ; R15 := "ExpandableArea.PlayerInfo"
261 [-]: CONST     R16 1        ; R16 := 1.000000
262 [-]: GETUPVAL  R17 U3       ; R17 := U3
263 [-]: GETTABLE  R17 R17 K8   ; R17 := R17[0x06d055f9]
264 [-]: GETUPVAL  R18 U10      ; R18 := U10
265 [-]: CALL      R18 1 2      ; R18 := R18()
266 [-]: CONST     R19 345      ; R19 := 345.000000
267 [-]: CONST     R20 0        ; R20 := 0.000000
268 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
269 [-]: CALL      R13 0 1      ; R13(R14,...)
270 [-]: LOADKB    R13 0 0      ; R13 := false
271 [-]: SETUPVAL  R13 U9       ; U82 := R9
272 [-]: RETURN    R0 1         ; return 


; Function #33.1:
;
; Name:            
; Defined at line: 1032
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x2e5d0a79]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETUPVAL  R3 U2        ; R3 := U2
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x67bc869f]
  9 [-]: LOADK     R4 K3        ; R4 := "TopAnchor.Header.Label"
 10 [-]: CONST     R5 9         ; R5 := 9.000000
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 13 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1050
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 1       ; R2()
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R2 U2        ; R2 := U2
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1058
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x5d10207d]
  3 [-]: CONST     R1 2         ; R1 := 2.000000
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0xa5d5c8f6]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x5d10207d]
  9 [-]: CONST     R3 6         ; R3 := 6.000000
 10 [-]: LOADKB    R4 1 0       ; R4 := true
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0x5d10207d]
 14 [-]: CONST     R4 9         ; R4 := 9.000000
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: SELF      R4 R3 K2     ; R5 := R3; R4 := R3[0xa5d5c8f6]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: GETUPVAL  R5 U0        ; R5 := U0
 19 [-]: GETTABLE  R5 R5 K0     ; R5 := R5[0x5d10207d]
 20 [-]: CONST     R6 10        ; R6 := 10.000000
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: SELF      R6 R5 K2     ; R7 := R5; R6 := R5[0xa5d5c8f6]
 23 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 24 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
 25 [-]: GETUPVAL  R8 U1        ; R8 := U1
 26 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 27 [-]: TEST      R7 0         ; if not R7 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
 30 [-]: GETGLOBAL R8 K4        ; R8 := 0x1211d00f
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: TEST      R7 1         ; if R7 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R7 K4        ; R7 := 0x1211d00f
 35 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7[0x46a0ebf5]
 36 [-]: GETGLOBAL R9 K6        ; R9 := 0xe0187f16
 37 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 38 [-]: SETUPVAL  R7 U1        ; U82 := R1
 39 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
 40 [-]: GETUPVAL  R8 U1        ; R8 := U1
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 93
 43 [-]: JMP       93           ; PC := 93
 44 [-]: GETUPVAL  R7 U0        ; R7 := U0
 45 [-]: GETTABLE  R7 R7 K0     ; R7 := R7[0x5d10207d]
 46 [-]: CONST     R8 3         ; R8 := 3.000000
 47 [-]: LOADKB    R9 0 0       ; R9 := false
 48 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 49 [-]: GETUPVAL  R8 U1        ; R8 := U1
 50 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x986d2ab8]
 51 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
 52 [-]: LOADK     R11 K9       ; R11 := "TintColor"
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: GETUPVAL  R11 U2       ; R11 := U2
 55 [-]: GETTABLE  R11 R11 K10  ; R11 := R11[0x021dc4be]
 56 [-]: GETTABLE  R12 R0 K11   ; R12 := R0["red"]
 57 [-]: MUL       R12 R12 K12  ; R12 := R12 * 0.750000
 58 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 59 [-]: GETUPVAL  R12 U2       ; R12 := U2
 60 [-]: GETTABLE  R12 R12 K10  ; R12 := R12[0x021dc4be]
 61 [-]: GETTABLE  R13 R0 K13   ; R13 := R0["green"]
 62 [-]: MUL       R13 R13 K12  ; R13 := R13 * 0.750000
 63 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 64 [-]: GETUPVAL  R13 U2       ; R13 := U2
 65 [-]: GETTABLE  R13 R13 K10  ; R13 := R13[0x021dc4be]
 66 [-]: GETTABLE  R14 R0 K14   ; R14 := R0["blue"]
 67 [-]: MUL       R14 R14 K12  ; R14 := R14 * 0.750000
 68 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 69 [-]: CONST     R14 1        ; R14 := 1.000000
 70 [-]: CALL      R8 7 1       ; R8(R9,R10,R11,R12,R13,R14)
 71 [-]: GETUPVAL  R8 U1        ; R8 := U1
 72 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x986d2ab8]
 73 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
 74 [-]: LOADK     R11 K15      ; R11 := "VerticalTintColor"
 75 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 76 [-]: GETUPVAL  R11 U2       ; R11 := U2
 77 [-]: GETTABLE  R11 R11 K10  ; R11 := R11[0x021dc4be]
 78 [-]: GETTABLE  R12 R7 K11   ; R12 := R7["red"]
 79 [-]: MUL       R12 R12 K12  ; R12 := R12 * 0.750000
 80 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 81 [-]: GETUPVAL  R12 U2       ; R12 := U2
 82 [-]: GETTABLE  R12 R12 K10  ; R12 := R12[0x021dc4be]
 83 [-]: GETTABLE  R13 R7 K13   ; R13 := R7["green"]
 84 [-]: MUL       R13 R13 K12  ; R13 := R13 * 0.750000
 85 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 86 [-]: GETUPVAL  R13 U2       ; R13 := U2
 87 [-]: GETTABLE  R13 R13 K10  ; R13 := R13[0x021dc4be]
 88 [-]: GETTABLE  R14 R7 K14   ; R14 := R7["blue"]
 89 [-]: MUL       R14 R14 K12  ; R14 := R14 * 0.750000
 90 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 91 [-]: CONST     R14 1        ; R14 := 1.000000
 92 [-]: CALL      R8 7 1       ; R8(R9,R10,R11,R12,R13,R14)
 93 [-]: GETUPVAL  R8 U3        ; R8 := U3
 94 [-]: MOVE      R9 R0        ; R9 := R0
 95 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 96 [-]: MOVE      R0 R8        ; R0 := R8
 97 [-]: GETUPVAL  R8 U3        ; R8 := U3
 98 [-]: MOVE      R9 R5        ; R9 := R5
 99 [-]: CALL      R8 2 2       ; R8 := R8(R9)
100 [-]: MOVE      R5 R8        ; R5 := R8
101 [-]: NEWTABLE  R8 0 0       ; R8 := {}
102 [-]: SETUPVAL  R8 U4        ; U82 := R4
103 [-]: GETUPVAL  R8 U4        ; R8 := U4
104 [-]: GETUPVAL  R9 U3        ; R9 := U3
105 [-]: GETUPVAL  R10 U0       ; R10 := U0
106 [-]: GETTABLE  R10 R10 K0   ; R10 := R10[0x5d10207d]
107 [-]: CONST     R11 6        ; R11 := 6.000000
108 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
109 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
110 [-]: SETTABLE  R8 K16 R9    ; R8["Content"] := R9
111 [-]: GETUPVAL  R8 U4        ; R8 := U4
112 [-]: SETTABLE  R8 K17 R3    ; R8["FloatingContent"] := R3
113 [-]: GETUPVAL  R8 U4        ; R8 := U4
114 [-]: SETTABLE  R8 K18 R4    ; R8["FloatingContentInt"] := R4
115 [-]: GETUPVAL  R8 U4        ; R8 := U4
116 [-]: SETTABLE  R8 K19 R5    ; R8["FloatingContentHighlight"] := R5
117 [-]: GETUPVAL  R8 U4        ; R8 := U4
118 [-]: SETTABLE  R8 K20 R6    ; R8["FloatingContentHighlightInt"] := R6
119 [-]: GETUPVAL  R8 U4        ; R8 := U4
120 [-]: SETTABLE  R8 K21 R1    ; R8["Background1Int"] := R1
121 [-]: GETGLOBAL R8 K22       ; R8 := mMissionFailed
122 [-]: TEST      R8 0         ; if not R8 then PC := 132
123 [-]: JMP       132          ; PC := 132
124 [-]: GETUPVAL  R8 U4        ; R8 := U4
125 [-]: GETUPVAL  R9 U0        ; R9 := U0
126 [-]: GETTABLE  R9 R9 K0     ; R9 := R9[0x5d10207d]
127 [-]: CONST     R10 12       ; R10 := 12.000000
128 [-]: LOADKB    R11 1 0      ; R11 := true
129 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
130 [-]: SETTABLE  R8 K23 R9    ; R8["SuccessInt"] := R9
131 [-]: JMP       139          ; PC := 139
132 [-]: GETUPVAL  R8 U4        ; R8 := U4
133 [-]: GETUPVAL  R9 U0        ; R9 := U0
134 [-]: GETTABLE  R9 R9 K0     ; R9 := R9[0x5d10207d]
135 [-]: CONST     R10 11       ; R10 := 11.000000
136 [-]: LOADKB    R11 1 0      ; R11 := true
137 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
138 [-]: SETTABLE  R8 K23 R9    ; R8["SuccessInt"] := R9
139 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
140 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
141 [-]: LOADK     R10 K26      ; R10 := "TopAnchor.Header.Desc"
142 [-]: CONST     R11 9        ; R11 := 9.000000
143 [-]: MOVE      R12 R4       ; R12 := R4
144 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
145 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
146 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
147 [-]: LOADK     R10 K27      ; R10 := "TopAnchor.Header.DescBacker"
148 [-]: CONST     R11 9        ; R11 := 9.000000
149 [-]: MOVE      R12 R1       ; R12 := R1
150 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
151 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
152 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
153 [-]: LOADK     R10 K28      ; R10 := "TopAnchor.Header.Lines"
154 [-]: CONST     R11 9        ; R11 := 9.000000
155 [-]: MOVE      R12 R6       ; R12 := R6
156 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
157 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
158 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
159 [-]: LOADK     R10 K29      ; R10 := "TopAnchor.Header.ArrowEnds"
160 [-]: CONST     R11 9        ; R11 := 9.000000
161 [-]: MOVE      R12 R6       ; R12 := R6
162 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
163 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
164 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
165 [-]: LOADK     R10 K30      ; R10 := "TopAnchor.Header.Backer"
166 [-]: CONST     R11 9        ; R11 := 9.000000
167 [-]: MOVE      R12 R1       ; R12 := R1
168 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
169 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
170 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
171 [-]: LOADK     R10 K31      ; R10 := "BottomAnchor.NodeDetails"
172 [-]: CONST     R11 9        ; R11 := 9.000000
173 [-]: MOVE      R12 R2       ; R12 := R2
174 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
175 [-]: GETUPVAL  R8 U5        ; R8 := U5
176 [-]: TEST      R8 0         ; if not R8 then PC := 184
177 [-]: JMP       184          ; PC := 184
178 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
179 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
180 [-]: LOADK     R10 K32      ; R10 := "TopAnchor.Header.Label"
181 [-]: CONST     R11 9        ; R11 := 9.000000
182 [-]: MOVE      R12 R6       ; R12 := R6
183 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
184 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
185 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
186 [-]: LOADK     R10 K33      ; R10 := "ExpandableArea.Progression.Tile"
187 [-]: CONST     R11 10       ; R11 := 10.000000
188 [-]: CONST     R12 20       ; R12 := 20.000000
189 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
190 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
191 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
192 [-]: LOADK     R10 K33      ; R10 := "ExpandableArea.Progression.Tile"
193 [-]: CONST     R11 9        ; R11 := 9.000000
194 [-]: MOVE      R12 R4       ; R12 := R4
195 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
196 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
197 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
198 [-]: LOADK     R10 K34      ; R10 := "ExpandableArea.Progression.Lines"
199 [-]: CONST     R11 9        ; R11 := 9.000000
200 [-]: MOVE      R12 R4       ; R12 := R4
201 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
202 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
203 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
204 [-]: LOADK     R10 K34      ; R10 := "ExpandableArea.Progression.Lines"
205 [-]: CONST     R11 10       ; R11 := 10.000000
206 [-]: CONST     R12 45       ; R12 := 45.000000
207 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
208 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
209 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
210 [-]: LOADK     R10 K35      ; R10 := "ExpandableArea.Progression.Affinity.MissionTime"
211 [-]: CONST     R11 9        ; R11 := 9.000000
212 [-]: MOVE      R12 R6       ; R12 := R6
213 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
214 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
215 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
216 [-]: LOADK     R10 K36      ; R10 := "ExpandableArea.Progression.Affinity.MissionTime.Lines"
217 [-]: CONST     R11 9        ; R11 := 9.000000
218 [-]: MOVE      R12 R6       ; R12 := R6
219 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
220 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
221 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
222 [-]: LOADK     R10 K36      ; R10 := "ExpandableArea.Progression.Affinity.MissionTime.Lines"
223 [-]: CONST     R11 10       ; R11 := 10.000000
224 [-]: GETGLOBAL R12 K37      ; R12 := BORDER_ALPHA
225 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
226 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
227 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
228 [-]: LOADK     R10 K38      ; R10 := "MissionComplete.TextAnim"
229 [-]: CONST     R11 9        ; R11 := 9.000000
230 [-]: MOVE      R12 R6       ; R12 := R6
231 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
232 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
233 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
234 [-]: LOADK     R10 K39      ; R10 := "MissionComplete.ArrowEndsAnim"
235 [-]: CONST     R11 9        ; R11 := 9.000000
236 [-]: MOVE      R12 R4       ; R12 := R4
237 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
238 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
239 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
240 [-]: LOADK     R10 K40      ; R10 := "MissionComplete.LinesAnim"
241 [-]: CONST     R11 9        ; R11 := 9.000000
242 [-]: MOVE      R12 R4       ; R12 := R4
243 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
244 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
245 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
246 [-]: LOADK     R10 K41      ; R10 := "MissionComplete.BackerAnim"
247 [-]: CONST     R11 9        ; R11 := 9.000000
248 [-]: MOVE      R12 R1       ; R12 := R1
249 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
250 [-]: GETGLOBAL R8 K24       ; R8 := 0xae91e43b
251 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x67bc869f]
252 [-]: LOADK     R10 K42      ; R10 := "MissionComplete.LotusAnim"
253 [-]: CONST     R11 9        ; R11 := 9.000000
254 [-]: MOVE      R12 R1       ; R12 := R1
255 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
256 [-]: CONST     R8 1         ; R8 := 1.000000
257 [-]: GETUPVAL  R9 U6        ; R9 := U6
258 [-]: CALL      R9 1 2       ; R9 := R9()
259 [-]: LEN       R9 R9        ; R9 := # R9
260 [-]: CONST     R10 1        ; R10 := 1.000000
261 [-]: FORPREP   R8 388       ; R8 -= R10; PC := 388
262 [-]: LOADK     R12 K43      ; R12 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
263 [-]: MOVE      R13 R11      ; R13 := R11
264 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
265 [-]: GETGLOBAL R13 K44      ; R13 := 0x34291f5c
266 [-]: GETTABLE  R13 R13 K45  ; R13 := R13[0xa7a2e381]
267 [-]: CALL      R13 1 2      ; R13 := R13()
268 [-]: TEST      R13 0        ; if not R13 then PC := 299
269 [-]: JMP       299          ; PC := 299
270 [-]: GETGLOBAL R13 K24      ; R13 := 0xae91e43b
271 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0xe261aa96]
272 [-]: MOVE      R15 R12      ; R15 := R12
273 [-]: LOADK     R16 K47      ; R16 := "Name"
274 [-]: CONST     R17 41       ; R17 := 41.000000
275 [-]: LOADK     R18 K48      ; R18 := "Arial Unicode MS"
276 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
277 [-]: GETGLOBAL R13 K24      ; R13 := 0xae91e43b
278 [-]: SELF      R13 R13 K49  ; R14 := R13; R13 := R13[0xf64b7262]
279 [-]: MOVE      R15 R12      ; R15 := R12
280 [-]: LOADK     R16 K47      ; R16 := "Name"
281 [-]: CONST     R17 42       ; R17 := 42.000000
282 [-]: CONST     R18 18       ; R18 := 18.000000
283 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
284 [-]: LOADK     R13 K50      ; R13 := 1.200000
285 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
286 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0xf64b7262]
287 [-]: MOVE      R16 R12      ; R16 := R12
288 [-]: LOADK     R17 K47      ; R17 := "Name"
289 [-]: CONST     R18 5        ; R18 := 5.000000
290 [-]: MUL       R19 R13 K51  ; R19 := R13 * 100.000000
291 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
292 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
293 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0xf64b7262]
294 [-]: MOVE      R16 R12      ; R16 := R12
295 [-]: LOADK     R17 K47      ; R17 := "Name"
296 [-]: CONST     R18 6        ; R18 := 6.000000
297 [-]: MUL       R19 R13 K51  ; R19 := R13 * 100.000000
298 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
299 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
300 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0xf64b7262]
301 [-]: MOVE      R16 R12      ; R16 := R12
302 [-]: LOADK     R17 K47      ; R17 := "Name"
303 [-]: CONST     R18 9        ; R18 := 9.000000
304 [-]: MOVE      R19 R6       ; R19 := R6
305 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
306 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
307 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0xf64b7262]
308 [-]: MOVE      R16 R12      ; R16 := R12
309 [-]: LOADK     R17 K52      ; R17 := "Stat"
310 [-]: CONST     R18 9        ; R18 := 9.000000
311 [-]: MOVE      R19 R4       ; R19 := R4
312 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
313 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
314 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0xf64b7262]
315 [-]: MOVE      R16 R12      ; R16 := R12
316 [-]: LOADK     R17 K53      ; R17 := "NameBackground"
317 [-]: CONST     R18 9        ; R18 := 9.000000
318 [-]: MOVE      R19 R1       ; R19 := R1
319 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
320 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
321 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0xf64b7262]
322 [-]: MOVE      R16 R12      ; R16 := R12
323 [-]: LOADK     R17 K54      ; R17 := "StatBackground"
324 [-]: CONST     R18 9        ; R18 := 9.000000
325 [-]: MOVE      R19 R1       ; R19 := R1
326 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
327 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
328 [-]: SELF      R14 R14 K55  ; R15 := R14; R14 := R14[0x91e13703]
329 [-]: MOVE      R16 R12      ; R16 := R12
330 [-]: LOADK     R17 K56      ; R17 := ".Icon"
331 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
332 [-]: LOADK     R17 K57      ; R17 := "RectEdgeColor"
333 [-]: CONST     R18 0        ; R18 := 0.000000
334 [-]: CONST     R19 0        ; R19 := 0.000000
335 [-]: CONST     R20 0        ; R20 := 0.000000
336 [-]: CONST     R21 0        ; R21 := 0.000000
337 [-]: CALL      R14 8 1      ; R14(R15,R16,R17,R18,R19,R20,R21)
338 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
339 [-]: SELF      R14 R14 K55  ; R15 := R14; R14 := R14[0x91e13703]
340 [-]: MOVE      R16 R12      ; R16 := R12
341 [-]: LOADK     R17 K56      ; R17 := ".Icon"
342 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
343 [-]: LOADK     R17 K58      ; R17 := "RectInnerColor"
344 [-]: CONST     R18 1        ; R18 := 1.000000
345 [-]: CONST     R19 1        ; R19 := 1.000000
346 [-]: CONST     R20 1        ; R20 := 1.000000
347 [-]: CONST     R21 1        ; R21 := 1.000000
348 [-]: CALL      R14 8 1      ; R14(R15,R16,R17,R18,R19,R20,R21)
349 [-]: GETUPVAL  R14 U7       ; R14 := U7
350 [-]: EQ        0 R12 R14    ; if R12 ~= R14 then PC := 365
351 [-]: JMP       365          ; PC := 365
352 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
353 [-]: SELF      R14 R14 K55  ; R15 := R14; R14 := R14[0x91e13703]
354 [-]: MOVE      R16 R12      ; R16 := R12
355 [-]: LOADK     R17 K59      ; R17 := ".IconBacker"
356 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
357 [-]: LOADK     R17 K57      ; R17 := "RectEdgeColor"
358 [-]: GETTABLE  R18 R5 K60   ; R18 := R5["r"]
359 [-]: GETTABLE  R19 R5 K61   ; R19 := R5["g"]
360 [-]: GETTABLE  R20 R5 K62   ; R20 := R5["b"]
361 [-]: GETGLOBAL R21 K63      ; R21 := BACKER_ALPHA
362 [-]: DIV       R21 R21 K51  ; R21 := R21 / 100.000000
363 [-]: CALL      R14 8 1      ; R14(R15,R16,R17,R18,R19,R20,R21)
364 [-]: JMP       377          ; PC := 377
365 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
366 [-]: SELF      R14 R14 K55  ; R15 := R14; R14 := R14[0x91e13703]
367 [-]: MOVE      R16 R12      ; R16 := R12
368 [-]: LOADK     R17 K59      ; R17 := ".IconBacker"
369 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
370 [-]: LOADK     R17 K57      ; R17 := "RectEdgeColor"
371 [-]: GETTABLE  R18 R5 K60   ; R18 := R5["r"]
372 [-]: GETTABLE  R19 R5 K61   ; R19 := R5["g"]
373 [-]: GETTABLE  R20 R5 K62   ; R20 := R5["b"]
374 [-]: GETGLOBAL R21 K37      ; R21 := BORDER_ALPHA
375 [-]: DIV       R21 R21 K51  ; R21 := R21 / 100.000000
376 [-]: CALL      R14 8 1      ; R14(R15,R16,R17,R18,R19,R20,R21)
377 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
378 [-]: SELF      R14 R14 K55  ; R15 := R14; R14 := R14[0x91e13703]
379 [-]: MOVE      R16 R12      ; R16 := R12
380 [-]: LOADK     R17 K59      ; R17 := ".IconBacker"
381 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
382 [-]: LOADK     R17 K58      ; R17 := "RectInnerColor"
383 [-]: GETTABLE  R18 R0 K60   ; R18 := R0["r"]
384 [-]: GETTABLE  R19 R0 K61   ; R19 := R0["g"]
385 [-]: GETTABLE  R20 R0 K62   ; R20 := R0["b"]
386 [-]: CONST     R21 1        ; R21 := 1.000000
387 [-]: CALL      R14 8 1      ; R14(R15,R16,R17,R18,R19,R20,R21)
388 [-]: FORLOOP   R8 262       ; R8 += R10; if R8 <= R9 then begin PC := 262; R11 := R8 end
389 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
390 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
391 [-]: LOADK     R16 K64      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconBacker"
392 [-]: CONST     R17 9        ; R17 := 9.000000
393 [-]: MOVE      R18 R1       ; R18 := R1
394 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
395 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
396 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
397 [-]: LOADK     R16 K65      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
398 [-]: CONST     R17 9        ; R17 := 9.000000
399 [-]: MOVE      R18 R4       ; R18 := R4
400 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
401 [-]: GETUPVAL  R14 U8       ; R14 := U8
402 [-]: CALL      R14 1 1      ; R14()
403 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
404 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
405 [-]: LOADK     R16 K66      ; R16 := "FullScreenFade.Backer"
406 [-]: CONST     R17 9        ; R17 := 9.000000
407 [-]: MOVE      R18 R1       ; R18 := R1
408 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
409 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
410 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
411 [-]: LOADK     R16 K66      ; R16 := "FullScreenFade.Backer"
412 [-]: CONST     R17 10       ; R17 := 10.000000
413 [-]: GETGLOBAL R18 K63      ; R18 := BACKER_ALPHA
414 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
415 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
416 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
417 [-]: LOADK     R16 K67      ; R16 := "ExpandableArea.FullScreenFade.Backer"
418 [-]: CONST     R17 9        ; R17 := 9.000000
419 [-]: MOVE      R18 R1       ; R18 := R1
420 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
421 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
422 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
423 [-]: LOADK     R16 K67      ; R16 := "ExpandableArea.FullScreenFade.Backer"
424 [-]: CONST     R17 10       ; R17 := 10.000000
425 [-]: GETUPVAL  R18 U9       ; R18 := U9
426 [-]: GETTABLE  R18 R18 K68  ; R18 := R18[0x06d055f9]
427 [-]: GETUPVAL  R19 U10      ; R19 := U10
428 [-]: CALL      R19 1 2      ; R19 := R19()
429 [-]: CONST     R20 40       ; R20 := 40.000000
430 [-]: GETGLOBAL R21 K63      ; R21 := BACKER_ALPHA
431 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
432 [-]: CALL      R14 0 1      ; R14(R15,...)
433 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
434 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
435 [-]: LOADK     R16 K69      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
436 [-]: CONST     R17 9        ; R17 := 9.000000
437 [-]: MOVE      R18 R4       ; R18 := R4
438 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
439 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
440 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
441 [-]: LOADK     R16 K70      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
442 [-]: CONST     R17 9        ; R17 := 9.000000
443 [-]: MOVE      R18 R4       ; R18 := R4
444 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
445 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
446 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
447 [-]: LOADK     R16 K71      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
448 [-]: CONST     R17 9        ; R17 := 9.000000
449 [-]: MOVE      R18 R4       ; R18 := R4
450 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
451 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
452 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
453 [-]: LOADK     R16 K69      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
454 [-]: CONST     R17 10       ; R17 := 10.000000
455 [-]: GETGLOBAL R18 K63      ; R18 := BACKER_ALPHA
456 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
457 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
458 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
459 [-]: LOADK     R16 K70      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
460 [-]: CONST     R17 10       ; R17 := 10.000000
461 [-]: GETGLOBAL R18 K63      ; R18 := BACKER_ALPHA
462 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
463 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
464 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
465 [-]: LOADK     R16 K71      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
466 [-]: CONST     R17 10       ; R17 := 10.000000
467 [-]: GETGLOBAL R18 K63      ; R18 := BACKER_ALPHA
468 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
469 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
470 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
471 [-]: LOADK     R16 K72      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
472 [-]: CONST     R17 9        ; R17 := 9.000000
473 [-]: MOVE      R18 R4       ; R18 := R4
474 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
475 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
476 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
477 [-]: LOADK     R16 K73      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
478 [-]: CONST     R17 9        ; R17 := 9.000000
479 [-]: MOVE      R18 R4       ; R18 := R4
480 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
481 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
482 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
483 [-]: LOADK     R16 K74      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
484 [-]: CONST     R17 9        ; R17 := 9.000000
485 [-]: MOVE      R18 R1       ; R18 := R1
486 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
487 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
488 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
489 [-]: LOADK     R16 K72      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
490 [-]: CONST     R17 10       ; R17 := 10.000000
491 [-]: GETGLOBAL R18 K63      ; R18 := BACKER_ALPHA
492 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
493 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
494 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
495 [-]: LOADK     R16 K73      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
496 [-]: CONST     R17 10       ; R17 := 10.000000
497 [-]: GETGLOBAL R18 K63      ; R18 := BACKER_ALPHA
498 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
499 [-]: GETGLOBAL R14 K24      ; R14 := 0xae91e43b
500 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
501 [-]: LOADK     R16 K74      ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
502 [-]: CONST     R17 10       ; R17 := 10.000000
503 [-]: GETGLOBAL R18 K63      ; R18 := BACKER_ALPHA
504 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
505 [-]: GETGLOBAL R14 K75      ; R14 := mInitialized
506 [-]: TEST      R14 0        ; if not R14 then PC := 544
507 [-]: JMP       544          ; PC := 544
508 [-]: GETGLOBAL R14 K76      ; R14 := mAffinityGrid
509 [-]: EQ        1 R14 K77    ; if R14 == nil then PC := 517
510 [-]: JMP       517          ; PC := 517
511 [-]: GETGLOBAL R14 K76      ; R14 := mAffinityGrid
512 [-]: SELF      R14 R14 K78  ; R15 := R14; R14 := R14[0x71e9ac81]
513 [-]: LOADNIL   R16 R16      ; R16 := nil
514 [-]: LOADKB    R17 1 0      ; R17 := true
515 [-]: LOADKB    R18 1 0      ; R18 := true
516 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
517 [-]: GETGLOBAL R14 K79      ; R14 := mRewardGrid
518 [-]: EQ        1 R14 K77    ; if R14 == nil then PC := 536
519 [-]: JMP       536          ; PC := 536
520 [-]: GETGLOBAL R14 K79      ; R14 := mRewardGrid
521 [-]: SELF      R14 R14 K78  ; R15 := R14; R14 := R14[0x71e9ac81]
522 [-]: LOADNIL   R16 R16      ; R16 := nil
523 [-]: LOADKB    R17 1 0      ; R17 := true
524 [-]: LOADKB    R18 1 0      ; R18 := true
525 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
526 [-]: GETGLOBAL R14 K79      ; R14 := mRewardGrid
527 [-]: GETTABLE  R14 R14 K80  ; R14 := R14["mSortMenu"]
528 [-]: SELF      R14 R14 K78  ; R15 := R14; R14 := R14[0x71e9ac81]
529 [-]: LOADNIL   R16 R16      ; R16 := nil
530 [-]: LOADKB    R17 1 0      ; R17 := true
531 [-]: LOADKB    R18 1 0      ; R18 := true
532 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
533 [-]: GETGLOBAL R14 K81      ; R14 := mSearchBox
534 [-]: SELF      R14 R14 K78  ; R15 := R14; R14 := R14[0x71e9ac81]
535 [-]: CALL      R14 2 1      ; R14(R15)
536 [-]: GETGLOBAL R14 K82      ; R14 := mStatsGrid
537 [-]: EQ        1 R14 K77    ; if R14 == nil then PC := 544
538 [-]: JMP       544          ; PC := 544
539 [-]: GETGLOBAL R14 K82      ; R14 := mStatsGrid
540 [-]: SELF      R14 R14 K78  ; R15 := R14; R14 := R14[0x71e9ac81]
541 [-]: LOADNIL   R16 R16      ; R16 := nil
542 [-]: LOADKB    R17 1 0      ; R17 := true
543 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
544 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1183
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xd5181643]
  3 [-]: LOADK     R2 K2        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0xc35a924c
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1190
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xd5181643]
  3 [-]: LOADK     R2 K2        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
  4 [-]: LOADNIL   R3 R3        ; R3 := nil
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1198
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETGLOBAL R2 K1        ; R2 := mPulseBG
  3 [-]: SETTABLE  R1 K1 R2     ; R1["mPulseBG"] := R2
  4 [-]: GETGLOBAL R1 K1        ; R1 := mPulseBG
  5 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: LOADKB    R1 0 0       ; R1 := false
  9 [-]: GETGLOBAL R2 K1        ; R2 := mPulseBG
 10 [-]: LT        0 R2 K3      ; if R2 >= 0.000000 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADKB    R1 1 0       ; R1 := true
 13 [-]: GETGLOBAL R2 K1        ; R2 := mPulseBG
 14 [-]: MUL       R3 R0 K4     ; R3 := R0 * 4.000000
 15 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 16 [-]: SETGLOBAL R2 K1        ; mPulseBG := R2
 17 [-]: TEST      R1 0         ; if not R1 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: GETGLOBAL R2 K1        ; R2 := mPulseBG
 20 [-]: LT        0 K3 R2      ; if 0.000000 >= R2 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: CONST     R2 0         ; R2 := 0.000000
 23 [-]: SETGLOBAL R2 K1        ; mPulseBG := R2
 24 [-]: GETGLOBAL R2 K5        ; R2 := 0x9ba7909f
 25 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xb21930e8]
 26 [-]: CALL      R2 2 1       ; R2(R3)
 27 [-]: LOADNIL   R2 R2        ; R2 := nil
 28 [-]: SETGLOBAL R2 K7        ; mDioramaLevel := R2
 29 [-]: GETGLOBAL R2 K1        ; R2 := mPulseBG
 30 [-]: LT        0 K8 R2      ; if 1.000000 >= R2 then PC := 39
 31 [-]: JMP       39           ; PC := 39
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: SETGLOBAL R2 K1        ; mPulseBG := R2
 34 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 35 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x58bec6d6]
 36 [-]: CONST     R4 0         ; R4 := 0.000000
 37 [-]: CALL      R2 3 1       ; R2(R3,R4)
 38 [-]: RETURN    R0 1         ; return 
 39 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 40 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x58bec6d6]
 41 [-]: GETGLOBAL R4 K11       ; R4 := 0x5bced4c4
 42 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0xe4a5b3ca]
 43 [-]: GETGLOBAL R5 K1        ; R5 := mPulseBG
 44 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 45 [-]: SUB       R4 K8 R4     ; R4 := 1.000000 - R4
 46 [-]: CALL      R2 3 1       ; R2(R3,R4)
 47 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1225
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "_root"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 0         ; R4 := 0.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K3        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["SetButtons"]
  9 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R0 K3        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K6     ; R0 := R0[0x1c5b546f]
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 14 [-]: LOADNIL   R2 R2        ; R2 := nil
 15 [-]: CALL      R0 3 1       ; R0(R1,R2)
 16 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 17 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x32302b4a]
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1233
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["DETAILED_PREVIEW"]
  5 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ACTUAL_EOM"]
 15 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETGLOBAL R0 K4        ; R0 := 0x0032441c
 18 [-]: SETTABLE  R0 K5 K6     ; R0["NemesisEndBody"] := nil
 19 [-]: GETGLOBAL R0 K7        ; R0 := 0x7b998233
 20 [-]: GETGLOBAL R1 K8        ; R1 := 0xe7f2b02f
 21 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x565be9ee]
 22 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 23 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 24 [-]: TEST      R0 1         ; if R0 then PC := 40
 25 [-]: JMP       40           ; PC := 40
 26 [-]: GETUPVAL  R0 U2        ; R0 := U2
 27 [-]: GETTABLE  R0 R0 K10    ; R0 := R0[0xb73d420f]
 28 [-]: CALL      R0 1 2       ; R0 := R0()
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 31 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 40
 32 [-]: JMP       40           ; PC := 40
 33 [-]: GETUPVAL  R0 U2        ; R0 := U2
 34 [-]: GETTABLE  R0 R0 K10    ; R0 := R0[0xb73d420f]
 35 [-]: CALL      R0 1 2       ; R0 := R0()
 36 [-]: GETUPVAL  R1 U2        ; R1 := U2
 37 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["UI_MODE_IN_SPACE_HUB"]
 38 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 51
 39 [-]: JMP       51           ; PC := 51
 40 [-]: GETGLOBAL R0 K7        ; R0 := 0x7b998233
 41 [-]: GETGLOBAL R1 K13       ; R1 := mGameData
 42 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 43 [-]: TEST      R0 1         ; if R0 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETGLOBAL R0 K13       ; R0 := mGameData
 46 [-]: SELF      R0 R0 K14    ; R1 := R0; R0 := R0[0xa2ce04d3]
 47 [-]: CALL      R0 2 1       ; R0(R1)
 48 [-]: GETGLOBAL R0 K13       ; R0 := mGameData
 49 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0[0xa06ff1bf]
 50 [-]: CALL      R0 2 1       ; R0(R1)
 51 [-]: GETGLOBAL R0 K0        ; R0 := _T
 52 [-]: SETTABLE  R0 K16 K17   ; R0["hasMissionStats"] := false
 53 [-]: GETGLOBAL R0 K18       ; R0 := mInitialized
 54 [-]: TEST      R0 0         ; if not R0 then PC := 75
 55 [-]: JMP       75           ; PC := 75
 56 [-]: LOADKB    R0 1 0       ; R0 := true
 57 [-]: SETGLOBAL R0 K19       ; mInputBlocked := R0
 58 [-]: GETGLOBAL R0 K0        ; R0 := _T
 59 [-]: GETTABLE  R0 R0 K20    ; R0 := R0["IsInScreenStack"]
 60 [-]: TEST      R0 0         ; if not R0 then PC := 73
 61 [-]: JMP       73           ; PC := 73
 62 [-]: GETGLOBAL R0 K0        ; R0 := _T
 63 [-]: GETTABLE  R0 R0 K21    ; R0 := R0[0x1c5b5b33]
 64 [-]: LOADK     R1 K22       ; R1 := "EndOfMatch"
 65 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 66 [-]: TEST      R0 0         ; if not R0 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: GETGLOBAL R0 K0        ; R0 := _T
 69 [-]: GETTABLE  R0 R0 K23    ; R0 := R0[0x5e99b976]
 70 [-]: LOADK     R1 K22       ; R1 := "EndOfMatch"
 71 [-]: CALL      R0 2 1       ; R0(R1)
 72 [-]: JMP       75           ; PC := 75
 73 [-]: GETUPVAL  R0 U1        ; R0 := U1
 74 [-]: CALL      R0 1 1       ; R0()
 75 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1259
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mDioramaLevel
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: LOADNIL   R0 R0        ; R0 := nil
  5 [-]: SETGLOBAL R0 K0        ; mDioramaLevel := R0
  6 [-]: CONST     R0 -1        ; R0 := -1.000000
  7 [-]: SETGLOBAL R0 K1        ; mPulseBG := R0
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0xb693b6c1
 10 [-]: CALL      R1 1 0       ; R1,... := R1()
 11 [-]: CALL      R0 0 1       ; R0(R1,...)
 12 [-]: GETGLOBAL R0 K3        ; R0 := 0x9ba7909f
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xb21930e8]
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1270
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mInputBlocked := R0
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xcdc34211]
  5 [-]: CALL      R0 1 2       ; R0 := R0()
  6 [-]: TEST      R0 1         ; if R0 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x0032441c
  9 [-]: SETTABLE  R1 K3 K4     ; R1["NemesisEndBody"] := nil
 10 [-]: TEST      R0 1         ; if R0 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K5        ; R1 := mOpenedFromPauseMenu
 13 [-]: TEST      R1 0         ; if not R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 16 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x32302b4a]
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: TEST      R0 1         ; if R0 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: CALL      R1 1 1       ; R1()
 23 [-]: GETGLOBAL R1 K8        ; R1 := _T
 24 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["GoToPreviousScreen"]
 25 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 51
 26 [-]: JMP       51           ; PC := 51
 27 [-]: GETGLOBAL R1 K8        ; R1 := _T
 28 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["eomScreenMode"]
 29 [-]: GETUPVAL  R2 U2        ; R2 := U2
 30 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["ACTUAL_EOM"]
 31 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETGLOBAL R1 K8        ; R1 := _T
 34 [-]: GETTABLE  R1 R1 K12    ; R1 := R1[0x1c5b5b33]
 35 [-]: LOADK     R2 K13       ; R2 := "MissionStats"
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: TEST      R1 0         ; if not R1 then PC := 48
 38 [-]: JMP       48           ; PC := 48
 39 [-]: GETGLOBAL R1 K14       ; R1 := 0x7b998233
 40 [-]: GETGLOBAL R2 K15       ; R2 := 0xbe190284
 41 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 42 [-]: TEST      R1 1         ; if R1 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R1 K8        ; R1 := _T
 45 [-]: GETTABLE  R1 R1 K16    ; R1 := R1[0x4e4e6b0c]
 46 [-]: CALL      R1 1 1       ; R1()
 47 [-]: JMP       59           ; PC := 59
 48 [-]: GETUPVAL  R1 U1        ; R1 := U1
 49 [-]: CALL      R1 1 1       ; R1()
 50 [-]: JMP       59           ; PC := 59
 51 [-]: TEST      R0 0         ; if not R0 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 54 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x32302b4a]
 55 [-]: CALL      R1 2 1       ; R1(R2)
 56 [-]: JMP       59           ; PC := 59
 57 [-]: GETUPVAL  R1 U1        ; R1 := U1
 58 [-]: CALL      R1 1 1       ; R1()
 59 [-]: GETUPVAL  R1 U3        ; R1 := U3
 60 [-]: GETTABLE  R1 R1 K17    ; R1 := R1[0x659d451f]
 61 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 62 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["UISound_GridOpenTwo"]
 63 [-]: CALL      R1 2 1       ; R1(R2)
 64 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1300
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1305
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADKB    R2 1 0       ; R2 := true
  2 [-]: GETGLOBAL R3 K0        ; R3 := mPlayerMissionInfo
  3 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 18
  4 [-]: JMP       18           ; PC := 18
  5 [-]: GETGLOBAL R3 K2        ; R3 := mArchWingRequired
  6 [-]: TEST      R3 0         ; if not R3 then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: EQ        1 R0 K4      ; if R0 == 2.000000 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETGLOBAL R3 K0        ; R3 := mPlayerMissionInfo
 11 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x438225b2]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: MOVE      R6 R1        ; R6 := R1
 14 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 15 [-]: EQ        0 R3 K6      ; if R3 ~= 0.000000 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADKB    R2 0 0       ; R2 := false
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1313
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADKB    R1 0 0       ; R1 := false
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
 11 [-]: EQ        0 R1 K3      ; if R1 ~= 28.000000 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["sortieId"]
 14 [-]: EQ        0 R1 K5      ; if R1 ~= "" then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["goalTag"]
 17 [-]: GETGLOBAL R2 K7        ; R2 := EMPTY_SYMBOL
 18 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 21
 21 [-]: LOADKB    R1 1 0       ; R1 := true
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1322
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADKB    R1 0 0       ; R1 := false
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
 11 [-]: EQ        1 R1 K3      ; if R1 == 31.000000 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 14
 14 [-]: LOADKB    R1 1 0       ; R1 := true
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1331
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWaitingForMissionComplete
  2 [-]: TEST      R0 1         ; if R0 then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R0 K1        ; R0 := mWaitingForReturnToShip
  5 [-]: TEST      R0 0         ; if not R0 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETGLOBAL R0 K2        ; R0 := mShouldClose
  8 [-]: TEST      R0 0         ; if not R0 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETGLOBAL R0 K3        ; R0 := mAutoCloseDelay
 11 [-]: EQ        1 R0 K4      ; if R0 == -1.000000 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADKB    R0 1 0       ; R0 := true
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: GETTABLE  R0 R0 K5     ; R0 := R0[0xcdc34211]
 17 [-]: CALL      R0 1 2       ; R0 := R0()
 18 [-]: TEST      R0 0         ; if not R0 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETGLOBAL R0 K6        ; R0 := 0xbe190284
 21 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x5d204145]
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: CALL      R1 1 2       ; R1 := R1()
 25 [-]: TEST      R1 0         ; if not R1 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: NOT       R1 R0        ; R1 :=  R0
 28 [-]: GETUPVAL  R2 U2        ; R2 := U2
 29 [-]: CALL      R2 1 2       ; R2 := R2()
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K5     ; R3 := R3[0xcdc34211]
 32 [-]: CALL      R3 1 2       ; R3 := R3()
 33 [-]: TEST      R3 0         ; if not R3 then PC := 56
 34 [-]: JMP       56           ; PC := 56
 35 [-]: TEST      R1 1         ; if R1 then PC := 54
 36 [-]: JMP       54           ; PC := 54
 37 [-]: TEST      R2 0         ; if not R2 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: TESTSET   R3 R0 0      ; if not R0 then PC := 56 else R3 := R0
 40 [-]: JMP       56           ; PC := 56
 41 [-]: TESTSET   R3 R0 1      ; if R0 then PC := 56 else R3 := R0
 42 [-]: JMP       56           ; PC := 56
 43 [-]: GETGLOBAL R3 K6        ; R3 := 0xbe190284
 44 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x3790d299]
 45 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 46 [-]: TEST      R3 1         ; if R3 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETGLOBAL R3 K9        ; R3 := _T
 49 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["eomScreenMode"]
 50 [-]: GETUPVAL  R4 U3        ; R4 := U3
 51 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["ACTUAL_EOM"]
 52 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 55
 55 [-]: LOADKB    R3 1 0       ; R3 := true
 56 [-]: RETURN    R3 2         ; return R3
 57 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1344
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 1         ; if R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1351
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xaade900e]
  3 [-]: LOADK     R3 K2        ; R3 := "TopAnchor.Header"
  4 [-]: CONST     R4 11        ; R4 := 11.000000
  5 [-]: GETGLOBAL R5 K3        ; R5 := ScreenType
  6 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["MASTERY"]
  7 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 10
 10 [-]: LOADKB    R5 1 0       ; R5 := true
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 13 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xaade900e]
 14 [-]: LOADK     R3 K5        ; R3 := "ExpandableArea"
 15 [-]: CONST     R4 11        ; R4 := 11.000000
 16 [-]: GETGLOBAL R5 K3        ; R5 := ScreenType
 17 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["ITEMS"]
 18 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R5 K3        ; R5 := ScreenType
 21 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["REP"]
 22 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 25
 25 [-]: LOADKB    R5 1 0       ; R5 := true
 26 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 27 [-]: GETGLOBAL R1 K8        ; R1 := 0x7b998233
 28 [-]: GETGLOBAL R2 K9        ; R2 := mPvpMovie
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: TEST      R1 1         ; if R1 then PC := 52
 31 [-]: JMP       52           ; PC := 52
 32 [-]: GETGLOBAL R1 K3        ; R1 := ScreenType
 33 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["SCOREBOARD"]
 34 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 37
 37 [-]: LOADKB    R1 1 0       ; R1 := true
 38 [-]: GETGLOBAL R2 K9        ; R2 := mPvpMovie
 39 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x368ad758]
 40 [-]: MOVE      R4 R1        ; R4 := R1
 41 [-]: CALL      R2 3 1       ; R2(R3,R4)
 42 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 43 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0xbc838db9]
 44 [-]: MOVE      R4 R1        ; R4 := R1
 45 [-]: CALL      R2 3 1       ; R2(R3,R4)
 46 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 47 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xaade900e]
 48 [-]: LOADK     R4 K13       ; R4 := "FullScreenFade"
 49 [-]: CONST     R5 11        ; R5 := 11.000000
 50 [-]: MOVE      R6 R1        ; R6 := R1
 51 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 52 [-]: SETGLOBAL R0 K14       ; mCurrentScreenType := R0
 53 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1365
; #Upvalues:       18
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SetButtons"]
  7 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETGLOBAL R1 K3        ; R1 := mWaitingForMissionComplete
 10 [-]: TEST      R1 1         ; if R1 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0xbe190284
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R1 K0        ; R1 := _T
 18 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["eomScreenMode"]
 19 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: LOADKB    R1 1 0       ; R1 := true
 22 [-]: SETGLOBAL R1 K7        ; mQueueUpdateButtons := R1
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R1 K7        ; R1 := mQueueUpdateButtons
 25 [-]: TEST      R1 0         ; if not R1 then PC := 43
 26 [-]: JMP       43           ; PC := 43
 27 [-]: GETGLOBAL R1 K8        ; R1 := 0x9ba7909f
 28 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xbcfb64ab]
 29 [-]: GETGLOBAL R3 K10       ; R3 := 0x0032441c
 30 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["UIMovie_DetailedPurchaseDialog"]
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 33 [-]: MOVE      R3 R1        ; R3 := R1
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 1         ; if R2 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: SELF      R2 R1 K12    ; R3 := R1; R2 := R1[0x32302b4a]
 38 [-]: CALL      R2 2 1       ; R2(R3)
 39 [-]: GETUPVAL  R2 U1        ; R2 := U1
 40 [-]: CALL      R2 1 1       ; R2()
 41 [-]: GETUPVAL  R2 U2        ; R2 := U2
 42 [-]: CALL      R2 1 1       ; R2()
 43 [-]: LOADKB    R2 0 0       ; R2 := false
 44 [-]: SETGLOBAL R2 K7        ; mQueueUpdateButtons := R2
 45 [-]: GETUPVAL  R2 U3        ; R2 := U3
 46 [-]: TEST      R2 0         ; if not R2 then PC := 57
 47 [-]: JMP       57           ; PC := 57
 48 [-]: GETGLOBAL R2 K0        ; R2 := _T
 49 [-]: GETTABLE  R2 R2 K13    ; R2 := R2[0x1c5b546f]
 50 [-]: GETGLOBAL R3 K14       ; R3 := 0xae91e43b
 51 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 52 [-]: GETGLOBAL R5 K15       ; R5 := 0xcd0165a3
 53 [-]: CONST     R6 1         ; R6 := 1.000000
 54 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 55 [-]: CALL      R2 0 1       ; R2(R3,...)
 56 [-]: RETURN    R0 1         ; return 
 57 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 58 [-]: GETUPVAL  R3 U4        ; R3 := U4
 59 [-]: GETTABLE  R3 R3 K16    ; R3 := R3[0xcdc34211]
 60 [-]: CALL      R3 1 2       ; R3 := R3()
 61 [-]: GETUPVAL  R4 U4        ; R4 := U4
 62 [-]: GETTABLE  R4 R4 K17    ; R4 := R4[0xf2104b9a]
 63 [-]: CALL      R4 1 2       ; R4 := R4()
 64 [-]: GETUPVAL  R5 U5        ; R5 := U5
 65 [-]: CALL      R5 1 2       ; R5 := R5()
 66 [-]: TEST      R5 1         ; if R5 then PC := 128
 67 [-]: JMP       128          ; PC := 128
 68 [-]: GETGLOBAL R5 K18       ; R5 := mCurrentScreenType
 69 [-]: GETGLOBAL R6 K19       ; R6 := ScreenType
 70 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["KAHL"]
 71 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 128
 72 [-]: JMP       128          ; PC := 128
 73 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 74 [-]: GETGLOBAL R6 K21       ; R6 := mPvpMovie
 75 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 76 [-]: TEST      R5 1         ; if R5 then PC := 104
 77 [-]: JMP       104          ; PC := 104
 78 [-]: GETGLOBAL R5 K18       ; R5 := mCurrentScreenType
 79 [-]: GETGLOBAL R6 K19       ; R6 := ScreenType
 80 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["SCOREBOARD"]
 81 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 104
 82 [-]: JMP       104          ; PC := 104
 83 [-]: GETUPVAL  R5 U6        ; R5 := U6
 84 [-]: TEST      R5 1         ; if R5 then PC := 104
 85 [-]: JMP       104          ; PC := 104
 86 [-]: GETGLOBAL R5 K14       ; R5 := 0xae91e43b
 87 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0x42b04007]
 88 [-]: LOADK     R7 K24       ; R7 := "/Lotus/Language/Labels/EOM_PVP_Stats"
 89 [-]: LOADKB    R8 1 0       ; R8 := true
 90 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 91 [-]: GETGLOBAL R6 K25       ; R6 := 0x33bdd652
 92 [-]: GETTABLE  R6 R6 K26    ; R6 := R6[0x23d5322f]
 93 [-]: MOVE      R7 R2        ; R7 := R2
 94 [-]: NEWTABLE  R8 0 3       ; R8 := {}
 95 [-]: SETTABLE  R8 K27 R5    ; R8["Label"] := R5
 96 [-]: CLOSURE   R9 0         ; R9 := closure(Function #50.1)
 97 [-]: GETUPVAL  R0 U7        ; R0 := U7
 98 [-]: GETUPVAL  R0 U8        ; R0 := U8
 99 [-]: GETUPVAL  R0 U9        ; R0 := U9
100 [-]: SETTABLE  R8 K28 R9    ; R8["CallBack"] := R9
101 [-]: SETTABLE  R8 K29 K30   ; R8["CallOut"] := "MENU_RTRIGGER1"
102 [-]: CALL      R6 3 1       ; R6(R7,R8)
103 [-]: JMP       128          ; PC := 128
104 [-]: GETGLOBAL R6 K14       ; R6 := 0xae91e43b
105 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0x42b04007]
106 [-]: GETUPVAL  R8 U6        ; R8 := U6
107 [-]: TEST      R8 0         ; if not R8 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: LOADK     R8 K31       ; R8 := "/Lotus/Language/Labels/EOM_Progression"
110 [-]: TEST      R8 1         ; if R8 then PC := 113
111 [-]: JMP       113          ; PC := 113
112 [-]: LOADK     R8 K32       ; R8 := "/Lotus/Language/Labels/EOM_Stats"
113 [-]: LOADKB    R9 1 0       ; R9 := true
114 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
115 [-]: GETGLOBAL R7 K25       ; R7 := 0x33bdd652
116 [-]: GETTABLE  R7 R7 K26    ; R7 := R7[0x23d5322f]
117 [-]: MOVE      R8 R2        ; R8 := R2
118 [-]: NEWTABLE  R9 0 3       ; R9 := {}
119 [-]: SETTABLE  R9 K27 R6    ; R9["Label"] := R6
120 [-]: CLOSURE   R10 1        ; R10 := closure(Function #50.2)
121 [-]: GETUPVAL  R0 U6        ; R0 := U6
122 [-]: GETUPVAL  R0 U7        ; R0 := U7
123 [-]: GETUPVAL  R0 U8        ; R0 := U8
124 [-]: GETUPVAL  R0 U9        ; R0 := U9
125 [-]: SETTABLE  R9 K28 R10   ; R9["CallBack"] := R10
126 [-]: SETTABLE  R9 K29 K30   ; R9["CallOut"] := "MENU_RTRIGGER1"
127 [-]: CALL      R7 3 1       ; R7(R8,R9)
128 [-]: GETUPVAL  R7 U10       ; R7 := U10
129 [-]: EQ        1 R7 K33     ; if R7 == "" then PC := 142
130 [-]: JMP       142          ; PC := 142
131 [-]: GETGLOBAL R7 K25       ; R7 := 0x33bdd652
132 [-]: GETTABLE  R7 R7 K26    ; R7 := R7[0x23d5322f]
133 [-]: MOVE      R8 R2        ; R8 := R2
134 [-]: NEWTABLE  R9 0 3       ; R9 := {}
135 [-]: SETTABLE  R9 K27 K34   ; R9["Label"] := "/Lotus/Language/Menu/LastMissionFailReason"
136 [-]: CLOSURE   R10 2        ; R10 := closure(Function #50.3)
137 [-]: GETUPVAL  R0 U11       ; R0 := U11
138 [-]: GETUPVAL  R0 U10       ; R0 := U10
139 [-]: SETTABLE  R9 K28 R10   ; R9["CallBack"] := R10
140 [-]: SETTABLE  R9 K29 K35   ; R9["CallOut"] := "MENU_GENERIC2"
141 [-]: CALL      R7 3 1       ; R7(R8,R9)
142 [-]: TEST      R4 1         ; if R4 then PC := 220
143 [-]: JMP       220          ; PC := 220
144 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
145 [-]: GETGLOBAL R8 K36       ; R8 := mGameData
146 [-]: CALL      R7 2 2       ; R7 := R7(R8)
147 [-]: TEST      R7 1         ; if R7 then PC := 220
148 [-]: JMP       220          ; PC := 220
149 [-]: GETGLOBAL R7 K36       ; R7 := mGameData
150 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7[0x4b0ebe0c]
151 [-]: CALL      R7 2 2       ; R7 := R7(R8)
152 [-]: EQ        1 R7 K33     ; if R7 == "" then PC := 220
153 [-]: JMP       220          ; PC := 220
154 [-]: GETUPVAL  R7 U12       ; R7 := U12
155 [-]: CALL      R7 1 2       ; R7 := R7()
156 [-]: LOADKB    R8 1 0       ; R8 := true
157 [-]: GETGLOBAL R9 K4        ; R9 := 0x7b998233
158 [-]: GETTABLE  R10 R7 K38   ; R10 := R7["periodicMissionTag"]
159 [-]: CALL      R9 2 2       ; R9 := R9(R10)
160 [-]: TEST      R9 1         ; if R9 then PC := 168
161 [-]: JMP       168          ; PC := 168
162 [-]: GETGLOBAL R9 K39       ; R9 := 0x25d99d89
163 [-]: SELF      R9 R9 K40    ; R10 := R9; R9 := R9[0xc3150d06]
164 [-]: GETTABLE  R11 R7 K38   ; R11 := R7["periodicMissionTag"]
165 [-]: GETTABLE  R12 R7 K41   ; R12 := R7["periodicMissionCooldown"]
166 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
167 [-]: MOVE      R8 R9        ; R8 := R9
168 [-]: GETTABLE  R9 R7 K42    ; R9 := R7["missionType"]
169 [-]: EQ        1 R9 K44     ; if R9 == 28.000000 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 172
172 [-]: LOADKB    R9 1 0       ; R9 := true
173 [-]: GETTABLE  R10 R7 K45   ; R10 := R7["levelOverride"]
174 [-]: GETGLOBAL R11 K4       ; R11 := 0x7b998233
175 [-]: MOVE      R12 R10      ; R12 := R10
176 [-]: CALL      R11 2 2      ; R11 := R11(R12)
177 [-]: TEST      R11 1        ; if R11 then PC := 197
178 [-]: JMP       197          ; PC := 197
179 [-]: GETGLOBAL R11 K46      ; R11 := 0x7f5022cf
180 [-]: GETTABLE  R11 R11 K47  ; R11 := R11[0xa5c556b9]
181 [-]: GETGLOBAL R12 K48      ; R12 := 0x64fb1586
182 [-]: SELF      R13 R10 K49  ; R14 := R10; R13 := R10[0xed4e0128]
183 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
184 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
185 [-]: LOADK     R13 K50      ; R13 := "Zariman"
186 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
187 [-]: EQ        1 R11 K2     ; if R11 == nil then PC := 197
188 [-]: JMP       197          ; PC := 197
189 [-]: GETUPVAL  R11 U4       ; R11 := U4
190 [-]: GETTABLE  R11 R11 K51  ; R11 := R11[0xb73d420f]
191 [-]: CALL      R11 1 2      ; R11 := R11()
192 [-]: GETUPVAL  R12 U4       ; R12 := U4
193 [-]: GETTABLE  R12 R12 K52  ; R12 := R12["UI_MODE_IN_SPACE_HUB"]
194 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 197
195 [-]: JMP       197          ; PC := 197
196 [-]: LOADKB    R9 1 0       ; R9 := true
197 [-]: TEST      R8 0         ; if not R8 then PC := 220
198 [-]: JMP       220          ; PC := 220
199 [-]: GETTABLE  R11 R7 K53   ; R11 := R7["goalTag"]
200 [-]: GETGLOBAL R12 K54      ; R12 := 0x0469f296
201 [-]: LOADK     R13 K55      ; R13 := "TreasureHunt"
202 [-]: CALL      R12 2 2      ; R12 := R12(R13)
203 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 220
204 [-]: JMP       220          ; PC := 220
205 [-]: TEST      R9 1         ; if R9 then PC := 220
206 [-]: JMP       220          ; PC := 220
207 [-]: GETGLOBAL R11 K0       ; R11 := _T
208 [-]: GETTABLE  R11 R11 K56  ; R11 := R11["HasDailyTribute"]
209 [-]: TEST      R11 1        ; if R11 then PC := 220
210 [-]: JMP       220          ; PC := 220
211 [-]: GETGLOBAL R11 K25      ; R11 := 0x33bdd652
212 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0x23d5322f]
213 [-]: MOVE      R12 R2       ; R12 := R2
214 [-]: NEWTABLE  R13 0 3      ; R13 := {}
215 [-]: SETTABLE  R13 K27 K57  ; R13["Label"] := "/Lotus/Language/Menu/PlayLastMission"
216 [-]: GETUPVAL  R14 U13      ; R14 := U13
217 [-]: SETTABLE  R13 K28 R14  ; R13["CallBack"] := R14
218 [-]: SETTABLE  R13 K29 K58  ; R13["CallOut"] := "MENU_GENERIC1"
219 [-]: CALL      R11 3 1      ; R11(R12,R13)
220 [-]: GETGLOBAL R11 K0       ; R11 := _T
221 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["eomScreenMode"]
222 [-]: GETUPVAL  R12 U14      ; R12 := U14
223 [-]: GETTABLE  R12 R12 K59  ; R12 := R12["DETAILED_PREVIEW"]
224 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 235
225 [-]: JMP       235          ; PC := 235
226 [-]: GETGLOBAL R11 K25      ; R11 := 0x33bdd652
227 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0x23d5322f]
228 [-]: MOVE      R12 R2       ; R12 := R2
229 [-]: NEWTABLE  R13 0 3      ; R13 := {}
230 [-]: SETTABLE  R13 K27 K60  ; R13["Label"] := "/Lotus/Language/Menu/Global_Back"
231 [-]: CLOSURE   R14 3        ; R14 := closure(Function #50.4)
232 [-]: SETTABLE  R13 K28 R14  ; R13["CallBack"] := R14
233 [-]: SETTABLE  R13 K29 K61  ; R13["CallOut"] := "MENU_CANCEL"
234 [-]: CALL      R11 3 1      ; R11(R12,R13)
235 [-]: TEST      R3 0         ; if not R3 then PC := 250
236 [-]: JMP       250          ; PC := 250
237 [-]: GETUPVAL  R11 U15      ; R11 := U15
238 [-]: CALL      R11 1 2      ; R11 := R11()
239 [-]: TEST      R11 1        ; if R11 then PC := 245
240 [-]: JMP       245          ; PC := 245
241 [-]: GETUPVAL  R11 U16      ; R11 := U16
242 [-]: CALL      R11 1 2      ; R11 := R11()
243 [-]: TEST      R11 0        ; if not R11 then PC := 266
244 [-]: JMP       266          ; PC := 266
245 [-]: GETGLOBAL R11 K5       ; R11 := 0xbe190284
246 [-]: SELF      R11 R11 K62  ; R12 := R11; R11 := R11[0x5d204145]
247 [-]: CALL      R11 2 2      ; R11 := R11(R12)
248 [-]: TEST      R11 1        ; if R11 then PC := 266
249 [-]: JMP       266          ; PC := 266
250 [-]: GETGLOBAL R11 K0       ; R11 := _T
251 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["eomScreenMode"]
252 [-]: GETUPVAL  R12 U14      ; R12 := U14
253 [-]: GETTABLE  R12 R12 K63  ; R12 := R12["ACTUAL_EOM"]
254 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 266
255 [-]: JMP       266          ; PC := 266
256 [-]: GETGLOBAL R11 K25      ; R11 := 0x33bdd652
257 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0x23d5322f]
258 [-]: MOVE      R12 R2       ; R12 := R2
259 [-]: NEWTABLE  R13 0 4      ; R13 := {}
260 [-]: SETTABLE  R13 K27 K64  ; R13["Label"] := "/Lotus/Language/Menu/Exit"
261 [-]: CLOSURE   R14 4        ; R14 := closure(Function #50.5)
262 [-]: SETTABLE  R13 K28 R14  ; R13["CallBack"] := R14
263 [-]: SETTABLE  R13 K29 K61  ; R13["CallOut"] := "MENU_CANCEL"
264 [-]: SETTABLE  R13 K65 R0   ; R13["Pulse"] := R0
265 [-]: CALL      R11 3 1      ; R11(R12,R13)
266 [-]: GETUPVAL  R11 U17      ; R11 := U17
267 [-]: CALL      R11 1 2      ; R11 := R11()
268 [-]: TEST      R11 0        ; if not R11 then PC := 292
269 [-]: JMP       292          ; PC := 292
270 [-]: TEST      R3 0         ; if not R3 then PC := 292
271 [-]: JMP       292          ; PC := 292
272 [-]: GETGLOBAL R11 K0       ; R11 := _T
273 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["eomScreenMode"]
274 [-]: GETUPVAL  R12 U14      ; R12 := U14
275 [-]: GETTABLE  R12 R12 K63  ; R12 := R12["ACTUAL_EOM"]
276 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 292
277 [-]: JMP       292          ; PC := 292
278 [-]: GETGLOBAL R11 K66      ; R11 := 0x89326c93
279 [-]: SELF      R11 R11 K67  ; R12 := R11; R11 := R11[0x18d05d30]
280 [-]: CALL      R11 2 2      ; R11 := R11(R12)
281 [-]: TEST      R11 1        ; if R11 then PC := 292
282 [-]: JMP       292          ; PC := 292
283 [-]: GETGLOBAL R11 K25      ; R11 := 0x33bdd652
284 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0x23d5322f]
285 [-]: MOVE      R12 R2       ; R12 := R2
286 [-]: NEWTABLE  R13 0 3      ; R13 := {}
287 [-]: SETTABLE  R13 K27 K68  ; R13["Label"] := "/Lotus/Language/Menu/ExitArenaUpperCase"
288 [-]: CLOSURE   R14 5        ; R14 := closure(Function #50.6)
289 [-]: SETTABLE  R13 K28 R14  ; R13["CallBack"] := R14
290 [-]: SETTABLE  R13 K29 K61  ; R13["CallOut"] := "MENU_CANCEL"
291 [-]: CALL      R11 3 1      ; R11(R12,R13)
292 [-]: TEST      R3 0         ; if not R3 then PC := 314
293 [-]: JMP       314          ; PC := 314
294 [-]: GETGLOBAL R11 K0       ; R11 := _T
295 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["eomScreenMode"]
296 [-]: GETUPVAL  R12 U14      ; R12 := U14
297 [-]: GETTABLE  R12 R12 K63  ; R12 := R12["ACTUAL_EOM"]
298 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 314
299 [-]: JMP       314          ; PC := 314
300 [-]: GETGLOBAL R11 K18      ; R11 := mCurrentScreenType
301 [-]: GETGLOBAL R12 K19      ; R12 := ScreenType
302 [-]: GETTABLE  R12 R12 K69  ; R12 := R12["MASTERY"]
303 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 314
304 [-]: JMP       314          ; PC := 314
305 [-]: GETGLOBAL R11 K25      ; R11 := 0x33bdd652
306 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0x23d5322f]
307 [-]: MOVE      R12 R2       ; R12 := R2
308 [-]: NEWTABLE  R13 0 3      ; R13 := {}
309 [-]: SETTABLE  R13 K27 K70  ; R13["Label"] := "/Lotus/Language/Menu/Badlands_Continue"
310 [-]: CLOSURE   R14 6        ; R14 := closure(Function #50.7)
311 [-]: SETTABLE  R13 K28 R14  ; R13["CallBack"] := R14
312 [-]: SETTABLE  R13 K29 K71  ; R13["CallOut"] := "MENU_SELECT"
313 [-]: CALL      R11 3 1      ; R11(R12,R13)
314 [-]: GETGLOBAL R11 K0       ; R11 := _T
315 [-]: GETTABLE  R11 R11 K13  ; R11 := R11[0x1c5b546f]
316 [-]: GETGLOBAL R12 K14      ; R12 := 0xae91e43b
317 [-]: MOVE      R13 R2       ; R13 := R2
318 [-]: GETGLOBAL R14 K15      ; R14 := 0xcd0165a3
319 [-]: CONST     R15 1        ; R15 := 1.000000
320 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
321 [-]: CALL      R11 0 1      ; R11(R12,...)
322 [-]: RETURN    R0 1         ; return 


; Function #50.1:
;
; Name:            
; Defined at line: 1398
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K0        ; R1 := ScreenType
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SCOREBOARD"]
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: RETURN    R0 1         ; return 


; Function #50.2:
;
; Name:            
; Defined at line: 1406
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: NOT       R0 R0        ; R0 :=  R0
  3 [-]: SETUPVAL  R0 U0        ; U82 := R0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETGLOBAL R1 K0        ; R1 := ScreenType
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["REP"]
  7 [-]: CALL      R0 2 1       ; R0(R1)
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: CALL      R0 1 1       ; R0()
 10 [-]: GETUPVAL  R0 U3        ; R0 := U3
 11 [-]: CALL      R0 1 1       ; R0()
 12 [-]: RETURN    R0 1         ; return 


; Function #50.3:
;
; Name:            
; Defined at line: 1416
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe0cba3ca]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #50.4:
;
; Name:            
; Defined at line: 1440
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xe4162eed]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_CANCEL"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #50.5:
;
; Name:            
; Defined at line: 1444
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xe4162eed]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_CANCEL"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #50.6:
;
; Name:            
; Defined at line: 1448
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xe4162eed]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_CANCEL"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #50.7:
;
; Name:            
; Defined at line: 1452
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xe4162eed]
  3 [-]: LOADK     R2 K2        ; R2 := "AutoClose"
  4 [-]: LOADK     R3 K3        ; R3 := "0"
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1458
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0x89326c93
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xfb64e76c]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: LOADNIL   R1 R1        ; R1 := nil
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0xcdc34211]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 0         ; if not R2 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0xa534c3ac]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: MOVE      R1 R2        ; R1 := R2
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x6ef45ebc]
 28 [-]: CALL      R2 1 2       ; R2 := R2()
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 48
 34 [-]: JMP       48           ; PC := 48
 35 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0xf2deaf69]
 36 [-]: GETGLOBAL R4 K7        ; R4 := gLotusNpcAvatarType
 37 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 38 [-]: TEST      R2 0         ; if not R2 then PC := 48
 39 [-]: JMP       48           ; PC := 48
 40 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xd4f67d6e]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 43 [-]: MOVE      R4 R2        ; R4 := R2
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: MOVE      R1 R2        ; R1 := R2
 48 [-]: RETURN    R1 2         ; return R1
 49 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1480
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0eb34c69]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x0469f296
  4 [-]: LOADK     R3 K3        ; R3 := "Team1Score"
  5 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0xbe190284
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x0eb34c69]
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0x0469f296
 10 [-]: LOADK     R4 K4        ; R4 := "Team2Score"
 11 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0x808b79e6]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETGLOBAL R4 K2        ; R4 := 0x0469f296
 23 [-]: LOADK     R5 K7        ; R5 := "Team1"
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 28
 28 [-]: LOADKB    R3 1 0       ; R3 := true
 29 [-]: TEST      R3 0         ; if not R3 then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: LT        1 R1 R0      ; if R1 < R0 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 34
 34 [-]: LOADKB    R4 1 0       ; R4 := true
 35 [-]: RETURN    R4 2         ; return R4
 36 [-]: JMP       42           ; PC := 42
 37 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 40
 40 [-]: LOADKB    R4 1 0       ; R4 := true
 41 [-]: RETURN    R4 2         ; return R4
 42 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1493
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: EQ        1 R0 K2      ; if R0 == 28.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 7
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1497
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 0         ; if not R1 then PC := 17
  4 [-]: JMP       17           ; PC := 17
  5 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xb61abfd2]
  6 [-]: CONST     R3 2         ; R3 := 2.000000
  7 [-]: CONST     R4 0         ; R4 := 0.000000
  8 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mItemId"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mId"]
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0x6c97a788
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["InvalidItemID"]
 13 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 16
 16 [-]: LOADKB    R1 1 0       ; R1 := true
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1501
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: EQ        1 R0 K2      ; if R0 == 30.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 7
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1505
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mCurrentScreenType
  2 [-]: GETGLOBAL R1 K1        ; R1 := ScreenType
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["KAHL"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x42b04007]
  8 [-]: LOADK     R2 K5        ; R2 := "/Lotus/Language/KahlQuest/QuestName"
  9 [-]: LOADKB    R3 0 0       ; R3 := false
 10 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 11 [-]: TEST      R0 1         ; if R0 then PC := 24
 12 [-]: JMP       24           ; PC := 24
 13 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
 14 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x42b04007]
 15 [-]: LOADK     R2 K6        ; R2 := "/Lotus/Language/Missions/MissionName_"
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3[0x8a389d5f]
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: CALL      R4 1 0       ; R4,... := R4()
 20 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 21 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 22 [-]: LOADKB    R3 0 0       ; R3 := false
 23 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 24 [-]: RETURN    R0 2         ; return R0
 25 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1511
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LEN       R1 R0        ; R1 := # R0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= 0.000000 then PC := 18
  3 [-]: JMP       18           ; PC := 18
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0xbe190284
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 18
  8 [-]: JMP       18           ; PC := 18
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf2deaf69]
 11 [-]: GETGLOBAL R3 K4        ; R3 := gLotusDojoGameRulesType
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: TEST      R1 1         ; if R1 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: SETUPVAL  R0 U1        ; U82 := R1
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xaade900e]
 21 [-]: LOADK     R3 K7        ; R3 := "TopAnchor.Header.DescBacker"
 22 [-]: CONST     R4 11        ; R4 := 11.000000
 23 [-]: GETUPVAL  R5 U1        ; R5 := U1
 24 [-]: LEN       R5 R5        ; R5 := # R5
 25 [-]: EQ        0 R5 K0      ; if R5 ~= 0.000000 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 28
 28 [-]: LOADKB    R5 1 0       ; R5 := true
 29 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 30 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 31 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x20b98db3]
 32 [-]: LOADK     R3 K9        ; R3 := "TopAnchor.Header.Desc.text"
 33 [-]: GETUPVAL  R4 U1        ; R4 := U1
 34 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 35 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 36 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x91a24e4b]
 37 [-]: LOADK     R3 K11       ; R3 := "TopAnchor.Header.Desc"
 38 [-]: CONST     R4 33        ; R4 := 33.000000
 39 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 40 [-]: SUB       R1 R1 K12    ; R1 := R1 - 50.000000
 41 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 42 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x67bc869f]
 43 [-]: LOADK     R4 K14       ; R4 := "TopAnchor.Header.DescBacker.Mid"
 44 [-]: CONST     R5 12        ; R5 := 12.000000
 45 [-]: MOVE      R6 R1        ; R6 := R1
 46 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 47 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 48 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x67bc869f]
 49 [-]: LOADK     R4 K15       ; R4 := "TopAnchor.Header.DescBacker.Left"
 50 [-]: CONST     R5 0         ; R5 := 0.000000
 51 [-]: UNM       R6 R1        ; R6 :=  R1
 52 [-]: DIV       R6 R6 K16    ; R6 := R6 / 2.000000
 53 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 54 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 55 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x67bc869f]
 56 [-]: LOADK     R4 K17       ; R4 := "TopAnchor.Header.DescBacker.Right"
 57 [-]: CONST     R5 0         ; R5 := 0.000000
 58 [-]: DIV       R6 R1 K16    ; R6 := R1 / 2.000000
 59 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 60 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 61 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x67bc869f]
 62 [-]: LOADK     R4 K7        ; R4 := "TopAnchor.Header.DescBacker"
 63 [-]: CONST     R5 13        ; R5 := 13.000000
 64 [-]: CONST     R6 22        ; R6 := 22.000000
 65 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 66 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 1526
; #Upvalues:       8
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADK     R3 K0        ; R3 := ""
  2 [-]: SETUPVAL  R3 U0        ; U82 := R0
  3 [-]: TEST      R0 0         ; if not R0 then PC := 39
  4 [-]: JMP       39           ; PC := 39
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["isPvp"]
  7 [-]: TEST      R3 0         ; if not R3 then PC := 39
  8 [-]: JMP       39           ; PC := 39
  9 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Game/CTF_Title"
 10 [-]: SETUPVAL  R3 U0        ; U82 := R0
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 13 [-]: EQ        0 R3 K5      ; if R3 ~= 3.000000 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: LOADK     R3 K6        ; R3 := "/Lotus/Language/Game/DM_Title"
 16 [-]: SETUPVAL  R3 U0        ; U82 := R0
 17 [-]: JMP       122          ; PC := 122
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 20 [-]: EQ        0 R3 K7      ; if R3 ~= 2.000000 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: LOADK     R3 K8        ; R3 := "/Lotus/Language/Game/TDM_Title"
 23 [-]: SETUPVAL  R3 U0        ; U82 := R0
 24 [-]: JMP       122          ; PC := 122
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 27 [-]: EQ        0 R3 K9      ; if R3 ~= 4.000000 then PC := 32
 28 [-]: JMP       32           ; PC := 32
 29 [-]: LOADK     R3 K10       ; R3 := "/Lotus/Language/Game/SB_Title"
 30 [-]: SETUPVAL  R3 U0        ; U82 := R0
 31 [-]: JMP       122          ; PC := 122
 32 [-]: GETUPVAL  R3 U1        ; R3 := U1
 33 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 34 [-]: EQ        0 R3 K11     ; if R3 ~= 5.000000 then PC := 122
 35 [-]: JMP       122          ; PC := 122
 36 [-]: LOADK     R3 K12       ; R3 := "/Lotus/Language/Game/VoidTear_Title"
 37 [-]: SETUPVAL  R3 U0        ; U82 := R0
 38 [-]: JMP       122          ; PC := 122
 39 [-]: GETUPVAL  R3 U2        ; R3 := U2
 40 [-]: CALL      R3 1 2       ; R3 := R3()
 41 [-]: TEST      R3 0         ; if not R3 then PC := 64
 42 [-]: JMP       64           ; PC := 64
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: CALL      R3 1 2       ; R3 := R3()
 45 [-]: TEST      R3 0         ; if not R3 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: LOADK     R3 K13       ; R3 := "/Lotus/Language/G1Quests/ProjectIndexTitle"
 48 [-]: SETUPVAL  R3 U0        ; U82 := R0
 49 [-]: JMP       122          ; PC := 122
 50 [-]: GETUPVAL  R3 U4        ; R3 := U4
 51 [-]: CALL      R3 1 2       ; R3 := R3()
 52 [-]: GETTABLE  R4 R3 K14    ; R4 := R3["goalTag"]
 53 [-]: GETGLOBAL R5 K15       ; R5 := 0x0469f296
 54 [-]: LOADK     R6 K16       ; R6 := "WaterFight"
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 61
 57 [-]: JMP       61           ; PC := 61
 58 [-]: LOADK     R4 K17       ; R4 := "/Lotus/Language/Alerts/TacAlertWaterFight"
 59 [-]: SETUPVAL  R4 U0        ; U82 := R0
 60 [-]: JMP       122          ; PC := 122
 61 [-]: LOADK     R4 K18       ; R4 := "/Lotus/Language/G1Quests/KelaEventTitle"
 62 [-]: SETUPVAL  R4 U0        ; U82 := R0
 63 [-]: JMP       122          ; PC := 122
 64 [-]: GETUPVAL  R4 U5        ; R4 := U5
 65 [-]: CALL      R4 1 2       ; R4 := R4()
 66 [-]: TEST      R4 0         ; if not R4 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: RETURN    R0 1         ; return 
 69 [-]: JMP       122          ; PC := 122
 70 [-]: GETUPVAL  R4 U4        ; R4 := U4
 71 [-]: CALL      R4 1 2       ; R4 := R4()
 72 [-]: GETGLOBAL R5 K19       ; R5 := 0x7b998233
 73 [-]: MOVE      R6 R4        ; R6 := R4
 74 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 75 [-]: TEST      R5 1         ; if R5 then PC := 122
 76 [-]: JMP       122          ; PC := 122
 77 [-]: GETTABLE  R5 R4 K20    ; R5 := R4["missionType"]
 78 [-]: EQ        1 R5 K21     ; if R5 == 28.000000 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 81
 81 [-]: LOADKB    R5 1 0       ; R5 := true
 82 [-]: TEST      R0 1         ; if R0 then PC := 96
 83 [-]: JMP       96           ; PC := 96
 84 [-]: TEST      R5 0         ; if not R5 then PC := 96
 85 [-]: JMP       96           ; PC := 96
 86 [-]: GETTABLE  R6 R4 K22    ; R6 := R4["sortieId"]
 87 [-]: EQ        0 R6 K0      ; if R6 ~= "" then PC := 96
 88 [-]: JMP       96           ; PC := 96
 89 [-]: GETTABLE  R6 R4 K14    ; R6 := R4["goalTag"]
 90 [-]: GETGLOBAL R7 K23       ; R7 := EMPTY_SYMBOL
 91 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 96
 92 [-]: JMP       96           ; PC := 96
 93 [-]: LOADK     R6 K24       ; R6 := "/Lotus/Language/Labels/FreeRoamSummary"
 94 [-]: SETUPVAL  R6 U0        ; U82 := R0
 95 [-]: JMP       122          ; PC := 122
 96 [-]: TEST      R0 0         ; if not R0 then PC := 115
 97 [-]: JMP       115          ; PC := 115
 98 [-]: TEST      R2 1         ; if R2 then PC := 115
 99 [-]: JMP       115          ; PC := 115
100 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
101 [-]: GETGLOBAL R7 K25       ; R7 := 0xbe190284
102 [-]: CALL      R6 2 2       ; R6 := R6(R7)
103 [-]: TEST      R6 1         ; if R6 then PC := 115
104 [-]: JMP       115          ; PC := 115
105 [-]: GETGLOBAL R6 K25       ; R6 := 0xbe190284
106 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xf2deaf69]
107 [-]: GETGLOBAL R8 K27       ; R8 := gLotusBaseGameRulesType
108 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
109 [-]: TEST      R6 0         ; if not R6 then PC := 115
110 [-]: JMP       115          ; PC := 115
111 [-]: GETUPVAL  R6 U6        ; R6 := U6
112 [-]: CALL      R6 1 2       ; R6 := R6()
113 [-]: SETUPVAL  R6 U0        ; U82 := R0
114 [-]: JMP       122          ; PC := 122
115 [-]: GETUPVAL  R6 U7        ; R6 := U7
116 [-]: GETTABLE  R6 R6 K28    ; R6 := R6[0x06d055f9]
117 [-]: MOVE      R7 R1        ; R7 := R1
118 [-]: LOADK     R8 K29       ; R8 := "/Lotus/Language/Menu/MissionStats_Complete"
119 [-]: LOADK     R9 K30       ; R9 := "/Lotus/Language/Menu/MissionStats_Failed"
120 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
121 [-]: SETUPVAL  R6 U0        ; U82 := R0
122 [-]: GETGLOBAL R6 K31       ; R6 := 0xae91e43b
123 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0x20b98db3]
124 [-]: LOADK     R8 K33       ; R8 := "TopAnchor.Header.Label.text"
125 [-]: GETUPVAL  R9 U0        ; R9 := U0
126 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
127 [-]: GETGLOBAL R6 K31       ; R6 := 0xae91e43b
128 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0x20b98db3]
129 [-]: LOADK     R8 K34       ; R8 := "MissionComplete.TextAnim.Label.GrowAnim.Label.text"
130 [-]: GETUPVAL  R9 U0        ; R9 := U0
131 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
132 [-]: GETGLOBAL R6 K31       ; R6 := 0xae91e43b
133 [-]: SELF      R6 R6 K35    ; R7 := R6; R6 := R6[0x5ee2cc30]
134 [-]: LOADK     R8 K36       ; R8 := "MissionComplete.ArrowEndsAnim.ArrowEnds"
135 [-]: LOADK     R9 K37       ; R9 := "OnArrowEndsFrameEnter"
136 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
137 [-]: CONST     R6 130       ; R6 := 130.000000
138 [-]: GETGLOBAL R7 K38       ; R7 := 0x5bced4c4
139 [-]: GETTABLE  R7 R7 K39    ; R7 := R7[0xb62ecfe0]
140 [-]: GETGLOBAL R8 K31       ; R8 := 0xae91e43b
141 [-]: SELF      R8 R8 K40    ; R9 := R8; R8 := R8[0x91a24e4b]
142 [-]: LOADK     R10 K41      ; R10 := "TopAnchor.Header.Label"
143 [-]: CONST     R11 33       ; R11 := 33.000000
144 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
145 [-]: MOVE      R9 R6        ; R9 := R6
146 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
147 [-]: ADD       R7 R7 K42    ; R7 := R7 + 50.000000
148 [-]: DIV       R8 R7 K7     ; R8 := R7 / 2.000000
149 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
150 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x67bc869f]
151 [-]: LOADK     R11 K44      ; R11 := "TopAnchor.Header.Backer.Left"
152 [-]: CONST     R12 0        ; R12 := 0.000000
153 [-]: UNM       R13 R8       ; R13 :=  R8
154 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
155 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
156 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x67bc869f]
157 [-]: LOADK     R11 K45      ; R11 := "TopAnchor.Header.Backer.Mid"
158 [-]: CONST     R12 12       ; R12 := 12.000000
159 [-]: SUB       R13 R6 K7    ; R13 := R6 - 2.000000
160 [-]: SUB       R13 R7 R13   ; R13 := R7 - R13
161 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
162 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
163 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x67bc869f]
164 [-]: LOADK     R11 K46      ; R11 := "TopAnchor.Header.Backer.Right"
165 [-]: CONST     R12 0        ; R12 := 0.000000
166 [-]: MOVE      R13 R8       ; R13 := R8
167 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
168 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
169 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x67bc869f]
170 [-]: LOADK     R11 K47      ; R11 := "TopAnchor.Header.Lines.Left"
171 [-]: CONST     R12 0        ; R12 := 0.000000
172 [-]: UNM       R13 R8       ; R13 :=  R8
173 [-]: SUB       R13 R13 K48  ; R13 := R13 - 16.000000
174 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
175 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
176 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x67bc869f]
177 [-]: LOADK     R11 K49      ; R11 := "TopAnchor.Header.Lines.Right"
178 [-]: CONST     R12 0        ; R12 := 0.000000
179 [-]: ADD       R13 R8 K48   ; R13 := R8 + 16.000000
180 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
181 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
182 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x67bc869f]
183 [-]: LOADK     R11 K50      ; R11 := "TopAnchor.Header.ArrowEnds.Left"
184 [-]: CONST     R12 0        ; R12 := 0.000000
185 [-]: UNM       R13 R8       ; R13 :=  R8
186 [-]: SUB       R13 R13 K51  ; R13 := R13 - 22.000000
187 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
188 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
189 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x67bc869f]
190 [-]: LOADK     R11 K52      ; R11 := "TopAnchor.Header.ArrowEnds.Right"
191 [-]: CONST     R12 0        ; R12 := 0.000000
192 [-]: ADD       R13 R8 K51   ; R13 := R8 + 22.000000
193 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
194 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 1583
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R0 K0        ; R0 := mGameData
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x62c81b76]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: CONST     R1 0         ; R1 := 0.000000
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["isPvp"]
  8 [-]: TEST      R3 0         ; if not R3 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x33bdd652
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x23d5322f]
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CONST     R5 3         ; R5 := 3.000000
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETGLOBAL R3 K3        ; R3 := 0x33bdd652
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x23d5322f]
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: CONST     R5 0         ; R5 := 0.000000
 20 [-]: CALL      R3 3 1       ; R3(R4,R5)
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: GETGLOBAL R4 K6        ; R4 := mArchWingRequired
 25 [-]: TEST      R4 1         ; if R4 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: TEST      R3 0         ; if not R3 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R4 K3        ; R4 := 0x33bdd652
 30 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0x23d5322f]
 31 [-]: MOVE      R5 R2        ; R5 := R2
 32 [-]: CONST     R6 2         ; R6 := 2.000000
 33 [-]: CALL      R4 3 1       ; R4(R5,R6)
 34 [-]: SELF      R4 R0 K7     ; R5 := R0; R4 := R0[0xb61abfd2]
 35 [-]: CONST     R6 1         ; R6 := 1.000000
 36 [-]: CONST     R7 0         ; R7 := 0.000000
 37 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 38 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mItemId"]
 39 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mId"]
 40 [-]: GETGLOBAL R5 K5        ; R5 := 0x6c97a788
 41 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["InvalidItemID"]
 42 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 49
 43 [-]: JMP       49           ; PC := 49
 44 [-]: GETGLOBAL R4 K3        ; R4 := 0x33bdd652
 45 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0x23d5322f]
 46 [-]: MOVE      R5 R2        ; R5 := R2
 47 [-]: CONST     R6 1         ; R6 := 1.000000
 48 [-]: CALL      R4 3 1       ; R4(R5,R6)
 49 [-]: GETGLOBAL R4 K0        ; R4 := mGameData
 50 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xd8159207]
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: LE        0 K12 R4     ; if 3.000000 > R4 then PC := 86
 53 [-]: JMP       86           ; PC := 86
 54 [-]: GETGLOBAL R4 K13       ; R4 := 0x7b998233
 55 [-]: GETGLOBAL R5 K14       ; R5 := 0x89326c93
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: TEST      R4 1         ; if R4 then PC := 86
 58 [-]: JMP       86           ; PC := 86
 59 [-]: GETGLOBAL R4 K14       ; R4 := 0x89326c93
 60 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0xfb64e76c]
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: GETGLOBAL R5 K13       ; R5 := 0x7b998233
 63 [-]: MOVE      R6 R4        ; R6 := R4
 64 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 65 [-]: TEST      R5 1         ; if R5 then PC := 86
 66 [-]: JMP       86           ; PC := 86
 67 [-]: SELF      R5 R4 K16    ; R6 := R4; R5 := R4[0x5578d98b]
 68 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 69 [-]: GETGLOBAL R6 K13       ; R6 := 0x7b998233
 70 [-]: MOVE      R7 R5        ; R7 := R5
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: TEST      R6 1         ; if R6 then PC := 86
 73 [-]: JMP       86           ; PC := 86
 74 [-]: CONST     R6 5         ; R6 := 5.000000
 75 [-]: SELF      R7 R4 K1     ; R8 := R4; R7 := R4[0x62c81b76]
 76 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 77 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["mOperatorType"]
 78 [-]: EQ        0 R7 K18     ; if R7 ~= 4.000000 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: CONST     R6 9         ; R6 := 9.000000
 81 [-]: GETGLOBAL R7 K3        ; R7 := 0x33bdd652
 82 [-]: GETTABLE  R7 R7 K4     ; R7 := R7[0x23d5322f]
 83 [-]: MOVE      R8 R2        ; R8 := R2
 84 [-]: MOVE      R9 R6        ; R9 := R6
 85 [-]: CALL      R7 3 1       ; R7(R8,R9)
 86 [-]: GETGLOBAL R7 K19       ; R7 := 0xc8802016
 87 [-]: MOVE      R8 R2        ; R8 := R2
 88 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 89 [-]: JMP       118          ; PC := 118
 90 [-]: CONST     R12 0        ; R12 := 0.000000
 91 [-]: CONST     R13 6        ; R13 := 6.000000
 92 [-]: CONST     R14 1        ; R14 := 1.000000
 93 [-]: FORPREP   R12 117      ; R12 -= R14; PC := 117
 94 [-]: SELF      R16 R0 K7    ; R17 := R0; R16 := R0[0xb61abfd2]
 95 [-]: MOVE      R18 R11      ; R18 := R11
 96 [-]: MOVE      R19 R15      ; R19 := R15
 97 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 98 [-]: GETTABLE  R17 R16 K8   ; R17 := R16["mItemId"]
 99 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["mId"]
100 [-]: GETGLOBAL R18 K5       ; R18 := 0x6c97a788
101 [-]: GETTABLE  R18 R18 K10  ; R18 := R18["InvalidItemID"]
102 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 117
103 [-]: JMP       117          ; PC := 117
104 [-]: EQ        1 R11 K20    ; if R11 == 2.000000 then PC := 114
105 [-]: JMP       114          ; PC := 114
106 [-]: GETUPVAL  R17 U2       ; R17 := U2
107 [-]: MOVE      R18 R11      ; R18 := R11
108 [-]: MOVE      R19 R15      ; R19 := R15
109 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
110 [-]: TEST      R17 0        ; if not R17 then PC := 117
111 [-]: JMP       117          ; PC := 117
112 [-]: ADD       R1 R1 K21    ; R1 := R1 + 1.000000
113 [-]: JMP       117          ; PC := 117
114 [-]: TEST      R3 1         ; if R3 then PC := 117
115 [-]: JMP       117          ; PC := 117
116 [-]: ADD       R1 R1 K21    ; R1 := R1 + 1.000000
117 [-]: FORLOOP   R12 94       ; R12 += R14; if R12 <= R13 then begin PC := 94; R15 := R12 end
118 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 90; R9 := R10 end
119 [-]: JMP       90           ; PC := 90
120 [-]: TEST      R3 0         ; if not R3 then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: ADD       R1 R1 K21    ; R1 := R1 + 1.000000
123 [-]: GETUPVAL  R17 U3       ; R17 := U3
124 [-]: CALL      R17 1 2      ; R17 := R17()
125 [-]: TEST      R17 0        ; if not R17 then PC := 128
126 [-]: JMP       128          ; PC := 128
127 [-]: ADD       R1 R1 K21    ; R1 := R1 + 1.000000
128 [-]: GETUPVAL  R17 U4       ; R17 := U4
129 [-]: GETTABLE  R17 R17 K22  ; R17 := R17[0x06d055f9]
130 [-]: LT        1 R1 K23     ; if R1 < 6.000000 then PC := 133
131 [-]: JMP       133          ; PC := 133
132 [-]: LOADKB    R18 0 1      ; R18 := false; PC := 133
133 [-]: LOADKB    R18 1 0      ; R18 := true
134 [-]: GETUPVAL  R19 U4       ; R19 := U4
135 [-]: GETTABLE  R19 R19 K22  ; R19 := R19[0x06d055f9]
136 [-]: LT        1 K12 R1     ; if 3.000000 < R1 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: LOADKB    R20 0 1      ; R20 := false; PC := 139
139 [-]: LOADKB    R20 1 0      ; R20 := true
140 [-]: CONST     R21 6        ; R21 := 6.000000
141 [-]: CONST     R22 3        ; R22 := 3.000000
142 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
143 [-]: MOVE      R20 R1       ; R20 := R1
144 [-]: TAILCALL  R17 4 0      ; R17,... := R17(R18,R19,R20)
145 [-]: RETURN    R17 0        ; return R17,...
146 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 1645
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf36b7a3d]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: CONST     R2 382       ; R2 := 382.500000
  4 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  5 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["red"]
  6 [-]: DIV       R4 R4 R2     ; R4 := R4 / R2
  7 [-]: SETTABLE  R3 K1 R4     ; R3["r"] := R4
  8 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["green"]
  9 [-]: DIV       R4 R4 R2     ; R4 := R4 / R2
 10 [-]: SETTABLE  R3 K3 R4     ; R3["g"] := R4
 11 [-]: GETTABLE  R4 R1 K6     ; R4 := R1["blue"]
 12 [-]: DIV       R4 R4 R2     ; R4 := R4 / R2
 13 [-]: SETTABLE  R3 K5 R4     ; R3["b"] := R4
 14 [-]: RETURN    R3 2         ; return R3
 15 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 1651
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: CONST     R0 0         ; R0 := 0.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xfb64e76c]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0xba7dfcd2
 11 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x26ed9862]
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: LOADKB    R5 1 0       ; R5 := true
 14 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 15 [-]: MOVE      R0 R2        ; R0 := R2
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: GETGLOBAL R3 K5        ; R3 := 0x0469f296
 18 [-]: LOADK     R4 K6        ; R4 := "ConclaveSyndicate"
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: MOVE      R2 R3        ; R2 := R3
 21 [-]: GETGLOBAL R3 K7        ; R3 := mGameData
 22 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xa4d581dc]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: GETGLOBAL R4 K9        ; R4 := 0x7ed0a956
 26 [-]: LOADK     R5 K10       ; R5 := "/Lotus/Syndicates/"
 27 [-]: SELF      R6 R2 K11    ; R7 := R2; R6 := R2[0x6d604ba7]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: GETGLOBAL R5 K12       ; R5 := 0xb009bbc6
 32 [-]: MOVE      R6 R4        ; R6 := R4
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: SELF      R6 R5 K13    ; R7 := R5; R6 := R5[0x056dcf06]
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: CONST     R7 1         ; R7 := 1.000000
 37 [-]: CONST     R8 2         ; R8 := 2.000000
 38 [-]: CONST     R9 1         ; R9 := 1.000000
 39 [-]: FORPREP   R7 210       ; R7 -= R9; PC := 210
 40 [-]: CONST     R11 0        ; R11 := 0.000000
 41 [-]: LOADNIL   R12 R12      ; R12 := nil
 42 [-]: CONST     R13 100      ; R13 := 100.000000
 43 [-]: GETUPVAL  R14 U0       ; R14 := U0
 44 [-]: CALL      R14 1 2      ; R14 := R14()
 45 [-]: TEST      R14 0        ; if not R14 then PC := 210
 46 [-]: JMP       210          ; PC := 210
 47 [-]: GETGLOBAL R14 K14      ; R14 := 0x3584dca2
 48 [-]: CALL      R14 1 2      ; R14 := R14()
 49 [-]: GETGLOBAL R15 K2       ; R15 := 0x7b998233
 50 [-]: MOVE      R16 R1       ; R16 := R1
 51 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 52 [-]: TEST      R15 1        ; if R15 then PC := 88
 53 [-]: JMP       88           ; PC := 88
 54 [-]: CONST     R15 0        ; R15 := 0.000000
 55 [-]: CONST     R16 0        ; R16 := 0.000000
 56 [-]: GETGLOBAL R17 K3       ; R17 := 0xba7dfcd2
 57 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17[0x1ff3fca6]
 58 [-]: MOVE      R19 R1       ; R19 := R1
 59 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 60 [-]: SUB       R17 R17 K16  ; R17 := R17 - 1.000000
 61 [-]: CONST     R18 1        ; R18 := 1.000000
 62 [-]: FORPREP   R16 87       ; R16 -= R18; PC := 87
 63 [-]: GETGLOBAL R20 K3       ; R20 := 0xba7dfcd2
 64 [-]: SELF      R20 R20 K17  ; R21 := R20; R20 := R20[0x94df81ff]
 65 [-]: MOVE      R22 R1       ; R22 := R1
 66 [-]: MOVE      R23 R19      ; R23 := R19
 67 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
 68 [-]: GETGLOBAL R21 K7       ; R21 := mGameData
 69 [-]: SELF      R21 R21 K18  ; R22 := R21; R21 := R21[0x69727e0b]
 70 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 71 [-]: SELF      R21 R21 K19  ; R22 := R21; R21 := R21[0x11900845]
 72 [-]: MOVE      R23 R20      ; R23 := R20
 73 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 74 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
 75 [-]: MOVE      R23 R21      ; R23 := R21
 76 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 77 [-]: TEST      R22 1        ; if R22 then PC := 87
 78 [-]: JMP       87           ; PC := 87
 79 [-]: GETTABLE  R22 R21 K20  ; R22 := R21["mCategory"]
 80 [-]: EQ        0 R22 K22    ; if R22 ~= 0.000000 then PC := 87
 81 [-]: JMP       87           ; PC := 87
 82 [-]: SUB       R22 R10 K16  ; R22 := R10 - 1.000000
 83 [-]: EQ        0 R15 R22    ; if R15 ~= R22 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: MOVE      R14 R20      ; R14 := R20
 86 [-]: ADD       R15 R15 K16  ; R15 := R15 + 1.000000
 87 [-]: FORLOOP   R16 63       ; R16 += R18; if R16 <= R17 then begin PC := 63; R19 := R16 end
 88 [-]: GETGLOBAL R22 K7       ; R22 := mGameData
 89 [-]: SELF      R22 R22 K18  ; R23 := R22; R22 := R22[0x69727e0b]
 90 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 91 [-]: SELF      R22 R22 K19  ; R23 := R22; R22 := R22[0x11900845]
 92 [-]: MOVE      R24 R14      ; R24 := R14
 93 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
 94 [-]: GETGLOBAL R23 K2       ; R23 := 0x7b998233
 95 [-]: MOVE      R24 R22      ; R24 := R22
 96 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 97 [-]: TEST      R23 1        ; if R23 then PC := 210
 98 [-]: JMP       210          ; PC := 210
 99 [-]: GETGLOBAL R23 K12      ; R23 := 0xb009bbc6
100 [-]: GETTABLE  R24 R22 K23  ; R24 := R22["mChallengeTypeRefID"]
101 [-]: CALL      R23 2 2      ; R23 := R23(R24)
102 [-]: GETGLOBAL R24 K7       ; R24 := mGameData
103 [-]: SELF      R24 R24 K24  ; R25 := R24; R24 := R24[0x896fe205]
104 [-]: MOVE      R26 R14      ; R26 := R14
105 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
106 [-]: CONST     R25 0        ; R25 := 0.000000
107 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
108 [-]: MOVE      R27 R24      ; R27 := R24
109 [-]: CALL      R26 2 2      ; R26 := R26(R27)
110 [-]: TEST      R26 1        ; if R26 then PC := 115
111 [-]: JMP       115          ; PC := 115
112 [-]: SELF      R26 R24 K25  ; R27 := R24; R26 := R24[0x958b6075]
113 [-]: CALL      R26 2 2      ; R26 := R26(R27)
114 [-]: MOVE      R25 R26      ; R25 := R26
115 [-]: GETGLOBAL R26 K26      ; R26 := 0x03f57322
116 [-]: SELF      R27 R22 K27  ; R28 := R22; R27 := R22[0xad30423b]
117 [-]: MOVE      R29 R23      ; R29 := R23
118 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
119 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
120 [-]: MOVE      R11 R26      ; R11 := R26
121 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
122 [-]: MOVE      R27 R24      ; R27 := R24
123 [-]: CALL      R26 2 2      ; R26 := R26(R27)
124 [-]: TEST      R26 1        ; if R26 then PC := 137
125 [-]: JMP       137          ; PC := 137
126 [-]: SELF      R26 R24 K28  ; R27 := R24; R26 := R24[0x2698bd19]
127 [-]: CALL      R26 2 2      ; R26 := R26(R27)
128 [-]: TEST      R26 0        ; if not R26 then PC := 137
129 [-]: JMP       137          ; PC := 137
130 [-]: GETGLOBAL R26 K29      ; R26 := 0xae91e43b
131 [-]: SELF      R26 R26 K30  ; R27 := R26; R26 := R26[0x42b04007]
132 [-]: LOADK     R28 K31      ; R28 := "/Lotus/Language/Actions/CompleteXP"
133 [-]: LOADKB    R29 0 0      ; R29 := false
134 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
135 [-]: MOVE      R12 R26      ; R12 := R26
136 [-]: JMP       144          ; PC := 144
137 [-]: CONST     R13 20       ; R13 := 20.000000
138 [-]: GETGLOBAL R26 K29      ; R26 := 0xae91e43b
139 [-]: SELF      R26 R26 K30  ; R27 := R26; R26 := R26[0x42b04007]
140 [-]: LOADK     R28 K32      ; R28 := "/Lotus/Language/Categories/IN_PROGRESS"
141 [-]: LOADKB    R29 0 0      ; R29 := false
142 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
143 [-]: MOVE      R12 R26      ; R12 := R26
144 [-]: EQ        0 R12 K33    ; if R12 ~= nil then PC := 165
145 [-]: JMP       165          ; PC := 165
146 [-]: GETGLOBAL R26 K29      ; R26 := 0xae91e43b
147 [-]: SELF      R26 R26 K30  ; R27 := R26; R26 := R26[0x42b04007]
148 [-]: LOADK     R28 K34      ; R28 := "/Lotus/Language/Syndicates/Neutral"
149 [-]: LOADKB    R29 0 0      ; R29 := false
150 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
151 [-]: MOVE      R12 R26      ; R12 := R26
152 [-]: GETTABLE  R26 R3 K35   ; R26 := R3["mTitle"]
153 [-]: EQ        1 R26 K22    ; if R26 == 0.000000 then PC := 165
154 [-]: JMP       165          ; PC := 165
155 [-]: SELF      R26 R5 K36   ; R27 := R5; R26 := R5[0xb99a3ddc]
156 [-]: GETTABLE  R28 R3 K35   ; R28 := R3["mTitle"]
157 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
158 [-]: GETGLOBAL R27 K29      ; R27 := 0xae91e43b
159 [-]: SELF      R27 R27 K30  ; R28 := R27; R27 := R27[0x42b04007]
160 [-]: SELF      R29 R26 K11  ; R30 := R26; R29 := R26[0x6d604ba7]
161 [-]: CALL      R29 2 2      ; R29 := R29(R30)
162 [-]: LOADKB    R30 0 0      ; R30 := false
163 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
164 [-]: MOVE      R12 R27      ; R12 := R27
165 [-]: GETUPVAL  R27 U1       ; R27 := U1
166 [-]: GETTABLE  R27 R27 K37  ; R27 := R27[0xe6b719a2]
167 [-]: CALL      R27 1 2      ; R27 := R27()
168 [-]: SELF      R28 R6 K38   ; R29 := R6; R28 := R6[0xed4e0128]
169 [-]: CALL      R28 2 2      ; R28 := R28(R29)
170 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
171 [-]: NEWTABLE  R28 0 11     ; R28 := {}
172 [-]: SETTABLE  R28 K39 R5   ; R28["Type"] := R5
173 [-]: SETTABLE  R28 K40 K41  ; R28["Syndicate"] := true
174 [-]: GETGLOBAL R29 K29      ; R29 := 0xae91e43b
175 [-]: SELF      R29 R29 K30  ; R30 := R29; R29 := R29[0x42b04007]
176 [-]: LOADK     R31 K43      ; R31 := "+<REPUTATION>"
177 [-]: LOADKB    R32 1 0      ; R32 := true
178 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
179 [-]: MOVE      R30 R11      ; R30 := R11
180 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
181 [-]: SETTABLE  R28 K42 R29  ; R28["Gain"] := R29
182 [-]: SETTABLE  R28 K44 R25  ; R28["Progress"] := R25
183 [-]: SETTABLE  R28 K45 R6   ; R28["Icon"] := R6
184 [-]: SETTABLE  R28 K46 K41  ; R28["Themed"] := true
185 [-]: GETGLOBAL R29 K48      ; R29 := 0x603636ad
186 [-]: GETGLOBAL R30 K49      ; R30 := 0x64fb1586
187 [-]: GETTABLE  R31 R23 K50  ; R31 := R23["mLocName"]
188 [-]: CALL      R30 2 2      ; R30 := R30(R31)
189 [-]: NEWTABLE  R31 0 0      ; R31 := {}
190 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
191 [-]: SETTABLE  R28 K47 R29  ; R28["Name"] := R29
192 [-]: SETTABLE  R28 K51 R12  ; R28["Desc"] := R12
193 [-]: GETGLOBAL R29 K49      ; R29 := 0x64fb1586
194 [-]: SELF      R30 R5 K53   ; R31 := R5; R30 := R5[0x5660f6f0]
195 [-]: CALL      R30 2 2      ; R30 := R30(R31)
196 [-]: SELF      R30 R30 K54  ; R31 := R30; R30 := R30[0xa5d5c8f6]
197 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
198 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
199 [-]: SETTABLE  R28 K52 R29  ; R28["IconColor"] := R29
200 [-]: GETUPVAL  R29 U2       ; R29 := U2
201 [-]: MOVE      R30 R5       ; R30 := R5
202 [-]: CALL      R29 2 2      ; R29 := R29(R30)
203 [-]: SETTABLE  R28 K55 R29  ; R28["BackgroundColor"] := R29
204 [-]: SETTABLE  R28 K56 R27  ; R28["BackgroundIconPos"] := R27
205 [-]: GETGLOBAL R29 K57      ; R29 := mAffinityGrid
206 [-]: SELF      R29 R29 K58  ; R30 := R29; R29 := R29[0xbad4316f]
207 [-]: MOVE      R31 R28      ; R31 := R28
208 [-]: LOADKB    R32 1 0      ; R32 := true
209 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
210 [-]: FORLOOP   R7 40        ; R7 += R9; if R7 <= R8 then begin PC := 40; R10 := R7 end
211 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 1729
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETGLOBAL R2 K0        ; R2 := mAffinityGrid
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0xb009bbc6
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: SETTABLE  R2 K1 R3     ; R2["OnslaughtBackground"] := R3
  8 [-]: GETGLOBAL R2 K0        ; R2 := mAffinityGrid
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x71e9ac81]
 10 [-]: LOADNIL   R4 R4        ; R4 := nil
 11 [-]: LOADKB    R5 1 0       ; R5 := true
 12 [-]: LOADKB    R6 1 0       ; R6 := true
 13 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 14 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 1736
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 0         ; if not R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0xb009bbc6
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x659d451f]
  8 [-]: SELF      R4 R2 K2     ; R5 := R2; R4 := R2[0xbd368681]
  9 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 10 [-]: CALL      R3 0 1       ; R3(R4,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 1743
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 0         ; if not R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0xb009bbc6
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x659d451f]
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 1       ; R3(R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 1750
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: GETGLOBAL R0 K0        ; R0 := mReputationScreenInitialized
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: NEWTABLE  R0 10 0      ; R0 := {}
  6 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Onslaught/RankS"
  7 [-]: LOADK     R2 K2        ; R2 := "/Lotus/Language/Onslaught/RankAP"
  8 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/Onslaught/RankA"
  9 [-]: LOADK     R4 K4        ; R4 := "/Lotus/Language/Onslaught/RankAM"
 10 [-]: LOADK     R5 K5        ; R5 := "/Lotus/Language/Onslaught/RankBP"
 11 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Onslaught/RankB"
 12 [-]: LOADK     R7 K7        ; R7 := "/Lotus/Language/Onslaught/RankBM"
 13 [-]: LOADK     R8 K8        ; R8 := "/Lotus/Language/Onslaught/RankCP"
 14 [-]: LOADK     R9 K9        ; R9 := "/Lotus/Language/Onslaught/RankC"
 15 [-]: LOADK     R10 K10      ; R10 := "/Lotus/Language/Onslaught/RankCM"
 16 [-]: SETLIST   R0 10 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 10
 17 [-]: GETGLOBAL R1 K11       ; R1 := 0x0469f296
 18 [-]: LOADK     R2 K12       ; R2 := "AvgWaveRank"
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K11       ; R2 := 0x0469f296
 21 [-]: LOADK     R3 K13       ; R3 := "Kills"
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K11       ; R3 := 0x0469f296
 24 [-]: LOADK     R4 K14       ; R4 := "VIPKills"
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K11       ; R4 := 0x0469f296
 27 [-]: LOADK     R5 K15       ; R5 := "Score"
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: GETGLOBAL R5 K11       ; R5 := 0x0469f296
 30 [-]: LOADK     R6 K16       ; R6 := "WaveClearScore"
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: GETGLOBAL R6 K11       ; R6 := 0x0469f296
 33 [-]: LOADK     R7 K17       ; R7 := "Wave"
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: CONST     R7 10        ; R7 := 10.000000
 36 [-]: CONST     R8 1000      ; R8 := 1000.000000
 37 [-]: GETGLOBAL R9 K18       ; R9 := 0xa94df70b
 38 [-]: SELF      R9 R9 K19    ; R10 := R9; R9 := R9[0x07408254]
 39 [-]: GETGLOBAL R11 K11      ; R11 := 0x0469f296
 40 [-]: LOADK     R12 K20      ; R12 := "LibrarySyndicate"
 41 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 42 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 43 [-]: SELF      R10 R9 K21   ; R11 := R9; R10 := R9[0x056dcf06]
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: CONST     R11 10       ; R11 := 10.000000
 46 [-]: CONST     R12 0        ; R12 := 0.000000
 47 [-]: CONST     R13 0        ; R13 := 0.000000
 48 [-]: CONST     R14 0        ; R14 := 0.000000
 49 [-]: CONST     R15 0        ; R15 := 0.000000
 50 [-]: CONST     R16 1        ; R16 := 1.000000
 51 [-]: GETUPVAL  R17 U0       ; R17 := U0
 52 [-]: GETTABLE  R17 R17 K22  ; R17 := R17[0xcdc34211]
 53 [-]: CALL      R17 1 2      ; R17 := R17()
 54 [-]: TEST      R17 0        ; if not R17 then PC := 93
 55 [-]: JMP       93           ; PC := 93
 56 [-]: GETGLOBAL R17 K23      ; R17 := 0xbe190284
 57 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17[0x0eb34c69]
 58 [-]: MOVE      R19 R1       ; R19 := R1
 59 [-]: CONST     R20 10       ; R20 := 10.000000
 60 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 61 [-]: MOVE      R11 R17      ; R11 := R17
 62 [-]: GETGLOBAL R17 K23      ; R17 := 0xbe190284
 63 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17[0x0eb34c69]
 64 [-]: MOVE      R19 R2       ; R19 := R2
 65 [-]: CONST     R20 0        ; R20 := 0.000000
 66 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 67 [-]: MOVE      R12 R17      ; R12 := R17
 68 [-]: GETGLOBAL R17 K23      ; R17 := 0xbe190284
 69 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17[0x0eb34c69]
 70 [-]: MOVE      R19 R3       ; R19 := R3
 71 [-]: CONST     R20 0        ; R20 := 0.000000
 72 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 73 [-]: MOVE      R13 R17      ; R13 := R17
 74 [-]: GETGLOBAL R17 K23      ; R17 := 0xbe190284
 75 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17[0x0eb34c69]
 76 [-]: MOVE      R19 R5       ; R19 := R5
 77 [-]: CONST     R20 0        ; R20 := 0.000000
 78 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 79 [-]: MOVE      R14 R17      ; R14 := R17
 80 [-]: GETGLOBAL R17 K23      ; R17 := 0xbe190284
 81 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17[0x0eb34c69]
 82 [-]: MOVE      R19 R4       ; R19 := R4
 83 [-]: CONST     R20 0        ; R20 := 0.000000
 84 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 85 [-]: MOVE      R15 R17      ; R15 := R17
 86 [-]: GETGLOBAL R17 K23      ; R17 := 0xbe190284
 87 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17[0x0eb34c69]
 88 [-]: MOVE      R19 R6       ; R19 := R6
 89 [-]: CONST     R20 0        ; R20 := 0.000000
 90 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 91 [-]: ADD       R16 R17 K25  ; R16 := R17 + 1.000000
 92 [-]: JMP       156          ; PC := 156
 93 [-]: LOADNIL   R17 R17      ; R17 := nil
 94 [-]: GETGLOBAL R18 K26      ; R18 := mGameData
 95 [-]: SELF      R18 R18 K27  ; R19 := R18; R18 := R18[0x79e70384]
 96 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 97 [-]: GETGLOBAL R19 K28      ; R19 := 0x76ea806b
 98 [-]: SELF      R19 R19 K29  ; R20 := R19; R19 := R19[0x3f3ae64c]
 99 [-]: CONST     R21 0        ; R21 := 0.000000
100 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
101 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19[0x5ca33548]
102 [-]: CALL      R19 2 2      ; R19 := R19(R20)
103 [-]: CONST     R20 1        ; R20 := 1.000000
104 [-]: LEN       R21 R18      ; R21 := # R18
105 [-]: CONST     R22 1        ; R22 := 1.000000
106 [-]: FORPREP   R20 113      ; R20 -= R22; PC := 113
107 [-]: GETTABLE  R24 R18 R23  ; R24 := R18[R23]
108 [-]: GETTABLE  R24 R24 K31  ; R24 := R24["playerName"]
109 [-]: EQ        0 R24 R19    ; if R24 ~= R19 then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: GETTABLE  R17 R18 R23  ; R17 := R18[R23]
112 [-]: JMP       114          ; PC := 114
113 [-]: FORLOOP   R20 107      ; R20 += R22; if R20 <= R21 then begin PC := 107; R23 := R20 end
114 [-]: GETGLOBAL R24 K32      ; R24 := 0x7b998233
115 [-]: MOVE      R25 R17      ; R25 := R17
116 [-]: CALL      R24 2 2      ; R24 := R24(R25)
117 [-]: TEST      R24 1        ; if R24 then PC := 156
118 [-]: JMP       156          ; PC := 156
119 [-]: CONST     R24 1        ; R24 := 1.000000
120 [-]: GETTABLE  R25 R17 K33  ; R25 := R17["extraStats"]
121 [-]: LEN       R25 R25      ; R25 := # R25
122 [-]: CONST     R26 1        ; R26 := 1.000000
123 [-]: FORPREP   R24 155      ; R24 -= R26; PC := 155
124 [-]: GETTABLE  R28 R17 K33  ; R28 := R17["extraStats"]
125 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
126 [-]: GETTABLE  R29 R28 K34  ; R29 := R28["name"]
127 [-]: EQ        0 R29 K35    ; if R29 ~= "EEFinalRank" then PC := 131
128 [-]: JMP       131          ; PC := 131
129 [-]: GETTABLE  R11 R28 K36  ; R11 := R28["value"]
130 [-]: JMP       155          ; PC := 155
131 [-]: GETTABLE  R29 R28 K34  ; R29 := R28["name"]
132 [-]: EQ        0 R29 K37    ; if R29 ~= "EEKills" then PC := 136
133 [-]: JMP       136          ; PC := 136
134 [-]: GETTABLE  R12 R28 K36  ; R12 := R28["value"]
135 [-]: JMP       155          ; PC := 155
136 [-]: GETTABLE  R29 R28 K34  ; R29 := R28["name"]
137 [-]: EQ        0 R29 K38    ; if R29 ~= "EEVipKills" then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: GETTABLE  R13 R28 K36  ; R13 := R28["value"]
140 [-]: JMP       155          ; PC := 155
141 [-]: GETTABLE  R29 R28 K34  ; R29 := R28["name"]
142 [-]: EQ        0 R29 K39    ; if R29 ~= "EETotal" then PC := 146
143 [-]: JMP       146          ; PC := 146
144 [-]: GETTABLE  R15 R28 K36  ; R15 := R28["value"]
145 [-]: JMP       155          ; PC := 155
146 [-]: GETTABLE  R29 R28 K34  ; R29 := R28["name"]
147 [-]: EQ        0 R29 K40    ; if R29 ~= "EEWaveScore" then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: GETTABLE  R14 R28 K36  ; R14 := R28["value"]
150 [-]: JMP       155          ; PC := 155
151 [-]: GETTABLE  R29 R28 K34  ; R29 := R28["name"]
152 [-]: EQ        0 R29 K41    ; if R29 ~= "EEWaveReached" then PC := 155
153 [-]: JMP       155          ; PC := 155
154 [-]: GETTABLE  R16 R28 K36  ; R16 := R28["value"]
155 [-]: FORLOOP   R24 124      ; R24 += R26; if R24 <= R25 then begin PC := 124; R27 := R24 end
156 [-]: GETUPVAL  R29 U1       ; R29 := U1
157 [-]: LOADK     R30 K42      ; R30 := "/Lotus/Language/Menu/MenuGotoSimaris"
158 [-]: CALL      R29 2 1      ; R29(R30)
159 [-]: GETGLOBAL R29 K43      ; R29 := 0xae91e43b
160 [-]: SELF      R29 R29 K44  ; R30 := R29; R29 := R29[0x42b04007]
161 [-]: GETTABLE  R31 R0 R11   ; R31 := R0[R11]
162 [-]: LOADKB    R32 0 0      ; R32 := false
163 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
164 [-]: GETGLOBAL R30 K43      ; R30 := 0xae91e43b
165 [-]: SELF      R30 R30 K45  ; R31 := R30; R30 := R30[0x20b98db3]
166 [-]: LOADK     R32 K46      ; R32 := "TopAnchor.Header.Label.text"
167 [-]: LOADK     R33 K47      ; R33 := "/Lotus/Language/Onslaught/EndOfMatchWaves"
168 [-]: NEWTABLE  R34 0 1      ; R34 := {}
169 [-]: SETTABLE  R34 K48 R16  ; R34["VALUE"] := R16
170 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
171 [-]: GETGLOBAL R30 K49      ; R30 := 0x603636ad
172 [-]: LOADK     R31 K50      ; R31 := "/Lotus/Language/Onslaught/EndOfMatchKills"
173 [-]: NEWTABLE  R32 0 0      ; R32 := {}
174 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
175 [-]: LOADK     R31 K51      ; R31 := "   "
176 [-]: GETUPVAL  R32 U2       ; R32 := U2
177 [-]: GETTABLE  R32 R32 K52  ; R32 := R32[0x1142c7a8]
178 [-]: MUL       R33 R12 R7   ; R33 := R12 * R7
179 [-]: CALL      R32 2 2      ; R32 := R32(R33)
180 [-]: LOADK     R33 K53      ; R33 := "\r"
181 [-]: GETGLOBAL R34 K49      ; R34 := 0x603636ad
182 [-]: LOADK     R35 K54      ; R35 := "/Lotus/Language/Onslaught/EndOfMatchVIP"
183 [-]: NEWTABLE  R36 0 0      ; R36 := {}
184 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
185 [-]: LOADK     R35 K51      ; R35 := "   "
186 [-]: GETUPVAL  R36 U2       ; R36 := U2
187 [-]: GETTABLE  R36 R36 K52  ; R36 := R36[0x1142c7a8]
188 [-]: MUL       R37 R13 R8   ; R37 := R13 * R8
189 [-]: CALL      R36 2 2      ; R36 := R36(R37)
190 [-]: LOADK     R37 K53      ; R37 := "\r"
191 [-]: GETGLOBAL R38 K49      ; R38 := 0x603636ad
192 [-]: LOADK     R39 K55      ; R39 := "/Lotus/Language/Onslaught/EndOfMatchRounds"
193 [-]: NEWTABLE  R40 0 0      ; R40 := {}
194 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
195 [-]: LOADK     R39 K51      ; R39 := "   "
196 [-]: GETUPVAL  R40 U2       ; R40 := U2
197 [-]: GETTABLE  R40 R40 K52  ; R40 := R40[0x1142c7a8]
198 [-]: MOVE      R41 R14      ; R41 := R14
199 [-]: CALL      R40 2 2      ; R40 := R40(R41)
200 [-]: LOADK     R41 K53      ; R41 := "\r"
201 [-]: CONCAT    R30 R30 R41  ; R30 := R30 .. R31 .. R32 .. R33 .. R34 .. R35 .. R36 .. R37 .. R38 .. R39 .. R40 .. R41
202 [-]: NEWTABLE  R31 0 9      ; R31 := {}
203 [-]: SETTABLE  R31 K56 R9   ; R31["Type"] := R9
204 [-]: SETTABLE  R31 K57 K58  ; R31["Onslaught"] := true
205 [-]: GETUPVAL  R32 U2       ; R32 := U2
206 [-]: GETTABLE  R32 R32 K52  ; R32 := R32[0x1142c7a8]
207 [-]: MOVE      R33 R15      ; R33 := R15
208 [-]: CALL      R32 2 2      ; R32 := R32(R33)
209 [-]: SETTABLE  R31 K15 R32  ; R31["Score"] := R32
210 [-]: SETTABLE  R31 K59 R10  ; R31["Icon"] := R10
211 [-]: SETTABLE  R31 K60 K58  ; R31["Themed"] := true
212 [-]: GETGLOBAL R32 K62      ; R32 := 0x7f5022cf
213 [-]: GETTABLE  R32 R32 K63  ; R32 := R32[0x3f3e4d12]
214 [-]: MOVE      R33 R30      ; R33 := R30
215 [-]: CALL      R32 2 2      ; R32 := R32(R33)
216 [-]: SETTABLE  R31 K61 R32  ; R31["Name"] := R32
217 [-]: LOADK     R32 K65      ; R32 := "<font color=\"#FloatingContentHighlight\" size=\"50\"><b>"
218 [-]: MOVE      R33 R29      ; R33 := R29
219 [-]: LOADK     R34 K66      ; R34 := "</b> </font>"
220 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
221 [-]: SETTABLE  R31 K64 R32  ; R31["FinalRank"] := R32
222 [-]: SETTABLE  R31 K67 K68  ; R31["IconColor"] := "0xFFFFFF"
223 [-]: GETUPVAL  R32 U3       ; R32 := U3
224 [-]: MOVE      R33 R9       ; R33 := R9
225 [-]: CALL      R32 2 2      ; R32 := R32(R33)
226 [-]: SETTABLE  R31 K69 R32  ; R31["BackgroundColor"] := R32
227 [-]: GETGLOBAL R32 K70      ; R32 := mAffinityGrid
228 [-]: SELF      R32 R32 K71  ; R33 := R32; R32 := R32[0xbad4316f]
229 [-]: MOVE      R34 R31      ; R34 := R31
230 [-]: LOADKB    R35 1 0      ; R35 := true
231 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
232 [-]: LOADKB    R32 1 0      ; R32 := true
233 [-]: SETGLOBAL R32 K0       ; mReputationScreenInitialized := R32
234 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 1845
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xcdc34211]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K1        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["eomScreenMode"]
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ACTUAL_EOM"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["invasionId"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["invasionId"]
 21 [-]: EQ        0 R1 K6      ; if R1 ~= "" then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: GETTABLE  R1 R1 K7     ; R1 := R1[0x5e35d4d6]
 26 [-]: CALL      R1 1 2       ; R1 := R1()
 27 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0x3ad9ed31]
 28 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["location"]
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[0xdc1248b0]
 32 [-]: MOVE      R4 R2        ; R4 := R2
 33 [-]: MOVE      R5 R0        ; R5 := R0
 34 [-]: LOADNIL   R6 R6        ; R6 := nil
 35 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 36 [-]: GETTABLE  R4 R3 K11    ; R4 := R3["mInvasionInfo"]
 37 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 38 [-]: MOVE      R6 R4        ; R6 := R4
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: TEST      R5 0         ; if not R5 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: GETGLOBAL R5 K12       ; R5 := 0x25d99d89
 44 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xbc93edaa]
 45 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 46 [-]: CONST     R6 0         ; R6 := 0.000000
 47 [-]: CONST     R7 1         ; R7 := 1.000000
 48 [-]: LEN       R8 R5        ; R8 := # R5
 49 [-]: CONST     R9 1         ; R9 := 1.000000
 50 [-]: FORPREP   R7 60        ; R7 -= R9; PC := 60
 51 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 52 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["mId"]
 53 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["mId"]
 54 [-]: GETTABLE  R12 R4 K14   ; R12 := R4["mId"]
 55 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["mId"]
 56 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 59 [-]: GETTABLE  R6 R11 K15   ; R6 := R11["mDelta"]
 60 [-]: FORLOOP   R7 51        ; R7 += R9; if R7 <= R8 then begin PC := 51; R10 := R7 end
 61 [-]: EQ        0 R6 K16     ; if R6 ~= 0.000000 then PC := 67
 62 [-]: JMP       67           ; PC := 67
 63 [-]: GETGLOBAL R11 K17      ; R11 := mMissionFailed
 64 [-]: TEST      R11 0        ; if not R11 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: RETURN    R0 1         ; return 
 67 [-]: GETTABLE  R11 R4 K18   ; R11 := R4["mFaction"]
 68 [-]: GETTABLE  R12 R0 K19   ; R12 := R0["invasionAllyFaction"]
 69 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 72
 72 [-]: LOADKB    R11 1 0      ; R11 := true
 73 [-]: LT        1 K16 R6     ; if 0.000000 < R6 then PC := 80
 74 [-]: JMP       80           ; PC := 80
 75 [-]: TESTSET   R12 R11 0    ; if not R11 then PC := 81 else R12 := R11
 76 [-]: JMP       81           ; PC := 81
 77 [-]: EQ        1 R6 K16     ; if R6 == 0.000000 then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: LOADKB    R12 0 1      ; R12 := false; PC := 80
 80 [-]: LOADKB    R12 1 0      ; R12 := true
 81 [-]: CONST     R13 0        ; R13 := 0.000000
 82 [-]: GETGLOBAL R14 K17      ; R14 := mMissionFailed
 83 [-]: TEST      R14 1        ; if R14 then PC := 106
 84 [-]: JMP       106          ; PC := 106
 85 [-]: GETUPVAL  R14 U3       ; R14 := U3
 86 [-]: GETTABLE  R14 R14 K20  ; R14 := R14[0x06d055f9]
 87 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: LOADKB    R15 0 1      ; R15 := false; PC := 90
 90 [-]: LOADKB    R15 1 0      ; R15 := true
 91 [-]: CONST     R16 1        ; R16 := 1.000000
 92 [-]: CONST     R17 -1       ; R17 := -1.000000
 93 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 94 [-]: MOVE      R13 R14      ; R13 := R14
 95 [-]: GETGLOBAL R14 K1       ; R14 := _T
 96 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["eomScreenMode"]
 97 [-]: GETUPVAL  R15 U1       ; R15 := U1
 98 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["ACTUAL_EOM"]
 99 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 106
100 [-]: JMP       106          ; PC := 106
101 [-]: TEST      R11 0        ; if not R11 then PC := 105
102 [-]: JMP       105          ; PC := 105
103 [-]: ADD       R6 R6 K21    ; R6 := R6 + 1.000000
104 [-]: JMP       106          ; PC := 106
105 [-]: SUB       R6 R6 K21    ; R6 := R6 - 1.000000
106 [-]: LOADK     R14 K6       ; R14 := ""
107 [-]: LT        1 K16 R6     ; if 0.000000 < R6 then PC := 113
108 [-]: JMP       113          ; PC := 113
109 [-]: EQ        0 R6 K16     ; if R6 ~= 0.000000 then PC := 134
110 [-]: JMP       134          ; PC := 134
111 [-]: TEST      R11 0        ; if not R11 then PC := 134
112 [-]: JMP       134          ; PC := 134
113 [-]: GETGLOBAL R15 K22      ; R15 := 0x603636ad
114 [-]: GETUPVAL  R16 U3       ; R16 := U3
115 [-]: GETTABLE  R16 R16 K20  ; R16 := R16[0x06d055f9]
116 [-]: GETTABLE  R17 R4 K23   ; R17 := R4["mAttackerName"]
117 [-]: GETGLOBAL R18 K24      ; R18 := EMPTY_SYMBOL
118 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 121
121 [-]: LOADKB    R17 1 0      ; R17 := true
122 [-]: GETUPVAL  R18 U0       ; R18 := U0
123 [-]: GETTABLE  R18 R18 K25  ; R18 := R18[0xc6c45c3a]
124 [-]: GETTABLE  R19 R4 K18   ; R19 := R4["mFaction"]
125 [-]: CALL      R18 2 2      ; R18 := R18(R19)
126 [-]: GETGLOBAL R19 K26      ; R19 := 0x64fb1586
127 [-]: GETTABLE  R20 R4 K23   ; R20 := R4["mAttackerName"]
128 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
129 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
130 [-]: NEWTABLE  R17 0 0      ; R17 := {}
131 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
132 [-]: MOVE      R14 R15      ; R14 := R15
133 [-]: JMP       160          ; PC := 160
134 [-]: GETGLOBAL R15 K27      ; R15 := 0x5bced4c4
135 [-]: GETTABLE  R15 R15 K28  ; R15 := R15[0xe4a5b3ca]
136 [-]: MOVE      R16 R6       ; R16 := R6
137 [-]: CALL      R15 2 2      ; R15 := R15(R16)
138 [-]: MOVE      R6 R15       ; R6 := R15
139 [-]: GETGLOBAL R15 K22      ; R15 := 0x603636ad
140 [-]: GETUPVAL  R16 U3       ; R16 := U3
141 [-]: GETTABLE  R16 R16 K20  ; R16 := R16[0x06d055f9]
142 [-]: GETTABLE  R17 R4 K29   ; R17 := R4["mDefenderName"]
143 [-]: GETGLOBAL R18 K24      ; R18 := EMPTY_SYMBOL
144 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 147
145 [-]: JMP       147          ; PC := 147
146 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 147
147 [-]: LOADKB    R17 1 0      ; R17 := true
148 [-]: GETUPVAL  R18 U0       ; R18 := U0
149 [-]: GETTABLE  R18 R18 K25  ; R18 := R18[0xc6c45c3a]
150 [-]: GETTABLE  R19 R4 K30   ; R19 := R4["mAttackerMissionInfo"]
151 [-]: GETTABLE  R19 R19 K31  ; R19 := R19["faction"]
152 [-]: CALL      R18 2 2      ; R18 := R18(R19)
153 [-]: GETGLOBAL R19 K26      ; R19 := 0x64fb1586
154 [-]: GETTABLE  R20 R4 K29   ; R20 := R4["mDefenderName"]
155 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
156 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
157 [-]: NEWTABLE  R17 0 0      ; R17 := {}
158 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
159 [-]: MOVE      R14 R15      ; R14 := R15
160 [-]: GETUPVAL  R15 U0       ; R15 := U0
161 [-]: GETTABLE  R15 R15 K25  ; R15 := R15[0xc6c45c3a]
162 [-]: GETTABLE  R16 R0 K19   ; R16 := R0["invasionAllyFaction"]
163 [-]: CALL      R15 2 2      ; R15 := R15(R16)
164 [-]: GETGLOBAL R16 K32      ; R16 := 0x7f5022cf
165 [-]: GETTABLE  R16 R16 K33  ; R16 := R16[0x3f3e4d12]
166 [-]: GETGLOBAL R17 K22      ; R17 := 0x603636ad
167 [-]: SELF      R18 R1 K34   ; R19 := R1; R18 := R1[0xc1dee03f]
168 [-]: CALL      R18 2 2      ; R18 := R18(R19)
169 [-]: GETTABLE  R19 R2 K35   ; R19 := R2["region"]
170 [-]: ADD       R19 R19 K21  ; R19 := R19 + 1.000000
171 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
172 [-]: GETTABLE  R18 R18 K36  ; R18 := R18["name"]
173 [-]: NEWTABLE  R19 0 0      ; R19 := {}
174 [-]: CALL      R17 3 0      ; R17,... := R17(R18,R19)
175 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
176 [-]: MOVE      R17 R15      ; R17 := R15
177 [-]: LOADK     R18 K37      ; R18 := " "
178 [-]: GETTABLE  R19 R3 K38   ; R19 := R3["mName"]
179 [-]: LOADK     R20 K39      ; R20 := "<br>"
180 [-]: LOADK     R21 K40      ; R21 := "<font color=\"#Content\">"
181 [-]: MOVE      R22 R16      ; R22 := R16
182 [-]: LOADK     R23 K41      ; R23 := "</font>"
183 [-]: CONCAT    R17 R17 R23  ; R17 := R17 .. R18 .. R19 .. R20 .. R21 .. R22 .. R23
184 [-]: NEWTABLE  R18 0 8      ; R18 := {}
185 [-]: SETTABLE  R18 K42 K43  ; R18["Invasion"] := true
186 [-]: SETTABLE  R18 K44 R6   ; R18["Score"] := R6
187 [-]: SETTABLE  R18 K45 R13  ; R18["Delta"] := R13
188 [-]: GETGLOBAL R19 K47      ; R19 := 0x6b3ec1d5
189 [-]: GETTABLE  R20 R0 K19   ; R20 := R0["invasionAllyFaction"]
190 [-]: ADD       R20 R20 K21  ; R20 := R20 + 1.000000
191 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
192 [-]: SETTABLE  R18 K46 R19  ; R18["Icon"] := R19
193 [-]: GETGLOBAL R19 K49      ; R19 := 0x74c5e454
194 [-]: SETTABLE  R18 K48 R19  ; R18["Icon2"] := R19
195 [-]: SETTABLE  R18 K50 K43  ; R18["Themed"] := true
196 [-]: SETTABLE  R18 K51 R17  ; R18["Name"] := R17
197 [-]: SETTABLE  R18 K52 R14  ; R18["CompletionFaction"] := R14
198 [-]: GETGLOBAL R19 K53      ; R19 := mAffinityGrid
199 [-]: SELF      R19 R19 K54  ; R20 := R19; R19 := R19[0xbad4316f]
200 [-]: MOVE      R21 R18      ; R21 := R18
201 [-]: LOADKB    R22 1 0      ; R22 := true
202 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
203 [-]: LOADKB    R19 1 0      ; R19 := true
204 [-]: SETGLOBAL R19 K55      ; mReputationScreenInitialized := R19
205 [-]: LOADKB    R19 1 0      ; R19 := true
206 [-]: RETURN    R19 2        ; return R19
207 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 1906
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  36

  1 [-]: GETGLOBAL R1 K0        ; R1 := mReputationScreenInitialized
  2 [-]: TEST      R1 0         ; if not R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: TEST      R1 0         ; if not R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: CALL      R1 1 1       ; R1()
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: CALL      R1 1 1       ; R1()
 13 [-]: LEN       R1 R0        ; R1 := # R0
 14 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: LOADNIL   R1 R2        ; R1 := R2 := nil
 18 [-]: LOADK     R3 K2        ; R3 := ""
 19 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 20 [-]: CONST     R5 1         ; R5 := 1.000000
 21 [-]: LEN       R6 R0        ; R6 := # R0
 22 [-]: CONST     R7 1         ; R7 := 1.000000
 23 [-]: FORPREP   R5 30        ; R5 -= R7; PC := 30
 24 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
 25 [-]: GETGLOBAL R10 K3       ; R10 := 0x33bdd652
 26 [-]: GETTABLE  R10 R10 K4   ; R10 := R10[0x23d5322f]
 27 [-]: MOVE      R11 R4       ; R11 := R4
 28 [-]: MOVE      R12 R9       ; R12 := R9
 29 [-]: CALL      R10 3 1      ; R10(R11,R12)
 30 [-]: FORLOOP   R5 24        ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
 31 [-]: GETGLOBAL R10 K3       ; R10 := 0x33bdd652
 32 [-]: GETTABLE  R10 R10 K5   ; R10 := R10[0xf21b1d8e]
 33 [-]: MOVE      R11 R4       ; R11 := R4
 34 [-]: CLOSURE   R12 0        ; R12 := closure(Function #67.1)
 35 [-]: CALL      R10 3 1      ; R10(R11,R12)
 36 [-]: LEN       R10 R4       ; R10 := # R4
 37 [-]: CONST     R11 1        ; R11 := 1.000000
 38 [-]: LEN       R12 R4       ; R12 := # R4
 39 [-]: CONST     R13 1        ; R13 := 1.000000
 40 [-]: FORPREP   R11 56       ; R11 -= R13; PC := 56
 41 [-]: GETTABLE  R15 R4 R14   ; R15 := R4[R14]
 42 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["mStanding"]
 43 [-]: LT        0 R15 K1     ; if R15 >= 0.000000 then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: GETGLOBAL R15 K3       ; R15 := 0x33bdd652
 46 [-]: GETTABLE  R15 R15 K4   ; R15 := R15[0x23d5322f]
 47 [-]: MOVE      R16 R4       ; R16 := R4
 48 [-]: MOVE      R17 R14      ; R17 := R14
 49 [-]: GETTABLE  R18 R4 R10   ; R18 := R4[R10]
 50 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 51 [-]: GETGLOBAL R15 K3       ; R15 := 0x33bdd652
 52 [-]: GETTABLE  R15 R15 K7   ; R15 := R15[0x9c1f3b5a]
 53 [-]: MOVE      R16 R4       ; R16 := R4
 54 [-]: ADD       R17 R10 K8   ; R17 := R10 + 1.000000
 55 [-]: CALL      R15 3 1      ; R15(R16,R17)
 56 [-]: FORLOOP   R11 41       ; R11 += R13; if R11 <= R12 then begin PC := 41; R14 := R11 end
 57 [-]: CONST     R15 1        ; R15 := 1.000000
 58 [-]: GETGLOBAL R16 K9       ; R16 := 0x5bced4c4
 59 [-]: GETTABLE  R16 R16 K10  ; R16 := R16[0xac1b386a]
 60 [-]: CONST     R17 4        ; R17 := 4.000000
 61 [-]: LEN       R18 R4       ; R18 := # R4
 62 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 63 [-]: CONST     R17 1        ; R17 := 1.000000
 64 [-]: FORPREP   R15 205      ; R15 -= R17; PC := 205
 65 [-]: GETTABLE  R19 R4 R18   ; R19 := R4[R18]
 66 [-]: GETTABLE  R19 R19 K6   ; R19 := R19["mStanding"]
 67 [-]: EQ        1 R19 K1     ; if R19 == 0.000000 then PC := 205
 68 [-]: JMP       205          ; PC := 205
 69 [-]: GETTABLE  R20 R4 R18   ; R20 := R4[R18]
 70 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["mTag"]
 71 [-]: GETGLOBAL R21 K12      ; R21 := 0x0469f296
 72 [-]: LOADK     R22 K13      ; R22 := "CetusSyndicate"
 73 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 74 [-]: GETGLOBAL R22 K12      ; R22 := 0x0469f296
 75 [-]: LOADK     R23 K14      ; R23 := "QuillSyndicate"
 76 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 77 [-]: GETGLOBAL R23 K12      ; R23 := 0x0469f296
 78 [-]: LOADK     R24 K15      ; R24 := "VentKidsSyndicate"
 79 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 80 [-]: LOADK     R24 K16      ; R24 := "/Lotus/Syndicates/"
 81 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 85
 82 [-]: JMP       85           ; PC := 85
 83 [-]: EQ        0 R20 R22    ; if R20 ~= R22 then PC := 89
 84 [-]: JMP       89           ; PC := 89
 85 [-]: MOVE      R25 R24      ; R25 := R24
 86 [-]: LOADK     R26 K17      ; R26 := "Ostron/"
 87 [-]: CONCAT    R24 R25 R26  ; R24 := R25 .. R26
 88 [-]: JMP       99           ; PC := 99
 89 [-]: EQ        1 R20 R23    ; if R20 == R23 then PC := 96
 90 [-]: JMP       96           ; PC := 96
 91 [-]: GETGLOBAL R25 K12      ; R25 := 0x0469f296
 92 [-]: LOADK     R26 K18      ; R26 := "SolarisSyndicate"
 93 [-]: CALL      R25 2 2      ; R25 := R25(R26)
 94 [-]: EQ        0 R20 R25    ; if R20 ~= R25 then PC := 99
 95 [-]: JMP       99           ; PC := 99
 96 [-]: MOVE      R25 R24      ; R25 := R24
 97 [-]: LOADK     R26 K19      ; R26 := "Solaris/"
 98 [-]: CONCAT    R24 R25 R26  ; R24 := R25 .. R26
 99 [-]: GETGLOBAL R25 K20      ; R25 := 0xb009bbc6
100 [-]: GETGLOBAL R26 K21      ; R26 := 0xa94df70b
101 [-]: SELF      R26 R26 K22  ; R27 := R26; R26 := R26[0x07408254]
102 [-]: MOVE      R28 R20      ; R28 := R20
103 [-]: CALL      R26 3 0      ; R26,... := R26(R27,R28)
104 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
105 [-]: MOVE      R1 R25       ; R1 := R25
106 [-]: GETGLOBAL R25 K23      ; R25 := 0xae91e43b
107 [-]: SELF      R25 R25 K24  ; R26 := R25; R25 := R25[0x42b04007]
108 [-]: SELF      R27 R1 K25   ; R28 := R1; R27 := R1[0xdff9d2a7]
109 [-]: CALL      R27 2 2      ; R27 := R27(R28)
110 [-]: SELF      R27 R27 K26  ; R28 := R27; R27 := R27[0x6d604ba7]
111 [-]: CALL      R27 2 2      ; R27 := R27(R28)
112 [-]: LOADKB    R28 0 0      ; R28 := false
113 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
114 [-]: MOVE      R3 R25       ; R3 := R25
115 [-]: SELF      R25 R1 K27   ; R26 := R1; R25 := R1[0x056dcf06]
116 [-]: CALL      R25 2 2      ; R25 := R25(R26)
117 [-]: MOVE      R2 R25       ; R2 := R25
118 [-]: CONST     R25 0        ; R25 := 0.000000
119 [-]: CONST     R26 0        ; R26 := 0.000000
120 [-]: CONST     R27 0        ; R27 := 0.000000
121 [-]: LOADKB    R28 0 0      ; R28 := false
122 [-]: GETGLOBAL R29 K28      ; R29 := _T
123 [-]: GETTABLE  R29 R29 K29  ; R29 := R29["MissionEnded"]
124 [-]: TEST      R29 1        ; if R29 then PC := 137
125 [-]: JMP       137          ; PC := 137
126 [-]: GETUPVAL  R29 U3       ; R29 := U3
127 [-]: GETTABLE  R29 R29 K30  ; R29 := R29[0xcdc34211]
128 [-]: CALL      R29 1 2      ; R29 := R29()
129 [-]: TEST      R29 0        ; if not R29 then PC := 137
130 [-]: JMP       137          ; PC := 137
131 [-]: GETGLOBAL R29 K28      ; R29 := _T
132 [-]: GETTABLE  R29 R29 K31  ; R29 := R29["eomScreenMode"]
133 [-]: GETUPVAL  R30 U4       ; R30 := U4
134 [-]: GETTABLE  R30 R30 K32  ; R30 := R30["ACTUAL_EOM"]
135 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 146
136 [-]: JMP       146          ; PC := 146
137 [-]: GETUPVAL  R29 U3       ; R29 := U3
138 [-]: GETTABLE  R29 R29 K33  ; R29 := R29[0x338a8686]
139 [-]: MOVE      R30 R1       ; R30 := R1
140 [-]: CALL      R29 2 5      ; R29,R30,R31,R32 := R29(R30)
141 [-]: MOVE      R28 R32      ; R28 := R32
142 [-]: MOVE      R27 R31      ; R27 := R31
143 [-]: MOVE      R26 R30      ; R26 := R30
144 [-]: MOVE      R25 R29      ; R25 := R29
145 [-]: JMP       157          ; PC := 157
146 [-]: GETUPVAL  R29 U3       ; R29 := U3
147 [-]: GETTABLE  R29 R29 K33  ; R29 := R29[0x338a8686]
148 [-]: MOVE      R30 R1       ; R30 := R1
149 [-]: MOVE      R31 R19      ; R31 := R19
150 [-]: LOADNIL   R32 R33      ; R32 := R33 := nil
151 [-]: LOADKB    R34 1 0      ; R34 := true
152 [-]: CALL      R29 6 5      ; R29,R30,R31,R32 := R29(R30,R31,R32,R33,R34)
153 [-]: MOVE      R28 R32      ; R28 := R32
154 [-]: MOVE      R27 R31      ; R27 := R31
155 [-]: MOVE      R26 R30      ; R26 := R30
156 [-]: MOVE      R25 R29      ; R25 := R29
157 [-]: GETGLOBAL R29 K34      ; R29 := 0x64fb1586
158 [-]: SELF      R30 R1 K35   ; R31 := R1; R30 := R1[0x6bd7c146]
159 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
160 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
161 [-]: EQ        1 R29 K2     ; if R29 == "" then PC := 172
162 [-]: JMP       172          ; PC := 172
163 [-]: GETGLOBAL R30 K23      ; R30 := 0xae91e43b
164 [-]: SELF      R30 R30 K24  ; R31 := R30; R30 := R30[0x42b04007]
165 [-]: LOADK     R32 K36      ; R32 := "<"
166 [-]: MOVE      R33 R29      ; R33 := R29
167 [-]: LOADK     R34 K37      ; R34 := ">"
168 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
169 [-]: LOADKB    R33 1 0      ; R33 := true
170 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
171 [-]: MOVE      R29 R30      ; R29 := R30
172 [-]: GETUPVAL  R30 U3       ; R30 := U3
173 [-]: GETTABLE  R30 R30 K38  ; R30 := R30[0xe6b719a2]
174 [-]: CALL      R30 1 2      ; R30 := R30()
175 [-]: SELF      R31 R2 K39   ; R32 := R2; R31 := R2[0xed4e0128]
176 [-]: CALL      R31 2 2      ; R31 := R31(R32)
177 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
178 [-]: NEWTABLE  R31 0 12     ; R31 := {}
179 [-]: SETTABLE  R31 K40 R1   ; R31["Type"] := R1
180 [-]: SETTABLE  R31 K41 K42  ; R31["Syndicate"] := true
181 [-]: SETTABLE  R31 K43 R25  ; R31["Level"] := R25
182 [-]: SETTABLE  R31 K44 R26  ; R31["Standing"] := R26
183 [-]: SETTABLE  R31 K45 R19  ; R31["NewStanding"] := R19
184 [-]: SETTABLE  R31 K46 R27  ; R31["MaxStanding"] := R27
185 [-]: SETTABLE  R31 K47 R2   ; R31["Icon"] := R2
186 [-]: SETTABLE  R31 K48 K42  ; R31["Themed"] := true
187 [-]: SETTABLE  R31 K49 R3   ; R31["Name"] := R3
188 [-]: GETGLOBAL R32 K34      ; R32 := 0x64fb1586
189 [-]: SELF      R33 R1 K51   ; R34 := R1; R33 := R1[0x5660f6f0]
190 [-]: CALL      R33 2 2      ; R33 := R33(R34)
191 [-]: SELF      R33 R33 K52  ; R34 := R33; R33 := R33[0xa5d5c8f6]
192 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
193 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
194 [-]: SETTABLE  R31 K50 R32  ; R31["IconColor"] := R32
195 [-]: GETUPVAL  R32 U5       ; R32 := U5
196 [-]: MOVE      R33 R1       ; R33 := R1
197 [-]: CALL      R32 2 2      ; R32 := R32(R33)
198 [-]: SETTABLE  R31 K53 R32  ; R31["BackgroundColor"] := R32
199 [-]: SETTABLE  R31 K54 R30  ; R31["BackgroundIconPos"] := R30
200 [-]: GETGLOBAL R32 K55      ; R32 := mAffinityGrid
201 [-]: SELF      R32 R32 K56  ; R33 := R32; R32 := R32[0xbad4316f]
202 [-]: MOVE      R34 R31      ; R34 := R31
203 [-]: LOADKB    R35 1 0      ; R35 := true
204 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
205 [-]: FORLOOP   R15 65       ; R15 += R17; if R15 <= R16 then begin PC := 65; R18 := R15 end
206 [-]: LOADKB    R32 1 0      ; R32 := true
207 [-]: SETGLOBAL R32 K0       ; mReputationScreenInitialized := R32
208 [-]: RETURN    R0 1         ; return 


; Function #67.1:
;
; Name:            
; Defined at line: 1930
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mStanding"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mStanding"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADKB    R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 1987
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R1 0         ; if not R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R2 1 1       ; R2()
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: LOADKB    R4 0 0       ; R4 := false
  9 [-]: CALL      R2 3 1       ; R2(R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 1998
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0xa94df70b
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x8427bf69]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
 11 [-]: RETURN    R2 0         ; return R2,...
 12 [-]: JMP       15           ; PC := 15
 13 [-]: CONST     R2 0         ; R2 := 0.000000
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2006
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mItemType"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mItemType"]
  7 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xf2deaf69]
  8 [-]: GETGLOBAL R5 K3        ; R5 := gLotusArtifactUpgradeType
  9 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 10 [-]: TEST      R3 1         ; if R3 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 42
 14 [-]: JMP       42           ; PC := 42
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0xce225efa
 16 [-]: CONST     R4 0         ; R4 := 0.000000
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: GETGLOBAL R3 K6        ; R3 := 0xc8802016
 19 [-]: GETGLOBAL R4 K7        ; R4 := mMods
 20 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 21 [-]: JMP       40           ; PC := 40
 22 [-]: GETTABLE  R8 R7 K8     ; R8 := R7["upg"]
 23 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mItemType"]
 24 [-]: GETTABLE  R10 R8 K1    ; R10 := R8["mItemType"]
 25 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 40
 26 [-]: JMP       40           ; PC := 40
 27 [-]: GETTABLE  R9 R7 K9     ; R9 := R7["FromEnemyCache"]
 28 [-]: EQ        0 R9 K4      ; if R9 ~= nil then PC := 40
 29 [-]: JMP       40           ; PC := 40
 30 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mUpgradeFingerprint"]
 31 [-]: GETTABLE  R10 R8 K10   ; R10 := R8["mUpgradeFingerprint"]
 32 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETTABLE  R11 R7 K8    ; R11 := R7["upg"]
 35 [-]: GETTABLE  R12 R8 K11   ; R12 := R8["mItemCount"]
 36 [-]: GETTABLE  R13 R0 K11   ; R13 := R0["mItemCount"]
 37 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
 38 [-]: SETTABLE  R11 K11 R12  ; R11["mItemCount"] := R12
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 22; R5 := R6 end
 41 [-]: JMP       22           ; PC := 22
 42 [-]: GETGLOBAL R11 K12      ; R11 := 0x6c97a788
 43 [-]: GETTABLE  R11 R11 K13  ; R11 := R11[0x1aba4d9e]
 44 [-]: CALL      R11 1 2      ; R11 := R11()
 45 [-]: GETTABLE  R12 R0 K1    ; R12 := R0["mItemType"]
 46 [-]: SETTABLE  R11 K1 R12   ; R11["mItemType"] := R12
 47 [-]: GETTABLE  R12 R0 K10   ; R12 := R0["mUpgradeFingerprint"]
 48 [-]: SETTABLE  R11 K10 R12  ; R11["mUpgradeFingerprint"] := R12
 49 [-]: GETTABLE  R12 R0 K11   ; R12 := R0["mItemCount"]
 50 [-]: SETTABLE  R11 K11 R12  ; R11["mItemCount"] := R12
 51 [-]: GETGLOBAL R12 K14      ; R12 := 0x33bdd652
 52 [-]: GETTABLE  R12 R12 K15  ; R12 := R12[0x23d5322f]
 53 [-]: GETGLOBAL R13 K7       ; R13 := mMods
 54 [-]: NEWTABLE  R14 0 3      ; R14 := {}
 55 [-]: SETTABLE  R14 K8 R11   ; R14["upg"] := R11
 56 [-]: SETTABLE  R14 K9 R1    ; R14["FromEnemyCache"] := R1
 57 [-]: SETTABLE  R14 K16 R2   ; R14["SortPriority"] := R2
 58 [-]: CALL      R12 3 1      ; R12(R13,R14)
 59 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2036
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: CONST     R1 0         ; R1 := 0.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 31
  6 [-]: JMP       31           ; PC := 31
  7 [-]: LT        0 R1 K1      ; if R1 >= 1.000000 then PC := 31
  8 [-]: JMP       31           ; PC := 31
  9 [-]: GETGLOBAL R2 K2        ; R2 := 0x42dcc9f5
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x67652851
 11 [-]: CALL      R3 1 2       ; R3 := R3()
 12 [-]: MUL       R3 R3 K4     ; R3 := R3 * 0.750000
 13 [-]: ADD       R3 R1 R3     ; R3 := R1 + R3
 14 [-]: CONST     R4 0         ; R4 := 0.000000
 15 [-]: CONST     R5 1         ; R5 := 1.000000
 16 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 17 [-]: MOVE      R1 R2        ; R1 := R2
 18 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0[0xacea6d71]
 19 [-]: GETGLOBAL R4 K6        ; R4 := 0x9bafffe3
 20 [-]: CONST     R5 65        ; R5 := 65.000000
 21 [-]: CONST     R6 50        ; R6 := 50.000000
 22 [-]: GETGLOBAL R7 K7        ; R7 := 0xa533083a
 23 [-]: MOVE      R8 R1        ; R8 := R1
 24 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 25 [-]: CALL      R4 0 0       ; R4,... := R4(R5,...)
 26 [-]: CALL      R2 0 1       ; R2(R3,...)
 27 [-]: GETGLOBAL R2 K8        ; R2 := 0xcbd666e1
 28 [-]: CONST     R3 0         ; R3 := 0.000000
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: JMP       2            ; PC := 2
 31 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 2045
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  38

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xadbdc520]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 0         ; if not R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: NEWTABLE  R2 3 0       ; R2 := {}
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0x0469f296
 11 [-]: LOADK     R4 K3        ; R4 := "Tenno"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K2        ; R4 := 0x0469f296
 14 [-]: LOADK     R5 K4        ; R5 := "TennoA"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K2        ; R5 := 0x0469f296
 17 [-]: LOADK     R6 K5        ; R6 := "TennoB"
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K2        ; R6 := 0x0469f296
 20 [-]: LOADK     R7 K6        ; R7 := "TennoC"
 21 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 22 [-]: SETLIST   R2 0 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 0
 23 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 24 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 25 [-]: GETGLOBAL R5 K7        ; R5 := 0x25d99d89
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: TEST      R4 1         ; if R4 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: GETGLOBAL R4 K7        ; R4 := 0x25d99d89
 30 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xb4b6647c]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: MOVE      R3 R4        ; R3 := R4
 33 [-]: GETGLOBAL R4 K9        ; R4 := _T
 34 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["TestPlayerCount"]
 35 [-]: EQ        1 R4 K11     ; if R4 == nil then PC := 52
 36 [-]: JMP       52           ; PC := 52
 37 [-]: LEN       R4 R3        ; R4 := # R3
 38 [-]: LT        0 K12 R4     ; if 0.000000 >= R4 then PC := 52
 39 [-]: JMP       52           ; PC := 52
 40 [-]: LEN       R4 R3        ; R4 := # R3
 41 [-]: ADD       R4 R4 K13    ; R4 := R4 + 1.000000
 42 [-]: GETGLOBAL R5 K9        ; R5 := _T
 43 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["TestPlayerCount"]
 44 [-]: CONST     R6 1         ; R6 := 1.000000
 45 [-]: FORPREP   R4 51        ; R4 -= R6; PC := 51
 46 [-]: GETGLOBAL R8 K14       ; R8 := 0x33bdd652
 47 [-]: GETTABLE  R8 R8 K15    ; R8 := R8[0x23d5322f]
 48 [-]: MOVE      R9 R3        ; R9 := R3
 49 [-]: GETTABLE  R10 R3 K13   ; R10 := R3[1.000000]
 50 [-]: CALL      R8 3 1       ; R8(R9,R10)
 51 [-]: FORLOOP   R4 46        ; R4 += R6; if R4 <= R5 then begin PC := 46; R7 := R4 end
 52 [-]: LOADNIL   R8 R8        ; R8 := nil
 53 [-]: GETUPVAL  R9 U0        ; R9 := U0
 54 [-]: CALL      R9 1 2       ; R9 := R9()
 55 [-]: GETTABLE  R10 R9 K16   ; R10 := R9["syndicateTag"]
 56 [-]: GETGLOBAL R11 K2       ; R11 := 0x0469f296
 57 [-]: LOADK     R12 K17      ; R12 := "KahlSyndicate"
 58 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 59 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 62
 62 [-]: LOADKB    R10 1 0      ; R10 := true
 63 [-]: TEST      R10 0        ; if not R10 then PC := 154
 64 [-]: JMP       154          ; PC := 154
 65 [-]: LEN       R11 R3       ; R11 := # R3
 66 [-]: LT        0 K12 R11    ; if 0.000000 >= R11 then PC := 134
 67 [-]: JMP       134          ; PC := 134
 68 [-]: SELF      R11 R1 K18   ; R12 := R1; R11 := R1[0x05909209]
 69 [-]: GETGLOBAL R13 K19      ; R13 := 0x35c92034
 70 [-]: GETGLOBAL R14 K20      ; R14 := ZERO_VECTOR
 71 [-]: GETGLOBAL R15 K21      ; R15 := ZERO_ROTATION
 72 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
 73 [-]: MOVE      R8 R11       ; R8 := R11
 74 [-]: SELF      R11 R8 K22   ; R12 := R8; R11 := R8[0xde321e6f]
 75 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 76 [-]: GETTABLE  R12 R3 K13   ; R12 := R3[1.000000]
 77 [-]: GETTABLE  R12 R12 K23  ; R12 := R12["mKahlCustomization"]
 78 [-]: GETGLOBAL R13 K24      ; R13 := 0xc8802016
 79 [-]: GETGLOBAL R14 K7       ; R14 := 0x25d99d89
 80 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x25a6e75e]
 81 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 82 [-]: SELF      R14 R14 K26  ; R15 := R14; R14 := R14[0x1f3b6ec7]
 83 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 84 [-]: CALL      R13 0 4      ; R13,R14,R15 := R13(R14,...)
 85 [-]: JMP       100          ; PC := 100
 86 [-]: GETTABLE  R18 R17 K27  ; R18 := R17["mItemId"]
 87 [-]: GETTABLE  R18 R18 K28  ; R18 := R18["mId"]
 88 [-]: GETTABLE  R19 R12 K27  ; R19 := R12["mItemId"]
 89 [-]: GETTABLE  R19 R19 K28  ; R19 := R19["mId"]
 90 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 100
 91 [-]: JMP       100          ; PC := 100
 92 [-]: SELF      R20 R11 K29  ; R21 := R11; R20 := R11[0xf7d48ee0]
 93 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 94 [-]: SELF      R21 R12 K30  ; R22 := R12; R21 := R12[0x8f89d633]
 95 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 96 [-]: MOVE      R12 R21      ; R12 := R21
 97 [-]: SELF      R21 R20 K31  ; R22 := R20; R21 := R20[0xaa041663]
 98 [-]: GETTABLE  R23 R12 K32  ; R23 := R12["mCustomization"]
 99 [-]: CALL      R21 3 1      ; R21(R22,R23)
100 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 86; R15 := R16 end
101 [-]: JMP       86           ; PC := 86
102 [-]: SELF      R21 R8 K33   ; R22 := R8; R21 := R8[0x26d544fc]
103 [-]: GETTABLE  R23 R2 K13   ; R23 := R2[1.000000]
104 [-]: CALL      R21 3 1      ; R21(R22,R23)
105 [-]: SELF      R21 R1 K18   ; R22 := R1; R21 := R1[0x05909209]
106 [-]: GETGLOBAL R23 K34      ; R23 := 0xecd3259e
107 [-]: GETGLOBAL R24 K20      ; R24 := ZERO_VECTOR
108 [-]: GETGLOBAL R25 K21      ; R25 := ZERO_ROTATION
109 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
110 [-]: MOVE      R8 R21       ; R8 := R21
111 [-]: SELF      R21 R8 K33   ; R22 := R8; R21 := R8[0x26d544fc]
112 [-]: GETTABLE  R23 R2 K35   ; R23 := R2[3.000000]
113 [-]: CALL      R21 3 1      ; R21(R22,R23)
114 [-]: SELF      R21 R1 K18   ; R22 := R1; R21 := R1[0x05909209]
115 [-]: GETGLOBAL R23 K34      ; R23 := 0xecd3259e
116 [-]: GETGLOBAL R24 K20      ; R24 := ZERO_VECTOR
117 [-]: GETGLOBAL R25 K21      ; R25 := ZERO_ROTATION
118 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
119 [-]: MOVE      R8 R21       ; R8 := R21
120 [-]: SELF      R21 R8 K33   ; R22 := R8; R21 := R8[0x26d544fc]
121 [-]: GETTABLE  R23 R2 K36   ; R23 := R2[4.000000]
122 [-]: CALL      R21 3 1      ; R21(R22,R23)
123 [-]: SELF      R21 R1 K18   ; R22 := R1; R21 := R1[0x05909209]
124 [-]: GETGLOBAL R23 K34      ; R23 := 0xecd3259e
125 [-]: GETGLOBAL R24 K20      ; R24 := ZERO_VECTOR
126 [-]: GETGLOBAL R25 K21      ; R25 := ZERO_ROTATION
127 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
128 [-]: MOVE      R8 R21       ; R8 := R21
129 [-]: SELF      R21 R8 K33   ; R22 := R8; R21 := R8[0x26d544fc]
130 [-]: GETGLOBAL R23 K2       ; R23 := 0x0469f296
131 [-]: LOADK     R24 K37      ; R24 := "TennoD"
132 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
133 [-]: CALL      R21 0 1      ; R21(R22,...)
134 [-]: SELF      R21 R1 K18   ; R22 := R1; R21 := R1[0x05909209]
135 [-]: GETGLOBAL R23 K38      ; R23 := 0x6ae3251d
136 [-]: GETGLOBAL R24 K39      ; R24 := 0xa421af95
137 [-]: LOADK     R25 K40      ; R25 := 0.400000
138 [-]: LOADK     R26 K41      ; R26 := 1.300000
139 [-]: LOADK     R27 K42      ; R27 := 2.900000
140 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
141 [-]: GETGLOBAL R25 K43      ; R25 := 0x00046924
142 [-]: CONST     R26 190      ; R26 := 190.000000
143 [-]: CONST     R27 -1       ; R27 := -1.000000
144 [-]: CONST     R28 0        ; R28 := 0.000000
145 [-]: CALL      R25 4 0      ; R25,... := R25(R26,R27,R28)
146 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
147 [-]: SELF      R22 R21 K44  ; R23 := R21; R22 := R21[0xd5f7912b]
148 [-]: GETGLOBAL R24 K2       ; R24 := 0x0469f296
149 [-]: LOADK     R25 K45      ; R25 := "ZoomCam"
150 [-]: CALL      R24 2 2      ; R24 := R24(R25)
151 [-]: LOADKB    R25 0 0      ; R25 := false
152 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
153 [-]: JMP       234          ; PC := 234
154 [-]: GETGLOBAL R22 K24      ; R22 := 0xc8802016
155 [-]: MOVE      R23 R2       ; R23 := R2
156 [-]: CALL      R22 2 4      ; R22,R23,R24 := R22(R23)
157 [-]: JMP       213          ; PC := 213
158 [-]: LEN       R27 R3       ; R27 := # R3
159 [-]: LE        0 R25 R27    ; if R25 > R27 then PC := 213
160 [-]: JMP       213          ; PC := 213
161 [-]: SELF      R27 R1 K18   ; R28 := R1; R27 := R1[0x05909209]
162 [-]: GETGLOBAL R29 K46      ; R29 := 0x88efc25e
163 [-]: LOADK     R30 K47      ; R30 := "/Lotus/Types/Player/TennoDioramaAvatar"
164 [-]: CALL      R29 2 2      ; R29 := R29(R30)
165 [-]: GETGLOBAL R30 K20      ; R30 := ZERO_VECTOR
166 [-]: GETGLOBAL R31 K21      ; R31 := ZERO_ROTATION
167 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
168 [-]: MOVE      R8 R27       ; R8 := R27
169 [-]: SELF      R27 R8 K22   ; R28 := R8; R27 := R8[0xde321e6f]
170 [-]: CALL      R27 2 2      ; R27 := R27(R28)
171 [-]: GETTABLE  R28 R3 R25   ; R28 := R3[R25]
172 [-]: SELF      R29 R27 K48  ; R30 := R27; R29 := R27[0x9c596606]
173 [-]: MOVE      R31 R28      ; R31 := R28
174 [-]: CONST     R32 0        ; R32 := 0.000000
175 [-]: CONST     R33 1        ; R33 := 1.000000
176 [-]: LOADKB    R34 0 0      ; R34 := false
177 [-]: CALL      R29 6 1      ; R29(R30,R31,R32,R33,R34)
178 [-]: SELF      R29 R27 K48  ; R30 := R27; R29 := R27[0x9c596606]
179 [-]: MOVE      R31 R28      ; R31 := R28
180 [-]: CONST     R32 0        ; R32 := 0.000000
181 [-]: CONST     R33 2        ; R33 := 2.000000
182 [-]: LOADKB    R34 0 0      ; R34 := false
183 [-]: CALL      R29 6 1      ; R29(R30,R31,R32,R33,R34)
184 [-]: SELF      R29 R27 K48  ; R30 := R27; R29 := R27[0x9c596606]
185 [-]: MOVE      R31 R28      ; R31 := R28
186 [-]: CONST     R32 0        ; R32 := 0.000000
187 [-]: CONST     R33 3        ; R33 := 3.000000
188 [-]: LOADKB    R34 0 0      ; R34 := false
189 [-]: CALL      R29 6 1      ; R29(R30,R31,R32,R33,R34)
190 [-]: SELF      R29 R27 K48  ; R30 := R27; R29 := R27[0x9c596606]
191 [-]: MOVE      R31 R28      ; R31 := R28
192 [-]: CONST     R32 0        ; R32 := 0.000000
193 [-]: CONST     R33 0        ; R33 := 0.000000
194 [-]: LOADKB    R34 0 0      ; R34 := false
195 [-]: CALL      R29 6 1      ; R29(R30,R31,R32,R33,R34)
196 [-]: SELF      R29 R8 K33   ; R30 := R8; R29 := R8[0x26d544fc]
197 [-]: MOVE      R31 R26      ; R31 := R26
198 [-]: CALL      R29 3 1      ; R29(R30,R31)
199 [-]: SELF      R29 R27 K50  ; R30 := R27; R29 := R27[0x4703255b]
200 [-]: CONST     R31 0        ; R31 := 0.000000
201 [-]: CONST     R32 2        ; R32 := 2.000000
202 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
203 [-]: SELF      R29 R27 K52  ; R30 := R27; R29 := R27[0x2676deee]
204 [-]: CALL      R29 2 2      ; R29 := R29(R30)
205 [-]: GETGLOBAL R30 K1       ; R30 := 0x7b998233
206 [-]: MOVE      R31 R29      ; R31 := R29
207 [-]: CALL      R30 2 2      ; R30 := R30(R31)
208 [-]: TEST      R30 1        ; if R30 then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: SELF      R30 R1 K53   ; R31 := R1; R30 := R1[0x59c96e77]
211 [-]: MOVE      R32 R29      ; R32 := R29
212 [-]: CALL      R30 3 1      ; R30(R31,R32)
213 [-]: TFORLOOP  R22 2        ; R25,R26 :=  R22(R23,R24); if R25 ~= nil then begin PC = 158; R24 := R25 end
214 [-]: JMP       158          ; PC := 158
215 [-]: SELF      R30 R1 K18   ; R31 := R1; R30 := R1[0x05909209]
216 [-]: GETGLOBAL R32 K38      ; R32 := 0x6ae3251d
217 [-]: GETGLOBAL R33 K39      ; R33 := 0xa421af95
218 [-]: LOADK     R34 K54      ; R34 := 0.180000
219 [-]: LOADK     R35 K55      ; R35 := 1.100000
220 [-]: LOADK     R36 K42      ; R36 := 2.900000
221 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
222 [-]: GETGLOBAL R34 K43      ; R34 := 0x00046924
223 [-]: CONST     R35 175      ; R35 := 175.000000
224 [-]: CONST     R36 -1       ; R36 := -1.000000
225 [-]: CONST     R37 0        ; R37 := 0.000000
226 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
227 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
228 [-]: SELF      R31 R30 K44  ; R32 := R30; R31 := R30[0xd5f7912b]
229 [-]: GETGLOBAL R33 K2       ; R33 := 0x0469f296
230 [-]: LOADK     R34 K45      ; R34 := "ZoomCam"
231 [-]: CALL      R33 2 2      ; R33 := R33(R34)
232 [-]: LOADKB    R34 0 0      ; R34 := false
233 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
234 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 2125
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWaitingForReturnToShip
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0xcdc34211]
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: TEST      R1 0         ; if not R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: TEST      R1 0         ; if not R1 then PC := 64
 11 [-]: JMP       64           ; PC := 64
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K3        ; R2 := mDioramaLoader
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 46
 19 [-]: JMP       46           ; PC := 46
 20 [-]: GETGLOBAL R1 K3        ; R1 := mDioramaLoader
 21 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xcfd9cd76]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 0         ; if not R1 then PC := 46
 24 [-]: JMP       46           ; PC := 46
 25 [-]: GETGLOBAL R1 K3        ; R1 := mDioramaLoader
 26 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x842bdef9]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 46
 29 [-]: JMP       46           ; PC := 46
 30 [-]: GETGLOBAL R1 K6        ; R1 := mBG
 31 [-]: EQ        0 R1 K7      ; if R1 ~= 1.000000 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETGLOBAL R1 K3        ; R1 := mDioramaLoader
 34 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xa4497305]
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: LOADKB    R1 0 0       ; R1 := false
 37 [-]: SETGLOBAL R1 K9        ; mInputBlocked := R1
 38 [-]: JMP       46           ; PC := 46
 39 [-]: CONST     R1 1         ; R1 := 1.000000
 40 [-]: SETGLOBAL R1 K6        ; mBG := R1
 41 [-]: GETGLOBAL R1 K10       ; R1 := 0xae91e43b
 42 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x58bec6d6]
 43 [-]: GETGLOBAL R3 K6        ; R3 := mBG
 44 [-]: CALL      R1 3 1       ; R1(R2,R3)
 45 [-]: RETURN    R0 1         ; return 
 46 [-]: GETGLOBAL R1 K12       ; R1 := mPulseBG
 47 [-]: TEST      R1 1         ; if R1 then PC := 64
 48 [-]: JMP       64           ; PC := 64
 49 [-]: GETGLOBAL R1 K6        ; R1 := mBG
 50 [-]: LT        0 K13 R1     ; if 0.000000 >= R1 then PC := 64
 51 [-]: JMP       64           ; PC := 64
 52 [-]: GETGLOBAL R1 K14       ; R1 := 0x5bced4c4
 53 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[0xb62ecfe0]
 54 [-]: CONST     R2 0         ; R2 := 0.000000
 55 [-]: GETGLOBAL R3 K6        ; R3 := mBG
 56 [-]: MUL       R4 R0 K7     ; R4 := R0 * 1.000000
 57 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
 58 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 59 [-]: SETGLOBAL R1 K6        ; mBG := R1
 60 [-]: GETGLOBAL R1 K10       ; R1 := 0xae91e43b
 61 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x58bec6d6]
 62 [-]: GETGLOBAL R3 K6        ; R3 := mBG
 63 [-]: CALL      R1 3 1       ; R1(R2,R3)
 64 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 2146
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: CALL      R1 1 2       ; R1 := R1()
  5 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["missionType"]
  6 [-]: EQ        0 R1 K2      ; if R1 ~= 8.000000 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: LOADKB    R2 1 0       ; R2 := true
  9 [-]: RETURN    R2 2         ; return R2
 10 [-]: JMP       26           ; PC := 26
 11 [-]: EQ        0 R1 K3      ; if R1 ~= 31.000000 then PC := 26
 12 [-]: JMP       26           ; PC := 26
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x7f5022cf
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xa5c556b9]
 15 [-]: GETGLOBAL R3 K6        ; R3 := 0x64fb1586
 16 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["levelOverride"]
 17 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xed4e0128]
 18 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 19 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 20 [-]: LOADK     R4 K9        ; R4 := "Defense"
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: TEST      R2 0         ; if not R2 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADKB    R2 1 0       ; R2 := true
 25 [-]: RETURN    R2 2         ; return R2
 26 [-]: LOADKB    R2 0 0       ; R2 := false
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 2157
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: EQ        1 R0 K2      ; if R0 == 13.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 7
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 2161
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: LOADKB    R1 0 0       ; R1 := false
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0x76ea806b
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x3f3ae64c]
  6 [-]: CONST     R4 0         ; R4 := 0.000000
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: SELF      R3 R2 K2     ; R4 := R2; R3 := R2[0x80563238]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: SELF      R4 R3 K3     ; R5 := R3; R4 := R3[0x69727e0b]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 40
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R5 K5        ; R5 := 0xc8802016
 18 [-]: GETTABLE  R6 R4 K6     ; R6 := R4["mGoals"]
 19 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 20 [-]: JMP       38           ; PC := 38
 21 [-]: GETTABLE  R10 R9 K7    ; R10 := R9["mRoaming"]
 22 [-]: TEST      R10 0        ; if not R10 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: LOADKB    R1 1 0       ; R1 := true
 25 [-]: JMP       40           ; PC := 40
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETTABLE  R10 R9 K8    ; R10 := R9["mOptionalInMission"]
 28 [-]: TEST      R10 0        ; if not R10 then PC := 38
 29 [-]: JMP       38           ; PC := 38
 30 [-]: GETGLOBAL R10 K9       ; R10 := 0x0469f296
 31 [-]: GETTABLE  R11 R9 K10   ; R11 := R9["mNode"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["location"]
 34 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADKB    R10 1 0      ; R10 := true
 37 [-]: RETURN    R10 2        ; return R10
 38 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 21; R7 := R8 end
 39 [-]: JMP       21           ; PC := 21
 40 [-]: GETGLOBAL R10 K4       ; R10 := 0x7b998233
 41 [-]: GETTABLE  R11 R0 K12   ; R11 := R0["goalId"]
 42 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 43 [-]: TEST      R10 1        ; if R10 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETTABLE  R10 R0 K12   ; R10 := R0["goalId"]
 46 [-]: EQ        0 R10 K13    ; if R10 ~= "" then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: MOVE      R10 R1       ; R10 := R1
 49 [-]: JMP       52           ; PC := 52
 50 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 51
 51 [-]: LOADKB    R10 1 0      ; R10 := true
 52 [-]: RETURN    R10 2        ; return R10
 53 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 2182
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: EQ        1 R0 K2      ; if R0 == 2.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 7
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 2186
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: EQ        1 R0 K2      ; if R0 == 3.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 7
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 2190
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: EQ        1 R0 K2      ; if R0 == 15.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 7
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 2194
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: EQ        1 R0 K2      ; if R0 == 17.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 7
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 2198
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7f5022cf
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xa5c556b9]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0x64fb1586
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["goalTag"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: LOADK     R2 K4        ; R2 := "TimeAttack"
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: EQ        0 R0 K5      ; if R0 ~= nil then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["alertTag"]
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x0469f296
 16 [-]: LOADK     R2 K8        ; R2 := "SpeedRun"
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 21
 21 [-]: LOADKB    R0 1 0       ; R0 := true
 22 [-]: RETURN    R0 2         ; return R0
 23 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 2202
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ACTUAL_EOM"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 8
  8 [-]: LOADKB    R0 1 0       ; R0 := true
  9 [-]: TEST      R0 1         ; if R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 38
 16 [-]: JMP       38           ; PC := 38
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0xbe190284
 18 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf2deaf69]
 19 [-]: GETGLOBAL R3 K6        ; R3 := gLotusBaseGameRulesType
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 38
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETGLOBAL R1 K4        ; R1 := 0xbe190284
 24 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xef893aec]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["tier"]
 27 [-]: LT        0 K9 R1      ; if 0.000000 >= R1 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETGLOBAL R1 K10       ; R1 := 0xb009bbc6
 30 [-]: GETUPVAL  R2 U1        ; R2 := U1
 31 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0xed4e0128]
 32 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 33 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 34 [-]: GETGLOBAL R2 K0        ; R2 := _T
 35 [-]: SELF      R3 R1 K13    ; R4 := R1; R3 := R1[0xf83826b3]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: SETTABLE  R2 K12 R3    ; R2["EndOfMissionVoiceOverride"] := R3
 38 [-]: GETUPVAL  R2 U2        ; R2 := U2
 39 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["FactionHunterSpawned"]
 40 [-]: EQ        0 R2 K9      ; if R2 ~= 0.000000 then PC := 69
 41 [-]: JMP       69           ; PC := 69
 42 [-]: GETUPVAL  R2 U2        ; R2 := U2
 43 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["NumDeathSquadVictims"]
 44 [-]: EQ        0 R2 K9      ; if R2 ~= 0.000000 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: GETUPVAL  R2 U3        ; R2 := U3
 47 [-]: GETTABLE  R2 R2 K17    ; R2 := R2[0xf22cfc77]
 48 [-]: GETGLOBAL R3 K18       ; R3 := 0x2006ca73
 49 [-]: GETGLOBAL R4 K19       ; R4 := 0x0469f296
 50 [-]: LOADK     R5 K20       ; R5 := "MissionCompleteDeathSquadEscape"
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: GETGLOBAL R5 K21       ; R5 := 0x89326c93
 53 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0x78298275]
 54 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 55 [-]: CALL      R2 0 1       ; R2(R3,...)
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETUPVAL  R2 U3        ; R2 := U3
 58 [-]: GETTABLE  R2 R2 K17    ; R2 := R2[0xf22cfc77]
 59 [-]: GETGLOBAL R3 K18       ; R3 := 0x2006ca73
 60 [-]: GETGLOBAL R4 K19       ; R4 := 0x0469f296
 61 [-]: LOADK     R5 K23       ; R5 := "MissionCompleteDeathSquadNoEscape"
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: GETGLOBAL R5 K21       ; R5 := 0x89326c93
 64 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0x78298275]
 65 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 66 [-]: CALL      R2 0 1       ; R2(R3,...)
 67 [-]: RETURN    R0 1         ; return 
 68 [-]: JMP       190          ; PC := 190
 69 [-]: GETGLOBAL R2 K0        ; R2 := _T
 70 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["EndOfMissionVoiceOverride"]
 71 [-]: EQ        1 R2 K24     ; if R2 == nil then PC := 84
 72 [-]: JMP       84           ; PC := 84
 73 [-]: GETGLOBAL R2 K0        ; R2 := _T
 74 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["EndOfMissionVoiceOverride"]
 75 [-]: EQ        1 R2 K25     ; if R2 == "" then PC := 82
 76 [-]: JMP       82           ; PC := 82
 77 [-]: GETUPVAL  R2 U4        ; R2 := U4
 78 [-]: GETTABLE  R2 R2 K26    ; R2 := R2[0x659d451f]
 79 [-]: GETGLOBAL R3 K0        ; R3 := _T
 80 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["EndOfMissionVoiceOverride"]
 81 [-]: CALL      R2 2 1       ; R2(R3)
 82 [-]: RETURN    R0 1         ; return 
 83 [-]: JMP       190          ; PC := 190
 84 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 85 [-]: GETGLOBAL R3 K0        ; R3 := _T
 86 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["MissionTransmissionSet"]
 87 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 88 [-]: TEST      R2 1         ; if R2 then PC := 190
 89 [-]: JMP       190          ; PC := 190
 90 [-]: GETUPVAL  R2 U5        ; R2 := U5
 91 [-]: CALL      R2 1 2       ; R2 := R2()
 92 [-]: TEST      R2 0         ; if not R2 then PC := 174
 93 [-]: JMP       174          ; PC := 174
 94 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 95 [-]: GETGLOBAL R3 K0        ; R3 := _T
 96 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["MissionTransmissionSet"]
 97 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 98 [-]: TEST      R2 1         ; if R2 then PC := 189
 99 [-]: JMP       189          ; PC := 189
100 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
101 [-]: SELF      R2 R2 K28    ; R3 := R2; R2 := R2[0x0eb34c69]
102 [-]: GETGLOBAL R4 K19       ; R4 := 0x0469f296
103 [-]: LOADK     R5 K29       ; R5 := "Wave"
104 [-]: CALL      R4 2 2       ; R4 := R4(R5)
105 [-]: CONST     R5 0         ; R5 := 0.000000
106 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
107 [-]: GETGLOBAL R3 K4        ; R3 := 0xbe190284
108 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x3f4e18b1]
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: ADD       R3 R3 K31    ; R3 := R3 + 1.000000
111 [-]: GETGLOBAL R4 K21       ; R4 := 0x89326c93
112 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x78298275]
113 [-]: CALL      R4 2 2       ; R4 := R4(R5)
114 [-]: CONST     R5 -1        ; R5 := -1.000000
115 [-]: LOADNIL   R6 R6        ; R6 := nil
116 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
117 [-]: MOVE      R8 R4        ; R8 := R4
118 [-]: CALL      R7 2 2       ; R7 := R7(R8)
119 [-]: TEST      R7 1         ; if R7 then PC := 132
120 [-]: JMP       132          ; PC := 132
121 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
122 [-]: SELF      R8 R4 K32    ; R9 := R4; R8 := R4[0xe79e7ef4]
123 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
124 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
125 [-]: TEST      R7 1         ; if R7 then PC := 132
126 [-]: JMP       132          ; PC := 132
127 [-]: SELF      R7 R4 K32    ; R8 := R4; R7 := R4[0xe79e7ef4]
128 [-]: CALL      R7 2 2       ; R7 := R7(R8)
129 [-]: SELF      R7 R7 K33    ; R8 := R7; R7 := R7[0xb06572da]
130 [-]: CALL      R7 2 2       ; R7 := R7(R8)
131 [-]: MOVE      R5 R7        ; R5 := R7
132 [-]: EQ        1 R3 R5      ; if R3 == R5 then PC := 139
133 [-]: JMP       139          ; PC := 139
134 [-]: GETGLOBAL R7 K19       ; R7 := 0x0469f296
135 [-]: LOADK     R8 K34       ; R8 := "EndOfMatchLeftBehind"
136 [-]: CALL      R7 2 2       ; R7 := R7(R8)
137 [-]: MOVE      R6 R7        ; R6 := R7
138 [-]: JMP       157          ; PC := 157
139 [-]: LE        0 K35 R2     ; if 5.000000 > R2 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETGLOBAL R7 K19       ; R7 := 0x0469f296
142 [-]: LOADK     R8 K36       ; R8 := "EndOfMatchBest"
143 [-]: CALL      R7 2 2       ; R7 := R7(R8)
144 [-]: MOVE      R6 R7        ; R6 := R7
145 [-]: JMP       157          ; PC := 157
146 [-]: LE        0 K37 R2     ; if 2.000000 > R2 then PC := 153
147 [-]: JMP       153          ; PC := 153
148 [-]: GETGLOBAL R7 K19       ; R7 := 0x0469f296
149 [-]: LOADK     R8 K38       ; R8 := "EndOfMatchGood"
150 [-]: CALL      R7 2 2       ; R7 := R7(R8)
151 [-]: MOVE      R6 R7        ; R6 := R7
152 [-]: JMP       157          ; PC := 157
153 [-]: GETGLOBAL R7 K19       ; R7 := 0x0469f296
154 [-]: LOADK     R8 K39       ; R8 := "EndOfMatchPoor"
155 [-]: CALL      R7 2 2       ; R7 := R7(R8)
156 [-]: MOVE      R6 R7        ; R6 := R7
157 [-]: GETGLOBAL R7 K0        ; R7 := _T
158 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["MissionTransmissionSet"]
159 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7[0x10c9eef2]
160 [-]: MOVE      R9 R6        ; R9 := R6
161 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
162 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
163 [-]: MOVE      R9 R7        ; R9 := R7
164 [-]: CALL      R8 2 2       ; R8 := R8(R9)
165 [-]: TEST      R8 1         ; if R8 then PC := 189
166 [-]: JMP       189          ; PC := 189
167 [-]: GETGLOBAL R8 K4        ; R8 := 0xbe190284
168 [-]: SELF      R8 R8 K41    ; R9 := R8; R8 := R8[0x8e07e77f]
169 [-]: SELF      R10 R7 K11   ; R11 := R7; R10 := R7[0xed4e0128]
170 [-]: CALL      R10 2 2      ; R10 := R10(R11)
171 [-]: LOADK     R11 K42      ; R11 := "OnOnslaughtTransmissionReady"
172 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
173 [-]: JMP       189          ; PC := 189
174 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
175 [-]: GETGLOBAL R9 K0        ; R9 := _T
176 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["MissionTransmissionSet"]
177 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0xf83826b3]
178 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
179 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
180 [-]: TEST      R8 1         ; if R8 then PC := 189
181 [-]: JMP       189          ; PC := 189
182 [-]: GETUPVAL  R8 U4        ; R8 := U4
183 [-]: GETTABLE  R8 R8 K26    ; R8 := R8[0x659d451f]
184 [-]: GETGLOBAL R9 K0        ; R9 := _T
185 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["MissionTransmissionSet"]
186 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0xf83826b3]
187 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
188 [-]: CALL      R8 0 1       ; R8(R9,...)
189 [-]: RETURN    R0 1         ; return 
190 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
191 [-]: GETGLOBAL R9 K0        ; R9 := _T
192 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["IsLiteSortie"]
193 [-]: CALL      R8 2 2       ; R8 := R8(R9)
194 [-]: TEST      R8 1         ; if R8 then PC := 201
195 [-]: JMP       201          ; PC := 201
196 [-]: GETGLOBAL R8 K0        ; R8 := _T
197 [-]: GETTABLE  R8 R8 K43    ; R8 := R8["IsLiteSortie"]
198 [-]: TEST      R8 0         ; if not R8 then PC := 201
199 [-]: JMP       201          ; PC := 201
200 [-]: RETURN    R0 1         ; return 
201 [-]: GETUPVAL  R8 U2        ; R8 := U2
202 [-]: GETTABLE  R8 R8 K44    ; R8 := R8["MissionType"]
203 [-]: GETGLOBAL R9 K21       ; R9 := 0x89326c93
204 [-]: SELF      R9 R9 K45    ; R10 := R9; R9 := R9[0x98f20ca5]
205 [-]: CALL      R9 2 2       ; R9 := R9(R10)
206 [-]: GETTABLE  R9 R9 K46    ; R9 := R9["level"]
207 [-]: GETUPVAL  R10 U2       ; R10 := U2
208 [-]: GETTABLE  R10 R10 K47  ; R10 := R10["ExterminateMidCout"]
209 [-]: EQ        1 R10 K48    ; if R10 == 9999.000000 then PC := 222
210 [-]: JMP       222          ; PC := 222
211 [-]: GETUPVAL  R10 U3       ; R10 := U3
212 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
213 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
214 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
215 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
216 [-]: CALL      R12 2 2      ; R12 := R12(R13)
217 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
218 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
219 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
220 [-]: CALL      R10 0 1      ; R10(R11,...)
221 [-]: JMP       496          ; PC := 496
222 [-]: GETGLOBAL R10 K3       ; R10 := 0x7b998233
223 [-]: MOVE      R11 R9       ; R11 := R9
224 [-]: CALL      R10 2 2      ; R10 := R10(R11)
225 [-]: TEST      R10 1        ; if R10 then PC := 246
226 [-]: JMP       246          ; PC := 246
227 [-]: GETGLOBAL R10 K50      ; R10 := 0x7f5022cf
228 [-]: GETTABLE  R10 R10 K51  ; R10 := R10[0xa5c556b9]
229 [-]: SELF      R11 R9 K11   ; R12 := R9; R11 := R9[0xed4e0128]
230 [-]: CALL      R11 2 2      ; R11 := R11(R12)
231 [-]: LOADK     R12 K52      ; R12 := "Dojo"
232 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
233 [-]: EQ        1 R10 K24    ; if R10 == nil then PC := 246
234 [-]: JMP       246          ; PC := 246
235 [-]: GETUPVAL  R10 U3       ; R10 := U3
236 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
237 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
238 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
239 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
240 [-]: CALL      R12 2 2      ; R12 := R12(R13)
241 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
242 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
243 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
244 [-]: CALL      R10 0 1      ; R10(R11,...)
245 [-]: JMP       496          ; PC := 496
246 [-]: EQ        0 R8 K9      ; if R8 ~= 0.000000 then PC := 259
247 [-]: JMP       259          ; PC := 259
248 [-]: GETUPVAL  R10 U3       ; R10 := U3
249 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
250 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
251 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
252 [-]: LOADK     R13 K53      ; R13 := "MissionCompleteAsassinate"
253 [-]: CALL      R12 2 2      ; R12 := R12(R13)
254 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
255 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
256 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
257 [-]: CALL      R10 0 1      ; R10(R11,...)
258 [-]: JMP       496          ; PC := 496
259 [-]: EQ        0 R8 K31     ; if R8 ~= 1.000000 then PC := 272
260 [-]: JMP       272          ; PC := 272
261 [-]: GETUPVAL  R10 U3       ; R10 := U3
262 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
263 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
264 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
265 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
266 [-]: CALL      R12 2 2      ; R12 := R12(R13)
267 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
268 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
269 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
270 [-]: CALL      R10 0 1      ; R10(R11,...)
271 [-]: JMP       496          ; PC := 496
272 [-]: EQ        0 R8 K37     ; if R8 ~= 2.000000 then PC := 285
273 [-]: JMP       285          ; PC := 285
274 [-]: GETUPVAL  R10 U3       ; R10 := U3
275 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
276 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
277 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
278 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
279 [-]: CALL      R12 2 2      ; R12 := R12(R13)
280 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
281 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
282 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
283 [-]: CALL      R10 0 1      ; R10(R11,...)
284 [-]: JMP       496          ; PC := 496
285 [-]: EQ        0 R8 K54     ; if R8 ~= 3.000000 then PC := 298
286 [-]: JMP       298          ; PC := 298
287 [-]: GETUPVAL  R10 U3       ; R10 := U3
288 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
289 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
290 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
291 [-]: LOADK     R13 K55      ; R13 := "MissionCompleteRescue"
292 [-]: CALL      R12 2 2      ; R12 := R12(R13)
293 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
294 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
295 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
296 [-]: CALL      R10 0 1      ; R10(R11,...)
297 [-]: JMP       496          ; PC := 496
298 [-]: EQ        0 R8 K56     ; if R8 ~= 4.000000 then PC := 311
299 [-]: JMP       311          ; PC := 311
300 [-]: GETUPVAL  R10 U3       ; R10 := U3
301 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
302 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
303 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
304 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
305 [-]: CALL      R12 2 2      ; R12 := R12(R13)
306 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
307 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
308 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
309 [-]: CALL      R10 0 1      ; R10(R11,...)
310 [-]: JMP       496          ; PC := 496
311 [-]: EQ        0 R8 K35     ; if R8 ~= 5.000000 then PC := 324
312 [-]: JMP       324          ; PC := 324
313 [-]: GETUPVAL  R10 U3       ; R10 := U3
314 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
315 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
316 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
317 [-]: LOADK     R13 K57      ; R13 := "MissionCompleteCapture"
318 [-]: CALL      R12 2 2      ; R12 := R12(R13)
319 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
320 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
321 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
322 [-]: CALL      R10 0 1      ; R10(R11,...)
323 [-]: JMP       496          ; PC := 496
324 [-]: EQ        0 R8 K58     ; if R8 ~= 6.000000 then PC := 337
325 [-]: JMP       337          ; PC := 337
326 [-]: GETUPVAL  R10 U3       ; R10 := U3
327 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
328 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
329 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
330 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
331 [-]: CALL      R12 2 2      ; R12 := R12(R13)
332 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
333 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
334 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
335 [-]: CALL      R10 0 1      ; R10(R11,...)
336 [-]: JMP       496          ; PC := 496
337 [-]: EQ        0 R8 K59     ; if R8 ~= 7.000000 then PC := 350
338 [-]: JMP       350          ; PC := 350
339 [-]: GETUPVAL  R10 U3       ; R10 := U3
340 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
341 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
342 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
343 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
344 [-]: CALL      R12 2 2      ; R12 := R12(R13)
345 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
346 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
347 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
348 [-]: CALL      R10 0 1      ; R10(R11,...)
349 [-]: JMP       496          ; PC := 496
350 [-]: GETUPVAL  R10 U6       ; R10 := U6
351 [-]: CALL      R10 1 2      ; R10 := R10()
352 [-]: TEST      R10 0        ; if not R10 then PC := 365
353 [-]: JMP       365          ; PC := 365
354 [-]: GETUPVAL  R10 U3       ; R10 := U3
355 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
356 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
357 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
358 [-]: LOADK     R13 K60      ; R13 := "MissionCompleteDefend"
359 [-]: CALL      R12 2 2      ; R12 := R12(R13)
360 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
361 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
362 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
363 [-]: CALL      R10 0 1      ; R10(R11,...)
364 [-]: JMP       496          ; PC := 496
365 [-]: EQ        0 R8 K61     ; if R8 ~= 13.000000 then PC := 378
366 [-]: JMP       378          ; PC := 378
367 [-]: GETUPVAL  R10 U3       ; R10 := U3
368 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
369 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
370 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
371 [-]: LOADK     R13 K62      ; R13 := "MissionCompleteTerritory"
372 [-]: CALL      R12 2 2      ; R12 := R12(R13)
373 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
374 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
375 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
376 [-]: CALL      R10 0 1      ; R10(R11,...)
377 [-]: JMP       496          ; PC := 496
378 [-]: EQ        0 R8 K63     ; if R8 ~= 14.000000 then PC := 391
379 [-]: JMP       391          ; PC := 391
380 [-]: GETUPVAL  R10 U3       ; R10 := U3
381 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
382 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
383 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
384 [-]: LOADK     R13 K64      ; R13 := "MissionCompleteRetrieval"
385 [-]: CALL      R12 2 2      ; R12 := R12(R13)
386 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
387 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
388 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
389 [-]: CALL      R10 0 1      ; R10(R11,...)
390 [-]: JMP       496          ; PC := 496
391 [-]: EQ        0 R8 K65     ; if R8 ~= 15.000000 then PC := 404
392 [-]: JMP       404          ; PC := 404
393 [-]: GETUPVAL  R10 U3       ; R10 := U3
394 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
395 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
396 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
397 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
398 [-]: CALL      R12 2 2      ; R12 := R12(R13)
399 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
400 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
401 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
402 [-]: CALL      R10 0 1      ; R10(R11,...)
403 [-]: JMP       496          ; PC := 496
404 [-]: EQ        1 R8 K66     ; if R8 == 11.000000 then PC := 414
405 [-]: JMP       414          ; PC := 414
406 [-]: EQ        1 R8 K67     ; if R8 == 16.000000 then PC := 414
407 [-]: JMP       414          ; PC := 414
408 [-]: EQ        1 R8 K68     ; if R8 == 17.000000 then PC := 414
409 [-]: JMP       414          ; PC := 414
410 [-]: EQ        1 R8 K69     ; if R8 == 18.000000 then PC := 414
411 [-]: JMP       414          ; PC := 414
412 [-]: EQ        0 R8 K70     ; if R8 ~= 10.000000 then PC := 416
413 [-]: JMP       416          ; PC := 416
414 [-]: RETURN    R0 1         ; return 
415 [-]: JMP       496          ; PC := 496
416 [-]: EQ        0 R8 K71     ; if R8 ~= 19.000000 then PC := 420
417 [-]: JMP       420          ; PC := 420
418 [-]: RETURN    R0 1         ; return 
419 [-]: JMP       496          ; PC := 496
420 [-]: EQ        0 R8 K72     ; if R8 ~= 23.000000 then PC := 423
421 [-]: JMP       423          ; PC := 423
422 [-]: JMP       496          ; PC := 496
423 [-]: EQ        0 R8 K73     ; if R8 ~= 22.000000 then PC := 427
424 [-]: JMP       427          ; PC := 427
425 [-]: RETURN    R0 1         ; return 
426 [-]: JMP       496          ; PC := 496
427 [-]: EQ        0 R8 K74     ; if R8 ~= 25.000000 then PC := 430
428 [-]: JMP       430          ; PC := 430
429 [-]: JMP       496          ; PC := 496
430 [-]: EQ        0 R8 K75     ; if R8 ~= 26.000000 then PC := 443
431 [-]: JMP       443          ; PC := 443
432 [-]: GETUPVAL  R10 U3       ; R10 := U3
433 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
434 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
435 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
436 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
437 [-]: CALL      R12 2 2      ; R12 := R12(R13)
438 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
439 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
440 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
441 [-]: CALL      R10 0 1      ; R10(R11,...)
442 [-]: JMP       496          ; PC := 496
443 [-]: EQ        0 R8 K76     ; if R8 ~= 28.000000 then PC := 446
444 [-]: JMP       446          ; PC := 446
445 [-]: JMP       496          ; PC := 496
446 [-]: EQ        0 R8 K77     ; if R8 ~= 35.000000 then PC := 459
447 [-]: JMP       459          ; PC := 459
448 [-]: GETUPVAL  R10 U3       ; R10 := U3
449 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
450 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
451 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
452 [-]: LOADK     R13 K78      ; R13 := "MissionCompleteArmageddon"
453 [-]: CALL      R12 2 2      ; R12 := R12(R13)
454 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
455 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
456 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
457 [-]: CALL      R10 0 1      ; R10(R11,...)
458 [-]: JMP       496          ; PC := 496
459 [-]: EQ        1 R8 K79     ; if R8 == 21.000000 then PC := 469
460 [-]: JMP       469          ; PC := 469
461 [-]: EQ        1 R8 K80     ; if R8 == 27.000000 then PC := 469
462 [-]: JMP       469          ; PC := 469
463 [-]: EQ        1 R8 K81     ; if R8 == 32.000000 then PC := 469
464 [-]: JMP       469          ; PC := 469
465 [-]: EQ        1 R8 K82     ; if R8 == 33.000000 then PC := 469
466 [-]: JMP       469          ; PC := 469
467 [-]: EQ        0 R8 K83     ; if R8 ~= 34.000000 then PC := 486
468 [-]: JMP       486          ; PC := 486
469 [-]: GETGLOBAL R10 K3       ; R10 := 0x7b998233
470 [-]: GETGLOBAL R11 K0       ; R11 := _T
471 [-]: GETTABLE  R11 R11 K84  ; R11 := R11["TransmissionSet"]
472 [-]: CALL      R10 2 2      ; R10 := R10(R11)
473 [-]: TEST      R10 1        ; if R10 then PC := 496
474 [-]: JMP       496          ; PC := 496
475 [-]: GETUPVAL  R10 U3       ; R10 := U3
476 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
477 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
478 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
479 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
480 [-]: CALL      R12 2 2      ; R12 := R12(R13)
481 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
482 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
483 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
484 [-]: CALL      R10 0 1      ; R10(R11,...)
485 [-]: JMP       496          ; PC := 496
486 [-]: GETUPVAL  R10 U3       ; R10 := U3
487 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[0xf22cfc77]
488 [-]: GETGLOBAL R11 K18      ; R11 := 0x2006ca73
489 [-]: GETGLOBAL R12 K19      ; R12 := 0x0469f296
490 [-]: LOADK     R13 K49      ; R13 := "MissionComplete"
491 [-]: CALL      R12 2 2      ; R12 := R12(R13)
492 [-]: GETGLOBAL R13 K21      ; R13 := 0x89326c93
493 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x78298275]
494 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
495 [-]: CALL      R10 0 1      ; R10(R11,...)
496 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 2331
; #Upvalues:       0
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0xce225efa
  2 [-]: CONST     R8 0         ; R8 := 0.000000
  3 [-]: CALL      R7 2 1       ; R7(R8)
  4 [-]: GETGLOBAL R7 K1        ; R7 := 0x03f57322
  5 [-]: MOVE      R8 R2        ; R8 := R2
  6 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  7 [-]: CONST     R8 0         ; R8 := 0.000000
  8 [-]: GETGLOBAL R9 K2        ; R9 := 0xcfc01047
  9 [-]: MOVE      R10 R0       ; R10 := R0
 10 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETTABLE  R14 R13 K3   ; R14 := R13["Label"]
 13 [-]: EQ        0 R14 R1     ; if R14 ~= R1 then PC := 38
 14 [-]: JMP       38           ; PC := 38
 15 [-]: GETTABLE  R14 R0 R12   ; R14 := R0[R12]
 16 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["Value"]
 17 [-]: LEN       R14 R14      ; R14 := # R14
 18 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 19 [-]: GETTABLE  R15 R15 K4   ; R15 := R15["Value"]
 20 [-]: ADD       R16 R14 K5   ; R16 := R14 + 1.000000
 21 [-]: SETTABLE  R15 R16 R7   ; R15[R16] := R7
 22 [-]: TEST      R3 0         ; if not R3 then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 25 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["BestValue"]
 26 [-]: LT        0 R15 R7     ; if R15 >= R7 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 29 [-]: SETTABLE  R15 K6 R7    ; R15["BestValue"] := R7
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 32 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["BestValue"]
 33 [-]: LT        0 R7 R15     ; if R7 >= R15 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 36 [-]: SETTABLE  R15 K6 R7    ; R15["BestValue"] := R7
 37 [-]: RETURN    R0 2         ; return R0
 38 [-]: MOVE      R8 R12       ; R8 := R12
 39 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 12; R11 := R12 end
 40 [-]: JMP       12           ; PC := 12
 41 [-]: ADD       R15 R8 K5    ; R15 := R8 + 1.000000
 42 [-]: NEWTABLE  R16 0 6      ; R16 := {}
 43 [-]: SETTABLE  R16 K3 R1    ; R16["Label"] := R1
 44 [-]: NEWTABLE  R17 0 0      ; R17 := {}
 45 [-]: SETTABLE  R16 K4 R17   ; R16["Value"] := R17
 46 [-]: SETTABLE  R16 K6 R7    ; R16["BestValue"] := R7
 47 [-]: SETTABLE  R16 K7 R3    ; R16[0xae91e43b] := R3
 48 [-]: SETTABLE  R16 K8 R4    ; R16[0x42b04007] := R4
 49 [-]: SETTABLE  R16 K9 R6    ; R16["HideValue"] := R6
 50 [-]: SETTABLE  R0 R15 R16   ; R0[R15] := R16
 51 [-]: ADD       R15 R8 K5    ; R15 := R8 + 1.000000
 52 [-]: GETTABLE  R15 R0 R15   ; R15 := R0[R15]
 53 [-]: GETTABLE  R15 R15 K4   ; R15 := R15["Value"]
 54 [-]: SETTABLE  R15 K5 R7    ; R15[1.000000] := R7
 55 [-]: ADD       R15 R8 K5    ; R15 := R8 + 1.000000
 56 [-]: GETTABLE  R15 R0 R15   ; R15 := R0[R15]
 57 [-]: SETTABLE  R15 K10 R5   ; R15["ProgressMax"] := R5
 58 [-]: RETURN    R0 2         ; return R0
 59 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 2365
; #Upvalues:       0
; #Parameters:     8
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R8 0 8       ; R8 := {}
  2 [-]: SETTABLE  R8 K0 R0     ; R8["Name"] := R0
  3 [-]: SETTABLE  R8 K1 R1     ; R8["Count"] := R1
  4 [-]: SETTABLE  R8 K2 R2     ; R8["TaxedCount"] := R2
  5 [-]: SETTABLE  R8 K3 R3     ; R8["Icon"] := R3
  6 [-]: SETTABLE  R8 K4 R4     ; R8["Background"] := R4
  7 [-]: SETTABLE  R8 K5 R5     ; R8["Material"] := R5
  8 [-]: SETTABLE  R8 K6 R6     ; R8["Color"] := R6
  9 [-]: SETTABLE  R8 K7 R7     ; R8["SortPriority"] := R7
 10 [-]: RETURN    R8 2         ; return R8
 11 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 2378
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["goalId"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 42
  7 [-]: JMP       42           ; PC := 42
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["goalId"]
  9 [-]: EQ        1 R1 K2      ; if R1 == "" then PC := 42
 10 [-]: JMP       42           ; PC := 42
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 12 [-]: GETGLOBAL R2 K3        ; R2 := mGameData
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 55
 15 [-]: JMP       55           ; PC := 55
 16 [-]: GETGLOBAL R1 K3        ; R1 := mGameData
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x69727e0b]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mGoals"]
 20 [-]: CONST     R2 1         ; R2 := 1.000000
 21 [-]: LEN       R3 R1        ; R3 := # R1
 22 [-]: CONST     R4 1         ; R4 := 1.000000
 23 [-]: FORPREP   R2 40        ; R2 -= R4; PC := 40
 24 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 25 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["mId"]
 26 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["mId"]
 27 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["goalId"]
 28 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 40
 29 [-]: JMP       40           ; PC := 40
 30 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 31 [-]: GETTABLE  R7 R1 R5     ; R7 := R1[R5]
 32 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["mIcon"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: TEST      R6 1         ; if R6 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 37 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mIcon"]
 38 [-]: RETURN    R6 2         ; return R6
 39 [-]: JMP       55           ; PC := 55
 40 [-]: FORLOOP   R2 24        ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETUPVAL  R6 U1        ; R6 := U1
 43 [-]: CALL      R6 1 2       ; R6 := R6()
 44 [-]: TEST      R6 0         ; if not R6 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: LOADNIL   R6 R6        ; R6 := nil
 47 [-]: RETURN    R6 2         ; return R6
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETUPVAL  R6 U2        ; R6 := U2
 50 [-]: CALL      R6 1 2       ; R6 := R6()
 51 [-]: TEST      R6 0         ; if not R6 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETGLOBAL R6 K8        ; R6 := 0x54ae1b8e
 54 [-]: RETURN    R6 2         ; return R6
 55 [-]: GETGLOBAL R6 K9        ; R6 := 0xb9c98766
 56 [-]: RETURN    R6 2         ; return R6
 57 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 2401
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: GETTABLE  R3 R2 K0     ; R3 := R2["maxWaveNum"]
  4 [-]: EQ        1 R3 K1      ; if R3 == 0.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 7
  7 [-]: LOADKB    R3 1 0       ; R3 := true
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: CALL      R4 1 2       ; R4 := R4()
 10 [-]: GETUPVAL  R5 U2        ; R5 := U2
 11 [-]: CALL      R5 1 2       ; R5 := R5()
 12 [-]: TEST      R5 0         ; if not R5 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: TEST      R3 1         ; if R3 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: TESTSET   R5 R4 0      ; if not R4 then PC := 26 else R5 := R4
 17 [-]: JMP       26           ; PC := 26
 18 [-]: GETGLOBAL R5 K2        ; R5 := 0x7f5022cf
 19 [-]: GETTABLE  R5 R5 K3     ; R5 := R5[0xa5c556b9]
 20 [-]: GETGLOBAL R6 K4        ; R6 := 0x64fb1586
 21 [-]: GETTABLE  R7 R2 K5     ; R7 := R2["goalTag"]
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: LOADK     R7 K6        ; R7 := "MechSurvival"
 24 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 25 [-]: NOT       R5 R5        ; R5 :=  R5
 26 [-]: GETUPVAL  R6 U3        ; R6 := U3
 27 [-]: CALL      R6 1 2       ; R6 := R6()
 28 [-]: TEST      R6 0         ; if not R6 then PC := 111
 29 [-]: JMP       111          ; PC := 111
 30 [-]: LOADK     R6 K7        ; R6 := "/Lotus/Language/Menu/MissionScore"
 31 [-]: EQ        0 R0 K8      ; if R0 ~= 1.000000 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/MissionComplete"
 34 [-]: GETGLOBAL R7 K10       ; R7 := mGameData
 35 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0x69727e0b]
 36 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 37 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["mGoals"]
 38 [-]: LOADNIL   R8 R8        ; R8 := nil
 39 [-]: CONST     R9 1         ; R9 := 1.000000
 40 [-]: LEN       R10 R7       ; R10 := # R7
 41 [-]: CONST     R11 1        ; R11 := 1.000000
 42 [-]: FORPREP   R9 102       ; R9 -= R11; PC := 102
 43 [-]: GETTABLE  R13 R7 R12   ; R13 := R7[R12]
 44 [-]: GETTABLE  R14 R13 K13  ; R14 := R13["mId"]
 45 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["mId"]
 46 [-]: GETTABLE  R15 R2 K14   ; R15 := R2["goalId"]
 47 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 58
 48 [-]: JMP       58           ; PC := 58
 49 [-]: GETTABLE  R14 R13 K15  ; R14 := R13["mOptionalInMission"]
 50 [-]: TEST      R14 0        ; if not R14 then PC := 102
 51 [-]: JMP       102          ; PC := 102
 52 [-]: GETGLOBAL R14 K16      ; R14 := 0x0469f296
 53 [-]: GETTABLE  R15 R13 K17  ; R15 := R13["mNode"]
 54 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 55 [-]: GETTABLE  R15 R2 K18   ; R15 := R2["location"]
 56 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 102
 57 [-]: JMP       102          ; PC := 102
 58 [-]: GETTABLE  R14 R13 K19  ; R14 := R13["mScoreLocTag"]
 59 [-]: EQ        1 R14 K20    ; if R14 == "" then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: GETTABLE  R6 R13 K19   ; R6 := R13["mScoreLocTag"]
 62 [-]: TEST      R3 0         ; if not R3 then PC := 81
 63 [-]: JMP       81           ; PC := 81
 64 [-]: GETUPVAL  R14 U2       ; R14 := U2
 65 [-]: CALL      R14 1 2      ; R14 := R14()
 66 [-]: TEST      R14 0        ; if not R14 then PC := 81
 67 [-]: JMP       81           ; PC := 81
 68 [-]: GETTABLE  R14 R13 K21  ; R14 := R13["mScoreVar"]
 69 [-]: GETGLOBAL R15 K22      ; R15 := EMPTY_SYMBOL
 70 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 81
 71 [-]: JMP       81           ; PC := 81
 72 [-]: GETTABLE  R14 R13 K23  ; R14 := R13["mScoreSumTag"]
 73 [-]: GETGLOBAL R15 K22      ; R15 := EMPTY_SYMBOL
 74 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: GETTABLE  R14 R13 K24  ; R14 := R13["mScoreMaxTag"]
 77 [-]: GETGLOBAL R15 K22      ; R15 := EMPTY_SYMBOL
 78 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: LOADKB    R5 0 0       ; R5 := false
 81 [-]: GETTABLE  R14 R13 K21  ; R14 := R13["mScoreVar"]
 82 [-]: GETGLOBAL R15 K16      ; R15 := 0x0469f296
 83 [-]: LOADK     R16 K25      ; R16 := "Halloween"
 84 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 85 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 92
 86 [-]: JMP       92           ; PC := 92
 87 [-]: GETTABLE  R14 R2 K0    ; R14 := R2["maxWaveNum"]
 88 [-]: LT        0 K1 R14     ; if 0.000000 >= R14 then PC := 92
 89 [-]: JMP       92           ; PC := 92
 90 [-]: LOADKB    R5 1 0       ; R5 := true
 91 [-]: JMP       103          ; PC := 103
 92 [-]: GETTABLE  R14 R13 K21  ; R14 := R13["mScoreVar"]
 93 [-]: GETGLOBAL R15 K16      ; R15 := 0x0469f296
 94 [-]: LOADK     R16 K26      ; R16 := "FomorianEventScore"
 95 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 96 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: NEWTABLE  R14 0 1      ; R14 := {}
 99 [-]: SETTABLE  R14 K27 K20  ; R14["VALUE"] := ""
100 [-]: MOVE      R8 R14       ; R8 := R14
101 [-]: JMP       103          ; PC := 103
102 [-]: FORLOOP   R9 43        ; R9 += R11; if R9 <= R10 then begin PC := 43; R12 := R9 end
103 [-]: GETGLOBAL R14 K28      ; R14 := 0xae91e43b
104 [-]: SELF      R14 R14 K29  ; R15 := R14; R14 := R14[0x42b04007]
105 [-]: MOVE      R16 R6       ; R16 := R6
106 [-]: LOADKB    R17 0 0      ; R17 := false
107 [-]: MOVE      R18 R8       ; R18 := R8
108 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
109 [-]: MOVE      R1 R14       ; R1 := R14
110 [-]: JMP       171          ; PC := 171
111 [-]: TEST      R3 0         ; if not R3 then PC := 171
112 [-]: JMP       171          ; PC := 171
113 [-]: GETUPVAL  R14 U4       ; R14 := U4
114 [-]: CALL      R14 1 2      ; R14 := R14()
115 [-]: TEST      R14 0        ; if not R14 then PC := 124
116 [-]: JMP       124          ; PC := 124
117 [-]: GETGLOBAL R14 K28      ; R14 := 0xae91e43b
118 [-]: SELF      R14 R14 K29  ; R15 := R14; R14 := R14[0x42b04007]
119 [-]: LOADK     R16 K30      ; R16 := "/Lotus/Language/Menu/Profile_Wave"
120 [-]: LOADKB    R17 0 0      ; R17 := false
121 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
122 [-]: MOVE      R1 R14       ; R1 := R14
123 [-]: JMP       171          ; PC := 171
124 [-]: GETUPVAL  R14 U5       ; R14 := U5
125 [-]: CALL      R14 1 2      ; R14 := R14()
126 [-]: TEST      R14 0        ; if not R14 then PC := 135
127 [-]: JMP       135          ; PC := 135
128 [-]: GETGLOBAL R14 K28      ; R14 := 0xae91e43b
129 [-]: SELF      R14 R14 K29  ; R15 := R14; R14 := R14[0x42b04007]
130 [-]: LOADK     R16 K31      ; R16 := "/Lotus/Language/Game/Round"
131 [-]: LOADKB    R17 0 0      ; R17 := false
132 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
133 [-]: MOVE      R1 R14       ; R1 := R14
134 [-]: JMP       171          ; PC := 171
135 [-]: GETUPVAL  R14 U2       ; R14 := U2
136 [-]: CALL      R14 1 2      ; R14 := R14()
137 [-]: TEST      R14 0        ; if not R14 then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: TEST      R3 1         ; if R3 then PC := 143
140 [-]: JMP       143          ; PC := 143
141 [-]: TEST      R4 0         ; if not R4 then PC := 150
142 [-]: JMP       150          ; PC := 150
143 [-]: GETGLOBAL R14 K28      ; R14 := 0xae91e43b
144 [-]: SELF      R14 R14 K29  ; R15 := R14; R14 := R14[0x42b04007]
145 [-]: LOADK     R16 K32      ; R16 := "/Lotus/Language/Menu/Profile_Time"
146 [-]: LOADKB    R17 0 0      ; R17 := false
147 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
148 [-]: MOVE      R1 R14       ; R1 := R14
149 [-]: JMP       171          ; PC := 171
150 [-]: GETUPVAL  R14 U6       ; R14 := U6
151 [-]: CALL      R14 1 2      ; R14 := R14()
152 [-]: TEST      R14 0        ; if not R14 then PC := 161
153 [-]: JMP       161          ; PC := 161
154 [-]: GETGLOBAL R14 K28      ; R14 := 0xae91e43b
155 [-]: SELF      R14 R14 K29  ; R15 := R14; R14 := R14[0x42b04007]
156 [-]: LOADK     R16 K33      ; R16 := "/Lotus/Language/Menu/Profile_Points"
157 [-]: LOADKB    R17 0 0      ; R17 := false
158 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
159 [-]: MOVE      R1 R14       ; R1 := R14
160 [-]: JMP       171          ; PC := 171
161 [-]: GETUPVAL  R14 U7       ; R14 := U7
162 [-]: CALL      R14 1 2      ; R14 := R14()
163 [-]: TEST      R14 0        ; if not R14 then PC := 171
164 [-]: JMP       171          ; PC := 171
165 [-]: GETGLOBAL R14 K28      ; R14 := 0xae91e43b
166 [-]: SELF      R14 R14 K29  ; R15 := R14; R14 := R14[0x42b04007]
167 [-]: LOADK     R16 K7       ; R16 := "/Lotus/Language/Menu/MissionScore"
168 [-]: LOADKB    R17 0 0      ; R17 := false
169 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
170 [-]: MOVE      R1 R14       ; R1 := R14
171 [-]: TEST      R5 0         ; if not R5 then PC := 183
172 [-]: JMP       183          ; PC := 183
173 [-]: MOVE      R14 R1       ; R14 := R1
174 [-]: LOADK     R15 K34      ; R15 := "\r"
175 [-]: GETUPVAL  R16 U8       ; R16 := U8
176 [-]: GETTABLE  R16 R16 K35  ; R16 := R16[0x817b1503]
177 [-]: GETGLOBAL R17 K28      ; R17 := 0xae91e43b
178 [-]: MOVE      R18 R0       ; R18 := R0
179 [-]: LOADKB    R19 0 0      ; R19 := false
180 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
181 [-]: CONCAT    R1 R14 R16   ; R1 := R14 .. R15 .. R16
182 [-]: CONST     R0 1         ; R0 := 1.000000
183 [-]: MOVE      R14 R1       ; R14 := R1
184 [-]: MOVE      R15 R0       ; R15 := R0
185 [-]: RETURN    R14 3        ; return R14,R15
186 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 2459
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "MOST_CC_TIME" then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x817b1503]
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: LOADK     R5 K3        ; R5 := "Compact"
  8 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
  9 [-]: RETURN    R2 0         ; return R2,...
 10 [-]: JMP       25           ; PC := 25
 11 [-]: EQ        1 R0 K4      ; if R0 == "MOST_ACCURATE" then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: EQ        1 R0 K5      ; if R0 == "MOST_DAMAGE" then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: EQ        0 R0 K6      ; if R0 ~= "LEAST_HURT" then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 18 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x42b04007]
 19 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/ProgressPercentage"
 20 [-]: LOADKB    R5 1 0       ; R5 := true
 21 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 22 [-]: SETTABLE  R6 K9 R1     ; R6["CURRENT"] := R1
 23 [-]: TAILCALL  R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 24 [-]: RETURN    R2 0         ; return R2,...
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0x1142c7a8]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 29 [-]: RETURN    R2 0         ; return R2,...
 30 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 2469
; #Upvalues:       20
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  106

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x76ea806b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x3f3ae64c]
  3 [-]: CONST     R3 0         ; R3 := 0.000000
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 11 [-]: GETGLOBAL R3 K3        ; R3 := mGameData
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x5ca33548]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: LOADKB    R3 0 0       ; R3 := false
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: GETUPVAL  R5 U0        ; R5 := U0
 21 [-]: GETTABLE  R5 R5 K5     ; R5 := R5[0xcdc34211]
 22 [-]: CALL      R5 1 2       ; R5 := R5()
 23 [-]: TEST      R5 1         ; if R5 then PC := 36
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETGLOBAL R6 K3        ; R6 := mGameData
 26 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x01f12112]
 27 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 28 [-]: TEST      R6 0         ; if not R6 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R6 K3        ; R6 := mGameData
 31 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x79e70384]
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: MOVE      R4 R6        ; R4 := R6
 34 [-]: LOADKB    R3 1 0       ; R3 := true
 35 [-]: JMP       40           ; PC := 40
 36 [-]: GETGLOBAL R6 K3        ; R6 := mGameData
 37 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0xa8c9f8a6]
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: MOVE      R4 R6        ; R4 := R6
 40 [-]: GETUPVAL  R6 U1        ; R6 := U1
 41 [-]: CALL      R6 1 2       ; R6 := R6()
 42 [-]: LEN       R7 R4        ; R7 := # R4
 43 [-]: CONST     R8 0         ; R8 := 0.000000
 44 [-]: CONST     R9 0         ; R9 := 0.000000
 45 [-]: CONST     R10 1        ; R10 := 1.000000
 46 [-]: MOVE      R11 R7       ; R11 := R7
 47 [-]: CONST     R12 1        ; R12 := 1.000000
 48 [-]: FORPREP   R10 55       ; R10 -= R12; PC := 55
 49 [-]: GETTABLE  R14 R4 R13   ; R14 := R4[R13]
 50 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["damageDealt"]
 51 [-]: ADD       R8 R8 R14    ; R8 := R8 + R14
 52 [-]: GETTABLE  R14 R4 R13   ; R14 := R4[R13]
 53 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["damageTaken"]
 54 [-]: ADD       R9 R9 R14    ; R9 := R9 + R14
 55 [-]: FORLOOP   R10 49       ; R10 += R12; if R10 <= R11 then begin PC := 49; R13 := R10 end
 56 [-]: GETUPVAL  R14 U2       ; R14 := U2
 57 [-]: CALL      R14 1 2      ; R14 := R14()
 58 [-]: CONST     R15 1        ; R15 := 1.000000
 59 [-]: LEN       R16 R4       ; R16 := # R4
 60 [-]: LE        0 R15 R16    ; if R15 > R16 then PC := 145
 61 [-]: JMP       145          ; PC := 145
 62 [-]: LOADKB    R16 0 0      ; R16 := false
 63 [-]: LOADNIL   R17 R17      ; R17 := nil
 64 [-]: CONST     R18 1        ; R18 := 1.000000
 65 [-]: LEN       R19 R14      ; R19 := # R14
 66 [-]: CONST     R20 1        ; R20 := 1.000000
 67 [-]: FORPREP   R18 76       ; R18 -= R20; PC := 76
 68 [-]: GETTABLE  R22 R14 R21  ; R22 := R14[R21]
 69 [-]: GETTABLE  R22 R22 K11  ; R22 := R22["name"]
 70 [-]: GETTABLE  R23 R4 R15   ; R23 := R4[R15]
 71 [-]: GETTABLE  R23 R23 K12  ; R23 := R23["playerName"]
 72 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 76
 73 [-]: JMP       76           ; PC := 76
 74 [-]: GETTABLE  R17 R14 R21  ; R17 := R14[R21]
 75 [-]: LOADKB    R16 1 0      ; R16 := true
 76 [-]: FORLOOP   R18 68       ; R18 += R20; if R18 <= R19 then begin PC := 68; R21 := R18 end
 77 [-]: TEST      R16 0        ; if not R16 then PC := 81
 78 [-]: JMP       81           ; PC := 81
 79 [-]: ADD       R15 R15 K13  ; R15 := R15 + 1.000000
 80 [-]: JMP       86           ; PC := 86
 81 [-]: GETGLOBAL R22 K14      ; R22 := 0x33bdd652
 82 [-]: GETTABLE  R22 R22 K15  ; R22 := R22[0x9c1f3b5a]
 83 [-]: MOVE      R23 R4       ; R23 := R4
 84 [-]: MOVE      R24 R15      ; R24 := R15
 85 [-]: CALL      R22 3 1      ; R22(R23,R24)
 86 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
 87 [-]: MOVE      R23 R17      ; R23 := R17
 88 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 89 [-]: TEST      R22 1        ; if R22 then PC := 59
 90 [-]: JMP       59           ; PC := 59
 91 [-]: GETUPVAL  R22 U0       ; R22 := U0
 92 [-]: GETTABLE  R22 R22 K16  ; R22 := R22[0xf002fb6a]
 93 [-]: GETGLOBAL R23 K17      ; R23 := 0xae91e43b
 94 [-]: MOVE      R24 R17      ; R24 := R17
 95 [-]: MOVE      R25 R6       ; R25 := R6
 96 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
 97 [-]: LOADK     R23 K18      ; R23 := ""
 98 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
 99 [-]: GETTABLE  R25 R22 K19  ; R25 := R22["NameWithRank"]
100 [-]: CALL      R24 2 2      ; R24 := R24(R25)
101 [-]: TEST      R24 1        ; if R24 then PC := 59
102 [-]: JMP       59           ; PC := 59
103 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
104 [-]: GETTABLE  R25 R22 K20  ; R25 := R22["Name"]
105 [-]: CALL      R24 2 2      ; R24 := R24(R25)
106 [-]: TEST      R24 1        ; if R24 then PC := 59
107 [-]: JMP       59           ; PC := 59
108 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
109 [-]: GETTABLE  R25 R22 K21  ; R25 := R22["WeaponInfo"]
110 [-]: CALL      R24 2 2      ; R24 := R24(R25)
111 [-]: TEST      R24 1        ; if R24 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: MOVE      R24 R23      ; R24 := R23
114 [-]: GETTABLE  R25 R22 K21  ; R25 := R22["WeaponInfo"]
115 [-]: CONCAT    R23 R24 R25  ; R23 := R24 .. R25
116 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
117 [-]: GETTABLE  R25 R22 K22  ; R25 := R22["CompanionInfo"]
118 [-]: CALL      R24 2 2      ; R24 := R24(R25)
119 [-]: TEST      R24 1        ; if R24 then PC := 124
120 [-]: JMP       124          ; PC := 124
121 [-]: MOVE      R24 R23      ; R24 := R23
122 [-]: GETTABLE  R25 R22 K22  ; R25 := R22["CompanionInfo"]
123 [-]: CONCAT    R23 R24 R25  ; R23 := R24 .. R25
124 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
125 [-]: GETTABLE  R25 R22 K23  ; R25 := R22["AuraInfo"]
126 [-]: CALL      R24 2 2      ; R24 := R24(R25)
127 [-]: TEST      R24 1        ; if R24 then PC := 132
128 [-]: JMP       132          ; PC := 132
129 [-]: MOVE      R24 R23      ; R24 := R23
130 [-]: GETTABLE  R25 R22 K23  ; R25 := R22["AuraInfo"]
131 [-]: CONCAT    R23 R24 R25  ; R23 := R24 .. R25
132 [-]: EQ        1 R23 K18    ; if R23 == "" then PC := 59
133 [-]: JMP       59           ; PC := 59
134 [-]: GETGLOBAL R24 K14      ; R24 := 0x33bdd652
135 [-]: GETTABLE  R24 R24 K24  ; R24 := R24[0x23d5322f]
136 [-]: GETGLOBAL R25 K25      ; R25 := mSquadLoadoutsInfo
137 [-]: NEWTABLE  R26 0 3      ; R26 := {}
138 [-]: GETTABLE  R27 R22 K20  ; R27 := R22["Name"]
139 [-]: SETTABLE  R26 K20 R27  ; R26["Name"] := R27
140 [-]: GETTABLE  R27 R22 K19  ; R27 := R22["NameWithRank"]
141 [-]: SETTABLE  R26 K19 R27  ; R26["NameWithRank"] := R27
142 [-]: SETTABLE  R26 K26 R23  ; R26["LoadoutDesc"] := R23
143 [-]: CALL      R24 3 1      ; R24(R25,R26)
144 [-]: JMP       59           ; PC := 59
145 [-]: GETGLOBAL R24 K27      ; R24 := _T
146 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["TestPlayerCount"]
147 [-]: EQ        1 R24 K29    ; if R24 == nil then PC := 165
148 [-]: JMP       165          ; PC := 165
149 [-]: LEN       R24 R4       ; R24 := # R4
150 [-]: LT        0 K30 R24    ; if 0.000000 >= R24 then PC := 165
151 [-]: JMP       165          ; PC := 165
152 [-]: CONST     R24 1        ; R24 := 1.000000
153 [-]: GETGLOBAL R25 K27      ; R25 := _T
154 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["TestPlayerCount"]
155 [-]: LEN       R26 R4       ; R26 := # R4
156 [-]: SUB       R25 R25 R26  ; R25 := R25 - R26
157 [-]: CONST     R26 1        ; R26 := 1.000000
158 [-]: FORPREP   R24 164      ; R24 -= R26; PC := 164
159 [-]: GETGLOBAL R28 K14      ; R28 := 0x33bdd652
160 [-]: GETTABLE  R28 R28 K24  ; R28 := R28[0x23d5322f]
161 [-]: MOVE      R29 R4       ; R29 := R4
162 [-]: GETTABLE  R30 R4 R27   ; R30 := R4[R27]
163 [-]: CALL      R28 3 1      ; R28(R29,R30)
164 [-]: FORLOOP   R24 159      ; R24 += R26; if R24 <= R25 then begin PC := 159; R27 := R24 end
165 [-]: LEN       R7 R4        ; R7 := # R4
166 [-]: NEWTABLE  R28 0 0      ; R28 := {}
167 [-]: SETGLOBAL R28 K31      ; mStatTable := R28
168 [-]: GETGLOBAL R28 K3       ; R28 := mGameData
169 [-]: SELF      R28 R28 K32  ; R29 := R28; R28 := R28[0x5b050396]
170 [-]: CALL      R28 2 2      ; R28 := R28(R29)
171 [-]: LOADKB    R29 0 0      ; R29 := false
172 [-]: SETGLOBAL R29 K33      ; mMissionSuccessful := R29
173 [-]: CONST     R29 1        ; R29 := 1.000000
174 [-]: MOVE      R30 R7       ; R30 := R7
175 [-]: CONST     R31 1        ; R31 := 1.000000
176 [-]: FORPREP   R29 650      ; R29 -= R31; PC := 650
177 [-]: GETTABLE  R33 R4 R32   ; R33 := R4[R32]
178 [-]: CONST     R34 0        ; R34 := 0.000000
179 [-]: CONST     R35 0        ; R35 := 0.000000
180 [-]: LT        0 K30 R8     ; if 0.000000 >= R8 then PC := 184
181 [-]: JMP       184          ; PC := 184
182 [-]: GETTABLE  R36 R33 K9   ; R36 := R33["damageDealt"]
183 [-]: DIV       R34 R36 R8   ; R34 := R36 / R8
184 [-]: LT        0 K30 R9     ; if 0.000000 >= R9 then PC := 188
185 [-]: JMP       188          ; PC := 188
186 [-]: GETTABLE  R36 R33 K10  ; R36 := R33["damageTaken"]
187 [-]: DIV       R35 R36 R9   ; R35 := R36 / R9
188 [-]: GETUPVAL  R36 U3       ; R36 := U3
189 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
190 [-]: LOADK     R38 K34      ; R38 := "/Lotus/Language/Menu/MissionStats_DamageDealt"
191 [-]: MOVE      R39 R34      ; R39 := R34
192 [-]: LOADKB    R40 1 0      ; R40 := true
193 [-]: LOADKB    R41 1 0      ; R41 := true
194 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
195 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
196 [-]: GETUPVAL  R36 U3       ; R36 := U3
197 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
198 [-]: LOADK     R38 K35      ; R38 := "/Lotus/Language/Menu/MissionStats_DamageTaken"
199 [-]: MOVE      R39 R35      ; R39 := R35
200 [-]: LOADKB    R40 0 0      ; R40 := false
201 [-]: LOADKB    R41 1 0      ; R41 := true
202 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
203 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
204 [-]: GETUPVAL  R36 U3       ; R36 := U3
205 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
206 [-]: LOADK     R38 K36      ; R38 := "/Lotus/Language/Menu/Profile_TotalKills"
207 [-]: GETTABLE  R39 R33 K37  ; R39 := R33["kills"]
208 [-]: LOADKB    R40 1 0      ; R40 := true
209 [-]: LOADKB    R41 0 0      ; R41 := false
210 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
211 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
212 [-]: GETUPVAL  R36 U3       ; R36 := U3
213 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
214 [-]: LOADK     R38 K38      ; R38 := "/Lotus/Language/Menu/MissionStats_HeadShots"
215 [-]: GETTABLE  R39 R33 K39  ; R39 := R33["headshots"]
216 [-]: LOADKB    R40 1 0      ; R40 := true
217 [-]: LOADKB    R41 0 0      ; R41 := false
218 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
219 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
220 [-]: GETUPVAL  R36 U3       ; R36 := U3
221 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
222 [-]: LOADK     R38 K40      ; R38 := "/Lotus/Language/Menu/MissionStats_MeleeKills"
223 [-]: GETTABLE  R39 R33 K41  ; R39 := R33["meleeKills"]
224 [-]: LOADKB    R40 1 0      ; R40 := true
225 [-]: LOADKB    R41 0 0      ; R41 := false
226 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
227 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
228 [-]: GETUPVAL  R36 U3       ; R36 := U3
229 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
230 [-]: LOADK     R38 K42      ; R38 := "/Lotus/Language/Menu/Profile_Deaths"
231 [-]: GETTABLE  R39 R33 K43  ; R39 := R33["deaths"]
232 [-]: LOADKB    R40 0 0      ; R40 := false
233 [-]: LOADKB    R41 0 0      ; R41 := false
234 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
235 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
236 [-]: GETUPVAL  R36 U3       ; R36 := U3
237 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
238 [-]: LOADK     R38 K44      ; R38 := "/Lotus/Language/Menu/MissionStats_UpgradesReceived"
239 [-]: GETTABLE  R39 R33 K45  ; R39 := R33["upgradesReceived"]
240 [-]: LOADKB    R40 1 0      ; R40 := true
241 [-]: LOADKB    R41 0 0      ; R41 := false
242 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
243 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
244 [-]: GETUPVAL  R36 U3       ; R36 := U3
245 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
246 [-]: LOADK     R38 K46      ; R38 := "/Lotus/Language/Menu/MissionStats_AbilitiesUsed"
247 [-]: GETTABLE  R39 R33 K47  ; R39 := R33["abilitiesUsed"]
248 [-]: LOADKB    R40 1 0      ; R40 := true
249 [-]: LOADKB    R41 0 0      ; R41 := false
250 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
251 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
252 [-]: GETGLOBAL R36 K27      ; R36 := _T
253 [-]: GETTABLE  R36 R36 K48  ; R36 := R36["TestStatCount"]
254 [-]: TEST      R36 0        ; if not R36 then PC := 320
255 [-]: JMP       320          ; PC := 320
256 [-]: GETUPVAL  R36 U3       ; R36 := U3
257 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
258 [-]: LOADK     R38 K49      ; R38 := "test1"
259 [-]: MOVE      R39 R34      ; R39 := R34
260 [-]: LOADKB    R40 1 0      ; R40 := true
261 [-]: LOADKB    R41 1 0      ; R41 := true
262 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
263 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
264 [-]: GETUPVAL  R36 U3       ; R36 := U3
265 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
266 [-]: LOADK     R38 K50      ; R38 := "test2"
267 [-]: MOVE      R39 R35      ; R39 := R35
268 [-]: LOADKB    R40 0 0      ; R40 := false
269 [-]: LOADKB    R41 1 0      ; R41 := true
270 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
271 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
272 [-]: GETUPVAL  R36 U3       ; R36 := U3
273 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
274 [-]: LOADK     R38 K51      ; R38 := "test3"
275 [-]: GETTABLE  R39 R33 K37  ; R39 := R33["kills"]
276 [-]: LOADKB    R40 1 0      ; R40 := true
277 [-]: LOADKB    R41 0 0      ; R41 := false
278 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
279 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
280 [-]: GETUPVAL  R36 U3       ; R36 := U3
281 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
282 [-]: LOADK     R38 K52      ; R38 := "test4"
283 [-]: GETTABLE  R39 R33 K39  ; R39 := R33["headshots"]
284 [-]: LOADKB    R40 1 0      ; R40 := true
285 [-]: LOADKB    R41 0 0      ; R41 := false
286 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
287 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
288 [-]: GETUPVAL  R36 U3       ; R36 := U3
289 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
290 [-]: LOADK     R38 K53      ; R38 := "test5"
291 [-]: GETTABLE  R39 R33 K41  ; R39 := R33["meleeKills"]
292 [-]: LOADKB    R40 1 0      ; R40 := true
293 [-]: LOADKB    R41 0 0      ; R41 := false
294 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
295 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
296 [-]: GETUPVAL  R36 U3       ; R36 := U3
297 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
298 [-]: LOADK     R38 K54      ; R38 := "test6"
299 [-]: GETTABLE  R39 R33 K43  ; R39 := R33["deaths"]
300 [-]: LOADKB    R40 0 0      ; R40 := false
301 [-]: LOADKB    R41 0 0      ; R41 := false
302 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
303 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
304 [-]: GETUPVAL  R36 U3       ; R36 := U3
305 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
306 [-]: LOADK     R38 K55      ; R38 := "test7"
307 [-]: GETTABLE  R39 R33 K45  ; R39 := R33["upgradesReceived"]
308 [-]: LOADKB    R40 1 0      ; R40 := true
309 [-]: LOADKB    R41 0 0      ; R41 := false
310 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
311 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
312 [-]: GETUPVAL  R36 U3       ; R36 := U3
313 [-]: GETGLOBAL R37 K31      ; R37 := mStatTable
314 [-]: LOADK     R38 K56      ; R38 := "test8"
315 [-]: GETTABLE  R39 R33 K47  ; R39 := R33["abilitiesUsed"]
316 [-]: LOADKB    R40 1 0      ; R40 := true
317 [-]: LOADKB    R41 0 0      ; R41 := false
318 [-]: CALL      R36 6 2      ; R36 := R36(R37,R38,R39,R40,R41)
319 [-]: SETGLOBAL R36 K31      ; mStatTable := R36
320 [-]: CONST     R36 0        ; R36 := 0.000000
321 [-]: GETTABLE  R37 R33 K57  ; R37 := R33["fireCount"]
322 [-]: GETTABLE  R38 R33 K58  ; R38 := R33["fireMeleeCount"]
323 [-]: SUB       R37 R37 R38  ; R37 := R37 - R38
324 [-]: LT        0 K30 R37    ; if 0.000000 >= R37 then PC := 328
325 [-]: JMP       328          ; PC := 328
326 [-]: GETTABLE  R38 R33 K59  ; R38 := R33["hitCount"]
327 [-]: DIV       R36 R38 R37  ; R36 := R38 / R37
328 [-]: GETUPVAL  R38 U3       ; R38 := U3
329 [-]: GETGLOBAL R39 K31      ; R39 := mStatTable
330 [-]: LOADK     R40 K60      ; R40 := "/Lotus/Language/Menu/MissionStats_FireAccuracy"
331 [-]: MOVE      R41 R36      ; R41 := R36
332 [-]: LOADKB    R42 1 0      ; R42 := true
333 [-]: LOADKB    R43 1 0      ; R43 := true
334 [-]: CALL      R38 6 2      ; R38 := R38(R39,R40,R41,R42,R43)
335 [-]: SETGLOBAL R38 K31      ; mStatTable := R38
336 [-]: GETUPVAL  R38 U3       ; R38 := U3
337 [-]: GETGLOBAL R39 K31      ; R39 := mStatTable
338 [-]: LOADK     R40 K61      ; R40 := "/Lotus/Language/Menu/MissionStats_PickupCount"
339 [-]: GETTABLE  R41 R33 K62  ; R41 := R33["pickupCount"]
340 [-]: LOADKB    R42 1 0      ; R42 := true
341 [-]: LOADKB    R43 0 0      ; R43 := false
342 [-]: CALL      R38 6 2      ; R38 := R38(R39,R40,R41,R42,R43)
343 [-]: SETGLOBAL R38 K31      ; mStatTable := R38
344 [-]: GETUPVAL  R38 U3       ; R38 := U3
345 [-]: GETGLOBAL R39 K31      ; R39 := mStatTable
346 [-]: LOADK     R40 K63      ; R40 := "/Lotus/Language/Menu/MissionStats_Revives"
347 [-]: GETTABLE  R41 R33 K64  ; R41 := R33["revives"]
348 [-]: LOADKB    R42 1 0      ; R42 := true
349 [-]: LOADKB    R43 0 0      ; R43 := false
350 [-]: CALL      R38 6 2      ; R38 := R38(R39,R40,R41,R42,R43)
351 [-]: SETGLOBAL R38 K31      ; mStatTable := R38
352 [-]: GETGLOBAL R38 K65      ; R38 := 0x03f57322
353 [-]: GETUPVAL  R39 U4       ; R39 := U4
354 [-]: GETTABLE  R39 R39 K66  ; R39 := R39[0x74a11ec6]
355 [-]: GETTABLE  R40 R33 K67  ; R40 := R33["playerMissionInfo"]
356 [-]: GETTABLE  R40 R40 K68  ; R40 := R40["mMissionRating"]
357 [-]: CONST     R41 2        ; R41 := 2.000000
358 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
359 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
360 [-]: MUL       R38 K69 R38  ; R38 := 100.000000 * R38
361 [-]: TEST      R3 1         ; if R3 then PC := 403
362 [-]: JMP       403          ; PC := 403
363 [-]: GETTABLE  R39 R33 K12  ; R39 := R33["playerName"]
364 [-]: EQ        0 R39 R2     ; if R39 ~= R2 then PC := 403
365 [-]: JMP       403          ; PC := 403
366 [-]: LT        0 K30 R38    ; if 0.000000 >= R38 then PC := 403
367 [-]: JMP       403          ; PC := 403
368 [-]: GETGLOBAL R39 K70      ; R39 := 0x34291f5c
369 [-]: GETTABLE  R39 R39 K71  ; R39 := R39[0x9ad21ae9]
370 [-]: CALL      R39 1 2      ; R39 := R39()
371 [-]: TEST      R39 0        ; if not R39 then PC := 403
372 [-]: JMP       403          ; PC := 403
373 [-]: GETTABLE  R39 R6 K72   ; R39 := R6["alertId"]
374 [-]: EQ        1 R39 K18    ; if R39 == "" then PC := 403
375 [-]: JMP       403          ; PC := 403
376 [-]: GETTABLE  R39 R6 K73   ; R39 := R6["alertTag"]
377 [-]: EQ        1 R39 K18    ; if R39 == "" then PC := 403
378 [-]: JMP       403          ; PC := 403
379 [-]: GETGLOBAL R39 K74      ; R39 := 0x89326c93
380 [-]: SELF      R39 R39 K75  ; R40 := R39; R39 := R39[0xfb64e76c]
381 [-]: CALL      R39 2 2      ; R39 := R39(R40)
382 [-]: GETGLOBAL R40 K2       ; R40 := 0x7b998233
383 [-]: MOVE      R41 R39      ; R41 := R39
384 [-]: CALL      R40 2 2      ; R40 := R40(R41)
385 [-]: TEST      R40 1        ; if R40 then PC := 403
386 [-]: JMP       403          ; PC := 403
387 [-]: LOADK     R40 K76      ; R40 := "ALERT_"
388 [-]: GETGLOBAL R41 K77      ; R41 := 0x7f5022cf
389 [-]: GETTABLE  R41 R41 K78  ; R41 := R41[0x3f3e4d12]
390 [-]: GETGLOBAL R42 K79      ; R42 := 0x64fb1586
391 [-]: GETTABLE  R43 R6 K73   ; R43 := R6["alertTag"]
392 [-]: CALL      R42 2 0      ; R42,... := R42(R43)
393 [-]: CALL      R41 0 2      ; R41 := R41(R42,...)
394 [-]: LOADK     R42 K80      ; R42 := "_COMPLETED"
395 [-]: CONCAT    R40 R40 R42  ; R40 := R40 .. R41 .. R42
396 [-]: GETGLOBAL R41 K81      ; R41 := 0xba7dfcd2
397 [-]: SELF      R41 R41 K82  ; R42 := R41; R41 := R41[0xf056b179]
398 [-]: MOVE      R43 R39      ; R43 := R39
399 [-]: GETGLOBAL R44 K83      ; R44 := 0x0469f296
400 [-]: MOVE      R45 R40      ; R45 := R40
401 [-]: CALL      R44 2 0      ; R44,... := R44(R45)
402 [-]: CALL      R41 0 1      ; R41(R42,...)
403 [-]: TEST      R5 1         ; if R5 then PC := 650
404 [-]: JMP       650          ; PC := 650
405 [-]: GETTABLE  R41 R33 K67  ; R41 := R33["playerMissionInfo"]
406 [-]: GETTABLE  R41 R41 K84  ; R41 := R41["mIsMissionCompleted"]
407 [-]: LT        1 K30 R38    ; if 0.000000 < R38 then PC := 411
408 [-]: JMP       411          ; PC := 411
409 [-]: TEST      R41 0        ; if not R41 then PC := 413
410 [-]: JMP       413          ; PC := 413
411 [-]: LOADKB    R42 1 0      ; R42 := true
412 [-]: SETGLOBAL R42 K33      ; mMissionSuccessful := R42
413 [-]: GETTABLE  R42 R33 K12  ; R42 := R33["playerName"]
414 [-]: EQ        0 R42 R2     ; if R42 ~= R2 then PC := 650
415 [-]: JMP       650          ; PC := 650
416 [-]: CONST     R42 0        ; R42 := 0.000000
417 [-]: GETTABLE  R43 R33 K67  ; R43 := R33["playerMissionInfo"]
418 [-]: GETTABLE  R44 R43 K85  ; R44 := R43["mScore"]
419 [-]: LT        0 K30 R44    ; if 0.000000 >= R44 then PC := 432
420 [-]: JMP       432          ; PC := 432
421 [-]: GETUPVAL  R44 U4       ; R44 := U4
422 [-]: GETTABLE  R44 R44 K86  ; R44 := R44[0x06d055f9]
423 [-]: GETGLOBAL R45 K33      ; R45 := mMissionSuccessful
424 [-]: EQ        1 R45 K87    ; if R45 == false then PC := 427
425 [-]: JMP       427          ; PC := 427
426 [-]: LOADKB    R45 0 1      ; R45 := false; PC := 427
427 [-]: LOADKB    R45 1 0      ; R45 := true
428 [-]: CONST     R46 0        ; R46 := 0.000000
429 [-]: GETTABLE  R47 R43 K85  ; R47 := R43["mScore"]
430 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
431 [-]: MOVE      R42 R44      ; R42 := R44
432 [-]: LT        0 K30 R42    ; if 0.000000 >= R42 then PC := 458
433 [-]: JMP       458          ; PC := 458
434 [-]: GETTABLE  R44 R6 K88   ; R44 := R6["goalTag"]
435 [-]: GETGLOBAL R45 K83      ; R45 := 0x0469f296
436 [-]: LOADK     R46 K89      ; R46 := "KelaEvent"
437 [-]: CALL      R45 2 2      ; R45 := R45(R46)
438 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 458
439 [-]: JMP       458          ; PC := 458
440 [-]: GETUPVAL  R44 U5       ; R44 := U5
441 [-]: MOVE      R45 R42      ; R45 := R42
442 [-]: CALL      R44 2 3      ; R44,R45 := R44(R45)
443 [-]: TEST      R44 0        ; if not R44 then PC := 458
444 [-]: JMP       458          ; PC := 458
445 [-]: GETGLOBAL R46 K14      ; R46 := 0x33bdd652
446 [-]: GETTABLE  R46 R46 K24  ; R46 := R46[0x23d5322f]
447 [-]: GETGLOBAL R47 K90      ; R47 := mOtherStuff
448 [-]: NEWTABLE  R48 0 6      ; R48 := {}
449 [-]: SETTABLE  R48 K20 R44  ; R48["Name"] := R44
450 [-]: SETTABLE  R48 K91 R45  ; R48["Count"] := R45
451 [-]: SETTABLE  R48 K92 K93  ; R48["SortPriority"] := 25.000000
452 [-]: GETUPVAL  R49 U6       ; R49 := U6
453 [-]: CALL      R49 1 2      ; R49 := R49()
454 [-]: SETTABLE  R48 K94 R49  ; R48["Icon"] := R49
455 [-]: SETTABLE  R48 K95 K96  ; R48["Themed"] := true
456 [-]: SETTABLE  R48 K97 K29  ; R48["Background"] := nil
457 [-]: CALL      R46 3 1      ; R46(R47,R48)
458 [-]: GETTABLE  R46 R43 K98  ; R46 := R43["mNemesisTaxInfo"]
459 [-]: GETTABLE  R47 R46 K99  ; R47 := R46["mTaxedCredits"]
460 [-]: GETTABLE  R48 R43 K100 ; R48 := R43["mTotalCredits"]
461 [-]: GETTABLE  R49 R43 K101 ; R49 := R43["mFinalCredits"]
462 [-]: GETTABLE  R50 R43 K102 ; R50 := R43["mMissionCompleteCreditBonus"]
463 [-]: GETTABLE  R51 R43 K103 ; R51 := R43["mCreditsEarnedInMission"]
464 [-]: ADD       R52 R49 R47  ; R52 := R49 + R47
465 [-]: SUB       R52 R52 R48  ; R52 := R52 - R48
466 [-]: CONST     R53 0        ; R53 := 0.000000
467 [-]: GETUPVAL  R54 U7       ; R54 := U7
468 [-]: MOVE      R55 R53      ; R55 := R53
469 [-]: MOVE      R56 R50      ; R56 := R50
470 [-]: LOADK     R57 K104     ; R57 := "Credits"
471 [-]: GETUPVAL  R58 U4       ; R58 := U4
472 [-]: GETTABLE  R58 R58 K105 ; R58 := R58[0x1142c7a8]
473 [-]: MOVE      R59 R50      ; R59 := R50
474 [-]: CALL      R58 2 2      ; R58 := R58(R59)
475 [-]: LOADK     R59 K106     ; R59 := " "
476 [-]: GETGLOBAL R60 K17      ; R60 := 0xae91e43b
477 [-]: SELF      R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
478 [-]: LOADK     R62 K108     ; R62 := "/Lotus/Language/Menu/MissionStats_CreditsBonus"
479 [-]: LOADKB    R63 0 0      ; R63 := false
480 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
481 [-]: CONCAT    R58 R58 R60  ; R58 := R58 .. R59 .. R60
482 [-]: CALL      R54 5 2      ; R54 := R54(R55,R56,R57,R58)
483 [-]: MOVE      R53 R54      ; R53 := R54
484 [-]: GETUPVAL  R54 U7       ; R54 := U7
485 [-]: MOVE      R55 R53      ; R55 := R53
486 [-]: MOVE      R56 R51      ; R56 := R51
487 [-]: LOADK     R57 K104     ; R57 := "Credits"
488 [-]: GETUPVAL  R58 U4       ; R58 := U4
489 [-]: GETTABLE  R58 R58 K105 ; R58 := R58[0x1142c7a8]
490 [-]: MOVE      R59 R51      ; R59 := R51
491 [-]: CALL      R58 2 2      ; R58 := R58(R59)
492 [-]: LOADK     R59 K106     ; R59 := " "
493 [-]: GETGLOBAL R60 K17      ; R60 := 0xae91e43b
494 [-]: SELF      R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
495 [-]: LOADK     R62 K109     ; R62 := "/Lotus/Language/Menu/MissionStats_MissionCredits"
496 [-]: LOADKB    R63 0 0      ; R63 := false
497 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
498 [-]: CONCAT    R58 R58 R60  ; R58 := R58 .. R59 .. R60
499 [-]: CALL      R54 5 2      ; R54 := R54(R55,R56,R57,R58)
500 [-]: MOVE      R53 R54      ; R53 := R54
501 [-]: GETUPVAL  R54 U7       ; R54 := U7
502 [-]: MOVE      R55 R53      ; R55 := R53
503 [-]: MOVE      R56 R52      ; R56 := R52
504 [-]: LOADK     R57 K104     ; R57 := "Credits"
505 [-]: GETUPVAL  R58 U4       ; R58 := U4
506 [-]: GETTABLE  R58 R58 K105 ; R58 := R58[0x1142c7a8]
507 [-]: MOVE      R59 R52      ; R59 := R52
508 [-]: CALL      R58 2 2      ; R58 := R58(R59)
509 [-]: LOADK     R59 K106     ; R59 := " "
510 [-]: GETGLOBAL R60 K17      ; R60 := 0xae91e43b
511 [-]: SELF      R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
512 [-]: LOADK     R62 K110     ; R62 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
513 [-]: LOADKB    R63 0 0      ; R63 := false
514 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
515 [-]: CONCAT    R58 R58 R60  ; R58 := R58 .. R59 .. R60
516 [-]: CALL      R54 5 2      ; R54 := R54(R55,R56,R57,R58)
517 [-]: MOVE      R53 R54      ; R53 := R54
518 [-]: LT        0 K30 R53    ; if 0.000000 >= R53 then PC := 540
519 [-]: JMP       540          ; PC := 540
520 [-]: GETUPVAL  R54 U8       ; R54 := U8
521 [-]: GETGLOBAL R55 K77      ; R55 := 0x7f5022cf
522 [-]: GETTABLE  R55 R55 K78  ; R55 := R55[0x3f3e4d12]
523 [-]: GETGLOBAL R56 K17      ; R56 := 0xae91e43b
524 [-]: SELF      R56 R56 K107 ; R57 := R56; R56 := R56[0x42b04007]
525 [-]: LOADK     R58 K111     ; R58 := "/Lotus/Language/Menu/Store_BuyWithCredits"
526 [-]: LOADKB    R59 0 0      ; R59 := false
527 [-]: CALL      R56 4 0      ; R56,... := R56(R57,R58,R59)
528 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
529 [-]: CONST     R56 1        ; R56 := 1.000000
530 [-]: GETTABLE  R57 R46 K99  ; R57 := R46["mTaxedCredits"]
531 [-]: GETGLOBAL R58 K112     ; R58 := 0x9afd2e71
532 [-]: CALL      R54 5 2      ; R54 := R54(R55,R56,R57,R58)
533 [-]: SETTABLE  R54 K104 R53 ; R54["Credits"] := R53
534 [-]: SETTABLE  R54 K95 K96  ; R54["Themed"] := true
535 [-]: GETGLOBAL R55 K14      ; R55 := 0x33bdd652
536 [-]: GETTABLE  R55 R55 K24  ; R55 := R55[0x23d5322f]
537 [-]: GETGLOBAL R56 K90      ; R56 := mOtherStuff
538 [-]: MOVE      R57 R54      ; R57 := R54
539 [-]: CALL      R55 3 1      ; R55(R56,R57)
540 [-]: LOADKB    R55 0 0      ; R55 := false
541 [-]: TEST      R55 0        ; if not R55 then PC := 584
542 [-]: JMP       584          ; PC := 584
543 [-]: GETTABLE  R55 R43 K100 ; R55 := R43["mTotalCredits"]
544 [-]: LT        0 K30 R55    ; if 0.000000 >= R55 then PC := 563
545 [-]: JMP       563          ; PC := 563
546 [-]: GETGLOBAL R56 K14      ; R56 := 0x33bdd652
547 [-]: GETTABLE  R56 R56 K24  ; R56 := R56[0x23d5322f]
548 [-]: GETGLOBAL R57 K90      ; R57 := mOtherStuff
549 [-]: GETUPVAL  R58 U8       ; R58 := U8
550 [-]: GETGLOBAL R59 K77      ; R59 := 0x7f5022cf
551 [-]: GETTABLE  R59 R59 K78  ; R59 := R59[0x3f3e4d12]
552 [-]: GETGLOBAL R60 K17      ; R60 := 0xae91e43b
553 [-]: SELF      R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
554 [-]: LOADK     R62 K113     ; R62 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
555 [-]: LOADKB    R63 0 0      ; R63 := false
556 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
557 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
558 [-]: MOVE      R60 R55      ; R60 := R55
559 [-]: LOADNIL   R61 R61      ; R61 := nil
560 [-]: GETGLOBAL R62 K112     ; R62 := 0x9afd2e71
561 [-]: CALL      R58 5 0      ; R58,... := R58(R59,R60,R61,R62)
562 [-]: CALL      R56 0 1      ; R56(R57,...)
563 [-]: LT        0 K30 R49    ; if 0.000000 >= R49 then PC := 584
564 [-]: JMP       584          ; PC := 584
565 [-]: EQ        1 R49 R55    ; if R49 == R55 then PC := 584
566 [-]: JMP       584          ; PC := 584
567 [-]: GETGLOBAL R56 K14      ; R56 := 0x33bdd652
568 [-]: GETTABLE  R56 R56 K24  ; R56 := R56[0x23d5322f]
569 [-]: GETGLOBAL R57 K90      ; R57 := mOtherStuff
570 [-]: GETUPVAL  R58 U8       ; R58 := U8
571 [-]: GETGLOBAL R59 K77      ; R59 := 0x7f5022cf
572 [-]: GETTABLE  R59 R59 K78  ; R59 := R59[0x3f3e4d12]
573 [-]: GETGLOBAL R60 K17      ; R60 := 0xae91e43b
574 [-]: SELF      R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
575 [-]: LOADK     R62 K110     ; R62 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
576 [-]: LOADKB    R63 0 0      ; R63 := false
577 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
578 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
579 [-]: MOVE      R60 R49      ; R60 := R49
580 [-]: LOADNIL   R61 R61      ; R61 := nil
581 [-]: GETGLOBAL R62 K112     ; R62 := 0x9afd2e71
582 [-]: CALL      R58 5 0      ; R58,... := R58(R59,R60,R61,R62)
583 [-]: CALL      R56 0 1      ; R56(R57,...)
584 [-]: GETTABLE  R56 R43 K114 ; R56 := R43["mFusionPoints"]
585 [-]: LT        0 K30 R56    ; if 0.000000 >= R56 then PC := 610
586 [-]: JMP       610          ; PC := 610
587 [-]: GETUPVAL  R56 U8       ; R56 := U8
588 [-]: GETGLOBAL R57 K77      ; R57 := 0x7f5022cf
589 [-]: GETTABLE  R57 R57 K78  ; R57 := R57[0x3f3e4d12]
590 [-]: GETGLOBAL R58 K17      ; R58 := 0xae91e43b
591 [-]: SELF      R58 R58 K107 ; R59 := R58; R58 := R58[0x42b04007]
592 [-]: LOADK     R60 K115     ; R60 := "/Lotus/Language/Items/FusionBundle"
593 [-]: LOADKB    R61 0 0      ; R61 := false
594 [-]: CALL      R58 4 0      ; R58,... := R58(R59,R60,R61)
595 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
596 [-]: CONST     R58 1        ; R58 := 1.000000
597 [-]: GETTABLE  R59 R46 K116 ; R59 := R46["mTaxedFusionPoints"]
598 [-]: GETGLOBAL R60 K117     ; R60 := 0x457d7698
599 [-]: LOADNIL   R61 R63      ; R61 := R62 := R63 := nil
600 [-]: GETGLOBAL R64 K118     ; R64 := mFusionPointsSortPriority
601 [-]: CALL      R56 9 2      ; R56 := R56(R57,R58,R59,R60,R61,R62,R63,R64)
602 [-]: GETTABLE  R57 R43 K114 ; R57 := R43["mFusionPoints"]
603 [-]: SETTABLE  R56 K119 R57 ; R56["Endo"] := R57
604 [-]: SETTABLE  R56 K120 K121; R56["Description"] := "/Lotus/Language/Items/FusionPartDesc"
605 [-]: GETGLOBAL R57 K14      ; R57 := 0x33bdd652
606 [-]: GETTABLE  R57 R57 K24  ; R57 := R57[0x23d5322f]
607 [-]: GETGLOBAL R58 K122     ; R58 := mSortRewardItems
608 [-]: MOVE      R59 R56      ; R59 := R56
609 [-]: CALL      R57 3 1      ; R57(R58,R59)
610 [-]: GETTABLE  R57 R43 K123 ; R57 := R43["mCrewShipFusionPoints"]
611 [-]: LT        0 K30 R57    ; if 0.000000 >= R57 then PC := 634
612 [-]: JMP       634          ; PC := 634
613 [-]: GETUPVAL  R57 U8       ; R57 := U8
614 [-]: GETGLOBAL R58 K77      ; R58 := 0x7f5022cf
615 [-]: GETTABLE  R58 R58 K78  ; R58 := R58[0x3f3e4d12]
616 [-]: GETGLOBAL R59 K17      ; R59 := 0xae91e43b
617 [-]: SELF      R59 R59 K107 ; R60 := R59; R59 := R59[0x42b04007]
618 [-]: LOADK     R61 K124     ; R61 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
619 [-]: LOADKB    R62 0 0      ; R62 := false
620 [-]: CALL      R59 4 0      ; R59,... := R59(R60,R61,R62)
621 [-]: CALL      R58 0 2      ; R58 := R58(R59,...)
622 [-]: GETTABLE  R59 R43 K123 ; R59 := R43["mCrewShipFusionPoints"]
623 [-]: GETTABLE  R60 R46 K125 ; R60 := R46["mTaxedCrewShipFusionPoints"]
624 [-]: GETGLOBAL R61 K126     ; R61 := 0x1ae7e99f
625 [-]: LOADNIL   R62 R64      ; R62 := R63 := R64 := nil
626 [-]: GETGLOBAL R65 K118     ; R65 := mFusionPointsSortPriority
627 [-]: CALL      R57 9 2      ; R57 := R57(R58,R59,R60,R61,R62,R63,R64,R65)
628 [-]: SETTABLE  R57 K120 K127; R57["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
629 [-]: GETGLOBAL R58 K14      ; R58 := 0x33bdd652
630 [-]: GETTABLE  R58 R58 K24  ; R58 := R58[0x23d5322f]
631 [-]: GETGLOBAL R59 K122     ; R59 := mSortRewardItems
632 [-]: MOVE      R60 R57      ; R60 := R57
633 [-]: CALL      R58 3 1      ; R58(R59,R60)
634 [-]: GETTABLE  R58 R43 K128 ; R58 := R43["mCollectedUpgrades"]
635 [-]: SETUPVAL  R58 U9       ; U82 := R9
636 [-]: GETGLOBAL R58 K2       ; R58 := 0x7b998233
637 [-]: GETUPVAL  R59 U9       ; R59 := U9
638 [-]: CALL      R58 2 2      ; R58 := R58(R59)
639 [-]: TEST      R58 0        ; if not R58 then PC := 643
640 [-]: JMP       643          ; PC := 643
641 [-]: NEWTABLE  R58 0 0      ; R58 := {}
642 [-]: SETUPVAL  R58 U9       ; U82 := R9
643 [-]: GETTABLE  R58 R43 K129 ; R58 := R43["mCollectedStoreItems"]
644 [-]: SETUPVAL  R58 U10      ; U82 := R10
645 [-]: GETTABLE  R58 R43 K130 ; R58 := R43["mCollectedMiscItems"]
646 [-]: SETUPVAL  R58 U11      ; U82 := R11
647 [-]: GETUPVAL  R58 U12      ; R58 := U12
648 [-]: GETTABLE  R59 R43 K131 ; R59 := R43["mPlayedTime"]
649 [-]: CALL      R58 2 1      ; R58(R59)
650 [-]: FORLOOP   R29 177      ; R29 += R31; if R29 <= R30 then begin PC := 177; R32 := R29 end
651 [-]: GETGLOBAL R58 K27      ; R58 := _T
652 [-]: GETTABLE  R58 R58 K132 ; R58 := R58["eomScreenMode"]
653 [-]: GETUPVAL  R59 U13      ; R59 := U13
654 [-]: GETTABLE  R59 R59 K133 ; R59 := R59["ACTUAL_EOM"]
655 [-]: EQ        1 R58 R59    ; if R58 == R59 then PC := 658
656 [-]: JMP       658          ; PC := 658
657 [-]: LOADKB    R58 0 1      ; R58 := false; PC := 658
658 [-]: LOADKB    R58 1 0      ; R58 := true
659 [-]: NEWTABLE  R59 0 0      ; R59 := {}
660 [-]: GETGLOBAL R60 K134     ; R60 := 0xc8802016
661 [-]: MOVE      R61 R28      ; R61 := R28
662 [-]: CALL      R60 2 4      ; R60,R61,R62 := R60(R61)
663 [-]: JMP       728          ; PC := 728
664 [-]: GETGLOBAL R65 K2       ; R65 := 0x7b998233
665 [-]: MOVE      R66 R64      ; R66 := R64
666 [-]: CALL      R65 2 2      ; R65 := R65(R66)
667 [-]: TEST      R65 1        ; if R65 then PC := 728
668 [-]: JMP       728          ; PC := 728
669 [-]: SELF      R65 R64 K135 ; R66 := R64; R65 := R64[0xaebe890f]
670 [-]: CALL      R65 2 2      ; R65 := R65(R66)
671 [-]: NEWTABLE  R66 0 1      ; R66 := {}
672 [-]: LOADK     R67 K137     ; R67 := "</font><font face=\"Roboto\"><b>"
673 [-]: GETUPVAL  R68 U14      ; R68 := U14
674 [-]: MOVE      R69 R65      ; R69 := R65
675 [-]: GETTABLE  R70 R64 K138 ; R70 := R64["raw"]
676 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
677 [-]: LOADK     R69 K139     ; R69 := "</b></font><font face=\"Roboto Condensed\">"
678 [-]: CONCAT    R67 R67 R69  ; R67 := R67 .. R68 .. R69
679 [-]: SETTABLE  R66 K136 R67 ; R66["VALUE"] := R67
680 [-]: GETGLOBAL R67 K140     ; R67 := 0x603636ad
681 [-]: LOADK     R68 K141     ; R68 := "/Lotus/Language/Medals/"
682 [-]: MOVE      R69 R65      ; R69 := R65
683 [-]: LOADK     R70 K142     ; R70 := "_P"
684 [-]: CONCAT    R68 R68 R70  ; R68 := R68 .. R69 .. R70
685 [-]: MOVE      R69 R66      ; R69 := R66
686 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
687 [-]: GETTABLE  R68 R64 K138 ; R68 := R64["raw"]
688 [-]: EQ        1 R68 K13    ; if R68 == 1.000000 then PC := 698
689 [-]: JMP       698          ; PC := 698
690 [-]: GETGLOBAL R68 K77      ; R68 := 0x7f5022cf
691 [-]: GETTABLE  R68 R68 K143 ; R68 := R68[0x1a94c9cc]
692 [-]: MOVE      R69 R67      ; R69 := R67
693 [-]: CONST     R70 1        ; R70 := 1.000000
694 [-]: CONST     R71 1        ; R71 := 1.000000
695 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
696 [-]: EQ        0 R68 K144   ; if R68 ~= "/" then PC := 705
697 [-]: JMP       705          ; PC := 705
698 [-]: GETGLOBAL R68 K140     ; R68 := 0x603636ad
699 [-]: LOADK     R69 K141     ; R69 := "/Lotus/Language/Medals/"
700 [-]: MOVE      R70 R65      ; R70 := R65
701 [-]: CONCAT    R69 R69 R70  ; R69 := R69 .. R70
702 [-]: MOVE      R70 R66      ; R70 := R66
703 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
704 [-]: MOVE      R67 R68      ; R67 := R68
705 [-]: GETTABLE  R68 R64 K145 ; R68 := R64["winner"]
706 [-]: LOADK     R69 K146     ; R69 := "<p><font face=\"Roboto Condensed\">"
707 [-]: MOVE      R70 R67      ; R70 := R67
708 [-]: LOADK     R71 K147     ; R71 := "</font></p>"
709 [-]: CONCAT    R69 R69 R71  ; R69 := R69 .. R70 .. R71
710 [-]: SETTABLE  R59 R68 R69  ; R59[R68] := R69
711 [-]: TEST      R58 0        ; if not R58 then PC := 728
712 [-]: JMP       728          ; PC := 728
713 [-]: GETTABLE  R68 R64 K145 ; R68 := R64["winner"]
714 [-]: EQ        0 R68 R2     ; if R68 ~= R2 then PC := 728
715 [-]: JMP       728          ; PC := 728
716 [-]: GETGLOBAL R68 K2       ; R68 := 0x7b998233
717 [-]: GETGLOBAL R69 K148     ; R69 := 0xcb79539e
718 [-]: CALL      R68 2 2      ; R68 := R68(R69)
719 [-]: TEST      R68 1        ; if R68 then PC := 728
720 [-]: JMP       728          ; PC := 728
721 [-]: GETGLOBAL R68 K148     ; R68 := 0xcb79539e
722 [-]: SELF      R68 R68 K149 ; R69 := R68; R68 := R68[0x8b8fb8b7]
723 [-]: GETGLOBAL R70 K83      ; R70 := 0x0469f296
724 [-]: LOADK     R71 K150     ; R71 := "MEDALS_TOP"
725 [-]: CALL      R70 2 2      ; R70 := R70(R71)
726 [-]: MOVE      R71 R65      ; R71 := R65
727 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
728 [-]: TFORLOOP  R60 2        ; R63,R64 :=  R60(R61,R62); if R63 ~= nil then begin PC = 664; R62 := R63 end
729 [-]: JMP       664          ; PC := 664
730 [-]: GETUPVAL  R68 U15      ; R68 := U15
731 [-]: CALL      R68 1 1      ; R68()
732 [-]: LEN       R68 R14      ; R68 := # R14
733 [-]: CONST     R69 1        ; R69 := 1.000000
734 [-]: GETGLOBAL R70 K151     ; R70 := mMaxPlayers
735 [-]: CONST     R71 1        ; R71 := 1.000000
736 [-]: FORPREP   R69 1175     ; R69 -= R71; PC := 1175
737 [-]: LOADK     R73 K18      ; R73 := ""
738 [-]: LE        0 R72 R7     ; if R72 > R7 then PC := 742
739 [-]: JMP       742          ; PC := 742
740 [-]: GETTABLE  R74 R4 R72   ; R74 := R4[R72]
741 [-]: GETTABLE  R73 R74 K12  ; R73 := R74["playerName"]
742 [-]: LOADNIL   R74 R74      ; R74 := nil
743 [-]: CONST     R75 0        ; R75 := 0.000000
744 [-]: CONST     R76 1        ; R76 := 1.000000
745 [-]: MOVE      R77 R68      ; R77 := R68
746 [-]: CONST     R78 1        ; R78 := 1.000000
747 [-]: FORPREP   R76 753      ; R76 -= R78; PC := 753
748 [-]: GETTABLE  R80 R14 R79  ; R80 := R14[R79]
749 [-]: GETTABLE  R80 R80 K11  ; R80 := R80["name"]
750 [-]: EQ        0 R80 R73    ; if R80 ~= R73 then PC := 753
751 [-]: JMP       753          ; PC := 753
752 [-]: MOVE      R75 R79      ; R75 := R79
753 [-]: FORLOOP   R76 748      ; R76 += R78; if R76 <= R77 then begin PC := 748; R79 := R76 end
754 [-]: LOADK     R80 K152     ; R80 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
755 [-]: MOVE      R81 R72      ; R81 := R72
756 [-]: CONCAT    R80 R80 R81  ; R80 := R80 .. R81
757 [-]: LOADNIL   R81 R81      ; R81 := nil
758 [-]: EQ        1 R14 K29    ; if R14 == nil then PC := 764
759 [-]: JMP       764          ; PC := 764
760 [-]: LEN       R82 R14      ; R82 := # R14
761 [-]: LE        0 R75 R82    ; if R75 > R82 then PC := 764
762 [-]: JMP       764          ; PC := 764
763 [-]: GETTABLE  R81 R14 R75  ; R81 := R14[R75]
764 [-]: EQ        1 R72 K13    ; if R72 == 1.000000 then PC := 774
765 [-]: JMP       774          ; PC := 774
766 [-]: GETGLOBAL R82 K153     ; R82 := 0x38f10e85
767 [-]: GETGLOBAL R83 K17      ; R83 := 0xae91e43b
768 [-]: LOADK     R84 K154     ; R84 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player1.duplicateMovieClip"
769 [-]: LOADK     R85 K155     ; R85 := "Player"
770 [-]: MOVE      R86 R72      ; R86 := R72
771 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
772 [-]: MOVE      R86 R72      ; R86 := R72
773 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
774 [-]: GETGLOBAL R82 K17      ; R82 := 0xae91e43b
775 [-]: SELF      R82 R82 K156 ; R83 := R82; R82 := R82[0x1e5b5cfe]
776 [-]: MOVE      R84 R80      ; R84 := R80
777 [-]: LOADK     R85 K157     ; R85 := ".Btn"
778 [-]: CONCAT    R84 R84 R85  ; R84 := R84 .. R85
779 [-]: LOADK     R85 K158     ; R85 := "RollOverPlayer"
780 [-]: LOADK     R86 K159     ; R86 := "RollOutPlayer"
781 [-]: LOADK     R87 K160     ; R87 := "SelectPlayer"
782 [-]: LOADNIL   R88 R88      ; R88 := nil
783 [-]: CALL      R82 7 1      ; R82(R83,R84,R85,R86,R87,R88)
784 [-]: GETGLOBAL R82 K17      ; R82 := 0xae91e43b
785 [-]: SELF      R82 R82 K161 ; R83 := R82; R82 := R82[0xaade900e]
786 [-]: MOVE      R84 R80      ; R84 := R80
787 [-]: CONST     R85 11       ; R85 := 11.000000
788 [-]: GETGLOBAL R86 K2       ; R86 := 0x7b998233
789 [-]: MOVE      R87 R81      ; R87 := R81
790 [-]: CALL      R86 2 2      ; R86 := R86(R87)
791 [-]: NOT       R86 R86      ; R86 :=  R86
792 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
793 [-]: GETGLOBAL R82 K2       ; R82 := 0x7b998233
794 [-]: MOVE      R83 R81      ; R83 := R81
795 [-]: CALL      R82 2 2      ; R82 := R82(R83)
796 [-]: TEST      R82 1        ; if R82 then PC := 1175
797 [-]: JMP       1175         ; PC := 1175
798 [-]: GETGLOBAL R82 K162     ; R82 := 0x0032441c
799 [-]: GETTABLE  R82 R82 K163 ; R82 := R82["UITexture_ProfilePlaceHolder"]
800 [-]: CONST     R83 1        ; R83 := 1.000000
801 [-]: GETGLOBAL R84 K164     ; R84 := cjson
802 [-]: GETTABLE  R84 R84 K165 ; R84 := R84[0x7ab914d8]
803 [-]: GETTABLE  R85 R81 K166 ; R85 := R81["loadout"]
804 [-]: CALL      R84 2 2      ; R84 := R84(R85)
805 [-]: GETGLOBAL R85 K167     ; R85 := 0xce225efa
806 [-]: CONST     R86 0        ; R86 := 0.000000
807 [-]: CALL      R85 2 1      ; R85(R86)
808 [-]: GETGLOBAL R85 K2       ; R85 := 0x7b998233
809 [-]: MOVE      R86 R84      ; R86 := R84
810 [-]: CALL      R85 2 2      ; R85 := R85(R86)
811 [-]: TEST      R85 1        ; if R85 then PC := 837
812 [-]: JMP       837          ; PC := 837
813 [-]: GETTABLE  R85 R84 K168 ; R85 := R84["ProfileImage"]
814 [-]: GETGLOBAL R86 K2       ; R86 := 0x7b998233
815 [-]: MOVE      R87 R85      ; R87 := R85
816 [-]: CALL      R86 2 2      ; R86 := R86(R87)
817 [-]: TEST      R86 1        ; if R86 then PC := 835
818 [-]: JMP       835          ; PC := 835
819 [-]: EQ        1 R85 K18    ; if R85 == "" then PC := 835
820 [-]: JMP       835          ; PC := 835
821 [-]: GETGLOBAL R86 K169     ; R86 := 0xb009bbc6
822 [-]: MOVE      R87 R85      ; R87 := R85
823 [-]: CALL      R86 2 2      ; R86 := R86(R87)
824 [-]: GETGLOBAL R87 K2       ; R87 := 0x7b998233
825 [-]: MOVE      R88 R86      ; R88 := R86
826 [-]: CALL      R87 2 2      ; R87 := R87(R88)
827 [-]: TEST      R87 1        ; if R87 then PC := 861
828 [-]: JMP       861          ; PC := 861
829 [-]: GETGLOBAL R87 K170     ; R87 := mPinnedAvatarImageResources
830 [-]: SETTABLE  R87 R72 R86  ; R87[R72] := R86
831 [-]: SELF      R87 R86 K171 ; R88 := R86; R87 := R86[0x056dcf06]
832 [-]: CALL      R87 2 2      ; R87 := R87(R88)
833 [-]: MOVE      R74 R87      ; R74 := R87
834 [-]: JMP       861          ; PC := 861
835 [-]: MOVE      R74 R82      ; R74 := R82
836 [-]: JMP       861          ; PC := 861
837 [-]: GETTABLE  R87 R81 K11  ; R87 := R81["name"]
838 [-]: EQ        0 R87 R2     ; if R87 ~= R2 then PC := 861
839 [-]: JMP       861          ; PC := 861
840 [-]: GETGLOBAL R87 K3       ; R87 := mGameData
841 [-]: SELF      R87 R87 K172 ; R88 := R87; R87 := R87[0x62c81b76]
842 [-]: CALL      R87 2 2      ; R87 := R87(R88)
843 [-]: SELF      R87 R87 K173 ; R88 := R87; R87 := R87[0x5734fdfa]
844 [-]: CALL      R87 2 2      ; R87 := R87(R88)
845 [-]: GETGLOBAL R88 K2       ; R88 := 0x7b998233
846 [-]: GETTABLE  R89 R87 K174 ; R89 := R87["mItemType"]
847 [-]: CALL      R88 2 2      ; R88 := R88(R89)
848 [-]: TEST      R88 1        ; if R88 then PC := 861
849 [-]: JMP       861          ; PC := 861
850 [-]: GETGLOBAL R88 K169     ; R88 := 0xb009bbc6
851 [-]: GETTABLE  R89 R87 K174 ; R89 := R87["mItemType"]
852 [-]: CALL      R88 2 2      ; R88 := R88(R89)
853 [-]: GETGLOBAL R89 K2       ; R89 := 0x7b998233
854 [-]: MOVE      R90 R88      ; R90 := R88
855 [-]: CALL      R89 2 2      ; R89 := R89(R90)
856 [-]: TEST      R89 1        ; if R89 then PC := 861
857 [-]: JMP       861          ; PC := 861
858 [-]: SELF      R89 R88 K171 ; R90 := R88; R89 := R88[0x056dcf06]
859 [-]: CALL      R89 2 2      ; R89 := R89(R90)
860 [-]: MOVE      R74 R89      ; R74 := R89
861 [-]: GETTABLE  R83 R81 K175 ; R83 := R81["teamId"]
862 [-]: GETGLOBAL R89 K176     ; R89 := mStatColumnSeparation
863 [-]: GETGLOBAL R90 K17      ; R90 := 0xae91e43b
864 [-]: SELF      R90 R90 K177 ; R91 := R90; R90 := R90[0x2ce15376]
865 [-]: MOVE      R92 R80      ; R92 := R80
866 [-]: LOADK     R93 K178     ; R93 := "Btn"
867 [-]: CONST     R94 0        ; R94 := 0.000000
868 [-]: CALL      R90 5 2      ; R90 := R90(R91,R92,R93,R94)
869 [-]: ADD       R89 R89 R90  ; R89 := R89 + R90
870 [-]: GETGLOBAL R90 K17      ; R90 := 0xae91e43b
871 [-]: SELF      R90 R90 K177 ; R91 := R90; R90 := R90[0x2ce15376]
872 [-]: MOVE      R92 R80      ; R92 := R80
873 [-]: LOADK     R93 K20      ; R93 := "Name"
874 [-]: CONST     R94 0        ; R94 := 0.000000
875 [-]: CALL      R90 5 2      ; R90 := R90(R91,R92,R93,R94)
876 [-]: SUB       R89 R89 R90  ; R89 := R89 - R90
877 [-]: SUB       R89 R89 K179 ; R89 := R89 - 10.000000
878 [-]: GETUPVAL  R90 U16      ; R90 := U16
879 [-]: GETTABLE  R90 R90 K180 ; R90 := R90[0x34b70990]
880 [-]: MOVE      R91 R73      ; R91 := R73
881 [-]: MOVE      R92 R4       ; R92 := R4
882 [-]: LOADK     R93 K12      ; R93 := "playerName"
883 [-]: CALL      R90 4 2      ; R90 := R90(R91,R92,R93)
884 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
885 [-]: SELF      R91 R91 K181 ; R92 := R91; R91 := R91[0xf64b7262]
886 [-]: MOVE      R93 R80      ; R93 := R80
887 [-]: LOADK     R94 K178     ; R94 := "Btn"
888 [-]: CONST     R95 85       ; R95 := 85.000000
889 [-]: MOVE      R96 R72      ; R96 := R72
890 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
891 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
892 [-]: SELF      R91 R91 K182 ; R92 := R91; R91 := R91[0x0c33ebb2]
893 [-]: MOVE      R93 R80      ; R93 := R80
894 [-]: LOADK     R94 K157     ; R94 := ".Btn"
895 [-]: CONCAT    R93 R93 R94  ; R93 := R93 .. R94
896 [-]: LOADK     R94 K183     ; R94 := "PlayerId"
897 [-]: MOVE      R95 R75      ; R95 := R75
898 [-]: CALL      R91 5 1      ; R91(R92,R93,R94,R95)
899 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
900 [-]: SELF      R91 R91 K181 ; R92 := R91; R91 := R91[0xf64b7262]
901 [-]: MOVE      R93 R80      ; R93 := R80
902 [-]: LOADK     R94 K178     ; R94 := "Btn"
903 [-]: CONST     R95 12       ; R95 := 12.000000
904 [-]: GETGLOBAL R96 K176     ; R96 := mStatColumnSeparation
905 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
906 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
907 [-]: SELF      R91 R91 K184 ; R92 := R91; R91 := R91[0xc0a3774b]
908 [-]: MOVE      R93 R80      ; R93 := R80
909 [-]: LOADK     R94 K20      ; R94 := "Name"
910 [-]: CONST     R95 46       ; R95 := 46.000000
911 [-]: LOADKB    R96 1 0      ; R96 := true
912 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
913 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
914 [-]: SELF      R91 R91 K181 ; R92 := R91; R91 := R91[0xf64b7262]
915 [-]: MOVE      R93 R80      ; R93 := R80
916 [-]: LOADK     R94 K20      ; R94 := "Name"
917 [-]: CONST     R95 12       ; R95 := 12.000000
918 [-]: MOVE      R96 R89      ; R96 := R89
919 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
920 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
921 [-]: SELF      R91 R91 K185 ; R92 := R91; R91 := R91[0xe261aa96]
922 [-]: MOVE      R93 R80      ; R93 := R80
923 [-]: LOADK     R94 K20      ; R94 := "Name"
924 [-]: CONST     R95 38       ; R95 := 38.000000
925 [-]: LOADK     R96 K186     ; R96 := "bottom"
926 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
927 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
928 [-]: SELF      R91 R91 K185 ; R92 := R91; R91 := R91[0xe261aa96]
929 [-]: MOVE      R93 R80      ; R93 := R80
930 [-]: LOADK     R94 K20      ; R94 := "Name"
931 [-]: CONST     R95 29       ; R95 := 29.000000
932 [-]: MOVE      R96 R90      ; R96 := R90
933 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
934 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
935 [-]: SELF      R91 R91 K184 ; R92 := R91; R91 := R91[0xc0a3774b]
936 [-]: MOVE      R93 R80      ; R93 := R80
937 [-]: LOADK     R94 K187     ; R94 := "Stat"
938 [-]: CONST     R95 46       ; R95 := 46.000000
939 [-]: LOADKB    R96 1 0      ; R96 := true
940 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
941 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
942 [-]: SELF      R91 R91 K181 ; R92 := R91; R91 := R91[0xf64b7262]
943 [-]: MOVE      R93 R80      ; R93 := R80
944 [-]: LOADK     R94 K187     ; R94 := "Stat"
945 [-]: CONST     R95 12       ; R95 := 12.000000
946 [-]: MOVE      R96 R89      ; R96 := R89
947 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
948 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
949 [-]: SELF      R91 R91 K181 ; R92 := R91; R91 := R91[0xf64b7262]
950 [-]: MOVE      R93 R80      ; R93 := R80
951 [-]: LOADK     R94 K187     ; R94 := "Stat"
952 [-]: CONST     R95 1        ; R95 := 1.000000
953 [-]: CONST     R96 2        ; R96 := 2.000000
954 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
955 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
956 [-]: SELF      R91 R91 K181 ; R92 := R91; R91 := R91[0xf64b7262]
957 [-]: MOVE      R93 R80      ; R93 := R80
958 [-]: LOADK     R94 K188     ; R94 := "NameBackground"
959 [-]: CONST     R95 10       ; R95 := 10.000000
960 [-]: CONST     R96 50       ; R96 := 50.000000
961 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
962 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
963 [-]: SELF      R91 R91 K181 ; R92 := R91; R91 := R91[0xf64b7262]
964 [-]: MOVE      R93 R80      ; R93 := R80
965 [-]: LOADK     R94 K189     ; R94 := "StatBackground"
966 [-]: CONST     R95 10       ; R95 := 10.000000
967 [-]: CONST     R96 50       ; R96 := 50.000000
968 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
969 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
970 [-]: SELF      R91 R91 K185 ; R92 := R91; R91 := R91[0xe261aa96]
971 [-]: MOVE      R93 R80      ; R93 := R80
972 [-]: LOADK     R94 K188     ; R94 := "NameBackground"
973 [-]: CONST     R95 38       ; R95 := 38.000000
974 [-]: LOADK     R96 K190     ; R96 := "center"
975 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
976 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
977 [-]: SELF      R91 R91 K185 ; R92 := R91; R91 := R91[0xe261aa96]
978 [-]: MOVE      R93 R80      ; R93 := R80
979 [-]: LOADK     R94 K189     ; R94 := "StatBackground"
980 [-]: CONST     R95 38       ; R95 := 38.000000
981 [-]: LOADK     R96 K190     ; R96 := "center"
982 [-]: CALL      R91 6 1      ; R91(R92,R93,R94,R95,R96)
983 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
984 [-]: SELF      R91 R91 K191 ; R92 := R91; R91 := R91[0xd5181643]
985 [-]: MOVE      R93 R80      ; R93 := R80
986 [-]: LOADK     R94 K192     ; R94 := ".NameBackground"
987 [-]: CONCAT    R93 R93 R94  ; R93 := R93 .. R94
988 [-]: GETGLOBAL R94 K193     ; R94 := 0x56ce295b
989 [-]: CALL      R91 4 1      ; R91(R92,R93,R94)
990 [-]: GETGLOBAL R91 K17      ; R91 := 0xae91e43b
991 [-]: SELF      R91 R91 K191 ; R92 := R91; R91 := R91[0xd5181643]
992 [-]: MOVE      R93 R80      ; R93 := R80
993 [-]: LOADK     R94 K194     ; R94 := ".StatBackground"
994 [-]: CONCAT    R93 R93 R94  ; R93 := R93 .. R94
995 [-]: GETGLOBAL R94 K193     ; R94 := 0x56ce295b
996 [-]: CALL      R91 4 1      ; R91(R92,R93,R94)
997 [-]: CONST     R91 -11      ; R91 := -11.000000
998 [-]: GETTABLE  R92 R59 R73  ; R92 := R59[R73]
999 [-]: EQ        1 R92 K29    ; if R92 == nil then PC := 1009
1000 [-]: JMP       1009         ; PC := 1009
1001 [-]: TEST      R5 0         ; if not R5 then PC := 1031
1002 [-]: JMP       1031         ; PC := 1031
1003 [-]: GETGLOBAL R93 K27      ; R93 := _T
1004 [-]: GETTABLE  R93 R93 K132 ; R93 := R93["eomScreenMode"]
1005 [-]: GETUPVAL  R94 U13      ; R94 := U13
1006 [-]: GETTABLE  R94 R94 K133 ; R94 := R94["ACTUAL_EOM"]
1007 [-]: EQ        1 R93 R94    ; if R93 == R94 then PC := 1031
1008 [-]: JMP       1031         ; PC := 1031
1009 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1010 [-]: SELF      R93 R93 K185 ; R94 := R93; R93 := R93[0xe261aa96]
1011 [-]: MOVE      R95 R80      ; R95 := R80
1012 [-]: LOADK     R96 K187     ; R96 := "Stat"
1013 [-]: CONST     R97 29       ; R97 := 29.000000
1014 [-]: LOADK     R98 K18      ; R98 := ""
1015 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1016 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1017 [-]: SELF      R93 R93 K181 ; R94 := R93; R93 := R93[0xf64b7262]
1018 [-]: MOVE      R95 R80      ; R95 := R80
1019 [-]: LOADK     R96 K188     ; R96 := "NameBackground"
1020 [-]: CONST     R97 1        ; R97 := 1.000000
1021 [-]: CONST     R98 -14      ; R98 := -14.000000
1022 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1023 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1024 [-]: SELF      R93 R93 K184 ; R94 := R93; R93 := R93[0xc0a3774b]
1025 [-]: MOVE      R95 R80      ; R95 := R80
1026 [-]: LOADK     R96 K189     ; R96 := "StatBackground"
1027 [-]: CONST     R97 11       ; R97 := 11.000000
1028 [-]: LOADKB    R98 0 0      ; R98 := false
1029 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1030 [-]: JMP       1053         ; PC := 1053
1031 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1032 [-]: SELF      R93 R93 K185 ; R94 := R93; R93 := R93[0xe261aa96]
1033 [-]: MOVE      R95 R80      ; R95 := R80
1034 [-]: LOADK     R96 K187     ; R96 := "Stat"
1035 [-]: CONST     R97 29       ; R97 := 29.000000
1036 [-]: MOVE      R98 R92      ; R98 := R92
1037 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1038 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1039 [-]: SELF      R93 R93 K181 ; R94 := R93; R93 := R93[0xf64b7262]
1040 [-]: MOVE      R95 R80      ; R95 := R80
1041 [-]: LOADK     R96 K188     ; R96 := "NameBackground"
1042 [-]: CONST     R97 1        ; R97 := 1.000000
1043 [-]: CONST     R98 -25      ; R98 := -25.000000
1044 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1045 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1046 [-]: SELF      R93 R93 K184 ; R94 := R93; R93 := R93[0xc0a3774b]
1047 [-]: MOVE      R95 R80      ; R95 := R80
1048 [-]: LOADK     R96 K189     ; R96 := "StatBackground"
1049 [-]: CONST     R97 11       ; R97 := 11.000000
1050 [-]: LOADKB    R98 1 0      ; R98 := true
1051 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1052 [-]: CONST     R91 -22      ; R91 := -22.000000
1053 [-]: EQ        0 R73 K18    ; if R73 ~= "" then PC := 1062
1054 [-]: JMP       1062         ; PC := 1062
1055 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1056 [-]: SELF      R93 R93 K184 ; R94 := R93; R93 := R93[0xc0a3774b]
1057 [-]: MOVE      R95 R80      ; R95 := R80
1058 [-]: LOADK     R96 K94      ; R96 := "Icon"
1059 [-]: CONST     R97 11       ; R97 := 11.000000
1060 [-]: LOADKB    R98 0 0      ; R98 := false
1061 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1062 [-]: EQ        1 R74 K29    ; if R74 == nil then PC := 1081
1063 [-]: JMP       1081         ; PC := 1081
1064 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1065 [-]: SELF      R93 R93 K195 ; R94 := R93; R93 := R93[0xef99134f]
1066 [-]: MOVE      R95 R80      ; R95 := R80
1067 [-]: LOADK     R96 K196     ; R96 := ".Icon"
1068 [-]: CONCAT    R95 R95 R96  ; R95 := R95 .. R96
1069 [-]: MOVE      R96 R74      ; R96 := R74
1070 [-]: GETGLOBAL R97 K162     ; R97 := 0x0032441c
1071 [-]: GETTABLE  R97 R97 K197 ; R97 := R97["UIMaterial_RectangleNoDepth"]
1072 [-]: CALL      R93 5 1      ; R93(R94,R95,R96,R97)
1073 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1074 [-]: SELF      R93 R93 K191 ; R94 := R93; R93 := R93[0xd5181643]
1075 [-]: MOVE      R95 R80      ; R95 := R80
1076 [-]: LOADK     R96 K198     ; R96 := ".IconBacker"
1077 [-]: CONCAT    R95 R95 R96  ; R95 := R95 .. R96
1078 [-]: GETGLOBAL R96 K162     ; R96 := 0x0032441c
1079 [-]: GETTABLE  R96 R96 K197 ; R96 := R96["UIMaterial_RectangleNoDepth"]
1080 [-]: CALL      R93 4 1      ; R93(R94,R95,R96)
1081 [-]: GETGLOBAL R93 K70      ; R93 := 0x34291f5c
1082 [-]: GETTABLE  R93 R93 K199 ; R93 := R93[0xa7a2e381]
1083 [-]: CALL      R93 1 2      ; R93 := R93()
1084 [-]: TEST      R93 0        ; if not R93 then PC := 1093
1085 [-]: JMP       1093         ; PC := 1093
1086 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1087 [-]: SELF      R93 R93 K185 ; R94 := R93; R93 := R93[0xe261aa96]
1088 [-]: MOVE      R95 R80      ; R95 := R80
1089 [-]: LOADK     R96 K20      ; R96 := "Name"
1090 [-]: CONST     R97 41       ; R97 := 41.000000
1091 [-]: LOADK     R98 K200     ; R98 := "Arial Unicode MS"
1092 [-]: CALL      R93 6 1      ; R93(R94,R95,R96,R97,R98)
1093 [-]: GETGLOBAL R93 K17      ; R93 := 0xae91e43b
1094 [-]: SELF      R93 R93 K201 ; R94 := R93; R93 := R93[0x91a24e4b]
1095 [-]: MOVE      R95 R80      ; R95 := R80
1096 [-]: LOADK     R96 K202     ; R96 := ".Name"
1097 [-]: CONCAT    R95 R95 R96  ; R95 := R95 .. R96
1098 [-]: CONST     R96 5        ; R96 := 5.000000
1099 [-]: CALL      R93 4 2      ; R93 := R93(R94,R95,R96)
1100 [-]: DIV       R93 R93 K69  ; R93 := R93 / 100.000000
1101 [-]: GETGLOBAL R94 K17      ; R94 := 0xae91e43b
1102 [-]: SELF      R94 R94 K201 ; R95 := R94; R94 := R94[0x91a24e4b]
1103 [-]: MOVE      R96 R80      ; R96 := R80
1104 [-]: LOADK     R97 K203     ; R97 := ".Stat"
1105 [-]: CONCAT    R96 R96 R97  ; R96 := R96 .. R97
1106 [-]: CONST     R97 5        ; R97 := 5.000000
1107 [-]: CALL      R94 4 2      ; R94 := R94(R95,R96,R97)
1108 [-]: DIV       R94 R94 K69  ; R94 := R94 / 100.000000
1109 [-]: GETGLOBAL R95 K17      ; R95 := 0xae91e43b
1110 [-]: SELF      R95 R95 K181 ; R96 := R95; R95 := R95[0xf64b7262]
1111 [-]: MOVE      R97 R80      ; R97 := R80
1112 [-]: LOADK     R98 K20      ; R98 := "Name"
1113 [-]: CONST     R99 1        ; R99 := 1.000000
1114 [-]: SUB       R100 K13 R93 ; R100 := 1.000000 - R93
1115 [-]: MUL       R100 K204 R100; R100 := 11.000000 * R100
1116 [-]: ADD       R100 R91 R100; R100 := R91 + R100
1117 [-]: CALL      R95 6 1      ; R95(R96,R97,R98,R99,R100)
1118 [-]: GETGLOBAL R95 K17      ; R95 := 0xae91e43b
1119 [-]: SELF      R95 R95 K181 ; R96 := R95; R95 := R95[0xf64b7262]
1120 [-]: MOVE      R97 R80      ; R97 := R80
1121 [-]: LOADK     R98 K187     ; R98 := "Stat"
1122 [-]: CONST     R99 1        ; R99 := 1.000000
1123 [-]: SUB       R100 K13 R94 ; R100 := 1.000000 - R94
1124 [-]: MUL       R100 K205 R100; R100 := 22.000000 * R100
1125 [-]: ADD       R100 K206 R100; R100 := -2.000000 + R100
1126 [-]: CALL      R95 6 1      ; R95(R96,R97,R98,R99,R100)
1127 [-]: GETGLOBAL R95 K17      ; R95 := 0xae91e43b
1128 [-]: SELF      R95 R95 K201 ; R96 := R95; R95 := R95[0x91a24e4b]
1129 [-]: MOVE      R97 R80      ; R97 := R80
1130 [-]: LOADK     R98 K202     ; R98 := ".Name"
1131 [-]: CONCAT    R97 R97 R98  ; R97 := R97 .. R98
1132 [-]: CONST     R98 33       ; R98 := 33.000000
1133 [-]: CALL      R95 4 2      ; R95 := R95(R96,R97,R98)
1134 [-]: MUL       R95 R95 R93  ; R95 := R95 * R93
1135 [-]: ADD       R95 R95 K207 ; R95 := R95 + 20.000000
1136 [-]: GETGLOBAL R96 K17      ; R96 := 0xae91e43b
1137 [-]: SELF      R96 R96 K201 ; R97 := R96; R96 := R96[0x91a24e4b]
1138 [-]: MOVE      R98 R80      ; R98 := R80
1139 [-]: LOADK     R99 K203     ; R99 := ".Stat"
1140 [-]: CONCAT    R98 R98 R99  ; R98 := R98 .. R99
1141 [-]: CONST     R99 33       ; R99 := 33.000000
1142 [-]: CALL      R96 4 2      ; R96 := R96(R97,R98,R99)
1143 [-]: MUL       R96 R96 R94  ; R96 := R96 * R94
1144 [-]: ADD       R96 R96 K207 ; R96 := R96 + 20.000000
1145 [-]: GETGLOBAL R97 K17      ; R97 := 0xae91e43b
1146 [-]: SELF      R97 R97 K181 ; R98 := R97; R97 := R97[0xf64b7262]
1147 [-]: MOVE      R99 R80      ; R99 := R80
1148 [-]: LOADK     R100 K188    ; R100 := "NameBackground"
1149 [-]: CONST     R101 12      ; R101 := 12.000000
1150 [-]: MOVE      R102 R95     ; R102 := R95
1151 [-]: CALL      R97 6 1      ; R97(R98,R99,R100,R101,R102)
1152 [-]: GETGLOBAL R97 K17      ; R97 := 0xae91e43b
1153 [-]: SELF      R97 R97 K181 ; R98 := R97; R97 := R97[0xf64b7262]
1154 [-]: MOVE      R99 R80      ; R99 := R80
1155 [-]: LOADK     R100 K189    ; R100 := "StatBackground"
1156 [-]: CONST     R101 12      ; R101 := 12.000000
1157 [-]: MOVE      R102 R96     ; R102 := R96
1158 [-]: CALL      R97 6 1      ; R97(R98,R99,R100,R101,R102)
1159 [-]: EQ        0 R72 K13    ; if R72 ~= 1.000000 then PC := 1167
1160 [-]: JMP       1167         ; PC := 1167
1161 [-]: GETGLOBAL R97 K208     ; R97 := 0x5bced4c4
1162 [-]: GETTABLE  R97 R97 K209 ; R97 := R97[0xb62ecfe0]
1163 [-]: MOVE      R98 R95      ; R98 := R95
1164 [-]: MOVE      R99 R96      ; R99 := R96
1165 [-]: CALL      R97 3 2      ; R97 := R97(R98,R99)
1166 [-]: SETUPVAL  R97 U17      ; U82 := R17
1167 [-]: GETGLOBAL R97 K17      ; R97 := 0xae91e43b
1168 [-]: SELF      R97 R97 K210 ; R98 := R97; R97 := R97[0x67bc869f]
1169 [-]: MOVE      R99 R80      ; R99 := R80
1170 [-]: CONST     R100 0       ; R100 := 0.000000
1171 [-]: GETUPVAL  R101 U18     ; R101 := U18
1172 [-]: MOVE      R102 R72     ; R102 := R72
1173 [-]: CALL      R101 2 0     ; R101,... := R101(R102)
1174 [-]: CALL      R97 0 1      ; R97(R98,...)
1175 [-]: FORLOOP   R69 737      ; R69 += R71; if R69 <= R70 then begin PC := 737; R72 := R69 end
1176 [-]: GETGLOBAL R97 K17      ; R97 := 0xae91e43b
1177 [-]: SELF      R97 R97 K191 ; R98 := R97; R97 := R97[0xd5181643]
1178 [-]: LOADK     R99 K211     ; R99 := "ExpandableArea.PlayerInfo.PlayerBar.Backer"
1179 [-]: GETGLOBAL R100 K162    ; R100 := 0x0032441c
1180 [-]: GETTABLE  R100 R100 K197; R100 := R100["UIMaterial_RectangleNoDepth"]
1181 [-]: CALL      R97 4 1      ; R97(R98,R99,R100)
1182 [-]: GETGLOBAL R97 K134     ; R97 := 0xc8802016
1183 [-]: GETGLOBAL R98 K31      ; R98 := mStatTable
1184 [-]: CALL      R97 2 4      ; R97,R98,R99 := R97(R98)
1185 [-]: JMP       1195         ; PC := 1195
1186 [-]: GETGLOBAL R102 K212    ; R102 := mStatsGrid
1187 [-]: SELF      R102 R102 K213; R103 := R102; R102 := R102[0xbad4316f]
1188 [-]: NEWTABLE  R104 0 2     ; R104 := {}
1189 [-]: GETTABLE  R105 R101 K214; R105 := R101["Label"]
1190 [-]: SETTABLE  R104 K214 R105; R104["Label"] := R105
1191 [-]: GETTABLE  R105 R101 K215; R105 := R101["Value"]
1192 [-]: SETTABLE  R104 K215 R105; R104["Value"] := R105
1193 [-]: LOADKB    R105 1 0     ; R105 := true
1194 [-]: CALL      R102 4 1     ; R102(R103,R104,R105)
1195 [-]: TFORLOOP  R97 2        ; R100,R101 :=  R97(R98,R99); if R100 ~= nil then begin PC = 1186; R99 := R100 end
1196 [-]: JMP       1186         ; PC := 1186
1197 [-]: LOADKB    R102 0 0     ; R102 := false
1198 [-]: TEST      R102 0       ; if not R102 then PC := 1206
1199 [-]: JMP       1206         ; PC := 1206
1200 [-]: GETGLOBAL R102 K27     ; R102 := _T
1201 [-]: GETTABLE  R102 R102 K216; R102 := R102["BackgroundMovie"]
1202 [-]: SELF      R102 R102 K217; R103 := R102; R102 := R102[0xe4162eed]
1203 [-]: LOADK     R104 K218    ; R104 := "ShowBlockingMessage"
1204 [-]: CONST     R105 0       ; R105 := 0.000000
1205 [-]: CALL      R102 4 1     ; R102(R103,R104,R105)
1206 [-]: GETGLOBAL R102 K219    ; R102 := mInitialized
1207 [-]: TEST      R102 0       ; if not R102 then PC := 1211
1208 [-]: JMP       1211         ; PC := 1211
1209 [-]: GETUPVAL  R102 U19     ; R102 := U19
1210 [-]: CALL      R102 1 1     ; R102()
1211 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 2894
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 2898
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 57
  9 [-]: JMP       57           ; PC := 57
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 11 [-]: GETGLOBAL R2 K3        ; R2 := mGameData
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 57
 14 [-]: JMP       57           ; PC := 57
 15 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0x5ca33548]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: LOADNIL   R2 R2        ; R2 := nil
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: GETTABLE  R3 R3 K5     ; R3 := R3[0xcdc34211]
 20 [-]: CALL      R3 1 2       ; R3 := R3()
 21 [-]: TEST      R3 1         ; if R3 then PC := 33
 22 [-]: JMP       33           ; PC := 33
 23 [-]: GETGLOBAL R3 K3        ; R3 := mGameData
 24 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x01f12112]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: GETGLOBAL R3 K3        ; R3 := mGameData
 29 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x79e70384]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: MOVE      R2 R3        ; R2 := R3
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETGLOBAL R3 K3        ; R3 := mGameData
 34 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xa8c9f8a6]
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: MOVE      R2 R3        ; R2 := R3
 37 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 1         ; if R3 then PC := 57
 41 [-]: JMP       57           ; PC := 57
 42 [-]: CONST     R3 1         ; R3 := 1.000000
 43 [-]: LEN       R4 R2        ; R4 := # R2
 44 [-]: CONST     R5 1         ; R5 := 1.000000
 45 [-]: FORPREP   R3 56        ; R3 -= R5; PC := 56
 46 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 47 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["playerName"]
 48 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 51 [-]: SETGLOBAL R7 K10       ; mLocalPlayerMissionStats := R7
 52 [-]: GETGLOBAL R7 K10       ; R7 := mLocalPlayerMissionStats
 53 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["playerMissionInfo"]
 54 [-]: SETGLOBAL R7 K11       ; mPlayerMissionInfo := R7
 55 [-]: JMP       57           ; PC := 57
 56 [-]: FORLOOP   R3 46        ; R3 += R5; if R3 <= R4 then begin PC := 46; R6 := R3 end
 57 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 2922
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["missionType"]
  4 [-]: GETGLOBAL R2 K1        ; R2 := _T
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["eomScreenMode"]
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["ACTUAL_EOM"]
  8 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 11
 11 [-]: LOADKB    R2 1 0       ; R2 := true
 12 [-]: GETUPVAL  R3 U2        ; R3 := U2
 13 [-]: CALL      R3 1 2       ; R3 := R3()
 14 [-]: TEST      R3 1         ; if R3 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: EQ        0 R1 K5      ; if R1 ~= 13.000000 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETUPVAL  R3 U3        ; R3 := U3
 19 [-]: GETTABLE  R3 R3 K6     ; R3 := R3[0xa54874f9]
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: MOVE      R5 R2        ; R5 := R2
 22 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 23 [-]: RETURN    R3 2         ; return R3
 24 [-]: JMP       77           ; PC := 77
 25 [-]: EQ        1 R1 K7      ; if R1 == 2.000000 then PC := 48
 26 [-]: JMP       48           ; PC := 48
 27 [-]: EQ        1 R1 K8      ; if R1 == 17.000000 then PC := 48
 28 [-]: JMP       48           ; PC := 48
 29 [-]: EQ        1 R1 K9      ; if R1 == 33.000000 then PC := 48
 30 [-]: JMP       48           ; PC := 48
 31 [-]: EQ        1 R1 K10     ; if R1 == 34.000000 then PC := 48
 32 [-]: JMP       48           ; PC := 48
 33 [-]: EQ        1 R1 K11     ; if R1 == 35.000000 then PC := 48
 34 [-]: JMP       48           ; PC := 48
 35 [-]: EQ        1 R1 K12     ; if R1 == 27.000000 then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: GETUPVAL  R3 U4        ; R3 := U4
 38 [-]: CALL      R3 1 2       ; R3 := R3()
 39 [-]: TEST      R3 1         ; if R3 then PC := 48
 40 [-]: JMP       48           ; PC := 48
 41 [-]: GETUPVAL  R3 U5        ; R3 := U5
 42 [-]: CALL      R3 1 2       ; R3 := R3()
 43 [-]: TEST      R3 0         ; if not R3 then PC := 55
 44 [-]: JMP       55           ; PC := 55
 45 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["scenarioId"]
 46 [-]: EQ        1 R3 K14     ; if R3 == "" then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETUPVAL  R3 U3        ; R3 := U3
 49 [-]: GETTABLE  R3 R3 K15    ; R3 := R3[0x1aa2b2cd]
 50 [-]: LOADNIL   R4 R4        ; R4 := nil
 51 [-]: MOVE      R5 R2        ; R5 := R2
 52 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 53 [-]: RETURN    R3 2         ; return R3
 54 [-]: JMP       77           ; PC := 77
 55 [-]: EQ        0 R1 K16     ; if R1 ~= 32.000000 then PC := 64
 56 [-]: JMP       64           ; PC := 64
 57 [-]: GETUPVAL  R3 U3        ; R3 := U3
 58 [-]: GETTABLE  R3 R3 K17    ; R3 := R3[0x69b4dca4]
 59 [-]: LOADNIL   R4 R4        ; R4 := nil
 60 [-]: MOVE      R5 R2        ; R5 := R2
 61 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 62 [-]: RETURN    R3 2         ; return R3
 63 [-]: JMP       77           ; PC := 77
 64 [-]: EQ        1 R1 K18     ; if R1 == 28.000000 then PC := 70
 65 [-]: JMP       70           ; PC := 70
 66 [-]: GETUPVAL  R3 U5        ; R3 := U5
 67 [-]: CALL      R3 1 2       ; R3 := R3()
 68 [-]: TEST      R3 0         ; if not R3 then PC := 77
 69 [-]: JMP       77           ; PC := 77
 70 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["sortieId"]
 71 [-]: EQ        0 R3 K14     ; if R3 ~= "" then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: GETGLOBAL R3 K20       ; R3 := mGameData
 74 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3[0x261f2922]
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: RETURN    R3 2         ; return R3
 77 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 2939
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["FullName"]
  2 [-]: TEST      R1 1         ; if R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["Name"]
  5 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["RewardAdded"]
  6 [-]: TEST      R2 1         ; if R2 then PC := 31
  7 [-]: JMP       31           ; PC := 31
  8 [-]: SETTABLE  R0 K2 K3     ; R0["RewardAdded"] := true
  9 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["Count"]
 10 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["Credits"]
 11 [-]: EQ        1 R3 K6      ; if R3 == nil then PC := 24
 12 [-]: JMP       24           ; PC := 24
 13 [-]: LOADK     R1 K5        ; R1 := "Credits"
 14 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["Credits"]
 15 [-]: MUL       R3 R2 R3     ; R3 := R2 * R3
 16 [-]: SETTABLE  R0 K4 R3     ; R0["Count"] := R3
 17 [-]: GETGLOBAL R3 K8        ; R3 := 0x5f0788c4
 18 [-]: GETUPVAL  R4 U0        ; R4 := U0
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 21 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 22 [-]: SETTABLE  R0 K7 R3     ; R0["MergeDesc"] := R3
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["Endo"]
 25 [-]: EQ        1 R3 K6      ; if R3 == nil then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: LOADK     R1 K9        ; R1 := "Endo"
 28 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["Endo"]
 29 [-]: MUL       R3 R2 R3     ; R3 := R2 * R3
 30 [-]: SETTABLE  R0 K4 R3     ; R0["Count"] := R3
 31 [-]: GETGLOBAL R3 K10       ; R3 := mRewards
 32 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 33 [-]: EQ        0 R3 K6      ; if R3 ~= nil then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: GETGLOBAL R4 K10       ; R4 := mRewards
 36 [-]: SETTABLE  R4 R1 R0     ; R4[R1] := R0
 37 [-]: JMP       65           ; PC := 65
 38 [-]: GETGLOBAL R4 K8        ; R4 := 0x5f0788c4
 39 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["MergeDesc"]
 40 [-]: TEST      R5 1         ; if R5 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: LOADK     R5 K11       ; R5 := ""
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: SETTABLE  R3 K7 R4     ; R3["MergeDesc"] := R4
 45 [-]: GETTABLE  R4 R3 K4     ; R4 := R3["Count"]
 46 [-]: EQ        1 R4 K6      ; if R4 == nil then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Count"]
 49 [-]: EQ        1 R4 K6      ; if R4 == nil then PC := 55
 50 [-]: JMP       55           ; PC := 55
 51 [-]: GETTABLE  R4 R3 K4     ; R4 := R3["Count"]
 52 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["Count"]
 53 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 54 [-]: SETTABLE  R3 K4 R4     ; R3["Count"] := R4
 55 [-]: GETGLOBAL R4 K12       ; R4 := 0xcfc01047
 56 [-]: MOVE      R5 R0        ; R5 := R0
 57 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETTABLE  R9 R3 R7     ; R9 := R3[R7]
 60 [-]: EQ        0 R9 K6      ; if R9 ~= nil then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: SETTABLE  R3 R7 R8     ; R3[R7] := R8
 63 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 59; R6 := R7 end
 64 [-]: JMP       59           ; PC := 59
 65 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 2970
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UI_ContinueResponse"]
  3 [-]: EQ        1 R0 K2      ; if R0 == false then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 6
  6 [-]: LOADKB    R0 1 0       ; R0 := true
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 2974
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xf2deaf69]
  3 [-]: GETGLOBAL R2 K2        ; R2 := gLotusGameRulesType
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xf5bdb4dc]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 2978
; #Upvalues:       23
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  132

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: LOADK     R2 K1        ; R2 := "EndOfMatch.lua: GiveMissionRewards. success="
  3 [-]: GETGLOBAL R3 K2        ; R3 := 0x64fb1586
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x76ea806b
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x3f3ae64c]
 10 [-]: CONST     R3 0         ; R3 := 0.000000
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 18 [-]: GETGLOBAL R3 K6        ; R3 := mGameData
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 23 [-]: GETGLOBAL R3 K7        ; R3 := 0xbe190284
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 0         ; if not R2 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["eomScreenMode"]
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["ACTUAL_EOM"]
 32 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 35
 35 [-]: LOADKB    R2 1 0       ; R2 := true
 36 [-]: TEST      R2 0         ; if not R2 then PC := 58
 37 [-]: JMP       58           ; PC := 58
 38 [-]: GETGLOBAL R3 K6        ; R3 := mGameData
 39 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xeefc3319]
 40 [-]: CALL      R3 2 1       ; R3(R4)
 41 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 42 [-]: GETGLOBAL R4 K3        ; R4 := 0x76ea806b
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 58
 45 [-]: JMP       58           ; PC := 58
 46 [-]: GETGLOBAL R3 K6        ; R3 := mGameData
 47 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xb18a9b66]
 48 [-]: LOADKB    R5 0 0       ; R5 := false
 49 [-]: CALL      R3 3 1       ; R3(R4,R5)
 50 [-]: GETGLOBAL R3 K3        ; R3 := 0x76ea806b
 51 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x524772b5]
 52 [-]: CONST     R5 0         ; R5 := 0.000000
 53 [-]: CALL      R3 3 1       ; R3(R4,R5)
 54 [-]: GETGLOBAL R3 K6        ; R3 := mGameData
 55 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xb18a9b66]
 56 [-]: LOADKB    R5 1 0       ; R5 := true
 57 [-]: CALL      R3 3 1       ; R3(R4,R5)
 58 [-]: GETGLOBAL R3 K14       ; R3 := 0x89326c93
 59 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0x7d108ddb]
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: GETUPVAL  R4 U1        ; R4 := U1
 62 [-]: CALL      R4 1 2       ; R4 := R4()
 63 [-]: GETGLOBAL R5 K0        ; R5 := 0x3d106989
 64 [-]: LOADK     R6 K16       ; R6 := "Connected: "
 65 [-]: GETGLOBAL R7 K2        ; R7 := 0x64fb1586
 66 [-]: GETGLOBAL R8 K7        ; R8 := 0xbe190284
 67 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0x7926b5dc]
 68 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 69 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 70 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 71 [-]: CALL      R5 2 1       ; R5(R6)
 72 [-]: GETGLOBAL R5 K14       ; R5 := 0x89326c93
 73 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xc7fcada9]
 74 [-]: GETGLOBAL R7 K19       ; R7 := 0x89e9ee53
 75 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 76 [-]: LOADNIL   R6 R6        ; R6 := nil
 77 [-]: GETGLOBAL R7 K5        ; R7 := 0x7b998233
 78 [-]: MOVE      R8 R5        ; R8 := R5
 79 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 80 [-]: TEST      R7 1         ; if R7 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: GETTABLE  R6 R5 K20    ; R6 := R5[1.000000]
 83 [-]: GETGLOBAL R7 K5        ; R7 := 0x7b998233
 84 [-]: MOVE      R8 R6        ; R8 := R6
 85 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 86 [-]: TEST      R7 0         ; if not R7 then PC := 91
 87 [-]: JMP       91           ; PC := 91
 88 [-]: GETGLOBAL R7 K0        ; R7 := 0x3d106989
 89 [-]: LOADK     R8 K21       ; R8 := "extractionTrigger is nil! Assuming that all players are touching by default."
 90 [-]: CALL      R7 2 1       ; R7(R8)
 91 [-]: GETGLOBAL R7 K14       ; R7 := 0x89326c93
 92 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0xc7fcada9]
 93 [-]: GETGLOBAL R9 K22       ; R9 := 0x32d8c192
 94 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 95 [-]: LOADNIL   R8 R8        ; R8 := nil
 96 [-]: GETGLOBAL R9 K5        ; R9 := 0x7b998233
 97 [-]: MOVE      R10 R7       ; R10 := R7
 98 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 99 [-]: TEST      R9 1         ; if R9 then PC := 102
100 [-]: JMP       102          ; PC := 102
101 [-]: GETTABLE  R8 R7 K20    ; R8 := R7[1.000000]
102 [-]: GETGLOBAL R9 K5        ; R9 := 0x7b998233
103 [-]: GETGLOBAL R10 K23      ; R10 := 0xacaaef01
104 [-]: CALL      R9 2 2       ; R9 := R9(R10)
105 [-]: TEST      R9 1         ; if R9 then PC := 111
106 [-]: JMP       111          ; PC := 111
107 [-]: GETUPVAL  R9 U2        ; R9 := U2
108 [-]: GETTABLE  R9 R9 K24    ; R9 := R9[0x659d451f]
109 [-]: GETGLOBAL R10 K23      ; R10 := 0xacaaef01
110 [-]: CALL      R9 2 1       ; R9(R10)
111 [-]: GETGLOBAL R9 K5        ; R9 := 0x7b998233
112 [-]: MOVE      R10 R8       ; R10 := R8
113 [-]: CALL      R9 2 2       ; R9 := R9(R10)
114 [-]: TEST      R9 1         ; if R9 then PC := 159
115 [-]: JMP       159          ; PC := 159
116 [-]: GETGLOBAL R9 K5        ; R9 := 0x7b998233
117 [-]: MOVE      R10 R6       ; R10 := R6
118 [-]: CALL      R9 2 2       ; R9 := R9(R10)
119 [-]: TEST      R9 1         ; if R9 then PC := 159
120 [-]: JMP       159          ; PC := 159
121 [-]: CONST     R9 0         ; R9 := 0.000000
122 [-]: CONST     R10 0        ; R10 := 0.000000
123 [-]: CONST     R11 1        ; R11 := 1.000000
124 [-]: LEN       R12 R3       ; R12 := # R3
125 [-]: CONST     R13 1        ; R13 := 1.000000
126 [-]: FORPREP   R11 149      ; R11 -= R13; PC := 149
127 [-]: LOADNIL   R15 R15      ; R15 := nil
128 [-]: GETGLOBAL R16 K5       ; R16 := 0x7b998233
129 [-]: GETTABLE  R17 R3 R14   ; R17 := R3[R14]
130 [-]: CALL      R16 2 2      ; R16 := R16(R17)
131 [-]: TEST      R16 1        ; if R16 then PC := 149
132 [-]: JMP       149          ; PC := 149
133 [-]: GETTABLE  R16 R3 R14   ; R16 := R3[R14]
134 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16[0xbb610e5b]
135 [-]: CALL      R16 2 2      ; R16 := R16(R17)
136 [-]: MOVE      R15 R16      ; R15 := R16
137 [-]: SELF      R16 R6 K26   ; R17 := R6; R16 := R6[0x13d5d3fb]
138 [-]: MOVE      R18 R15      ; R18 := R15
139 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
140 [-]: TEST      R16 0        ; if not R16 then PC := 143
141 [-]: JMP       143          ; PC := 143
142 [-]: ADD       R9 R9 K20    ; R9 := R9 + 1.000000
143 [-]: SELF      R16 R8 K26   ; R17 := R8; R16 := R8[0x13d5d3fb]
144 [-]: MOVE      R18 R15      ; R18 := R15
145 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
146 [-]: TEST      R16 0        ; if not R16 then PC := 149
147 [-]: JMP       149          ; PC := 149
148 [-]: ADD       R10 R10 K20  ; R10 := R10 + 1.000000
149 [-]: FORLOOP   R11 127      ; R11 += R13; if R11 <= R12 then begin PC := 127; R14 := R11 end
150 [-]: LT        0 R9 R10     ; if R9 >= R10 then PC := 159
151 [-]: JMP       159          ; PC := 159
152 [-]: GETGLOBAL R16 K0       ; R16 := 0x3d106989
153 [-]: LOADK     R17 K27      ; R17 := "Alt trigger"
154 [-]: CALL      R16 2 1      ; R16(R17)
155 [-]: GETGLOBAL R16 K7       ; R16 := 0xbe190284
156 [-]: SELF      R16 R16 K28  ; R17 := R16; R16 := R16[0x17e9eaa5]
157 [-]: CALL      R16 2 1      ; R16(R17)
158 [-]: MOVE      R6 R8        ; R6 := R8
159 [-]: GETGLOBAL R16 K7       ; R16 := 0xbe190284
160 [-]: SELF      R16 R16 K29  ; R17 := R16; R16 := R16[0x3c729041]
161 [-]: CALL      R16 2 1      ; R16(R17)
162 [-]: CONST     R16 1        ; R16 := 1.250000
163 [-]: CONST     R17 1        ; R17 := 1.000000
164 [-]: GETGLOBAL R18 K5       ; R18 := 0x7b998233
165 [-]: MOVE      R19 R4       ; R19 := R4
166 [-]: CALL      R18 2 2      ; R18 := R18(R19)
167 [-]: TEST      R18 1        ; if R18 then PC := 175
168 [-]: JMP       175          ; PC := 175
169 [-]: GETGLOBAL R18 K30      ; R18 := 0x9bafffe3
170 [-]: CONST     R19 1        ; R19 := 1.000000
171 [-]: CONST     R20 5        ; R20 := 5.000000
172 [-]: GETTABLE  R21 R4 K31   ; R21 := R4["difficulty"]
173 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
174 [-]: MOVE      R17 R18      ; R17 := R18
175 [-]: TEST      R0 0         ; if not R0 then PC := 217
176 [-]: JMP       217          ; PC := 217
177 [-]: TEST      R2 0         ; if not R2 then PC := 217
178 [-]: JMP       217          ; PC := 217
179 [-]: GETUPVAL  R18 U3       ; R18 := U3
180 [-]: CALL      R18 1 2      ; R18 := R18()
181 [-]: TEST      R18 1        ; if R18 then PC := 194
182 [-]: JMP       194          ; PC := 194
183 [-]: GETGLOBAL R18 K6       ; R18 := mGameData
184 [-]: SELF      R18 R18 K32  ; R19 := R18; R18 := R18[0xc7a69995]
185 [-]: CALL      R18 2 2      ; R18 := R18(R19)
186 [-]: TEST      R18 0        ; if not R18 then PC := 194
187 [-]: JMP       194          ; PC := 194
188 [-]: CONST     R18 1        ; R18 := 1.000000
189 [-]: MUL       R16 R16 R18  ; R16 := R16 * R18
190 [-]: GETGLOBAL R19 K6       ; R19 := mGameData
191 [-]: SELF      R19 R19 K33  ; R20 := R19; R19 := R19[0x661e3816]
192 [-]: LOADKB    R21 0 0      ; R21 := false
193 [-]: CALL      R19 3 1      ; R19(R20,R21)
194 [-]: GETUPVAL  R19 U3       ; R19 := U3
195 [-]: CALL      R19 1 2      ; R19 := R19()
196 [-]: TEST      R19 0        ; if not R19 then PC := 213
197 [-]: JMP       213          ; PC := 213
198 [-]: GETUPVAL  R19 U4       ; R19 := U4
199 [-]: CALL      R19 1 2      ; R19 := R19()
200 [-]: TEST      R19 0        ; if not R19 then PC := 213
201 [-]: JMP       213          ; PC := 213
202 [-]: GETGLOBAL R19 K6       ; R19 := mGameData
203 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19[0x3b25af29]
204 [-]: CALL      R19 2 2      ; R19 := R19(R20)
205 [-]: TEST      R19 0        ; if not R19 then PC := 213
206 [-]: JMP       213          ; PC := 213
207 [-]: CONST     R19 1        ; R19 := 1.000000
208 [-]: MUL       R16 R16 R19  ; R16 := R16 * R19
209 [-]: GETGLOBAL R20 K6       ; R20 := mGameData
210 [-]: SELF      R20 R20 K35  ; R21 := R20; R20 := R20[0x78a80f52]
211 [-]: LOADKB    R22 0 0      ; R22 := false
212 [-]: CALL      R20 3 1      ; R20(R21,R22)
213 [-]: GETGLOBAL R20 K7       ; R20 := 0xbe190284
214 [-]: SELF      R20 R20 K36  ; R21 := R20; R20 := R20[0xcbb96198]
215 [-]: CALL      R20 2 2      ; R20 := R20(R21)
216 [-]: MUL       R16 R16 R20  ; R16 := R16 * R20
217 [-]: TEST      R0 0         ; if not R0 then PC := 228
218 [-]: JMP       228          ; PC := 228
219 [-]: TEST      R2 0         ; if not R2 then PC := 228
220 [-]: JMP       228          ; PC := 228
221 [-]: GETUPVAL  R20 U5       ; R20 := U5
222 [-]: CALL      R20 1 2      ; R20 := R20()
223 [-]: TEST      R20 0        ; if not R20 then PC := 228
224 [-]: JMP       228          ; PC := 228
225 [-]: GETGLOBAL R20 K7       ; R20 := 0xbe190284
226 [-]: SELF      R20 R20 K37  ; R21 := R20; R20 := R20[0x092cb9a1]
227 [-]: CALL      R20 2 1      ; R20(R21)
228 [-]: CONST     R20 0        ; R20 := 0.000000
229 [-]: CONST     R21 0        ; R21 := 0.000000
230 [-]: CONST     R22 0        ; R22 := 0.000000
231 [-]: CONST     R23 0        ; R23 := 0.000000
232 [-]: CONST     R24 0        ; R24 := 0.000000
233 [-]: CONST     R25 0        ; R25 := 0.000000
234 [-]: CONST     R26 0        ; R26 := 0.000000
235 [-]: CONST     R27 0        ; R27 := 0.000000
236 [-]: CONST     R28 0        ; R28 := 0.000000
237 [-]: CONST     R29 0        ; R29 := 0.000000
238 [-]: CONST     R30 0        ; R30 := 0.000000
239 [-]: CONST     R31 0        ; R31 := 0.000000
240 [-]: CONST     R32 0        ; R32 := 0.000000
241 [-]: CONST     R33 0        ; R33 := 0.000000
242 [-]: CONST     R34 0        ; R34 := 0.000000
243 [-]: CONST     R35 0        ; R35 := 0.000000
244 [-]: CONST     R36 0        ; R36 := 0.000000
245 [-]: CONST     R37 0        ; R37 := 0.000000
246 [-]: CONST     R38 0        ; R38 := 0.000000
247 [-]: CONST     R39 0        ; R39 := 0.000000
248 [-]: CONST     R40 0        ; R40 := 0.000000
249 [-]: CONST     R41 0        ; R41 := 0.000000
250 [-]: CONST     R42 0        ; R42 := 0.000000
251 [-]: CONST     R43 0        ; R43 := 0.000000
252 [-]: CONST     R44 0        ; R44 := 0.000000
253 [-]: CONST     R45 0        ; R45 := 0.000000
254 [-]: CONST     R46 0        ; R46 := 0.000000
255 [-]: CONST     R47 0        ; R47 := 0.000000
256 [-]: CONST     R48 0        ; R48 := 0.000000
257 [-]: CONST     R49 0        ; R49 := 0.000000
258 [-]: CONST     R50 0        ; R50 := 0.000000
259 [-]: GETGLOBAL R51 K38      ; R51 := 0xc8802016
260 [-]: MOVE      R52 R3       ; R52 := R3
261 [-]: CALL      R51 2 4      ; R51,R52,R53 := R51(R52)
262 [-]: JMP       1754         ; PC := 1754
263 [-]: LOADNIL   R56 R57      ; R56 := R57 := nil
264 [-]: CONST     R58 5        ; R58 := 5.000000
265 [-]: GETGLOBAL R59 K5       ; R59 := 0x7b998233
266 [-]: MOVE      R60 R55      ; R60 := R55
267 [-]: CALL      R59 2 2      ; R59 := R59(R60)
268 [-]: TEST      R59 1        ; if R59 then PC := 290
269 [-]: JMP       290          ; PC := 290
270 [-]: SELF      R59 R55 K40  ; R60 := R55; R59 := R55[0x62c81b76]
271 [-]: CALL      R59 2 2      ; R59 := R59(R60)
272 [-]: GETTABLE  R59 R59 K41  ; R59 := R59["mOperatorType"]
273 [-]: EQ        0 R59 K42    ; if R59 ~= 4.000000 then PC := 276
274 [-]: JMP       276          ; PC := 276
275 [-]: CONST     R58 9        ; R58 := 9.000000
276 [-]: GETUPVAL  R59 U3       ; R59 := U3
277 [-]: CALL      R59 1 2      ; R59 := R59()
278 [-]: TEST      R59 0        ; if not R59 then PC := 284
279 [-]: JMP       284          ; PC := 284
280 [-]: SELF      R59 R55 K25  ; R60 := R55; R59 := R55[0xbb610e5b]
281 [-]: CALL      R59 2 2      ; R59 := R59(R60)
282 [-]: MOVE      R56 R59      ; R56 := R59
283 [-]: JMP       287          ; PC := 287
284 [-]: SELF      R59 R55 K43  ; R60 := R55; R59 := R55[0xa534c3ac]
285 [-]: CALL      R59 2 2      ; R59 := R59(R60)
286 [-]: MOVE      R56 R59      ; R56 := R59
287 [-]: SELF      R59 R55 K44  ; R60 := R55; R59 := R55[0x5578d98b]
288 [-]: CALL      R59 2 2      ; R59 := R59(R60)
289 [-]: MOVE      R57 R59      ; R57 := R59
290 [-]: LOADNIL   R59 R59      ; R59 := nil
291 [-]: GETGLOBAL R60 K5       ; R60 := 0x7b998233
292 [-]: MOVE      R61 R56      ; R61 := R56
293 [-]: CALL      R60 2 2      ; R60 := R60(R61)
294 [-]: TEST      R60 1        ; if R60 then PC := 312
295 [-]: JMP       312          ; PC := 312
296 [-]: SELF      R60 R56 K45  ; R61 := R56; R60 := R56[0xf2deaf69]
297 [-]: GETGLOBAL R62 K46      ; R62 := gLotusNpcAvatarType
298 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
299 [-]: TEST      R60 0        ; if not R60 then PC := 309
300 [-]: JMP       309          ; PC := 309
301 [-]: SELF      R60 R56 K47  ; R61 := R56; R60 := R56[0xd4f67d6e]
302 [-]: CALL      R60 2 2      ; R60 := R60(R61)
303 [-]: GETGLOBAL R61 K5       ; R61 := 0x7b998233
304 [-]: MOVE      R62 R60      ; R62 := R60
305 [-]: CALL      R61 2 2      ; R61 := R61(R62)
306 [-]: TEST      R61 1        ; if R61 then PC := 309
307 [-]: JMP       309          ; PC := 309
308 [-]: MOVE      R56 R60      ; R56 := R60
309 [-]: SELF      R61 R56 K48  ; R62 := R56; R61 := R56[0xb8c8dfbd]
310 [-]: CALL      R61 2 2      ; R61 := R61(R62)
311 [-]: MOVE      R59 R61      ; R59 := R61
312 [-]: GETGLOBAL R61 K5       ; R61 := 0x7b998233
313 [-]: MOVE      R62 R59      ; R62 := R59
314 [-]: CALL      R61 2 2      ; R61 := R61(R62)
315 [-]: TEST      R61 1        ; if R61 then PC := 1739
316 [-]: JMP       1739         ; PC := 1739
317 [-]: LOADKB    R61 1 0      ; R61 := true
318 [-]: GETGLOBAL R62 K5       ; R62 := 0x7b998233
319 [-]: MOVE      R63 R6       ; R63 := R6
320 [-]: CALL      R62 2 2      ; R62 := R62(R63)
321 [-]: TEST      R62 1        ; if R62 then PC := 327
322 [-]: JMP       327          ; PC := 327
323 [-]: SELF      R62 R6 K26   ; R63 := R6; R62 := R6[0x13d5d3fb]
324 [-]: MOVE      R64 R56      ; R64 := R56
325 [-]: CALL      R62 3 2      ; R62 := R62(R63,R64)
326 [-]: MOVE      R61 R62      ; R61 := R62
327 [-]: GETGLOBAL R62 K0       ; R62 := 0x3d106989
328 [-]: SELF      R63 R55 K49  ; R64 := R55; R63 := R55[0x5ca33548]
329 [-]: CALL      R63 2 2      ; R63 := R63(R64)
330 [-]: LOADK     R64 K50      ; R64 := " - IsInTrigger="
331 [-]: GETGLOBAL R65 K2       ; R65 := 0x64fb1586
332 [-]: MOVE      R66 R61      ; R66 := R61
333 [-]: CALL      R65 2 2      ; R65 := R65(R66)
334 [-]: CONCAT    R63 R63 R65  ; R63 := R63 .. R64 .. R65
335 [-]: CALL      R62 2 1      ; R62(R63)
336 [-]: GETGLOBAL R62 K39      ; R62 := 0x6c97a788
337 [-]: GETTABLE  R62 R62 K52  ; R62 := R62[0xc1495463]
338 [-]: CALL      R62 1 2      ; R62 := R62()
339 [-]: SETGLOBAL R62 K51      ; mPlayerMissionInfo := R62
340 [-]: GETUPVAL  R62 U2       ; R62 := U2
341 [-]: GETTABLE  R62 R62 K53  ; R62 := R62[0x06d055f9]
342 [-]: GETUPVAL  R63 U6       ; R63 := U6
343 [-]: GETTABLE  R63 R63 K54  ; R63 := R63["isPvp"]
344 [-]: CONST     R64 3        ; R64 := 3.000000
345 [-]: CONST     R65 0        ; R65 := 0.000000
346 [-]: CALL      R62 4 2      ; R62 := R62(R63,R64,R65)
347 [-]: TESTSET   R63 R0 0     ; if not R0 then PC := 350 else R63 := R0
348 [-]: JMP       350          ; PC := 350
349 [-]: MOVE      R63 R2       ; R63 := R2
350 [-]: SELF      R64 R59 K55  ; R65 := R59; R64 := R59[0xb6731115]
351 [-]: MOVE      R66 R62      ; R66 := R62
352 [-]: CONST     R67 0        ; R67 := 0.000000
353 [-]: MOVE      R68 R63      ; R68 := R63
354 [-]: CALL      R64 5 2      ; R64 := R64(R65,R66,R67,R68)
355 [-]: MOVE      R20 R64      ; R20 := R64
356 [-]: SELF      R64 R59 K56  ; R65 := R59; R64 := R59[0x4fb6eaa9]
357 [-]: MOVE      R66 R62      ; R66 := R62
358 [-]: CONST     R67 0        ; R67 := 0.000000
359 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
360 [-]: MOVE      R38 R64      ; R38 := R64
361 [-]: GETUPVAL  R64 U2       ; R64 := U2
362 [-]: GETTABLE  R64 R64 K57  ; R64 := R64[0x74a11ec6]
363 [-]: MUL       R65 R16 R20  ; R65 := R16 * R20
364 [-]: CALL      R64 2 2      ; R64 := R64(R65)
365 [-]: GETGLOBAL R65 K51      ; R65 := mPlayerMissionInfo
366 [-]: SELF      R65 R65 K58  ; R66 := R65; R65 := R65[0x8d5b45c1]
367 [-]: MOVE      R67 R62      ; R67 := R62
368 [-]: CONST     R68 0        ; R68 := 0.000000
369 [-]: MOVE      R69 R64      ; R69 := R64
370 [-]: CALL      R65 5 1      ; R65(R66,R67,R68,R69)
371 [-]: SELF      R65 R59 K55  ; R66 := R59; R65 := R59[0xb6731115]
372 [-]: MOVE      R67 R62      ; R67 := R62
373 [-]: CONST     R68 1        ; R68 := 1.000000
374 [-]: MOVE      R69 R63      ; R69 := R63
375 [-]: CALL      R65 5 2      ; R65 := R65(R66,R67,R68,R69)
376 [-]: MOVE      R21 R65      ; R21 := R65
377 [-]: SELF      R65 R59 K56  ; R66 := R59; R65 := R59[0x4fb6eaa9]
378 [-]: MOVE      R67 R62      ; R67 := R62
379 [-]: CONST     R68 1        ; R68 := 1.000000
380 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
381 [-]: MOVE      R39 R65      ; R39 := R65
382 [-]: GETUPVAL  R65 U2       ; R65 := U2
383 [-]: GETTABLE  R65 R65 K53  ; R65 := R65[0x06d055f9]
384 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 387
385 [-]: JMP       387          ; PC := 387
386 [-]: LOADKB    R66 0 1      ; R66 := false; PC := 387
387 [-]: LOADKB    R66 1 0      ; R66 := true
388 [-]: CONST     R67 0        ; R67 := 0.000000
389 [-]: GETUPVAL  R68 U2       ; R68 := U2
390 [-]: GETTABLE  R68 R68 K57  ; R68 := R68[0x74a11ec6]
391 [-]: MUL       R69 R16 R21  ; R69 := R16 * R21
392 [-]: CALL      R68 2 0      ; R68,... := R68(R69)
393 [-]: CALL      R65 0 2      ; R65 := R65(R66,...)
394 [-]: GETGLOBAL R66 K51      ; R66 := mPlayerMissionInfo
395 [-]: SELF      R66 R66 K58  ; R67 := R66; R66 := R66[0x8d5b45c1]
396 [-]: MOVE      R68 R62      ; R68 := R62
397 [-]: CONST     R69 1        ; R69 := 1.000000
398 [-]: MOVE      R70 R65      ; R70 := R65
399 [-]: CALL      R66 5 1      ; R66(R67,R68,R69,R70)
400 [-]: SELF      R66 R59 K55  ; R67 := R59; R66 := R59[0xb6731115]
401 [-]: MOVE      R68 R62      ; R68 := R62
402 [-]: CONST     R69 2        ; R69 := 2.000000
403 [-]: MOVE      R70 R63      ; R70 := R63
404 [-]: CALL      R66 5 2      ; R66 := R66(R67,R68,R69,R70)
405 [-]: MOVE      R22 R66      ; R22 := R66
406 [-]: SELF      R66 R59 K56  ; R67 := R59; R66 := R59[0x4fb6eaa9]
407 [-]: MOVE      R68 R62      ; R68 := R62
408 [-]: CONST     R69 2        ; R69 := 2.000000
409 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
410 [-]: MOVE      R40 R66      ; R40 := R66
411 [-]: GETUPVAL  R66 U2       ; R66 := U2
412 [-]: GETTABLE  R66 R66 K53  ; R66 := R66[0x06d055f9]
413 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 416
414 [-]: JMP       416          ; PC := 416
415 [-]: LOADKB    R67 0 1      ; R67 := false; PC := 416
416 [-]: LOADKB    R67 1 0      ; R67 := true
417 [-]: CONST     R68 0        ; R68 := 0.000000
418 [-]: GETUPVAL  R69 U2       ; R69 := U2
419 [-]: GETTABLE  R69 R69 K57  ; R69 := R69[0x74a11ec6]
420 [-]: MUL       R70 R16 R22  ; R70 := R16 * R22
421 [-]: CALL      R69 2 0      ; R69,... := R69(R70)
422 [-]: CALL      R66 0 2      ; R66 := R66(R67,...)
423 [-]: GETGLOBAL R67 K51      ; R67 := mPlayerMissionInfo
424 [-]: SELF      R67 R67 K58  ; R68 := R67; R67 := R67[0x8d5b45c1]
425 [-]: MOVE      R69 R62      ; R69 := R62
426 [-]: CONST     R70 2        ; R70 := 2.000000
427 [-]: MOVE      R71 R66      ; R71 := R66
428 [-]: CALL      R67 5 1      ; R67(R68,R69,R70,R71)
429 [-]: SELF      R67 R59 K55  ; R68 := R59; R67 := R59[0xb6731115]
430 [-]: MOVE      R69 R62      ; R69 := R62
431 [-]: CONST     R70 3        ; R70 := 3.000000
432 [-]: MOVE      R71 R63      ; R71 := R63
433 [-]: CALL      R67 5 2      ; R67 := R67(R68,R69,R70,R71)
434 [-]: MOVE      R23 R67      ; R23 := R67
435 [-]: SELF      R67 R59 K56  ; R68 := R59; R67 := R59[0x4fb6eaa9]
436 [-]: MOVE      R69 R62      ; R69 := R62
437 [-]: CONST     R70 3        ; R70 := 3.000000
438 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
439 [-]: MOVE      R41 R67      ; R41 := R67
440 [-]: GETUPVAL  R67 U2       ; R67 := U2
441 [-]: GETTABLE  R67 R67 K53  ; R67 := R67[0x06d055f9]
442 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 445
443 [-]: JMP       445          ; PC := 445
444 [-]: LOADKB    R68 0 1      ; R68 := false; PC := 445
445 [-]: LOADKB    R68 1 0      ; R68 := true
446 [-]: CONST     R69 0        ; R69 := 0.000000
447 [-]: GETUPVAL  R70 U2       ; R70 := U2
448 [-]: GETTABLE  R70 R70 K57  ; R70 := R70[0x74a11ec6]
449 [-]: MUL       R71 R16 R23  ; R71 := R16 * R23
450 [-]: CALL      R70 2 0      ; R70,... := R70(R71)
451 [-]: CALL      R67 0 2      ; R67 := R67(R68,...)
452 [-]: GETGLOBAL R68 K51      ; R68 := mPlayerMissionInfo
453 [-]: SELF      R68 R68 K58  ; R69 := R68; R68 := R68[0x8d5b45c1]
454 [-]: MOVE      R70 R62      ; R70 := R62
455 [-]: CONST     R71 3        ; R71 := 3.000000
456 [-]: MOVE      R72 R67      ; R72 := R67
457 [-]: CALL      R68 5 1      ; R68(R69,R70,R71,R72)
458 [-]: SELF      R68 R59 K55  ; R69 := R59; R68 := R59[0xb6731115]
459 [-]: MOVE      R70 R62      ; R70 := R62
460 [-]: CONST     R71 4        ; R71 := 4.000000
461 [-]: MOVE      R72 R63      ; R72 := R63
462 [-]: CALL      R68 5 2      ; R68 := R68(R69,R70,R71,R72)
463 [-]: MOVE      R24 R68      ; R24 := R68
464 [-]: SELF      R68 R59 K56  ; R69 := R59; R68 := R59[0x4fb6eaa9]
465 [-]: MOVE      R70 R62      ; R70 := R62
466 [-]: CONST     R71 4        ; R71 := 4.000000
467 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
468 [-]: MOVE      R42 R68      ; R42 := R68
469 [-]: GETUPVAL  R68 U2       ; R68 := U2
470 [-]: GETTABLE  R68 R68 K53  ; R68 := R68[0x06d055f9]
471 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 474
472 [-]: JMP       474          ; PC := 474
473 [-]: LOADKB    R69 0 1      ; R69 := false; PC := 474
474 [-]: LOADKB    R69 1 0      ; R69 := true
475 [-]: CONST     R70 0        ; R70 := 0.000000
476 [-]: GETUPVAL  R71 U2       ; R71 := U2
477 [-]: GETTABLE  R71 R71 K57  ; R71 := R71[0x74a11ec6]
478 [-]: MUL       R72 R16 R24  ; R72 := R16 * R24
479 [-]: CALL      R71 2 0      ; R71,... := R71(R72)
480 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
481 [-]: GETGLOBAL R69 K51      ; R69 := mPlayerMissionInfo
482 [-]: SELF      R69 R69 K58  ; R70 := R69; R69 := R69[0x8d5b45c1]
483 [-]: MOVE      R71 R62      ; R71 := R62
484 [-]: CONST     R72 4        ; R72 := 4.000000
485 [-]: MOVE      R73 R68      ; R73 := R68
486 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
487 [-]: SELF      R69 R59 K55  ; R70 := R59; R69 := R59[0xb6731115]
488 [-]: MOVE      R71 R62      ; R71 := R62
489 [-]: CONST     R72 5        ; R72 := 5.000000
490 [-]: MOVE      R73 R63      ; R73 := R63
491 [-]: CALL      R69 5 2      ; R69 := R69(R70,R71,R72,R73)
492 [-]: MOVE      R25 R69      ; R25 := R69
493 [-]: GETUPVAL  R69 U2       ; R69 := U2
494 [-]: GETTABLE  R69 R69 K57  ; R69 := R69[0x74a11ec6]
495 [-]: MUL       R70 R16 R25  ; R70 := R16 * R25
496 [-]: CALL      R69 2 2      ; R69 := R69(R70)
497 [-]: GETGLOBAL R70 K51      ; R70 := mPlayerMissionInfo
498 [-]: SELF      R70 R70 K58  ; R71 := R70; R70 := R70[0x8d5b45c1]
499 [-]: MOVE      R72 R62      ; R72 := R62
500 [-]: CONST     R73 5        ; R73 := 5.000000
501 [-]: MOVE      R74 R69      ; R74 := R69
502 [-]: CALL      R70 5 1      ; R70(R71,R72,R73,R74)
503 [-]: SELF      R70 R59 K55  ; R71 := R59; R70 := R59[0xb6731115]
504 [-]: MOVE      R72 R62      ; R72 := R62
505 [-]: CONST     R73 6        ; R73 := 6.000000
506 [-]: MOVE      R74 R63      ; R74 := R63
507 [-]: CALL      R70 5 2      ; R70 := R70(R71,R72,R73,R74)
508 [-]: MOVE      R26 R70      ; R26 := R70
509 [-]: GETUPVAL  R70 U2       ; R70 := U2
510 [-]: GETTABLE  R70 R70 K57  ; R70 := R70[0x74a11ec6]
511 [-]: MUL       R71 R16 R26  ; R71 := R16 * R26
512 [-]: CALL      R70 2 2      ; R70 := R70(R71)
513 [-]: GETGLOBAL R71 K51      ; R71 := mPlayerMissionInfo
514 [-]: SELF      R71 R71 K58  ; R72 := R71; R71 := R71[0x8d5b45c1]
515 [-]: MOVE      R73 R62      ; R73 := R62
516 [-]: CONST     R74 6        ; R74 := 6.000000
517 [-]: MOVE      R75 R70      ; R75 := R70
518 [-]: CALL      R71 5 1      ; R71(R72,R73,R74,R75)
519 [-]: SELF      R71 R59 K60  ; R72 := R59; R71 := R59[0xad6e6461]
520 [-]: MOVE      R73 R63      ; R73 := R63
521 [-]: CALL      R71 3 2      ; R71 := R71(R72,R73)
522 [-]: MOVE      R27 R71      ; R27 := R71
523 [-]: SELF      R71 R59 K61  ; R72 := R59; R71 := R59[0x80a96711]
524 [-]: MOVE      R73 R63      ; R73 := R63
525 [-]: CALL      R71 3 2      ; R71 := R71(R72,R73)
526 [-]: MOVE      R28 R71      ; R28 := R71
527 [-]: GETUPVAL  R71 U2       ; R71 := U2
528 [-]: GETTABLE  R71 R71 K53  ; R71 := R71[0x06d055f9]
529 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 532
530 [-]: JMP       532          ; PC := 532
531 [-]: LOADKB    R72 0 1      ; R72 := false; PC := 532
532 [-]: LOADKB    R72 1 0      ; R72 := true
533 [-]: CONST     R73 0        ; R73 := 0.000000
534 [-]: GETUPVAL  R74 U2       ; R74 := U2
535 [-]: GETTABLE  R74 R74 K57  ; R74 := R74[0x74a11ec6]
536 [-]: MUL       R75 R16 R27  ; R75 := R16 * R27
537 [-]: CALL      R74 2 0      ; R74,... := R74(R75)
538 [-]: CALL      R71 0 2      ; R71 := R71(R72,...)
539 [-]: GETUPVAL  R72 U2       ; R72 := U2
540 [-]: GETTABLE  R72 R72 K53  ; R72 := R72[0x06d055f9]
541 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 544
542 [-]: JMP       544          ; PC := 544
543 [-]: LOADKB    R73 0 1      ; R73 := false; PC := 544
544 [-]: LOADKB    R73 1 0      ; R73 := true
545 [-]: CONST     R74 0        ; R74 := 0.000000
546 [-]: GETUPVAL  R75 U2       ; R75 := U2
547 [-]: GETTABLE  R75 R75 K57  ; R75 := R75[0x74a11ec6]
548 [-]: MUL       R76 R16 R28  ; R76 := R16 * R28
549 [-]: CALL      R75 2 0      ; R75,... := R75(R76)
550 [-]: CALL      R72 0 2      ; R72 := R72(R73,...)
551 [-]: GETGLOBAL R73 K51      ; R73 := mPlayerMissionInfo
552 [-]: SELF      R73 R73 K58  ; R74 := R73; R73 := R73[0x8d5b45c1]
553 [-]: CONST     R75 1        ; R75 := 1.000000
554 [-]: CONST     R76 0        ; R76 := 0.000000
555 [-]: MOVE      R77 R71      ; R77 := R71
556 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
557 [-]: GETGLOBAL R73 K51      ; R73 := mPlayerMissionInfo
558 [-]: SELF      R73 R73 K58  ; R74 := R73; R73 := R73[0x8d5b45c1]
559 [-]: CONST     R75 1        ; R75 := 1.000000
560 [-]: CONST     R76 2        ; R76 := 2.000000
561 [-]: MOVE      R77 R72      ; R77 := R72
562 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
563 [-]: SELF      R73 R59 K55  ; R74 := R59; R73 := R59[0xb6731115]
564 [-]: CONST     R75 2        ; R75 := 2.000000
565 [-]: CONST     R76 0        ; R76 := 0.000000
566 [-]: MOVE      R77 R63      ; R77 := R63
567 [-]: CALL      R73 5 2      ; R73 := R73(R74,R75,R76,R77)
568 [-]: MOVE      R29 R73      ; R29 := R73
569 [-]: SELF      R73 R59 K56  ; R74 := R59; R73 := R59[0x4fb6eaa9]
570 [-]: CONST     R75 2        ; R75 := 2.000000
571 [-]: CONST     R76 0        ; R76 := 0.000000
572 [-]: CALL      R73 4 2      ; R73 := R73(R74,R75,R76)
573 [-]: MOVE      R44 R73      ; R44 := R73
574 [-]: GETUPVAL  R73 U2       ; R73 := U2
575 [-]: GETTABLE  R73 R73 K53  ; R73 := R73[0x06d055f9]
576 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 579
577 [-]: JMP       579          ; PC := 579
578 [-]: LOADKB    R74 0 1      ; R74 := false; PC := 579
579 [-]: LOADKB    R74 1 0      ; R74 := true
580 [-]: CONST     R75 0        ; R75 := 0.000000
581 [-]: GETUPVAL  R76 U2       ; R76 := U2
582 [-]: GETTABLE  R76 R76 K57  ; R76 := R76[0x74a11ec6]
583 [-]: MUL       R77 R16 R29  ; R77 := R16 * R29
584 [-]: CALL      R76 2 0      ; R76,... := R76(R77)
585 [-]: CALL      R73 0 2      ; R73 := R73(R74,...)
586 [-]: GETGLOBAL R74 K51      ; R74 := mPlayerMissionInfo
587 [-]: SELF      R74 R74 K58  ; R75 := R74; R74 := R74[0x8d5b45c1]
588 [-]: CONST     R76 2        ; R76 := 2.000000
589 [-]: CONST     R77 0        ; R77 := 0.000000
590 [-]: MOVE      R78 R73      ; R78 := R73
591 [-]: CALL      R74 5 1      ; R74(R75,R76,R77,R78)
592 [-]: SELF      R74 R59 K55  ; R75 := R59; R74 := R59[0xb6731115]
593 [-]: CONST     R76 2        ; R76 := 2.000000
594 [-]: CONST     R77 2        ; R77 := 2.000000
595 [-]: MOVE      R78 R63      ; R78 := R63
596 [-]: CALL      R74 5 2      ; R74 := R74(R75,R76,R77,R78)
597 [-]: MOVE      R30 R74      ; R30 := R74
598 [-]: SELF      R74 R59 K56  ; R75 := R59; R74 := R59[0x4fb6eaa9]
599 [-]: CONST     R76 2        ; R76 := 2.000000
600 [-]: CONST     R77 2        ; R77 := 2.000000
601 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
602 [-]: MOVE      R45 R74      ; R45 := R74
603 [-]: GETUPVAL  R74 U2       ; R74 := U2
604 [-]: GETTABLE  R74 R74 K53  ; R74 := R74[0x06d055f9]
605 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 608
606 [-]: JMP       608          ; PC := 608
607 [-]: LOADKB    R75 0 1      ; R75 := false; PC := 608
608 [-]: LOADKB    R75 1 0      ; R75 := true
609 [-]: CONST     R76 0        ; R76 := 0.000000
610 [-]: GETUPVAL  R77 U2       ; R77 := U2
611 [-]: GETTABLE  R77 R77 K57  ; R77 := R77[0x74a11ec6]
612 [-]: MUL       R78 R16 R30  ; R78 := R16 * R30
613 [-]: CALL      R77 2 0      ; R77,... := R77(R78)
614 [-]: CALL      R74 0 2      ; R74 := R74(R75,...)
615 [-]: GETGLOBAL R75 K51      ; R75 := mPlayerMissionInfo
616 [-]: SELF      R75 R75 K58  ; R76 := R75; R75 := R75[0x8d5b45c1]
617 [-]: CONST     R77 2        ; R77 := 2.000000
618 [-]: CONST     R78 2        ; R78 := 2.000000
619 [-]: MOVE      R79 R74      ; R79 := R74
620 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
621 [-]: SELF      R75 R59 K55  ; R76 := R59; R75 := R59[0xb6731115]
622 [-]: CONST     R77 2        ; R77 := 2.000000
623 [-]: CONST     R78 3        ; R78 := 3.000000
624 [-]: MOVE      R79 R63      ; R79 := R63
625 [-]: CALL      R75 5 2      ; R75 := R75(R76,R77,R78,R79)
626 [-]: MOVE      R31 R75      ; R31 := R75
627 [-]: SELF      R75 R59 K56  ; R76 := R59; R75 := R59[0x4fb6eaa9]
628 [-]: CONST     R77 2        ; R77 := 2.000000
629 [-]: CONST     R78 3        ; R78 := 3.000000
630 [-]: CALL      R75 4 2      ; R75 := R75(R76,R77,R78)
631 [-]: MOVE      R46 R75      ; R46 := R75
632 [-]: GETUPVAL  R75 U2       ; R75 := U2
633 [-]: GETTABLE  R75 R75 K53  ; R75 := R75[0x06d055f9]
634 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 637
635 [-]: JMP       637          ; PC := 637
636 [-]: LOADKB    R76 0 1      ; R76 := false; PC := 637
637 [-]: LOADKB    R76 1 0      ; R76 := true
638 [-]: CONST     R77 0        ; R77 := 0.000000
639 [-]: GETUPVAL  R78 U2       ; R78 := U2
640 [-]: GETTABLE  R78 R78 K57  ; R78 := R78[0x74a11ec6]
641 [-]: MUL       R79 R16 R31  ; R79 := R16 * R31
642 [-]: CALL      R78 2 0      ; R78,... := R78(R79)
643 [-]: CALL      R75 0 2      ; R75 := R75(R76,...)
644 [-]: GETGLOBAL R76 K51      ; R76 := mPlayerMissionInfo
645 [-]: SELF      R76 R76 K58  ; R77 := R76; R76 := R76[0x8d5b45c1]
646 [-]: CONST     R78 2        ; R78 := 2.000000
647 [-]: CONST     R79 3        ; R79 := 3.000000
648 [-]: MOVE      R80 R75      ; R80 := R75
649 [-]: CALL      R76 5 1      ; R76(R77,R78,R79,R80)
650 [-]: SELF      R76 R59 K62  ; R77 := R59; R76 := R59[0x3610f933]
651 [-]: CALL      R76 2 2      ; R76 := R76(R77)
652 [-]: MOVE      R33 R76      ; R33 := R76
653 [-]: SELF      R76 R59 K63  ; R77 := R59; R76 := R59[0xfa4f44fc]
654 [-]: CALL      R76 2 2      ; R76 := R76(R77)
655 [-]: MOVE      R47 R76      ; R47 := R76
656 [-]: GETUPVAL  R76 U2       ; R76 := U2
657 [-]: GETTABLE  R76 R76 K53  ; R76 := R76[0x06d055f9]
658 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 661
659 [-]: JMP       661          ; PC := 661
660 [-]: LOADKB    R77 0 1      ; R77 := false; PC := 661
661 [-]: LOADKB    R77 1 0      ; R77 := true
662 [-]: CONST     R78 0        ; R78 := 0.000000
663 [-]: GETUPVAL  R79 U2       ; R79 := U2
664 [-]: GETTABLE  R79 R79 K57  ; R79 := R79[0x74a11ec6]
665 [-]: MUL       R80 R16 R33  ; R80 := R16 * R33
666 [-]: CALL      R79 2 0      ; R79,... := R79(R80)
667 [-]: CALL      R76 0 2      ; R76 := R76(R77,...)
668 [-]: GETGLOBAL R77 K51      ; R77 := mPlayerMissionInfo
669 [-]: SELF      R77 R77 K58  ; R78 := R77; R77 := R77[0x8d5b45c1]
670 [-]: CONST     R79 6        ; R79 := 6.000000
671 [-]: CONST     R80 0        ; R80 := 0.000000
672 [-]: MOVE      R81 R76      ; R81 := R76
673 [-]: CALL      R77 5 1      ; R77(R78,R79,R80,R81)
674 [-]: SELF      R77 R59 K55  ; R78 := R59; R77 := R59[0xb6731115]
675 [-]: CONST     R79 8        ; R79 := 8.000000
676 [-]: CONST     R80 0        ; R80 := 0.000000
677 [-]: MOVE      R81 R63      ; R81 := R63
678 [-]: CALL      R77 5 2      ; R77 := R77(R78,R79,R80,R81)
679 [-]: MOVE      R34 R77      ; R34 := R77
680 [-]: SELF      R77 R59 K56  ; R78 := R59; R77 := R59[0x4fb6eaa9]
681 [-]: CONST     R79 8        ; R79 := 8.000000
682 [-]: CONST     R80 0        ; R80 := 0.000000
683 [-]: CALL      R77 4 2      ; R77 := R77(R78,R79,R80)
684 [-]: MOVE      R48 R77      ; R48 := R77
685 [-]: GETUPVAL  R77 U2       ; R77 := U2
686 [-]: GETTABLE  R77 R77 K57  ; R77 := R77[0x74a11ec6]
687 [-]: MUL       R78 R16 R34  ; R78 := R16 * R34
688 [-]: CALL      R77 2 2      ; R77 := R77(R78)
689 [-]: GETGLOBAL R78 K51      ; R78 := mPlayerMissionInfo
690 [-]: SELF      R78 R78 K58  ; R79 := R78; R78 := R78[0x8d5b45c1]
691 [-]: CONST     R80 8        ; R80 := 8.000000
692 [-]: CONST     R81 0        ; R81 := 0.000000
693 [-]: MOVE      R82 R77      ; R82 := R77
694 [-]: CALL      R78 5 1      ; R78(R79,R80,R81,R82)
695 [-]: SELF      R78 R59 K55  ; R79 := R59; R78 := R59[0xb6731115]
696 [-]: CONST     R80 8        ; R80 := 8.000000
697 [-]: CONST     R81 4        ; R81 := 4.000000
698 [-]: MOVE      R82 R63      ; R82 := R63
699 [-]: CALL      R78 5 2      ; R78 := R78(R79,R80,R81,R82)
700 [-]: MOVE      R35 R78      ; R35 := R78
701 [-]: SELF      R78 R59 K56  ; R79 := R59; R78 := R59[0x4fb6eaa9]
702 [-]: CONST     R80 8        ; R80 := 8.000000
703 [-]: CONST     R81 4        ; R81 := 4.000000
704 [-]: CALL      R78 4 2      ; R78 := R78(R79,R80,R81)
705 [-]: MOVE      R49 R78      ; R49 := R78
706 [-]: GETUPVAL  R78 U2       ; R78 := U2
707 [-]: GETTABLE  R78 R78 K53  ; R78 := R78[0x06d055f9]
708 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 711
709 [-]: JMP       711          ; PC := 711
710 [-]: LOADKB    R79 0 1      ; R79 := false; PC := 711
711 [-]: LOADKB    R79 1 0      ; R79 := true
712 [-]: CONST     R80 0        ; R80 := 0.000000
713 [-]: GETUPVAL  R81 U2       ; R81 := U2
714 [-]: GETTABLE  R81 R81 K57  ; R81 := R81[0x74a11ec6]
715 [-]: MUL       R82 R16 R35  ; R82 := R16 * R35
716 [-]: CALL      R81 2 0      ; R81,... := R81(R82)
717 [-]: CALL      R78 0 2      ; R78 := R78(R79,...)
718 [-]: GETGLOBAL R79 K51      ; R79 := mPlayerMissionInfo
719 [-]: SELF      R79 R79 K58  ; R80 := R79; R79 := R79[0x8d5b45c1]
720 [-]: CONST     R81 8        ; R81 := 8.000000
721 [-]: CONST     R82 4        ; R82 := 4.000000
722 [-]: MOVE      R83 R78      ; R83 := R78
723 [-]: CALL      R79 5 1      ; R79(R80,R81,R82,R83)
724 [-]: SELF      R79 R59 K55  ; R80 := R59; R79 := R59[0xb6731115]
725 [-]: CONST     R81 8        ; R81 := 8.000000
726 [-]: CONST     R82 5        ; R82 := 5.000000
727 [-]: MOVE      R83 R63      ; R83 := R63
728 [-]: CALL      R79 5 2      ; R79 := R79(R80,R81,R82,R83)
729 [-]: MOVE      R36 R79      ; R36 := R79
730 [-]: GETUPVAL  R79 U2       ; R79 := U2
731 [-]: GETTABLE  R79 R79 K57  ; R79 := R79[0x74a11ec6]
732 [-]: MUL       R80 R16 R36  ; R80 := R16 * R36
733 [-]: CALL      R79 2 2      ; R79 := R79(R80)
734 [-]: GETGLOBAL R80 K51      ; R80 := mPlayerMissionInfo
735 [-]: SELF      R80 R80 K58  ; R81 := R80; R80 := R80[0x8d5b45c1]
736 [-]: CONST     R82 8        ; R82 := 8.000000
737 [-]: CONST     R83 5        ; R83 := 5.000000
738 [-]: MOVE      R84 R79      ; R84 := R79
739 [-]: CALL      R80 5 1      ; R80(R81,R82,R83,R84)
740 [-]: SELF      R80 R59 K55  ; R81 := R59; R80 := R59[0xb6731115]
741 [-]: CONST     R82 7        ; R82 := 7.000000
742 [-]: CONST     R83 2        ; R83 := 2.000000
743 [-]: MOVE      R84 R63      ; R84 := R63
744 [-]: CALL      R80 5 2      ; R80 := R80(R81,R82,R83,R84)
745 [-]: MOVE      R37 R80      ; R37 := R80
746 [-]: SELF      R80 R59 K56  ; R81 := R59; R80 := R59[0x4fb6eaa9]
747 [-]: CONST     R82 7        ; R82 := 7.000000
748 [-]: CONST     R83 2        ; R83 := 2.000000
749 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
750 [-]: MOVE      R50 R80      ; R50 := R80
751 [-]: GETUPVAL  R80 U2       ; R80 := U2
752 [-]: GETTABLE  R80 R80 K57  ; R80 := R80[0x74a11ec6]
753 [-]: MUL       R81 R16 R37  ; R81 := R16 * R37
754 [-]: CALL      R80 2 2      ; R80 := R80(R81)
755 [-]: GETGLOBAL R81 K51      ; R81 := mPlayerMissionInfo
756 [-]: SELF      R81 R81 K58  ; R82 := R81; R81 := R81[0x8d5b45c1]
757 [-]: CONST     R83 7        ; R83 := 7.000000
758 [-]: CONST     R84 2        ; R84 := 2.000000
759 [-]: MOVE      R85 R80      ; R85 := R80
760 [-]: CALL      R81 5 1      ; R81(R82,R83,R84,R85)
761 [-]: GETGLOBAL R81 K5       ; R81 := 0x7b998233
762 [-]: MOVE      R82 R57      ; R82 := R57
763 [-]: CALL      R81 2 2      ; R81 := R81(R82)
764 [-]: TEST      R81 1        ; if R81 then PC := 802
765 [-]: JMP       802          ; PC := 802
766 [-]: SELF      R81 R57 K64  ; R82 := R57; R81 := R57[0xde321e6f]
767 [-]: CALL      R81 2 2      ; R81 := R81(R82)
768 [-]: GETGLOBAL R82 K5       ; R82 := 0x7b998233
769 [-]: MOVE      R83 R81      ; R83 := R81
770 [-]: CALL      R82 2 2      ; R82 := R82(R83)
771 [-]: TEST      R82 1        ; if R82 then PC := 802
772 [-]: JMP       802          ; PC := 802
773 [-]: SELF      R82 R81 K55  ; R83 := R81; R82 := R81[0xb6731115]
774 [-]: MOVE      R84 R58      ; R84 := R58
775 [-]: CONST     R85 2        ; R85 := 2.000000
776 [-]: MOVE      R86 R63      ; R86 := R63
777 [-]: CALL      R82 5 2      ; R82 := R82(R83,R84,R85,R86)
778 [-]: MOVE      R32 R82      ; R32 := R82
779 [-]: SELF      R82 R81 K56  ; R83 := R81; R82 := R81[0x4fb6eaa9]
780 [-]: MOVE      R84 R58      ; R84 := R58
781 [-]: CONST     R85 2        ; R85 := 2.000000
782 [-]: CALL      R82 4 2      ; R82 := R82(R83,R84,R85)
783 [-]: MOVE      R43 R82      ; R43 := R82
784 [-]: GETUPVAL  R82 U2       ; R82 := U2
785 [-]: GETTABLE  R82 R82 K53  ; R82 := R82[0x06d055f9]
786 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 789
787 [-]: JMP       789          ; PC := 789
788 [-]: LOADKB    R83 0 1      ; R83 := false; PC := 789
789 [-]: LOADKB    R83 1 0      ; R83 := true
790 [-]: CONST     R84 0        ; R84 := 0.000000
791 [-]: GETUPVAL  R85 U2       ; R85 := U2
792 [-]: GETTABLE  R85 R85 K57  ; R85 := R85[0x74a11ec6]
793 [-]: MUL       R86 R16 R32  ; R86 := R16 * R32
794 [-]: CALL      R85 2 0      ; R85,... := R85(R86)
795 [-]: CALL      R82 0 2      ; R82 := R82(R83,...)
796 [-]: GETGLOBAL R83 K51      ; R83 := mPlayerMissionInfo
797 [-]: SELF      R83 R83 K58  ; R84 := R83; R83 := R83[0x8d5b45c1]
798 [-]: MOVE      R85 R58      ; R85 := R58
799 [-]: CONST     R86 2        ; R86 := 2.000000
800 [-]: MOVE      R87 R82      ; R87 := R82
801 [-]: CALL      R83 5 1      ; R83(R84,R85,R86,R87)
802 [-]: LOADKB    R83 0 0      ; R83 := false
803 [-]: TEST      R83 0        ; if not R83 then PC := 958
804 [-]: JMP       958          ; PC := 958
805 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
806 [-]: LOADK     R85 K65      ; R85 := "\n\r===== Starting XPs ====="
807 [-]: CALL      R84 2 1      ; R84(R85)
808 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
809 [-]: LOADK     R85 K66      ; R85 := "suitXp: "
810 [-]: MOVE      R86 R20      ; R86 := R20
811 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
812 [-]: CALL      R84 2 1      ; R84(R85)
813 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
814 [-]: LOADK     R85 K67      ; R85 := "rifleXp: "
815 [-]: MOVE      R86 R22      ; R86 := R22
816 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
817 [-]: CALL      R84 2 1      ; R84(R85)
818 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
819 [-]: LOADK     R85 K68      ; R85 := "pistolXp: "
820 [-]: MOVE      R86 R21      ; R86 := R21
821 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
822 [-]: CALL      R84 2 1      ; R84(R85)
823 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
824 [-]: LOADK     R85 K69      ; R85 := "meleeXp: "
825 [-]: MOVE      R86 R23      ; R86 := R23
826 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
827 [-]: CALL      R84 2 1      ; R84(R85)
828 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
829 [-]: LOADK     R85 K70      ; R85 := "heavyXp: "
830 [-]: MOVE      R86 R24      ; R86 := R24
831 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
832 [-]: CALL      R84 2 1      ; R84(R85)
833 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
834 [-]: LOADK     R85 K71      ; R85 := "specialAXp: "
835 [-]: MOVE      R86 R25      ; R86 := R25
836 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
837 [-]: CALL      R84 2 1      ; R84(R85)
838 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
839 [-]: LOADK     R85 K72      ; R85 := "specialBXp: "
840 [-]: MOVE      R86 R26      ; R86 := R26
841 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
842 [-]: CALL      R84 2 1      ; R84(R85)
843 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
844 [-]: LOADK     R85 K73      ; R85 := "sentinelXp: "
845 [-]: MOVE      R86 R27      ; R86 := R27
846 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
847 [-]: CALL      R84 2 1      ; R84(R85)
848 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
849 [-]: LOADK     R85 K74      ; R85 := "sentinelWeaponXp: "
850 [-]: MOVE      R86 R28      ; R86 := R28
851 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
852 [-]: CALL      R84 2 1      ; R84(R85)
853 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
854 [-]: LOADK     R85 K75      ; R85 := "archwingXp: "
855 [-]: MOVE      R86 R29      ; R86 := R29
856 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
857 [-]: CALL      R84 2 1      ; R84(R85)
858 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
859 [-]: LOADK     R85 K76      ; R85 := "archwingWeaponXp: "
860 [-]: MOVE      R86 R30      ; R86 := R30
861 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
862 [-]: CALL      R84 2 1      ; R84(R85)
863 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
864 [-]: LOADK     R85 K77      ; R85 := "archwingMeleeWeaponXp: "
865 [-]: MOVE      R86 R31      ; R86 := R31
866 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
867 [-]: CALL      R84 2 1      ; R84(R85)
868 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
869 [-]: LOADK     R85 K78      ; R85 := "HoverboardXP: "
870 [-]: MOVE      R86 R33      ; R86 := R33
871 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
872 [-]: CALL      R84 2 1      ; R84(R85)
873 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
874 [-]: LOADK     R85 K79      ; R85 := "MechXp: "
875 [-]: MOVE      R86 R34      ; R86 := R34
876 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
877 [-]: CALL      R84 2 1      ; R84(R85)
878 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
879 [-]: LOADK     R85 K80      ; R85 := "MechHeavyXp: "
880 [-]: MOVE      R86 R35      ; R86 := R35
881 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
882 [-]: CALL      R84 2 1      ; R84(R85)
883 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
884 [-]: LOADK     R85 K81      ; R85 := "MechSpecialXp: "
885 [-]: MOVE      R86 R36      ; R86 := R36
886 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
887 [-]: CALL      R84 2 1      ; R84(R85)
888 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
889 [-]: LOADK     R85 K82      ; R85 := "Bonuses - multiplier = "
890 [-]: MOVE      R86 R16      ; R86 := R16
891 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
892 [-]: CALL      R84 2 1      ; R84(R85)
893 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
894 [-]: LOADK     R85 K83      ; R85 := "suit: "
895 [-]: MOVE      R86 R64      ; R86 := R64
896 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
897 [-]: CALL      R84 2 1      ; R84(R85)
898 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
899 [-]: LOADK     R85 K84      ; R85 := "rifle: "
900 [-]: MOVE      R86 R66      ; R86 := R66
901 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
902 [-]: CALL      R84 2 1      ; R84(R85)
903 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
904 [-]: LOADK     R85 K85      ; R85 := "pistol: "
905 [-]: MOVE      R86 R65      ; R86 := R65
906 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
907 [-]: CALL      R84 2 1      ; R84(R85)
908 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
909 [-]: LOADK     R85 K86      ; R85 := "melee: "
910 [-]: MOVE      R86 R67      ; R86 := R67
911 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
912 [-]: CALL      R84 2 1      ; R84(R85)
913 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
914 [-]: LOADK     R85 K87      ; R85 := "specialA: "
915 [-]: MOVE      R86 R69      ; R86 := R69
916 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
917 [-]: CALL      R84 2 1      ; R84(R85)
918 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
919 [-]: LOADK     R85 K88      ; R85 := "specialB: "
920 [-]: MOVE      R86 R70      ; R86 := R70
921 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
922 [-]: CALL      R84 2 1      ; R84(R85)
923 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
924 [-]: LOADK     R85 K89      ; R85 := "sentinel: "
925 [-]: MOVE      R86 R71      ; R86 := R71
926 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
927 [-]: CALL      R84 2 1      ; R84(R85)
928 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
929 [-]: LOADK     R85 K90      ; R85 := "sentinelWeapon: "
930 [-]: MOVE      R86 R72      ; R86 := R72
931 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
932 [-]: CALL      R84 2 1      ; R84(R85)
933 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
934 [-]: LOADK     R85 K91      ; R85 := "archwing: "
935 [-]: MOVE      R86 R73      ; R86 := R73
936 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
937 [-]: CALL      R84 2 1      ; R84(R85)
938 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
939 [-]: LOADK     R85 K92      ; R85 := "archwingWeapon: "
940 [-]: MOVE      R86 R74      ; R86 := R74
941 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
942 [-]: CALL      R84 2 1      ; R84(R85)
943 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
944 [-]: LOADK     R85 K93      ; R85 := "archwingMeleeWeapon: "
945 [-]: MOVE      R86 R75      ; R86 := R75
946 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
947 [-]: CALL      R84 2 1      ; R84(R85)
948 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
949 [-]: LOADK     R85 K94      ; R85 := "mechBonus: "
950 [-]: MOVE      R86 R77      ; R86 := R77
951 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
952 [-]: CALL      R84 2 1      ; R84(R85)
953 [-]: GETGLOBAL R84 K0       ; R84 := 0x3d106989
954 [-]: LOADK     R85 K95      ; R85 := "mechSpecialBonus: "
955 [-]: MOVE      R86 R79      ; R86 := R79
956 [-]: CONCAT    R85 R85 R86  ; R85 := R85 .. R86
957 [-]: CALL      R84 2 1      ; R84(R85)
958 [-]: SELF      R84 R55 K96  ; R85 := R55; R84 := R55[0x420402a9]
959 [-]: CALL      R84 2 2      ; R84 := R84(R85)
960 [-]: TEST      R84 0        ; if not R84 then PC := 1462
961 [-]: JMP       1462         ; PC := 1462
962 [-]: CONST     R84 0        ; R84 := 0.000000
963 [-]: CONST     R85 9        ; R85 := 9.000000
964 [-]: CONST     R86 1        ; R86 := 1.000000
965 [-]: FORPREP   R84 974      ; R84 -= R86; PC := 974
966 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
967 [-]: SELF      R88 R88 K97  ; R89 := R88; R88 := R88[0x582a6eb2]
968 [-]: MOVE      R90 R87      ; R90 := R87
969 [-]: GETGLOBAL R91 K6       ; R91 := mGameData
970 [-]: SELF      R91 R91 K98  ; R92 := R91; R91 := R91[0xad94d866]
971 [-]: MOVE      R93 R87      ; R93 := R87
972 [-]: CALL      R91 3 0      ; R91,... := R91(R92,R93)
973 [-]: CALL      R88 0 1      ; R88(R89,...)
974 [-]: FORLOOP   R84 966      ; R84 += R86; if R84 <= R85 then begin PC := 966; R87 := R84 end
975 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
976 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
977 [-]: MOVE      R90 R62      ; R90 := R62
978 [-]: CONST     R91 0        ; R91 := 0.000000
979 [-]: MOVE      R92 R20      ; R92 := R20
980 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
981 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
982 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
983 [-]: MOVE      R90 R62      ; R90 := R62
984 [-]: CONST     R91 1        ; R91 := 1.000000
985 [-]: MOVE      R92 R21      ; R92 := R21
986 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
987 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
988 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
989 [-]: MOVE      R90 R62      ; R90 := R62
990 [-]: CONST     R91 2        ; R91 := 2.000000
991 [-]: MOVE      R92 R22      ; R92 := R22
992 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
993 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
994 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
995 [-]: MOVE      R90 R62      ; R90 := R62
996 [-]: CONST     R91 3        ; R91 := 3.000000
997 [-]: MOVE      R92 R23      ; R92 := R23
998 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
999 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1000 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1001 [-]: MOVE      R90 R62      ; R90 := R62
1002 [-]: CONST     R91 4        ; R91 := 4.000000
1003 [-]: MOVE      R92 R24      ; R92 := R24
1004 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1005 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1006 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1007 [-]: MOVE      R90 R62      ; R90 := R62
1008 [-]: CONST     R91 5        ; R91 := 5.000000
1009 [-]: MOVE      R92 R25      ; R92 := R25
1010 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1011 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1012 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1013 [-]: MOVE      R90 R62      ; R90 := R62
1014 [-]: CONST     R91 6        ; R91 := 6.000000
1015 [-]: MOVE      R92 R26      ; R92 := R26
1016 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1017 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1018 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1019 [-]: CONST     R90 1        ; R90 := 1.000000
1020 [-]: CONST     R91 0        ; R91 := 0.000000
1021 [-]: MOVE      R92 R27      ; R92 := R27
1022 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1023 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1024 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1025 [-]: CONST     R90 1        ; R90 := 1.000000
1026 [-]: CONST     R91 2        ; R91 := 2.000000
1027 [-]: MOVE      R92 R28      ; R92 := R28
1028 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1029 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1030 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1031 [-]: CONST     R90 2        ; R90 := 2.000000
1032 [-]: CONST     R91 0        ; R91 := 0.000000
1033 [-]: MOVE      R92 R29      ; R92 := R29
1034 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1035 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1036 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1037 [-]: CONST     R90 2        ; R90 := 2.000000
1038 [-]: CONST     R91 2        ; R91 := 2.000000
1039 [-]: MOVE      R92 R30      ; R92 := R30
1040 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1041 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1042 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1043 [-]: CONST     R90 2        ; R90 := 2.000000
1044 [-]: CONST     R91 3        ; R91 := 3.000000
1045 [-]: MOVE      R92 R31      ; R92 := R31
1046 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1047 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1048 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1049 [-]: MOVE      R90 R58      ; R90 := R58
1050 [-]: CONST     R91 2        ; R91 := 2.000000
1051 [-]: MOVE      R92 R32      ; R92 := R32
1052 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1053 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1054 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1055 [-]: CONST     R90 6        ; R90 := 6.000000
1056 [-]: CONST     R91 0        ; R91 := 0.000000
1057 [-]: MOVE      R92 R33      ; R92 := R33
1058 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1059 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1060 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1061 [-]: CONST     R90 8        ; R90 := 8.000000
1062 [-]: CONST     R91 0        ; R91 := 0.000000
1063 [-]: MOVE      R92 R34      ; R92 := R34
1064 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1065 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1066 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1067 [-]: CONST     R90 8        ; R90 := 8.000000
1068 [-]: CONST     R91 4        ; R91 := 4.000000
1069 [-]: MOVE      R92 R35      ; R92 := R35
1070 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1071 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1072 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1073 [-]: CONST     R90 8        ; R90 := 8.000000
1074 [-]: CONST     R91 5        ; R91 := 5.000000
1075 [-]: MOVE      R92 R36      ; R92 := R36
1076 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1077 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1078 [-]: SELF      R88 R88 K99  ; R89 := R88; R88 := R88[0xf813982e]
1079 [-]: CONST     R90 7        ; R90 := 7.000000
1080 [-]: CONST     R91 2        ; R91 := 2.000000
1081 [-]: MOVE      R92 R37      ; R92 := R37
1082 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1083 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1084 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1085 [-]: MOVE      R90 R62      ; R90 := R62
1086 [-]: CONST     R91 0        ; R91 := 0.000000
1087 [-]: MOVE      R92 R38      ; R92 := R38
1088 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1089 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1090 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1091 [-]: MOVE      R90 R62      ; R90 := R62
1092 [-]: CONST     R91 1        ; R91 := 1.000000
1093 [-]: MOVE      R92 R39      ; R92 := R39
1094 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1095 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1096 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1097 [-]: MOVE      R90 R62      ; R90 := R62
1098 [-]: CONST     R91 2        ; R91 := 2.000000
1099 [-]: MOVE      R92 R40      ; R92 := R40
1100 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1101 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1102 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1103 [-]: MOVE      R90 R62      ; R90 := R62
1104 [-]: CONST     R91 3        ; R91 := 3.000000
1105 [-]: MOVE      R92 R41      ; R92 := R41
1106 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1107 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1108 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1109 [-]: MOVE      R90 R62      ; R90 := R62
1110 [-]: CONST     R91 4        ; R91 := 4.000000
1111 [-]: MOVE      R92 R42      ; R92 := R42
1112 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1113 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1114 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1115 [-]: CONST     R90 2        ; R90 := 2.000000
1116 [-]: CONST     R91 0        ; R91 := 0.000000
1117 [-]: MOVE      R92 R44      ; R92 := R44
1118 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1119 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1120 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1121 [-]: CONST     R90 2        ; R90 := 2.000000
1122 [-]: CONST     R91 2        ; R91 := 2.000000
1123 [-]: MOVE      R92 R45      ; R92 := R45
1124 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1125 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1126 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1127 [-]: CONST     R90 2        ; R90 := 2.000000
1128 [-]: CONST     R91 3        ; R91 := 3.000000
1129 [-]: MOVE      R92 R46      ; R92 := R46
1130 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1131 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1132 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1133 [-]: MOVE      R90 R58      ; R90 := R58
1134 [-]: CONST     R91 2        ; R91 := 2.000000
1135 [-]: MOVE      R92 R43      ; R92 := R43
1136 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1137 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1138 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1139 [-]: CONST     R90 6        ; R90 := 6.000000
1140 [-]: CONST     R91 0        ; R91 := 0.000000
1141 [-]: MOVE      R92 R47      ; R92 := R47
1142 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1143 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1144 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1145 [-]: CONST     R90 8        ; R90 := 8.000000
1146 [-]: CONST     R91 0        ; R91 := 0.000000
1147 [-]: MOVE      R92 R48      ; R92 := R48
1148 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1149 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1150 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1151 [-]: CONST     R90 8        ; R90 := 8.000000
1152 [-]: CONST     R91 4        ; R91 := 4.000000
1153 [-]: MOVE      R92 R49      ; R92 := R49
1154 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1155 [-]: GETGLOBAL R88 K51      ; R88 := mPlayerMissionInfo
1156 [-]: SELF      R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
1157 [-]: CONST     R90 7        ; R90 := 7.000000
1158 [-]: CONST     R91 2        ; R91 := 2.000000
1159 [-]: MOVE      R92 R50      ; R92 := R50
1160 [-]: CALL      R88 5 1      ; R88(R89,R90,R91,R92)
1161 [-]: GETGLOBAL R88 K6       ; R88 := mGameData
1162 [-]: SELF      R88 R88 K40  ; R89 := R88; R88 := R88[0x62c81b76]
1163 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1164 [-]: GETTABLE  R89 R88 K101 ; R89 := R88["mFocusSchool"]
1165 [-]: GETGLOBAL R90 K5       ; R90 := 0x7b998233
1166 [-]: MOVE      R91 R89      ; R91 := R89
1167 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1168 [-]: TEST      R90 1        ; if R90 then PC := 1188
1169 [-]: JMP       1188         ; PC := 1188
1170 [-]: EQ        1 R89 K102   ; if R89 == 10.000000 then PC := 1188
1171 [-]: JMP       1188         ; PC := 1188
1172 [-]: CONST     R90 0        ; R90 := 0.000000
1173 [-]: CONST     R91 0        ; R91 := 0.000000
1174 [-]: CONST     R92 6        ; R92 := 6.000000
1175 [-]: CONST     R93 1        ; R93 := 1.000000
1176 [-]: FORPREP   R91 1182     ; R91 -= R93; PC := 1182
1177 [-]: SELF      R95 R59 K103 ; R96 := R59; R95 := R59[0xa53a4f57]
1178 [-]: MOVE      R97 R62      ; R97 := R62
1179 [-]: MOVE      R98 R94      ; R98 := R94
1180 [-]: CALL      R95 4 2      ; R95 := R95(R96,R97,R98)
1181 [-]: ADD       R90 R90 R95  ; R90 := R90 + R95
1182 [-]: FORLOOP   R91 1177     ; R91 += R93; if R91 <= R92 then begin PC := 1177; R94 := R91 end
1183 [-]: GETGLOBAL R95 K51      ; R95 := mPlayerMissionInfo
1184 [-]: SELF      R95 R95 K104 ; R96 := R95; R95 := R95[0x724bc4dd]
1185 [-]: MOVE      R97 R89      ; R97 := R89
1186 [-]: MOVE      R98 R90      ; R98 := R90
1187 [-]: CALL      R95 4 1      ; R95(R96,R97,R98)
1188 [-]: SELF      R95 R88 K105 ; R96 := R88; R95 := R88[0xb61abfd2]
1189 [-]: MOVE      R97 R62      ; R97 := R62
1190 [-]: CONST     R98 0        ; R98 := 0.000000
1191 [-]: CALL      R95 4 2      ; R95 := R95(R96,R97,R98)
1192 [-]: GETGLOBAL R96 K5       ; R96 := 0x7b998233
1193 [-]: MOVE      R97 R95      ; R97 := R95
1194 [-]: CALL      R96 2 2      ; R96 := R96(R97)
1195 [-]: TEST      R96 1        ; if R96 then PC := 1203
1196 [-]: JMP       1203         ; PC := 1203
1197 [-]: GETGLOBAL R96 K51      ; R96 := mPlayerMissionInfo
1198 [-]: SELF      R96 R96 K106 ; R97 := R96; R96 := R96[0x514bfe0e]
1199 [-]: MOVE      R98 R62      ; R98 := R62
1200 [-]: CONST     R99 0        ; R99 := 0.000000
1201 [-]: GETTABLE  R100 R95 K107; R100 := R95["mXP"]
1202 [-]: CALL      R96 5 1      ; R96(R97,R98,R99,R100)
1203 [-]: SELF      R96 R88 K105 ; R97 := R88; R96 := R88[0xb61abfd2]
1204 [-]: MOVE      R98 R62      ; R98 := R62
1205 [-]: CONST     R99 2        ; R99 := 2.000000
1206 [-]: CALL      R96 4 2      ; R96 := R96(R97,R98,R99)
1207 [-]: GETGLOBAL R97 K5       ; R97 := 0x7b998233
1208 [-]: MOVE      R98 R96      ; R98 := R96
1209 [-]: CALL      R97 2 2      ; R97 := R97(R98)
1210 [-]: TEST      R97 1        ; if R97 then PC := 1218
1211 [-]: JMP       1218         ; PC := 1218
1212 [-]: GETGLOBAL R97 K51      ; R97 := mPlayerMissionInfo
1213 [-]: SELF      R97 R97 K106 ; R98 := R97; R97 := R97[0x514bfe0e]
1214 [-]: MOVE      R99 R62      ; R99 := R62
1215 [-]: CONST     R100 2       ; R100 := 2.000000
1216 [-]: GETTABLE  R101 R96 K107; R101 := R96["mXP"]
1217 [-]: CALL      R97 5 1      ; R97(R98,R99,R100,R101)
1218 [-]: SELF      R97 R88 K105 ; R98 := R88; R97 := R88[0xb61abfd2]
1219 [-]: MOVE      R99 R62      ; R99 := R62
1220 [-]: CONST     R100 1       ; R100 := 1.000000
1221 [-]: CALL      R97 4 2      ; R97 := R97(R98,R99,R100)
1222 [-]: GETGLOBAL R98 K5       ; R98 := 0x7b998233
1223 [-]: MOVE      R99 R97      ; R99 := R97
1224 [-]: CALL      R98 2 2      ; R98 := R98(R99)
1225 [-]: TEST      R98 1        ; if R98 then PC := 1233
1226 [-]: JMP       1233         ; PC := 1233
1227 [-]: GETGLOBAL R98 K51      ; R98 := mPlayerMissionInfo
1228 [-]: SELF      R98 R98 K106 ; R99 := R98; R98 := R98[0x514bfe0e]
1229 [-]: MOVE      R100 R62     ; R100 := R62
1230 [-]: CONST     R101 1       ; R101 := 1.000000
1231 [-]: GETTABLE  R102 R97 K107; R102 := R97["mXP"]
1232 [-]: CALL      R98 5 1      ; R98(R99,R100,R101,R102)
1233 [-]: SELF      R98 R88 K105 ; R99 := R88; R98 := R88[0xb61abfd2]
1234 [-]: MOVE      R100 R58     ; R100 := R58
1235 [-]: CONST     R101 2       ; R101 := 2.000000
1236 [-]: CALL      R98 4 2      ; R98 := R98(R99,R100,R101)
1237 [-]: GETGLOBAL R99 K5       ; R99 := 0x7b998233
1238 [-]: MOVE      R100 R98     ; R100 := R98
1239 [-]: CALL      R99 2 2      ; R99 := R99(R100)
1240 [-]: TEST      R99 1        ; if R99 then PC := 1248
1241 [-]: JMP       1248         ; PC := 1248
1242 [-]: GETGLOBAL R99 K51      ; R99 := mPlayerMissionInfo
1243 [-]: SELF      R99 R99 K106 ; R100 := R99; R99 := R99[0x514bfe0e]
1244 [-]: MOVE      R101 R58     ; R101 := R58
1245 [-]: CONST     R102 2       ; R102 := 2.000000
1246 [-]: GETTABLE  R103 R98 K107; R103 := R98["mXP"]
1247 [-]: CALL      R99 5 1      ; R99(R100,R101,R102,R103)
1248 [-]: SELF      R99 R88 K105 ; R100 := R88; R99 := R88[0xb61abfd2]
1249 [-]: MOVE      R101 R62     ; R101 := R62
1250 [-]: CONST     R102 3       ; R102 := 3.000000
1251 [-]: CALL      R99 4 2      ; R99 := R99(R100,R101,R102)
1252 [-]: GETGLOBAL R100 K5      ; R100 := 0x7b998233
1253 [-]: MOVE      R101 R99     ; R101 := R99
1254 [-]: CALL      R100 2 2     ; R100 := R100(R101)
1255 [-]: TEST      R100 1       ; if R100 then PC := 1263
1256 [-]: JMP       1263         ; PC := 1263
1257 [-]: GETGLOBAL R100 K51     ; R100 := mPlayerMissionInfo
1258 [-]: SELF      R100 R100 K106; R101 := R100; R100 := R100[0x514bfe0e]
1259 [-]: MOVE      R102 R62     ; R102 := R62
1260 [-]: CONST     R103 3       ; R103 := 3.000000
1261 [-]: GETTABLE  R104 R99 K107; R104 := R99["mXP"]
1262 [-]: CALL      R100 5 1     ; R100(R101,R102,R103,R104)
1263 [-]: SELF      R100 R88 K105; R101 := R88; R100 := R88[0xb61abfd2]
1264 [-]: MOVE      R102 R62     ; R102 := R62
1265 [-]: CONST     R103 4       ; R103 := 4.000000
1266 [-]: CALL      R100 4 2     ; R100 := R100(R101,R102,R103)
1267 [-]: GETGLOBAL R101 K5      ; R101 := 0x7b998233
1268 [-]: MOVE      R102 R100    ; R102 := R100
1269 [-]: CALL      R101 2 2     ; R101 := R101(R102)
1270 [-]: TEST      R101 1       ; if R101 then PC := 1278
1271 [-]: JMP       1278         ; PC := 1278
1272 [-]: GETGLOBAL R101 K51     ; R101 := mPlayerMissionInfo
1273 [-]: SELF      R101 R101 K106; R102 := R101; R101 := R101[0x514bfe0e]
1274 [-]: MOVE      R103 R62     ; R103 := R62
1275 [-]: CONST     R104 4       ; R104 := 4.000000
1276 [-]: GETTABLE  R105 R100 K107; R105 := R100["mXP"]
1277 [-]: CALL      R101 5 1     ; R101(R102,R103,R104,R105)
1278 [-]: SELF      R101 R88 K105; R102 := R88; R101 := R88[0xb61abfd2]
1279 [-]: MOVE      R103 R62     ; R103 := R62
1280 [-]: CONST     R104 5       ; R104 := 5.000000
1281 [-]: CALL      R101 4 2     ; R101 := R101(R102,R103,R104)
1282 [-]: GETGLOBAL R102 K5      ; R102 := 0x7b998233
1283 [-]: MOVE      R103 R101    ; R103 := R101
1284 [-]: CALL      R102 2 2     ; R102 := R102(R103)
1285 [-]: TEST      R102 1       ; if R102 then PC := 1293
1286 [-]: JMP       1293         ; PC := 1293
1287 [-]: GETGLOBAL R102 K51     ; R102 := mPlayerMissionInfo
1288 [-]: SELF      R102 R102 K106; R103 := R102; R102 := R102[0x514bfe0e]
1289 [-]: MOVE      R104 R62     ; R104 := R62
1290 [-]: CONST     R105 5       ; R105 := 5.000000
1291 [-]: GETTABLE  R106 R101 K107; R106 := R101["mXP"]
1292 [-]: CALL      R102 5 1     ; R102(R103,R104,R105,R106)
1293 [-]: SELF      R102 R88 K105; R103 := R88; R102 := R88[0xb61abfd2]
1294 [-]: MOVE      R104 R62     ; R104 := R62
1295 [-]: CONST     R105 6       ; R105 := 6.000000
1296 [-]: CALL      R102 4 2     ; R102 := R102(R103,R104,R105)
1297 [-]: GETGLOBAL R103 K5      ; R103 := 0x7b998233
1298 [-]: MOVE      R104 R102    ; R104 := R102
1299 [-]: CALL      R103 2 2     ; R103 := R103(R104)
1300 [-]: TEST      R103 1       ; if R103 then PC := 1308
1301 [-]: JMP       1308         ; PC := 1308
1302 [-]: GETGLOBAL R103 K51     ; R103 := mPlayerMissionInfo
1303 [-]: SELF      R103 R103 K106; R104 := R103; R103 := R103[0x514bfe0e]
1304 [-]: MOVE      R105 R62     ; R105 := R62
1305 [-]: CONST     R106 6       ; R106 := 6.000000
1306 [-]: GETTABLE  R107 R102 K107; R107 := R102["mXP"]
1307 [-]: CALL      R103 5 1     ; R103(R104,R105,R106,R107)
1308 [-]: SELF      R103 R88 K105; R104 := R88; R103 := R88[0xb61abfd2]
1309 [-]: CONST     R105 1       ; R105 := 1.000000
1310 [-]: CONST     R106 0       ; R106 := 0.000000
1311 [-]: CALL      R103 4 2     ; R103 := R103(R104,R105,R106)
1312 [-]: GETGLOBAL R104 K5      ; R104 := 0x7b998233
1313 [-]: MOVE      R105 R103    ; R105 := R103
1314 [-]: CALL      R104 2 2     ; R104 := R104(R105)
1315 [-]: TEST      R104 1       ; if R104 then PC := 1323
1316 [-]: JMP       1323         ; PC := 1323
1317 [-]: GETGLOBAL R104 K51     ; R104 := mPlayerMissionInfo
1318 [-]: SELF      R104 R104 K106; R105 := R104; R104 := R104[0x514bfe0e]
1319 [-]: CONST     R106 1       ; R106 := 1.000000
1320 [-]: CONST     R107 0       ; R107 := 0.000000
1321 [-]: GETTABLE  R108 R103 K107; R108 := R103["mXP"]
1322 [-]: CALL      R104 5 1     ; R104(R105,R106,R107,R108)
1323 [-]: SELF      R104 R88 K105; R105 := R88; R104 := R88[0xb61abfd2]
1324 [-]: CONST     R106 1       ; R106 := 1.000000
1325 [-]: CONST     R107 2       ; R107 := 2.000000
1326 [-]: CALL      R104 4 2     ; R104 := R104(R105,R106,R107)
1327 [-]: GETGLOBAL R105 K5      ; R105 := 0x7b998233
1328 [-]: MOVE      R106 R104    ; R106 := R104
1329 [-]: CALL      R105 2 2     ; R105 := R105(R106)
1330 [-]: TEST      R105 1       ; if R105 then PC := 1338
1331 [-]: JMP       1338         ; PC := 1338
1332 [-]: GETGLOBAL R105 K51     ; R105 := mPlayerMissionInfo
1333 [-]: SELF      R105 R105 K106; R106 := R105; R105 := R105[0x514bfe0e]
1334 [-]: CONST     R107 1       ; R107 := 1.000000
1335 [-]: CONST     R108 2       ; R108 := 2.000000
1336 [-]: GETTABLE  R109 R104 K107; R109 := R104["mXP"]
1337 [-]: CALL      R105 5 1     ; R105(R106,R107,R108,R109)
1338 [-]: SELF      R105 R88 K105; R106 := R88; R105 := R88[0xb61abfd2]
1339 [-]: CONST     R107 6       ; R107 := 6.000000
1340 [-]: CONST     R108 0       ; R108 := 0.000000
1341 [-]: CALL      R105 4 2     ; R105 := R105(R106,R107,R108)
1342 [-]: GETGLOBAL R106 K5      ; R106 := 0x7b998233
1343 [-]: MOVE      R107 R105    ; R107 := R105
1344 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1345 [-]: TEST      R106 1       ; if R106 then PC := 1353
1346 [-]: JMP       1353         ; PC := 1353
1347 [-]: GETGLOBAL R106 K51     ; R106 := mPlayerMissionInfo
1348 [-]: SELF      R106 R106 K106; R107 := R106; R106 := R106[0x514bfe0e]
1349 [-]: CONST     R108 6       ; R108 := 6.000000
1350 [-]: CONST     R109 0       ; R109 := 0.000000
1351 [-]: GETTABLE  R110 R105 K107; R110 := R105["mXP"]
1352 [-]: CALL      R106 5 1     ; R106(R107,R108,R109,R110)
1353 [-]: SELF      R106 R88 K105; R107 := R88; R106 := R88[0xb61abfd2]
1354 [-]: CONST     R108 8       ; R108 := 8.000000
1355 [-]: CONST     R109 0       ; R109 := 0.000000
1356 [-]: CALL      R106 4 2     ; R106 := R106(R107,R108,R109)
1357 [-]: GETGLOBAL R107 K5      ; R107 := 0x7b998233
1358 [-]: MOVE      R108 R106    ; R108 := R106
1359 [-]: CALL      R107 2 2     ; R107 := R107(R108)
1360 [-]: TEST      R107 1       ; if R107 then PC := 1368
1361 [-]: JMP       1368         ; PC := 1368
1362 [-]: GETGLOBAL R107 K51     ; R107 := mPlayerMissionInfo
1363 [-]: SELF      R107 R107 K106; R108 := R107; R107 := R107[0x514bfe0e]
1364 [-]: CONST     R109 8       ; R109 := 8.000000
1365 [-]: CONST     R110 0       ; R110 := 0.000000
1366 [-]: GETTABLE  R111 R106 K107; R111 := R106["mXP"]
1367 [-]: CALL      R107 5 1     ; R107(R108,R109,R110,R111)
1368 [-]: SELF      R107 R88 K105; R108 := R88; R107 := R88[0xb61abfd2]
1369 [-]: CONST     R109 8       ; R109 := 8.000000
1370 [-]: CONST     R110 4       ; R110 := 4.000000
1371 [-]: CALL      R107 4 2     ; R107 := R107(R108,R109,R110)
1372 [-]: GETGLOBAL R108 K5      ; R108 := 0x7b998233
1373 [-]: MOVE      R109 R107    ; R109 := R107
1374 [-]: CALL      R108 2 2     ; R108 := R108(R109)
1375 [-]: TEST      R108 1       ; if R108 then PC := 1383
1376 [-]: JMP       1383         ; PC := 1383
1377 [-]: GETGLOBAL R108 K51     ; R108 := mPlayerMissionInfo
1378 [-]: SELF      R108 R108 K106; R109 := R108; R108 := R108[0x514bfe0e]
1379 [-]: CONST     R110 8       ; R110 := 8.000000
1380 [-]: CONST     R111 4       ; R111 := 4.000000
1381 [-]: GETTABLE  R112 R107 K107; R112 := R107["mXP"]
1382 [-]: CALL      R108 5 1     ; R108(R109,R110,R111,R112)
1383 [-]: SELF      R108 R88 K105; R109 := R88; R108 := R88[0xb61abfd2]
1384 [-]: CONST     R110 8       ; R110 := 8.000000
1385 [-]: CONST     R111 5       ; R111 := 5.000000
1386 [-]: CALL      R108 4 2     ; R108 := R108(R109,R110,R111)
1387 [-]: GETGLOBAL R109 K5      ; R109 := 0x7b998233
1388 [-]: MOVE      R110 R108    ; R110 := R108
1389 [-]: CALL      R109 2 2     ; R109 := R109(R110)
1390 [-]: TEST      R109 1       ; if R109 then PC := 1398
1391 [-]: JMP       1398         ; PC := 1398
1392 [-]: GETGLOBAL R109 K51     ; R109 := mPlayerMissionInfo
1393 [-]: SELF      R109 R109 K106; R110 := R109; R109 := R109[0x514bfe0e]
1394 [-]: CONST     R111 8       ; R111 := 8.000000
1395 [-]: CONST     R112 5       ; R112 := 5.000000
1396 [-]: GETTABLE  R113 R108 K107; R113 := R108["mXP"]
1397 [-]: CALL      R109 5 1     ; R109(R110,R111,R112,R113)
1398 [-]: GETUPVAL  R109 U6      ; R109 := U6
1399 [-]: GETTABLE  R109 R109 K54; R109 := R109["isPvp"]
1400 [-]: TEST      R109 1       ; if R109 then PC := 1447
1401 [-]: JMP       1447         ; PC := 1447
1402 [-]: SELF      R109 R88 K105; R110 := R88; R109 := R88[0xb61abfd2]
1403 [-]: CONST     R111 2       ; R111 := 2.000000
1404 [-]: CONST     R112 0       ; R112 := 0.000000
1405 [-]: CALL      R109 4 2     ; R109 := R109(R110,R111,R112)
1406 [-]: GETGLOBAL R110 K5      ; R110 := 0x7b998233
1407 [-]: MOVE      R111 R109    ; R111 := R109
1408 [-]: CALL      R110 2 2     ; R110 := R110(R111)
1409 [-]: TEST      R110 1       ; if R110 then PC := 1417
1410 [-]: JMP       1417         ; PC := 1417
1411 [-]: GETGLOBAL R110 K51     ; R110 := mPlayerMissionInfo
1412 [-]: SELF      R110 R110 K106; R111 := R110; R110 := R110[0x514bfe0e]
1413 [-]: CONST     R112 2       ; R112 := 2.000000
1414 [-]: CONST     R113 0       ; R113 := 0.000000
1415 [-]: GETTABLE  R114 R109 K107; R114 := R109["mXP"]
1416 [-]: CALL      R110 5 1     ; R110(R111,R112,R113,R114)
1417 [-]: SELF      R110 R88 K105; R111 := R88; R110 := R88[0xb61abfd2]
1418 [-]: CONST     R112 2       ; R112 := 2.000000
1419 [-]: CONST     R113 2       ; R113 := 2.000000
1420 [-]: CALL      R110 4 2     ; R110 := R110(R111,R112,R113)
1421 [-]: GETGLOBAL R111 K5      ; R111 := 0x7b998233
1422 [-]: MOVE      R112 R110    ; R112 := R110
1423 [-]: CALL      R111 2 2     ; R111 := R111(R112)
1424 [-]: TEST      R111 1       ; if R111 then PC := 1432
1425 [-]: JMP       1432         ; PC := 1432
1426 [-]: GETGLOBAL R111 K51     ; R111 := mPlayerMissionInfo
1427 [-]: SELF      R111 R111 K106; R112 := R111; R111 := R111[0x514bfe0e]
1428 [-]: CONST     R113 2       ; R113 := 2.000000
1429 [-]: CONST     R114 2       ; R114 := 2.000000
1430 [-]: GETTABLE  R115 R110 K107; R115 := R110["mXP"]
1431 [-]: CALL      R111 5 1     ; R111(R112,R113,R114,R115)
1432 [-]: SELF      R111 R88 K105; R112 := R88; R111 := R88[0xb61abfd2]
1433 [-]: CONST     R113 2       ; R113 := 2.000000
1434 [-]: CONST     R114 3       ; R114 := 3.000000
1435 [-]: CALL      R111 4 2     ; R111 := R111(R112,R113,R114)
1436 [-]: GETGLOBAL R112 K5      ; R112 := 0x7b998233
1437 [-]: MOVE      R113 R111    ; R113 := R111
1438 [-]: CALL      R112 2 2     ; R112 := R112(R113)
1439 [-]: TEST      R112 1       ; if R112 then PC := 1447
1440 [-]: JMP       1447         ; PC := 1447
1441 [-]: GETGLOBAL R112 K51     ; R112 := mPlayerMissionInfo
1442 [-]: SELF      R112 R112 K106; R113 := R112; R112 := R112[0x514bfe0e]
1443 [-]: CONST     R114 2       ; R114 := 2.000000
1444 [-]: CONST     R115 3       ; R115 := 3.000000
1445 [-]: GETTABLE  R116 R111 K107; R116 := R111["mXP"]
1446 [-]: CALL      R112 5 1     ; R112(R113,R114,R115,R116)
1447 [-]: SELF      R112 R88 K105; R113 := R88; R112 := R88[0xb61abfd2]
1448 [-]: CONST     R114 7       ; R114 := 7.000000
1449 [-]: CONST     R115 2       ; R115 := 2.000000
1450 [-]: CALL      R112 4 2     ; R112 := R112(R113,R114,R115)
1451 [-]: GETGLOBAL R113 K5      ; R113 := 0x7b998233
1452 [-]: MOVE      R114 R112    ; R114 := R112
1453 [-]: CALL      R113 2 2     ; R113 := R113(R114)
1454 [-]: TEST      R113 1       ; if R113 then PC := 1462
1455 [-]: JMP       1462         ; PC := 1462
1456 [-]: GETGLOBAL R113 K51     ; R113 := mPlayerMissionInfo
1457 [-]: SELF      R113 R113 K106; R114 := R113; R113 := R113[0x514bfe0e]
1458 [-]: CONST     R115 7       ; R115 := 7.000000
1459 [-]: CONST     R116 2       ; R116 := 2.000000
1460 [-]: GETTABLE  R117 R112 K107; R117 := R112["mXP"]
1461 [-]: CALL      R113 5 1     ; R113(R114,R115,R116,R117)
1462 [-]: GETGLOBAL R113 K51     ; R113 := mPlayerMissionInfo
1463 [-]: SETTABLE  R113 K108 K109; R113["mScore"] := 0.000000
1464 [-]: LOADKB    R113 1 0     ; R113 := true
1465 [-]: GETUPVAL  R114 U5      ; R114 := U5
1466 [-]: CALL      R114 1 2     ; R114 := R114()
1467 [-]: TEST      R114 0       ; if not R114 then PC := 1488
1468 [-]: JMP       1488         ; PC := 1488
1469 [-]: GETUPVAL  R114 U6      ; R114 := U6
1470 [-]: GETTABLE  R114 R114 K54; R114 := R114["isPvp"]
1471 [-]: TEST      R114 1       ; if R114 then PC := 1488
1472 [-]: JMP       1488         ; PC := 1488
1473 [-]: LOADKB    R113 0 0     ; R113 := false
1474 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1475 [-]: GETUPVAL  R115 U2      ; R115 := U2
1476 [-]: GETTABLE  R115 R115 K53; R115 := R115[0x06d055f9]
1477 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 1480
1478 [-]: JMP       1480         ; PC := 1480
1479 [-]: LOADKB    R116 0 1     ; R116 := false; PC := 1480
1480 [-]: LOADKB    R116 1 0     ; R116 := true
1481 [-]: CONST     R117 0       ; R117 := 0.000000
1482 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1483 [-]: SELF      R118 R118 K110; R119 := R118; R118 := R118[0xd0df34ee]
1484 [-]: CALL      R118 2 0     ; R118,... := R118(R119)
1485 [-]: CALL      R115 0 2     ; R115 := R115(R116,...)
1486 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1487 [-]: JMP       1638         ; PC := 1638
1488 [-]: GETUPVAL  R114 U7      ; R114 := U7
1489 [-]: CALL      R114 1 2     ; R114 := R114()
1490 [-]: TEST      R114 0       ; if not R114 then PC := 1509
1491 [-]: JMP       1509         ; PC := 1509
1492 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1493 [-]: GETUPVAL  R115 U2      ; R115 := U2
1494 [-]: GETTABLE  R115 R115 K53; R115 := R115[0x06d055f9]
1495 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 1498
1496 [-]: JMP       1498         ; PC := 1498
1497 [-]: LOADKB    R116 0 1     ; R116 := false; PC := 1498
1498 [-]: LOADKB    R116 1 0     ; R116 := true
1499 [-]: CONST     R117 0       ; R117 := 0.000000
1500 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1501 [-]: SELF      R118 R118 K111; R119 := R118; R118 := R118[0x0eb34c69]
1502 [-]: GETUPVAL  R120 U8      ; R120 := U8
1503 [-]: GETTABLE  R120 R120 K112; R120 := R120["HIVE_SCORE"]
1504 [-]: CONST     R121 0       ; R121 := 0.000000
1505 [-]: CALL      R118 4 0     ; R118,... := R118(R119,R120,R121)
1506 [-]: CALL      R115 0 2     ; R115 := R115(R116,...)
1507 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1508 [-]: JMP       1638         ; PC := 1638
1509 [-]: GETUPVAL  R114 U9      ; R114 := U9
1510 [-]: CALL      R114 1 2     ; R114 := R114()
1511 [-]: TEST      R114 0       ; if not R114 then PC := 1530
1512 [-]: JMP       1530         ; PC := 1530
1513 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1514 [-]: GETUPVAL  R115 U2      ; R115 := U2
1515 [-]: GETTABLE  R115 R115 K53; R115 := R115[0x06d055f9]
1516 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 1519
1517 [-]: JMP       1519         ; PC := 1519
1518 [-]: LOADKB    R116 0 1     ; R116 := false; PC := 1519
1519 [-]: LOADKB    R116 1 0     ; R116 := true
1520 [-]: CONST     R117 0       ; R117 := 0.000000
1521 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1522 [-]: SELF      R118 R118 K111; R119 := R118; R118 := R118[0x0eb34c69]
1523 [-]: GETUPVAL  R120 U8      ; R120 := U8
1524 [-]: GETTABLE  R120 R120 K113; R120 := R120["RESCUE_SCORE"]
1525 [-]: CONST     R121 0       ; R121 := 0.000000
1526 [-]: CALL      R118 4 0     ; R118,... := R118(R119,R120,R121)
1527 [-]: CALL      R115 0 2     ; R115 := R115(R116,...)
1528 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1529 [-]: JMP       1638         ; PC := 1638
1530 [-]: GETUPVAL  R114 U10     ; R114 := U10
1531 [-]: CALL      R114 1 2     ; R114 := R114()
1532 [-]: TEST      R114 0       ; if not R114 then PC := 1571
1533 [-]: JMP       1571         ; PC := 1571
1534 [-]: LOADKB    R113 0 0     ; R113 := false
1535 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1536 [-]: GETUPVAL  R115 U2      ; R115 := U2
1537 [-]: GETTABLE  R115 R115 K53; R115 := R115[0x06d055f9]
1538 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 1541
1539 [-]: JMP       1541         ; PC := 1541
1540 [-]: LOADKB    R116 0 1     ; R116 := false; PC := 1541
1541 [-]: LOADKB    R116 1 0     ; R116 := true
1542 [-]: CONST     R117 0       ; R117 := 0.000000
1543 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1544 [-]: SELF      R118 R118 K111; R119 := R118; R118 := R118[0x0eb34c69]
1545 [-]: GETUPVAL  R120 U8      ; R120 := U8
1546 [-]: GETTABLE  R120 R120 K114; R120 := R120["WAVE_NUMBER"]
1547 [-]: CONST     R121 0       ; R121 := 0.000000
1548 [-]: CALL      R118 4 0     ; R118,... := R118(R119,R120,R121)
1549 [-]: CALL      R115 0 2     ; R115 := R115(R116,...)
1550 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1551 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1552 [-]: GETTABLE  R114 R114 K108; R114 := R114["mScore"]
1553 [-]: LT        0 K109 R114  ; if 0.000000 >= R114 then PC := 1560
1554 [-]: JMP       1560         ; PC := 1560
1555 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1556 [-]: GETGLOBAL R115 K51     ; R115 := mPlayerMissionInfo
1557 [-]: GETTABLE  R115 R115 K108; R115 := R115["mScore"]
1558 [-]: SUB       R115 R115 K20; R115 := R115 - 1.000000
1559 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1560 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1561 [-]: GETTABLE  R114 R114 K108; R114 := R114["mScore"]
1562 [-]: LT        0 K115 R114  ; if 1000.000000 >= R114 then PC := 1638
1563 [-]: JMP       1638         ; PC := 1638
1564 [-]: GETGLOBAL R114 K0      ; R114 := 0x3d106989
1565 [-]: LOADK     R115 K116    ; R115 := "Extremely high score returned from NV_WAVE_NUMBER: "
1566 [-]: GETGLOBAL R116 K51     ; R116 := mPlayerMissionInfo
1567 [-]: GETTABLE  R116 R116 K108; R116 := R116["mScore"]
1568 [-]: CONCAT    R115 R115 R116; R115 := R115 .. R116
1569 [-]: CALL      R114 2 1     ; R114(R115)
1570 [-]: JMP       1638         ; PC := 1638
1571 [-]: GETUPVAL  R114 U11     ; R114 := U11
1572 [-]: CALL      R114 1 2     ; R114 := R114()
1573 [-]: TEST      R114 0       ; if not R114 then PC := 1593
1574 [-]: JMP       1593         ; PC := 1593
1575 [-]: LOADKB    R113 0 0     ; R113 := false
1576 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1577 [-]: GETUPVAL  R115 U2      ; R115 := U2
1578 [-]: GETTABLE  R115 R115 K53; R115 := R115[0x06d055f9]
1579 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 1582
1580 [-]: JMP       1582         ; PC := 1582
1581 [-]: LOADKB    R116 0 1     ; R116 := false; PC := 1582
1582 [-]: LOADKB    R116 1 0     ; R116 := true
1583 [-]: CONST     R117 0       ; R117 := 0.000000
1584 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1585 [-]: SELF      R118 R118 K111; R119 := R118; R118 := R118[0x0eb34c69]
1586 [-]: GETUPVAL  R120 U8      ; R120 := U8
1587 [-]: GETTABLE  R120 R120 K117; R120 := R120["TIME_ELAPSED"]
1588 [-]: CONST     R121 0       ; R121 := 0.000000
1589 [-]: CALL      R118 4 0     ; R118,... := R118(R119,R120,R121)
1590 [-]: CALL      R115 0 2     ; R115 := R115(R116,...)
1591 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1592 [-]: JMP       1638         ; PC := 1638
1593 [-]: GETUPVAL  R114 U12     ; R114 := U12
1594 [-]: CALL      R114 1 2     ; R114 := R114()
1595 [-]: TEST      R114 1       ; if R114 then PC := 1601
1596 [-]: JMP       1601         ; PC := 1601
1597 [-]: GETUPVAL  R114 U13     ; R114 := U13
1598 [-]: CALL      R114 1 2     ; R114 := R114()
1599 [-]: TEST      R114 0       ; if not R114 then PC := 1618
1600 [-]: JMP       1618         ; PC := 1618
1601 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1602 [-]: GETUPVAL  R115 U2      ; R115 := U2
1603 [-]: GETTABLE  R115 R115 K53; R115 := R115[0x06d055f9]
1604 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 1607
1605 [-]: JMP       1607         ; PC := 1607
1606 [-]: LOADKB    R116 0 1     ; R116 := false; PC := 1607
1607 [-]: LOADKB    R116 1 0     ; R116 := true
1608 [-]: CONST     R117 0       ; R117 := 0.000000
1609 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1610 [-]: SELF      R118 R118 K111; R119 := R118; R118 := R118[0x0eb34c69]
1611 [-]: GETUPVAL  R120 U8      ; R120 := U8
1612 [-]: GETTABLE  R120 R120 K118; R120 := R120["MISSION_SCORE"]
1613 [-]: CONST     R121 0       ; R121 := 0.000000
1614 [-]: CALL      R118 4 0     ; R118,... := R118(R119,R120,R121)
1615 [-]: CALL      R115 0 2     ; R115 := R115(R116,...)
1616 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1617 [-]: JMP       1638         ; PC := 1638
1618 [-]: GETUPVAL  R114 U14     ; R114 := U14
1619 [-]: CALL      R114 1 2     ; R114 := R114()
1620 [-]: TEST      R114 0       ; if not R114 then PC := 1638
1621 [-]: JMP       1638         ; PC := 1638
1622 [-]: GETGLOBAL R114 K51     ; R114 := mPlayerMissionInfo
1623 [-]: GETUPVAL  R115 U2      ; R115 := U2
1624 [-]: GETTABLE  R115 R115 K53; R115 := R115[0x06d055f9]
1625 [-]: EQ        1 R0 K59     ; if R0 == false then PC := 1628
1626 [-]: JMP       1628         ; PC := 1628
1627 [-]: LOADKB    R116 0 1     ; R116 := false; PC := 1628
1628 [-]: LOADKB    R116 1 0     ; R116 := true
1629 [-]: CONST     R117 0       ; R117 := 0.000000
1630 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1631 [-]: SELF      R118 R118 K111; R119 := R118; R118 := R118[0x0eb34c69]
1632 [-]: GETUPVAL  R120 U8      ; R120 := U8
1633 [-]: GETTABLE  R120 R120 K117; R120 := R120["TIME_ELAPSED"]
1634 [-]: CONST     R121 0       ; R121 := 0.000000
1635 [-]: CALL      R118 4 0     ; R118,... := R118(R119,R120,R121)
1636 [-]: CALL      R115 0 2     ; R115 := R115(R116,...)
1637 [-]: SETTABLE  R114 K108 R115; R114["mScore"] := R115
1638 [-]: GETUPVAL  R114 U15     ; R114 := U15
1639 [-]: CALL      R114 1 2     ; R114 := R114()
1640 [-]: TEST      R114 0       ; if not R114 then PC := 1677
1641 [-]: JMP       1677         ; PC := 1677
1642 [-]: GETUPVAL  R114 U16     ; R114 := U16
1643 [-]: GETTABLE  R114 R114 K119; R114 := R114[0xcdc34211]
1644 [-]: CALL      R114 1 2     ; R114 := R114()
1645 [-]: TEST      R114 0       ; if not R114 then PC := 1677
1646 [-]: JMP       1677         ; PC := 1677
1647 [-]: GETUPVAL  R114 U17     ; R114 := U17
1648 [-]: CALL      R114 1 2     ; R114 := R114()
1649 [-]: GETGLOBAL R115 K5      ; R115 := 0x7b998233
1650 [-]: MOVE      R116 R114    ; R116 := R114
1651 [-]: CALL      R115 2 2     ; R115 := R115(R116)
1652 [-]: TEST      R115 1       ; if R115 then PC := 1677
1653 [-]: JMP       1677         ; PC := 1677
1654 [-]: SELF      R115 R114 K48; R116 := R114; R115 := R114[0xb8c8dfbd]
1655 [-]: CALL      R115 2 2     ; R115 := R115(R116)
1656 [-]: GETGLOBAL R116 K5      ; R116 := 0x7b998233
1657 [-]: MOVE      R117 R115    ; R117 := R115
1658 [-]: CALL      R116 2 2     ; R116 := R116(R117)
1659 [-]: TEST      R116 1       ; if R116 then PC := 1677
1660 [-]: JMP       1677         ; PC := 1677
1661 [-]: GETGLOBAL R116 K7      ; R116 := 0xbe190284
1662 [-]: SELF      R116 R116 K120; R117 := R116; R116 := R116[0x5d204145]
1663 [-]: CALL      R116 2 2     ; R116 := R116(R117)
1664 [-]: TEST      R116 1       ; if R116 then PC := 1677
1665 [-]: JMP       1677         ; PC := 1677
1666 [-]: SELF      R116 R115 K121; R117 := R115; R116 := R115[0x864e4735]
1667 [-]: CONST     R118 0       ; R118 := 0.000000
1668 [-]: CALL      R116 3 2     ; R116 := R116(R117,R118)
1669 [-]: LT        0 K109 R116  ; if 0.000000 >= R116 then PC := 1677
1670 [-]: JMP       1677         ; PC := 1677
1671 [-]: SETGLOBAL R116 K122    ; mIntrinsicPoints := R116
1672 [-]: GETGLOBAL R117 K51     ; R117 := mPlayerMissionInfo
1673 [-]: SELF      R117 R117 K123; R118 := R117; R117 := R117[0x86da8894]
1674 [-]: CONST     R119 0       ; R119 := 0.000000
1675 [-]: MOVE      R120 R116    ; R120 := R116
1676 [-]: CALL      R117 4 1     ; R117(R118,R119,R120)
1677 [-]: TEST      R0 0         ; if not R0 then PC := 1688
1678 [-]: JMP       1688         ; PC := 1688
1679 [-]: TEST      R2 0         ; if not R2 then PC := 1688
1680 [-]: JMP       1688         ; PC := 1688
1681 [-]: GETGLOBAL R117 K51     ; R117 := mPlayerMissionInfo
1682 [-]: GETGLOBAL R118 K7      ; R118 := 0xbe190284
1683 [-]: SELF      R118 R118 K125; R119 := R118; R118 := R118[0xd4ca862a]
1684 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1685 [-]: DIV       R118 R118 K126; R118 := R118 / 5.000000
1686 [-]: SETTABLE  R117 K124 R118; R117["mMissionRating"] := R118
1687 [-]: JMP       1690         ; PC := 1690
1688 [-]: GETGLOBAL R117 K51     ; R117 := mPlayerMissionInfo
1689 [-]: SETTABLE  R117 K124 K109; R117["mMissionRating"] := 0.000000
1690 [-]: GETGLOBAL R117 K5      ; R117 := 0x7b998233
1691 [-]: GETGLOBAL R118 K6      ; R118 := mGameData
1692 [-]: CALL      R117 2 2     ; R117 := R117(R118)
1693 [-]: TEST      R117 1       ; if R117 then PC := 1714
1694 [-]: JMP       1714         ; PC := 1714
1695 [-]: TEST      R113 0       ; if not R113 then PC := 1705
1696 [-]: JMP       1705         ; PC := 1705
1697 [-]: GETGLOBAL R117 K51     ; R117 := mPlayerMissionInfo
1698 [-]: GETGLOBAL R118 K51     ; R118 := mPlayerMissionInfo
1699 [-]: GETTABLE  R118 R118 K108; R118 := R118["mScore"]
1700 [-]: GETGLOBAL R119 K6      ; R119 := mGameData
1701 [-]: SELF      R119 R119 K127; R120 := R119; R119 := R119[0xf91bb3a5]
1702 [-]: CALL      R119 2 2     ; R119 := R119(R120)
1703 [-]: MUL       R118 R118 R119; R118 := R118 * R119
1704 [-]: SETTABLE  R117 K108 R118; R117["mScore"] := R118
1705 [-]: GETGLOBAL R117 K6      ; R117 := mGameData
1706 [-]: SELF      R117 R117 K128; R118 := R117; R117 := R117[0xad87a3cb]
1707 [-]: MOVE      R119 R55     ; R119 := R55
1708 [-]: GETGLOBAL R120 K51     ; R120 := mPlayerMissionInfo
1709 [-]: CALL      R117 4 1     ; R117(R118,R119,R120)
1710 [-]: GETGLOBAL R117 K6      ; R117 := mGameData
1711 [-]: SELF      R117 R117 K129; R118 := R117; R117 := R117[0x949675cc]
1712 [-]: MOVE      R119 R55     ; R119 := R55
1713 [-]: CALL      R117 3 1     ; R117(R118,R119)
1714 [-]: SELF      R117 R55 K96 ; R118 := R55; R117 := R55[0x420402a9]
1715 [-]: CALL      R117 2 2     ; R117 := R117(R118)
1716 [-]: TEST      R117 0       ; if not R117 then PC := 1754
1717 [-]: JMP       1754         ; PC := 1754
1718 [-]: GETUPVAL  R117 U16     ; R117 := U16
1719 [-]: GETTABLE  R117 R117 K119; R117 := R117[0xcdc34211]
1720 [-]: CALL      R117 1 2     ; R117 := R117()
1721 [-]: TEST      R117 0       ; if not R117 then PC := 1732
1722 [-]: JMP       1732         ; PC := 1732
1723 [-]: GETGLOBAL R117 K7      ; R117 := 0xbe190284
1724 [-]: SELF      R117 R117 K130; R118 := R117; R117 := R117[0x16975799]
1725 [-]: MOVE      R119 R55     ; R119 := R55
1726 [-]: TESTSET   R120 R0 0    ; if not R0 then PC := 1729 else R120 := R0
1727 [-]: JMP       1729         ; PC := 1729
1728 [-]: MOVE      R120 R2      ; R120 := R2
1729 [-]: LOADKB    R121 0 0     ; R121 := false
1730 [-]: CALL      R117 5 1     ; R117(R118,R119,R120,R121)
1731 [-]: JMP       1754         ; PC := 1754
1732 [-]: GETGLOBAL R117 K7      ; R117 := 0xbe190284
1733 [-]: SELF      R117 R117 K130; R118 := R117; R117 := R117[0x16975799]
1734 [-]: MOVE      R119 R55     ; R119 := R55
1735 [-]: MOVE      R120 R0      ; R120 := R0
1736 [-]: LOADKB    R121 0 0     ; R121 := false
1737 [-]: CALL      R117 5 1     ; R117(R118,R119,R120,R121)
1738 [-]: JMP       1754         ; PC := 1754
1739 [-]: LOADK     R117 K131    ; R117 := "NULL"
1740 [-]: GETGLOBAL R118 K5      ; R118 := 0x7b998233
1741 [-]: MOVE      R119 R55     ; R119 := R55
1742 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1743 [-]: TEST      R118 1       ; if R118 then PC := 1748
1744 [-]: JMP       1748         ; PC := 1748
1745 [-]: SELF      R118 R55 K49 ; R119 := R55; R118 := R55[0x5ca33548]
1746 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1747 [-]: MOVE      R117 R118    ; R117 := R118
1748 [-]: GETGLOBAL R118 K0      ; R118 := 0x3d106989
1749 [-]: LOADK     R119 K132    ; R119 := "Cannot give end of match rewards for player "
1750 [-]: MOVE      R120 R117    ; R120 := R117
1751 [-]: LOADK     R121 K133    ; R121 := "! Avatar was NULL or InventoryController was wrong type"
1752 [-]: CONCAT    R119 R119 R121; R119 := R119 .. R120 .. R121
1753 [-]: CALL      R118 2 1     ; R118(R119)
1754 [-]: TFORLOOP  R51 2        ; R54,R55 :=  R51(R52,R53); if R54 ~= nil then begin PC = 263; R53 := R54 end
1755 [-]: JMP       263          ; PC := 263
1756 [-]: GETUPVAL  R118 U16     ; R118 := U16
1757 [-]: GETTABLE  R118 R118 K119; R118 := R118[0xcdc34211]
1758 [-]: CALL      R118 1 2     ; R118 := R118()
1759 [-]: TEST      R118 0       ; if not R118 then PC := 1773
1760 [-]: JMP       1773         ; PC := 1773
1761 [-]: GETGLOBAL R118 K8      ; R118 := _T
1762 [-]: GETTABLE  R118 R118 K9 ; R118 := R118["eomScreenMode"]
1763 [-]: GETUPVAL  R119 U0      ; R119 := U0
1764 [-]: GETTABLE  R119 R119 K134; R119 := R119["DETAILED_PREVIEW"]
1765 [-]: EQ        0 R118 R119  ; if R118 ~= R119 then PC := 1773
1766 [-]: JMP       1773         ; PC := 1773
1767 [-]: GETUPVAL  R118 U18     ; R118 := U18
1768 [-]: CALL      R118 1 2     ; R118 := R118()
1769 [-]: TEST      R118 0       ; if not R118 then PC := 1773
1770 [-]: JMP       1773         ; PC := 1773
1771 [-]: GETUPVAL  R118 U19     ; R118 := U19
1772 [-]: CALL      R118 1 1     ; R118()
1773 [-]: GETGLOBAL R118 K14     ; R118 := 0x89326c93
1774 [-]: SELF      R118 R118 K135; R119 := R118; R118 := R118[0x18d05d30]
1775 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1776 [-]: TEST      R118 1       ; if R118 then PC := 1780
1777 [-]: JMP       1780         ; PC := 1780
1778 [-]: TEST      R2 1         ; if R2 then PC := 1784
1779 [-]: JMP       1784         ; PC := 1784
1780 [-]: GETGLOBAL R119 K6      ; R119 := mGameData
1781 [-]: SELF      R119 R119 K136; R120 := R119; R119 := R119[0x899d5f47]
1782 [-]: MOVE      R121 R118    ; R121 := R118
1783 [-]: CALL      R119 3 1     ; R119(R120,R121)
1784 [-]: GETUPVAL  R119 U3      ; R119 := U3
1785 [-]: CALL      R119 1 2     ; R119 := R119()
1786 [-]: TEST      R119 1       ; if R119 then PC := 1790
1787 [-]: JMP       1790         ; PC := 1790
1788 [-]: GETUPVAL  R119 U20     ; R119 := U20
1789 [-]: CALL      R119 1 2     ; R119 := R119()
1790 [-]: TEST      R2 0         ; if not R2 then PC := 1797
1791 [-]: JMP       1797         ; PC := 1797
1792 [-]: TEST      R119 1       ; if R119 then PC := 1797
1793 [-]: JMP       1797         ; PC := 1797
1794 [-]: GETGLOBAL R120 K7      ; R120 := 0xbe190284
1795 [-]: SELF      R120 R120 K137; R121 := R120; R120 := R120[0x0670ef1c]
1796 [-]: CALL      R120 2 1     ; R120(R121)
1797 [-]: TEST      R2 0         ; if not R2 then PC := 1979
1798 [-]: JMP       1979         ; PC := 1979
1799 [-]: TEST      R0 0         ; if not R0 then PC := 1823
1800 [-]: JMP       1823         ; PC := 1823
1801 [-]: GETTABLE  R120 R4 K138 ; R120 := R4["alertId"]
1802 [-]: EQ        1 R120 K139  ; if R120 == "" then PC := 1810
1803 [-]: JMP       1810         ; PC := 1810
1804 [-]: GETGLOBAL R120 K6      ; R120 := mGameData
1805 [-]: SELF      R120 R120 K140; R121 := R120; R120 := R120[0xcf6ac497]
1806 [-]: GETTABLE  R122 R4 K138 ; R122 := R4["alertId"]
1807 [-]: CALL      R120 3 2     ; R120 := R120(R121,R122)
1808 [-]: TEST      R120 1       ; if R120 then PC := 1821
1809 [-]: JMP       1821         ; PC := 1821
1810 [-]: GETTABLE  R120 R4 K141 ; R120 := R4["periodicMissionTag"]
1811 [-]: GETGLOBAL R121 K142    ; R121 := EMPTY_SYMBOL
1812 [-]: EQ        1 R120 R121  ; if R120 == R121 then PC := 1823
1813 [-]: JMP       1823         ; PC := 1823
1814 [-]: GETGLOBAL R120 K6      ; R120 := mGameData
1815 [-]: SELF      R120 R120 K143; R121 := R120; R120 := R120[0xc3150d06]
1816 [-]: GETTABLE  R122 R4 K141 ; R122 := R4["periodicMissionTag"]
1817 [-]: GETTABLE  R123 R4 K144 ; R123 := R4["periodicMissionCooldown"]
1818 [-]: CALL      R120 4 2     ; R120 := R120(R121,R122,R123)
1819 [-]: TEST      R120 1       ; if R120 then PC := 1823
1820 [-]: JMP       1823         ; PC := 1823
1821 [-]: LOADKB    R120 1 0     ; R120 := true
1822 [-]: SETUPVAL  R120 U21     ; U82 := R21
1823 [-]: LOADKB    R120 1 0     ; R120 := true
1824 [-]: SETGLOBAL R120 K145    ; mWaitingForDbUpdate := R120
1825 [-]: GETUPVAL  R120 U6      ; R120 := U6
1826 [-]: GETTABLE  R120 R120 K54; R120 := R120["isPvp"]
1827 [-]: TEST      R120 1       ; if R120 then PC := 1974
1828 [-]: JMP       1974         ; PC := 1974
1829 [-]: TEST      R0 0         ; if not R0 then PC := 1839
1830 [-]: JMP       1839         ; PC := 1839
1831 [-]: GETGLOBAL R120 K8      ; R120 := _T
1832 [-]: GETTABLE  R120 R120 K146; R120 := R120["OnEndOfMatchMissionSuccess"]
1833 [-]: EQ        1 R120 K147  ; if R120 == nil then PC := 1839
1834 [-]: JMP       1839         ; PC := 1839
1835 [-]: GETGLOBAL R120 K8      ; R120 := _T
1836 [-]: GETTABLE  R120 R120 K148; R120 := R120[0x9b299e4b]
1837 [-]: CALL      R120 1 1     ; R120()
1838 [-]: JMP       1848         ; PC := 1848
1839 [-]: TEST      R0 1         ; if R0 then PC := 1848
1840 [-]: JMP       1848         ; PC := 1848
1841 [-]: GETGLOBAL R120 K8      ; R120 := _T
1842 [-]: GETTABLE  R120 R120 K149; R120 := R120["OnEndOfMatchMissionFail"]
1843 [-]: EQ        1 R120 K147  ; if R120 == nil then PC := 1848
1844 [-]: JMP       1848         ; PC := 1848
1845 [-]: GETGLOBAL R120 K8      ; R120 := _T
1846 [-]: GETTABLE  R120 R120 K150; R120 := R120[0xf962fa5c]
1847 [-]: CALL      R120 1 1     ; R120()
1848 [-]: GETTABLE  R120 R4 K151 ; R120 := R4["missionType"]
1849 [-]: EQ        1 R120 K152  ; if R120 == 31.000000 then PC := 1852
1850 [-]: JMP       1852         ; PC := 1852
1851 [-]: LOADKB    R120 0 1     ; R120 := false; PC := 1852
1852 [-]: LOADKB    R120 1 0     ; R120 := true
1853 [-]: TESTSET   R121 R120 0  ; if not R120 then PC := 1862 else R121 := R120
1854 [-]: JMP       1862         ; PC := 1862
1855 [-]: GETTABLE  R121 R4 K153 ; R121 := R4["location"]
1856 [-]: GETUPVAL  R122 U8      ; R122 := U8
1857 [-]: GETTABLE  R122 R122 K154; R122 := R122["FREE_FLIGHT_NODE"]
1858 [-]: EQ        1 R121 R122  ; if R121 == R122 then PC := 1861
1859 [-]: JMP       1861         ; PC := 1861
1860 [-]: LOADKB    R121 0 1     ; R121 := false; PC := 1861
1861 [-]: LOADKB    R121 1 0     ; R121 := true
1862 [-]: GETGLOBAL R122 K7      ; R122 := 0xbe190284
1863 [-]: SELF      R122 R122 K111; R123 := R122; R122 := R122[0x0eb34c69]
1864 [-]: GETGLOBAL R124 K155    ; R124 := 0x0469f296
1865 [-]: LOADK     R125 K156    ; R125 := "RJLichAssassinateComplete"
1866 [-]: CALL      R124 2 2     ; R124 := R124(R125)
1867 [-]: CONST     R125 0       ; R125 := 0.000000
1868 [-]: CALL      R122 4 2     ; R122 := R122(R123,R124,R125)
1869 [-]: EQ        1 R122 K20   ; if R122 == 1.000000 then PC := 1872
1870 [-]: JMP       1872         ; PC := 1872
1871 [-]: LOADKB    R122 0 1     ; R122 := false; PC := 1872
1872 [-]: LOADKB    R122 1 0     ; R122 := true
1873 [-]: GETGLOBAL R123 K8      ; R123 := _T
1874 [-]: GETTABLE  R123 R123 K157; R123 := R123["AbortedRailjackMission"]
1875 [-]: TEST      R123 0       ; if not R123 then PC := 1895
1876 [-]: JMP       1895         ; PC := 1895
1877 [-]: GETGLOBAL R123 K8      ; R123 := _T
1878 [-]: SETTABLE  R123 K157 K147; R123["AbortedRailjackMission"] := nil
1879 [-]: GETUPVAL  R123 U2      ; R123 := U2
1880 [-]: GETTABLE  R123 R123 K53; R123 := R123[0x06d055f9]
1881 [-]: TESTSET   R124 R121 1  ; if R121 then PC := 1884 else R124 := R121
1882 [-]: JMP       1884         ; PC := 1884
1883 [-]: MOVE      R124 R122    ; R124 := R122
1884 [-]: CONST     R125 6       ; R125 := 6.000000
1885 [-]: CONST     R126 5       ; R126 := 5.000000
1886 [-]: CALL      R123 4 2     ; R123 := R123(R124,R125,R126)
1887 [-]: GETGLOBAL R124 K7      ; R124 := 0xbe190284
1888 [-]: SELF      R124 R124 K158; R125 := R124; R124 := R124[0x12924388]
1889 [-]: MOVE      R126 R123    ; R126 := R123
1890 [-]: CONST     R127 0       ; R127 := 0.000000
1891 [-]: CONST     R128 0       ; R128 := 0.000000
1892 [-]: LOADK     R129 K159    ; R129 := "DbUpdateComplete"
1893 [-]: CALL      R124 6 1     ; R124(R125,R126,R127,R128,R129)
1894 [-]: JMP       1974         ; PC := 1974
1895 [-]: TEST      R120 0       ; if not R120 then PC := 1915
1896 [-]: JMP       1915         ; PC := 1915
1897 [-]: TEST      R0 0         ; if not R0 then PC := 1915
1898 [-]: JMP       1915         ; PC := 1915
1899 [-]: GETUPVAL  R124 U10     ; R124 := U10
1900 [-]: CALL      R124 1 2     ; R124 := R124()
1901 [-]: TEST      R124 0       ; if not R124 then PC := 1915
1902 [-]: JMP       1915         ; PC := 1915
1903 [-]: GETUPVAL  R124 U22     ; R124 := U22
1904 [-]: CALL      R124 1 2     ; R124 := R124()
1905 [-]: TEST      R124 0       ; if not R124 then PC := 1915
1906 [-]: JMP       1915         ; PC := 1915
1907 [-]: GETGLOBAL R124 K7      ; R124 := 0xbe190284
1908 [-]: SELF      R124 R124 K160; R125 := R124; R124 := R124[0x0f495200]
1909 [-]: LOADKB    R126 1 0     ; R126 := true
1910 [-]: GETGLOBAL R127 K161    ; R127 := 0xae91e43b
1911 [-]: LOADK     R128 K159    ; R128 := "DbUpdateComplete"
1912 [-]: LOADKB    R129 1 0     ; R129 := true
1913 [-]: CALL      R124 6 1     ; R124(R125,R126,R127,R128,R129)
1914 [-]: JMP       1974         ; PC := 1974
1915 [-]: TEST      R120 0       ; if not R120 then PC := 1950
1916 [-]: JMP       1950         ; PC := 1950
1917 [-]: TEST      R0 0         ; if not R0 then PC := 1950
1918 [-]: JMP       1950         ; PC := 1950
1919 [-]: GETGLOBAL R124 K8      ; R124 := _T
1920 [-]: GETTABLE  R124 R124 K162; R124 := R124["RailjackReturnToDojo"]
1921 [-]: TEST      R124 1       ; if R124 then PC := 1950
1922 [-]: JMP       1950         ; PC := 1950
1923 [-]: GETUPVAL  R124 U10     ; R124 := U10
1924 [-]: CALL      R124 1 2     ; R124 := R124()
1925 [-]: TEST      R124 0       ; if not R124 then PC := 1934
1926 [-]: JMP       1934         ; PC := 1934
1927 [-]: GETGLOBAL R124 K8      ; R124 := _T
1928 [-]: GETTABLE  R124 R124 K163; R124 := R124["RailjackStreamingToNextMission"]
1929 [-]: TEST      R124 1       ; if R124 then PC := 1934
1930 [-]: JMP       1934         ; PC := 1934
1931 [-]: LOADKB    R124 1 0     ; R124 := true
1932 [-]: SETGLOBAL R124 K164    ; mShowDuringLoadingScreen := R124
1933 [-]: JMP       1974         ; PC := 1974
1934 [-]: GETUPVAL  R124 U2      ; R124 := U2
1935 [-]: GETTABLE  R124 R124 K53; R124 := R124[0x06d055f9]
1936 [-]: TESTSET   R125 R121 1  ; if R121 then PC := 1939 else R125 := R121
1937 [-]: JMP       1939         ; PC := 1939
1938 [-]: MOVE      R125 R122    ; R125 := R122
1939 [-]: CONST     R126 6       ; R126 := 6.000000
1940 [-]: CONST     R127 5       ; R127 := 5.000000
1941 [-]: CALL      R124 4 2     ; R124 := R124(R125,R126,R127)
1942 [-]: GETGLOBAL R125 K7      ; R125 := 0xbe190284
1943 [-]: SELF      R125 R125 K158; R126 := R125; R125 := R125[0x12924388]
1944 [-]: MOVE      R127 R124    ; R127 := R124
1945 [-]: CONST     R128 0       ; R128 := 0.000000
1946 [-]: CONST     R129 0       ; R129 := 0.000000
1947 [-]: LOADK     R130 K159    ; R130 := "DbUpdateComplete"
1948 [-]: CALL      R125 6 1     ; R125(R126,R127,R128,R129,R130)
1949 [-]: JMP       1974         ; PC := 1974
1950 [-]: GETGLOBAL R125 K8      ; R125 := _T
1951 [-]: SETTABLE  R125 K162 K59; R125["RailjackReturnToDojo"] := false
1952 [-]: GETTABLE  R125 R4 K151 ; R125 := R4["missionType"]
1953 [-]: EQ        0 R125 K165  ; if R125 ~= 18.000000 then PC := 1959
1954 [-]: JMP       1959         ; PC := 1959
1955 [-]: GETGLOBAL R125 K8      ; R125 := _T
1956 [-]: GETTABLE  R125 R125 K166; R125 := R125["raidIntermediateStage"]
1957 [-]: EQ        1 R125 K167  ; if R125 == true then PC := 1962
1958 [-]: JMP       1962         ; PC := 1962
1959 [-]: MOVE      R125 R120    ; R125 := R120
1960 [-]: JMP       1963         ; PC := 1963
1961 [-]: LOADKB    R125 0 1     ; R125 := false; PC := 1962
1962 [-]: LOADKB    R125 1 0     ; R125 := true
1963 [-]: GETGLOBAL R126 K7      ; R126 := 0xbe190284
1964 [-]: SELF      R126 R126 K160; R127 := R126; R126 := R126[0x0f495200]
1965 [-]: MOVE      R128 R0      ; R128 := R0
1966 [-]: GETGLOBAL R129 K161    ; R129 := 0xae91e43b
1967 [-]: LOADK     R130 K159    ; R130 := "DbUpdateComplete"
1968 [-]: MOVE      R131 R125    ; R131 := R125
1969 [-]: CALL      R126 6 1     ; R126(R127,R128,R129,R130,R131)
1970 [-]: TEST      R120 0       ; if not R120 then PC := 1974
1971 [-]: JMP       1974         ; PC := 1974
1972 [-]: LOADKB    R126 1 0     ; R126 := true
1973 [-]: SETGLOBAL R126 K164    ; mShowDuringLoadingScreen := R126
1974 [-]: GETGLOBAL R126 K51     ; R126 := mPlayerMissionInfo
1975 [-]: EQ        1 R126 K147  ; if R126 == nil then PC := 1979
1976 [-]: JMP       1979         ; PC := 1979
1977 [-]: GETUPVAL  R126 U19     ; R126 := U19
1978 [-]: CALL      R126 1 1     ; R126()
1979 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3577
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xb73d420f]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["UI_MODE_IN_GAME"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K2        ; R0 := mPendingTallies
 10 [-]: LT        0 K3 R0      ; if 0.000000 >= R0 then PC := 28
 11 [-]: JMP       28           ; PC := 28
 12 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K5        ; R1 := mXpTallySoundInst
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 28
 16 [-]: JMP       28           ; PC := 28
 17 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 18 [-]: GETGLOBAL R1 K6        ; R1 := 0x1655cf1b
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 42
 21 [-]: JMP       42           ; PC := 42
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: GETTABLE  R0 R0 K7     ; R0 := R0[0x659d451f]
 24 [-]: GETGLOBAL R1 K6        ; R1 := 0x1655cf1b
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: SETGLOBAL R0 K5        ; mXpTallySoundInst := R0
 27 [-]: JMP       42           ; PC := 42
 28 [-]: GETGLOBAL R0 K2        ; R0 := mPendingTallies
 29 [-]: LE        0 R0 K3      ; if R0 > 0.000000 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 32 [-]: GETGLOBAL R1 K5        ; R1 := mXpTallySoundInst
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETGLOBAL R0 K5        ; R0 := mXpTallySoundInst
 37 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x6cf1e476]
 38 [-]: LOADKB    R2 1 0       ; R2 := true
 39 [-]: CALL      R0 3 1       ; R0(R1,R2)
 40 [-]: LOADNIL   R0 R0        ; R0 := nil
 41 [-]: SETGLOBAL R0 K5        ; mXpTallySoundInst := R0
 42 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3592
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R2 K0        ; R2 := mPendingTallies
  2 [-]: ADD       R2 R2 R0     ; R2 := R2 + R0
  3 [-]: SETGLOBAL R2 K0        ; mPendingTallies := R2
  4 [-]: TEST      R1 1         ; if R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3600
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R2 0         ; if not R2 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: LOADK     R3 K0        ; R3 := "+"
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K1     ; R4 := R4[0x1142c7a8]
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x42b04007]
 12 [-]: LOADK     R5 K4        ; R5 := "<FOCUS>"
 13 [-]: LOADKB    R6 1 0       ; R6 := true
 14 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 15 [-]: LOADK     R4 K5        ; R4 := ""
 16 [-]: GETUPVAL  R5 U0        ; R5 := U0
 17 [-]: GETTABLE  R5 R5 K1     ; R5 := R5[0x1142c7a8]
 18 [-]: MOVE      R6 R1        ; R6 := R1
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 21 [-]: RETURN    R3 2         ; return R3
 22 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 3607
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mProgressBar"]
  2 [-]: SETTABLE  R1 K1 K2     ; R1["mBgEdgeAlpha"] := 0.250000
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mProgressBar"]
  4 [-]: SETTABLE  R1 K3 K2     ; R1["mBgInnerAlpha"] := 0.250000
  5 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mProgressBar"]
  6 [-]: SETTABLE  R1 K4 K5     ; R1["mFillEdgeAlpha"] := 0.000000
  7 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mProgressBar"]
  8 [-]: SETTABLE  R1 K6 K7     ; R1["mPadding"] := -5.000000
  9 [-]: GETGLOBAL R1 K9        ; R1 := mAffinityGrid
 10 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["mRowSeparation"]
 11 [-]: SUB       R1 R1 K11    ; R1 := R1 - 10.000000
 12 [-]: SUB       R1 R1 K12    ; R1 := R1 - 5.000000
 13 [-]: SETTABLE  R0 K8 R1     ; R0["mIconSize"] := R1
 14 [-]: SETTABLE  R0 K13 K14   ; R0["mSkipResize"] := true
 15 [-]: SETTABLE  R0 K15 K14   ; R0["mToUpper"] := true
 16 [-]: SETTABLE  R0 K16 K2    ; R0["mBackerAlpha"] := 0.250000
 17 [-]: SETTABLE  R0 K17 K18   ; R0["mBackerIconAlpha"] := 0.100000
 18 [-]: SETTABLE  R0 K19 K20   ; R0["mBackerEdgeAlpha"] := 0.050000
 19 [-]: SETTABLE  R0 K21 K22   ; R0["mIconPaddingX"] := -4.000000
 20 [-]: SETTABLE  R0 K23 K22   ; R0["mIconPaddingY"] := -4.000000
 21 [-]: SETTABLE  R0 K24 K11   ; R0["mIconToTextPadding"] := 10.000000
 22 [-]: SETTABLE  R0 K25 K26   ; R0["mVerticalTextOffset"] := 0.130000
 23 [-]: SETTABLE  R0 K27 K14   ; R0["mExtendedProgressBar"] := true
 24 [-]: SETTABLE  R0 K28 K14   ; R0["mSeamlessProgressBar"] := true
 25 [-]: SETTABLE  R0 K29 K14   ; R0["mFlipIcon2"] := true
 26 [-]: SETTABLE  R0 K30 K31   ; R0["mShowIconBg2"] := false
 27 [-]: GETGLOBAL R1 K33       ; R1 := 0xfee8dbfd
 28 [-]: SETTABLE  R0 K32 R1    ; R0["mIconMaterial"] := R1
 29 [-]: GETGLOBAL R1 K35       ; R1 := 0xbacf3724
 30 [-]: SETTABLE  R0 K34 R1    ; R0["mTextMaterial"] := R1
 31 [-]: GETGLOBAL R1 K37       ; R1 := 0x2bbc1c3b
 32 [-]: SETTABLE  R0 K36 R1    ; R0["mRectMaterial"] := R1
 33 [-]: SETTABLE  R0 K38 K14   ; R0["mShowIconHighlight"] := true
 34 [-]: SELF      R1 R0 K39    ; R2 := R0; R1 := R0[0x8d77b2b2]
 35 [-]: GETGLOBAL R3 K9        ; R3 := mAffinityGrid
 36 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["mColumnSeparation"]
 37 [-]: SUB       R3 R3 K41    ; R3 := R3 - 14.000000
 38 [-]: CALL      R1 3 1       ; R1(R2,R3)
 39 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 3633
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R2 K2        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["eomScreenMode"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["QUICK_PREVIEW"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["ProgressInfo"]
 12 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADKB    R2 1 0       ; R2 := true
 16 [-]: SETTABLE  R0 K6 K7     ; R0["InterpingFocusGain"] := true
 17 [-]: CONST     R3 1000      ; R3 := 1000.000000
 18 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["PolarityInfo"]
 19 [-]: GETGLOBAL R5 K9        ; R5 := mPlayerMissionInfo
 20 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf968443e]
 21 [-]: GETTABLE  R7 R4 K11    ; R7 := R4["PolarityType"]
 22 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 23 [-]: GETGLOBAL R6 K12       ; R6 := 0x5bced4c4
 24 [-]: GETTABLE  R6 R6 K13    ; R6 := R6[0x55f27c30]
 25 [-]: MOD       R7 R5 R3     ; R7 := R5 % R3
 26 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 27 [-]: GETGLOBAL R7 K12       ; R7 := 0x5bced4c4
 28 [-]: GETTABLE  R7 R7 K13    ; R7 := R7[0x55f27c30]
 29 [-]: DIV       R8 R5 R3     ; R8 := R5 / R3
 30 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 31 [-]: GETTABLE  R8 R0 K14    ; R8 := R0["FocusGained"]
 32 [-]: GETUPVAL  R9 U1        ; R9 := U1
 33 [-]: MOVE      R10 R4       ; R10 := R4
 34 [-]: MOVE      R11 R8       ; R11 := R8
 35 [-]: LOADKB    R12 1 0      ; R12 := true
 36 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 37 [-]: GETUPVAL  R10 U1       ; R10 := U1
 38 [-]: MOVE      R11 R4       ; R11 := R4
 39 [-]: MOVE      R12 R5       ; R12 := R5
 40 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 41 [-]: GETUPVAL  R11 U2       ; R11 := U2
 42 [-]: GETTABLE  R11 R11 K15  ; R11 := R11[0xae6791ba]
 43 [-]: GETGLOBAL R12 K16      ; R12 := 0xae91e43b
 44 [-]: MOVE      R13 R1       ; R13 := R1
 45 [-]: GETTABLE  R14 R0 K17   ; R14 := R0["Name"]
 46 [-]: LOADNIL   R15 R15      ; R15 := nil
 47 [-]: MOVE      R16 R9       ; R16 := R9
 48 [-]: MOVE      R17 R10      ; R17 := R10
 49 [-]: CALL      R11 7 2      ; R11 := R11(R12,R13,R14,R15,R16,R17)
 50 [-]: GETUPVAL  R12 U3       ; R12 := U3
 51 [-]: MOVE      R13 R11      ; R13 := R11
 52 [-]: CALL      R12 2 1      ; R12(R13)
 53 [-]: SELF      R12 R11 K18  ; R13 := R11; R12 := R11[0x71e9ac81]
 54 [-]: CALL      R12 2 1      ; R12(R13)
 55 [-]: SELF      R12 R11 K19  ; R13 := R11; R12 := R11[0x99dac1e9]
 56 [-]: NEWTABLE  R14 1 0      ; R14 := {}
 57 [-]: MOVE      R15 R6       ; R15 := R6
 58 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
 59 [-]: MOVE      R15 R3       ; R15 := R3
 60 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 61 [-]: SETTABLE  R0 K5 R11    ; R0["ProgressInfo"] := R11
 62 [-]: CONST     R12 0        ; R12 := 0.000000
 63 [-]: ADD       R13 R5 R8    ; R13 := R5 + R8
 64 [-]: SETTABLE  R0 K20 R13   ; R0["TotalFocus"] := R13
 65 [-]: TEST      R2 0         ; if not R2 then PC := 117
 66 [-]: JMP       117          ; PC := 117
 67 [-]: LOADKB    R13 1 0      ; R13 := true
 68 [-]: CLOSURE   R14 0        ; R14 := closure(Function #100.1)
 69 [-]: MOVE      R0 R13       ; R0 := R13
 70 [-]: GETUPVAL  R0 U4        ; R0 := U4
 71 [-]: MOVE      R0 R8        ; R0 := R8
 72 [-]: MOVE      R0 R5        ; R0 := R5
 73 [-]: MOVE      R0 R3        ; R0 := R3
 74 [-]: MOVE      R0 R7        ; R0 := R7
 75 [-]: MOVE      R0 R12       ; R0 := R12
 76 [-]: MOVE      R0 R6        ; R0 := R6
 77 [-]: MOVE      R0 R11       ; R0 := R11
 78 [-]: MOVE      R0 R10       ; R0 := R10
 79 [-]: GETUPVAL  R0 U1        ; R0 := U1
 80 [-]: MOVE      R0 R4        ; R0 := R4
 81 [-]: MOVE      R0 R0        ; R0 := R0
 82 [-]: MOVE      R0 R9        ; R0 := R9
 83 [-]: EQ        1 R8 K21     ; if R8 == 0.000000 then PC := 114
 84 [-]: JMP       114          ; PC := 114
 85 [-]: GETUPVAL  R15 U5       ; R15 := U5
 86 [-]: CONST     R16 1        ; R16 := 1.000000
 87 [-]: LOADKB    R17 1 0      ; R17 := true
 88 [-]: CALL      R15 3 1      ; R15(R16,R17)
 89 [-]: GETGLOBAL R15 K22      ; R15 := 0x42dcc9f5
 90 [-]: GETGLOBAL R16 K23      ; R16 := PROGRESS_BAR_FILL_XP_PER_SECOND
 91 [-]: DIV       R16 R8 R16   ; R16 := R8 / R16
 92 [-]: GETGLOBAL R17 K24      ; R17 := PROGRESS_BAR_FILL_MIN_SECONDS
 93 [-]: GETGLOBAL R18 K25      ; R18 := PROGRESS_BAR_FILL_MAX_SECONDS
 94 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 95 [-]: GETGLOBAL R16 K26      ; R16 := 0x25312c9b
 96 [-]: GETGLOBAL R17 K16      ; R17 := 0xae91e43b
 97 [-]: MOVE      R18 R1       ; R18 := R1
 98 [-]: CONST     R19 0        ; R19 := 0.000000
 99 [-]: NEWTABLE  R20 1 0      ; R20 := {}
100 [-]: MOVE      R21 R14      ; R21 := R14
101 [-]: SETLIST   R20 1 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
102 [-]: NEWTABLE  R21 1 0      ; R21 := {}
103 [-]: CONST     R22 1        ; R22 := 1.000000
104 [-]: SETLIST   R21 1 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
105 [-]: MOVE      R22 R15      ; R22 := R15
106 [-]: CONST     R23 2        ; R23 := 2.000000
107 [-]: CLOSURE   R24 1        ; R24 := closure(Function #100.2)
108 [-]: GETUPVAL  R0 U5        ; R0 := U5
109 [-]: GETUPVAL  R0 U6        ; R0 := U6
110 [-]: GETUPVAL  R0 U7        ; R0 := U7
111 [-]: MOVE      R0 R0        ; R0 := R0
112 [-]: CALL      R16 9 1      ; R16(R17,R18,R19,R20,R21,R22,R23,R24)
113 [-]: JMP       115          ; PC := 115
114 [-]: SETTABLE  R0 K6 K28    ; R0["InterpingFocusGain"] := false
115 [-]: CLOSE     R13          ; SAVE R13,...
116 [-]: JMP       140          ; PC := 140
117 [-]: ADD       R13 R5 R8    ; R13 := R5 + R8
118 [-]: GETGLOBAL R14 K12      ; R14 := 0x5bced4c4
119 [-]: GETTABLE  R14 R14 K13  ; R14 := R14[0x55f27c30]
120 [-]: DIV       R15 R13 R3   ; R15 := R13 / R3
121 [-]: CALL      R14 2 2      ; R14 := R14(R15)
122 [-]: LT        0 R7 R14     ; if R7 >= R14 then PC := 126
123 [-]: JMP       126          ; PC := 126
124 [-]: MOD       R8 R13 R3    ; R8 := R13 % R3
125 [-]: CONST     R6 0         ; R6 := 0.000000
126 [-]: SELF      R14 R11 K19  ; R15 := R11; R14 := R11[0x99dac1e9]
127 [-]: NEWTABLE  R16 2 0      ; R16 := {}
128 [-]: MOVE      R17 R6       ; R17 := R6
129 [-]: MOVE      R18 R8       ; R18 := R8
130 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
131 [-]: MOVE      R17 R3       ; R17 := R3
132 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
133 [-]: SELF      R14 R11 K29  ; R15 := R11; R14 := R11[0x9b71e815]
134 [-]: GETTABLE  R16 R0 K17   ; R16 := R0["Name"]
135 [-]: LOADNIL   R17 R17      ; R17 := nil
136 [-]: MOVE      R18 R9       ; R18 := R9
137 [-]: MOVE      R19 R10      ; R19 := R10
138 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
139 [-]: SETTABLE  R0 K6 K28    ; R0["InterpingFocusGain"] := false
140 [-]: RETURN    R0 1         ; return 


; Function #100.1:
;
; Name:            
; Defined at line: 3669
; #Upvalues:       14
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: LOADKB    R1 0 0       ; R1 := false
  7 [-]: SETUPVAL  R1 U0        ; U82 := R0
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
 10 [-]: GETUPVAL  R2 U3        ; R2 := U3
 11 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 12 [-]: GETGLOBAL R3 K0        ; R3 := 0x5bced4c4
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x55f27c30]
 14 [-]: GETUPVAL  R4 U4        ; R4 := U4
 15 [-]: DIV       R4 R2 R4     ; R4 := R2 / R4
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: GETUPVAL  R4 U5        ; R4 := U5
 18 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETUPVAL  R3 U6        ; R3 := U6
 21 [-]: GETUPVAL  R4 U4        ; R4 := U4
 22 [-]: GETUPVAL  R5 U7        ; R5 := U7
 23 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 24 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 25 [-]: SETUPVAL  R3 U6        ; U82 := R6
 26 [-]: GETGLOBAL R3 K0        ; R3 := 0x5bced4c4
 27 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x55f27c30]
 28 [-]: GETUPVAL  R4 U4        ; R4 := U4
 29 [-]: DIV       R4 R2 R4     ; R4 := R2 / R4
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: SETUPVAL  R3 U5        ; U82 := R5
 32 [-]: CONST     R3 0         ; R3 := 0.000000
 33 [-]: SETUPVAL  R3 U7        ; U82 := R7
 34 [-]: GETUPVAL  R3 U8        ; R3 := U8
 35 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0x99dac1e9]
 36 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 37 [-]: GETUPVAL  R6 U7        ; R6 := U7
 38 [-]: GETUPVAL  R7 U6        ; R7 := U6
 39 [-]: SUB       R7 R1 R7     ; R7 := R1 - R7
 40 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 41 [-]: GETUPVAL  R6 U4        ; R6 := U4
 42 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 43 [-]: GETUPVAL  R3 U10       ; R3 := U10
 44 [-]: GETUPVAL  R4 U11       ; R4 := U11
 45 [-]: GETUPVAL  R5 U3        ; R5 := U3
 46 [-]: ADD       R5 R5 R1     ; R5 := R5 + R1
 47 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 48 [-]: SETUPVAL  R3 U9        ; U82 := R9
 49 [-]: GETUPVAL  R3 U8        ; R3 := U8
 50 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x9b71e815]
 51 [-]: GETUPVAL  R5 U12       ; R5 := U12
 52 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["Name"]
 53 [-]: LOADNIL   R6 R6        ; R6 := nil
 54 [-]: GETUPVAL  R7 U13       ; R7 := U13
 55 [-]: GETUPVAL  R8 U9        ; R8 := U9
 56 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 57 [-]: RETURN    R0 1         ; return 


; Function #100.2:
;
; Name:            
; Defined at line: 3710
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CONST     R1 -1        ; R1 := -1.000000
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xb73d420f]
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0xc14ccd98
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["UI_MODE_IN_GAME"]
 14 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x659d451f]
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0xc14ccd98
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: GETUPVAL  R1 U3        ; R1 := U3
 21 [-]: SETTABLE  R1 K5 K6     ; R1["InterpingFocusGain"] := false
 22 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 3738
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  54

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["ItemType"]
  6 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
  7 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Item"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 0         ; if not R3 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R3 K5        ; R3 := 0xb009bbc6
 12 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["ItemType"]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: SETTABLE  R0 K4 R3     ; R0["Item"] := R3
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 0         ; if not R3 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["Item"]
 21 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 22 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["Icon"]
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 0         ; if not R3 then PC := 38
 25 [-]: JMP       38           ; PC := 38
 26 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 27 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Item"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 38
 30 [-]: JMP       38           ; PC := 38
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x056dcf06]
 33 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Item"]
 34 [-]: LOADKB    R5 1 0       ; R5 := true
 35 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 36 [-]: SETTABLE  R0 K7 R4     ; R0["Themed"] := R4
 37 [-]: SETTABLE  R0 K6 R3     ; R0["Icon"] := R3
 38 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["LocTag"]
 39 [-]: TEST      R3 1         ; if R3 then PC := 52
 40 [-]: JMP       52           ; PC := 52
 41 [-]: GETGLOBAL R4 K3        ; R4 := 0x7b998233
 42 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["Item"]
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: TEST      R4 1         ; if R4 then PC := 52
 45 [-]: JMP       52           ; PC := 52
 46 [-]: GETGLOBAL R4 K10       ; R4 := 0x64fb1586
 47 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["Item"]
 48 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xd3a9d01f]
 49 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 50 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 51 [-]: MOVE      R3 R4        ; R3 := R4
 52 [-]: LOADK     R4 K12       ; R4 := ""
 53 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 54 [-]: MOVE      R6 R3        ; R6 := R3
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: TEST      R5 1         ; if R5 then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETGLOBAL R5 K13       ; R5 := 0x6c97a788
 59 [-]: GETTABLE  R5 R5 K14    ; R5 := R5[0x834628e8]
 60 [-]: MOVE      R6 R3        ; R6 := R3
 61 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 62 [-]: MOVE      R4 R5        ; R4 := R5
 63 [-]: EQ        0 R4 K12     ; if R4 ~= "" then PC := 71
 64 [-]: JMP       71           ; PC := 71
 65 [-]: GETGLOBAL R5 K15       ; R5 := 0xae91e43b
 66 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0x42b04007]
 67 [-]: MOVE      R7 R3        ; R7 := R3
 68 [-]: LOADKB    R8 1 0       ; R8 := true
 69 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 70 [-]: MOVE      R4 R5        ; R4 := R5
 71 [-]: LOADKB    R5 0 0       ; R5 := false
 72 [-]: GETTABLE  R6 R0 K17    ; R6 := R0["Slot"]
 73 [-]: EQ        0 R6 K18     ; if R6 ~= 0.000000 then PC := 92
 74 [-]: JMP       92           ; PC := 92
 75 [-]: GETTABLE  R6 R0 K19    ; R6 := R0["LoadoutType"]
 76 [-]: EQ        0 R6 K20     ; if R6 ~= 1.000000 then PC := 84
 77 [-]: JMP       84           ; PC := 84
 78 [-]: GETGLOBAL R6 K21       ; R6 := mPetName
 79 [-]: EQ        1 R6 K12     ; if R6 == "" then PC := 84
 80 [-]: JMP       84           ; PC := 84
 81 [-]: GETGLOBAL R4 K21       ; R4 := mPetName
 82 [-]: LOADKB    R5 1 0       ; R5 := true
 83 [-]: JMP       92           ; PC := 92
 84 [-]: GETTABLE  R6 R0 K19    ; R6 := R0["LoadoutType"]
 85 [-]: EQ        0 R6 K22     ; if R6 ~= 6.000000 then PC := 92
 86 [-]: JMP       92           ; PC := 92
 87 [-]: GETGLOBAL R6 K23       ; R6 := mKDriveName
 88 [-]: EQ        1 R6 K12     ; if R6 == "" then PC := 92
 89 [-]: JMP       92           ; PC := 92
 90 [-]: GETGLOBAL R4 K23       ; R4 := mKDriveName
 91 [-]: LOADKB    R5 1 0       ; R5 := true
 92 [-]: TEST      R5 0         ; if not R5 then PC := 106
 93 [-]: JMP       106          ; PC := 106
 94 [-]: GETGLOBAL R6 K24       ; R6 := 0x34291f5c
 95 [-]: GETTABLE  R6 R6 K25    ; R6 := R6[0xa7a2e381]
 96 [-]: CALL      R6 1 2       ; R6 := R6()
 97 [-]: TEST      R6 0         ; if not R6 then PC := 106
 98 [-]: JMP       106          ; PC := 106
 99 [-]: GETGLOBAL R6 K15       ; R6 := 0xae91e43b
100 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xe261aa96]
101 [-]: MOVE      R8 R1        ; R8 := R1
102 [-]: LOADK     R9 K27       ; R9 := "Name"
103 [-]: CONST     R10 41       ; R10 := 41.000000
104 [-]: LOADK     R11 K28      ; R11 := "Arial Unicode MS"
105 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
106 [-]: GETGLOBAL R6 K29       ; R6 := 0x76ea806b
107 [-]: SELF      R6 R6 K30    ; R7 := R6; R6 := R6[0x3f3ae64c]
108 [-]: CONST     R8 0         ; R8 := 0.000000
109 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
110 [-]: SELF      R7 R6 K31    ; R8 := R6; R7 := R6[0x80563238]
111 [-]: CALL      R7 2 2       ; R7 := R7(R8)
112 [-]: SELF      R8 R7 K32    ; R9 := R7; R8 := R7[0x62c81b76]
113 [-]: CALL      R8 2 2       ; R8 := R8(R9)
114 [-]: SELF      R9 R8 K33    ; R10 := R8; R9 := R8[0xb61abfd2]
115 [-]: GETTABLE  R11 R0 K19   ; R11 := R0["LoadoutType"]
116 [-]: GETTABLE  R12 R0 K17   ; R12 := R0["Slot"]
117 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
118 [-]: LOADNIL   R10 R10      ; R10 := nil
119 [-]: GETGLOBAL R11 K34      ; R11 := mAffinityGrid
120 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["ArchivedLoadout"]
121 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 131
122 [-]: JMP       131          ; PC := 131
123 [-]: GETGLOBAL R11 K3       ; R11 := 0x7b998233
124 [-]: GETTABLE  R12 R0 K36   ; R12 := R0["Expiry"]
125 [-]: CALL      R11 2 2      ; R11 := R11(R12)
126 [-]: TEST      R11 1        ; if R11 then PC := 154
127 [-]: JMP       154          ; PC := 154
128 [-]: GETTABLE  R11 R0 K36   ; R11 := R0["Expiry"]
129 [-]: GETTABLE  R10 R11 K37  ; R10 := R11["sec"]
130 [-]: JMP       154          ; PC := 154
131 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 154
132 [-]: JMP       154          ; PC := 154
133 [-]: SELF      R11 R6 K31   ; R12 := R6; R11 := R6[0x80563238]
134 [-]: CALL      R11 2 2      ; R11 := R11(R12)
135 [-]: SELF      R11 R11 K38  ; R12 := R11; R11 := R11[0x25a6e75e]
136 [-]: CALL      R11 2 2      ; R11 := R11(R12)
137 [-]: SELF      R11 R11 K39  ; R12 := R11; R11 := R11[0xc70965fe]
138 [-]: GETTABLE  R13 R9 K40   ; R13 := R9["mItemId"]
139 [-]: GETTABLE  R13 R13 K41  ; R13 := R13["mId"]
140 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
141 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 154
142 [-]: JMP       154          ; PC := 154
143 [-]: GETTABLE  R12 R11 K42  ; R12 := R11["mItemType"]
144 [-]: EQ        1 R12 R2     ; if R12 == R2 then PC := 148
145 [-]: JMP       148          ; PC := 148
146 [-]: CONST     R10 0        ; R10 := 0.000000
147 [-]: JMP       154          ; PC := 154
148 [-]: SELF      R13 R11 K43  ; R14 := R11; R13 := R11[0xba568eef]
149 [-]: CALL      R13 2 2      ; R13 := R13(R14)
150 [-]: TEST      R13 0        ; if not R13 then PC := 154
151 [-]: JMP       154          ; PC := 154
152 [-]: GETTABLE  R13 R11 K44  ; R13 := R11["mExpiry"]
153 [-]: GETTABLE  R10 R13 K37  ; R10 := R13["sec"]
154 [-]: GETGLOBAL R13 K45      ; R13 := 0xa94df70b
155 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0x757f0100]
156 [-]: MOVE      R15 R2       ; R15 := R2
157 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
158 [-]: GETGLOBAL R14 K45      ; R14 := 0xa94df70b
159 [-]: SELF      R14 R14 K47  ; R15 := R14; R14 := R14[0x84fb4327]
160 [-]: MOVE      R16 R2       ; R16 := R2
161 [-]: GETTABLE  R17 R9 K48   ; R17 := R9["mPolarized"]
162 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
163 [-]: GETGLOBAL R15 K49      ; R15 := 0x5bced4c4
164 [-]: GETTABLE  R15 R15 K50  ; R15 := R15[0xac1b386a]
165 [-]: MOVE      R16 R14      ; R16 := R14
166 [-]: GETUPVAL  R17 U1       ; R17 := U1
167 [-]: GETTABLE  R18 R0 K51   ; R18 := R0["StartXp"]
168 [-]: MOVE      R19 R2       ; R19 := R2
169 [-]: CALL      R17 3 0      ; R17,... := R17(R18,R19)
170 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
171 [-]: EQ        1 R15 R14    ; if R15 == R14 then PC := 180
172 [-]: JMP       180          ; PC := 180
173 [-]: GETTABLE  R16 R0 K52   ; R16 := R0["FocusXp"]
174 [-]: EQ        1 R16 K1     ; if R16 == nil then PC := 180
175 [-]: JMP       180          ; PC := 180
176 [-]: GETTABLE  R16 R0 K52   ; R16 := R0["FocusXp"]
177 [-]: EQ        1 R16 K18    ; if R16 == 0.000000 then PC := 180
178 [-]: JMP       180          ; PC := 180
179 [-]: MOVE      R15 R14      ; R15 := R14
180 [-]: CLOSURE   R16 0        ; R16 := closure(Function #101.1)
181 [-]: MOVE      R0 R10       ; R0 := R10
182 [-]: GETUPVAL  R0 U2        ; R0 := U2
183 [-]: MOVE      R0 R13       ; R0 := R13
184 [-]: GETGLOBAL R17 K53      ; R17 := _T
185 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["eomScreenMode"]
186 [-]: GETUPVAL  R18 U3       ; R18 := U3
187 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["QUICK_PREVIEW"]
188 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 193
189 [-]: JMP       193          ; PC := 193
190 [-]: GETTABLE  R17 R0 K56   ; R17 := R0["ProgressInfo"]
191 [-]: EQ        1 R17 K1     ; if R17 == nil then PC := 194
192 [-]: JMP       194          ; PC := 194
193 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 194
194 [-]: LOADKB    R17 1 0      ; R17 := true
195 [-]: GETGLOBAL R18 K45      ; R18 := 0xa94df70b
196 [-]: SELF      R18 R18 K57  ; R19 := R18; R18 := R18[0x54c107f9]
197 [-]: GETTABLE  R20 R0 K51   ; R20 := R0["StartXp"]
198 [-]: MOVE      R21 R2       ; R21 := R2
199 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
200 [-]: GETGLOBAL R19 K45      ; R19 := 0xa94df70b
201 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0x4d058675]
202 [-]: GETTABLE  R21 R0 K51   ; R21 := R0["StartXp"]
203 [-]: MOVE      R22 R2       ; R22 := R2
204 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
205 [-]: GETUPVAL  R20 U4       ; R20 := U4
206 [-]: GETTABLE  R20 R20 K59  ; R20 := R20[0x06d055f9]
207 [-]: EQ        1 R19 K18    ; if R19 == 0.000000 then PC := 210
208 [-]: JMP       210          ; PC := 210
209 [-]: LOADKB    R21 0 1      ; R21 := false; PC := 210
210 [-]: LOADKB    R21 1 0      ; R21 := true
211 [-]: GETTABLE  R22 R0 K51   ; R22 := R0["StartXp"]
212 [-]: MOVE      R23 R19      ; R23 := R19
213 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
214 [-]: SUB       R20 R20 R18  ; R20 := R20 - R18
215 [-]: GETGLOBAL R21 K60      ; R21 := 0x7f5022cf
216 [-]: GETTABLE  R21 R21 K61  ; R21 := R21[0x3f3e4d12]
217 [-]: MOVE      R22 R4       ; R22 := R4
218 [-]: CALL      R21 2 2      ; R21 := R21(R22)
219 [-]: GETGLOBAL R22 K15      ; R22 := 0xae91e43b
220 [-]: SELF      R22 R22 K62  ; R23 := R22; R22 := R22[0x20b98db3]
221 [-]: MOVE      R24 R1       ; R24 := R1
222 [-]: LOADK     R25 K63      ; R25 := ".Ratio.Label.text"
223 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
224 [-]: LOADK     R25 K64      ; R25 := "/Lotus/Language/Menu/EndOfMatch_XP"
225 [-]: NEWTABLE  R26 0 1      ; R26 := {}
226 [-]: GETUPVAL  R27 U4       ; R27 := U4
227 [-]: GETTABLE  R27 R27 K66  ; R27 := R27[0x1142c7a8]
228 [-]: GETTABLE  R28 R0 K67   ; R28 := R0["XpGain"]
229 [-]: CALL      R27 2 2      ; R27 := R27(R28)
230 [-]: SETTABLE  R26 K65 R27  ; R26["XP"] := R27
231 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
232 [-]: GETGLOBAL R22 K15      ; R22 := 0xae91e43b
233 [-]: SELF      R22 R22 K68  ; R23 := R22; R22 := R22[0x91a24e4b]
234 [-]: MOVE      R24 R1       ; R24 := R1
235 [-]: LOADK     R25 K69      ; R25 := ".Ratio.Label"
236 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
237 [-]: CONST     R25 33       ; R25 := 33.000000
238 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
239 [-]: GETGLOBAL R23 K15      ; R23 := 0xae91e43b
240 [-]: SELF      R23 R23 K62  ; R24 := R23; R23 := R23[0x20b98db3]
241 [-]: MOVE      R25 R1       ; R25 := R1
242 [-]: LOADK     R26 K63      ; R26 := ".Ratio.Label.text"
243 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
244 [-]: LOADK     R26 K70      ; R26 := "/Lotus/Language/Menu/EndOfMatch_Bonus"
245 [-]: NEWTABLE  R27 0 1      ; R27 := {}
246 [-]: GETUPVAL  R28 U4       ; R28 := U4
247 [-]: GETTABLE  R28 R28 K66  ; R28 := R28[0x1142c7a8]
248 [-]: GETTABLE  R29 R0 K71   ; R29 := R0["XpBonus"]
249 [-]: CALL      R28 2 2      ; R28 := R28(R29)
250 [-]: SETTABLE  R27 K65 R28  ; R27["XP"] := R28
251 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
252 [-]: GETGLOBAL R23 K15      ; R23 := 0xae91e43b
253 [-]: SELF      R23 R23 K68  ; R24 := R23; R23 := R23[0x91a24e4b]
254 [-]: MOVE      R25 R1       ; R25 := R1
255 [-]: LOADK     R26 K69      ; R26 := ".Ratio.Label"
256 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
257 [-]: CONST     R26 33       ; R26 := 33.000000
258 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
259 [-]: GETGLOBAL R24 K72      ; R24 := 0x603636ad
260 [-]: LOADK     R25 K64      ; R25 := "/Lotus/Language/Menu/EndOfMatch_XP"
261 [-]: NEWTABLE  R26 0 1      ; R26 := {}
262 [-]: GETUPVAL  R27 U4       ; R27 := U4
263 [-]: GETTABLE  R27 R27 K66  ; R27 := R27[0x1142c7a8]
264 [-]: CONST     R28 0        ; R28 := 0.000000
265 [-]: CALL      R27 2 2      ; R27 := R27(R28)
266 [-]: SETTABLE  R26 K65 R27  ; R26["XP"] := R27
267 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
268 [-]: GETUPVAL  R25 U5       ; R25 := U5
269 [-]: GETTABLE  R25 R25 K73  ; R25 := R25[0xae6791ba]
270 [-]: GETGLOBAL R26 K15      ; R26 := 0xae91e43b
271 [-]: MOVE      R27 R1       ; R27 := R1
272 [-]: MOVE      R28 R21      ; R28 := R21
273 [-]: LOADK     R29 K74      ; R29 := "\r"
274 [-]: MOVE      R30 R16      ; R30 := R16
275 [-]: MOVE      R31 R15      ; R31 := R15
276 [-]: CALL      R30 2 2      ; R30 := R30(R31)
277 [-]: CONCAT    R28 R28 R30  ; R28 := R28 .. R29 .. R30
278 [-]: MOVE      R29 R24      ; R29 := R24
279 [-]: LOADNIL   R30 R30      ; R30 := nil
280 [-]: LOADK     R31 K75      ; R31 := " "
281 [-]: CALL      R25 7 2      ; R25 := R25(R26,R27,R28,R29,R30,R31)
282 [-]: GETUPVAL  R26 U6       ; R26 := U6
283 [-]: MOVE      R27 R25      ; R27 := R25
284 [-]: CALL      R26 2 1      ; R26(R27)
285 [-]: SETTABLE  R25 K76 R22  ; R25["mBarLeftTextWidth"] := R22
286 [-]: SETTABLE  R25 K77 R23  ; R25["mBarRightTextWidth"] := R23
287 [-]: SETTABLE  R25 K78 K79  ; R25["mToUpper"] := false
288 [-]: SELF      R26 R25 K80  ; R27 := R25; R26 := R25[0x99dac1e9]
289 [-]: NEWTABLE  R28 1 0      ; R28 := {}
290 [-]: GETTABLE  R29 R0 K51   ; R29 := R0["StartXp"]
291 [-]: SUB       R29 R29 R18  ; R29 := R29 - R18
292 [-]: SETLIST   R28 1 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 1
293 [-]: MOVE      R29 R20      ; R29 := R20
294 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
295 [-]: SELF      R26 R25 K81  ; R27 := R25; R26 := R25[0x71e9ac81]
296 [-]: CALL      R26 2 1      ; R26(R27)
297 [-]: SETTABLE  R0 K56 R25   ; R0["ProgressInfo"] := R25
298 [-]: EQ        1 R10 K1     ; if R10 == nil then PC := 301
299 [-]: JMP       301          ; PC := 301
300 [-]: RETURN    R0 1         ; return 
301 [-]: CLOSURE   R26 1        ; R26 := closure(Function #101.2)
302 [-]: MOVE      R0 R25       ; R0 := R25
303 [-]: MOVE      R0 R21       ; R0 := R21
304 [-]: MOVE      R0 R16       ; R0 := R16
305 [-]: MOVE      R0 R15       ; R0 := R15
306 [-]: CLOSURE   R27 2        ; R27 := closure(Function #101.3)
307 [-]: MOVE      R0 R26       ; R0 := R26
308 [-]: MOVE      R0 R10       ; R0 := R10
309 [-]: MOVE      R0 R27       ; R0 := R27
310 [-]: GETGLOBAL R28 K3       ; R28 := 0x7b998233
311 [-]: GETGLOBAL R29 K82      ; R29 := mTimerMgr
312 [-]: CALL      R28 2 2      ; R28 := R28(R29)
313 [-]: TEST      R28 1        ; if R28 then PC := 319
314 [-]: JMP       319          ; PC := 319
315 [-]: TEST      R10 0        ; if not R10 then PC := 319
316 [-]: JMP       319          ; PC := 319
317 [-]: MOVE      R28 R27      ; R28 := R27
318 [-]: CALL      R28 1 1      ; R28()
319 [-]: GETTABLE  R28 R0 K51   ; R28 := R0["StartXp"]
320 [-]: SUB       R28 R28 R18  ; R28 := R28 - R18
321 [-]: CONST     R29 0        ; R29 := 0.000000
322 [-]: CONST     R30 0        ; R30 := 0.000000
323 [-]: CONST     R31 0        ; R31 := 0.000000
324 [-]: LOADKB    R32 0 0      ; R32 := false
325 [-]: MOVE      R33 R24      ; R33 := R24
326 [-]: LOADK     R34 K75      ; R34 := " "
327 [-]: CONST     R35 0        ; R35 := 0.000000
328 [-]: CLOSURE   R36 3        ; R36 := closure(Function #101.4)
329 [-]: MOVE      R0 R15       ; R0 := R15
330 [-]: MOVE      R0 R14       ; R0 := R14
331 [-]: GETUPVAL  R0 U1        ; R0 := U1
332 [-]: MOVE      R0 R2        ; R0 := R2
333 [-]: MOVE      R0 R18       ; R0 := R18
334 [-]: MOVE      R0 R19       ; R0 := R19
335 [-]: MOVE      R0 R20       ; R0 := R20
336 [-]: MOVE      R0 R28       ; R0 := R28
337 [-]: MOVE      R0 R32       ; R0 := R32
338 [-]: MOVE      R0 R29       ; R0 := R29
339 [-]: MOVE      R0 R31       ; R0 := R31
340 [-]: MOVE      R0 R35       ; R0 := R35
341 [-]: MOVE      R0 R30       ; R0 := R30
342 [-]: CLOSURE   R37 4        ; R37 := closure(Function #101.5)
343 [-]: MOVE      R0 R33       ; R0 := R33
344 [-]: MOVE      R0 R24       ; R0 := R24
345 [-]: MOVE      R0 R34       ; R0 := R34
346 [-]: MOVE      R0 R32       ; R0 := R32
347 [-]: MOVE      R0 R31       ; R0 := R31
348 [-]: MOVE      R0 R25       ; R0 := R25
349 [-]: MOVE      R0 R28       ; R0 := R28
350 [-]: MOVE      R0 R29       ; R0 := R29
351 [-]: MOVE      R0 R20       ; R0 := R20
352 [-]: GETUPVAL  R0 U4        ; R0 := U4
353 [-]: MOVE      R0 R30       ; R0 := R30
354 [-]: MOVE      R0 R0        ; R0 := R0
355 [-]: MOVE      R0 R21       ; R0 := R21
356 [-]: MOVE      R0 R16       ; R0 := R16
357 [-]: TEST      R17 0        ; if not R17 then PC := 416
358 [-]: JMP       416          ; PC := 416
359 [-]: GETTABLE  R38 R0 K67   ; R38 := R0["XpGain"]
360 [-]: GETTABLE  R39 R0 K51   ; R39 := R0["StartXp"]
361 [-]: LOADKB    R40 1 0      ; R40 := true
362 [-]: CLOSURE   R41 5        ; R41 := closure(Function #101.6)
363 [-]: MOVE      R0 R40       ; R0 := R40
364 [-]: GETUPVAL  R0 U7        ; R0 := U7
365 [-]: MOVE      R0 R38       ; R0 := R38
366 [-]: MOVE      R0 R39       ; R0 := R39
367 [-]: MOVE      R0 R18       ; R0 := R18
368 [-]: MOVE      R0 R19       ; R0 := R19
369 [-]: MOVE      R0 R36       ; R0 := R36
370 [-]: MOVE      R0 R37       ; R0 := R37
371 [-]: MOVE      R0 R15       ; R0 := R15
372 [-]: CLOSURE   R42 6        ; R42 := closure(Function #101.7)
373 [-]: GETUPVAL  R0 U8        ; R0 := U8
374 [-]: GETUPVAL  R0 U2        ; R0 := U2
375 [-]: GETUPVAL  R0 U4        ; R0 := U4
376 [-]: CLOSURE   R43 7        ; R43 := closure(Function #101.8)
377 [-]: MOVE      R0 R38       ; R0 := R38
378 [-]: MOVE      R0 R0        ; R0 := R0
379 [-]: MOVE      R0 R39       ; R0 := R39
380 [-]: MOVE      R0 R32       ; R0 := R32
381 [-]: MOVE      R0 R29       ; R0 := R29
382 [-]: MOVE      R0 R31       ; R0 := R31
383 [-]: MOVE      R0 R15       ; R0 := R15
384 [-]: MOVE      R0 R14       ; R0 := R14
385 [-]: MOVE      R0 R1        ; R0 := R1
386 [-]: MOVE      R0 R41       ; R0 := R41
387 [-]: MOVE      R0 R42       ; R0 := R42
388 [-]: EQ        1 R15 R14    ; if R15 == R14 then PC := 414
389 [-]: JMP       414          ; PC := 414
390 [-]: GETUPVAL  R44 U8       ; R44 := U8
391 [-]: CONST     R45 1        ; R45 := 1.000000
392 [-]: LOADKB    R46 1 0      ; R46 := true
393 [-]: CALL      R44 3 1      ; R44(R45,R46)
394 [-]: GETGLOBAL R44 K83      ; R44 := 0x42dcc9f5
395 [-]: GETGLOBAL R45 K84      ; R45 := PROGRESS_BAR_FILL_XP_PER_SECOND
396 [-]: DIV       R45 R38 R45  ; R45 := R38 / R45
397 [-]: GETGLOBAL R46 K85      ; R46 := PROGRESS_BAR_FILL_MIN_SECONDS
398 [-]: GETGLOBAL R47 K86      ; R47 := PROGRESS_BAR_FILL_MAX_SECONDS
399 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
400 [-]: GETGLOBAL R45 K87      ; R45 := 0x25312c9b
401 [-]: GETGLOBAL R46 K15      ; R46 := 0xae91e43b
402 [-]: MOVE      R47 R1       ; R47 := R1
403 [-]: CONST     R48 0        ; R48 := 0.000000
404 [-]: NEWTABLE  R49 1 0      ; R49 := {}
405 [-]: MOVE      R50 R41      ; R50 := R41
406 [-]: SETLIST   R49 1 1      ; R49[(1-1)*FPF+i] := R(49+i), 1 <= i <= 1
407 [-]: NEWTABLE  R50 1 0      ; R50 := {}
408 [-]: CONST     R51 1        ; R51 := 1.000000
409 [-]: SETLIST   R50 1 1      ; R50[(1-1)*FPF+i] := R(50+i), 1 <= i <= 1
410 [-]: MOVE      R51 R44      ; R51 := R44
411 [-]: CONST     R52 1        ; R52 := 1.000000
412 [-]: MOVE      R53 R43      ; R53 := R43
413 [-]: CALL      R45 9 1      ; R45(R46,R47,R48,R49,R50,R51,R52,R53)
414 [-]: CLOSE     R38          ; SAVE R38,...
415 [-]: JMP       456          ; PC := 456
416 [-]: GETTABLE  R38 R0 K51   ; R38 := R0["StartXp"]
417 [-]: GETTABLE  R39 R0 K67   ; R39 := R0["XpGain"]
418 [-]: ADD       R38 R38 R39  ; R38 := R38 + R39
419 [-]: GETTABLE  R39 R0 K71   ; R39 := R0["XpBonus"]
420 [-]: ADD       R38 R38 R39  ; R38 := R38 + R39
421 [-]: LE        0 R19 R38    ; if R19 > R38 then PC := 426
422 [-]: JMP       426          ; PC := 426
423 [-]: MOVE      R39 R36      ; R39 := R36
424 [-]: MOVE      R40 R38      ; R40 := R38
425 [-]: CALL      R39 2 1      ; R39(R40)
426 [-]: GETGLOBAL R39 K49      ; R39 := 0x5bced4c4
427 [-]: GETTABLE  R39 R39 K89  ; R39 := R39[0xb62ecfe0]
428 [-]: CONST     R40 0        ; R40 := 0.000000
429 [-]: GETTABLE  R41 R0 K51   ; R41 := R0["StartXp"]
430 [-]: SUB       R41 R41 R18  ; R41 := R41 - R18
431 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
432 [-]: MOVE      R28 R39      ; R28 := R39
433 [-]: GETGLOBAL R39 K83      ; R39 := 0x42dcc9f5
434 [-]: GETTABLE  R40 R0 K51   ; R40 := R0["StartXp"]
435 [-]: GETTABLE  R41 R0 K67   ; R41 := R0["XpGain"]
436 [-]: ADD       R40 R40 R41  ; R40 := R40 + R41
437 [-]: SUB       R40 R40 R18  ; R40 := R40 - R18
438 [-]: CONST     R41 0        ; R41 := 0.000000
439 [-]: GETTABLE  R42 R0 K67   ; R42 := R0["XpGain"]
440 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
441 [-]: MOVE      R29 R39      ; R29 := R39
442 [-]: GETGLOBAL R39 K83      ; R39 := 0x42dcc9f5
443 [-]: GETTABLE  R40 R0 K51   ; R40 := R0["StartXp"]
444 [-]: SUB       R40 R18 R40  ; R40 := R18 - R40
445 [-]: GETTABLE  R41 R0 K67   ; R41 := R0["XpGain"]
446 [-]: SUB       R40 R40 R41  ; R40 := R40 - R41
447 [-]: CONST     R41 0        ; R41 := 0.000000
448 [-]: GETTABLE  R42 R0 K71   ; R42 := R0["XpBonus"]
449 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
450 [-]: MOVE      R30 R39      ; R30 := R39
451 [-]: LOADKB    R32 1 0      ; R32 := true
452 [-]: MOVE      R39 R37      ; R39 := R37
453 [-]: GETTABLE  R40 R0 K71   ; R40 := R0["XpBonus"]
454 [-]: MOVE      R41 R15      ; R41 := R15
455 [-]: CALL      R39 3 1      ; R39(R40,R41)
456 [-]: RETURN    R0 1         ; return 


; Function #101.1:
;
; Name:            
; Defined at line: 3829
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 32
  3 [-]: JMP       32           ; PC := 32
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x34291f5c
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0x397b920f]
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: LOADNIL   R3 R3        ; R3 := nil
  9 [-]: LE        0 R2 K3      ; if R2 > 0.000000 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 12 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 13 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Menu/Expired"
 14 [-]: LOADKB    R7 0 0       ; R7 := false
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: MOVE      R3 R4        ; R3 := R4
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x10e5bb7a]
 20 [-]: MOVE      R5 R2        ; R5 := R2
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 24 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 25 [-]: LOADK     R6 K8        ; R6 := "<TIMER>"
 26 [-]: LOADKB    R7 1 0       ; R7 := true
 27 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 28 [-]: MOVE      R5 R4        ; R5 := R4
 29 [-]: MOVE      R6 R3        ; R6 := R3
 30 [-]: CONCAT    R1 R5 R6     ; R1 := R5 .. R6
 31 [-]: JMP       59           ; PC := 59
 32 [-]: EQ        0 R0 K3      ; if R0 ~= 0.000000 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 35 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x42b04007]
 36 [-]: LOADK     R7 K9        ; R7 := "/Lotus/Language/Ranks/Rank0"
 37 [-]: LOADKB    R8 0 0       ; R8 := false
 38 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 39 [-]: MOVE      R1 R5        ; R1 := R5
 40 [-]: JMP       59           ; PC := 59
 41 [-]: GETUPVAL  R5 U2        ; R5 := U2
 42 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 45 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x42b04007]
 46 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Language/Ranks/MaxRank"
 47 [-]: LOADKB    R8 0 0       ; R8 := false
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R1 R5        ; R1 := R5
 50 [-]: JMP       59           ; PC := 59
 51 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 52 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x42b04007]
 53 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Language/Menu/Arsenal_Rank"
 54 [-]: LOADKB    R8 0 0       ; R8 := false
 55 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 56 [-]: LOADK     R6 K12       ; R6 := " "
 57 [-]: MOVE      R7 R0        ; R7 := R0
 58 [-]: CONCAT    R1 R5 R7     ; R1 := R5 .. R6 .. R7
 59 [-]: LOADK     R5 K13       ; R5 := "<font color=\"#Content\">"
 60 [-]: GETGLOBAL R6 K14       ; R6 := 0x7f5022cf
 61 [-]: GETTABLE  R6 R6 K15    ; R6 := R6[0x3f3e4d12]
 62 [-]: MOVE      R7 R1        ; R7 := R1
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: LOADK     R7 K16       ; R7 := "</font>"
 65 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 66 [-]: RETURN    R5 2         ; return R5
 67 [-]: RETURN    R0 1         ; return 


; Function #101.2:
;
; Name:            
; Defined at line: 3880
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x9b71e815]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: LOADK     R3 K1        ; R3 := "\r"
  5 [-]: GETUPVAL  R4 U2        ; R4 := U2
  6 [-]: GETUPVAL  R5 U3        ; R5 := U3
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mDesc"]
 11 [-]: LOADNIL   R4 R4        ; R4 := nil
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["mBotRightText"]
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #101.3:
;
; Name:            
; Defined at line: 3885
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x34291f5c
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0x397b920f]
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: LE        0 R0 K3      ; if R0 > 0.000000 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETGLOBAL R1 K4        ; R1 := mTimerMgr
 14 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xbd2e96ea]
 15 [-]: CONST     R3 1         ; R3 := 1.000000
 16 [-]: GETUPVAL  R4 U2        ; R4 := U2
 17 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #101.4:
;
; Name:            
; Defined at line: 3910
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0xac1b386a]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETUPVAL  R3 U2        ; R3 := U2
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: GETUPVAL  R5 U3        ; R5 := U3
  7 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
  8 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  9 [-]: SETUPVAL  R1 U0        ; U82 := R0
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0xa94df70b
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x54c107f9]
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: GETUPVAL  R4 U3        ; R4 := U3
 14 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 15 [-]: SETUPVAL  R1 U4        ; U82 := R4
 16 [-]: GETGLOBAL R1 K2        ; R1 := 0xa94df70b
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x4d058675]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: GETUPVAL  R4 U3        ; R4 := U3
 20 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 21 [-]: SETUPVAL  R1 U5        ; U82 := R5
 22 [-]: GETUPVAL  R1 U5        ; R1 := U5
 23 [-]: GETUPVAL  R2 U4        ; R2 := U4
 24 [-]: SUB       R1 R1 R2     ; R1 := R1 - R2
 25 [-]: SETUPVAL  R1 U6        ; U82 := R6
 26 [-]: CONST     R1 0         ; R1 := 0.000000
 27 [-]: SETUPVAL  R1 U7        ; U82 := R7
 28 [-]: GETUPVAL  R1 U8        ; R1 := U8
 29 [-]: TEST      R1 1         ; if R1 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETUPVAL  R1 U10       ; R1 := U10
 32 [-]: SETUPVAL  R1 U9        ; U82 := R9
 33 [-]: CONST     R1 1         ; R1 := 1.000000
 34 [-]: SETUPVAL  R1 U11       ; U82 := R11
 35 [-]: JMP       42           ; PC := 42
 36 [-]: CONST     R1 0         ; R1 := 0.000000
 37 [-]: SETUPVAL  R1 U9        ; U82 := R9
 38 [-]: GETUPVAL  R1 U10       ; R1 := U10
 39 [-]: SETUPVAL  R1 U12       ; U82 := R12
 40 [-]: CONST     R1 2         ; R1 := 2.000000
 41 [-]: SETUPVAL  R1 U11       ; U82 := R11
 42 [-]: RETURN    R0 1         ; return 


; Function #101.5:
;
; Name:            
; Defined at line: 3928
; #Upvalues:       14
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U1        ; R2 := U1
  2 [-]: SETUPVAL  R2 U0        ; U82 := R0
  3 [-]: LOADK     R2 K0        ; R2 := " "
  4 [-]: SETUPVAL  R2 U2        ; U82 := R2
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x03f57322
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TESTSET   R0 R2 1      ; if R2 then PC := 11 else R0 := R2
  9 [-]: JMP       11           ; PC := 11
 10 [-]: CONST     R0 0         ; R0 := 0.000000
 11 [-]: GETUPVAL  R2 U3        ; R2 := U3
 12 [-]: TEST      R2 1         ; if R2 then PC := 37
 13 [-]: JMP       37           ; PC := 37
 14 [-]: SETUPVAL  R0 U4        ; U82 := R4
 15 [-]: GETUPVAL  R2 U5        ; R2 := U5
 16 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x99dac1e9]
 17 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 18 [-]: GETUPVAL  R5 U6        ; R5 := U6
 19 [-]: GETUPVAL  R6 U7        ; R6 := U7
 20 [-]: SUB       R6 R0 R6     ; R6 := R0 - R6
 21 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 22 [-]: GETUPVAL  R5 U8        ; R5 := U8
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 25 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x42b04007]
 26 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Menu/EndOfMatch_XP"
 27 [-]: LOADKB    R5 0 0       ; R5 := false
 28 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 29 [-]: GETUPVAL  R7 U9        ; R7 := U9
 30 [-]: GETTABLE  R7 R7 K7     ; R7 := R7[0x1142c7a8]
 31 [-]: MOVE      R8 R0        ; R8 := R0
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: SETTABLE  R6 K6 R7     ; R6["XP"] := R7
 34 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 35 [-]: SETUPVAL  R2 U0        ; U82 := R0
 36 [-]: JMP       75           ; PC := 75
 37 [-]: SETUPVAL  R0 U4        ; U82 := R4
 38 [-]: GETUPVAL  R2 U5        ; R2 := U5
 39 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x99dac1e9]
 40 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 41 [-]: GETUPVAL  R5 U6        ; R5 := U6
 42 [-]: GETUPVAL  R6 U7        ; R6 := U7
 43 [-]: GETUPVAL  R7 U10       ; R7 := U10
 44 [-]: SUB       R7 R0 R7     ; R7 := R0 - R7
 45 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 46 [-]: GETUPVAL  R5 U8        ; R5 := U8
 47 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 48 [-]: LT        0 K8 R0      ; if 0.000000 >= R0 then PC := 62
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 51 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x42b04007]
 52 [-]: LOADK     R4 K9        ; R4 := "/Lotus/Language/Menu/EndOfMatch_Bonus"
 53 [-]: LOADKB    R5 0 0       ; R5 := false
 54 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 55 [-]: GETUPVAL  R7 U9        ; R7 := U9
 56 [-]: GETTABLE  R7 R7 K7     ; R7 := R7[0x1142c7a8]
 57 [-]: MOVE      R8 R0        ; R8 := R0
 58 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 59 [-]: SETTABLE  R6 K6 R7     ; R6["XP"] := R7
 60 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 61 [-]: SETUPVAL  R2 U2        ; U82 := R2
 62 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 63 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x42b04007]
 64 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Menu/EndOfMatch_XP"
 65 [-]: LOADKB    R5 0 0       ; R5 := false
 66 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 67 [-]: GETUPVAL  R7 U9        ; R7 := U9
 68 [-]: GETTABLE  R7 R7 K7     ; R7 := R7[0x1142c7a8]
 69 [-]: GETUPVAL  R8 U11       ; R8 := U11
 70 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["XpGain"]
 71 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 72 [-]: SETTABLE  R6 K6 R7     ; R6["XP"] := R7
 73 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 74 [-]: SETUPVAL  R2 U0        ; U82 := R0
 75 [-]: GETUPVAL  R2 U5        ; R2 := U5
 76 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x9b71e815]
 77 [-]: GETUPVAL  R4 U12       ; R4 := U12
 78 [-]: LOADK     R5 K12       ; R5 := "\r"
 79 [-]: GETUPVAL  R6 U13       ; R6 := U13
 80 [-]: MOVE      R7 R1        ; R7 := R1
 81 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 82 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 83 [-]: GETUPVAL  R5 U0        ; R5 := U0
 84 [-]: LOADNIL   R6 R6        ; R6 := nil
 85 [-]: GETUPVAL  R7 U2        ; R7 := U2
 86 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 87 [-]: RETURN    R0 1         ; return 


; Function #101.6:
;
; Name:            
; Defined at line: 3957
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: LOADKB    R1 0 0       ; R1 := false
  7 [-]: SETUPVAL  R1 U0        ; U82 := R0
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
 10 [-]: GETUPVAL  R2 U3        ; R2 := U3
 11 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 12 [-]: GETUPVAL  R3 U4        ; R3 := U4
 13 [-]: SUB       R3 R2 R3     ; R3 := R2 - R3
 14 [-]: GETUPVAL  R4 U5        ; R4 := U5
 15 [-]: GETUPVAL  R5 U4        ; R5 := U4
 16 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 17 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 18 [-]: LE        0 K0 R3      ; if 1.000000 > R3 then PC := 33
 19 [-]: JMP       33           ; PC := 33
 20 [-]: GETUPVAL  R4 U6        ; R4 := U6
 21 [-]: MOVE      R5 R2        ; R5 := R2
 22 [-]: CALL      R4 2 1       ; R4(R5)
 23 [-]: GETGLOBAL R4 K1        ; R4 := 0x5bced4c4
 24 [-]: GETTABLE  R4 R4 K2     ; R4 := R4[0x71e5d13c]
 25 [-]: MOVE      R5 R3        ; R5 := R3
 26 [-]: CONST     R6 1         ; R6 := 1.000000
 27 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 28 [-]: LT        0 R4 K3      ; if R4 >= 0.000001 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: CONST     R3 1         ; R3 := 1.000000
 31 [-]: JMP       33           ; PC := 33
 32 [-]: MOVE      R3 R4        ; R3 := R4
 33 [-]: GETUPVAL  R5 U7        ; R5 := U7
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: GETUPVAL  R7 U8        ; R7 := U8
 36 [-]: CALL      R5 3 1       ; R5(R6,R7)
 37 [-]: RETURN    R0 1         ; return 


; Function #101.7:
;
; Name:            
; Defined at line: 3999
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CONST     R1 -1        ; R1 := -1.000000
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xb73d420f]
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0xc14ccd98
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["UI_MODE_IN_GAME"]
 14 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x659d451f]
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0xc14ccd98
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #101.8:
;
; Name:            
; Defined at line: 4009
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["XpBonus"]
  3 [-]: SETUPVAL  R0 U0        ; U82 := R0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StartXp"]
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["XpGain"]
  8 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
  9 [-]: SETUPVAL  R0 U2        ; U82 := R2
 10 [-]: LOADKB    R0 1 0       ; R0 := true
 11 [-]: SETUPVAL  R0 U3        ; U82 := R3
 12 [-]: GETUPVAL  R0 U5        ; R0 := U5
 13 [-]: GETUPVAL  R1 U4        ; R1 := U4
 14 [-]: SUB       R0 R0 R1     ; R0 := R0 - R1
 15 [-]: SETUPVAL  R0 U4        ; U82 := R4
 16 [-]: GETUPVAL  R0 U6        ; R0 := U6
 17 [-]: GETUPVAL  R1 U7        ; R1 := U7
 18 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 43
 19 [-]: JMP       43           ; PC := 43
 20 [-]: GETGLOBAL R0 K3        ; R0 := 0x42dcc9f5
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETGLOBAL R2 K4        ; R2 := PROGRESS_BAR_FILL_XP_PER_SECOND
 23 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
 24 [-]: GETGLOBAL R2 K5        ; R2 := PROGRESS_BAR_FILL_MIN_SECONDS
 25 [-]: GETGLOBAL R3 K6        ; R3 := PROGRESS_BAR_FILL_MAX_SECONDS
 26 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 27 [-]: GETGLOBAL R1 K7        ; R1 := 0x25312c9b
 28 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 29 [-]: GETUPVAL  R3 U8        ; R3 := U8
 30 [-]: CONST     R4 0         ; R4 := 0.000000
 31 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 32 [-]: GETUPVAL  R6 U9        ; R6 := U9
 33 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 34 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 35 [-]: CONST     R7 1         ; R7 := 1.000000
 36 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 37 [-]: MOVE      R7 R0        ; R7 := R0
 38 [-]: CONST     R8 0         ; R8 := 0.000000
 39 [-]: CLOSURE   R9 0         ; R9 := closure(Function #101.8.1)
 40 [-]: GETUPVAL  R0 U10       ; R0 := U10
 41 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 42 [-]: JMP       45           ; PC := 45
 43 [-]: GETUPVAL  R1 U10       ; R1 := U10
 44 [-]: CALL      R1 1 1       ; R1()
 45 [-]: RETURN    R0 1         ; return 


; Function #101.8.1:
;
; Name:            
; Defined at line: 4018
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 4046
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: CONST     R2 0         ; R2 := 0.000000
  3 [-]: GETGLOBAL R3 K2        ; R3 := 0xed96efe7
  4 [-]: SETTABLE  R0 K1 R3     ; R0["Icon"] := R3
  5 [-]: SETTABLE  R0 K3 K4     ; R0["Themed"] := true
  6 [-]: GETGLOBAL R3 K5        ; R3 := 0x603636ad
  7 [-]: LOADK     R4 K6        ; R4 := "/Lotus/Language/Intrinsics/Intrinsics"
  8 [-]: LOADKB    R5 1 0       ; R5 := true
  9 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 10 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
 11 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xe261aa96]
 12 [-]: MOVE      R6 R1        ; R6 := R1
 13 [-]: LOADK     R7 K9        ; R7 := "Name"
 14 [-]: CONST     R8 38        ; R8 := 38.000000
 15 [-]: LOADK     R9 K10       ; R9 := "bottom"
 16 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x9f8ece2b]
 19 [-]: GETGLOBAL R5 K7        ; R5 := 0xae91e43b
 20 [-]: MOVE      R6 R1        ; R6 := R1
 21 [-]: LOADK     R7 K12       ; R7 := ".Name"
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: CONST     R7 2         ; R7 := 2.000000
 24 [-]: GETGLOBAL R8 K13       ; R8 := 0x7f5022cf
 25 [-]: GETTABLE  R8 R8 K14    ; R8 := R8[0x3f3e4d12]
 26 [-]: MOVE      R9 R3        ; R9 := R3
 27 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 28 [-]: LOADK     R9 K15       ; R9 := "..."
 29 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 30 [-]: CONST     R4 1000      ; R4 := 1000.000000
 31 [-]: GETGLOBAL R5 K16       ; R5 := mGameData
 32 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5[0xff9dbdb9]
 33 [-]: CONST     R7 0         ; R7 := 0.000000
 34 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 35 [-]: GETGLOBAL R6 K19       ; R6 := mPlayerMissionInfo
 36 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 47
 37 [-]: JMP       47           ; PC := 47
 38 [-]: GETGLOBAL R6 K19       ; R6 := mPlayerMissionInfo
 39 [-]: SELF      R6 R6 K21    ; R7 := R6; R6 := R6[0x67a6670a]
 40 [-]: CONST     R8 0         ; R8 := 0.000000
 41 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 42 [-]: LT        0 K22 R6     ; if 0.000000 >= R6 then PC := 47
 43 [-]: JMP       47           ; PC := 47
 44 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: MOVE      R5 R6        ; R5 := R6
 47 [-]: MOD       R7 R5 R4     ; R7 := R5 % R4
 48 [-]: GETGLOBAL R8 K23       ; R8 := 0x5bced4c4
 49 [-]: GETTABLE  R8 R8 K24    ; R8 := R8[0x55f27c30]
 50 [-]: DIV       R9 R5 R4     ; R9 := R5 / R4
 51 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 52 [-]: MOVE      R9 R7        ; R9 := R7
 53 [-]: MOVE      R10 R8       ; R10 := R8
 54 [-]: GETGLOBAL R11 K13      ; R11 := 0x7f5022cf
 55 [-]: GETTABLE  R11 R11 K14  ; R11 := R11[0x3f3e4d12]
 56 [-]: GETGLOBAL R12 K5       ; R12 := 0x603636ad
 57 [-]: LOADK     R13 K25      ; R13 := "/Lotus/Language/Menu/Profile_Points"
 58 [-]: LOADKB    R14 1 0      ; R14 := true
 59 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
 60 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 61 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
 62 [-]: SELF      R12 R12 K8   ; R13 := R12; R12 := R12[0xe261aa96]
 63 [-]: MOVE      R14 R1       ; R14 := R1
 64 [-]: LOADK     R15 K26      ; R15 := "Rank"
 65 [-]: CONST     R16 29       ; R16 := 29.000000
 66 [-]: MOVE      R17 R8       ; R17 := R8
 67 [-]: LOADK     R18 K27      ; R18 := " "
 68 [-]: MOVE      R19 R11      ; R19 := R11
 69 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
 70 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 71 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
 72 [-]: SELF      R12 R12 K8   ; R13 := R12; R12 := R12[0xe261aa96]
 73 [-]: MOVE      R14 R1       ; R14 := R1
 74 [-]: LOADK     R15 K28      ; R15 := "XP"
 75 [-]: CONST     R16 29       ; R16 := 29.000000
 76 [-]: LOADK     R17 K29      ; R17 := ""
 77 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 78 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
 79 [-]: SELF      R12 R12 K8   ; R13 := R12; R12 := R12[0xe261aa96]
 80 [-]: MOVE      R14 R1       ; R14 := R1
 81 [-]: LOADK     R15 K30      ; R15 := "BonusXP"
 82 [-]: CONST     R16 29       ; R16 := 29.000000
 83 [-]: LOADK     R17 K29      ; R17 := ""
 84 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 85 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
 86 [-]: SELF      R12 R12 K31  ; R13 := R12; R12 := R12[0xf64b7262]
 87 [-]: MOVE      R14 R1       ; R14 := R1
 88 [-]: LOADK     R15 K32      ; R15 := "XPGain"
 89 [-]: CONST     R16 12       ; R16 := 12.000000
 90 [-]: LOADK     R17 K33      ; R17 := 0.100000
 91 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 92 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
 93 [-]: SELF      R12 R12 K34  ; R13 := R12; R12 := R12[0xc0a3774b]
 94 [-]: MOVE      R14 R1       ; R14 := R1
 95 [-]: LOADK     R15 K32      ; R15 := "XPGain"
 96 [-]: CONST     R16 11       ; R16 := 11.000000
 97 [-]: LOADKB    R17 0 0      ; R17 := false
 98 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 99 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
100 [-]: SELF      R12 R12 K31  ; R13 := R12; R12 := R12[0xf64b7262]
101 [-]: MOVE      R14 R1       ; R14 := R1
102 [-]: LOADK     R15 K35      ; R15 := "XPBonus"
103 [-]: CONST     R16 12       ; R16 := 12.000000
104 [-]: LOADK     R17 K33      ; R17 := 0.100000
105 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
106 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
107 [-]: SELF      R12 R12 K34  ; R13 := R12; R12 := R12[0xc0a3774b]
108 [-]: MOVE      R14 R1       ; R14 := R1
109 [-]: LOADK     R15 K35      ; R15 := "XPBonus"
110 [-]: CONST     R16 11       ; R16 := 11.000000
111 [-]: LOADKB    R17 0 0      ; R17 := false
112 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
113 [-]: GETGLOBAL R12 K7       ; R12 := 0xae91e43b
114 [-]: SELF      R12 R12 K34  ; R13 := R12; R12 := R12[0xc0a3774b]
115 [-]: MOVE      R14 R1       ; R14 := R1
116 [-]: LOADK     R15 K36      ; R15 := "XPBg"
117 [-]: CONST     R16 11       ; R16 := 11.000000
118 [-]: LOADKB    R17 1 0      ; R17 := true
119 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
120 [-]: LOADKB    R12 0 0      ; R12 := false
121 [-]: DIV       R13 R7 R4    ; R13 := R7 / R4
122 [-]: GETGLOBAL R14 K7       ; R14 := 0xae91e43b
123 [-]: SELF      R14 R14 K34  ; R15 := R14; R14 := R14[0xc0a3774b]
124 [-]: MOVE      R16 R1       ; R16 := R1
125 [-]: LOADK     R17 K37      ; R17 := "StartXP"
126 [-]: CONST     R18 11       ; R18 := 11.000000
127 [-]: LT        1 K22 R13    ; if 0.000000 < R13 then PC := 130
128 [-]: JMP       130          ; PC := 130
129 [-]: LOADKB    R19 0 1      ; R19 := false; PC := 130
130 [-]: LOADKB    R19 1 0      ; R19 := true
131 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
132 [-]: LT        0 K22 R13    ; if 0.000000 >= R13 then PC := 141
133 [-]: JMP       141          ; PC := 141
134 [-]: GETGLOBAL R14 K7       ; R14 := 0xae91e43b
135 [-]: SELF      R14 R14 K31  ; R15 := R14; R14 := R14[0xf64b7262]
136 [-]: MOVE      R16 R1       ; R16 := R1
137 [-]: LOADK     R17 K37      ; R17 := "StartXP"
138 [-]: CONST     R18 12       ; R18 := 12.000000
139 [-]: MUL       R19 R13 R2   ; R19 := R13 * R2
140 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
141 [-]: GETUPVAL  R14 U1       ; R14 := U1
142 [-]: GETTABLE  R14 R14 K38  ; R14 := R14[0xae6791ba]
143 [-]: GETGLOBAL R15 K7       ; R15 := 0xae91e43b
144 [-]: MOVE      R16 R1       ; R16 := R1
145 [-]: MOVE      R17 R3       ; R17 := R3
146 [-]: MOVE      R18 R8       ; R18 := R8
147 [-]: LOADK     R19 K27      ; R19 := " "
148 [-]: MOVE      R20 R11      ; R20 := R11
149 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
150 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
151 [-]: GETUPVAL  R15 U2       ; R15 := U2
152 [-]: MOVE      R16 R14      ; R16 := R14
153 [-]: CALL      R15 2 1      ; R15(R16)
154 [-]: SETTABLE  R14 K39 K40  ; R14["mIconToTextPadding"] := 10.000000
155 [-]: SELF      R15 R14 K41  ; R16 := R14; R15 := R14[0x99dac1e9]
156 [-]: NEWTABLE  R17 1 0      ; R17 := {}
157 [-]: MOVE      R18 R7       ; R18 := R7
158 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
159 [-]: MOVE      R18 R4       ; R18 := R4
160 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
161 [-]: SELF      R15 R14 K42  ; R16 := R14; R15 := R14[0x71e9ac81]
162 [-]: CALL      R15 2 1      ; R15(R16)
163 [-]: SETTABLE  R0 K43 R14   ; R0["ProgressInfo"] := R14
164 [-]: TEST      R12 0        ; if not R12 then PC := 223
165 [-]: JMP       223          ; PC := 223
166 [-]: MOVE      R15 R1       ; R15 := R1
167 [-]: LOADK     R16 K44      ; R16 := ".XPGain"
168 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
169 [-]: GETGLOBAL R16 K45      ; R16 := mIntrinsicPoints
170 [-]: MOVE      R17 R7       ; R17 := R7
171 [-]: LOADK     R18 K29      ; R18 := ""
172 [-]: LOADKB    R19 1 0      ; R19 := true
173 [-]: CLOSURE   R20 0        ; R20 := closure(Function #102.1)
174 [-]: MOVE      R0 R19       ; R0 := R19
175 [-]: GETUPVAL  R0 U3        ; R0 := U3
176 [-]: MOVE      R0 R16       ; R0 := R16
177 [-]: MOVE      R0 R17       ; R0 := R17
178 [-]: MOVE      R0 R7        ; R0 := R7
179 [-]: MOVE      R0 R4        ; R0 := R4
180 [-]: MOVE      R0 R1        ; R0 := R1
181 [-]: MOVE      R0 R18       ; R0 := R18
182 [-]: MOVE      R0 R10       ; R0 := R10
183 [-]: MOVE      R0 R8        ; R0 := R8
184 [-]: MOVE      R0 R9        ; R0 := R9
185 [-]: MOVE      R0 R2        ; R0 := R2
186 [-]: MOVE      R0 R14       ; R0 := R14
187 [-]: MOVE      R0 R3        ; R0 := R3
188 [-]: MOVE      R0 R11       ; R0 := R11
189 [-]: GETUPVAL  R0 U4        ; R0 := U4
190 [-]: MOVE      R0 R15       ; R0 := R15
191 [-]: GETUPVAL  R21 U5       ; R21 := U5
192 [-]: CONST     R22 1        ; R22 := 1.000000
193 [-]: LOADKB    R23 1 0      ; R23 := true
194 [-]: CALL      R21 3 1      ; R21(R22,R23)
195 [-]: GETGLOBAL R21 K7       ; R21 := 0xae91e43b
196 [-]: SELF      R21 R21 K34  ; R22 := R21; R21 := R21[0xc0a3774b]
197 [-]: MOVE      R23 R1       ; R23 := R1
198 [-]: LOADK     R24 K32      ; R24 := "XPGain"
199 [-]: CONST     R25 11       ; R25 := 11.000000
200 [-]: LOADKB    R26 1 0      ; R26 := true
201 [-]: CALL      R21 6 1      ; R21(R22,R23,R24,R25,R26)
202 [-]: GETGLOBAL R21 K46      ; R21 := 0x42dcc9f5
203 [-]: GETGLOBAL R22 K47      ; R22 := PROGRESS_BAR_FILL_XP_PER_SECOND
204 [-]: DIV       R22 R16 R22  ; R22 := R16 / R22
205 [-]: GETGLOBAL R23 K48      ; R23 := PROGRESS_BAR_FILL_MIN_SECONDS
206 [-]: GETGLOBAL R24 K49      ; R24 := PROGRESS_BAR_FILL_MAX_SECONDS
207 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
208 [-]: GETGLOBAL R22 K50      ; R22 := 0x25312c9b
209 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
210 [-]: MOVE      R24 R1       ; R24 := R1
211 [-]: CONST     R25 0        ; R25 := 0.000000
212 [-]: NEWTABLE  R26 1 0      ; R26 := {}
213 [-]: MOVE      R27 R20      ; R27 := R20
214 [-]: SETLIST   R26 1 1      ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 1
215 [-]: NEWTABLE  R27 1 0      ; R27 := {}
216 [-]: CONST     R28 1        ; R28 := 1.000000
217 [-]: SETLIST   R27 1 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 1
218 [-]: MOVE      R28 R21      ; R28 := R21
219 [-]: CONST     R29 2        ; R29 := 2.000000
220 [-]: CALL      R22 8 1      ; R22(R23,R24,R25,R26,R27,R28,R29)
221 [-]: CLOSE     R15          ; SAVE R15,...
222 [-]: JMP       244          ; PC := 244
223 [-]: GETGLOBAL R15 K45      ; R15 := mIntrinsicPoints
224 [-]: ADD       R15 R5 R15   ; R15 := R5 + R15
225 [-]: GETGLOBAL R16 K23      ; R16 := 0x5bced4c4
226 [-]: GETTABLE  R16 R16 K24  ; R16 := R16[0x55f27c30]
227 [-]: DIV       R17 R15 K52  ; R17 := R15 / 1000.000000
228 [-]: CALL      R16 2 2      ; R16 := R16(R17)
229 [-]: MOVE      R10 R16      ; R10 := R16
230 [-]: MOD       R9 R15 K52   ; R9 := R15 % 1000.000000
231 [-]: SELF      R16 R14 K53  ; R17 := R14; R16 := R14[0x9b71e815]
232 [-]: MOVE      R18 R3       ; R18 := R3
233 [-]: MOVE      R19 R10      ; R19 := R10
234 [-]: LOADK     R20 K27      ; R20 := " "
235 [-]: MOVE      R21 R11      ; R21 := R11
236 [-]: CONCAT    R19 R19 R21  ; R19 := R19 .. R20 .. R21
237 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
238 [-]: SELF      R16 R14 K41  ; R17 := R14; R16 := R14[0x99dac1e9]
239 [-]: NEWTABLE  R18 1 0      ; R18 := {}
240 [-]: MOVE      R19 R9       ; R19 := R9
241 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
242 [-]: MOVE      R19 R4       ; R19 := R4
243 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
244 [-]: RETURN    R0 1         ; return 


; Function #102.1:
;
; Name:            
; Defined at line: 4106
; #Upvalues:       17
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: LOADKB    R1 0 0       ; R1 := false
  7 [-]: SETUPVAL  R1 U0        ; U82 := R0
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
 10 [-]: GETUPVAL  R2 U3        ; R2 := U3
 11 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 12 [-]: GETUPVAL  R3 U4        ; R3 := U4
 13 [-]: SUB       R3 R2 R3     ; R3 := R2 - R3
 14 [-]: GETUPVAL  R4 U5        ; R4 := U5
 15 [-]: GETUPVAL  R5 U4        ; R5 := U4
 16 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 17 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 18 [-]: LE        0 K0 R3      ; if 1.000000 > R3 then PC := 62
 19 [-]: JMP       62           ; PC := 62
 20 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 21 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0xc0a3774b]
 22 [-]: GETUPVAL  R6 U6        ; R6 := U6
 23 [-]: LOADK     R7 K3        ; R7 := "StartXP"
 24 [-]: CONST     R8 11        ; R8 := 11.000000
 25 [-]: LOADKB    R9 0 0       ; R9 := false
 26 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 27 [-]: GETUPVAL  R4 U7        ; R4 := U7
 28 [-]: EQ        1 R4 K4      ; if R4 == "" then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 31 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xaade900e]
 32 [-]: GETUPVAL  R6 U7        ; R6 := U7
 33 [-]: CONST     R7 11        ; R7 := 11.000000
 34 [-]: LOADKB    R8 0 0       ; R8 := false
 35 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 36 [-]: GETUPVAL  R4 U9        ; R4 := U9
 37 [-]: GETGLOBAL R5 K6        ; R5 := 0x5bced4c4
 38 [-]: GETTABLE  R5 R5 K7     ; R5 := R5[0x55f27c30]
 39 [-]: DIV       R6 R2 K8     ; R6 := R2 / 1000.000000
 40 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 41 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 42 [-]: SETUPVAL  R4 U8        ; U82 := R8
 43 [-]: MOD       R4 R2 K8     ; R4 := R2 % 1000.000000
 44 [-]: SETUPVAL  R4 U10       ; U82 := R10
 45 [-]: CONST     R4 0         ; R4 := 0.000000
 46 [-]: SETUPVAL  R4 U4        ; U82 := R4
 47 [-]: GETGLOBAL R4 K6        ; R4 := 0x5bced4c4
 48 [-]: GETTABLE  R4 R4 K9     ; R4 := R4[0x71e5d13c]
 49 [-]: MOVE      R5 R3        ; R5 := R3
 50 [-]: CONST     R6 1         ; R6 := 1.000000
 51 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 52 [-]: MOD       R5 R2 K8     ; R5 := R2 % 1000.000000
 53 [-]: EQ        0 R5 K10     ; if R5 ~= 0.000000 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: LOADK     R3 K11       ; R3 := 0.000001
 56 [-]: JMP       62           ; PC := 62
 57 [-]: LT        0 R4 K11     ; if R4 >= 0.000001 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: CONST     R3 1         ; R3 := 1.000000
 60 [-]: JMP       62           ; PC := 62
 61 [-]: MOVE      R3 R4        ; R3 := R4
 62 [-]: GETUPVAL  R5 U11       ; R5 := U11
 63 [-]: MUL       R5 R3 R5     ; R5 := R3 * R5
 64 [-]: GETUPVAL  R6 U12       ; R6 := U12
 65 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0x9b71e815]
 66 [-]: GETUPVAL  R8 U13       ; R8 := U13
 67 [-]: GETUPVAL  R9 U8        ; R9 := U8
 68 [-]: LOADK     R10 K13      ; R10 := " "
 69 [-]: GETUPVAL  R11 U14      ; R11 := U14
 70 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 71 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 72 [-]: GETUPVAL  R6 U12       ; R6 := U12
 73 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x99dac1e9]
 74 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 75 [-]: GETUPVAL  R9 U10       ; R9 := U10
 76 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 77 [-]: GETUPVAL  R9 U5        ; R9 := U5
 78 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 79 [-]: GETGLOBAL R6 K15       ; R6 := 0x7b998233
 80 [-]: GETGLOBAL R7 K16       ; R7 := 0x6a5020f1
 81 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 82 [-]: TEST      R6 1         ; if R6 then PC := 107
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETGLOBAL R6 K6        ; R6 := 0x5bced4c4
 85 [-]: GETTABLE  R6 R6 K17    ; R6 := R6[0x3630e649]
 86 [-]: CALL      R6 1 2       ; R6 := R6()
 87 [-]: LT        0 R6 K18     ; if R6 >= 0.200000 then PC := 107
 88 [-]: JMP       107          ; PC := 107
 89 [-]: GETUPVAL  R6 U15       ; R6 := U15
 90 [-]: GETTABLE  R6 R6 K19    ; R6 := R6[0xb5be5d4a]
 91 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
 92 [-]: GETUPVAL  R8 U16       ; R8 := U16
 93 [-]: CALL      R6 3 3       ; R6,R7 := R6(R7,R8)
 94 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 97
 95 [-]: JMP       97           ; PC := 97
 96 [-]: CONST     R6 0         ; R6 := 0.000000
 97 [-]: EQ        0 R7 K20     ; if R7 ~= nil then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: CONST     R7 0         ; R7 := 0.000000
100 [-]: GETUPVAL  R8 U15       ; R8 := U15
101 [-]: GETTABLE  R8 R8 K21    ; R8 := R8[0x5a22d251]
102 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
103 [-]: GETGLOBAL R10 K16      ; R10 := 0x6a5020f1
104 [-]: ADD       R11 R6 R5    ; R11 := R6 + R5
105 [-]: ADD       R12 R7 K22   ; R12 := R7 + 4.000000
106 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
107 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 4171
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xae6791ba]
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: GETTABLE  R5 R0 K3     ; R5 := R0["Name"]
  7 [-]: LOADK     R6 K4        ; R6 := "\r"
  8 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["Desc"]
  9 [-]: TEST      R7 1         ; if R7 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R7 K6        ; R7 := ""
 12 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 13 [-]: LOADNIL   R6 R6        ; R6 := nil
 14 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["Gain"]
 15 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 1       ; R3(R4)
 19 [-]: SETTABLE  R2 K8 K9     ; R2["mToUpper"] := false
 20 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["Icon"]
 21 [-]: SETTABLE  R2 K10 R3    ; R2["mIconBgExtra"] := R3
 22 [-]: SETTABLE  R2 K12 K13   ; R2["mIconBgExtraAlpha"] := 5.000000
 23 [-]: GETGLOBAL R3 K14       ; R3 := 0x7b998233
 24 [-]: GETTABLE  R4 R0 K15    ; R4 := R0["BackgroundIconPos"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 1         ; if R3 then PC := 51
 27 [-]: JMP       51           ; PC := 51
 28 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["BackgroundIconPos"]
 29 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Scale"]
 30 [-]: DIV       R3 R3 K18    ; R3 := R3 / 7.000000
 31 [-]: SETTABLE  R2 K16 R3    ; R2["mIconBgExtraWidth"] := R3
 32 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["BackgroundIconPos"]
 33 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Scale"]
 34 [-]: DIV       R3 R3 K18    ; R3 := R3 / 7.000000
 35 [-]: SETTABLE  R2 K19 R3    ; R2["mIconBgExtraHeight"] := R3
 36 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["BackgroundIconPos"]
 37 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["X"]
 38 [-]: DIV       R3 R3 K22    ; R3 := R3 / 2.000000
 39 [-]: SETTABLE  R2 K20 R3    ; R2["mIconBgExtraOffsetX"] := R3
 40 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["BackgroundIconPos"]
 41 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["Y"]
 42 [-]: DIV       R3 R3 K22    ; R3 := R3 / 2.000000
 43 [-]: SETTABLE  R2 K23 R3    ; R2["mIconBgExtraOffsetY"] := R3
 44 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["BackgroundIconPos"]
 45 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["Alpha"]
 46 [-]: EQ        1 R3 K26     ; if R3 == nil then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["BackgroundIconPos"]
 49 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["Alpha"]
 50 [-]: SETTABLE  R2 K12 R3    ; R2["mIconBgExtraAlpha"] := R3
 51 [-]: GETTABLE  R3 R0 K27    ; R3 := R0["Standing"]
 52 [-]: EQ        1 R3 K26     ; if R3 == nil then PC := 106
 53 [-]: JMP       106          ; PC := 106
 54 [-]: SETTABLE  R2 K28 K29   ; R2["mLabelOffsetX"] := 52.000000
 55 [-]: GETTABLE  R3 R0 K30    ; R3 := R0["NewStanding"]
 56 [-]: TEST      R3 1         ; if R3 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: CONST     R3 0         ; R3 := 0.000000
 59 [-]: LT        0 R3 K31     ; if R3 >= 0.000000 then PC := 65
 60 [-]: JMP       65           ; PC := 65
 61 [-]: UNM       R3 R3        ; R3 :=  R3
 62 [-]: GETTABLE  R4 R2 K32    ; R4 := R2["mProgressBar"]
 63 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["mBarColors"]
 64 [-]: SETTABLE  R4 K22 K35   ; R4[2.000000] := 12.000000
 65 [-]: GETTABLE  R4 R0 K27    ; R4 := R0["Standing"]
 66 [-]: TEST      R4 1         ; if R4 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: MOVE      R4 R3        ; R4 := R3
 69 [-]: SUB       R4 R4 R3     ; R4 := R4 - R3
 70 [-]: SELF      R5 R2 K36    ; R6 := R2; R5 := R2[0x99dac1e9]
 71 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 72 [-]: MOVE      R8 R4        ; R8 := R4
 73 [-]: MOVE      R9 R3        ; R9 := R3
 74 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 75 [-]: GETTABLE  R8 R0 K37    ; R8 := R0["MaxStanding"]
 76 [-]: TEST      R8 1         ; if R8 then PC := 79
 77 [-]: JMP       79           ; PC := 79
 78 [-]: CONST     R8 5000      ; R8 := 5000.000000
 79 [-]: LOADK     R9 K38       ; R9 := "/Lotus/Language/Syndicates/SyndicateReputation"
 80 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 81 [-]: SELF      R5 R2 K39    ; R6 := R2; R5 := R2[0x9b71e815]
 82 [-]: GETGLOBAL R7 K40       ; R7 := 0x7f5022cf
 83 [-]: GETTABLE  R7 R7 K41    ; R7 := R7[0x3f3e4d12]
 84 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Name"]
 85 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 86 [-]: LOADNIL   R8 R8        ; R8 := nil
 87 [-]: GETUPVAL  R9 U2        ; R9 := U2
 88 [-]: GETTABLE  R9 R9 K42    ; R9 := R9[0x06d055f9]
 89 [-]: GETTABLE  R10 R0 K30   ; R10 := R0["NewStanding"]
 90 [-]: LT        1 R10 K31    ; if R10 < 0.000000 then PC := 93
 91 [-]: JMP       93           ; PC := 93
 92 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 93
 93 [-]: LOADKB    R10 1 0      ; R10 := true
 94 [-]: LOADK     R11 K43      ; R11 := "<font color=\"#Negative\">-"
 95 [-]: LOADK     R12 K44      ; R12 := "<font color=\"#Positive\">+"
 96 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 97 [-]: GETUPVAL  R10 U2       ; R10 := U2
 98 [-]: GETTABLE  R10 R10 K45  ; R10 := R10[0x1142c7a8]
 99 [-]: MOVE      R11 R3       ; R11 := R3
100 [-]: CALL      R10 2 2      ; R10 := R10(R11)
101 [-]: LOADK     R11 K46      ; R11 := "</font>"
102 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
103 [-]: GETTABLE  R10 R0 K5    ; R10 := R0["Desc"]
104 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
105 [-]: JMP       111          ; PC := 111
106 [-]: SELF      R5 R2 K36    ; R6 := R2; R5 := R2[0x99dac1e9]
107 [-]: NEWTABLE  R7 1 0       ; R7 := {}
108 [-]: GETTABLE  R8 R0 K47    ; R8 := R0["Progress"]
109 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
110 [-]: CALL      R5 3 1       ; R5(R6,R7)
111 [-]: SELF      R5 R2 K48    ; R6 := R2; R5 := R2[0x71e9ac81]
112 [-]: CALL      R5 2 1       ; R5(R6)
113 [-]: SETTABLE  R0 K49 R2    ; R0["ProgressInfo"] := R2
114 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 4204
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xae6791ba]
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: GETTABLE  R5 R0 K3     ; R5 := R0["Name"]
  7 [-]: LOADNIL   R6 R6        ; R6 := nil
  8 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["Desc"]
  9 [-]: TEST      R7 1         ; if R7 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["FinalRank"]
 12 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["Score"]
 13 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 14 [-]: GETUPVAL  R3 U1        ; R3 := U1
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["FinalRank"]
 18 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: SETTABLE  R2 K8 K9     ; R2["mToUpper"] := false
 21 [-]: SETTABLE  R2 K10 K11   ; R2["mTopRightOffset"] := 31.000000
 22 [-]: GETGLOBAL R3 K13       ; R3 := mAffinityGrid
 23 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["OnslaughtBackground"]
 24 [-]: SETTABLE  R2 K12 R3    ; R2["mIconBgExtra"] := R3
 25 [-]: SELF      R3 R2 K15    ; R4 := R2; R3 := R2[0x99dac1e9]
 26 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 27 [-]: CONST     R6 1         ; R6 := 1.000000
 28 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 29 [-]: CALL      R3 3 1       ; R3(R4,R5)
 30 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2[0x71e9ac81]
 31 [-]: CALL      R3 2 1       ; R3(R4)
 32 [-]: SETTABLE  R0 K17 R2    ; R0["ProgressInfo"] := R2
 33 [-]: SETTABLE  R0 K18 K19   ; R0["IconHeight"] := 76.000000
 34 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 4219
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x38f10e85
  3 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: LOADK     R5 K3        ; R5 := ".Background.duplicateMovieClip"
  6 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  7 [-]: LOADK     R5 K4        ; R5 := "Icon2"
  8 [-]: CONST     R6 1234      ; R6 := 1234.000000
  9 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xae6791ba]
 12 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["Name"]
 15 [-]: LOADNIL   R6 R6        ; R6 := nil
 16 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["Desc"]
 17 [-]: LOADNIL   R8 R8        ; R8 := nil
 18 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 19 [-]: GETUPVAL  R3 U1        ; R3 := U1
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 1       ; R3(R4)
 22 [-]: SETTABLE  R2 K8 K9     ; R2["mToUpper"] := false
 23 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["Icon2"]
 24 [-]: SETTABLE  R2 K10 R3    ; R2["mIcon2"] := R3
 25 [-]: SETTABLE  R2 K11 K12   ; R2["mIconSize2"] := 46.000000
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["FloatingContent"]
 28 [-]: SETTABLE  R2 K13 R3    ; R2["mIconColor2"] := R3
 29 [-]: SETTABLE  R2 K15 K12   ; R2["mIconBorderSize2"] := 46.000000
 30 [-]: SETTABLE  R2 K16 K17   ; R2["mIconPaddingX2"] := 4.000000
 31 [-]: SETTABLE  R2 K18 K19   ; R2["mIconPaddingY2"] := 8.000000
 32 [-]: GETTABLE  R3 R0 K20    ; R3 := R0["Delta"]
 33 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["Score"]
 34 [-]: LT        0 K22 R3     ; if 0.000000 >= R3 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: SUB       R4 R4 R3     ; R4 := R4 - R3
 37 [-]: LT        0 R3 K22     ; if R3 >= 0.000000 then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: UNM       R3 R3        ; R3 :=  R3
 40 [-]: GETTABLE  R5 R2 K23    ; R5 := R2["mProgressBar"]
 41 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["mBarColors"]
 42 [-]: SETTABLE  R5 K25 K27   ; R5[2.000000] := 12.000000
 43 [-]: SELF      R5 R2 K28    ; R6 := R2; R5 := R2[0x99dac1e9]
 44 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 45 [-]: MOVE      R8 R4        ; R8 := R4
 46 [-]: MOVE      R9 R3        ; R9 := R3
 47 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 48 [-]: CONST     R8 3         ; R8 := 3.000000
 49 [-]: LOADNIL   R9 R9        ; R9 := nil
 50 [-]: GETTABLE  R10 R0 K29   ; R10 := R0["CompletionFaction"]
 51 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 52 [-]: SELF      R5 R2 K30    ; R6 := R2; R5 := R2[0x71e9ac81]
 53 [-]: CALL      R5 2 1       ; R5(R6)
 54 [-]: SETTABLE  R0 K31 R2    ; R0["ProgressInfo"] := R2
 55 [-]: SETTABLE  R0 K32 K33   ; R0["IconHeight"] := 76.000000
 56 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 4247
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xae6791ba]
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 1       ; R3(R4)
 10 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x99dac1e9]
 11 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 12 [-]: CONST     R6 0         ; R6 := 0.000000
 13 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: SETTABLE  R2 K4 K5     ; R2["mProgressText"] := ""
 16 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0x71e9ac81]
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: SETTABLE  R0 K7 R2     ; R0["ProgressInfo"] := R2
 19 [-]: SETTABLE  R0 K8 K9     ; R0["IconHeight"] := 76.000000
 20 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4258
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Filler"]
  2 [-]: TEST      R2 1         ; if R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["EmptySlot"]
  5 [-]: TEST      R2 1         ; if R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R3 K2        ; R3 := mAffinityGrid
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mPrevSelectedId"]
  9 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Id"]
 10 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 13
 13 [-]: LOADKB    R3 1 0       ; R3 := true
 14 [-]: NEWTABLE  R4 0 6       ; R4 := {}
 15 [-]: SETTABLE  R4 K5 K6     ; R4["HideCountThreshold"] := 0.000000
 16 [-]: SETTABLE  R4 K7 K8     ; R4["HideOwned"] := true
 17 [-]: SETTABLE  R4 K9 R2     ; R4["IsFiller"] := R2
 18 [-]: SETTABLE  R4 K10 R1    ; R4["IsFocused"] := R1
 19 [-]: SETTABLE  R4 K11 R3    ; R4["IsSelected"] := R3
 20 [-]: TESTSET   R5 R1 0      ; if not R1 then PC := 30 else R5 := R1
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["Locked"]
 23 [-]: TEST      R5 1         ; if R5 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETTABLE  R5 R0 K14    ; R5 := R0["Hidden"]
 26 [-]: NOT       R5 R5        ; R5 :=  R5
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 29
 29 [-]: LOADKB    R5 1 0       ; R5 := true
 30 [-]: SETTABLE  R4 K12 R5    ; R4["ShowInfoPopup"] := R5
 31 [-]: RETURN    R4 2         ; return R4
 32 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4272
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R1 1         ; if R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETGLOBAL R2 K0        ; R2 := mAffinityGrid
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mElements"]
  5 [-]: GETTABLE  R1 R2 K2     ; R1 := R2[1.000000]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0xbf9f30a4]
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
  9 [-]: GETGLOBAL R4 K0        ; R4 := mAffinityGrid
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 12 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4278
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xb496de90]
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  8 [-]: GETGLOBAL R3 K4        ; R3 := mAffinityGrid
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: LOADKB    R7 1 0       ; R7 := true
 13 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0xfc3fed1f]
 17 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 20 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x91a24e4b]
 21 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 22 [-]: CONST     R7 2         ; R7 := 2.000000
 23 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 24 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["ProgressInfo"]
 25 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mWidth"]
 26 [-]: DIV       R5 R5 K9     ; R5 := R5 / 2.000000
 27 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 28 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
 29 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x91a24e4b]
 30 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mClipName"]
 31 [-]: CONST     R8 3         ; R8 := 3.000000
 32 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 33 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["ProgressInfo"]
 34 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["mHeight"]
 35 [-]: DIV       R6 R6 K9     ; R6 := R6 / 2.000000
 36 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 37 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["ProgressInfo"]
 38 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mWidth"]
 39 [-]: ADD       R6 R6 K11    ; R6 := R6 + 8.000000
 40 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["ProgressInfo"]
 41 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["mHeight"]
 42 [-]: ADD       R7 R7 K11    ; R7 := R7 + 8.000000
 43 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 44 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4292
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xb496de90]
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  8 [-]: GETGLOBAL R3 K4        ; R3 := mAffinityGrid
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: LOADKB    R7 0 0       ; R7 := false
 13 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4300
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xaf5300dc]
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K4        ; R4 := ".XP"
  9 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 10 [-]: CALL      R1 3 1       ; R1(R2,R3)
 11 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xaf5300dc]
 13 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 14 [-]: LOADK     R4 K5        ; R4 := ".BonusXP"
 15 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 16 [-]: CALL      R1 3 1       ; R1(R2,R3)
 17 [-]: SETTABLE  R0 K6 K7     ; R0["IconHeight"] := 85.000000
 18 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["Filler"]
 19 [-]: TEST      R1 0         ; if not R1 then PC := 37
 20 [-]: JMP       37           ; PC := 37
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 25 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xc0a3774b]
 26 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 27 [-]: LOADK     R4 K10       ; R4 := "Seperator"
 28 [-]: CONST     R5 11        ; R5 := 11.000000
 29 [-]: LOADKB    R6 0 0       ; R6 := false
 30 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 31 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["ProgressInfo"]
 32 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mProgressBar"]
 33 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x368ad758]
 34 [-]: LOADKB    R3 0 0       ; R3 := false
 35 [-]: CALL      R1 3 1       ; R1(R2,R3)
 36 [-]: JMP       87           ; PC := 87
 37 [-]: GETTABLE  R1 R0 K14    ; R1 := R0["Onslaught"]
 38 [-]: TEST      R1 0         ; if not R1 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETUPVAL  R1 U1        ; R1 := U1
 41 [-]: MOVE      R2 R0        ; R2 := R0
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: JMP       75           ; PC := 75
 44 [-]: GETTABLE  R1 R0 K15    ; R1 := R0["Invasion"]
 45 [-]: TEST      R1 0         ; if not R1 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: GETUPVAL  R1 U2        ; R1 := U2
 48 [-]: MOVE      R2 R0        ; R2 := R0
 49 [-]: CALL      R1 2 1       ; R1(R2)
 50 [-]: JMP       75           ; PC := 75
 51 [-]: GETTABLE  R1 R0 K16    ; R1 := R0["Syndicate"]
 52 [-]: TEST      R1 0         ; if not R1 then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: GETUPVAL  R1 U3        ; R1 := U3
 55 [-]: MOVE      R2 R0        ; R2 := R0
 56 [-]: CALL      R1 2 1       ; R1(R2)
 57 [-]: JMP       75           ; PC := 75
 58 [-]: GETTABLE  R1 R0 K17    ; R1 := R0["Intrinsic"]
 59 [-]: TEST      R1 0         ; if not R1 then PC := 65
 60 [-]: JMP       65           ; PC := 65
 61 [-]: GETUPVAL  R1 U4        ; R1 := U4
 62 [-]: MOVE      R2 R0        ; R2 := R0
 63 [-]: CALL      R1 2 1       ; R1(R2)
 64 [-]: JMP       75           ; PC := 75
 65 [-]: GETTABLE  R1 R0 K18    ; R1 := R0["PolarityInfo"]
 66 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: GETUPVAL  R1 U5        ; R1 := U5
 69 [-]: MOVE      R2 R0        ; R2 := R0
 70 [-]: CALL      R1 2 1       ; R1(R2)
 71 [-]: JMP       75           ; PC := 75
 72 [-]: GETUPVAL  R1 U6        ; R1 := U6
 73 [-]: MOVE      R2 R0        ; R2 := R0
 74 [-]: CALL      R1 2 1       ; R1(R2)
 75 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 76 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xc0a3774b]
 77 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 78 [-]: LOADK     R4 K10       ; R4 := "Seperator"
 79 [-]: CONST     R5 11        ; R5 := 11.000000
 80 [-]: LOADKB    R6 1 0       ; R6 := true
 81 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 82 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["ProgressInfo"]
 83 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mProgressBar"]
 84 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x368ad758]
 85 [-]: LOADKB    R3 1 0       ; R3 := true
 86 [-]: CALL      R1 3 1       ; R1(R2,R3)
 87 [-]: GETUPVAL  R1 U7        ; R1 := U7
 88 [-]: GETTABLE  R1 R1 K19    ; R1 := R1[0xc339daf7]
 89 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 90 [-]: GETGLOBAL R3 K20       ; R3 := mAffinityGrid
 91 [-]: MOVE      R4 R0        ; R4 := R0
 92 [-]: GETUPVAL  R5 U8        ; R5 := U8
 93 [-]: MOVE      R6 R0        ; R6 := R0
 94 [-]: GETGLOBAL R7 K20       ; R7 := mAffinityGrid
 95 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0xed1ab921]
 96 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 97 [-]: EQ        1 R0 R7      ; if R0 == R7 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 100
100 [-]: LOADKB    R7 1 0       ; R7 := true
101 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
102 [-]: CALL      R1 0 1       ; R1(R2,...)
103 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["ProgressInfo"]
104 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0x89701469]
105 [-]: GETTABLE  R3 R0 K23    ; R3 := R0["Level"]
106 [-]: CALL      R1 3 1       ; R1(R2,R3)
107 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4336
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.Grid"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K3     ; R1 := R0[0xda0c93a2]
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K5        ; R3 := "ExpandableArea.Progression.Affinity.Grid.Item"
  7 [-]: LOADNIL   R4 R4        ; R4 := nil
  8 [-]: CONST     R5 2         ; R5 := 2.000000
  9 [-]: CONST     R6 3         ; R6 := 3.000000
 10 [-]: CALL      R1 6 2       ; R1 := R1(R2,R3,R4,R5,R6)
 11 [-]: SETGLOBAL R1 K2        ; mAffinityGrid := R1
 12 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 13 [-]: GETGLOBAL R2 K7        ; R2 := 0xfee8dbfd
 14 [-]: SETTABLE  R1 K6 R2     ; R1["VisibleRangeMaterial"] := R2
 15 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 16 [-]: GETGLOBAL R2 K9        ; R2 := 0xbacf3724
 17 [-]: SETTABLE  R1 K8 R2     ; R1["TextVisibleRangeMaterial"] := R2
 18 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 19 [-]: GETGLOBAL R2 K11       ; R2 := 0x2bbc1c3b
 20 [-]: SETTABLE  R1 K10 R2    ; R1["RectangleVisibleRangeMaterial"] := R2
 21 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 22 [-]: SETTABLE  R1 K12 K13   ; R1["PopupPadding"] := 6.000000
 23 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 24 [-]: SETTABLE  R1 K14 K15   ; R1["mColumnSeparation"] := 330.000000
 25 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 26 [-]: SETTABLE  R1 K16 K17   ; R1["mRowSeparation"] := 100.000000
 27 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 28 [-]: SETTABLE  R1 K18 K19   ; R1["mScrollAlwaysVisible"] := true
 29 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 30 [-]: GETGLOBAL R2 K2        ; R2 := mAffinityGrid
 31 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["mInitialDepth"]
 32 [-]: ADD       R2 R2 K21    ; R2 := R2 + 1000.000000
 33 [-]: SETTABLE  R1 K20 R2    ; R1["mInitialDepth"] := R2
 34 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 35 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 36 [-]: LOADK     R3 K23       ; R3 := "AffinitySelected"
 37 [-]: LOADK     R4 K24       ; R4 := "AffinityFocused"
 38 [-]: LOADK     R5 K25       ; R5 := "AffinityUnfocused"
 39 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 40 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 41 [-]: SETTABLE  R1 K26 K27   ; R1["mWrapAroundNavigation"] := false
 42 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 43 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1[0x3bc79f4f]
 44 [-]: LOADK     R3 K29       ; R3 := "ExpandableArea.Progression.Affinity.ScrollBar"
 45 [-]: CONST     R4 -6        ; R4 := -6.000000
 46 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 47 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 48 [-]: SELF      R1 R1 K30    ; R2 := R1; R1 := R1[0x7220acb6]
 49 [-]: CALL      R1 2 1       ; R1(R2)
 50 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 51 [-]: CLOSURE   R2 0         ; R2 := closure(Function #112.1)
 52 [-]: SETTABLE  R1 K31 R2    ; R1["RepositionButton"] := R2
 53 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 54 [-]: GETUPVAL  R2 U0        ; R2 := U0
 55 [-]: SETTABLE  R1 K32 R2    ; R1["mClipCreatedCallback"] := R2
 56 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 57 [-]: GETUPVAL  R2 U1        ; R2 := U1
 58 [-]: SETTABLE  R1 K33 R2    ; R1["mOnFocusedCallback"] := R2
 59 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 60 [-]: GETUPVAL  R2 U2        ; R2 := U2
 61 [-]: SETTABLE  R1 K34 R2    ; R1["mOnUnfocusedCallback"] := R2
 62 [-]: GETGLOBAL R1 K2        ; R1 := mAffinityGrid
 63 [-]: GETUPVAL  R2 U3        ; R2 := U3
 64 [-]: SETTABLE  R1 K35 R2    ; R1["mElementDrawCallback"] := R2
 65 [-]: GETUPVAL  R1 U4        ; R1 := U4
 66 [-]: CALL      R1 1 2       ; R1 := R1()
 67 [-]: TEST      R1 0         ; if not R1 then PC := 108
 68 [-]: JMP       108          ; PC := 108
 69 [-]: GETUPVAL  R1 U5        ; R1 := U5
 70 [-]: GETTABLE  R1 R1 K36    ; R1 := R1[0xcdc34211]
 71 [-]: CALL      R1 1 2       ; R1 := R1()
 72 [-]: TEST      R1 0         ; if not R1 then PC := 108
 73 [-]: JMP       108          ; PC := 108
 74 [-]: GETUPVAL  R1 U6        ; R1 := U6
 75 [-]: CALL      R1 1 2       ; R1 := R1()
 76 [-]: GETGLOBAL R2 K37       ; R2 := 0x7b998233
 77 [-]: MOVE      R3 R1        ; R3 := R1
 78 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 79 [-]: TEST      R2 1         ; if R2 then PC := 125
 80 [-]: JMP       125          ; PC := 125
 81 [-]: SELF      R2 R1 K38    ; R3 := R1; R2 := R1[0xb8c8dfbd]
 82 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 83 [-]: GETGLOBAL R3 K37       ; R3 := 0x7b998233
 84 [-]: MOVE      R4 R2        ; R4 := R2
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: TEST      R3 1         ; if R3 then PC := 125
 87 [-]: JMP       125          ; PC := 125
 88 [-]: GETGLOBAL R3 K39       ; R3 := 0xbe190284
 89 [-]: SELF      R3 R3 K40    ; R4 := R3; R3 := R3[0x5d204145]
 90 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 91 [-]: TEST      R3 1         ; if R3 then PC := 125
 92 [-]: JMP       125          ; PC := 125
 93 [-]: SELF      R3 R2 K41    ; R4 := R2; R3 := R2[0x864e4735]
 94 [-]: CONST     R5 0         ; R5 := 0.000000
 95 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 96 [-]: LT        0 K43 R3     ; if 0.000000 >= R3 then PC := 125
 97 [-]: JMP       125          ; PC := 125
 98 [-]: SETGLOBAL R3 K44       ; mIntrinsicPoints := R3
 99 [-]: GETGLOBAL R4 K45       ; R4 := mPlayerMissionInfo
100 [-]: SELF      R4 R4 K46    ; R5 := R4; R4 := R4[0x86da8894]
101 [-]: CONST     R6 0         ; R6 := 0.000000
102 [-]: MOVE      R7 R3        ; R7 := R3
103 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
104 [-]: GETGLOBAL R4 K47       ; R4 := mNumberOfLoadoutSlotsUsed
105 [-]: ADD       R4 R4 K48    ; R4 := R4 + 1.000000
106 [-]: SETGLOBAL R4 K47       ; mNumberOfLoadoutSlotsUsed := R4
107 [-]: JMP       125          ; PC := 125
108 [-]: GETGLOBAL R4 K45       ; R4 := mPlayerMissionInfo
109 [-]: EQ        1 R4 K49     ; if R4 == nil then PC := 125
110 [-]: JMP       125          ; PC := 125
111 [-]: GETGLOBAL R4 K45       ; R4 := mPlayerMissionInfo
112 [-]: SELF      R4 R4 K50    ; R5 := R4; R4 := R4[0xbf80fdd0]
113 [-]: CONST     R6 0         ; R6 := 0.000000
114 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
115 [-]: LT        0 K43 R4     ; if 0.000000 >= R4 then PC := 125
116 [-]: JMP       125          ; PC := 125
117 [-]: GETGLOBAL R5 K45       ; R5 := mPlayerMissionInfo
118 [-]: GETTABLE  R5 R5 K51    ; R5 := R5["mMissionRating"]
119 [-]: LT        0 K43 R5     ; if 0.000000 >= R5 then PC := 125
120 [-]: JMP       125          ; PC := 125
121 [-]: SETGLOBAL R4 K44       ; mIntrinsicPoints := R4
122 [-]: GETGLOBAL R5 K47       ; R5 := mNumberOfLoadoutSlotsUsed
123 [-]: ADD       R5 R5 K48    ; R5 := R5 + 1.000000
124 [-]: SETGLOBAL R5 K47       ; mNumberOfLoadoutSlotsUsed := R5
125 [-]: RETURN    R0 1         ; return 


; Function #112.1:
;
; Name:            
; Defined at line: 4351
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4380
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: SETTABLE  R0 K0 K1     ; R0["Icon"] := nil
  2 [-]: SETTABLE  R0 K2 K1     ; R0["Themed"] := nil
  3 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
  4 [-]: MOVE      R8 R1        ; R8 := R1
  5 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  6 [-]: TEST      R7 1         ; if R7 then PC := 178
  7 [-]: JMP       178          ; PC := 178
  8 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
  9 [-]: GETUPVAL  R8 U0        ; R8 := U0
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: TEST      R7 1         ; if R7 then PC := 178
 12 [-]: JMP       178          ; PC := 178
 13 [-]: GETTABLE  R7 R1 K4     ; R7 := R1["NORMAL"]
 14 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["LoadoutType"]
 15 [-]: EQ        0 R8 K7      ; if R8 ~= 1.000000 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETTABLE  R7 R1 K8     ; R7 := R1["SENTINEL"]
 18 [-]: JMP       48           ; PC := 48
 19 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["LoadoutType"]
 20 [-]: EQ        0 R8 K9      ; if R8 ~= 2.000000 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["ARCHWING"]
 23 [-]: JMP       48           ; PC := 48
 24 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["LoadoutType"]
 25 [-]: EQ        0 R8 K11     ; if R8 ~= 5.000000 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["OPERATOR"]
 28 [-]: JMP       48           ; PC := 48
 29 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["LoadoutType"]
 30 [-]: EQ        0 R8 K13     ; if R8 ~= 9.000000 then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["OPERATOR_ADULT"]
 33 [-]: JMP       48           ; PC := 48
 34 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["LoadoutType"]
 35 [-]: EQ        0 R8 K15     ; if R8 ~= 6.000000 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: GETTABLE  R7 R1 K16    ; R7 := R1["KDRIVE"]
 38 [-]: JMP       48           ; PC := 48
 39 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["LoadoutType"]
 40 [-]: EQ        0 R8 K17     ; if R8 ~= 8.000000 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: GETTABLE  R7 R1 K18    ; R7 := R1["MECH"]
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["LoadoutType"]
 45 [-]: EQ        0 R8 K19     ; if R8 ~= 7.000000 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: GETTABLE  R7 R1 K20    ; R7 := R1["DATAKNIFE"]
 48 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
 49 [-]: MOVE      R9 R7        ; R9 := R7
 50 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 51 [-]: TEST      R8 1         ; if R8 then PC := 314
 52 [-]: JMP       314          ; PC := 314
 53 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["Slot"]
 54 [-]: ADD       R8 R8 K7     ; R8 := R8 + 1.000000
 55 [-]: GETTABLE  R8 R7 R8     ; R8 := R7[R8]
 56 [-]: GETGLOBAL R9 K3        ; R9 := 0x7b998233
 57 [-]: MOVE      R10 R8       ; R10 := R8
 58 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 59 [-]: TEST      R9 1         ; if R9 then PC := 314
 60 [-]: JMP       314          ; PC := 314
 61 [-]: GETGLOBAL R9 K22       ; R9 := 0xb009bbc6
 62 [-]: GETTABLE  R10 R8 K23   ; R10 := R8["ItemType"]
 63 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 64 [-]: MOVE      R2 R9        ; R2 := R9
 65 [-]: GETGLOBAL R9 K24       ; R9 := 0x7ed0a956
 66 [-]: GETTABLE  R10 R8 K25   ; R10 := R8["FocusLens"]
 67 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 68 [-]: MOVE      R3 R9        ; R3 := R9
 69 [-]: GETTABLE  R4 R8 K26    ; R4 := R8["Expiry"]
 70 [-]: GETGLOBAL R9 K3        ; R9 := 0x7b998233
 71 [-]: MOVE      R10 R2       ; R10 := R2
 72 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 73 [-]: TEST      R9 1         ; if R9 then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: GETTABLE  R6 R8 K27    ; R6 := R8["LocTag"]
 76 [-]: GETGLOBAL R9 K3        ; R9 := 0x7b998233
 77 [-]: GETTABLE  R10 R8 K28   ; R10 := R8["ModularPartTypes"]
 78 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 79 [-]: TEST      R9 1         ; if R9 then PC := 102
 80 [-]: JMP       102          ; PC := 102
 81 [-]: CONST     R9 1         ; R9 := 1.000000
 82 [-]: GETTABLE  R10 R8 K28   ; R10 := R8["ModularPartTypes"]
 83 [-]: LEN       R10 R10      ; R10 := # R10
 84 [-]: CONST     R11 1        ; R11 := 1.000000
 85 [-]: FORPREP   R9 92        ; R9 -= R11; PC := 92
 86 [-]: GETTABLE  R13 R8 K28   ; R13 := R8["ModularPartTypes"]
 87 [-]: GETGLOBAL R14 K22      ; R14 := 0xb009bbc6
 88 [-]: GETTABLE  R15 R8 K28   ; R15 := R8["ModularPartTypes"]
 89 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 90 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 91 [-]: SETTABLE  R13 R12 R14  ; R13[R12] := R14
 92 [-]: FORLOOP   R9 86        ; R9 += R11; if R9 <= R10 then begin PC := 86; R12 := R9 end
 93 [-]: GETUPVAL  R13 U1       ; R13 := U1
 94 [-]: GETTABLE  R13 R13 K29  ; R13 := R13[0xda20bf25]
 95 [-]: GETTABLE  R14 R8 K28   ; R14 := R8["ModularPartTypes"]
 96 [-]: LOADNIL   R15 R15      ; R15 := nil
 97 [-]: LOADKB    R16 1 0      ; R16 := true
 98 [-]: CALL      R13 4 3      ; R13,R14 := R13(R14,R15,R16)
 99 [-]: SETTABLE  R0 K2 R14    ; R0["Themed"] := R14
100 [-]: SETTABLE  R0 K0 R13    ; R0["Icon"] := R13
101 [-]: JMP       109          ; PC := 109
102 [-]: GETUPVAL  R13 U1       ; R13 := U1
103 [-]: GETTABLE  R13 R13 K30  ; R13 := R13[0x056dcf06]
104 [-]: MOVE      R14 R2       ; R14 := R2
105 [-]: LOADKB    R15 1 0      ; R15 := true
106 [-]: CALL      R13 3 3      ; R13,R14 := R13(R14,R15)
107 [-]: SETTABLE  R0 K2 R14    ; R0["Themed"] := R14
108 [-]: SETTABLE  R0 K0 R13    ; R0["Icon"] := R13
109 [-]: GETGLOBAL R13 K3       ; R13 := 0x7b998233
110 [-]: MOVE      R14 R2       ; R14 := R2
111 [-]: CALL      R13 2 2      ; R13 := R13(R14)
112 [-]: TEST      R13 1        ; if R13 then PC := 314
113 [-]: JMP       314          ; PC := 314
114 [-]: GETTABLE  R13 R8 K31   ; R13 := R8["WeaponUpgrades"]
115 [-]: EQ        1 R13 K1     ; if R13 == nil then PC := 314
116 [-]: JMP       314          ; PC := 314
117 [-]: SELF      R13 R2 K32   ; R14 := R2; R13 := R2[0xf2deaf69]
118 [-]: GETUPVAL  R15 U2       ; R15 := U2
119 [-]: GETTABLE  R15 R15 K33  ; R15 := R15["KubrowPetSuit"]
120 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
121 [-]: TEST      R13 1        ; if R13 then PC := 314
122 [-]: JMP       314          ; PC := 314
123 [-]: GETUPVAL  R13 U3       ; R13 := U3
124 [-]: GETTABLE  R13 R13 K34  ; R13 := R13[0x06d055f9]
125 [-]: SELF      R14 R2 K32   ; R15 := R2; R14 := R2[0xf2deaf69]
126 [-]: GETUPVAL  R16 U2       ; R16 := U2
127 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["CatbrowPetSuit"]
128 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
129 [-]: CONST     R15 9        ; R15 := 9.000000
130 [-]: GETUPVAL  R16 U3       ; R16 := U3
131 [-]: GETTABLE  R16 R16 K34  ; R16 := R16[0x06d055f9]
132 [-]: GETTABLE  R17 R0 K21   ; R17 := R0["Slot"]
133 [-]: EQ        1 R17 K36    ; if R17 == 0.000000 then PC := 136
134 [-]: JMP       136          ; PC := 136
135 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 136
136 [-]: LOADKB    R17 1 0      ; R17 := true
137 [-]: CONST     R18 7        ; R18 := 7.000000
138 [-]: CONST     R19 0        ; R19 := 0.000000
139 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
140 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
141 [-]: CONST     R14 1        ; R14 := 1.000000
142 [-]: GETTABLE  R15 R8 K31   ; R15 := R8["WeaponUpgrades"]
143 [-]: LEN       R15 R15      ; R15 := # R15
144 [-]: CONST     R16 1        ; R16 := 1.000000
145 [-]: FORPREP   R14 176      ; R14 -= R16; PC := 176
146 [-]: GETGLOBAL R18 K24      ; R18 := 0x7ed0a956
147 [-]: GETTABLE  R19 R8 K31   ; R19 := R8["WeaponUpgrades"]
148 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
149 [-]: CALL      R18 2 2      ; R18 := R18(R19)
150 [-]: GETGLOBAL R19 K3       ; R19 := 0x7b998233
151 [-]: MOVE      R20 R18      ; R20 := R18
152 [-]: CALL      R19 2 2      ; R19 := R19(R20)
153 [-]: TEST      R19 1        ; if R19 then PC := 176
154 [-]: JMP       176          ; PC := 176
155 [-]: SELF      R19 R18 K32  ; R20 := R18; R19 := R18[0xf2deaf69]
156 [-]: GETGLOBAL R21 K37      ; R21 := gLotusSuitCustomizationType
157 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
158 [-]: TEST      R19 0        ; if not R19 then PC := 176
159 [-]: JMP       176          ; PC := 176
160 [-]: GETUPVAL  R19 U0       ; R19 := U0
161 [-]: SELF      R19 R19 K38  ; R20 := R19; R19 := R19[0x105074fb]
162 [-]: MOVE      R21 R18      ; R21 := R18
163 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
164 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
165 [-]: MOVE      R21 R19      ; R21 := R19
166 [-]: CALL      R20 2 2      ; R20 := R20(R21)
167 [-]: TEST      R20 1        ; if R20 then PC := 176
168 [-]: JMP       176          ; PC := 176
169 [-]: SELF      R20 R19 K39  ; R21 := R19; R20 := R19[0x06e65678]
170 [-]: MOVE      R22 R13      ; R22 := R13
171 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
172 [-]: TEST      R20 0        ; if not R20 then PC := 176
173 [-]: JMP       176          ; PC := 176
174 [-]: MOVE      R5 R19       ; R5 := R19
175 [-]: JMP       314          ; PC := 314
176 [-]: FORLOOP   R14 146      ; R14 += R16; if R14 <= R15 then begin PC := 146; R17 := R14 end
177 [-]: JMP       314          ; PC := 314
178 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
179 [-]: GETTABLE  R21 R0 K40   ; R21 := R0["InventoryController"]
180 [-]: CALL      R20 2 2      ; R20 := R20(R21)
181 [-]: TEST      R20 0        ; if not R20 then PC := 188
182 [-]: JMP       188          ; PC := 188
183 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
184 [-]: GETTABLE  R21 R0 K41   ; R21 := R0["ItemRes"]
185 [-]: CALL      R20 2 2      ; R20 := R20(R21)
186 [-]: TEST      R20 1        ; if R20 then PC := 314
187 [-]: JMP       314          ; PC := 314
188 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
189 [-]: GETTABLE  R21 R0 K41   ; R21 := R0["ItemRes"]
190 [-]: CALL      R20 2 2      ; R20 := R20(R21)
191 [-]: TEST      R20 1        ; if R20 then PC := 195
192 [-]: JMP       195          ; PC := 195
193 [-]: GETTABLE  R2 R0 K41    ; R2 := R0["ItemRes"]
194 [-]: JMP       204          ; PC := 204
195 [-]: GETTABLE  R20 R0 K40   ; R20 := R0["InventoryController"]
196 [-]: SELF      R20 R20 K42  ; R21 := R20; R20 := R20[0x2783de72]
197 [-]: GETGLOBAL R22 K43      ; R22 := mGameData
198 [-]: SELF      R22 R22 K44  ; R23 := R22; R22 := R22[0x62c81b76]
199 [-]: CALL      R22 2 2      ; R22 := R22(R23)
200 [-]: GETTABLE  R23 R0 K5    ; R23 := R0["LoadoutType"]
201 [-]: GETTABLE  R24 R0 K21   ; R24 := R0["Slot"]
202 [-]: CALL      R20 5 2      ; R20 := R20(R21,R22,R23,R24)
203 [-]: MOVE      R2 R20       ; R2 := R20
204 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
205 [-]: MOVE      R21 R2       ; R21 := R2
206 [-]: CALL      R20 2 2      ; R20 := R20(R21)
207 [-]: TEST      R20 1        ; if R20 then PC := 254
208 [-]: JMP       254          ; PC := 254
209 [-]: SELF      R20 R2 K32   ; R21 := R2; R20 := R2[0xf2deaf69]
210 [-]: GETUPVAL  R22 U2       ; R22 := U2
211 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["KubrowPetSuit"]
212 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
213 [-]: TEST      R20 1        ; if R20 then PC := 254
214 [-]: JMP       254          ; PC := 254
215 [-]: SELF      R20 R2 K45   ; R21 := R2; R20 := R2[0x53ef4cf8]
216 [-]: CALL      R20 2 2      ; R20 := R20(R21)
217 [-]: TEST      R20 0        ; if not R20 then PC := 222
218 [-]: JMP       222          ; PC := 222
219 [-]: SELF      R20 R2 K45   ; R21 := R2; R20 := R2[0x53ef4cf8]
220 [-]: CALL      R20 2 2      ; R20 := R20(R21)
221 [-]: MOVE      R2 R20       ; R2 := R20
222 [-]: GETUPVAL  R20 U3       ; R20 := U3
223 [-]: GETTABLE  R20 R20 K34  ; R20 := R20[0x06d055f9]
224 [-]: SELF      R21 R2 K32   ; R22 := R2; R21 := R2[0xf2deaf69]
225 [-]: GETUPVAL  R23 U2       ; R23 := U2
226 [-]: GETTABLE  R23 R23 K35  ; R23 := R23["CatbrowPetSuit"]
227 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
228 [-]: CONST     R22 9        ; R22 := 9.000000
229 [-]: GETUPVAL  R23 U3       ; R23 := U3
230 [-]: GETTABLE  R23 R23 K34  ; R23 := R23[0x06d055f9]
231 [-]: GETTABLE  R24 R0 K21   ; R24 := R0["Slot"]
232 [-]: EQ        1 R24 K36    ; if R24 == 0.000000 then PC := 235
233 [-]: JMP       235          ; PC := 235
234 [-]: LOADKB    R24 0 1      ; R24 := false; PC := 235
235 [-]: LOADKB    R24 1 0      ; R24 := true
236 [-]: CONST     R25 7        ; R25 := 7.000000
237 [-]: CONST     R26 0        ; R26 := 0.000000
238 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
239 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
240 [-]: SELF      R21 R2 K46   ; R22 := R2; R21 := R2[0x68d708a7]
241 [-]: CALL      R21 2 2      ; R21 := R21(R22)
242 [-]: SELF      R22 R21 K47  ; R23 := R21; R22 := R21[0x2540510f]
243 [-]: MOVE      R24 R20      ; R24 := R20
244 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
245 [-]: GETGLOBAL R23 K3       ; R23 := 0x7b998233
246 [-]: MOVE      R24 R22      ; R24 := R22
247 [-]: CALL      R23 2 2      ; R23 := R23(R24)
248 [-]: TEST      R23 1        ; if R23 then PC := 254
249 [-]: JMP       254          ; PC := 254
250 [-]: GETGLOBAL R23 K22      ; R23 := 0xb009bbc6
251 [-]: MOVE      R24 R22      ; R24 := R22
252 [-]: CALL      R23 2 2      ; R23 := R23(R24)
253 [-]: MOVE      R5 R23       ; R5 := R23
254 [-]: LOADNIL   R23 R23      ; R23 := nil
255 [-]: GETGLOBAL R24 K48      ; R24 := 0x89326c93
256 [-]: SELF      R24 R24 K49  ; R25 := R24; R24 := R24[0xfb64e76c]
257 [-]: CALL      R24 2 2      ; R24 := R24(R25)
258 [-]: GETGLOBAL R25 K3       ; R25 := 0x7b998233
259 [-]: MOVE      R26 R24      ; R26 := R24
260 [-]: CALL      R25 2 2      ; R25 := R25(R26)
261 [-]: TEST      R25 1        ; if R25 then PC := 266
262 [-]: JMP       266          ; PC := 266
263 [-]: SELF      R25 R24 K44  ; R26 := R24; R25 := R24[0x62c81b76]
264 [-]: CALL      R25 2 2      ; R25 := R25(R26)
265 [-]: MOVE      R23 R25      ; R23 := R25
266 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 272
267 [-]: JMP       272          ; PC := 272
268 [-]: GETGLOBAL R25 K43      ; R25 := mGameData
269 [-]: SELF      R25 R25 K44  ; R26 := R25; R25 := R25[0x62c81b76]
270 [-]: CALL      R25 2 2      ; R25 := R25(R26)
271 [-]: MOVE      R23 R25      ; R23 := R25
272 [-]: SELF      R25 R23 K50  ; R26 := R23; R25 := R23[0xb61abfd2]
273 [-]: GETTABLE  R27 R0 K5    ; R27 := R0["LoadoutType"]
274 [-]: GETTABLE  R28 R0 K21   ; R28 := R0["Slot"]
275 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
276 [-]: GETTABLE  R3 R25 K51   ; R3 := R25["mFocusLens"]
277 [-]: GETTABLE  R26 R0 K21   ; R26 := R0["Slot"]
278 [-]: GETGLOBAL R27 K6       ; R27 := 0x6c97a788
279 [-]: GETTABLE  R27 R27 K52  ; R27 := R27["NUM_NORMAL_LOADOUT_SLOTS"]
280 [-]: LE        1 R27 R26    ; if R27 <= R26 then PC := 285
281 [-]: JMP       285          ; PC := 285
282 [-]: GETTABLE  R26 R0 K5    ; R26 := R0["LoadoutType"]
283 [-]: EQ        0 R26 K17    ; if R26 ~= 8.000000 then PC := 314
284 [-]: JMP       314          ; PC := 314
285 [-]: GETGLOBAL R26 K53      ; R26 := 0x88efc25e
286 [-]: GETTABLE  R27 R25 K54  ; R27 := R25["mItemType"]
287 [-]: CALL      R26 2 2      ; R26 := R26(R27)
288 [-]: SETTABLE  R0 K23 R26   ; R0["ItemType"] := R26
289 [-]: GETGLOBAL R26 K3       ; R26 := 0x7b998233
290 [-]: MOVE      R27 R2       ; R27 := R2
291 [-]: CALL      R26 2 2      ; R26 := R26(R27)
292 [-]: TEST      R26 0        ; if not R26 then PC := 314
293 [-]: JMP       314          ; PC := 314
294 [-]: GETGLOBAL R26 K3       ; R26 := 0x7b998233
295 [-]: GETTABLE  R27 R0 K23   ; R27 := R0["ItemType"]
296 [-]: CALL      R26 2 2      ; R26 := R26(R27)
297 [-]: TEST      R26 1        ; if R26 then PC := 314
298 [-]: JMP       314          ; PC := 314
299 [-]: GETGLOBAL R26 K22      ; R26 := 0xb009bbc6
300 [-]: GETTABLE  R27 R0 K23   ; R27 := R0["ItemType"]
301 [-]: CALL      R26 2 2      ; R26 := R26(R27)
302 [-]: SELF      R27 R26 K55  ; R28 := R26; R27 := R26[0xd3a9d01f]
303 [-]: CALL      R27 2 2      ; R27 := R27(R28)
304 [-]: SELF      R27 R27 K56  ; R28 := R27; R27 := R27[0x6d604ba7]
305 [-]: CALL      R27 2 2      ; R27 := R27(R28)
306 [-]: MOVE      R6 R27       ; R6 := R27
307 [-]: GETUPVAL  R27 U1       ; R27 := U1
308 [-]: GETTABLE  R27 R27 K30  ; R27 := R27[0x056dcf06]
309 [-]: MOVE      R28 R26      ; R28 := R26
310 [-]: LOADKB    R29 1 0      ; R29 := true
311 [-]: CALL      R27 3 3      ; R27,R28 := R27(R28,R29)
312 [-]: SETTABLE  R0 K2 R28    ; R0["Themed"] := R28
313 [-]: SETTABLE  R0 K0 R27    ; R0["Icon"] := R27
314 [-]: SETTABLE  R0 K57 R2    ; R0["Item"] := R2
315 [-]: GETGLOBAL R27 K3       ; R27 := 0x7b998233
316 [-]: GETTABLE  R28 R0 K23   ; R28 := R0["ItemType"]
317 [-]: CALL      R27 2 2      ; R27 := R27(R28)
318 [-]: TEST      R27 0        ; if not R27 then PC := 324
319 [-]: JMP       324          ; PC := 324
320 [-]: GETGLOBAL R27 K53      ; R27 := 0x88efc25e
321 [-]: MOVE      R28 R2       ; R28 := R2
322 [-]: CALL      R27 2 2      ; R27 := R27(R28)
323 [-]: SETTABLE  R0 K23 R27   ; R0["ItemType"] := R27
324 [-]: GETGLOBAL R27 K3       ; R27 := 0x7b998233
325 [-]: MOVE      R28 R5       ; R28 := R5
326 [-]: CALL      R27 2 2      ; R27 := R27(R28)
327 [-]: TEST      R27 1        ; if R27 then PC := 337
328 [-]: JMP       337          ; PC := 337
329 [-]: GETUPVAL  R27 U1       ; R27 := U1
330 [-]: GETTABLE  R27 R27 K30  ; R27 := R27[0x056dcf06]
331 [-]: MOVE      R28 R5       ; R28 := R5
332 [-]: LOADKB    R29 1 0      ; R29 := true
333 [-]: CALL      R27 3 3      ; R27,R28 := R27(R28,R29)
334 [-]: SETTABLE  R0 K2 R28    ; R0["Themed"] := R28
335 [-]: SETTABLE  R0 K0 R27    ; R0["Icon"] := R27
336 [-]: JMP       360          ; PC := 360
337 [-]: GETGLOBAL R27 K3       ; R27 := 0x7b998233
338 [-]: MOVE      R28 R2       ; R28 := R2
339 [-]: CALL      R27 2 2      ; R27 := R27(R28)
340 [-]: TEST      R27 1        ; if R27 then PC := 360
341 [-]: JMP       360          ; PC := 360
342 [-]: SELF      R27 R2 K32   ; R28 := R2; R27 := R2[0xf2deaf69]
343 [-]: GETGLOBAL R29 K58      ; R29 := gLotusWeaponType
344 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
345 [-]: TEST      R27 0        ; if not R27 then PC := 360
346 [-]: JMP       360          ; PC := 360
347 [-]: SELF      R27 R2 K59   ; R28 := R2; R27 := R2[0x81f3a598]
348 [-]: CALL      R27 2 2      ; R27 := R27(R28)
349 [-]: TEST      R27 0        ; if not R27 then PC := 360
350 [-]: JMP       360          ; PC := 360
351 [-]: GETUPVAL  R27 U1       ; R27 := U1
352 [-]: GETTABLE  R27 R27 K29  ; R27 := R27[0xda20bf25]
353 [-]: SELF      R28 R2 K60   ; R29 := R2; R28 := R2[0xde7a1002]
354 [-]: CALL      R28 2 2      ; R28 := R28(R29)
355 [-]: LOADNIL   R29 R29      ; R29 := nil
356 [-]: LOADKB    R30 1 0      ; R30 := true
357 [-]: CALL      R27 4 3      ; R27,R28 := R27(R28,R29,R30)
358 [-]: SETTABLE  R0 K2 R28    ; R0["Themed"] := R28
359 [-]: SETTABLE  R0 K0 R27    ; R0["Icon"] := R27
360 [-]: SETTABLE  R0 K61 R3    ; R0["Lens"] := R3
361 [-]: SETTABLE  R0 K26 R4    ; R0["Expiry"] := R4
362 [-]: TEST      R6 0         ; if not R6 then PC := 366
363 [-]: JMP       366          ; PC := 366
364 [-]: SETTABLE  R0 K27 R6    ; R0["LocTag"] := R6
365 [-]: JMP       376          ; PC := 376
366 [-]: GETGLOBAL R27 K3       ; R27 := 0x7b998233
367 [-]: MOVE      R28 R2       ; R28 := R2
368 [-]: CALL      R27 2 2      ; R27 := R27(R28)
369 [-]: TEST      R27 1        ; if R27 then PC := 376
370 [-]: JMP       376          ; PC := 376
371 [-]: SELF      R27 R2 K55   ; R28 := R2; R27 := R2[0xd3a9d01f]
372 [-]: CALL      R27 2 2      ; R27 := R27(R28)
373 [-]: SELF      R27 R27 K56  ; R28 := R27; R27 := R27[0x6d604ba7]
374 [-]: CALL      R27 2 2      ; R27 := R27(R28)
375 [-]: SETTABLE  R0 K27 R27   ; R0["LocTag"] := R27
376 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4509
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Lens"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: CONST     R3 0         ; R3 := 0.000000
  7 [-]: RETURN    R3 2         ; return R3
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0x12afd099]
 10 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Lens"]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: GETGLOBAL R4 K3        ; R4 := mPlayerMissionInfo
 13 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x9de25d1e]
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: MOVE      R7 R2        ; R7 := R2
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: EQ        0 R4 K5      ; if R4 ~= 0.000000 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: CONST     R5 0         ; R5 := 0.000000
 20 [-]: RETURN    R5 2         ; return R5
 21 [-]: GETUPVAL  R5 U1        ; R5 := U1
 22 [-]: GETTABLE  R6 R3 K6     ; R6 := R3["PolarityType"]
 23 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 24 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 25 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 26 [-]: LOADK     R8 K8        ; R8 := "+"
 27 [-]: GETUPVAL  R9 U2        ; R9 := U2
 28 [-]: GETTABLE  R9 R9 K9     ; R9 := R9[0x1142c7a8]
 29 [-]: MOVE      R10 R4       ; R10 := R4
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 32 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 33 [-]: SETTABLE  R6 K7 R7     ; R6["Desc"] := R7
 34 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["ItemType"]
 35 [-]: SETTABLE  R6 K10 R7    ; R6["ItemType"] := R7
 36 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["LocTag"]
 37 [-]: EQ        1 R7 K12     ; if R7 == nil then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["LocTag"]
 40 [-]: SETTABLE  R6 K13 R7    ; R6["Label"] := R7
 41 [-]: JMP       53           ; PC := 53
 42 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
 43 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["ItemType"]
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: TEST      R7 1         ; if R7 then PC := 53
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETGLOBAL R7 K14       ; R7 := 0x64fb1586
 48 [-]: GETTABLE  R8 R0 K15    ; R8 := R0["Item"]
 49 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0xd3a9d01f]
 50 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 51 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 52 [-]: SETTABLE  R6 K13 R7    ; R6["Label"] := R7
 53 [-]: GETGLOBAL R7 K17       ; R7 := 0x6c97a788
 54 [-]: GETTABLE  R7 R7 K18    ; R7 := R7[0x834628e8]
 55 [-]: GETTABLE  R8 R6 K13    ; R8 := R6["Label"]
 56 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 57 [-]: EQ        0 R7 K19     ; if R7 ~= "" then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETGLOBAL R8 K20       ; R8 := 0x603636ad
 60 [-]: GETTABLE  R9 R6 K13    ; R9 := R6["Label"]
 61 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 62 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 63 [-]: SETTABLE  R6 K13 R8    ; R6["Label"] := R8
 64 [-]: JMP       66           ; PC := 66
 65 [-]: SETTABLE  R6 K13 R7    ; R6["Label"] := R7
 66 [-]: GETGLOBAL R8 K21       ; R8 := 0x7f5022cf
 67 [-]: GETTABLE  R8 R8 K22    ; R8 := R8[0x3f3e4d12]
 68 [-]: GETTABLE  R9 R6 K13    ; R9 := R6["Label"]
 69 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 70 [-]: SETTABLE  R6 K13 R8    ; R6["Label"] := R8
 71 [-]: EQ        0 R5 K12     ; if R5 ~= nil then PC := 89
 72 [-]: JMP       89           ; PC := 89
 73 [-]: NEWTABLE  R8 0 4       ; R8 := {}
 74 [-]: SETTABLE  R8 K23 R4    ; R8["FocusGained"] := R4
 75 [-]: SETTABLE  R8 K24 R3    ; R8["PolarityInfo"] := R3
 76 [-]: GETGLOBAL R9 K25       ; R9 := 0xb009bbc6
 77 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["Lens"]
 78 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 79 [-]: SETTABLE  R8 K1 R9     ; R8["Lens"] := R9
 80 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 81 [-]: MOVE      R10 R6       ; R10 := R6
 82 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 83 [-]: SETTABLE  R8 K26 R9    ; R8["ListItems"] := R9
 84 [-]: MOVE      R5 R8        ; R5 := R8
 85 [-]: GETUPVAL  R8 U1        ; R8 := U1
 86 [-]: GETTABLE  R9 R3 K6     ; R9 := R3["PolarityType"]
 87 [-]: SETTABLE  R8 R9 R5     ; R8[R9] := R5
 88 [-]: JMP       118          ; PC := 118
 89 [-]: GETGLOBAL R8 K27       ; R8 := 0xc8802016
 90 [-]: GETTABLE  R9 R5 K26    ; R9 := R5["ListItems"]
 91 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 92 [-]: JMP       98           ; PC := 98
 93 [-]: GETTABLE  R13 R12 K10  ; R13 := R12["ItemType"]
 94 [-]: GETTABLE  R14 R0 K10   ; R14 := R0["ItemType"]
 95 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: RETURN    R4 2         ; return R4
 98 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 93; R10 := R11 end
 99 [-]: JMP       93           ; PC := 93
100 [-]: GETTABLE  R13 R5 K24   ; R13 := R5["PolarityInfo"]
101 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["LensTier"]
102 [-]: GETTABLE  R14 R3 K28   ; R14 := R3["LensTier"]
103 [-]: LT        0 R13 R14    ; if R13 >= R14 then PC := 110
104 [-]: JMP       110          ; PC := 110
105 [-]: SETTABLE  R5 K24 R3    ; R5["PolarityInfo"] := R3
106 [-]: GETGLOBAL R13 K25      ; R13 := 0xb009bbc6
107 [-]: GETTABLE  R14 R0 K1    ; R14 := R0["Lens"]
108 [-]: CALL      R13 2 2      ; R13 := R13(R14)
109 [-]: SETTABLE  R5 K1 R13    ; R5["Lens"] := R13
110 [-]: GETTABLE  R13 R5 K23   ; R13 := R5["FocusGained"]
111 [-]: ADD       R13 R13 R4   ; R13 := R13 + R4
112 [-]: SETTABLE  R5 K23 R13   ; R5["FocusGained"] := R13
113 [-]: GETGLOBAL R13 K29      ; R13 := 0x33bdd652
114 [-]: GETTABLE  R13 R13 K30  ; R13 := R13[0x23d5322f]
115 [-]: GETTABLE  R14 R5 K26   ; R14 := R5["ListItems"]
116 [-]: MOVE      R15 R6       ; R15 := R6
117 [-]: CALL      R13 3 1      ; R13(R14,R15)
118 [-]: RETURN    R4 2         ; return R4
119 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4556
; #Upvalues:       5
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: NEWTABLE  R4 0 4       ; R4 := {}
  2 [-]: SETTABLE  R4 K0 R0     ; R4["LoadoutType"] := R0
  3 [-]: SETTABLE  R4 K1 R1     ; R4["Slot"] := R1
  4 [-]: SETTABLE  R4 K2 R2     ; R4["InventoryController"] := R2
  5 [-]: SETTABLE  R4 K3 R3     ; R4["ItemRes"] := R3
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: MOVE      R6 R4        ; R6 := R4
  8 [-]: GETGLOBAL R7 K4        ; R7 := mAffinityGrid
  9 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["ArchivedLoadout"]
 10 [-]: CALL      R5 3 1       ; R5(R6,R7)
 11 [-]: GETGLOBAL R5 K6        ; R5 := 0x7b998233
 12 [-]: GETTABLE  R6 R4 K7     ; R6 := R4["ItemType"]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: TEST      R5 1         ; if R5 then PC := 91
 15 [-]: JMP       91           ; PC := 91
 16 [-]: GETGLOBAL R5 K8        ; R5 := 0xc8802016
 17 [-]: GETGLOBAL R6 K4        ; R6 := mAffinityGrid
 18 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mElements"]
 19 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETTABLE  R10 R9 K7    ; R10 := R9["ItemType"]
 22 [-]: GETTABLE  R11 R4 K7    ; R11 := R4["ItemType"]
 23 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADNIL   R10 R10      ; R10 := nil
 26 [-]: RETURN    R10 2        ; return R10
 27 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 21; R7 := R8 end
 28 [-]: JMP       21           ; PC := 21
 29 [-]: GETUPVAL  R10 U1       ; R10 := U1
 30 [-]: MOVE      R11 R0       ; R11 := R0
 31 [-]: MOVE      R12 R1       ; R12 := R1
 32 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 33 [-]: TEST      R10 1        ; if R10 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R10 K4       ; R10 := mAffinityGrid
 36 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["PlainsFreeRoamArchwing"]
 37 [-]: TEST      R10 0        ; if not R10 then PC := 91
 38 [-]: JMP       91           ; PC := 91
 39 [-]: GETUPVAL  R10 U2       ; R10 := U2
 40 [-]: MOVE      R11 R4       ; R11 := R4
 41 [-]: MOVE      R12 R0       ; R12 := R0
 42 [-]: MOVE      R13 R1       ; R13 := R1
 43 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 44 [-]: GETGLOBAL R10 K12      ; R10 := mPlayerMissionInfo
 45 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0x438225b2]
 46 [-]: MOVE      R12 R0       ; R12 := R0
 47 [-]: MOVE      R13 R1       ; R13 := R1
 48 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 49 [-]: SETTABLE  R4 K11 R10   ; R4["XpGain"] := R10
 50 [-]: GETTABLE  R10 R4 K11   ; R10 := R4["XpGain"]
 51 [-]: LT        0 K14 R10    ; if 0.000000 >= R10 then PC := 91
 52 [-]: JMP       91           ; PC := 91
 53 [-]: GETGLOBAL R10 K12      ; R10 := mPlayerMissionInfo
 54 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10[0x910ed20a]
 55 [-]: MOVE      R12 R0       ; R12 := R0
 56 [-]: MOVE      R13 R1       ; R13 := R1
 57 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 58 [-]: SETTABLE  R4 K15 R10   ; R4["StartXp"] := R10
 59 [-]: GETUPVAL  R10 U3       ; R10 := U3
 60 [-]: GETTABLE  R10 R10 K18  ; R10 := R10[0x06d055f9]
 61 [-]: GETGLOBAL R11 K19      ; R11 := mMissionFailed
 62 [-]: CONST     R12 0        ; R12 := 0.000000
 63 [-]: GETGLOBAL R13 K12      ; R13 := mPlayerMissionInfo
 64 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13[0x7d0d1635]
 65 [-]: MOVE      R15 R0       ; R15 := R0
 66 [-]: MOVE      R16 R1       ; R16 := R1
 67 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 68 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 69 [-]: SETTABLE  R4 K17 R10   ; R4["XpBonus"] := R10
 70 [-]: SETTABLE  R4 K21 K22   ; R4["Count"] := 1.000000
 71 [-]: GETGLOBAL R10 K23      ; R10 := 0xa94df70b
 72 [-]: SELF      R10 R10 K24  ; R11 := R10; R10 := R10[0x757f0100]
 73 [-]: GETTABLE  R12 R4 K7    ; R12 := R4["ItemType"]
 74 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 75 [-]: GETGLOBAL R11 K25      ; R11 := 0x5bced4c4
 76 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0xac1b386a]
 77 [-]: MOVE      R12 R10      ; R12 := R10
 78 [-]: GETUPVAL  R13 U4       ; R13 := U4
 79 [-]: GETTABLE  R14 R4 K15   ; R14 := R4["StartXp"]
 80 [-]: GETTABLE  R15 R4 K7    ; R15 := R4["ItemType"]
 81 [-]: CALL      R13 3 0      ; R13,... := R13(R14,R15)
 82 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 83 [-]: LT        0 R11 R10    ; if R11 >= R10 then PC := 91
 84 [-]: JMP       91           ; PC := 91
 85 [-]: GETGLOBAL R12 K4       ; R12 := mAffinityGrid
 86 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12[0xbad4316f]
 87 [-]: MOVE      R14 R4       ; R14 := R4
 88 [-]: LOADKB    R15 1 0      ; R15 := true
 89 [-]: TAILCALL  R12 4 0      ; R12,... := R12(R13,R14,R15)
 90 [-]: RETURN    R12 0        ; return R12,...
 91 [-]: LOADNIL   R12 R12      ; R12 := nil
 92 [-]: RETURN    R12 2        ; return R12
 93 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4585
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: NEWTABLE  R2 0 5       ; R2 := {}
  2 [-]: SETTABLE  R2 K1 K2     ; R2[1.000000] := "/Lotus/Upgrades/Focus/AttackLens"
  3 [-]: SETTABLE  R2 K3 K4     ; R2[2.000000] := "/Lotus/Upgrades/Focus/DefenseLens"
  4 [-]: SETTABLE  R2 K5 K6     ; R2[3.000000] := "/Lotus/Upgrades/Focus/TacticLens"
  5 [-]: SETTABLE  R2 K7 K8     ; R2[4.000000] := "/Lotus/Upgrades/Focus/PowerLens"
  6 [-]: SETTABLE  R2 K9 K10    ; R2[7.000000] := "/Lotus/Upgrades/Focus/WardLens"
  7 [-]: CONST     R3 0         ; R3 := 0.000000
  8 [-]: CONST     R4 9         ; R4 := 9.000000
  9 [-]: CONST     R5 1         ; R5 := 1.000000
 10 [-]: FORPREP   R3 75        ; R3 -= R5; PC := 75
 11 [-]: GETGLOBAL R7 K11       ; R7 := mPlayerMissionInfo
 12 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0x7db2e929]
 13 [-]: MOVE      R9 R6        ; R9 := R6
 14 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 15 [-]: LT        0 K13 R7     ; if 0.000000 >= R7 then PC := 75
 16 [-]: JMP       75           ; PC := 75
 17 [-]: GETGLOBAL R8 K14       ; R8 := 0x7b998233
 18 [-]: GETTABLE  R9 R2 R6     ; R9 := R2[R6]
 19 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 20 [-]: TEST      R8 1         ; if R8 then PC := 75
 21 [-]: JMP       75           ; PC := 75
 22 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 23 [-]: GETGLOBAL R9 K16       ; R9 := 0x7ed0a956
 24 [-]: GETTABLE  R10 R2 R6    ; R10 := R2[R6]
 25 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 26 [-]: SETTABLE  R8 K15 R9    ; R8["Lens"] := R9
 27 [-]: GETUPVAL  R9 U0        ; R9 := U0
 28 [-]: GETTABLE  R9 R9 K17    ; R9 := R9[0x12afd099]
 29 [-]: GETTABLE  R10 R8 K15   ; R10 := R8["Lens"]
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 32 [-]: GETGLOBAL R11 K19      ; R11 := 0x603636ad
 33 [-]: LOADK     R12 K20      ; R12 := "/Lotus/Language/Categories/MISC"
 34 [-]: NEWTABLE  R13 0 0      ; R13 := {}
 35 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 36 [-]: SETTABLE  R10 K18 R11  ; R10["Label"] := R11
 37 [-]: NEWTABLE  R11 1 0      ; R11 := {}
 38 [-]: LOADK     R12 K22      ; R12 := "+"
 39 [-]: GETUPVAL  R13 U1       ; R13 := U1
 40 [-]: GETTABLE  R13 R13 K23  ; R13 := R13[0x1142c7a8]
 41 [-]: MOVE      R14 R7       ; R14 := R7
 42 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 43 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 44 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
 45 [-]: SETTABLE  R10 K21 R11  ; R10["Desc"] := R11
 46 [-]: GETUPVAL  R11 U2       ; R11 := U2
 47 [-]: GETTABLE  R12 R9 K24   ; R12 := R9["PolarityType"]
 48 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 49 [-]: EQ        0 R11 K25    ; if R11 ~= nil then PC := 67
 50 [-]: JMP       67           ; PC := 67
 51 [-]: NEWTABLE  R12 0 4      ; R12 := {}
 52 [-]: SETTABLE  R12 K26 R7   ; R12["FocusGained"] := R7
 53 [-]: SETTABLE  R12 K27 R9   ; R12["PolarityInfo"] := R9
 54 [-]: GETGLOBAL R13 K28      ; R13 := 0xb009bbc6
 55 [-]: GETTABLE  R14 R8 K15   ; R14 := R8["Lens"]
 56 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 57 [-]: SETTABLE  R12 K15 R13  ; R12["Lens"] := R13
 58 [-]: NEWTABLE  R13 1 0      ; R13 := {}
 59 [-]: MOVE      R14 R10      ; R14 := R10
 60 [-]: SETLIST   R13 1 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
 61 [-]: SETTABLE  R12 K29 R13  ; R12["ListItems"] := R13
 62 [-]: MOVE      R11 R12      ; R11 := R12
 63 [-]: GETUPVAL  R12 U2       ; R12 := U2
 64 [-]: GETTABLE  R13 R9 K24   ; R13 := R9["PolarityType"]
 65 [-]: SETTABLE  R12 R13 R11  ; R12[R13] := R11
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETTABLE  R12 R11 K26  ; R12 := R11["FocusGained"]
 68 [-]: ADD       R12 R12 R7   ; R12 := R12 + R7
 69 [-]: SETTABLE  R11 K26 R12  ; R11["FocusGained"] := R12
 70 [-]: GETGLOBAL R12 K30      ; R12 := 0x33bdd652
 71 [-]: GETTABLE  R12 R12 K31  ; R12 := R12[0x23d5322f]
 72 [-]: GETTABLE  R13 R11 K29  ; R13 := R11["ListItems"]
 73 [-]: MOVE      R14 R10      ; R14 := R10
 74 [-]: CALL      R12 3 1      ; R12(R13,R14)
 75 [-]: FORLOOP   R3 11        ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
 76 [-]: LOADNIL   R12 R12      ; R12 := nil
 77 [-]: RETURN    R12 2        ; return R12
 78 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4620
; #Upvalues:       17
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  48

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xcdc34211]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: LOADNIL   R2 R2        ; R2 := nil
  7 [-]: CONST     R3 0         ; R3 := 0.000000
  8 [-]: CLOSURE   R4 0         ; R4 := closure(Function #117.1)
  9 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: TEST      R5 1         ; if R5 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: SELF      R5 R1 K2     ; R6 := R1; R5 := R1[0xb8c8dfbd]
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: MOVE      R2 R5        ; R2 := R5
 17 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 18 [-]: MOVE      R6 R2        ; R6 := R2
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 0         ; if not R5 then PC := 43
 21 [-]: JMP       43           ; PC := 43
 22 [-]: GETGLOBAL R5 K3        ; R5 := 0x3d106989
 23 [-]: LOADK     R6 K4        ; R6 := "Cannot PopulateAffinityPanel local player! Avatar was NULL or InventoryController was wrong type"
 24 [-]: CALL      R5 2 1       ; R5(R6)
 25 [-]: ADD       R3 R3 K5     ; R3 := R3 + 1.000000
 26 [-]: GETGLOBAL R5 K6        ; R5 := mNumberOfLoadoutSlotsUsed
 27 [-]: LE        0 R3 R5      ; if R3 > R5 then PC := 42
 28 [-]: JMP       42           ; PC := 42
 29 [-]: MOVE      R5 R3        ; R5 := R3
 30 [-]: CONST     R6 9         ; R6 := 9.000000
 31 [-]: CONST     R7 1         ; R7 := 1.000000
 32 [-]: FORPREP   R5 41        ; R5 -= R7; PC := 41
 33 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
 34 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9[0xaade900e]
 35 [-]: MOVE      R11 R4       ; R11 := R4
 36 [-]: MOVE      R12 R8       ; R12 := R8
 37 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 38 [-]: CONST     R12 11       ; R12 := 11.000000
 39 [-]: LOADKB    R13 0 0      ; R13 := false
 40 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 41 [-]: FORLOOP   R5 33        ; R5 += R7; if R5 <= R6 then begin PC := 33; R8 := R5 end
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: GETUPVAL  R9 U0        ; R9 := U0
 44 [-]: GETTABLE  R9 R9 K0     ; R9 := R9[0xcdc34211]
 45 [-]: CALL      R9 1 2       ; R9 := R9()
 46 [-]: TEST      R9 1         ; if R9 then PC := 57
 47 [-]: JMP       57           ; PC := 57
 48 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
 49 [-]: GETGLOBAL R10 K9       ; R10 := mGameData
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: TEST      R9 1         ; if R9 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETGLOBAL R9 K9        ; R9 := mGameData
 54 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0x01f12112]
 55 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 56 [-]: JMP       59           ; PC := 59
 57 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 58
 58 [-]: LOADKB    R9 1 0       ; R9 := true
 59 [-]: GETUPVAL  R10 U2       ; R10 := U2
 60 [-]: GETTABLE  R10 R10 K11  ; R10 := R10[0x06d055f9]
 61 [-]: GETUPVAL  R11 U3       ; R11 := U3
 62 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["isPvp"]
 63 [-]: CONST     R12 3        ; R12 := 3.000000
 64 [-]: CONST     R13 0        ; R13 := 0.000000
 65 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 66 [-]: GETGLOBAL R11 K14      ; R11 := 0x76ea806b
 67 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11[0x3f3ae64c]
 68 [-]: CONST     R13 0        ; R13 := 0.000000
 69 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 70 [-]: TEST      R0 1         ; if R0 then PC := 117
 71 [-]: JMP       117          ; PC := 117
 72 [-]: GETGLOBAL R12 K9       ; R12 := mGameData
 73 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0x01f12112]
 74 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 75 [-]: TEST      R12 0        ; if not R12 then PC := 117
 76 [-]: JMP       117          ; PC := 117
 77 [-]: GETGLOBAL R12 K1       ; R12 := 0x7b998233
 78 [-]: MOVE      R13 R11      ; R13 := R11
 79 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 80 [-]: TEST      R12 1        ; if R12 then PC := 117
 81 [-]: JMP       117          ; PC := 117
 82 [-]: GETGLOBAL R12 K1       ; R12 := 0x7b998233
 83 [-]: GETGLOBAL R13 K16      ; R13 := 0x89326c93
 84 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 85 [-]: TEST      R12 1        ; if R12 then PC := 117
 86 [-]: JMP       117          ; PC := 117
 87 [-]: GETGLOBAL R12 K1       ; R12 := 0x7b998233
 88 [-]: GETUPVAL  R13 U4       ; R13 := U4
 89 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 90 [-]: TEST      R12 1        ; if R12 then PC := 117
 91 [-]: JMP       117          ; PC := 117
 92 [-]: SELF      R12 R11 K17  ; R13 := R11; R12 := R11[0x5ca33548]
 93 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 94 [-]: GETGLOBAL R13 K9       ; R13 := mGameData
 95 [-]: SELF      R13 R13 K18  ; R14 := R13; R13 := R13[0xaebb9855]
 96 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 97 [-]: CONST     R14 1        ; R14 := 1.000000
 98 [-]: LEN       R15 R13      ; R15 := # R13
 99 [-]: CONST     R16 1        ; R16 := 1.000000
100 [-]: FORPREP   R14 116      ; R14 -= R16; PC := 116
101 [-]: GETTABLE  R18 R13 R17  ; R18 := R13[R17]
102 [-]: GETTABLE  R18 R18 K19  ; R18 := R18["name"]
103 [-]: EQ        0 R18 R12    ; if R18 ~= R12 then PC := 116
104 [-]: JMP       116          ; PC := 116
105 [-]: GETGLOBAL R18 K20      ; R18 := mAffinityGrid
106 [-]: GETGLOBAL R19 K22      ; R19 := cjson
107 [-]: GETTABLE  R19 R19 K23  ; R19 := R19[0x7ab914d8]
108 [-]: GETTABLE  R20 R13 R17  ; R20 := R13[R17]
109 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["loadout"]
110 [-]: CALL      R19 2 2      ; R19 := R19(R20)
111 [-]: SETTABLE  R18 K21 R19  ; R18["ArchivedLoadout"] := R19
112 [-]: GETTABLE  R18 R13 R17  ; R18 := R13[R17]
113 [-]: GETTABLE  R18 R18 K26  ; R18 := R18["kubrowName"]
114 [-]: SETGLOBAL R18 K25      ; mPetName := R18
115 [-]: JMP       117          ; PC := 117
116 [-]: FORLOOP   R14 101      ; R14 += R16; if R14 <= R15 then begin PC := 101; R17 := R14 end
117 [-]: LOADKB    R18 0 0      ; R18 := false
118 [-]: GETUPVAL  R19 U5       ; R19 := U5
119 [-]: CALL      R19 1 2      ; R19 := R19()
120 [-]: TEST      R19 0        ; if not R19 then PC := 124
121 [-]: JMP       124          ; PC := 124
122 [-]: GETUPVAL  R19 U3       ; R19 := U3
123 [-]: GETTABLE  R19 R19 K12  ; R19 := R19["isPvp"]
124 [-]: GETGLOBAL R20 K27      ; R20 := mLocalPlayerMissionStats
125 [-]: EQ        1 R20 K28    ; if R20 == nil then PC := 139
126 [-]: JMP       139          ; PC := 139
127 [-]: GETGLOBAL R20 K27      ; R20 := mLocalPlayerMissionStats
128 [-]: GETTABLE  R20 R20 K29  ; R20 := R20["affMods"]
129 [-]: LEN       R20 R20      ; R20 := # R20
130 [-]: LT        0 K30 R20    ; if 0.000000 >= R20 then PC := 139
131 [-]: JMP       139          ; PC := 139
132 [-]: GETUPVAL  R20 U6       ; R20 := U6
133 [-]: GETGLOBAL R21 K27      ; R21 := mLocalPlayerMissionStats
134 [-]: GETTABLE  R21 R21 K29  ; R21 := R21["affMods"]
135 [-]: MOVE      R22 R19      ; R22 := R19
136 [-]: CALL      R20 3 1      ; R20(R21,R22)
137 [-]: LOADKB    R18 1 0      ; R18 := true
138 [-]: JMP       151          ; PC := 151
139 [-]: GETUPVAL  R20 U7       ; R20 := U7
140 [-]: CALL      R20 1 2      ; R20 := R20()
141 [-]: TEST      R20 0        ; if not R20 then PC := 146
142 [-]: JMP       146          ; PC := 146
143 [-]: GETUPVAL  R20 U8       ; R20 := U8
144 [-]: CALL      R20 1 1      ; R20()
145 [-]: LOADKB    R18 1 0      ; R18 := true
146 [-]: GETUPVAL  R20 U9       ; R20 := U9
147 [-]: CALL      R20 1 2      ; R20 := R20()
148 [-]: TEST      R20 0        ; if not R20 then PC := 151
149 [-]: JMP       151          ; PC := 151
150 [-]: LOADKB    R18 1 0      ; R18 := true
151 [-]: TEST      R18 1        ; if R18 then PC := 159
152 [-]: JMP       159          ; PC := 159
153 [-]: TEST      R19 0        ; if not R19 then PC := 159
154 [-]: JMP       159          ; PC := 159
155 [-]: GETUPVAL  R20 U6       ; R20 := U6
156 [-]: NEWTABLE  R21 0 0      ; R21 := {}
157 [-]: LOADKB    R22 1 0      ; R22 := true
158 [-]: CALL      R20 3 1      ; R20(R21,R22)
159 [-]: GETGLOBAL R20 K9       ; R20 := mGameData
160 [-]: SELF      R20 R20 K31  ; R21 := R20; R20 := R20[0x62c81b76]
161 [-]: CALL      R20 2 2      ; R20 := R20(R21)
162 [-]: GETGLOBAL R21 K20      ; R21 := mAffinityGrid
163 [-]: GETUPVAL  R22 U10      ; R22 := U10
164 [-]: MOVE      R23 R20      ; R23 := R20
165 [-]: CALL      R22 2 2      ; R22 := R22(R23)
166 [-]: SETTABLE  R21 K32 R22  ; R21["PlainsFreeRoamArchwing"] := R22
167 [-]: GETUPVAL  R21 U11      ; R21 := U11
168 [-]: MOVE      R22 R10      ; R22 := R10
169 [-]: CONST     R23 0        ; R23 := 0.000000
170 [-]: MOVE      R24 R2       ; R24 := R2
171 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
172 [-]: GETGLOBAL R21 K33      ; R21 := _T
173 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["TestAffinityCount"]
174 [-]: TEST      R21 0        ; if not R21 then PC := 206
175 [-]: JMP       206          ; PC := 206
176 [-]: GETUPVAL  R21 U11      ; R21 := U11
177 [-]: MOVE      R22 R10      ; R22 := R10
178 [-]: CONST     R23 0        ; R23 := 0.000000
179 [-]: MOVE      R24 R2       ; R24 := R2
180 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
181 [-]: GETUPVAL  R21 U11      ; R21 := U11
182 [-]: MOVE      R22 R10      ; R22 := R10
183 [-]: CONST     R23 0        ; R23 := 0.000000
184 [-]: MOVE      R24 R2       ; R24 := R2
185 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
186 [-]: GETUPVAL  R21 U11      ; R21 := U11
187 [-]: MOVE      R22 R10      ; R22 := R10
188 [-]: CONST     R23 0        ; R23 := 0.000000
189 [-]: MOVE      R24 R2       ; R24 := R2
190 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
191 [-]: GETUPVAL  R21 U11      ; R21 := U11
192 [-]: MOVE      R22 R10      ; R22 := R10
193 [-]: CONST     R23 0        ; R23 := 0.000000
194 [-]: MOVE      R24 R2       ; R24 := R2
195 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
196 [-]: GETUPVAL  R21 U11      ; R21 := U11
197 [-]: MOVE      R22 R10      ; R22 := R10
198 [-]: CONST     R23 0        ; R23 := 0.000000
199 [-]: MOVE      R24 R2       ; R24 := R2
200 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
201 [-]: GETUPVAL  R21 U11      ; R21 := U11
202 [-]: MOVE      R22 R10      ; R22 := R10
203 [-]: CONST     R23 0        ; R23 := 0.000000
204 [-]: MOVE      R24 R2       ; R24 := R2
205 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
206 [-]: GETUPVAL  R21 U11      ; R21 := U11
207 [-]: MOVE      R22 R10      ; R22 := R10
208 [-]: CONST     R23 2        ; R23 := 2.000000
209 [-]: MOVE      R24 R2       ; R24 := R2
210 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
211 [-]: GETUPVAL  R21 U11      ; R21 := U11
212 [-]: MOVE      R22 R10      ; R22 := R10
213 [-]: CONST     R23 1        ; R23 := 1.000000
214 [-]: MOVE      R24 R2       ; R24 := R2
215 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
216 [-]: GETUPVAL  R21 U11      ; R21 := U11
217 [-]: MOVE      R22 R10      ; R22 := R10
218 [-]: CONST     R23 3        ; R23 := 3.000000
219 [-]: MOVE      R24 R2       ; R24 := R2
220 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
221 [-]: GETUPVAL  R21 U11      ; R21 := U11
222 [-]: MOVE      R22 R10      ; R22 := R10
223 [-]: CONST     R23 4        ; R23 := 4.000000
224 [-]: MOVE      R24 R2       ; R24 := R2
225 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
226 [-]: GETUPVAL  R21 U11      ; R21 := U11
227 [-]: MOVE      R22 R10      ; R22 := R10
228 [-]: CONST     R23 5        ; R23 := 5.000000
229 [-]: MOVE      R24 R2       ; R24 := R2
230 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
231 [-]: GETUPVAL  R21 U11      ; R21 := U11
232 [-]: MOVE      R22 R10      ; R22 := R10
233 [-]: CONST     R23 6        ; R23 := 6.000000
234 [-]: MOVE      R24 R2       ; R24 := R2
235 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
236 [-]: GETUPVAL  R21 U11      ; R21 := U11
237 [-]: CONST     R22 8        ; R22 := 8.000000
238 [-]: CONST     R23 0        ; R23 := 0.000000
239 [-]: MOVE      R24 R2       ; R24 := R2
240 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
241 [-]: GETUPVAL  R21 U11      ; R21 := U11
242 [-]: CONST     R22 8        ; R22 := 8.000000
243 [-]: CONST     R23 4        ; R23 := 4.000000
244 [-]: MOVE      R24 R2       ; R24 := R2
245 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
246 [-]: GETUPVAL  R21 U11      ; R21 := U11
247 [-]: CONST     R22 8        ; R22 := 8.000000
248 [-]: CONST     R23 5        ; R23 := 5.000000
249 [-]: MOVE      R24 R2       ; R24 := R2
250 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
251 [-]: GETUPVAL  R21 U11      ; R21 := U11
252 [-]: CONST     R22 7        ; R22 := 7.000000
253 [-]: CONST     R23 2        ; R23 := 2.000000
254 [-]: MOVE      R24 R2       ; R24 := R2
255 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
256 [-]: GETUPVAL  R21 U12      ; R21 := U12
257 [-]: MOVE      R22 R10      ; R22 := R10
258 [-]: MOVE      R23 R2       ; R23 := R2
259 [-]: CALL      R21 3 1      ; R21(R22,R23)
260 [-]: GETGLOBAL R21 K16      ; R21 := 0x89326c93
261 [-]: SELF      R21 R21 K35  ; R22 := R21; R21 := R21[0xfb64e76c]
262 [-]: CALL      R21 2 2      ; R21 := R21(R22)
263 [-]: GETGLOBAL R22 K1       ; R22 := 0x7b998233
264 [-]: MOVE      R23 R21      ; R23 := R21
265 [-]: CALL      R22 2 2      ; R22 := R22(R23)
266 [-]: TEST      R22 1        ; if R22 then PC := 296
267 [-]: JMP       296          ; PC := 296
268 [-]: SELF      R22 R21 K36  ; R23 := R21; R22 := R21[0x5578d98b]
269 [-]: CALL      R22 2 2      ; R22 := R22(R23)
270 [-]: CONST     R23 5        ; R23 := 5.000000
271 [-]: SELF      R24 R21 K31  ; R25 := R21; R24 := R21[0x62c81b76]
272 [-]: CALL      R24 2 2      ; R24 := R24(R25)
273 [-]: GETTABLE  R24 R24 K37  ; R24 := R24["mOperatorType"]
274 [-]: EQ        0 R24 K38    ; if R24 ~= 4.000000 then PC := 277
275 [-]: JMP       277          ; PC := 277
276 [-]: CONST     R23 9        ; R23 := 9.000000
277 [-]: GETGLOBAL R24 K1       ; R24 := 0x7b998233
278 [-]: MOVE      R25 R22      ; R25 := R22
279 [-]: CALL      R24 2 2      ; R24 := R24(R25)
280 [-]: TEST      R24 1        ; if R24 then PC := 289
281 [-]: JMP       289          ; PC := 289
282 [-]: GETUPVAL  R24 U11      ; R24 := U11
283 [-]: MOVE      R25 R23      ; R25 := R23
284 [-]: CONST     R26 2        ; R26 := 2.000000
285 [-]: SELF      R27 R22 K39  ; R28 := R22; R27 := R22[0xde321e6f]
286 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
287 [-]: CALL      R24 0 1      ; R24(R25,...)
288 [-]: JMP       296          ; PC := 296
289 [-]: TEST      R9 0         ; if not R9 then PC := 296
290 [-]: JMP       296          ; PC := 296
291 [-]: GETUPVAL  R24 U11      ; R24 := U11
292 [-]: MOVE      R25 R23      ; R25 := R23
293 [-]: CONST     R26 2        ; R26 := 2.000000
294 [-]: LOADNIL   R27 R27      ; R27 := nil
295 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
296 [-]: GETUPVAL  R24 U13      ; R24 := U13
297 [-]: CALL      R24 1 2      ; R24 := R24()
298 [-]: GETTABLE  R24 R24 K40  ; R24 := R24["archwingRequired"]
299 [-]: EQ        1 R24 K41    ; if R24 == true then PC := 305
300 [-]: JMP       305          ; PC := 305
301 [-]: GETGLOBAL R24 K20      ; R24 := mAffinityGrid
302 [-]: GETTABLE  R24 R24 K32  ; R24 := R24["PlainsFreeRoamArchwing"]
303 [-]: TEST      R24 0        ; if not R24 then PC := 324
304 [-]: JMP       324          ; PC := 324
305 [-]: GETUPVAL  R24 U11      ; R24 := U11
306 [-]: CONST     R25 2        ; R25 := 2.000000
307 [-]: CONST     R26 0        ; R26 := 0.000000
308 [-]: MOVE      R27 R2       ; R27 := R2
309 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
310 [-]: GETGLOBAL R24 K20      ; R24 := mAffinityGrid
311 [-]: GETTABLE  R24 R24 K32  ; R24 := R24["PlainsFreeRoamArchwing"]
312 [-]: TEST      R24 1        ; if R24 then PC := 324
313 [-]: JMP       324          ; PC := 324
314 [-]: GETUPVAL  R24 U11      ; R24 := U11
315 [-]: CONST     R25 2        ; R25 := 2.000000
316 [-]: CONST     R26 2        ; R26 := 2.000000
317 [-]: MOVE      R27 R2       ; R27 := R2
318 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
319 [-]: GETUPVAL  R24 U11      ; R24 := U11
320 [-]: CONST     R25 2        ; R25 := 2.000000
321 [-]: CONST     R26 3        ; R26 := 3.000000
322 [-]: MOVE      R27 R2       ; R27 := R2
323 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
324 [-]: GETGLOBAL R24 K42      ; R24 := mIntrinsicPoints
325 [-]: EQ        1 R24 K28    ; if R24 == nil then PC := 333
326 [-]: JMP       333          ; PC := 333
327 [-]: GETGLOBAL R24 K20      ; R24 := mAffinityGrid
328 [-]: SELF      R24 R24 K43  ; R25 := R24; R24 := R24[0xbad4316f]
329 [-]: NEWTABLE  R26 0 1      ; R26 := {}
330 [-]: SETTABLE  R26 K44 K41  ; R26["Intrinsic"] := true
331 [-]: LOADKB    R27 1 0      ; R27 := true
332 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
333 [-]: GETUPVAL  R24 U3       ; R24 := U3
334 [-]: GETTABLE  R24 R24 K12  ; R24 := R24["isPvp"]
335 [-]: TEST      R24 1        ; if R24 then PC := 500
336 [-]: JMP       500          ; PC := 500
337 [-]: LOADNIL   R24 R27      ; R24 := R25 := R26 := R27 := nil
338 [-]: SELF      R28 R20 K45  ; R29 := R20; R28 := R20[0x8af486d8]
339 [-]: CALL      R28 2 2      ; R28 := R28(R29)
340 [-]: TEST      R0 0         ; if not R0 then PC := 480
341 [-]: JMP       480          ; PC := 480
342 [-]: TEST      R28 0        ; if not R28 then PC := 348
343 [-]: JMP       348          ; PC := 348
344 [-]: GETTABLE  R29 R20 K46  ; R29 := R20["mKubrowPetDetails"]
345 [-]: GETTABLE  R29 R29 K47  ; R29 := R29["mName"]
346 [-]: SETGLOBAL R29 K25      ; mPetName := R29
347 [-]: JMP       350          ; PC := 350
348 [-]: LOADK     R29 K48      ; R29 := ""
349 [-]: SETGLOBAL R29 K25      ; mPetName := R29
350 [-]: SELF      R29 R2 K49   ; R30 := R2; R29 := R2[0x2676deee]
351 [-]: CALL      R29 2 2      ; R29 := R29(R30)
352 [-]: MOVE      R25 R29      ; R25 := R29
353 [-]: GETGLOBAL R29 K1       ; R29 := 0x7b998233
354 [-]: MOVE      R30 R25      ; R30 := R25
355 [-]: CALL      R29 2 2      ; R29 := R29(R30)
356 [-]: TEST      R29 1        ; if R29 then PC := 378
357 [-]: JMP       378          ; PC := 378
358 [-]: SELF      R29 R25 K39  ; R30 := R25; R29 := R25[0xde321e6f]
359 [-]: CALL      R29 2 2      ; R29 := R29(R30)
360 [-]: SELF      R29 R29 K50  ; R30 := R29; R29 := R29[0xf7d48ee0]
361 [-]: CALL      R29 2 2      ; R29 := R29(R30)
362 [-]: MOVE      R24 R29      ; R24 := R29
363 [-]: TEST      R28 1        ; if R28 then PC := 371
364 [-]: JMP       371          ; PC := 371
365 [-]: SELF      R29 R25 K39  ; R30 := R25; R29 := R25[0xde321e6f]
366 [-]: CALL      R29 2 2      ; R29 := R29(R30)
367 [-]: SELF      R29 R29 K51  ; R30 := R29; R29 := R29[0xe85a2361]
368 [-]: CONST     R31 1        ; R31 := 1.000000
369 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
370 [-]: MOVE      R27 R29      ; R27 := R29
371 [-]: SELF      R29 R20 K53  ; R30 := R20; R29 := R20[0x5ea7c3b1]
372 [-]: CALL      R29 2 2      ; R29 := R29(R30)
373 [-]: TEST      R29 0        ; if not R29 then PC := 378
374 [-]: JMP       378          ; PC := 378
375 [-]: SELF      R29 R25 K54  ; R30 := R25; R29 := R25[0xdff9d2a7]
376 [-]: CALL      R29 2 2      ; R29 := R29(R30)
377 [-]: SETGLOBAL R29 K25      ; mPetName := R29
378 [-]: GETGLOBAL R29 K1       ; R29 := 0x7b998233
379 [-]: MOVE      R30 R25      ; R30 := R25
380 [-]: CALL      R29 2 2      ; R29 := R29(R30)
381 [-]: TEST      R29 1        ; if R29 then PC := 388
382 [-]: JMP       388          ; PC := 388
383 [-]: GETGLOBAL R29 K1       ; R29 := 0x7b998233
384 [-]: MOVE      R30 R24      ; R30 := R24
385 [-]: CALL      R29 2 2      ; R29 := R29(R30)
386 [-]: TEST      R29 0        ; if not R29 then PC := 480
387 [-]: JMP       480          ; PC := 480
388 [-]: SELF      R29 R20 K55  ; R30 := R20; R29 := R20[0xc1a84a4b]
389 [-]: CONST     R31 1        ; R31 := 1.000000
390 [-]: CONST     R32 0        ; R32 := 0.000000
391 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
392 [-]: GETGLOBAL R30 K1       ; R30 := 0x7b998233
393 [-]: MOVE      R31 R29      ; R31 := R29
394 [-]: CALL      R30 2 2      ; R30 := R30(R31)
395 [-]: TEST      R30 1        ; if R30 then PC := 451
396 [-]: JMP       451          ; PC := 451
397 [-]: GETGLOBAL R30 K1       ; R30 := 0x7b998233
398 [-]: GETTABLE  R31 R29 K56  ; R31 := R29["mItem"]
399 [-]: CALL      R30 2 2      ; R30 := R30(R31)
400 [-]: TEST      R30 1        ; if R30 then PC := 451
401 [-]: JMP       451          ; PC := 451
402 [-]: GETGLOBAL R30 K1       ; R30 := 0x7b998233
403 [-]: GETTABLE  R31 R29 K56  ; R31 := R29["mItem"]
404 [-]: GETTABLE  R31 R31 K57  ; R31 := R31["mItemType"]
405 [-]: CALL      R30 2 2      ; R30 := R30(R31)
406 [-]: TEST      R30 1        ; if R30 then PC := 451
407 [-]: JMP       451          ; PC := 451
408 [-]: GETGLOBAL R30 K58      ; R30 := 0xb009bbc6
409 [-]: GETTABLE  R31 R29 K56  ; R31 := R29["mItem"]
410 [-]: GETTABLE  R31 R31 K57  ; R31 := R31["mItemType"]
411 [-]: CALL      R30 2 2      ; R30 := R30(R31)
412 [-]: MOVE      R24 R30      ; R24 := R30
413 [-]: GETTABLE  R30 R29 K56  ; R30 := R29["mItem"]
414 [-]: GETTABLE  R30 R30 K59  ; R30 := R30["mModularParts"]
415 [-]: LEN       R30 R30      ; R30 := # R30
416 [-]: LT        0 K30 R30    ; if 0.000000 >= R30 then PC := 425
417 [-]: JMP       425          ; PC := 425
418 [-]: GETUPVAL  R30 U14      ; R30 := U14
419 [-]: GETTABLE  R30 R30 K60  ; R30 := R30[0xda20bf25]
420 [-]: GETTABLE  R31 R29 K56  ; R31 := R29["mItem"]
421 [-]: GETTABLE  R31 R31 K59  ; R31 := R31["mModularParts"]
422 [-]: LOADNIL   R32 R32      ; R32 := nil
423 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
424 [-]: MOVE      R26 R30      ; R26 := R30
425 [-]: GETTABLE  R30 R29 K56  ; R30 := R29["mItem"]
426 [-]: SELF      R30 R30 K61  ; R31 := R30; R30 := R30[0x68d708a7]
427 [-]: GETTABLE  R32 R29 K62  ; R32 := R29["mCustSlot"]
428 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
429 [-]: SELF      R31 R30 K63  ; R32 := R30; R31 := R30[0x2540510f]
430 [-]: CONST     R33 7        ; R33 := 7.000000
431 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
432 [-]: GETGLOBAL R32 K1       ; R32 := 0x7b998233
433 [-]: MOVE      R33 R31      ; R33 := R31
434 [-]: CALL      R32 2 2      ; R32 := R32(R33)
435 [-]: TEST      R32 1        ; if R32 then PC := 451
436 [-]: JMP       451          ; PC := 451
437 [-]: GETGLOBAL R32 K58      ; R32 := 0xb009bbc6
438 [-]: MOVE      R33 R31      ; R33 := R31
439 [-]: CALL      R32 2 2      ; R32 := R32(R33)
440 [-]: GETGLOBAL R33 K1       ; R33 := 0x7b998233
441 [-]: MOVE      R34 R32      ; R34 := R32
442 [-]: CALL      R33 2 2      ; R33 := R33(R34)
443 [-]: TEST      R33 1        ; if R33 then PC := 451
444 [-]: JMP       451          ; PC := 451
445 [-]: GETUPVAL  R33 U14      ; R33 := U14
446 [-]: GETTABLE  R33 R33 K64  ; R33 := R33[0x056dcf06]
447 [-]: MOVE      R34 R32      ; R34 := R32
448 [-]: LOADKB    R35 1 0      ; R35 := true
449 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
450 [-]: MOVE      R26 R33      ; R26 := R33
451 [-]: TEST      R28 1        ; if R28 then PC := 480
452 [-]: JMP       480          ; PC := 480
453 [-]: GETGLOBAL R33 K1       ; R33 := 0x7b998233
454 [-]: MOVE      R34 R24      ; R34 := R24
455 [-]: CALL      R33 2 2      ; R33 := R33(R34)
456 [-]: TEST      R33 1        ; if R33 then PC := 480
457 [-]: JMP       480          ; PC := 480
458 [-]: SELF      R33 R20 K65  ; R34 := R20; R33 := R20[0xb61abfd2]
459 [-]: CONST     R35 1        ; R35 := 1.000000
460 [-]: CONST     R36 2        ; R36 := 2.000000
461 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
462 [-]: GETGLOBAL R34 K1       ; R34 := 0x7b998233
463 [-]: MOVE      R35 R33      ; R35 := R33
464 [-]: CALL      R34 2 2      ; R34 := R34(R35)
465 [-]: TEST      R34 1        ; if R34 then PC := 480
466 [-]: JMP       480          ; PC := 480
467 [-]: GETGLOBAL R34 K1       ; R34 := 0x7b998233
468 [-]: GETTABLE  R35 R33 K57  ; R35 := R33["mItemType"]
469 [-]: CALL      R34 2 2      ; R34 := R34(R35)
470 [-]: TEST      R34 1        ; if R34 then PC := 480
471 [-]: JMP       480          ; PC := 480
472 [-]: GETGLOBAL R34 K58      ; R34 := 0xb009bbc6
473 [-]: SELF      R35 R20 K65  ; R36 := R20; R35 := R20[0xb61abfd2]
474 [-]: CONST     R37 1        ; R37 := 1.000000
475 [-]: CONST     R38 2        ; R38 := 2.000000
476 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
477 [-]: GETTABLE  R35 R35 K57  ; R35 := R35["mItemType"]
478 [-]: CALL      R34 2 2      ; R34 := R34(R35)
479 [-]: MOVE      R27 R34      ; R27 := R34
480 [-]: GETUPVAL  R34 U11      ; R34 := U11
481 [-]: CONST     R35 1        ; R35 := 1.000000
482 [-]: CONST     R36 0        ; R36 := 0.000000
483 [-]: MOVE      R37 R2       ; R37 := R2
484 [-]: MOVE      R38 R24      ; R38 := R24
485 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
486 [-]: EQ        1 R34 K28    ; if R34 == nil then PC := 494
487 [-]: JMP       494          ; PC := 494
488 [-]: GETGLOBAL R35 K1       ; R35 := 0x7b998233
489 [-]: MOVE      R36 R26      ; R36 := R26
490 [-]: CALL      R35 2 2      ; R35 := R35(R36)
491 [-]: TEST      R35 1        ; if R35 then PC := 494
492 [-]: JMP       494          ; PC := 494
493 [-]: SETTABLE  R34 K66 R26  ; R34["Icon"] := R26
494 [-]: GETUPVAL  R35 U11      ; R35 := U11
495 [-]: CONST     R36 1        ; R36 := 1.000000
496 [-]: CONST     R37 2        ; R37 := 2.000000
497 [-]: MOVE      R38 R2       ; R38 := R2
498 [-]: MOVE      R39 R27      ; R39 := R27
499 [-]: CALL      R35 5 1      ; R35(R36,R37,R38,R39)
500 [-]: GETUPVAL  R35 U15      ; R35 := U15
501 [-]: CALL      R35 1 2      ; R35 := R35()
502 [-]: TEST      R35 0        ; if not R35 then PC := 568
503 [-]: JMP       568          ; PC := 568
504 [-]: LOADNIL   R35 R36      ; R35 := R36 := nil
505 [-]: SELF      R37 R20 K55  ; R38 := R20; R37 := R20[0xc1a84a4b]
506 [-]: CONST     R39 6        ; R39 := 6.000000
507 [-]: CONST     R40 0        ; R40 := 0.000000
508 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
509 [-]: GETGLOBAL R38 K1       ; R38 := 0x7b998233
510 [-]: MOVE      R39 R37      ; R39 := R37
511 [-]: CALL      R38 2 2      ; R38 := R38(R39)
512 [-]: TEST      R38 1        ; if R38 then PC := 553
513 [-]: JMP       553          ; PC := 553
514 [-]: GETGLOBAL R38 K1       ; R38 := 0x7b998233
515 [-]: GETTABLE  R39 R37 K56  ; R39 := R37["mItem"]
516 [-]: CALL      R38 2 2      ; R38 := R38(R39)
517 [-]: TEST      R38 1        ; if R38 then PC := 553
518 [-]: JMP       553          ; PC := 553
519 [-]: GETGLOBAL R38 K1       ; R38 := 0x7b998233
520 [-]: GETTABLE  R39 R37 K56  ; R39 := R37["mItem"]
521 [-]: GETTABLE  R39 R39 K57  ; R39 := R39["mItemType"]
522 [-]: CALL      R38 2 2      ; R38 := R38(R39)
523 [-]: TEST      R38 1        ; if R38 then PC := 553
524 [-]: JMP       553          ; PC := 553
525 [-]: GETGLOBAL R38 K58      ; R38 := 0xb009bbc6
526 [-]: GETTABLE  R39 R37 K56  ; R39 := R37["mItem"]
527 [-]: GETTABLE  R39 R39 K57  ; R39 := R39["mItemType"]
528 [-]: CALL      R38 2 2      ; R38 := R38(R39)
529 [-]: MOVE      R35 R38      ; R35 := R38
530 [-]: GETTABLE  R38 R37 K56  ; R38 := R37["mItem"]
531 [-]: GETTABLE  R38 R38 K59  ; R38 := R38["mModularParts"]
532 [-]: LEN       R38 R38      ; R38 := # R38
533 [-]: LT        0 K30 R38    ; if 0.000000 >= R38 then PC := 542
534 [-]: JMP       542          ; PC := 542
535 [-]: GETUPVAL  R38 U14      ; R38 := U14
536 [-]: GETTABLE  R38 R38 K60  ; R38 := R38[0xda20bf25]
537 [-]: GETTABLE  R39 R37 K56  ; R39 := R37["mItem"]
538 [-]: GETTABLE  R39 R39 K59  ; R39 := R39["mModularParts"]
539 [-]: LOADNIL   R40 R40      ; R40 := nil
540 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
541 [-]: MOVE      R36 R38      ; R36 := R38
542 [-]: GETTABLE  R38 R37 K56  ; R38 := R37["mItem"]
543 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["mItemName"]
544 [-]: EQ        1 R38 K28    ; if R38 == nil then PC := 553
545 [-]: JMP       553          ; PC := 553
546 [-]: GETTABLE  R38 R37 K56  ; R38 := R37["mItem"]
547 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["mItemName"]
548 [-]: EQ        1 R38 K48    ; if R38 == "" then PC := 553
549 [-]: JMP       553          ; PC := 553
550 [-]: GETTABLE  R38 R37 K56  ; R38 := R37["mItem"]
551 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["mItemName"]
552 [-]: SETGLOBAL R38 K68      ; mKDriveName := R38
553 [-]: GETUPVAL  R38 U11      ; R38 := U11
554 [-]: CONST     R39 6        ; R39 := 6.000000
555 [-]: CONST     R40 0        ; R40 := 0.000000
556 [-]: MOVE      R41 R2       ; R41 := R2
557 [-]: MOVE      R42 R35      ; R42 := R35
558 [-]: CALL      R38 5 2      ; R38 := R38(R39,R40,R41,R42)
559 [-]: MOVE      R37 R38      ; R37 := R38
560 [-]: EQ        1 R37 K28    ; if R37 == nil then PC := 568
561 [-]: JMP       568          ; PC := 568
562 [-]: GETGLOBAL R38 K1       ; R38 := 0x7b998233
563 [-]: MOVE      R39 R36      ; R39 := R36
564 [-]: CALL      R38 2 2      ; R38 := R38(R39)
565 [-]: TEST      R38 1        ; if R38 then PC := 568
566 [-]: JMP       568          ; PC := 568
567 [-]: SETTABLE  R37 K66 R36  ; R37["Icon"] := R36
568 [-]: GETGLOBAL R38 K69      ; R38 := 0xcfc01047
569 [-]: GETUPVAL  R39 U16      ; R39 := U16
570 [-]: CALL      R38 2 4      ; R38,R39,R40 := R38(R39)
571 [-]: JMP       604          ; PC := 604
572 [-]: GETTABLE  R43 R42 K70  ; R43 := R42["FocusGained"]
573 [-]: LT        0 K30 R43    ; if 0.000000 >= R43 then PC := 604
574 [-]: JMP       604          ; PC := 604
575 [-]: GETUPVAL  R43 U14      ; R43 := U14
576 [-]: GETTABLE  R43 R43 K71  ; R43 := R43[0x4eec6d11]
577 [-]: GETGLOBAL R44 K7       ; R44 := 0xae91e43b
578 [-]: GETTABLE  R45 R42 K72  ; R45 := R42["Lens"]
579 [-]: NEWTABLE  R46 0 1      ; R46 := {}
580 [-]: SETTABLE  R46 K73 K41  ; R46["GetVisibilityMaterial"] := true
581 [-]: LOADKB    R47 1 0      ; R47 := true
582 [-]: CALL      R43 5 2      ; R43 := R43(R44,R45,R46,R47)
583 [-]: GETTABLE  R44 R42 K70  ; R44 := R42["FocusGained"]
584 [-]: SETTABLE  R43 K70 R44  ; R43["FocusGained"] := R44
585 [-]: GETTABLE  R44 R42 K74  ; R44 := R42["PolarityInfo"]
586 [-]: SETTABLE  R43 K74 R44  ; R43["PolarityInfo"] := R44
587 [-]: GETGLOBAL R44 K7       ; R44 := 0xae91e43b
588 [-]: SELF      R44 R44 K76  ; R45 := R44; R44 := R44[0x42b04007]
589 [-]: GETTABLE  R46 R42 K74  ; R46 := R42["PolarityInfo"]
590 [-]: GETTABLE  R46 R46 K77  ; R46 := R46["PolarityTag"]
591 [-]: LOADKB    R47 1 0      ; R47 := true
592 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
593 [-]: SETTABLE  R43 K75 R44  ; R43["Name"] := R44
594 [-]: SETTABLE  R43 K78 K41  ; R43["CustomEntry"] := true
595 [-]: SETTABLE  R43 K79 K48  ; R43["Description"] := ""
596 [-]: SETTABLE  R43 K80 K48  ; R43["LocalizedDesc"] := ""
597 [-]: GETTABLE  R44 R42 K81  ; R44 := R42["ListItems"]
598 [-]: SETTABLE  R43 K81 R44  ; R43["ListItems"] := R44
599 [-]: GETGLOBAL R44 K20      ; R44 := mAffinityGrid
600 [-]: SELF      R44 R44 K43  ; R45 := R44; R44 := R44[0xbad4316f]
601 [-]: MOVE      R46 R43      ; R46 := R43
602 [-]: LOADKB    R47 1 0      ; R47 := true
603 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
604 [-]: TFORLOOP  R38 2        ; R41,R42 :=  R38(R39,R40); if R41 ~= nil then begin PC = 572; R40 := R41 end
605 [-]: JMP       572          ; PC := 572
606 [-]: RETURN    R0 1         ; return 


; Function #117.1:
;
; Name:            
; Defined at line: 4627
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := "ExpandableArea.Progression.Affinity.Grid.Item"
  2 [-]: EQ        1 R0 K1      ; if R0 == 1.000000 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x64fb1586
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4857
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: MOVE      R5 R2        ; R5 := R2
  8 [-]: MOVE      R6 R3        ; R6 := R3
  9 [-]: RETURN    R4 4         ; return R4,R5,R6
 10 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x54f81b64]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0[0xc2c483ce]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: CONST     R6 1         ; R6 := 1.000000
 15 [-]: LEN       R7 R4        ; R7 := # R4
 16 [-]: CONST     R8 1         ; R8 := 1.000000
 17 [-]: FORPREP   R6 50        ; R6 -= R8; PC := 50
 18 [-]: LOADKB    R10 0 0      ; R10 := false
 19 [-]: CONST     R11 1        ; R11 := 1.000000
 20 [-]: GETUPVAL  R12 U0       ; R12 := U0
 21 [-]: LEN       R12 R12      ; R12 := # R12
 22 [-]: CONST     R13 1        ; R13 := 1.000000
 23 [-]: FORPREP   R11 42       ; R11 -= R13; PC := 42
 24 [-]: GETUPVAL  R15 U0       ; R15 := U0
 25 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
 26 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["mItemType"]
 27 [-]: GETTABLE  R16 R4 R9    ; R16 := R4[R9]
 28 [-]: GETTABLE  R16 R16 K3   ; R16 := R16["mItemType"]
 29 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: GETUPVAL  R15 U0       ; R15 := U0
 32 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
 33 [-]: GETUPVAL  R16 U0       ; R16 := U0
 34 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
 35 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["mItemCount"]
 36 [-]: GETTABLE  R17 R4 R9    ; R17 := R4[R9]
 37 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mItemCount"]
 38 [-]: ADD       R16 R16 R17  ; R16 := R16 + R17
 39 [-]: SETTABLE  R15 K4 R16   ; R15["mItemCount"] := R16
 40 [-]: LOADKB    R10 1 0      ; R10 := true
 41 [-]: JMP       43           ; PC := 43
 42 [-]: FORLOOP   R11 24       ; R11 += R13; if R11 <= R12 then begin PC := 24; R14 := R11 end
 43 [-]: TEST      R10 1        ; if R10 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETGLOBAL R15 K5       ; R15 := 0x33bdd652
 46 [-]: GETTABLE  R15 R15 K6   ; R15 := R15[0x23d5322f]
 47 [-]: GETUPVAL  R16 U0       ; R16 := U0
 48 [-]: GETTABLE  R17 R4 R9    ; R17 := R4[R9]
 49 [-]: CALL      R15 3 1      ; R15(R16,R17)
 50 [-]: FORLOOP   R6 18        ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
 51 [-]: CONST     R15 1        ; R15 := 1.000000
 52 [-]: LEN       R16 R5       ; R16 := # R5
 53 [-]: CONST     R17 1        ; R17 := 1.000000
 54 [-]: FORPREP   R15 87       ; R15 -= R17; PC := 87
 55 [-]: LOADKB    R19 0 0      ; R19 := false
 56 [-]: CONST     R20 1        ; R20 := 1.000000
 57 [-]: GETUPVAL  R21 U1       ; R21 := U1
 58 [-]: LEN       R21 R21      ; R21 := # R21
 59 [-]: CONST     R22 1        ; R22 := 1.000000
 60 [-]: FORPREP   R20 79       ; R20 -= R22; PC := 79
 61 [-]: GETUPVAL  R24 U1       ; R24 := U1
 62 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
 63 [-]: GETTABLE  R24 R24 K3   ; R24 := R24["mItemType"]
 64 [-]: GETTABLE  R25 R5 R18   ; R25 := R5[R18]
 65 [-]: GETTABLE  R25 R25 K3   ; R25 := R25["mItemType"]
 66 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 79
 67 [-]: JMP       79           ; PC := 79
 68 [-]: GETUPVAL  R24 U1       ; R24 := U1
 69 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
 70 [-]: GETUPVAL  R25 U1       ; R25 := U1
 71 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
 72 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["mItemCount"]
 73 [-]: GETTABLE  R26 R5 R18   ; R26 := R5[R18]
 74 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["mItemCount"]
 75 [-]: ADD       R25 R25 R26  ; R25 := R25 + R26
 76 [-]: SETTABLE  R24 K4 R25   ; R24["mItemCount"] := R25
 77 [-]: LOADKB    R19 1 0      ; R19 := true
 78 [-]: JMP       80           ; PC := 80
 79 [-]: FORLOOP   R20 61       ; R20 += R22; if R20 <= R21 then begin PC := 61; R23 := R20 end
 80 [-]: TEST      R19 1        ; if R19 then PC := 87
 81 [-]: JMP       87           ; PC := 87
 82 [-]: GETGLOBAL R24 K5       ; R24 := 0x33bdd652
 83 [-]: GETTABLE  R24 R24 K6   ; R24 := R24[0x23d5322f]
 84 [-]: GETUPVAL  R25 U1       ; R25 := U1
 85 [-]: GETTABLE  R26 R5 R18   ; R26 := R5[R18]
 86 [-]: CALL      R24 3 1      ; R24(R25,R26)
 87 [-]: FORLOOP   R15 55       ; R15 += R17; if R15 <= R16 then begin PC := 55; R18 := R15 end
 88 [-]: SELF      R24 R0 K7    ; R25 := R0; R24 := R0[0x6be612e3]
 89 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 90 [-]: ADD       R24 R1 R24   ; R24 := R1 + R24
 91 [-]: SELF      R25 R0 K8    ; R26 := R0; R25 := R0[0x8a489022]
 92 [-]: LOADKB    R27 0 0      ; R27 := false
 93 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
 94 [-]: ADD       R25 R2 R25   ; R25 := R2 + R25
 95 [-]: SELF      R26 R0 K8    ; R27 := R0; R26 := R0[0x8a489022]
 96 [-]: LOADKB    R28 1 0      ; R28 := true
 97 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
 98 [-]: ADD       R26 R3 R26   ; R26 := R3 + R26
 99 [-]: RETURN    R24 4        ; return R24,R25,R26
100 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4896
; #Upvalues:       17
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: LOADNIL   R2 R2        ; R2 := nil
  4 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R3 R1 K1     ; R4 := R1; R3 := R1[0xb8c8dfbd]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: MOVE      R2 R3        ; R2 := R3
 12 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: TEST      R3 0         ; if not R3 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R3 K2        ; R3 := 0x3d106989
 18 [-]: LOADK     R4 K3        ; R4 := "Cannot PopulateRewardsPanel local player! Avatar was NULL or InventoryController was wrong type"
 19 [-]: CALL      R3 2 1       ; R3(R4)
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: LOADKB    R3 0 0       ; R3 := false
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0xcdc34211]
 24 [-]: CALL      R4 1 2       ; R4 := R4()
 25 [-]: TEST      R4 0         ; if not R4 then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETUPVAL  R4 U2        ; R4 := U2
 28 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["isPvp"]
 29 [-]: TEST      R4 1         ; if R4 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETGLOBAL R4 K6        ; R4 := 0xbe190284
 32 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x9c1cc518]
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: MOVE      R3 R4        ; R3 := R4
 35 [-]: TEST      R0 1         ; if R0 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: TEST      R3 0         ; if not R3 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 41 [-]: SETUPVAL  R4 U3        ; U82 := R3
 42 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2[0x54f81b64]
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: SETUPVAL  R4 U4        ; U82 := R4
 45 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 46 [-]: GETUPVAL  R5 U4        ; R5 := U4
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: TEST      R4 0         ; if not R4 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 51 [-]: SETUPVAL  R4 U4        ; U82 := R4
 52 [-]: GETUPVAL  R4 U6        ; R4 := U6
 53 [-]: CALL      R4 1 2       ; R4 := R4()
 54 [-]: SETUPVAL  R4 U5        ; U82 := R5
 55 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xc2c483ce]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: SETUPVAL  R4 U7        ; U82 := R7
 58 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 59 [-]: GETUPVAL  R5 U7        ; R5 := U7
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: TEST      R4 0         ; if not R4 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 64 [-]: SETUPVAL  R4 U7        ; U82 := R7
 65 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2[0x53748abf]
 66 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 67 [-]: LT        0 K11 R4     ; if 0.000000 >= R4 then PC := 82
 68 [-]: JMP       82           ; PC := 82
 69 [-]: GETGLOBAL R5 K12       ; R5 := _T
 70 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["eomScreenMode"]
 71 [-]: GETUPVAL  R6 U8        ; R6 := U8
 72 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["ACTUAL_EOM"]
 73 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 82
 74 [-]: JMP       82           ; PC := 82
 75 [-]: GETGLOBAL R5 K15       ; R5 := 0x33bdd652
 76 [-]: GETTABLE  R5 R5 K16    ; R5 := R5[0x23d5322f]
 77 [-]: GETUPVAL  R6 U7        ; R6 := U7
 78 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 79 [-]: SETTABLE  R7 K17 K18   ; R7["mIsMystery"] := true
 80 [-]: SETTABLE  R7 K19 R4    ; R7["mItemCount"] := R4
 81 [-]: CALL      R5 3 1       ; R5(R6,R7)
 82 [-]: GETGLOBAL R5 K12       ; R5 := _T
 83 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["eomScreenMode"]
 84 [-]: GETUPVAL  R6 U8        ; R6 := U8
 85 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["ACTUAL_EOM"]
 86 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 109
 87 [-]: JMP       109          ; PC := 109
 88 [-]: GETGLOBAL R5 K6        ; R5 := 0xbe190284
 89 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0xf2deaf69]
 90 [-]: GETGLOBAL R7 K21       ; R7 := gLotusGameRulesType
 91 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 92 [-]: TEST      R5 0         ; if not R5 then PC := 109
 93 [-]: JMP       109          ; PC := 109
 94 [-]: GETGLOBAL R5 K6        ; R5 := 0xbe190284
 95 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0x0185577b]
 96 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 97 [-]: CONST     R6 1         ; R6 := 1.000000
 98 [-]: MOVE      R7 R5        ; R7 := R5
 99 [-]: CONST     R8 1         ; R8 := 1.000000
100 [-]: FORPREP   R6 108       ; R6 -= R8; PC := 108
101 [-]: GETGLOBAL R10 K15      ; R10 := 0x33bdd652
102 [-]: GETTABLE  R10 R10 K16  ; R10 := R10[0x23d5322f]
103 [-]: GETUPVAL  R11 U7       ; R11 := U7
104 [-]: NEWTABLE  R12 0 2      ; R12 := {}
105 [-]: SETTABLE  R12 K17 K18  ; R12["mIsMystery"] := true
106 [-]: SETTABLE  R12 K19 K23  ; R12["mItemCount"] := 1.000000
107 [-]: CALL      R10 3 1      ; R10(R11,R12)
108 [-]: FORLOOP   R6 101       ; R6 += R8; if R6 <= R7 then begin PC := 101; R9 := R6 end
109 [-]: GETUPVAL  R10 U7       ; R10 := U7
110 [-]: LEN       R10 R10      ; R10 := # R10
111 [-]: CONST     R11 1        ; R11 := 1.000000
112 [-]: CONST     R12 -1       ; R12 := -1.000000
113 [-]: FORPREP   R10 142      ; R10 -= R12; PC := 142
114 [-]: GETUPVAL  R14 U7       ; R14 := U7
115 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
116 [-]: GETTABLE  R15 R14 K19  ; R15 := R14["mItemCount"]
117 [-]: LE        1 R15 K11    ; if R15 <= 0.000000 then PC := 137
118 [-]: JMP       137          ; PC := 137
119 [-]: GETGLOBAL R15 K12      ; R15 := _T
120 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["eomScreenMode"]
121 [-]: GETUPVAL  R16 U8       ; R16 := U8
122 [-]: GETTABLE  R16 R16 K14  ; R16 := R16["ACTUAL_EOM"]
123 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 142
124 [-]: JMP       142          ; PC := 142
125 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
126 [-]: GETTABLE  R16 R14 K24  ; R16 := R14["mItemType"]
127 [-]: CALL      R15 2 2      ; R15 := R15(R16)
128 [-]: TEST      R15 1        ; if R15 then PC := 142
129 [-]: JMP       142          ; PC := 142
130 [-]: GETTABLE  R15 R14 K24  ; R15 := R14["mItemType"]
131 [-]: SELF      R15 R15 K20  ; R16 := R15; R15 := R15[0xf2deaf69]
132 [-]: GETUPVAL  R17 U9       ; R17 := U9
133 [-]: GETTABLE  R17 R17 K25  ; R17 := R17["TransientMiscItem"]
134 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
135 [-]: TEST      R15 0        ; if not R15 then PC := 142
136 [-]: JMP       142          ; PC := 142
137 [-]: GETGLOBAL R15 K15      ; R15 := 0x33bdd652
138 [-]: GETTABLE  R15 R15 K26  ; R15 := R15[0x9c1f3b5a]
139 [-]: GETUPVAL  R16 U7       ; R16 := U7
140 [-]: MOVE      R17 R13      ; R17 := R13
141 [-]: CALL      R15 3 1      ; R15(R16,R17)
142 [-]: FORLOOP   R10 114      ; R10 += R12; if R10 <= R11 then begin PC := 114; R13 := R10 end
143 [-]: GETGLOBAL R15 K27      ; R15 := 0x89326c93
144 [-]: SELF      R15 R15 K28  ; R16 := R15; R15 := R15[0xded7d5cd]
145 [-]: CALL      R15 2 2      ; R15 := R15(R16)
146 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
147 [-]: MOVE      R17 R15      ; R17 := R15
148 [-]: CALL      R16 2 2      ; R16 := R16(R17)
149 [-]: TEST      R16 1        ; if R16 then PC := 191
150 [-]: JMP       191          ; PC := 191
151 [-]: LEN       R16 R15      ; R16 := # R15
152 [-]: LT        0 K11 R16    ; if 0.000000 >= R16 then PC := 191
153 [-]: JMP       191          ; PC := 191
154 [-]: LOADKB    R16 0 0      ; R16 := false
155 [-]: SELF      R17 R2 K29   ; R18 := R2; R17 := R2[0xac1cb923]
156 [-]: LOADKB    R19 0 0      ; R19 := false
157 [-]: LOADKB    R20 1 0      ; R20 := true
158 [-]: MOVE      R21 R16      ; R21 := R16
159 [-]: CALL      R17 5 2      ; R17 := R17(R18,R19,R20,R21)
160 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
161 [-]: MOVE      R19 R17      ; R19 := R17
162 [-]: CALL      R18 2 2      ; R18 := R18(R19)
163 [-]: TEST      R18 1        ; if R18 then PC := 191
164 [-]: JMP       191          ; PC := 191
165 [-]: CONST     R18 1        ; R18 := 1.000000
166 [-]: LEN       R19 R17      ; R19 := # R17
167 [-]: CONST     R20 1        ; R20 := 1.000000
168 [-]: FORPREP   R18 190      ; R18 -= R20; PC := 190
169 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
170 [-]: GETTABLE  R23 R17 R21  ; R23 := R17[R21]
171 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["mItemType"]
172 [-]: CALL      R22 2 2      ; R22 := R22(R23)
173 [-]: TEST      R22 1        ; if R22 then PC := 190
174 [-]: JMP       190          ; PC := 190
175 [-]: GETTABLE  R22 R17 R21  ; R22 := R17[R21]
176 [-]: GETTABLE  R22 R22 K19  ; R22 := R22["mItemCount"]
177 [-]: LT        0 K11 R22    ; if 0.000000 >= R22 then PC := 190
178 [-]: JMP       190          ; PC := 190
179 [-]: GETGLOBAL R22 K15      ; R22 := 0x33bdd652
180 [-]: GETTABLE  R22 R22 K16  ; R22 := R22[0x23d5322f]
181 [-]: GETUPVAL  R23 U3       ; R23 := U3
182 [-]: NEWTABLE  R24 0 2      ; R24 := {}
183 [-]: GETTABLE  R25 R17 R21  ; R25 := R17[R21]
184 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mItemType"]
185 [-]: SETTABLE  R24 K24 R25  ; R24["mItemType"] := R25
186 [-]: GETTABLE  R25 R17 R21  ; R25 := R17[R21]
187 [-]: GETTABLE  R25 R25 K19  ; R25 := R25["mItemCount"]
188 [-]: SETTABLE  R24 K19 R25  ; R24["mItemCount"] := R25
189 [-]: CALL      R22 3 1      ; R22(R23,R24)
190 [-]: FORLOOP   R18 169      ; R18 += R20; if R18 <= R19 then begin PC := 169; R21 := R18 end
191 [-]: GETGLOBAL R22 K30      ; R22 := mPlayerMissionInfo
192 [-]: GETTABLE  R22 R22 K31  ; R22 := R22["mScore"]
193 [-]: LT        0 K11 R22    ; if 0.000000 >= R22 then PC := 214
194 [-]: JMP       214          ; PC := 214
195 [-]: GETUPVAL  R22 U10      ; R22 := U10
196 [-]: GETGLOBAL R23 K30      ; R23 := mPlayerMissionInfo
197 [-]: GETTABLE  R23 R23 K31  ; R23 := R23["mScore"]
198 [-]: CALL      R22 2 3      ; R22,R23 := R22(R23)
199 [-]: TEST      R22 0        ; if not R22 then PC := 214
200 [-]: JMP       214          ; PC := 214
201 [-]: GETGLOBAL R24 K15      ; R24 := 0x33bdd652
202 [-]: GETTABLE  R24 R24 K16  ; R24 := R24[0x23d5322f]
203 [-]: GETGLOBAL R25 K32      ; R25 := mOtherStuff
204 [-]: NEWTABLE  R26 0 6      ; R26 := {}
205 [-]: SETTABLE  R26 K33 R22  ; R26["Name"] := R22
206 [-]: SETTABLE  R26 K34 R23  ; R26["Count"] := R23
207 [-]: GETUPVAL  R27 U11      ; R27 := U11
208 [-]: CALL      R27 1 2      ; R27 := R27()
209 [-]: SETTABLE  R26 K35 R27  ; R26["Icon"] := R27
210 [-]: SETTABLE  R26 K36 K37  ; R26["SortPriority"] := 25.000000
211 [-]: SETTABLE  R26 K38 K18  ; R26["Themed"] := true
212 [-]: SETTABLE  R26 K39 K40  ; R26["Background"] := nil
213 [-]: CALL      R24 3 1      ; R24(R25,R26)
214 [-]: GETGLOBAL R24 K12      ; R24 := _T
215 [-]: GETTABLE  R24 R24 K13  ; R24 := R24["eomScreenMode"]
216 [-]: GETUPVAL  R25 U8       ; R25 := U8
217 [-]: GETTABLE  R25 R25 K41  ; R25 := R25["DETAILED_PREVIEW"]
218 [-]: EQ        1 R24 R25    ; if R24 == R25 then PC := 229
219 [-]: JMP       229          ; PC := 229
220 [-]: GETUPVAL  R24 U12      ; R24 := U12
221 [-]: CALL      R24 1 2      ; R24 := R24()
222 [-]: TEST      R24 1        ; if R24 then PC := 229
223 [-]: JMP       229          ; PC := 229
224 [-]: GETUPVAL  R24 U1       ; R24 := U1
225 [-]: GETTABLE  R24 R24 K4   ; R24 := R24[0xcdc34211]
226 [-]: CALL      R24 1 2      ; R24 := R24()
227 [-]: TEST      R24 1        ; if R24 then PC := 400
228 [-]: JMP       400          ; PC := 400
229 [-]: CONST     R24 0        ; R24 := 0.000000
230 [-]: CONST     R25 0        ; R25 := 0.000000
231 [-]: CONST     R26 0        ; R26 := 0.000000
232 [-]: CONST     R27 0        ; R27 := 0.000000
233 [-]: GETGLOBAL R28 K27      ; R28 := 0x89326c93
234 [-]: SELF      R28 R28 K42  ; R29 := R28; R28 := R28[0xfb64e76c]
235 [-]: CALL      R28 2 2      ; R28 := R28(R29)
236 [-]: GETGLOBAL R29 K0       ; R29 := 0x7b998233
237 [-]: MOVE      R30 R28      ; R30 := R28
238 [-]: CALL      R29 2 2      ; R29 := R29(R30)
239 [-]: TEST      R29 1        ; if R29 then PC := 279
240 [-]: JMP       279          ; PC := 279
241 [-]: SELF      R29 R28 K43  ; R30 := R28; R29 := R28[0x5578d98b]
242 [-]: CALL      R29 2 2      ; R29 := R29(R30)
243 [-]: GETGLOBAL R30 K0       ; R30 := 0x7b998233
244 [-]: MOVE      R31 R29      ; R31 := R29
245 [-]: CALL      R30 2 2      ; R30 := R30(R31)
246 [-]: TEST      R30 1        ; if R30 then PC := 258
247 [-]: JMP       258          ; PC := 258
248 [-]: GETUPVAL  R30 U13      ; R30 := U13
249 [-]: SELF      R31 R29 K44  ; R32 := R29; R31 := R29[0xde321e6f]
250 [-]: CALL      R31 2 2      ; R31 := R31(R32)
251 [-]: MOVE      R32 R24      ; R32 := R24
252 [-]: MOVE      R33 R26      ; R33 := R26
253 [-]: MOVE      R34 R27      ; R34 := R27
254 [-]: CALL      R30 5 4      ; R30,R31,R32 := R30(R31,R32,R33,R34)
255 [-]: MOVE      R27 R32      ; R27 := R32
256 [-]: MOVE      R26 R31      ; R26 := R31
257 [-]: MOVE      R24 R30      ; R24 := R30
258 [-]: SELF      R30 R28 K45  ; R31 := R28; R30 := R28[0xbb610e5b]
259 [-]: CALL      R30 2 2      ; R30 := R30(R31)
260 [-]: GETGLOBAL R31 K0       ; R31 := 0x7b998233
261 [-]: MOVE      R32 R30      ; R32 := R30
262 [-]: CALL      R31 2 2      ; R31 := R31(R32)
263 [-]: TEST      R31 1        ; if R31 then PC := 279
264 [-]: JMP       279          ; PC := 279
265 [-]: EQ        1 R30 R1     ; if R30 == R1 then PC := 279
266 [-]: JMP       279          ; PC := 279
267 [-]: EQ        1 R30 R29    ; if R30 == R29 then PC := 279
268 [-]: JMP       279          ; PC := 279
269 [-]: GETUPVAL  R31 U13      ; R31 := U13
270 [-]: SELF      R32 R30 K44  ; R33 := R30; R32 := R30[0xde321e6f]
271 [-]: CALL      R32 2 2      ; R32 := R32(R33)
272 [-]: MOVE      R33 R24      ; R33 := R24
273 [-]: MOVE      R34 R26      ; R34 := R26
274 [-]: MOVE      R35 R27      ; R35 := R27
275 [-]: CALL      R31 5 4      ; R31,R32,R33 := R31(R32,R33,R34,R35)
276 [-]: MOVE      R27 R33      ; R27 := R33
277 [-]: MOVE      R26 R32      ; R26 := R32
278 [-]: MOVE      R24 R31      ; R24 := R31
279 [-]: SELF      R31 R2 K46   ; R32 := R2; R31 := R2[0x6be612e3]
280 [-]: CALL      R31 2 2      ; R31 := R31(R32)
281 [-]: ADD       R24 R31 R24  ; R24 := R31 + R24
282 [-]: GETUPVAL  R31 U14      ; R31 := U14
283 [-]: MOVE      R32 R25      ; R32 := R25
284 [-]: MOVE      R33 R24      ; R33 := R24
285 [-]: LOADK     R34 K47      ; R34 := "Credits"
286 [-]: GETUPVAL  R35 U15      ; R35 := U15
287 [-]: GETTABLE  R35 R35 K48  ; R35 := R35[0x1142c7a8]
288 [-]: MOVE      R36 R24      ; R36 := R24
289 [-]: CALL      R35 2 2      ; R35 := R35(R36)
290 [-]: LOADK     R36 K49      ; R36 := " "
291 [-]: GETGLOBAL R37 K50      ; R37 := 0xae91e43b
292 [-]: SELF      R37 R37 K51  ; R38 := R37; R37 := R37[0x42b04007]
293 [-]: LOADK     R39 K52      ; R39 := "/Lotus/Language/Menu/MissionStats_MissionCredits"
294 [-]: LOADKB    R40 0 0      ; R40 := false
295 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
296 [-]: CONCAT    R35 R35 R37  ; R35 := R35 .. R36 .. R37
297 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
298 [-]: MOVE      R25 R31      ; R25 := R31
299 [-]: GETUPVAL  R31 U16      ; R31 := U16
300 [-]: CALL      R31 1 2      ; R31 := R31()
301 [-]: MOVE      R24 R31      ; R24 := R31
302 [-]: GETUPVAL  R31 U14      ; R31 := U14
303 [-]: MOVE      R32 R25      ; R32 := R25
304 [-]: MOVE      R33 R24      ; R33 := R24
305 [-]: LOADK     R34 K47      ; R34 := "Credits"
306 [-]: MOVE      R35 R24      ; R35 := R24
307 [-]: LOADK     R36 K49      ; R36 := " "
308 [-]: GETGLOBAL R37 K50      ; R37 := 0xae91e43b
309 [-]: SELF      R37 R37 K51  ; R38 := R37; R37 := R37[0x42b04007]
310 [-]: LOADK     R39 K53      ; R39 := "/Lotus/Language/Menu/MissionStats_CreditsBonus"
311 [-]: LOADKB    R40 0 0      ; R40 := false
312 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
313 [-]: CONCAT    R35 R35 R37  ; R35 := R35 .. R36 .. R37
314 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
315 [-]: MOVE      R25 R31      ; R25 := R31
316 [-]: LT        0 K11 R25    ; if 0.000000 >= R25 then PC := 339
317 [-]: JMP       339          ; PC := 339
318 [-]: GETGLOBAL R31 K54      ; R31 := 0x7f5022cf
319 [-]: GETTABLE  R31 R31 K55  ; R31 := R31[0x3f3e4d12]
320 [-]: GETGLOBAL R32 K50      ; R32 := 0xae91e43b
321 [-]: SELF      R32 R32 K51  ; R33 := R32; R32 := R32[0x42b04007]
322 [-]: LOADK     R34 K56      ; R34 := "/Lotus/Language/Menu/Store_BuyWithCredits"
323 [-]: LOADKB    R35 1 0      ; R35 := true
324 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
325 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
326 [-]: NEWTABLE  R32 0 6      ; R32 := {}
327 [-]: SETTABLE  R32 K33 R31  ; R32["Name"] := R31
328 [-]: SETTABLE  R32 K34 K23  ; R32["Count"] := 1.000000
329 [-]: SETTABLE  R32 K47 R25  ; R32["Credits"] := R25
330 [-]: GETGLOBAL R33 K57      ; R33 := 0x9afd2e71
331 [-]: SETTABLE  R32 K35 R33  ; R32["Icon"] := R33
332 [-]: SETTABLE  R32 K38 K18  ; R32["Themed"] := true
333 [-]: SETTABLE  R32 K39 K40  ; R32["Background"] := nil
334 [-]: GETGLOBAL R33 K15      ; R33 := 0x33bdd652
335 [-]: GETTABLE  R33 R33 K16  ; R33 := R33[0x23d5322f]
336 [-]: GETGLOBAL R34 K32      ; R34 := mOtherStuff
337 [-]: MOVE      R35 R32      ; R35 := R32
338 [-]: CALL      R33 3 1      ; R33(R34,R35)
339 [-]: SELF      R33 R2 K58   ; R34 := R2; R33 := R2[0x8a489022]
340 [-]: LOADKB    R35 0 0      ; R35 := false
341 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
342 [-]: ADD       R26 R33 R26  ; R26 := R33 + R26
343 [-]: GETGLOBAL R33 K30      ; R33 := mPlayerMissionInfo
344 [-]: SETTABLE  R33 K59 R26  ; R33["mFusionPoints"] := R26
345 [-]: LT        0 K11 R26    ; if 0.000000 >= R26 then PC := 370
346 [-]: JMP       370          ; PC := 370
347 [-]: GETGLOBAL R33 K54      ; R33 := 0x7f5022cf
348 [-]: GETTABLE  R33 R33 K55  ; R33 := R33[0x3f3e4d12]
349 [-]: GETGLOBAL R34 K50      ; R34 := 0xae91e43b
350 [-]: SELF      R34 R34 K51  ; R35 := R34; R34 := R34[0x42b04007]
351 [-]: LOADK     R36 K60      ; R36 := "/Lotus/Language/Items/FusionBundle"
352 [-]: LOADKB    R37 1 0      ; R37 := true
353 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
354 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
355 [-]: NEWTABLE  R34 0 7      ; R34 := {}
356 [-]: SETTABLE  R34 K33 R33  ; R34["Name"] := R33
357 [-]: SETTABLE  R34 K61 K62  ; R34["Description"] := "/Lotus/Language/Items/FusionPartDesc"
358 [-]: SETTABLE  R34 K63 R26  ; R34["Endo"] := R26
359 [-]: SETTABLE  R34 K34 K23  ; R34["Count"] := 1.000000
360 [-]: GETGLOBAL R35 K64      ; R35 := 0x457d7698
361 [-]: SETTABLE  R34 K35 R35  ; R34["Icon"] := R35
362 [-]: SETTABLE  R34 K39 K40  ; R34["Background"] := nil
363 [-]: GETGLOBAL R35 K65      ; R35 := mFusionPointsSortPriority
364 [-]: SETTABLE  R34 K36 R35  ; R34["SortPriority"] := R35
365 [-]: GETGLOBAL R35 K15      ; R35 := 0x33bdd652
366 [-]: GETTABLE  R35 R35 K16  ; R35 := R35[0x23d5322f]
367 [-]: GETGLOBAL R36 K66      ; R36 := mSortRewardItems
368 [-]: MOVE      R37 R34      ; R37 := R34
369 [-]: CALL      R35 3 1      ; R35(R36,R37)
370 [-]: SELF      R35 R2 K58   ; R36 := R2; R35 := R2[0x8a489022]
371 [-]: LOADKB    R37 1 0      ; R37 := true
372 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
373 [-]: ADD       R27 R35 R27  ; R27 := R35 + R27
374 [-]: GETGLOBAL R35 K30      ; R35 := mPlayerMissionInfo
375 [-]: SETTABLE  R35 K67 R27  ; R35["mCrewShipFusionPoints"] := R27
376 [-]: LT        0 K11 R27    ; if 0.000000 >= R27 then PC := 400
377 [-]: JMP       400          ; PC := 400
378 [-]: GETGLOBAL R35 K54      ; R35 := 0x7f5022cf
379 [-]: GETTABLE  R35 R35 K55  ; R35 := R35[0x3f3e4d12]
380 [-]: GETGLOBAL R36 K50      ; R36 := 0xae91e43b
381 [-]: SELF      R36 R36 K51  ; R37 := R36; R36 := R36[0x42b04007]
382 [-]: LOADK     R38 K68      ; R38 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
383 [-]: LOADKB    R39 1 0      ; R39 := true
384 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
385 [-]: CALL      R35 0 2      ; R35 := R35(R36,...)
386 [-]: NEWTABLE  R36 0 6      ; R36 := {}
387 [-]: SETTABLE  R36 K33 R35  ; R36["Name"] := R35
388 [-]: SETTABLE  R36 K61 K69  ; R36["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
389 [-]: SETTABLE  R36 K34 R27  ; R36["Count"] := R27
390 [-]: GETGLOBAL R37 K70      ; R37 := 0x1ae7e99f
391 [-]: SETTABLE  R36 K35 R37  ; R36["Icon"] := R37
392 [-]: SETTABLE  R36 K39 K40  ; R36["Background"] := nil
393 [-]: GETGLOBAL R37 K65      ; R37 := mFusionPointsSortPriority
394 [-]: SETTABLE  R36 K36 R37  ; R36["SortPriority"] := R37
395 [-]: GETGLOBAL R37 K15      ; R37 := 0x33bdd652
396 [-]: GETTABLE  R37 R37 K16  ; R37 := R37[0x23d5322f]
397 [-]: GETGLOBAL R38 K66      ; R38 := mSortRewardItems
398 [-]: MOVE      R39 R36      ; R39 := R36
399 [-]: CALL      R37 3 1      ; R37(R38,R39)
400 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 5022
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Filler"]
  2 [-]: TEST      R2 1         ; if R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["EmptySlot"]
  5 [-]: TEST      R2 1         ; if R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R3 K2        ; R3 := mRewardGrid
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mPrevSelectedId"]
  9 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Id"]
 10 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 13
 13 [-]: LOADKB    R3 1 0       ; R3 := true
 14 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["LockedMsg"]
 15 [-]: NEWTABLE  R5 0 11      ; R5 := {}
 16 [-]: SETTABLE  R5 K6 K7     ; R5["HideCountThreshold"] := 0.000000
 17 [-]: SETTABLE  R5 K8 K9     ; R5["NoZoomedVisRange"] := true
 18 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 19 [-]: SETTABLE  R6 K11 K12   ; R6["TagOverride"] := "/Lotus/Language/Menu/Crafting_Owned_Brief"
 20 [-]: SETTABLE  R5 K10 R6    ; R5["OwnedInfo"] := R6
 21 [-]: SETTABLE  R5 K13 R2    ; R5["IsFiller"] := R2
 22 [-]: SETTABLE  R5 K14 R1    ; R5["IsFocused"] := R1
 23 [-]: SETTABLE  R5 K15 R3    ; R5["IsSelected"] := R3
 24 [-]: EQ        0 R4 K17     ; if R4 ~= nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 27
 27 [-]: LOADKB    R6 1 0       ; R6 := true
 28 [-]: SETTABLE  R5 K16 R6    ; R5["Locked"] := R6
 29 [-]: SETTABLE  R5 K5 R4     ; R5["LockedMsg"] := R4
 30 [-]: GETTABLE  R6 R0 K18    ; R6 := R0["LockedIcon"]
 31 [-]: SETTABLE  R5 K18 R6    ; R5["LockedIcon"] := R6
 32 [-]: GETTABLE  R6 R0 K19    ; R6 := R0["LockedIconY"]
 33 [-]: SETTABLE  R5 K19 R6    ; R5["LockedIconY"] := R6
 34 [-]: TESTSET   R6 R1 0      ; if not R1 then PC := 44 else R6 := R1
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["Locked"]
 37 [-]: TEST      R6 1         ; if R6 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: GETTABLE  R6 R0 K21    ; R6 := R0["Hidden"]
 40 [-]: NOT       R6 R6        ; R6 :=  R6
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 43
 43 [-]: LOADKB    R6 1 0       ; R6 := true
 44 [-]: SETTABLE  R5 K20 R6    ; R5["ShowInfoPopup"] := R6
 45 [-]: RETURN    R5 2         ; return R5
 46 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5042
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xbf9f30a4]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  4 [-]: GETGLOBAL R4 K2        ; R4 := mRewardGrid
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  7 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 5046
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xb496de90]
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  8 [-]: GETGLOBAL R3 K4        ; R3 := mRewardGrid
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: LOADKB    R7 1 0       ; R7 := true
 13 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 5054
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xb496de90]
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  8 [-]: GETGLOBAL R3 K4        ; R3 := mRewardGrid
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: LOADKB    R7 0 0       ; R7 := false
 13 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 5062
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["TaxedCount"]
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 43
  7 [-]: JMP       43           ; PC := 43
  8 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["TaxedCount"]
  9 [-]: LT        0 K3 R1      ; if 0.000000 >= R1 then PC := 43
 10 [-]: JMP       43           ; PC := 43
 11 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf64b7262]
 13 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 14 [-]: LOADK     R4 K6        ; R4 := "Locked.LockIcon"
 15 [-]: CONST     R5 12        ; R5 := 12.000000
 16 [-]: CONST     R6 50        ; R6 := 50.000000
 17 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 18 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 19 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf64b7262]
 20 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 21 [-]: LOADK     R4 K6        ; R4 := "Locked.LockIcon"
 22 [-]: CONST     R5 13        ; R5 := 13.000000
 23 [-]: CONST     R6 50        ; R6 := 50.000000
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: SETTABLE  R0 K7 K9     ; R0["LockedIconColor"] := 12.000000
 26 [-]: SETTABLE  R0 K10 K11   ; R0["LockIconAlpha"] := 80.000000
 27 [-]: SETTABLE  R0 K12 K13   ; R0["LockedIconY"] := 18.000000
 28 [-]: GETGLOBAL R1 K15       ; R1 := 0x575a82ad
 29 [-]: GETTABLE  R1 R1 K16    ; R1 := R1[1.000000]
 30 [-]: SETTABLE  R0 K14 R1    ; R0["LockedIcon"] := R1
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: GETTABLE  R1 R1 K18    ; R1 := R1[0x1142c7a8]
 33 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["TaxedCount"]
 34 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 35 [-]: LOADK     R2 K19       ; R2 := "x "
 36 [-]: GETGLOBAL R3 K20       ; R3 := 0x603636ad
 37 [-]: LOADK     R4 K21       ; R4 := "/Lotus/Language/Nemesis/Stolen"
 38 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 39 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 40 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 41 [-]: SETTABLE  R0 K17 R1    ; R0["LockedMsg"] := R1
 42 [-]: JMP       98           ; PC := 98
 43 [-]: GETTABLE  R1 R0 K22    ; R1 := R0["Recovered"]
 44 [-]: TEST      R1 0         ; if not R1 then PC := 72
 45 [-]: JMP       72           ; PC := 72
 46 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 47 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf64b7262]
 48 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 49 [-]: LOADK     R4 K6        ; R4 := "Locked.LockIcon"
 50 [-]: CONST     R5 12        ; R5 := 12.000000
 51 [-]: CONST     R6 50        ; R6 := 50.000000
 52 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 53 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 54 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf64b7262]
 55 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 56 [-]: LOADK     R4 K6        ; R4 := "Locked.LockIcon"
 57 [-]: CONST     R5 13        ; R5 := 13.000000
 58 [-]: CONST     R6 50        ; R6 := 50.000000
 59 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 60 [-]: SETTABLE  R0 K7 K23    ; R0["LockedIconColor"] := 11.000000
 61 [-]: SETTABLE  R0 K10 K11   ; R0["LockIconAlpha"] := 80.000000
 62 [-]: SETTABLE  R0 K12 K13   ; R0["LockedIconY"] := 18.000000
 63 [-]: GETGLOBAL R1 K15       ; R1 := 0x575a82ad
 64 [-]: GETTABLE  R1 R1 K24    ; R1 := R1[2.000000]
 65 [-]: SETTABLE  R0 K14 R1    ; R0["LockedIcon"] := R1
 66 [-]: GETGLOBAL R1 K20       ; R1 := 0x603636ad
 67 [-]: LOADK     R2 K25       ; R2 := "/Lotus/Language/Game/Recovered"
 68 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 69 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 70 [-]: SETTABLE  R0 K17 R1    ; R0["LockedMsg"] := R1
 71 [-]: JMP       98           ; PC := 98
 72 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 73 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf64b7262]
 74 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 75 [-]: LOADK     R4 K6        ; R4 := "Locked.LockIcon"
 76 [-]: CONST     R5 12        ; R5 := 12.000000
 77 [-]: CONST     R6 24        ; R6 := 24.000000
 78 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 79 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 80 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf64b7262]
 81 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 82 [-]: LOADK     R4 K6        ; R4 := "Locked.LockIcon"
 83 [-]: CONST     R5 13        ; R5 := 13.000000
 84 [-]: CONST     R6 24        ; R6 := 24.000000
 85 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 86 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 87 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xf64b7262]
 88 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 89 [-]: LOADK     R4 K6        ; R4 := "Locked.LockIcon"
 90 [-]: CONST     R5 1         ; R5 := 1.000000
 91 [-]: CONST     R6 0         ; R6 := 0.000000
 92 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 93 [-]: SETTABLE  R0 K7 K1     ; R0["LockedIconColor"] := nil
 94 [-]: SETTABLE  R0 K10 K1    ; R0["LockIconAlpha"] := nil
 95 [-]: SETTABLE  R0 K12 K1    ; R0["LockedIconY"] := nil
 96 [-]: SETTABLE  R0 K14 K1    ; R0["LockedIcon"] := nil
 97 [-]: SETTABLE  R0 K17 K1    ; R0["LockedMsg"] := nil
 98 [-]: GETUPVAL  R1 U1        ; R1 := U1
 99 [-]: GETTABLE  R1 R1 K26    ; R1 := R1[0xc339daf7]
100 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
101 [-]: GETGLOBAL R3 K27       ; R3 := mRewardGrid
102 [-]: MOVE      R4 R0        ; R4 := R0
103 [-]: GETUPVAL  R5 U2        ; R5 := U2
104 [-]: MOVE      R6 R0        ; R6 := R0
105 [-]: GETGLOBAL R7 K27       ; R7 := mRewardGrid
106 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7[0xed1ab921]
107 [-]: CALL      R7 2 2       ; R7 := R7(R8)
108 [-]: EQ        1 R0 R7      ; if R0 == R7 then PC := 111
109 [-]: JMP       111          ; PC := 111
110 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 111
111 [-]: LOADKB    R7 1 0       ; R7 := true
112 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
113 [-]: CALL      R1 0 1       ; R1(R2,...)
114 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 5100
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.Components.CategorizedGrid"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K3     ; R1 := R0[0x67d7b715]
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K5        ; R3 := "ExpandableArea.Progression.Rewards.Items.Item"
  7 [-]: CONST     R4 5         ; R4 := 5.000000
  8 [-]: CONST     R5 2         ; R5 := 2.000000
  9 [-]: LOADK     R6 K6        ; R6 := "ExpandableArea.Progression.Rewards.Categories.Menu"
 10 [-]: LOADK     R7 K7        ; R7 := "ExpandableArea.Progression.Rewards.SearchAndSort.SortMenu"
 11 [-]: CALL      R1 7 2       ; R1 := R1(R2,R3,R4,R5,R6,R7)
 12 [-]: SETGLOBAL R1 K2        ; mRewardGrid := R1
 13 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 14 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1e5b5cfe]
 15 [-]: LOADK     R3 K9        ; R3 := "RewardItemSelected"
 16 [-]: LOADK     R4 K10       ; R4 := "RewardItemFocused"
 17 [-]: LOADK     R5 K11       ; R5 := "RewardItemUnfocused"
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 20 [-]: SETTABLE  R1 K12 K13   ; R1["mShowLabels"] := true
 21 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 22 [-]: SETTABLE  R1 K14 K13   ; R1["SkipReinitializePos"] := true
 23 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 24 [-]: SETTABLE  R1 K15 K16   ; R1["Width"] := 750.000000
 25 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 26 [-]: SETTABLE  R1 K17 K18   ; R1["Height"] := 400.000000
 27 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 28 [-]: SETTABLE  R1 K19 K20   ; R1["ElementDimBuffer"] := 6.000000
 29 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 30 [-]: SETTABLE  R1 K21 K22   ; R1["ElementWidth"] := 144.000000
 31 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 32 [-]: SETTABLE  R1 K23 K22   ; R1["ElementHeight"] := 144.000000
 33 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 34 [-]: SETTABLE  R1 K24 K20   ; R1["PopupPadding"] := 6.000000
 35 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 36 [-]: SETTABLE  R1 K25 K13   ; R1["mScrollAlwaysVisible"] := true
 37 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 38 [-]: GETGLOBAL R2 K2        ; R2 := mRewardGrid
 39 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["ElementWidth"]
 40 [-]: DIV       R2 R2 K27    ; R2 := R2 / 2.000000
 41 [-]: ADD       R2 R2 K28    ; R2 := R2 + 10.000000
 42 [-]: SETTABLE  R1 K26 R2    ; R1["mScrollBarHorizontalOffset"] := R2
 43 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 44 [-]: SETTABLE  R1 K29 K30   ; R1["mSelectedScale"] := 100.000000
 45 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 46 [-]: GETTABLE  R1 R1 K31    ; R1 := R1["mSortMenu"]
 47 [-]: SELF      R1 R1 K32    ; R2 := R1; R1 := R1[0x8d77b2b2]
 48 [-]: CONST     R3 223       ; R3 := 223.000000
 49 [-]: CALL      R1 3 1       ; R1(R2,R3)
 50 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 51 [-]: SETTABLE  R1 K33 K13   ; R1["mUseCornerForSelected"] := true
 52 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 53 [-]: SETTABLE  R1 K34 K35   ; R1["mSelectElementsOnFocus"] := false
 54 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 55 [-]: SETTABLE  R1 K36 K35   ; R1["mWrapAroundNavigation"] := false
 56 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 57 [-]: SETTABLE  R1 K37 K38   ; R1["mPrevSelectedId"] := nil
 58 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 59 [-]: GETTABLE  R1 R1 K39    ; R1 := R1["mCategoryMenu"]
 60 [-]: SETTABLE  R1 K40 K13   ; R1["mShowToolTips"] := true
 61 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 62 [-]: GETTABLE  R1 R1 K39    ; R1 := R1["mCategoryMenu"]
 63 [-]: GETUPVAL  R2 U0        ; R2 := U0
 64 [-]: GETTABLE  R2 R2 K42    ; R2 := R2["LEFT_ALIGNED"]
 65 [-]: SETTABLE  R1 K41 R2    ; R1["mAlign"] := R2
 66 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 67 [-]: GETTABLE  R1 R1 K39    ; R1 := R1["mCategoryMenu"]
 68 [-]: SETTABLE  R1 K43 K13   ; R1["mHideEmptyCategories"] := true
 69 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 70 [-]: GETTABLE  R1 R1 K39    ; R1 := R1["mCategoryMenu"]
 71 [-]: SETTABLE  R1 K44 K35   ; R1["mUseOriginalDimensions"] := false
 72 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 73 [-]: GETGLOBAL R2 K46       ; R2 := 0xfee8dbfd
 74 [-]: SETTABLE  R1 K45 R2    ; R1["VisibleRangeMaterial"] := R2
 75 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 76 [-]: GETGLOBAL R2 K48       ; R2 := 0xbacf3724
 77 [-]: SETTABLE  R1 K47 R2    ; R1["TextVisibleRangeMaterial"] := R2
 78 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 79 [-]: GETGLOBAL R2 K50       ; R2 := 0x2bbc1c3b
 80 [-]: SETTABLE  R1 K49 R2    ; R1["RectangleVisibleRangeMaterial"] := R2
 81 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 82 [-]: GETUPVAL  R2 U1        ; R2 := U1
 83 [-]: SETTABLE  R1 K51 R2    ; R1["mClipCreatedCallback"] := R2
 84 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 85 [-]: GETUPVAL  R2 U2        ; R2 := U2
 86 [-]: SETTABLE  R1 K52 R2    ; R1["mOnFocusedCallback"] := R2
 87 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 88 [-]: GETUPVAL  R2 U3        ; R2 := U3
 89 [-]: SETTABLE  R1 K53 R2    ; R1["mOnUnfocusedCallback"] := R2
 90 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 91 [-]: GETUPVAL  R2 U4        ; R2 := U4
 92 [-]: SETTABLE  R1 K54 R2    ; R1["mElementDrawCallback"] := R2
 93 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 94 [-]: SELF      R1 R1 K55    ; R2 := R1; R1 := R1[0x06d36229]
 95 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 96 [-]: GETUPVAL  R4 U5        ; R4 := U5
 97 [-]: GETTABLE  R4 R4 K57    ; R4 := R4["ALL"]
 98 [-]: SETTABLE  R3 K56 R4    ; R3["Category"] := R4
 99 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
100 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
101 [-]: LOADK     R6 K60       ; R6 := "/Lotus/Language/Menu/CategoryAll"
102 [-]: LOADKB    R7 0 0       ; R7 := false
103 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
104 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
105 [-]: GETGLOBAL R4 K62       ; R4 := 0x0032441c
106 [-]: GETTABLE  R4 R4 K63    ; R4 := R4["UICategoryIcon_AllOn"]
107 [-]: SETTABLE  R3 K61 R4    ; R3["Icon"] := R4
108 [-]: CALL      R1 3 1       ; R1(R2,R3)
109 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
110 [-]: SELF      R1 R1 K55    ; R2 := R1; R1 := R1[0x06d36229]
111 [-]: NEWTABLE  R3 0 3       ; R3 := {}
112 [-]: GETUPVAL  R4 U5        ; R4 := U5
113 [-]: GETTABLE  R4 R4 K64    ; R4 := R4["MODS"]
114 [-]: SETTABLE  R3 K56 R4    ; R3["Category"] := R4
115 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
116 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
117 [-]: LOADK     R6 K65       ; R6 := "/Lotus/Language/Categories/MOD"
118 [-]: LOADKB    R7 0 0       ; R7 := false
119 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
120 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
121 [-]: GETGLOBAL R4 K62       ; R4 := 0x0032441c
122 [-]: GETTABLE  R4 R4 K66    ; R4 := R4["UICategoryIcon_ModsOn"]
123 [-]: SETTABLE  R3 K61 R4    ; R3["Icon"] := R4
124 [-]: CALL      R1 3 1       ; R1(R2,R3)
125 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
126 [-]: SELF      R1 R1 K55    ; R2 := R1; R1 := R1[0x06d36229]
127 [-]: NEWTABLE  R3 0 3       ; R3 := {}
128 [-]: GETUPVAL  R4 U5        ; R4 := U5
129 [-]: GETTABLE  R4 R4 K67    ; R4 := R4["AVIONICS"]
130 [-]: SETTABLE  R3 K56 R4    ; R3["Category"] := R4
131 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
132 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
133 [-]: LOADK     R6 K68       ; R6 := "/Lotus/Language/Railjack/Avionics"
134 [-]: LOADKB    R7 0 0       ; R7 := false
135 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
136 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
137 [-]: GETGLOBAL R4 K69       ; R4 := 0xe0200f0b
138 [-]: SETTABLE  R3 K61 R4    ; R3["Icon"] := R4
139 [-]: CALL      R1 3 1       ; R1(R2,R3)
140 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
141 [-]: SELF      R1 R1 K55    ; R2 := R1; R1 := R1[0x06d36229]
142 [-]: NEWTABLE  R3 0 3       ; R3 := {}
143 [-]: GETUPVAL  R4 U5        ; R4 := U5
144 [-]: GETTABLE  R4 R4 K70    ; R4 := R4["RELICS"]
145 [-]: SETTABLE  R3 K56 R4    ; R3["Category"] := R4
146 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
147 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
148 [-]: LOADK     R6 K71       ; R6 := "/Lotus/Language/Categories/RELICS"
149 [-]: LOADKB    R7 0 0       ; R7 := false
150 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
151 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
152 [-]: GETGLOBAL R4 K72       ; R4 := 0x0ab5660f
153 [-]: SETTABLE  R3 K61 R4    ; R3["Icon"] := R4
154 [-]: CALL      R1 3 1       ; R1(R2,R3)
155 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
156 [-]: SELF      R1 R1 K55    ; R2 := R1; R1 := R1[0x06d36229]
157 [-]: NEWTABLE  R3 0 3       ; R3 := {}
158 [-]: GETUPVAL  R4 U5        ; R4 := U5
159 [-]: GETTABLE  R4 R4 K73    ; R4 := R4["RESOURCES"]
160 [-]: SETTABLE  R3 K56 R4    ; R3["Category"] := R4
161 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
162 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
163 [-]: LOADK     R6 K74       ; R6 := "/Lotus/Language/Categories/RESOURCES"
164 [-]: LOADKB    R7 0 0       ; R7 := false
165 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
166 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
167 [-]: GETGLOBAL R4 K62       ; R4 := 0x0032441c
168 [-]: GETTABLE  R4 R4 K75    ; R4 := R4["UICategoryIcon_MaterialsOn"]
169 [-]: SETTABLE  R3 K61 R4    ; R3["Icon"] := R4
170 [-]: CALL      R1 3 1       ; R1(R2,R3)
171 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
172 [-]: SELF      R1 R1 K55    ; R2 := R1; R1 := R1[0x06d36229]
173 [-]: NEWTABLE  R3 0 3       ; R3 := {}
174 [-]: GETUPVAL  R4 U5        ; R4 := U5
175 [-]: GETTABLE  R4 R4 K76    ; R4 := R4["MISC"]
176 [-]: SETTABLE  R3 K56 R4    ; R3["Category"] := R4
177 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
178 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
179 [-]: LOADK     R6 K77       ; R6 := "/Lotus/Language/Categories/MISC"
180 [-]: LOADKB    R7 0 0       ; R7 := false
181 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
182 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
183 [-]: GETGLOBAL R4 K62       ; R4 := 0x0032441c
184 [-]: GETTABLE  R4 R4 K78    ; R4 := R4["UICategoryIcon_MiscOn"]
185 [-]: SETTABLE  R3 K61 R4    ; R3["Icon"] := R4
186 [-]: CALL      R1 3 1       ; R1(R2,R3)
187 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
188 [-]: SELF      R1 R1 K79    ; R2 := R1; R1 := R1[0xb029c588]
189 [-]: NEWTABLE  R3 0 3       ; R3 := {}
190 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
191 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
192 [-]: LOADK     R6 K80       ; R6 := "/Lotus/Language/Menu/SortImportance"
193 [-]: LOADKB    R7 0 0       ; R7 := false
194 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
195 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
196 [-]: SETTABLE  R3 K81 K82   ; R3["SortId"] := "IMPORTANCE"
197 [-]: CLOSURE   R4 0         ; R4 := closure(Function #125.1)
198 [-]: SETTABLE  R3 K83 R4    ; R3["Attribute"] := R4
199 [-]: CALL      R1 3 1       ; R1(R2,R3)
200 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
201 [-]: SELF      R1 R1 K79    ; R2 := R1; R1 := R1[0xb029c588]
202 [-]: NEWTABLE  R3 0 3       ; R3 := {}
203 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
204 [-]: SELF      R4 R4 K59    ; R5 := R4; R4 := R4[0x42b04007]
205 [-]: LOADK     R6 K84       ; R6 := "/Lotus/Language/Menu/SortName"
206 [-]: LOADKB    R7 0 0       ; R7 := false
207 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
208 [-]: SETTABLE  R3 K58 R4    ; R3["Name"] := R4
209 [-]: SETTABLE  R3 K81 K85   ; R3["SortId"] := "NAME"
210 [-]: CLOSURE   R4 1         ; R4 := closure(Function #125.2)
211 [-]: SETTABLE  R3 K83 R4    ; R3["Attribute"] := R4
212 [-]: CALL      R1 3 1       ; R1(R2,R3)
213 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
214 [-]: SELF      R1 R1 K86    ; R2 := R1; R1 := R1[0x492f9da2]
215 [-]: CALL      R1 2 2       ; R1 := R1(R2)
216 [-]: GETGLOBAL R2 K87       ; R2 := 0x25d99d89
217 [-]: SELF      R2 R2 K88    ; R3 := R2; R2 := R2[0xb6b7ca1e]
218 [-]: MOVE      R4 R1        ; R4 := R1
219 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
220 [-]: EQ        0 R2 K89     ; if R2 ~= "" then PC := 223
221 [-]: JMP       223          ; PC := 223
222 [-]: LOADK     R2 K82       ; R2 := "IMPORTANCE"
223 [-]: GETGLOBAL R3 K2        ; R3 := mRewardGrid
224 [-]: SELF      R3 R3 K90    ; R4 := R3; R3 := R3[0x60125a4f]
225 [-]: MOVE      R5 R2        ; R5 := R2
226 [-]: CALL      R3 3 1       ; R3(R4,R5)
227 [-]: GETUPVAL  R3 U6        ; R3 := U6
228 [-]: GETTABLE  R3 R3 K91    ; R3 := R3[0x27658fab]
229 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
230 [-]: GETGLOBAL R5 K2        ; R5 := mRewardGrid
231 [-]: CALL      R3 3 1       ; R3(R4,R5)
232 [-]: GETGLOBAL R3 K2        ; R3 := mRewardGrid
233 [-]: SELF      R3 R3 K92    ; R4 := R3; R3 := R3[0x3bc79f4f]
234 [-]: LOADK     R5 K93       ; R5 := "ExpandableArea.Progression.Rewards.ScrollBar"
235 [-]: GETGLOBAL R6 K2        ; R6 := mRewardGrid
236 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["ElementDimBuffer"]
237 [-]: UNM       R6 R6        ; R6 :=  R6
238 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
239 [-]: GETGLOBAL R3 K2        ; R3 := mRewardGrid
240 [-]: SELF      R3 R3 K94    ; R4 := R3; R3 := R3[0x7220acb6]
241 [-]: CALL      R3 2 1       ; R3(R4)
242 [-]: GETGLOBAL R3 K2        ; R3 := mRewardGrid
243 [-]: CLOSURE   R4 2         ; R4 := closure(Function #125.3)
244 [-]: SETTABLE  R3 K95 R4    ; R3["AdditionalFilterFunction"] := R4
245 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
246 [-]: SELF      R3 R3 K59    ; R4 := R3; R3 := R3[0x42b04007]
247 [-]: LOADK     R5 K96       ; R5 := "/Lotus/Language/Menu/SearchPrompt"
248 [-]: LOADKB    R6 0 0       ; R6 := false
249 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
250 [-]: GETGLOBAL R4 K0        ; R4 := 0x2d0fad09
251 [-]: LOADK     R5 K97       ; R5 := "Lotus.Interface.Components.ThemedInputField"
252 [-]: CALL      R4 2 2       ; R4 := R4(R5)
253 [-]: GETTABLE  R5 R4 K99    ; R5 := R4[0xae6791ba]
254 [-]: GETGLOBAL R6 K4        ; R6 := 0xae91e43b
255 [-]: LOADK     R7 K100      ; R7 := "ExpandableArea.Progression.Rewards.SearchAndSort.SearchBox"
256 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
257 [-]: LOADK     R10 K101     ; R10 := "<MENU_LTHUMB>"
258 [-]: LOADNIL   R11 R13      ; R11 := R12 := R13 := nil
259 [-]: GETGLOBAL R14 K102     ; R14 := mWaitingForMissionComplete
260 [-]: CALL      R5 10 2      ; R5 := R5(R6,R7,R8,R9,R10,R11,R12,R13,R14)
261 [-]: SETGLOBAL R5 K98       ; mSearchBox := R5
262 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
263 [-]: SELF      R5 R5 K103   ; R6 := R5; R5 := R5[0xf87811f6]
264 [-]: GETGLOBAL R7 K98       ; R7 := mSearchBox
265 [-]: GETTABLE  R7 R7 K104   ; R7 := R7["TYPE"]
266 [-]: GETTABLE  R7 R7 K105   ; R7 := R7["PLAIN"]
267 [-]: MOVE      R8 R3        ; R8 := R3
268 [-]: MOVE      R9 R3        ; R9 := R3
269 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
270 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
271 [-]: SETTABLE  R5 K106 K107 ; R5["mMinSize"] := 223.000000
272 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
273 [-]: SETTABLE  R5 K108 K107 ; R5["mMaxSize"] := 223.000000
274 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
275 [-]: SETTABLE  R5 K109 K110 ; R5["mTextBuffer"] := 4.000000
276 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
277 [-]: GETGLOBAL R6 K62       ; R6 := 0x0032441c
278 [-]: GETTABLE  R6 R6 K112   ; R6 := R6["UITexture_Search"]
279 [-]: SETTABLE  R5 K111 R6   ; R5["mAltButtonIcon"] := R6
280 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
281 [-]: SETTABLE  R5 K113 K13  ; R5["mAltButtonVisible"] := true
282 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
283 [-]: SETTABLE  R5 K114 K38  ; R5["mUnfocusedUnderlineColorOverride"] := nil
284 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
285 [-]: GETGLOBAL R6 K98       ; R6 := mSearchBox
286 [-]: GETTABLE  R6 R6 K116   ; R6 := R6["InputFieldTextChanged"]
287 [-]: SETTABLE  R5 K115 R6   ; R5["BaseInputFieldTextChanged"] := R6
288 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
289 [-]: CLOSURE   R6 3         ; R6 := closure(Function #125.4)
290 [-]: SETTABLE  R5 K116 R6   ; R5["InputFieldTextChanged"] := R6
291 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
292 [-]: GETGLOBAL R6 K98       ; R6 := mSearchBox
293 [-]: GETTABLE  R6 R6 K118   ; R6 := R6["OnGamepadTransition"]
294 [-]: SETTABLE  R5 K117 R6   ; R5["BaseOnGamepadTransition"] := R6
295 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
296 [-]: CLOSURE   R6 4         ; R6 := closure(Function #125.5)
297 [-]: SETTABLE  R5 K118 R6   ; R5["OnGamepadTransition"] := R6
298 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
299 [-]: SELF      R5 R5 K119   ; R6 := R5; R5 := R5[0x6e6721d3]
300 [-]: LOADK     R7 K96       ; R7 := "/Lotus/Language/Menu/SearchPrompt"
301 [-]: CALL      R5 3 1       ; R5(R6,R7)
302 [-]: GETGLOBAL R5 K98       ; R5 := mSearchBox
303 [-]: SELF      R5 R5 K120   ; R6 := R5; R5 := R5[0x71e9ac81]
304 [-]: CALL      R5 2 1       ; R5(R6)
305 [-]: RETURN    R0 1         ; return 


; Function #125.1:
;
; Name:            
; Defined at line: 5139
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["SortPriority"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["SortPriority"]
  3 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 37
  4 [-]: JMP       37           ; PC := 37
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mRarity"]
  6 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mRarity"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["Name"]
 10 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["Name"]
 11 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 14
 14 [-]: LOADKB    R2 1 0       ; R2 := true
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: JMP       29           ; PC := 29
 17 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mRarity"]
 18 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mRarity"]
 21 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mRarity"]
 24 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 27
 27 [-]: LOADKB    R2 1 0       ; R2 := true
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mRarity"]
 30 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mRarity"]
 31 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 34
 34 [-]: LOADKB    R2 1 0       ; R2 := true
 35 [-]: RETURN    R2 2         ; return R2
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["SortPriority"]
 38 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["SortPriority"]
 41 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["SortPriority"]
 44 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 47
 47 [-]: LOADKB    R2 1 0       ; R2 := true
 48 [-]: RETURN    R2 2         ; return R2
 49 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["SortPriority"]
 50 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["SortPriority"]
 51 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 54
 54 [-]: LOADKB    R2 1 0       ; R2 := true
 55 [-]: RETURN    R2 2         ; return R2
 56 [-]: RETURN    R0 1         ; return 


; Function #125.2:
;
; Name:            
; Defined at line: 5153
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Name"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Name"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADKB    R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #125.3:
;
; Name:            
; Defined at line: 5168
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSearchBox
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R1 K1        ; R1 := mSearchBox
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mLabel"]
  8 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETGLOBAL R1 K1        ; R1 := mSearchBox
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mLabel"]
 12 [-]: EQ        0 R1 K4      ; if R1 ~= "" then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: LOADKB    R1 0 0       ; R1 := false
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       41           ; PC := 41
 17 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["SearchCache"]
 18 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 38
 19 [-]: JMP       38           ; PC := 38
 20 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["SearchCache"]
 21 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 38
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 24 [-]: GETTABLE  R1 R1 K7     ; R1 := R1[0xa5c556b9]
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0x83e41587
 26 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["SearchCache"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: GETGLOBAL R3 K8        ; R3 := 0x83e41587
 29 [-]: GETGLOBAL R4 K1        ; R4 := mSearchBox
 30 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mLabel"]
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: CONST     R4 1         ; R4 := 1.000000
 33 [-]: LOADKB    R5 1 0       ; R5 := true
 34 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 35 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 38
 38 [-]: LOADKB    R1 1 0       ; R1 := true
 39 [-]: NOT       R2 R1        ; R2 :=  R1
 40 [-]: RETURN    R2 2         ; return R2
 41 [-]: RETURN    R0 1         ; return 


; Function #125.4:
;
; Name:            
; Defined at line: 5189
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mLabel"]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x0ebd9e58]
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: CALL      R3 3 1       ; R3(R4,R5)
  5 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mLabel"]
  6 [-]: EQ        0 R3 K2      ; if R3 ~= "" then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
  9 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UITexture_Search"]
 10 [-]: TEST      R3 1         ; if R3 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UITexture_ClearSearch"]
 14 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mAltButtonicon"]
 15 [-]: EQ        1 R4 R3      ; if R4 == R3 then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: SETTABLE  R0 K6 R3     ; R0["mAltButtonicon"] := R3
 18 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mMovie"]
 19 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x1cb415c1]
 20 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["mClipName"]
 21 [-]: LOADK     R7 K10       ; R7 := ".BtnAlt"
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: MOVE      R7 R3        ; R7 := R3
 24 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 25 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mLabel"]
 26 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 41
 27 [-]: JMP       41           ; PC := 41
 28 [-]: GETGLOBAL R4 K11       ; R4 := mRewardGrid
 29 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: GETGLOBAL R4 K11       ; R4 := mRewardGrid
 32 [-]: SETTABLE  R4 K13 K14   ; R4["mMuteGridOpenSound"] := true
 33 [-]: GETGLOBAL R4 K11       ; R4 := mRewardGrid
 34 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x71e9ac81]
 35 [-]: LOADNIL   R6 R6        ; R6 := nil
 36 [-]: LOADKB    R7 1 0       ; R7 := true
 37 [-]: LOADKB    R8 1 0       ; R8 := true
 38 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 39 [-]: GETGLOBAL R4 K11       ; R4 := mRewardGrid
 40 [-]: SETTABLE  R4 K13 K16   ; R4["mMuteGridOpenSound"] := false
 41 [-]: RETURN    R0 1         ; return 


; Function #125.5:
;
; Name:            
; Defined at line: 5205
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x7e4d43ce]
  2 [-]: CALL      R1 2 1       ; R1(R2)
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0x1467d5f4]
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: NOT       R1 R1        ; R1 :=  R1
  7 [-]: SETTABLE  R0 K3 R1     ; R0["mAltButtonVisible"] := R1
  8 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  9 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xc0a3774b]
 10 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 11 [-]: LOADK     R5 K7        ; R5 := "BtnAlt"
 12 [-]: CONST     R6 11        ; R6 := 11.000000
 13 [-]: MOVE      R7 R1        ; R7 := R1
 14 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 15 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 5215
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 47
  5 [-]: JMP       47           ; PC := 47
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x7f5022cf
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xa5c556b9]
  8 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0xed4e0128]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LOADK     R3 K4        ; R3 := "Prime"
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: CONST     R1 6         ; R1 := 6.000000
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       47           ; PC := 47
 17 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0xf2deaf69]
 18 [-]: GETGLOBAL R3 K7        ; R3 := gMiscItemBaseType
 19 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETGLOBAL R1 K8        ; R1 := 0xb009bbc6
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 47
 29 [-]: JMP       47           ; PC := 47
 30 [-]: SELF      R2 R1 K9     ; R3 := R1; R2 := R1[0x2365060a]
 31 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 32 [-]: RETURN    R2 0         ; return R2,...
 33 [-]: JMP       47           ; PC := 47
 34 [-]: GETGLOBAL R2 K10       ; R2 := 0xcfc01047
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 37 [-]: JMP       45           ; PC := 45
 38 [-]: SELF      R7 R0 K6     ; R8 := R0; R7 := R0[0xf2deaf69]
 39 [-]: GETTABLE  R9 R6 K11    ; R9 := R6["Type"]
 40 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 41 [-]: TEST      R7 0         ; if not R7 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: GETTABLE  R7 R6 K12    ; R7 := R6["Priority"]
 44 [-]: RETURN    R7 2         ; return R7
 45 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 38; R4 := R5 end
 46 [-]: JMP       38           ; PC := 38
 47 [-]: CONST     R7 3         ; R7 := 3.000000
 48 [-]: RETURN    R7 2         ; return R7
 49 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 5235
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
  2 [-]: GETGLOBAL R3 K1        ; R3 := gLotusArtifactUpgradeType
  3 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 30
  5 [-]: JMP       30           ; PC := 30
  6 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Enhancement"]
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: TEST      R1 1         ; if R1 then PC := 30
 11 [-]: JMP       30           ; PC := 30
 12 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["RailjackMod"]
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: TEST      R1 0         ; if not R1 then PC := 24
 17 [-]: JMP       24           ; PC := 24
 18 [-]: NEWTABLE  R1 1 0       ; R1 := {}
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["AVIONICS"]
 21 [-]: SETLIST   R1 1 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: JMP       51           ; PC := 51
 24 [-]: NEWTABLE  R1 1 0       ; R1 := {}
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["MODS"]
 27 [-]: SETLIST   R1 1 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
 28 [-]: RETURN    R1 2         ; return R1
 29 [-]: JMP       51           ; PC := 51
 30 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
 31 [-]: GETGLOBAL R3 K6        ; R3 := gMiscItemBaseType
 32 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 33 [-]: TEST      R1 0         ; if not R1 then PC := 51
 34 [-]: JMP       51           ; PC := 51
 35 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
 36 [-]: GETGLOBAL R3 K7        ; R3 := gVoidProjectionItemType
 37 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 38 [-]: TEST      R1 0         ; if not R1 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: NEWTABLE  R1 1 0       ; R1 := {}
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["RELICS"]
 43 [-]: SETLIST   R1 1 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
 44 [-]: RETURN    R1 2         ; return R1
 45 [-]: JMP       51           ; PC := 51
 46 [-]: NEWTABLE  R1 1 0       ; R1 := {}
 47 [-]: GETUPVAL  R2 U1        ; R2 := U1
 48 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["RESOURCES"]
 49 [-]: SETLIST   R1 1 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
 50 [-]: RETURN    R1 2         ; return R1
 51 [-]: LOADNIL   R1 R1        ; R1 := nil
 52 [-]: RETURN    R1 2         ; return R1
 53 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5252
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  74

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: SETGLOBAL R0 K0        ; mMods := R0
  3 [-]: CONST     R0 0         ; R0 := 0.000000
  4 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  5 [-]: GETGLOBAL R2 K1        ; R2 := mPlayerMissionInfo
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mNemesisTaxInfo"]
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTaxedMiscItems"]
  8 [-]: GETGLOBAL R3 K1        ; R3 := mPlayerMissionInfo
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mNemesisTaxInfo"]
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mTaxedCollectedItems"]
 11 [-]: CONST     R4 1         ; R4 := 1.000000
 12 [-]: LEN       R5 R2        ; R5 := # R2
 13 [-]: CONST     R6 1         ; R6 := 1.000000
 14 [-]: FORPREP   R4 37        ; R4 -= R6; PC := 37
 15 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 16 [-]: GETGLOBAL R9 K5        ; R9 := 0x7b998233
 17 [-]: MOVE      R10 R8       ; R10 := R8
 18 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 19 [-]: TEST      R9 1         ; if R9 then PC := 37
 20 [-]: JMP       37           ; PC := 37
 21 [-]: GETGLOBAL R9 K5        ; R9 := 0x7b998233
 22 [-]: GETTABLE  R10 R8 K6    ; R10 := R8["mItemType"]
 23 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 24 [-]: TEST      R9 1         ; if R9 then PC := 37
 25 [-]: JMP       37           ; PC := 37
 26 [-]: GETTABLE  R9 R8 K6     ; R9 := R8["mItemType"]
 27 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9[0xf2deaf69]
 28 [-]: GETGLOBAL R11 K8       ; R11 := gLotusArtifactUpgradeType
 29 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 30 [-]: TEST      R9 0         ; if not R9 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETGLOBAL R9 K9        ; R9 := 0x33bdd652
 33 [-]: GETTABLE  R9 R9 K10    ; R9 := R9[0x23d5322f]
 34 [-]: MOVE      R10 R1       ; R10 := R1
 35 [-]: MOVE      R11 R8       ; R11 := R8
 36 [-]: CALL      R9 3 1       ; R9(R10,R11)
 37 [-]: FORLOOP   R4 15        ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
 38 [-]: CONST     R9 1         ; R9 := 1.000000
 39 [-]: LEN       R10 R3       ; R10 := # R3
 40 [-]: CONST     R11 1        ; R11 := 1.000000
 41 [-]: FORPREP   R9 76        ; R9 -= R11; PC := 76
 42 [-]: GETTABLE  R13 R3 R12   ; R13 := R3[R12]
 43 [-]: GETGLOBAL R14 K5       ; R14 := 0x7b998233
 44 [-]: MOVE      R15 R13      ; R15 := R13
 45 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 46 [-]: TEST      R14 1        ; if R14 then PC := 76
 47 [-]: JMP       76           ; PC := 76
 48 [-]: GETGLOBAL R14 K5       ; R14 := 0x7b998233
 49 [-]: GETTABLE  R15 R13 K11  ; R15 := R13["storeItem"]
 50 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 51 [-]: TEST      R14 1        ; if R14 then PC := 76
 52 [-]: JMP       76           ; PC := 76
 53 [-]: GETGLOBAL R14 K5       ; R14 := 0x7b998233
 54 [-]: GETTABLE  R15 R13 K11  ; R15 := R13["storeItem"]
 55 [-]: SELF      R15 R15 K12  ; R16 := R15; R15 := R15[0xf278f8a1]
 56 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 57 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 58 [-]: TEST      R14 1        ; if R14 then PC := 76
 59 [-]: JMP       76           ; PC := 76
 60 [-]: GETTABLE  R14 R13 K11  ; R14 := R13["storeItem"]
 61 [-]: SELF      R14 R14 K12  ; R15 := R14; R14 := R14[0xf278f8a1]
 62 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 63 [-]: SELF      R15 R14 K7   ; R16 := R14; R15 := R14[0xf2deaf69]
 64 [-]: GETGLOBAL R17 K8       ; R17 := gLotusArtifactUpgradeType
 65 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 66 [-]: TEST      R15 0        ; if not R15 then PC := 76
 67 [-]: JMP       76           ; PC := 76
 68 [-]: GETGLOBAL R15 K9       ; R15 := 0x33bdd652
 69 [-]: GETTABLE  R15 R15 K10  ; R15 := R15[0x23d5322f]
 70 [-]: MOVE      R16 R1       ; R16 := R1
 71 [-]: NEWTABLE  R17 0 2      ; R17 := {}
 72 [-]: SETTABLE  R17 K6 R14   ; R17["mItemType"] := R14
 73 [-]: GETTABLE  R18 R13 K14  ; R18 := R13["itemCount"]
 74 [-]: SETTABLE  R17 K13 R18  ; R17["mItemCount"] := R18
 75 [-]: CALL      R15 3 1      ; R15(R16,R17)
 76 [-]: FORLOOP   R9 42        ; R9 += R11; if R9 <= R10 then begin PC := 42; R12 := R9 end
 77 [-]: GETUPVAL  R15 U0       ; R15 := U0
 78 [-]: CALL      R15 1 2      ; R15 := R15()
 79 [-]: LOADNIL   R16 R16      ; R16 := nil
 80 [-]: GETTABLE  R17 R15 K15  ; R17 := R15["alertId"]
 81 [-]: EQ        1 R17 K16    ; if R17 == "" then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: CONST     R16 30       ; R16 := 30.000000
 84 [-]: GETGLOBAL R17 K17      ; R17 := 0xc8802016
 85 [-]: GETUPVAL  R18 U1       ; R18 := U1
 86 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
 87 [-]: JMP       173          ; PC := 173
 88 [-]: GETGLOBAL R22 K5       ; R22 := 0x7b998233
 89 [-]: GETTABLE  R23 R21 K11  ; R23 := R21["storeItem"]
 90 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 91 [-]: TEST      R22 1        ; if R22 then PC := 173
 92 [-]: JMP       173          ; PC := 173
 93 [-]: GETGLOBAL R22 K5       ; R22 := 0x7b998233
 94 [-]: GETTABLE  R23 R21 K11  ; R23 := R21["storeItem"]
 95 [-]: SELF      R23 R23 K12  ; R24 := R23; R23 := R23[0xf278f8a1]
 96 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
 97 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
 98 [-]: TEST      R22 1        ; if R22 then PC := 173
 99 [-]: JMP       173          ; PC := 173
100 [-]: GETUPVAL  R22 U2       ; R22 := U2
101 [-]: GETTABLE  R23 R21 K11  ; R23 := R21["storeItem"]
102 [-]: SELF      R23 R23 K12  ; R24 := R23; R23 := R23[0xf278f8a1]
103 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
104 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
105 [-]: TEST      R22 0        ; if not R22 then PC := 173
106 [-]: JMP       173          ; PC := 173
107 [-]: GETTABLE  R22 R21 K11  ; R22 := R21["storeItem"]
108 [-]: SELF      R22 R22 K12  ; R23 := R22; R22 := R22[0xf278f8a1]
109 [-]: CALL      R22 2 2      ; R22 := R22(R23)
110 [-]: SELF      R22 R22 K7   ; R23 := R22; R22 := R22[0xf2deaf69]
111 [-]: GETUPVAL  R24 U3       ; R24 := U3
112 [-]: GETTABLE  R24 R24 K18  ; R24 := R24["Sigil"]
113 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
114 [-]: TEST      R22 1        ; if R22 then PC := 173
115 [-]: JMP       173          ; PC := 173
116 [-]: GETTABLE  R22 R21 K11  ; R22 := R21["storeItem"]
117 [-]: SELF      R22 R22 K12  ; R23 := R22; R22 := R22[0xf278f8a1]
118 [-]: CALL      R22 2 2      ; R22 := R22(R23)
119 [-]: GETGLOBAL R23 K19      ; R23 := 0x6c97a788
120 [-]: GETTABLE  R23 R23 K20  ; R23 := R23[0x1aba4d9e]
121 [-]: CALL      R23 1 2      ; R23 := R23()
122 [-]: SETTABLE  R23 K6 R22   ; R23["mItemType"] := R22
123 [-]: GETTABLE  R24 R21 K21  ; R24 := R21["levelOverride"]
124 [-]: SELF      R25 R22 K7   ; R26 := R22; R25 := R22[0xf2deaf69]
125 [-]: GETGLOBAL R27 K22      ; R27 := gRandomizedArtifactUpgradeType
126 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
127 [-]: TEST      R25 1        ; if R25 then PC := 134
128 [-]: JMP       134          ; PC := 134
129 [-]: GETTABLE  R25 R23 K24  ; R25 := R23["mInstance"]
130 [-]: SELF      R25 R25 K25  ; R26 := R25; R25 := R25[0x86ba2663]
131 [-]: MOVE      R27 R24      ; R27 := R24
132 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
133 [-]: SETTABLE  R23 K23 R25  ; R23["mUpgradeFingerprint"] := R25
134 [-]: GETTABLE  R25 R21 K14  ; R25 := R21["itemCount"]
135 [-]: SETTABLE  R23 K13 R25  ; R23["mItemCount"] := R25
136 [-]: GETUPVAL  R25 U4       ; R25 := U4
137 [-]: MOVE      R26 R23      ; R26 := R23
138 [-]: GETTABLE  R27 R21 K26  ; R27 := R21["FromEnemyCache"]
139 [-]: MOVE      R28 R16      ; R28 := R16
140 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
141 [-]: GETTABLE  R25 R23 K24  ; R25 := R23["mInstance"]
142 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25[0xc6b8b3f2]
143 [-]: GETTABLE  R27 R23 K23  ; R27 := R23["mUpgradeFingerprint"]
144 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
145 [-]: EQ        1 R25 K28    ; if R25 == 6.000000 then PC := 173
146 [-]: JMP       173          ; PC := 173
147 [-]: GETGLOBAL R26 K29      ; R26 := _T
148 [-]: GETTABLE  R26 R26 K30  ; R26 := R26["eomScreenMode"]
149 [-]: GETUPVAL  R27 U5       ; R27 := U5
150 [-]: GETTABLE  R27 R27 K31  ; R27 := R27["ACTUAL_EOM"]
151 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 173
152 [-]: JMP       173          ; PC := 173
153 [-]: GETGLOBAL R26 K5       ; R26 := 0x7b998233
154 [-]: GETGLOBAL R27 K32      ; R27 := 0x89326c93
155 [-]: CALL      R26 2 2      ; R26 := R26(R27)
156 [-]: TEST      R26 1        ; if R26 then PC := 173
157 [-]: JMP       173          ; PC := 173
158 [-]: GETGLOBAL R26 K32      ; R26 := 0x89326c93
159 [-]: SELF      R26 R26 K33  ; R27 := R26; R26 := R26[0xfb64e76c]
160 [-]: CALL      R26 2 2      ; R26 := R26(R27)
161 [-]: GETGLOBAL R27 K5       ; R27 := 0x7b998233
162 [-]: MOVE      R28 R26      ; R28 := R26
163 [-]: CALL      R27 2 2      ; R27 := R27(R28)
164 [-]: TEST      R27 1        ; if R27 then PC := 173
165 [-]: JMP       173          ; PC := 173
166 [-]: GETGLOBAL R27 K34      ; R27 := 0xba7dfcd2
167 [-]: SELF      R27 R27 K35  ; R28 := R27; R27 := R27[0xf056b179]
168 [-]: MOVE      R29 R26      ; R29 := R26
169 [-]: GETGLOBAL R30 K36      ; R30 := 0x0469f296
170 [-]: LOADK     R31 K37      ; R31 := "EARN_UPGRADE_MOD"
171 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
172 [-]: CALL      R27 0 1      ; R27(R28,...)
173 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 88; R19 := R20 end
174 [-]: JMP       88           ; PC := 88
175 [-]: GETGLOBAL R27 K29      ; R27 := _T
176 [-]: GETTABLE  R27 R27 K38  ; R27 := R27["TestModCount"]
177 [-]: TEST      R27 0        ; if not R27 then PC := 198
178 [-]: JMP       198          ; PC := 198
179 [-]: CONST     R27 1        ; R27 := 1.000000
180 [-]: GETGLOBAL R28 K39      ; R28 := 0x70177a2b
181 [-]: LEN       R28 R28      ; R28 := # R28
182 [-]: CONST     R29 1        ; R29 := 1.000000
183 [-]: FORPREP   R27 197      ; R27 -= R29; PC := 197
184 [-]: GETGLOBAL R31 K19      ; R31 := 0x6c97a788
185 [-]: GETTABLE  R31 R31 K20  ; R31 := R31[0x1aba4d9e]
186 [-]: CALL      R31 1 2      ; R31 := R31()
187 [-]: GETGLOBAL R32 K40      ; R32 := 0xb009bbc6
188 [-]: GETGLOBAL R33 K39      ; R33 := 0x70177a2b
189 [-]: GETTABLE  R33 R33 R30  ; R33 := R33[R30]
190 [-]: CALL      R32 2 2      ; R32 := R32(R33)
191 [-]: SETTABLE  R31 K6 R32   ; R31["mItemType"] := R32
192 [-]: GETGLOBAL R32 K9       ; R32 := 0x33bdd652
193 [-]: GETTABLE  R32 R32 K10  ; R32 := R32[0x23d5322f]
194 [-]: GETUPVAL  R33 U6       ; R33 := U6
195 [-]: MOVE      R34 R31      ; R34 := R31
196 [-]: CALL      R32 3 1      ; R32(R33,R34)
197 [-]: FORLOOP   R27 184      ; R27 += R29; if R27 <= R28 then begin PC := 184; R30 := R27 end
198 [-]: GETGLOBAL R32 K17      ; R32 := 0xc8802016
199 [-]: GETUPVAL  R33 U6       ; R33 := U6
200 [-]: CALL      R32 2 4      ; R32,R33,R34 := R32(R33)
201 [-]: JMP       235          ; PC := 235
202 [-]: GETUPVAL  R37 U2       ; R37 := U2
203 [-]: GETTABLE  R38 R36 K6   ; R38 := R36["mItemType"]
204 [-]: CALL      R37 2 2      ; R37 := R37(R38)
205 [-]: TEST      R37 0        ; if not R37 then PC := 235
206 [-]: JMP       235          ; PC := 235
207 [-]: GETGLOBAL R37 K29      ; R37 := _T
208 [-]: GETTABLE  R37 R37 K30  ; R37 := R37["eomScreenMode"]
209 [-]: GETUPVAL  R38 U5       ; R38 := U5
210 [-]: GETTABLE  R38 R38 K31  ; R38 := R38["ACTUAL_EOM"]
211 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 231
212 [-]: JMP       231          ; PC := 231
213 [-]: GETUPVAL  R37 U7       ; R37 := U7
214 [-]: GETTABLE  R37 R37 K41  ; R37 := R37[0xcdc34211]
215 [-]: CALL      R37 1 2      ; R37 := R37()
216 [-]: TEST      R37 0        ; if not R37 then PC := 231
217 [-]: JMP       231          ; PC := 231
218 [-]: GETGLOBAL R37 K5       ; R37 := 0x7b998233
219 [-]: GETTABLE  R38 R36 K6   ; R38 := R36["mItemType"]
220 [-]: CALL      R37 2 2      ; R37 := R37(R38)
221 [-]: TEST      R37 1        ; if R37 then PC := 235
222 [-]: JMP       235          ; PC := 235
223 [-]: GETTABLE  R37 R36 K6   ; R37 := R36["mItemType"]
224 [-]: SELF      R37 R37 K7   ; R38 := R37; R37 := R37[0xf2deaf69]
225 [-]: GETGLOBAL R39 K42      ; R39 := 0xa94df70b
226 [-]: SELF      R39 R39 K43  ; R40 := R39; R39 := R39[0xbdb0dc65]
227 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
228 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
229 [-]: TEST      R37 1        ; if R37 then PC := 235
230 [-]: JMP       235          ; PC := 235
231 [-]: GETUPVAL  R37 U4       ; R37 := U4
232 [-]: MOVE      R38 R36      ; R38 := R36
233 [-]: LOADNIL   R39 R39      ; R39 := nil
234 [-]: CALL      R37 3 1      ; R37(R38,R39)
235 [-]: TFORLOOP  R32 2        ; R35,R36 :=  R32(R33,R34); if R35 ~= nil then begin PC = 202; R34 := R35 end
236 [-]: JMP       202          ; PC := 202
237 [-]: NEWTABLE  R37 0 0      ; R37 := {}
238 [-]: CONST     R38 1        ; R38 := 1.000000
239 [-]: GETGLOBAL R39 K0       ; R39 := mMods
240 [-]: LEN       R39 R39      ; R39 := # R39
241 [-]: CONST     R40 1        ; R40 := 1.000000
242 [-]: FORPREP   R38 289      ; R38 -= R40; PC := 289
243 [-]: ADD       R0 R0 K44    ; R0 := R0 + 1.000000
244 [-]: GETUPVAL  R42 U8       ; R42 := U8
245 [-]: GETTABLE  R42 R42 K45  ; R42 := R42[0xfc31b69e]
246 [-]: GETGLOBAL R43 K0       ; R43 := mMods
247 [-]: GETTABLE  R43 R43 R0   ; R43 := R43[R0]
248 [-]: GETTABLE  R43 R43 K46  ; R43 := R43["upg"]
249 [-]: MOVE      R44 R0       ; R44 := R0
250 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
251 [-]: GETGLOBAL R43 K0       ; R43 := mMods
252 [-]: GETTABLE  R43 R43 R0   ; R43 := R43[R0]
253 [-]: GETTABLE  R43 R43 K26  ; R43 := R43["FromEnemyCache"]
254 [-]: TEST      R43 1        ; if R43 then PC := 265
255 [-]: JMP       265          ; PC := 265
256 [-]: GETGLOBAL R43 K0       ; R43 := mMods
257 [-]: GETTABLE  R43 R43 R0   ; R43 := R43[R0]
258 [-]: GETTABLE  R43 R43 K46  ; R43 := R43["upg"]
259 [-]: GETTABLE  R43 R43 K6   ; R43 := R43["mItemType"]
260 [-]: SELF      R43 R43 K7   ; R44 := R43; R43 := R43[0xf2deaf69]
261 [-]: GETGLOBAL R45 K42      ; R45 := 0xa94df70b
262 [-]: SELF      R45 R45 K43  ; R46 := R45; R45 := R45[0xbdb0dc65]
263 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
264 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
265 [-]: SETTABLE  R42 K47 R43  ; R42["isIdentifiedMod"] := R43
266 [-]: GETGLOBAL R43 K0       ; R43 := mMods
267 [-]: GETTABLE  R43 R43 R0   ; R43 := R43[R0]
268 [-]: GETTABLE  R43 R43 K48  ; R43 := R43["SortPriority"]
269 [-]: SETTABLE  R42 K48 R43  ; R42["SortPriority"] := R43
270 [-]: GETTABLE  R43 R42 K47  ; R43 := R42["isIdentifiedMod"]
271 [-]: TEST      R43 0        ; if not R43 then PC := 282
272 [-]: JMP       282          ; PC := 282
273 [-]: GETGLOBAL R43 K50      ; R43 := 0xae91e43b
274 [-]: SELF      R43 R43 K51  ; R44 := R43; R43 := R43[0x42b04007]
275 [-]: LOADK     R45 K52      ; R45 := "/Lotus/Language/Game/IdentifiedItem"
276 [-]: LOADKB    R46 0 0      ; R46 := false
277 [-]: NEWTABLE  R47 0 1      ; R47 := {}
278 [-]: GETTABLE  R48 R42 K49  ; R48 := R42["mName"]
279 [-]: SETTABLE  R47 K53 R48  ; R47["ITEM_NAME"] := R48
280 [-]: CALL      R43 5 2      ; R43 := R43(R44,R45,R46,R47)
281 [-]: SETTABLE  R42 K49 R43  ; R42["mName"] := R43
282 [-]: GETGLOBAL R43 K9       ; R43 := 0x33bdd652
283 [-]: GETTABLE  R43 R43 K10  ; R43 := R43[0x23d5322f]
284 [-]: MOVE      R44 R37      ; R44 := R37
285 [-]: MOVE      R45 R42      ; R45 := R42
286 [-]: CALL      R43 3 1      ; R43(R44,R45)
287 [-]: GETGLOBAL R43 K54      ; R43 := 0xce225efa
288 [-]: CALL      R43 1 1      ; R43()
289 [-]: FORLOOP   R38 243      ; R38 += R40; if R38 <= R39 then begin PC := 243; R41 := R38 end
290 [-]: GETGLOBAL R43 K55      ; R43 := 0x0032441c
291 [-]: GETTABLE  R43 R43 K56  ; R43 := R43["NemesisEndBody"]
292 [-]: GETGLOBAL R44 K5       ; R44 := 0x7b998233
293 [-]: MOVE      R45 R43      ; R45 := R43
294 [-]: CALL      R44 2 2      ; R44 := R44(R45)
295 [-]: TEST      R44 1        ; if R44 then PC := 359
296 [-]: JMP       359          ; PC := 359
297 [-]: GETTABLE  R44 R43 K57  ; R44 := R43["RecoveredItemInfo"]
298 [-]: EQ        1 R44 K58    ; if R44 == nil then PC := 359
299 [-]: JMP       359          ; PC := 359
300 [-]: CLOSURE   R45 0        ; R45 := closure(Function #128.1)
301 [-]: MOVE      R0 R0        ; R0 := R0
302 [-]: GETUPVAL  R0 U8        ; R0 := U8
303 [-]: MOVE      R0 R37       ; R0 := R37
304 [-]: GETTABLE  R46 R44 K59  ; R46 := R44["RecoveredMiscItems"]
305 [-]: CONST     R47 1        ; R47 := 1.000000
306 [-]: LEN       R48 R46      ; R48 := # R46
307 [-]: CONST     R49 1        ; R49 := 1.000000
308 [-]: FORPREP   R47 326      ; R47 -= R49; PC := 326
309 [-]: GETTABLE  R51 R46 R50  ; R51 := R46[R50]
310 [-]: GETGLOBAL R52 K60      ; R52 := 0x7ed0a956
311 [-]: GETTABLE  R53 R51 K61  ; R53 := R51["ItemType"]
312 [-]: CALL      R52 2 2      ; R52 := R52(R53)
313 [-]: GETGLOBAL R53 K5       ; R53 := 0x7b998233
314 [-]: MOVE      R54 R52      ; R54 := R52
315 [-]: CALL      R53 2 2      ; R53 := R53(R54)
316 [-]: TEST      R53 1        ; if R53 then PC := 326
317 [-]: JMP       326          ; PC := 326
318 [-]: GETUPVAL  R53 U2       ; R53 := U2
319 [-]: MOVE      R54 R52      ; R54 := R52
320 [-]: CALL      R53 2 2      ; R53 := R53(R54)
321 [-]: TEST      R53 0        ; if not R53 then PC := 326
322 [-]: JMP       326          ; PC := 326
323 [-]: MOVE      R53 R45      ; R53 := R45
324 [-]: MOVE      R54 R51      ; R54 := R51
325 [-]: CALL      R53 2 1      ; R53(R54)
326 [-]: FORLOOP   R47 309      ; R47 += R49; if R47 <= R48 then begin PC := 309; R50 := R47 end
327 [-]: GETTABLE  R53 R44 K62  ; R53 := R44["RecoveredCollectedItems"]
328 [-]: CONST     R54 1        ; R54 := 1.000000
329 [-]: LEN       R55 R53      ; R55 := # R53
330 [-]: CONST     R56 1        ; R56 := 1.000000
331 [-]: FORPREP   R54 358      ; R54 -= R56; PC := 358
332 [-]: GETTABLE  R58 R53 R57  ; R58 := R53[R57]
333 [-]: GETGLOBAL R59 K40      ; R59 := 0xb009bbc6
334 [-]: GETTABLE  R60 R58 K63  ; R60 := R58["StoreItem"]
335 [-]: CALL      R59 2 2      ; R59 := R59(R60)
336 [-]: GETGLOBAL R60 K5       ; R60 := 0x7b998233
337 [-]: MOVE      R61 R59      ; R61 := R59
338 [-]: CALL      R60 2 2      ; R60 := R60(R61)
339 [-]: TEST      R60 1        ; if R60 then PC := 358
340 [-]: JMP       358          ; PC := 358
341 [-]: SELF      R60 R59 K12  ; R61 := R59; R60 := R59[0xf278f8a1]
342 [-]: CALL      R60 2 2      ; R60 := R60(R61)
343 [-]: MOVE      R59 R60      ; R59 := R60
344 [-]: GETGLOBAL R60 K5       ; R60 := 0x7b998233
345 [-]: MOVE      R61 R59      ; R61 := R59
346 [-]: CALL      R60 2 2      ; R60 := R60(R61)
347 [-]: TEST      R60 1        ; if R60 then PC := 358
348 [-]: JMP       358          ; PC := 358
349 [-]: GETUPVAL  R60 U2       ; R60 := U2
350 [-]: MOVE      R61 R59      ; R61 := R59
351 [-]: CALL      R60 2 2      ; R60 := R60(R61)
352 [-]: TEST      R60 0        ; if not R60 then PC := 358
353 [-]: JMP       358          ; PC := 358
354 [-]: SETTABLE  R58 K61 R59  ; R58["ItemType"] := R59
355 [-]: MOVE      R60 R45      ; R60 := R45
356 [-]: MOVE      R61 R58      ; R61 := R58
357 [-]: CALL      R60 2 1      ; R60(R61)
358 [-]: FORLOOP   R54 332      ; R54 += R56; if R54 <= R55 then begin PC := 332; R57 := R54 end
359 [-]: GETGLOBAL R60 K9       ; R60 := 0x33bdd652
360 [-]: GETTABLE  R60 R60 K64  ; R60 := R60[0xf21b1d8e]
361 [-]: MOVE      R61 R37      ; R61 := R37
362 [-]: CLOSURE   R62 1        ; R62 := closure(Function #128.2)
363 [-]: CALL      R60 3 1      ; R60(R61,R62)
364 [-]: CONST     R60 1        ; R60 := 1.000000
365 [-]: LEN       R61 R37      ; R61 := # R37
366 [-]: CONST     R62 1        ; R62 := 1.000000
367 [-]: FORPREP   R60 433      ; R60 -= R62; PC := 433
368 [-]: GETUPVAL  R64 U8       ; R64 := U8
369 [-]: GETTABLE  R64 R64 K65  ; R64 := R64[0x34c67ee0]
370 [-]: GETGLOBAL R65 K66      ; R65 := mRewardGrid
371 [-]: GETGLOBAL R66 K66      ; R66 := mRewardGrid
372 [-]: GETTABLE  R66 R66 K67  ; R66 := R66["mUnfilteredElements"]
373 [-]: LEN       R66 R66      ; R66 := # R66
374 [-]: ADD       R66 R66 R63  ; R66 := R66 + R63
375 [-]: NEWTABLE  R67 0 3      ; R67 := {}
376 [-]: GETTABLE  R68 R37 R63  ; R68 := R37[R63]
377 [-]: SETTABLE  R67 K68 R68  ; R67["Card"] := R68
378 [-]: NEWTABLE  R68 1 0      ; R68 := {}
379 [-]: GETUPVAL  R69 U9       ; R69 := U9
380 [-]: GETTABLE  R69 R69 K70  ; R69 := R69["MODS"]
381 [-]: SETLIST   R68 1 1      ; R68[(1-1)*FPF+i] := R(68+i), 1 <= i <= 1
382 [-]: SETTABLE  R67 K69 R68  ; R67["Categories"] := R68
383 [-]: SETTABLE  R67 K71 K72  ; R67["LockCategories"] := true
384 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
385 [-]: GETTABLE  R65 R64 K68  ; R65 := R64["Card"]
386 [-]: GETTABLE  R65 R65 K73  ; R65 := R65["mUpgradeItemType"]
387 [-]: GETTABLE  R66 R64 K68  ; R66 := R64["Card"]
388 [-]: GETTABLE  R66 R66 K74  ; R66 := R66["Recovered"]
389 [-]: SETTABLE  R64 K74 R66  ; R64["Recovered"] := R66
390 [-]: SETTABLE  R64 K75 K44  ; R64["Count"] := 1.000000
391 [-]: GETTABLE  R66 R37 R63  ; R66 := R37[R63]
392 [-]: GETTABLE  R66 R66 K48  ; R66 := R66["SortPriority"]
393 [-]: TEST      R66 1        ; if R66 then PC := 396
394 [-]: JMP       396          ; PC := 396
395 [-]: CONST     R66 3        ; R66 := 3.000000
396 [-]: GETTABLE  R67 R64 K76  ; R67 := R64["mRarity"]
397 [-]: TEST      R67 1        ; if R67 then PC := 400
398 [-]: JMP       400          ; PC := 400
399 [-]: CONST     R67 0        ; R67 := 0.000000
400 [-]: MUL       R67 R67 K77  ; R67 := R67 * 0.200000
401 [-]: ADD       R66 R66 R67  ; R66 := R66 + R67
402 [-]: ADD       R66 R66 K78  ; R66 := R66 + 0.100000
403 [-]: SETTABLE  R64 K48 R66  ; R64["SortPriority"] := R66
404 [-]: CONST     R66 1        ; R66 := 1.000000
405 [-]: LEN       R67 R1       ; R67 := # R1
406 [-]: CONST     R68 1        ; R68 := 1.000000
407 [-]: FORPREP   R66 416      ; R66 -= R68; PC := 416
408 [-]: GETTABLE  R70 R1 R69   ; R70 := R1[R69]
409 [-]: GETTABLE  R70 R70 K6   ; R70 := R70["mItemType"]
410 [-]: EQ        0 R70 R65    ; if R70 ~= R65 then PC := 416
411 [-]: JMP       416          ; PC := 416
412 [-]: GETTABLE  R70 R1 R69   ; R70 := R1[R69]
413 [-]: GETTABLE  R70 R70 K13  ; R70 := R70["mItemCount"]
414 [-]: SETTABLE  R64 K79 R70  ; R64["TaxedCount"] := R70
415 [-]: JMP       417          ; PC := 417
416 [-]: FORLOOP   R66 408      ; R66 += R68; if R66 <= R67 then begin PC := 408; R69 := R66 end
417 [-]: GETTABLE  R70 R64 K81  ; R70 := R64["Name"]
418 [-]: SETTABLE  R64 K80 R70  ; R64["SearchCache"] := R70
419 [-]: GETGLOBAL R70 K5       ; R70 := 0x7b998233
420 [-]: GETTABLE  R71 R64 K63  ; R71 := R64["StoreItem"]
421 [-]: CALL      R70 2 2      ; R70 := R70(R71)
422 [-]: TEST      R70 1        ; if R70 then PC := 431
423 [-]: JMP       431          ; PC := 431
424 [-]: GETUPVAL  R70 U10      ; R70 := U10
425 [-]: GETTABLE  R70 R70 K82  ; R70 := R70[0x1ac299fb]
426 [-]: GETGLOBAL R71 K50      ; R71 := 0xae91e43b
427 [-]: GETTABLE  R72 R64 K63  ; R72 := R64["StoreItem"]
428 [-]: GETTABLE  R73 R64 K81  ; R73 := R64["Name"]
429 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
430 [-]: SETTABLE  R64 K80 R70  ; R64["SearchCache"] := R70
431 [-]: GETGLOBAL R70 K54      ; R70 := 0xce225efa
432 [-]: CALL      R70 1 1      ; R70()
433 [-]: FORLOOP   R60 368      ; R60 += R62; if R60 <= R61 then begin PC := 368; R63 := R60 end
434 [-]: RETURN    R0 1         ; return 


; Function #128.1:
;
; Name:            
; Defined at line: 5340
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x6c97a788
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x1aba4d9e]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETGLOBAL R2 K3        ; R2 := 0xb009bbc6
  5 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["ItemType"]
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: SETTABLE  R1 K2 R2     ; R1["mItemType"] := R2
  8 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["ItemCount"]
  9 [-]: SETTABLE  R1 K5 R2     ; R1["mItemCount"] := R2
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: ADD       R2 R2 K7     ; R2 := R2 + 1.000000
 12 [-]: SETUPVAL  R2 U0        ; U82 := R0
 13 [-]: GETUPVAL  R2 U1        ; R2 := U1
 14 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0xfc31b69e]
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: SETTABLE  R2 K9 K10    ; R2["Recovered"] := true
 19 [-]: GETGLOBAL R3 K11       ; R3 := 0x33bdd652
 20 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0x23d5322f]
 21 [-]: GETUPVAL  R4 U2        ; R4 := U2
 22 [-]: MOVE      R5 R2        ; R5 := R2
 23 [-]: CALL      R3 3 1       ; R3(R4,R5)
 24 [-]: RETURN    R0 1         ; return 


; Function #128.2:
;
; Name:            
; Defined at line: 5376
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Recovered"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Recovered"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Recovered"]
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: JMP       53           ; PC := 53
  8 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mIsNew"]
  9 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mIsNew"]
 10 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mIsNew"]
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       53           ; PC := 53
 15 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["isIdentifiedMod"]
 16 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["isIdentifiedMod"]
 17 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["isIdentifiedMod"]
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: JMP       53           ; PC := 53
 22 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRarity"]
 23 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRarity"]
 24 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRarity"]
 27 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRarity"]
 28 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 31
 31 [-]: LOADKB    R2 1 0       ; R2 := true
 32 [-]: RETURN    R2 2         ; return R2
 33 [-]: JMP       53           ; PC := 53
 34 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mName"]
 35 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mName"]
 36 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mName"]
 39 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mName"]
 40 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 43
 43 [-]: LOADKB    R2 1 0       ; R2 := true
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: JMP       53           ; PC := 53
 46 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mLevel"]
 47 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mLevel"]
 48 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 51
 51 [-]: LOADKB    R2 1 0       ; R2 := true
 52 [-]: RETURN    R2 2         ; return R2
 53 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5415
; #Upvalues:       23
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  109

  1 [-]: GETGLOBAL R3 K0        ; R3 := mRewardGrid
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x7c09c373]
  3 [-]: LOADKB    R5 1 0       ; R5 := true
  4 [-]: LOADKB    R6 1 0       ; R6 := true
  5 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
  6 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  7 [-]: SETGLOBAL R3 K2        ; mRewards := R3
  8 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  9 [-]: SETUPVAL  R3 U0        ; U82 := R0
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: TEST      R3 0         ; if not R3 then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETUPVAL  R3 U2        ; R3 := U2
 14 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 15 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 16 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x42b04007]
 17 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Menu/EndOfMission_RewardsAlreadyEarned"
 18 [-]: LOADKB    R8 0 0       ; R8 := false
 19 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 20 [-]: SETTABLE  R4 K3 R5     ; R4["Name"] := R5
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0x0032441c
 22 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["UITexture_Locked"]
 23 [-]: SETTABLE  R4 K7 R5     ; R4["Icon"] := R5
 24 [-]: SETTABLE  R4 K10 K11   ; R4["Themed"] := true
 25 [-]: SETTABLE  R4 K12 K13   ; R4["Background"] := nil
 26 [-]: CALL      R3 2 1       ; R3(R4)
 27 [-]: GETGLOBAL R3 K8        ; R3 := 0x0032441c
 28 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["NemesisEndBody"]
 29 [-]: GETGLOBAL R4 K15       ; R4 := 0x7b998233
 30 [-]: MOVE      R5 R3        ; R5 := R3
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: TEST      R4 1         ; if R4 then PC := 246
 33 [-]: JMP       246          ; PC := 246
 34 [-]: GETGLOBAL R4 K16       ; R4 := 0xb009bbc6
 35 [-]: GETTABLE  R5 R3 K17    ; R5 := R3["EphemeraReward"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETGLOBAL R5 K15       ; R5 := 0x7b998233
 38 [-]: MOVE      R6 R4        ; R6 := R4
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: TEST      R5 1         ; if R5 then PC := 53
 41 [-]: JMP       53           ; PC := 53
 42 [-]: GETUPVAL  R5 U2        ; R5 := U2
 43 [-]: GETUPVAL  R6 U3        ; R6 := U3
 44 [-]: GETTABLE  R6 R6 K18    ; R6 := R6[0x08681f50]
 45 [-]: GETGLOBAL R7 K4        ; R7 := 0xae91e43b
 46 [-]: MOVE      R8 R4        ; R8 := R4
 47 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 48 [-]: SETTABLE  R9 K19 K11   ; R9["GetVisibilityMaterial"] := true
 49 [-]: LOADNIL   R10 R11      ; R10 := R11 := nil
 50 [-]: LOADKB    R12 1 0      ; R12 := true
 51 [-]: CALL      R6 7 0       ; R6,... := R6(R7,R8,R9,R10,R11,R12)
 52 [-]: CALL      R5 0 1       ; R5(R6,...)
 53 [-]: GETGLOBAL R5 K16       ; R5 := 0xb009bbc6
 54 [-]: GETTABLE  R6 R3 K20    ; R6 := R3["BaitReward"]
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: GETGLOBAL R6 K15       ; R6 := 0x7b998233
 57 [-]: MOVE      R7 R5        ; R7 := R5
 58 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 59 [-]: TEST      R6 1         ; if R6 then PC := 72
 60 [-]: JMP       72           ; PC := 72
 61 [-]: GETUPVAL  R6 U2        ; R6 := U2
 62 [-]: GETUPVAL  R7 U3        ; R7 := U3
 63 [-]: GETTABLE  R7 R7 K18    ; R7 := R7[0x08681f50]
 64 [-]: GETGLOBAL R8 K4        ; R8 := 0xae91e43b
 65 [-]: MOVE      R9 R5        ; R9 := R5
 66 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 67 [-]: SETTABLE  R10 K19 K11  ; R10["GetVisibilityMaterial"] := true
 68 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
 69 [-]: LOADKB    R13 1 0      ; R13 := true
 70 [-]: CALL      R7 7 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13)
 71 [-]: CALL      R6 0 1       ; R6(R7,...)
 72 [-]: GETTABLE  R6 R3 K21    ; R6 := R3["WeaponRecipe"]
 73 [-]: EQ        1 R6 K13     ; if R6 == nil then PC := 94
 74 [-]: JMP       94           ; PC := 94
 75 [-]: GETGLOBAL R6 K16       ; R6 := 0xb009bbc6
 76 [-]: GETTABLE  R7 R3 K21    ; R7 := R3["WeaponRecipe"]
 77 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["ItemType"]
 78 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 79 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 80 [-]: MOVE      R8 R6        ; R8 := R6
 81 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 82 [-]: TEST      R7 1         ; if R7 then PC := 94
 83 [-]: JMP       94           ; PC := 94
 84 [-]: GETUPVAL  R7 U2        ; R7 := U2
 85 [-]: GETUPVAL  R8 U3        ; R8 := U3
 86 [-]: GETTABLE  R8 R8 K23    ; R8 := R8[0x4eec6d11]
 87 [-]: GETGLOBAL R9 K4        ; R9 := 0xae91e43b
 88 [-]: MOVE      R10 R6       ; R10 := R6
 89 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 90 [-]: SETTABLE  R11 K19 K11  ; R11["GetVisibilityMaterial"] := true
 91 [-]: LOADKB    R12 1 0      ; R12 := true
 92 [-]: CALL      R8 5 0       ; R8,... := R8(R9,R10,R11,R12)
 93 [-]: CALL      R7 0 1       ; R7(R8,...)
 94 [-]: GETTABLE  R7 R3 K24    ; R7 := R3["RecoveredItemInfo"]
 95 [-]: EQ        1 R7 K13     ; if R7 == nil then PC := 246
 96 [-]: JMP       246          ; PC := 246
 97 [-]: GETTABLE  R8 R7 K25    ; R8 := R7["RecoveredCredits"]
 98 [-]: EQ        1 R8 K13     ; if R8 == nil then PC := 134
 99 [-]: JMP       134          ; PC := 134
100 [-]: GETTABLE  R8 R7 K25    ; R8 := R7["RecoveredCredits"]
101 [-]: LT        0 K26 R8     ; if 0.000000 >= R8 then PC := 134
102 [-]: JMP       134          ; PC := 134
103 [-]: CONST     R8 0         ; R8 := 0.000000
104 [-]: GETUPVAL  R9 U4        ; R9 := U4
105 [-]: MOVE      R10 R8       ; R10 := R8
106 [-]: GETTABLE  R11 R7 K25   ; R11 := R7["RecoveredCredits"]
107 [-]: LOADK     R12 K27      ; R12 := "Credits"
108 [-]: GETGLOBAL R13 K28      ; R13 := 0x603636ad
109 [-]: LOADK     R14 K29      ; R14 := "/Lotus/Language/Labels/RecoveredCredits"
110 [-]: NEWTABLE  R15 0 1      ; R15 := {}
111 [-]: GETUPVAL  R16 U5       ; R16 := U5
112 [-]: GETTABLE  R16 R16 K31  ; R16 := R16[0x1142c7a8]
113 [-]: GETTABLE  R17 R7 K25   ; R17 := R7["RecoveredCredits"]
114 [-]: CALL      R16 2 2      ; R16 := R16(R17)
115 [-]: SETTABLE  R15 K30 R16  ; R15["CREDITS"] := R16
116 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
117 [-]: LOADKB    R14 1 0      ; R14 := true
118 [-]: CALL      R9 6 2       ; R9 := R9(R10,R11,R12,R13,R14)
119 [-]: MOVE      R8 R9        ; R8 := R9
120 [-]: GETUPVAL  R9 U2        ; R9 := U2
121 [-]: NEWTABLE  R10 0 6      ; R10 := {}
122 [-]: GETGLOBAL R11 K28      ; R11 := 0x603636ad
123 [-]: LOADK     R12 K32      ; R12 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
124 [-]: NEWTABLE  R13 0 0      ; R13 := {}
125 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
126 [-]: SETTABLE  R10 K3 R11   ; R10["Name"] := R11
127 [-]: SETTABLE  R10 K33 K34  ; R10["Count"] := 1.000000
128 [-]: SETTABLE  R10 K27 R8   ; R10["Credits"] := R8
129 [-]: GETGLOBAL R11 K35      ; R11 := 0x9afd2e71
130 [-]: SETTABLE  R10 K7 R11   ; R10["Icon"] := R11
131 [-]: SETTABLE  R10 K10 K11  ; R10["Themed"] := true
132 [-]: SETTABLE  R10 K36 K11  ; R10["Recovered"] := true
133 [-]: CALL      R9 2 1       ; R9(R10)
134 [-]: GETTABLE  R9 R7 K37    ; R9 := R7["RecoveredFusionPoints"]
135 [-]: EQ        1 R9 K13     ; if R9 == nil then PC := 154
136 [-]: JMP       154          ; PC := 154
137 [-]: GETTABLE  R9 R7 K37    ; R9 := R7["RecoveredFusionPoints"]
138 [-]: LT        0 K26 R9     ; if 0.000000 >= R9 then PC := 154
139 [-]: JMP       154          ; PC := 154
140 [-]: GETUPVAL  R9 U2        ; R9 := U2
141 [-]: NEWTABLE  R10 0 5      ; R10 := {}
142 [-]: GETGLOBAL R11 K28      ; R11 := 0x603636ad
143 [-]: LOADK     R12 K38      ; R12 := "/Lotus/Language/Items/FusionBundle"
144 [-]: NEWTABLE  R13 0 0      ; R13 := {}
145 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
146 [-]: SETTABLE  R10 K3 R11   ; R10["Name"] := R11
147 [-]: SETTABLE  R10 K39 K40  ; R10["Description"] := "/Lotus/Language/Items/FusionPartDesc"
148 [-]: GETTABLE  R11 R7 K37   ; R11 := R7["RecoveredFusionPoints"]
149 [-]: SETTABLE  R10 K33 R11  ; R10["Count"] := R11
150 [-]: GETGLOBAL R11 K41      ; R11 := 0x457d7698
151 [-]: SETTABLE  R10 K7 R11   ; R10["Icon"] := R11
152 [-]: SETTABLE  R10 K36 K11  ; R10["Recovered"] := true
153 [-]: CALL      R9 2 1       ; R9(R10)
154 [-]: GETTABLE  R9 R7 K42    ; R9 := R7["RecoveredCrewShipFusionPoints"]
155 [-]: EQ        1 R9 K13     ; if R9 == nil then PC := 174
156 [-]: JMP       174          ; PC := 174
157 [-]: GETTABLE  R9 R7 K42    ; R9 := R7["RecoveredCrewShipFusionPoints"]
158 [-]: LT        0 K26 R9     ; if 0.000000 >= R9 then PC := 174
159 [-]: JMP       174          ; PC := 174
160 [-]: GETUPVAL  R9 U2        ; R9 := U2
161 [-]: NEWTABLE  R10 0 5      ; R10 := {}
162 [-]: GETGLOBAL R11 K28      ; R11 := 0x603636ad
163 [-]: LOADK     R12 K43      ; R12 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
164 [-]: NEWTABLE  R13 0 0      ; R13 := {}
165 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
166 [-]: SETTABLE  R10 K3 R11   ; R10["Name"] := R11
167 [-]: SETTABLE  R10 K39 K44  ; R10["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
168 [-]: GETTABLE  R11 R7 K42   ; R11 := R7["RecoveredCrewShipFusionPoints"]
169 [-]: SETTABLE  R10 K33 R11  ; R10["Count"] := R11
170 [-]: GETGLOBAL R11 K45      ; R11 := 0x1ae7e99f
171 [-]: SETTABLE  R10 K7 R11   ; R10["Icon"] := R11
172 [-]: SETTABLE  R10 K36 K11  ; R10["Recovered"] := true
173 [-]: CALL      R9 2 1       ; R9(R10)
174 [-]: GETTABLE  R9 R7 K46    ; R9 := R7["RecoveredMiscItems"]
175 [-]: CONST     R10 1        ; R10 := 1.000000
176 [-]: LEN       R11 R9       ; R11 := # R9
177 [-]: CONST     R12 1        ; R12 := 1.000000
178 [-]: FORPREP   R10 209      ; R10 -= R12; PC := 209
179 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
180 [-]: GETGLOBAL R15 K47      ; R15 := 0x7ed0a956
181 [-]: GETTABLE  R16 R14 K22  ; R16 := R14["ItemType"]
182 [-]: CALL      R15 2 2      ; R15 := R15(R16)
183 [-]: GETGLOBAL R16 K15      ; R16 := 0x7b998233
184 [-]: MOVE      R17 R15      ; R17 := R15
185 [-]: CALL      R16 2 2      ; R16 := R16(R17)
186 [-]: TEST      R16 1        ; if R16 then PC := 209
187 [-]: JMP       209          ; PC := 209
188 [-]: GETUPVAL  R16 U6       ; R16 := U6
189 [-]: MOVE      R17 R15      ; R17 := R15
190 [-]: CALL      R16 2 2      ; R16 := R16(R17)
191 [-]: TEST      R16 1        ; if R16 then PC := 209
192 [-]: JMP       209          ; PC := 209
193 [-]: GETUPVAL  R16 U3       ; R16 := U3
194 [-]: GETTABLE  R16 R16 K23  ; R16 := R16[0x4eec6d11]
195 [-]: GETGLOBAL R17 K4       ; R17 := 0xae91e43b
196 [-]: GETGLOBAL R18 K16      ; R18 := 0xb009bbc6
197 [-]: MOVE      R19 R15      ; R19 := R15
198 [-]: CALL      R18 2 2      ; R18 := R18(R19)
199 [-]: NEWTABLE  R19 0 1      ; R19 := {}
200 [-]: SETTABLE  R19 K19 K11  ; R19["GetVisibilityMaterial"] := true
201 [-]: LOADKB    R20 1 0      ; R20 := true
202 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
203 [-]: GETTABLE  R17 R14 K48  ; R17 := R14["ItemCount"]
204 [-]: SETTABLE  R16 K33 R17  ; R16["Count"] := R17
205 [-]: SETTABLE  R16 K36 K11  ; R16["Recovered"] := true
206 [-]: GETUPVAL  R17 U2       ; R17 := U2
207 [-]: MOVE      R18 R16      ; R18 := R16
208 [-]: CALL      R17 2 1      ; R17(R18)
209 [-]: FORLOOP   R10 179      ; R10 += R12; if R10 <= R11 then begin PC := 179; R13 := R10 end
210 [-]: GETTABLE  R17 R7 K49   ; R17 := R7["RecoveredCollectedItems"]
211 [-]: CONST     R18 1        ; R18 := 1.000000
212 [-]: LEN       R19 R17      ; R19 := # R17
213 [-]: CONST     R20 1        ; R20 := 1.000000
214 [-]: FORPREP   R18 245      ; R18 -= R20; PC := 245
215 [-]: GETTABLE  R22 R17 R21  ; R22 := R17[R21]
216 [-]: GETGLOBAL R23 K16      ; R23 := 0xb009bbc6
217 [-]: GETTABLE  R24 R22 K50  ; R24 := R22["StoreItem"]
218 [-]: CALL      R23 2 2      ; R23 := R23(R24)
219 [-]: GETGLOBAL R24 K15      ; R24 := 0x7b998233
220 [-]: MOVE      R25 R23      ; R25 := R23
221 [-]: CALL      R24 2 2      ; R24 := R24(R25)
222 [-]: TEST      R24 1        ; if R24 then PC := 245
223 [-]: JMP       245          ; PC := 245
224 [-]: GETUPVAL  R24 U6       ; R24 := U6
225 [-]: SELF      R25 R23 K51  ; R26 := R23; R25 := R23[0xf278f8a1]
226 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
227 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
228 [-]: TEST      R24 1        ; if R24 then PC := 245
229 [-]: JMP       245          ; PC := 245
230 [-]: GETUPVAL  R24 U3       ; R24 := U3
231 [-]: GETTABLE  R24 R24 K18  ; R24 := R24[0x08681f50]
232 [-]: GETGLOBAL R25 K4       ; R25 := 0xae91e43b
233 [-]: MOVE      R26 R23      ; R26 := R23
234 [-]: NEWTABLE  R27 0 1      ; R27 := {}
235 [-]: SETTABLE  R27 K19 K11  ; R27["GetVisibilityMaterial"] := true
236 [-]: LOADNIL   R28 R29      ; R28 := R29 := nil
237 [-]: LOADKB    R30 1 0      ; R30 := true
238 [-]: CALL      R24 7 2      ; R24 := R24(R25,R26,R27,R28,R29,R30)
239 [-]: GETTABLE  R25 R22 K48  ; R25 := R22["ItemCount"]
240 [-]: SETTABLE  R24 K33 R25  ; R24["Count"] := R25
241 [-]: SETTABLE  R24 K36 K11  ; R24["Recovered"] := true
242 [-]: GETUPVAL  R25 U2       ; R25 := U2
243 [-]: MOVE      R26 R24      ; R26 := R24
244 [-]: CALL      R25 2 1      ; R25(R26)
245 [-]: FORLOOP   R18 215      ; R18 += R20; if R18 <= R19 then begin PC := 215; R21 := R18 end
246 [-]: GETGLOBAL R25 K52      ; R25 := 0xc8802016
247 [-]: GETGLOBAL R26 K53      ; R26 := mOtherStuff
248 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
249 [-]: JMP       253          ; PC := 253
250 [-]: GETUPVAL  R30 U2       ; R30 := U2
251 [-]: MOVE      R31 R29      ; R31 := R29
252 [-]: CALL      R30 2 1      ; R30(R31)
253 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 250; R27 := R28 end
254 [-]: JMP       250          ; PC := 250
255 [-]: LOADNIL   R30 R30      ; R30 := nil
256 [-]: GETGLOBAL R31 K15      ; R31 := 0x7b998233
257 [-]: GETGLOBAL R32 K54      ; R32 := 0x89326c93
258 [-]: CALL      R31 2 2      ; R31 := R31(R32)
259 [-]: TEST      R31 1        ; if R31 then PC := 265
260 [-]: JMP       265          ; PC := 265
261 [-]: GETGLOBAL R31 K54      ; R31 := 0x89326c93
262 [-]: SELF      R31 R31 K55  ; R32 := R31; R31 := R31[0xfb64e76c]
263 [-]: CALL      R31 2 2      ; R31 := R31(R32)
264 [-]: MOVE      R30 R31      ; R30 := R31
265 [-]: NEWTABLE  R31 0 0      ; R31 := {}
266 [-]: GETGLOBAL R32 K56      ; R32 := _T
267 [-]: GETTABLE  R32 R32 K57  ; R32 := R32["eomScreenMode"]
268 [-]: GETUPVAL  R33 U7       ; R33 := U7
269 [-]: GETTABLE  R33 R33 K58  ; R33 := R33["ACTUAL_EOM"]
270 [-]: EQ        1 R32 R33    ; if R32 == R33 then PC := 288
271 [-]: JMP       288          ; PC := 288
272 [-]: GETUPVAL  R32 U8       ; R32 := U8
273 [-]: GETTABLE  R32 R32 K59  ; R32 := R32[0xcdc34211]
274 [-]: CALL      R32 1 2      ; R32 := R32()
275 [-]: TEST      R32 1        ; if R32 then PC := 287
276 [-]: JMP       287          ; PC := 287
277 [-]: GETGLOBAL R32 K56      ; R32 := _T
278 [-]: GETTABLE  R32 R32 K57  ; R32 := R32["eomScreenMode"]
279 [-]: GETUPVAL  R33 U7       ; R33 := U7
280 [-]: GETTABLE  R33 R33 K60  ; R33 := R33["DETAILED_PREVIEW"]
281 [-]: EQ        0 R32 R33    ; if R32 ~= R33 then PC := 287
282 [-]: JMP       287          ; PC := 287
283 [-]: GETGLOBAL R32 K61      ; R32 := mGameData
284 [-]: SELF      R32 R32 K62  ; R33 := R32; R32 := R32[0x01f12112]
285 [-]: CALL      R32 2 2      ; R32 := R32(R33)
286 [-]: JMP       289          ; PC := 289
287 [-]: LOADKB    R32 0 1      ; R32 := false; PC := 288
288 [-]: LOADKB    R32 1 0      ; R32 := true
289 [-]: GETGLOBAL R33 K63      ; R33 := mPlayerMissionInfo
290 [-]: GETTABLE  R33 R33 K64  ; R33 := R33["mNemesisTaxInfo"]
291 [-]: GETTABLE  R33 R33 K65  ; R33 := R33["mTaxedCollectedItems"]
292 [-]: LOADNIL   R34 R34      ; R34 := nil
293 [-]: GETUPVAL  R35 U9       ; R35 := U9
294 [-]: CALL      R35 1 2      ; R35 := R35()
295 [-]: LOADNIL   R36 R36      ; R36 := nil
296 [-]: GETTABLE  R37 R35 K66  ; R37 := R35["alertId"]
297 [-]: EQ        1 R37 K67    ; if R37 == "" then PC := 300
298 [-]: JMP       300          ; PC := 300
299 [-]: CONST     R36 30       ; R36 := 30.000000
300 [-]: GETGLOBAL R37 K56      ; R37 := _T
301 [-]: GETTABLE  R37 R37 K68  ; R37 := R37["TestStoreItems"]
302 [-]: TEST      R37 0        ; if not R37 then PC := 325
303 [-]: JMP       325          ; PC := 325
304 [-]: GETUPVAL  R37 U10      ; R37 := U10
305 [-]: EQ        0 R37 K13    ; if R37 ~= nil then PC := 309
306 [-]: JMP       309          ; PC := 309
307 [-]: NEWTABLE  R37 0 0      ; R37 := {}
308 [-]: SETUPVAL  R37 U10      ; U82 := R10
309 [-]: CONST     R37 1        ; R37 := 1.000000
310 [-]: GETGLOBAL R38 K69      ; R38 := 0xfd8e2ef9
311 [-]: LEN       R38 R38      ; R38 := # R38
312 [-]: CONST     R39 1        ; R39 := 1.000000
313 [-]: FORPREP   R37 324      ; R37 -= R39; PC := 324
314 [-]: GETGLOBAL R41 K70      ; R41 := 0x33bdd652
315 [-]: GETTABLE  R41 R41 K71  ; R41 := R41[0x23d5322f]
316 [-]: GETUPVAL  R42 U10      ; R42 := U10
317 [-]: NEWTABLE  R43 0 1      ; R43 := {}
318 [-]: GETGLOBAL R44 K16      ; R44 := 0xb009bbc6
319 [-]: GETGLOBAL R45 K69      ; R45 := 0xfd8e2ef9
320 [-]: GETTABLE  R45 R45 R40  ; R45 := R45[R40]
321 [-]: CALL      R44 2 2      ; R44 := R44(R45)
322 [-]: SETTABLE  R43 K72 R44  ; R43["storeItem"] := R44
323 [-]: CALL      R41 3 1      ; R41(R42,R43)
324 [-]: FORLOOP   R37 314      ; R37 += R39; if R37 <= R38 then begin PC := 314; R40 := R37 end
325 [-]: GETGLOBAL R41 K52      ; R41 := 0xc8802016
326 [-]: GETUPVAL  R42 U10      ; R42 := U10
327 [-]: CALL      R41 2 4      ; R41,R42,R43 := R41(R42)
328 [-]: JMP       486          ; PC := 486
329 [-]: GETGLOBAL R46 K15      ; R46 := 0x7b998233
330 [-]: GETTABLE  R47 R45 K72  ; R47 := R45["storeItem"]
331 [-]: CALL      R46 2 2      ; R46 := R46(R47)
332 [-]: TEST      R46 1        ; if R46 then PC := 486
333 [-]: JMP       486          ; PC := 486
334 [-]: GETTABLE  R46 R45 K73  ; R46 := R45["isStripped"]
335 [-]: TEST      R46 0        ; if not R46 then PC := 339
336 [-]: JMP       339          ; PC := 339
337 [-]: TEST      R32 0        ; if not R32 then PC := 486
338 [-]: JMP       486          ; PC := 486
339 [-]: GETTABLE  R46 R45 K72  ; R46 := R45["storeItem"]
340 [-]: SELF      R46 R46 K51  ; R47 := R46; R46 := R46[0xf278f8a1]
341 [-]: CALL      R46 2 2      ; R46 := R46(R47)
342 [-]: MOVE      R34 R46      ; R34 := R46
343 [-]: GETGLOBAL R46 K15      ; R46 := 0x7b998233
344 [-]: MOVE      R47 R34      ; R47 := R34
345 [-]: CALL      R46 2 2      ; R46 := R46(R47)
346 [-]: TEST      R46 1        ; if R46 then PC := 359
347 [-]: JMP       359          ; PC := 359
348 [-]: GETUPVAL  R46 U6       ; R46 := U6
349 [-]: MOVE      R47 R34      ; R47 := R34
350 [-]: CALL      R46 2 2      ; R46 := R46(R47)
351 [-]: TEST      R46 0        ; if not R46 then PC := 359
352 [-]: JMP       359          ; PC := 359
353 [-]: SELF      R46 R34 K74  ; R47 := R34; R46 := R34[0xf2deaf69]
354 [-]: GETUPVAL  R48 U11      ; R48 := U11
355 [-]: GETTABLE  R48 R48 K75  ; R48 := R48["Sigil"]
356 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
357 [-]: TEST      R46 0        ; if not R46 then PC := 486
358 [-]: JMP       486          ; PC := 486
359 [-]: GETUPVAL  R46 U3       ; R46 := U3
360 [-]: GETTABLE  R46 R46 K18  ; R46 := R46[0x08681f50]
361 [-]: GETGLOBAL R47 K4       ; R47 := 0xae91e43b
362 [-]: GETTABLE  R48 R45 K72  ; R48 := R45["storeItem"]
363 [-]: NEWTABLE  R49 0 3      ; R49 := {}
364 [-]: SETTABLE  R49 K76 R45  ; R49["ItemInfo"] := R45
365 [-]: GETGLOBAL R50 K61      ; R50 := mGameData
366 [-]: SETTABLE  R49 K77 R50  ; R49["GameData"] := R50
367 [-]: SETTABLE  R49 K19 K11  ; R49["GetVisibilityMaterial"] := true
368 [-]: LOADNIL   R50 R51      ; R50 := R51 := nil
369 [-]: LOADKB    R52 1 0      ; R52 := true
370 [-]: CALL      R46 7 2      ; R46 := R46(R47,R48,R49,R50,R51,R52)
371 [-]: SETTABLE  R46 K78 K11  ; R46["HideEndoCount"] := true
372 [-]: GETTABLE  R47 R45 K79  ; R47 := R45["FromEnemyCache"]
373 [-]: TEST      R47 0        ; if not R47 then PC := 384
374 [-]: JMP       384          ; PC := 384
375 [-]: GETGLOBAL R47 K4       ; R47 := 0xae91e43b
376 [-]: SELF      R47 R47 K5   ; R48 := R47; R47 := R47[0x42b04007]
377 [-]: LOADK     R49 K80      ; R49 := "/Lotus/Language/Game/IdentifiedItem"
378 [-]: LOADKB    R50 1 0      ; R50 := true
379 [-]: NEWTABLE  R51 0 1      ; R51 := {}
380 [-]: GETTABLE  R52 R46 K3   ; R52 := R46["Name"]
381 [-]: SETTABLE  R51 K81 R52  ; R51["ITEM_NAME"] := R52
382 [-]: CALL      R47 5 2      ; R47 := R47(R48,R49,R50,R51)
383 [-]: SETTABLE  R46 K3 R47   ; R46["Name"] := R47
384 [-]: GETTABLE  R47 R46 K82  ; R47 := R46["Category"]
385 [-]: EQ        0 R47 K84    ; if R47 ~= 14.000000 then PC := 406
386 [-]: JMP       406          ; PC := 406
387 [-]: SETTABLE  R46 K33 K34  ; R46["Count"] := 1.000000
388 [-]: CONST     R47 1        ; R47 := 1.000000
389 [-]: GETTABLE  R48 R46 K85  ; R48 := R46["RawItem"]
390 [-]: GETTABLE  R48 R48 K86  ; R48 := R48["itemCount"]
391 [-]: CONST     R49 1        ; R49 := 1.000000
392 [-]: FORPREP   R47 404      ; R47 -= R49; PC := 404
393 [-]: GETUPVAL  R51 U4       ; R51 := U4
394 [-]: GETTABLE  R52 R46 K27  ; R52 := R46["Credits"]
395 [-]: GETTABLE  R53 R45 K72  ; R53 := R45["storeItem"]
396 [-]: SELF      R53 R53 K87  ; R54 := R53; R53 := R53[0x4e485a6f]
397 [-]: CALL      R53 2 2      ; R53 := R53(R54)
398 [-]: UNM       R53 R53      ; R53 :=  R53
399 [-]: LOADK     R54 K27      ; R54 := "Credits"
400 [-]: GETTABLE  R55 R46 K3   ; R55 := R46["Name"]
401 [-]: LOADKB    R56 1 0      ; R56 := true
402 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
403 [-]: SETTABLE  R46 K27 R51  ; R46["Credits"] := R51
404 [-]: FORLOOP   R47 393      ; R47 += R49; if R47 <= R48 then begin PC := 393; R50 := R47 end
405 [-]: JMP       417          ; PC := 417
406 [-]: GETTABLE  R51 R46 K82  ; R51 := R46["Category"]
407 [-]: EQ        0 R51 K88    ; if R51 ~= 35.000000 then PC := 417
408 [-]: JMP       417          ; PC := 417
409 [-]: GETTABLE  R51 R46 K85  ; R51 := R46["RawItem"]
410 [-]: GETTABLE  R51 R51 K86  ; R51 := R51["itemCount"]
411 [-]: GETTABLE  R52 R45 K72  ; R52 := R45["storeItem"]
412 [-]: SELF      R52 R52 K87  ; R53 := R52; R52 := R52[0x4e485a6f]
413 [-]: CALL      R52 2 2      ; R52 := R52(R53)
414 [-]: UNM       R52 R52      ; R52 :=  R52
415 [-]: MUL       R51 R51 R52  ; R51 := R51 * R52
416 [-]: SETTABLE  R46 K89 R51  ; R46["Endo"] := R51
417 [-]: SETTABLE  R46 K90 R36  ; R46["SortPriority"] := R36
418 [-]: SELF      R51 R34 K74  ; R52 := R34; R51 := R34[0xf2deaf69]
419 [-]: GETUPVAL  R53 U11      ; R53 := U11
420 [-]: GETTABLE  R53 R53 K91  ; R53 := R53["Enhancement"]
421 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
422 [-]: TEST      R51 0        ; if not R51 then PC := 434
423 [-]: JMP       434          ; PC := 434
424 [-]: GETGLOBAL R51 K92      ; R51 := 0x6c97a788
425 [-]: GETTABLE  R51 R51 K93  ; R51 := R51[0x1aba4d9e]
426 [-]: CALL      R51 1 2      ; R51 := R51()
427 [-]: SETTABLE  R51 K94 R34  ; R51["mItemType"] := R34
428 [-]: GETTABLE  R52 R51 K96  ; R52 := R51["mInstance"]
429 [-]: SELF      R52 R52 K97  ; R53 := R52; R52 := R52[0x91fb01d5]
430 [-]: LOADK     R54 K67      ; R54 := ""
431 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
432 [-]: SETTABLE  R46 K95 R52  ; R46["ArcaneMaxRank"] := R52
433 [-]: SETTABLE  R46 K98 K26  ; R46["ArcaneRank"] := 0.000000
434 [-]: CONST     R52 1        ; R52 := 1.000000
435 [-]: LEN       R53 R33      ; R53 := # R33
436 [-]: CONST     R54 1        ; R54 := 1.000000
437 [-]: FORPREP   R52 448      ; R52 -= R54; PC := 448
438 [-]: GETTABLE  R56 R33 R55  ; R56 := R33[R55]
439 [-]: GETTABLE  R56 R56 K72  ; R56 := R56["storeItem"]
440 [-]: SELF      R56 R56 K51  ; R57 := R56; R56 := R56[0xf278f8a1]
441 [-]: CALL      R56 2 2      ; R56 := R56(R57)
442 [-]: EQ        0 R56 R34    ; if R56 ~= R34 then PC := 448
443 [-]: JMP       448          ; PC := 448
444 [-]: GETTABLE  R56 R33 R55  ; R56 := R33[R55]
445 [-]: GETTABLE  R56 R56 K86  ; R56 := R56["itemCount"]
446 [-]: SETTABLE  R46 K99 R56  ; R46["TaxedCount"] := R56
447 [-]: JMP       449          ; PC := 449
448 [-]: FORLOOP   R52 438      ; R52 += R54; if R52 <= R53 then begin PC := 438; R55 := R52 end
449 [-]: SETTABLE  R46 K100 R34 ; R46["Type"] := R34
450 [-]: GETGLOBAL R56 K70      ; R56 := 0x33bdd652
451 [-]: GETTABLE  R56 R56 K71  ; R56 := R56[0x23d5322f]
452 [-]: MOVE      R57 R31      ; R57 := R31
453 [-]: MOVE      R58 R46      ; R58 := R46
454 [-]: CALL      R56 3 1      ; R56(R57,R58)
455 [-]: GETTABLE  R56 R46 K33  ; R56 := R46["Count"]
456 [-]: TEST      R1 1         ; if R1 then PC := 486
457 [-]: JMP       486          ; PC := 486
458 [-]: GETGLOBAL R57 K15      ; R57 := 0x7b998233
459 [-]: GETGLOBAL R58 K101     ; R58 := 0xba7dfcd2
460 [-]: CALL      R57 2 2      ; R57 := R57(R58)
461 [-]: TEST      R57 1        ; if R57 then PC := 486
462 [-]: JMP       486          ; PC := 486
463 [-]: GETGLOBAL R57 K15      ; R57 := 0x7b998233
464 [-]: MOVE      R58 R30      ; R58 := R30
465 [-]: CALL      R57 2 2      ; R57 := R57(R58)
466 [-]: TEST      R57 1        ; if R57 then PC := 486
467 [-]: JMP       486          ; PC := 486
468 [-]: GETGLOBAL R57 K15      ; R57 := 0x7b998233
469 [-]: MOVE      R58 R34      ; R58 := R34
470 [-]: CALL      R57 2 2      ; R57 := R57(R58)
471 [-]: TEST      R57 1        ; if R57 then PC := 486
472 [-]: JMP       486          ; PC := 486
473 [-]: TEST      R56 0        ; if not R56 then PC := 486
474 [-]: JMP       486          ; PC := 486
475 [-]: LT        0 K26 R56    ; if 0.000000 >= R56 then PC := 486
476 [-]: JMP       486          ; PC := 486
477 [-]: GETGLOBAL R57 K101     ; R57 := 0xba7dfcd2
478 [-]: SELF      R57 R57 K102 ; R58 := R57; R57 := R57[0xd8da7235]
479 [-]: MOVE      R59 R30      ; R59 := R30
480 [-]: GETUPVAL  R60 U12      ; R60 := U12
481 [-]: GETTABLE  R60 R60 K103 ; R60 := R60["EARNED_ITEM_TAG"]
482 [-]: MOVE      R61 R56      ; R61 := R56
483 [-]: LOADNIL   R62 R62      ; R62 := nil
484 [-]: MOVE      R63 R34      ; R63 := R34
485 [-]: CALL      R57 7 1      ; R57(R58,R59,R60,R61,R62,R63)
486 [-]: TFORLOOP  R41 2        ; R44,R45 :=  R41(R42,R43); if R44 ~= nil then begin PC = 329; R43 := R44 end
487 [-]: JMP       329          ; PC := 329
488 [-]: GETGLOBAL R57 K52      ; R57 := 0xc8802016
489 [-]: MOVE      R58 R31      ; R58 := R31
490 [-]: CALL      R57 2 4      ; R57,R58,R59 := R57(R58)
491 [-]: JMP       495          ; PC := 495
492 [-]: GETUPVAL  R62 U2       ; R62 := U2
493 [-]: MOVE      R63 R61      ; R63 := R61
494 [-]: CALL      R62 2 1      ; R62(R63)
495 [-]: TFORLOOP  R57 2        ; R60,R61 :=  R57(R58,R59); if R60 ~= nil then begin PC = 492; R59 := R60 end
496 [-]: JMP       492          ; PC := 492
497 [-]: GETGLOBAL R62 K52      ; R62 := 0xc8802016
498 [-]: GETUPVAL  R63 U13      ; R63 := U13
499 [-]: CALL      R62 2 4      ; R62,R63,R64 := R62(R63)
500 [-]: JMP       533          ; PC := 533
501 [-]: GETTABLE  R34 R66 K94  ; R34 := R66["mItemType"]
502 [-]: GETGLOBAL R67 K15      ; R67 := 0x7b998233
503 [-]: MOVE      R68 R34      ; R68 := R34
504 [-]: CALL      R67 2 2      ; R67 := R67(R68)
505 [-]: TEST      R67 1        ; if R67 then PC := 530
506 [-]: JMP       530          ; PC := 530
507 [-]: GETGLOBAL R67 K104     ; R67 := 0x6728fd22
508 [-]: MOVE      R68 R34      ; R68 := R34
509 [-]: CALL      R67 2 2      ; R67 := R67(R68)
510 [-]: TEST      R67 0        ; if not R67 then PC := 516
511 [-]: JMP       516          ; PC := 516
512 [-]: GETGLOBAL R67 K16      ; R67 := 0xb009bbc6
513 [-]: MOVE      R68 R34      ; R68 := R34
514 [-]: CALL      R67 2 2      ; R67 := R67(R68)
515 [-]: MOVE      R34 R67      ; R34 := R67
516 [-]: GETUPVAL  R67 U2       ; R67 := U2
517 [-]: GETUPVAL  R68 U3       ; R68 := U3
518 [-]: GETTABLE  R68 R68 K23  ; R68 := R68[0x4eec6d11]
519 [-]: GETGLOBAL R69 K4       ; R69 := 0xae91e43b
520 [-]: MOVE      R70 R34      ; R70 := R34
521 [-]: NEWTABLE  R71 0 3      ; R71 := {}
522 [-]: SETTABLE  R71 K76 R66  ; R71["ItemInfo"] := R66
523 [-]: GETGLOBAL R72 K61      ; R72 := mGameData
524 [-]: SETTABLE  R71 K77 R72  ; R71["GameData"] := R72
525 [-]: SETTABLE  R71 K19 K11  ; R71["GetVisibilityMaterial"] := true
526 [-]: LOADKB    R72 1 0      ; R72 := true
527 [-]: CALL      R68 5 0      ; R68,... := R68(R69,R70,R71,R72)
528 [-]: CALL      R67 0 1      ; R67(R68,...)
529 [-]: JMP       533          ; PC := 533
530 [-]: GETGLOBAL R67 K105     ; R67 := 0x3d106989
531 [-]: LOADK     R68 K106     ; R68 := "MissionStatsAndResults: invalid Consumable acquired during mission?"
532 [-]: CALL      R67 2 1      ; R67(R68)
533 [-]: TFORLOOP  R62 2        ; R65,R66 :=  R62(R63,R64); if R65 ~= nil then begin PC = 501; R64 := R65 end
534 [-]: JMP       501          ; PC := 501
535 [-]: NEWTABLE  R67 0 0      ; R67 := {}
536 [-]: GETGLOBAL R68 K63      ; R68 := mPlayerMissionInfo
537 [-]: GETTABLE  R68 R68 K64  ; R68 := R68["mNemesisTaxInfo"]
538 [-]: GETTABLE  R68 R68 K107 ; R68 := R68["mTaxedMiscItems"]
539 [-]: CONST     R69 1        ; R69 := 1.000000
540 [-]: LEN       R70 R68      ; R70 := # R68
541 [-]: CONST     R71 1        ; R71 := 1.000000
542 [-]: FORPREP   R69 561      ; R69 -= R71; PC := 561
543 [-]: GETGLOBAL R73 K15      ; R73 := 0x7b998233
544 [-]: GETTABLE  R74 R68 R72  ; R74 := R68[R72]
545 [-]: GETTABLE  R74 R74 K94  ; R74 := R74["mItemType"]
546 [-]: CALL      R73 2 2      ; R73 := R73(R74)
547 [-]: TEST      R73 1        ; if R73 then PC := 561
548 [-]: JMP       561          ; PC := 561
549 [-]: GETTABLE  R73 R68 R72  ; R73 := R68[R72]
550 [-]: GETTABLE  R73 R73 K94  ; R73 := R73["mItemType"]
551 [-]: SELF      R73 R73 K74  ; R74 := R73; R73 := R73[0xf2deaf69]
552 [-]: GETGLOBAL R75 K108     ; R75 := gLotusArtifactUpgradeType
553 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
554 [-]: TEST      R73 1        ; if R73 then PC := 561
555 [-]: JMP       561          ; PC := 561
556 [-]: GETGLOBAL R73 K70      ; R73 := 0x33bdd652
557 [-]: GETTABLE  R73 R73 K71  ; R73 := R73[0x23d5322f]
558 [-]: MOVE      R74 R67      ; R74 := R67
559 [-]: GETTABLE  R75 R68 R72  ; R75 := R68[R72]
560 [-]: CALL      R73 3 1      ; R73(R74,R75)
561 [-]: FORLOOP   R69 543      ; R69 += R71; if R69 <= R70 then begin PC := 543; R72 := R69 end
562 [-]: GETGLOBAL R73 K52      ; R73 := 0xc8802016
563 [-]: GETUPVAL  R74 U14      ; R74 := U14
564 [-]: CALL      R73 2 4      ; R73,R74,R75 := R73(R74)
565 [-]: JMP       826          ; PC := 826
566 [-]: GETTABLE  R34 R77 K94  ; R34 := R77["mItemType"]
567 [-]: GETTABLE  R78 R77 K109 ; R78 := R77["mIsMystery"]
568 [-]: TEST      R78 0        ; if not R78 then PC := 585
569 [-]: JMP       585          ; PC := 585
570 [-]: GETUPVAL  R78 U2       ; R78 := U2
571 [-]: NEWTABLE  R79 0 4      ; R79 := {}
572 [-]: GETGLOBAL R80 K4       ; R80 := 0xae91e43b
573 [-]: SELF      R80 R80 K5   ; R81 := R80; R80 := R80[0x42b04007]
574 [-]: LOADK     R82 K110     ; R82 := "/Lotus/Language/Game/UnidentifiedItem"
575 [-]: LOADKB    R83 0 0      ; R83 := false
576 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
577 [-]: SETTABLE  R79 K3 R80   ; R79["Name"] := R80
578 [-]: GETTABLE  R80 R77 K111 ; R80 := R77["mItemCount"]
579 [-]: SETTABLE  R79 K33 R80  ; R79["Count"] := R80
580 [-]: GETGLOBAL R80 K112     ; R80 := 0x5f3fe9ee
581 [-]: SETTABLE  R79 K7 R80   ; R79["Icon"] := R80
582 [-]: SETTABLE  R79 K90 K113 ; R79["SortPriority"] := 20.000000
583 [-]: CALL      R78 2 1      ; R78(R79)
584 [-]: JMP       826          ; PC := 826
585 [-]: GETGLOBAL R78 K15      ; R78 := 0x7b998233
586 [-]: MOVE      R79 R34      ; R79 := R34
587 [-]: CALL      R78 2 2      ; R78 := R78(R79)
588 [-]: TEST      R78 0        ; if not R78 then PC := 594
589 [-]: JMP       594          ; PC := 594
590 [-]: GETGLOBAL R78 K105     ; R78 := 0x3d106989
591 [-]: LOADK     R79 K114     ; R79 := "MissionStatsAndResults: invalid miscItem in mMiscItems"
592 [-]: CALL      R78 2 1      ; R78(R79)
593 [-]: JMP       826          ; PC := 826
594 [-]: GETGLOBAL R78 K104     ; R78 := 0x6728fd22
595 [-]: MOVE      R79 R34      ; R79 := R34
596 [-]: CALL      R78 2 2      ; R78 := R78(R79)
597 [-]: TEST      R78 0        ; if not R78 then PC := 603
598 [-]: JMP       603          ; PC := 603
599 [-]: GETGLOBAL R78 K16      ; R78 := 0xb009bbc6
600 [-]: MOVE      R79 R34      ; R79 := R34
601 [-]: CALL      R78 2 2      ; R78 := R78(R79)
602 [-]: MOVE      R34 R78      ; R34 := R78
603 [-]: GETGLOBAL R78 K15      ; R78 := 0x7b998233
604 [-]: MOVE      R79 R34      ; R79 := R34
605 [-]: CALL      R78 2 2      ; R78 := R78(R79)
606 [-]: TEST      R78 0        ; if not R78 then PC := 616
607 [-]: JMP       616          ; PC := 616
608 [-]: GETGLOBAL R78 K105     ; R78 := 0x3d106989
609 [-]: LOADK     R79 K115     ; R79 := "MissionStatsAndResults: broken miscItem WRes: "
610 [-]: GETTABLE  R80 R77 K94  ; R80 := R77["mItemType"]
611 [-]: SELF      R80 R80 K116 ; R81 := R80; R80 := R80[0xed4e0128]
612 [-]: CALL      R80 2 2      ; R80 := R80(R81)
613 [-]: CONCAT    R79 R79 R80  ; R79 := R79 .. R80
614 [-]: CALL      R78 2 1      ; R78(R79)
615 [-]: JMP       826          ; PC := 826
616 [-]: GETGLOBAL R78 K56      ; R78 := _T
617 [-]: GETTABLE  R78 R78 K57  ; R78 := R78["eomScreenMode"]
618 [-]: GETUPVAL  R79 U7       ; R79 := U7
619 [-]: GETTABLE  R79 R79 K58  ; R79 := R79["ACTUAL_EOM"]
620 [-]: EQ        1 R78 R79    ; if R78 == R79 then PC := 635
621 [-]: JMP       635          ; PC := 635
622 [-]: GETGLOBAL R78 K15      ; R78 := 0x7b998233
623 [-]: MOVE      R79 R34      ; R79 := R34
624 [-]: CALL      R78 2 2      ; R78 := R78(R79)
625 [-]: TEST      R78 1        ; if R78 then PC := 635
626 [-]: JMP       635          ; PC := 635
627 [-]: SELF      R78 R34 K74  ; R79 := R34; R78 := R34[0xf2deaf69]
628 [-]: GETGLOBAL R80 K117     ; R80 := gRecipeItemType
629 [-]: CALL      R78 3 2      ; R78 := R78(R79,R80)
630 [-]: TEST      R78 0        ; if not R78 then PC := 637
631 [-]: JMP       637          ; PC := 637
632 [-]: GETUPVAL  R78 U15      ; R78 := U15
633 [-]: CALL      R78 1 2      ; R78 := R78()
634 [-]: JMP       637          ; PC := 637
635 [-]: LOADKB    R78 0 1      ; R78 := false; PC := 636
636 [-]: LOADKB    R78 1 0      ; R78 := true
637 [-]: TEST      R78 1        ; if R78 then PC := 826
638 [-]: JMP       826          ; PC := 826
639 [-]: NEWTABLE  R79 0 0      ; R79 := {}
640 [-]: SELF      R80 R34 K74  ; R81 := R34; R80 := R34[0xf2deaf69]
641 [-]: GETGLOBAL R82 K118     ; R82 := gFishItemType
642 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
643 [-]: TEST      R80 0        ; if not R80 then PC := 687
644 [-]: JMP       687          ; PC := 687
645 [-]: LOADNIL   R80 R80      ; R80 := nil
646 [-]: GETGLOBAL R81 K15      ; R81 := 0x7b998233
647 [-]: GETUPVAL  R82 U16      ; R82 := U16
648 [-]: CALL      R81 2 2      ; R81 := R81(R82)
649 [-]: TEST      R81 1        ; if R81 then PC := 657
650 [-]: JMP       657          ; PC := 657
651 [-]: GETUPVAL  R81 U16      ; R81 := U16
652 [-]: SELF      R81 R81 K119 ; R82 := R81; R81 := R81[0x105074fb]
653 [-]: MOVE      R83 R34      ; R83 := R34
654 [-]: CALL      R81 3 2      ; R81 := R81(R82,R83)
655 [-]: MOVE      R80 R81      ; R80 := R81
656 [-]: JMP       668          ; PC := 668
657 [-]: GETGLOBAL R81 K16      ; R81 := 0xb009bbc6
658 [-]: LOADK     R82 K120     ; R82 := "/Lotus/StoreItems/"
659 [-]: GETGLOBAL R83 K121     ; R83 := 0x7f5022cf
660 [-]: GETTABLE  R83 R83 K122 ; R83 := R83[0x1a94c9cc]
661 [-]: SELF      R84 R34 K116 ; R85 := R34; R84 := R34[0xed4e0128]
662 [-]: CALL      R84 2 2      ; R84 := R84(R85)
663 [-]: CONST     R85 8        ; R85 := 8.000000
664 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
665 [-]: CONCAT    R82 R82 R83  ; R82 := R82 .. R83
666 [-]: CALL      R81 2 2      ; R81 := R81(R82)
667 [-]: MOVE      R80 R81      ; R80 := R81
668 [-]: GETGLOBAL R81 K15      ; R81 := 0x7b998233
669 [-]: MOVE      R82 R80      ; R82 := R80
670 [-]: CALL      R81 2 2      ; R81 := R81(R82)
671 [-]: TEST      R81 1        ; if R81 then PC := 699
672 [-]: JMP       699          ; PC := 699
673 [-]: GETUPVAL  R81 U3       ; R81 := U3
674 [-]: GETTABLE  R81 R81 K18  ; R81 := R81[0x08681f50]
675 [-]: GETGLOBAL R82 K4       ; R82 := 0xae91e43b
676 [-]: MOVE      R83 R80      ; R83 := R80
677 [-]: NEWTABLE  R84 0 3      ; R84 := {}
678 [-]: SETTABLE  R84 K76 R77  ; R84["ItemInfo"] := R77
679 [-]: GETGLOBAL R85 K61      ; R85 := mGameData
680 [-]: SETTABLE  R84 K77 R85  ; R84["GameData"] := R85
681 [-]: SETTABLE  R84 K19 K11  ; R84["GetVisibilityMaterial"] := true
682 [-]: LOADNIL   R85 R86      ; R85 := R86 := nil
683 [-]: LOADKB    R87 1 0      ; R87 := true
684 [-]: CALL      R81 7 2      ; R81 := R81(R82,R83,R84,R85,R86,R87)
685 [-]: MOVE      R79 R81      ; R79 := R81
686 [-]: JMP       699          ; PC := 699
687 [-]: GETUPVAL  R81 U3       ; R81 := U3
688 [-]: GETTABLE  R81 R81 K23  ; R81 := R81[0x4eec6d11]
689 [-]: GETGLOBAL R82 K4       ; R82 := 0xae91e43b
690 [-]: MOVE      R83 R34      ; R83 := R34
691 [-]: NEWTABLE  R84 0 3      ; R84 := {}
692 [-]: SETTABLE  R84 K76 R77  ; R84["ItemInfo"] := R77
693 [-]: GETGLOBAL R85 K61      ; R85 := mGameData
694 [-]: SETTABLE  R84 K77 R85  ; R84["GameData"] := R85
695 [-]: SETTABLE  R84 K19 K11  ; R84["GetVisibilityMaterial"] := true
696 [-]: LOADKB    R85 1 0      ; R85 := true
697 [-]: CALL      R81 5 2      ; R81 := R81(R82,R83,R84,R85)
698 [-]: MOVE      R79 R81      ; R79 := R81
699 [-]: GETTABLE  R81 R77 K111 ; R81 := R77["mItemCount"]
700 [-]: SETTABLE  R79 K33 R81  ; R79["Count"] := R81
701 [-]: CONST     R81 1        ; R81 := 1.000000
702 [-]: LEN       R82 R67      ; R82 := # R67
703 [-]: CONST     R83 1        ; R83 := 1.000000
704 [-]: FORPREP   R81 713      ; R81 -= R83; PC := 713
705 [-]: GETTABLE  R85 R67 R84  ; R85 := R67[R84]
706 [-]: GETTABLE  R85 R85 K94  ; R85 := R85["mItemType"]
707 [-]: EQ        0 R85 R34    ; if R85 ~= R34 then PC := 713
708 [-]: JMP       713          ; PC := 713
709 [-]: GETTABLE  R85 R67 R84  ; R85 := R67[R84]
710 [-]: GETTABLE  R85 R85 K111 ; R85 := R85["mItemCount"]
711 [-]: SETTABLE  R79 K99 R85  ; R79["TaxedCount"] := R85
712 [-]: JMP       714          ; PC := 714
713 [-]: FORLOOP   R81 705      ; R81 += R83; if R81 <= R82 then begin PC := 705; R84 := R81 end
714 [-]: GETTABLE  R85 R79 K33  ; R85 := R79["Count"]
715 [-]: EQ        1 R85 K26    ; if R85 == 0.000000 then PC := 826
716 [-]: JMP       826          ; PC := 826
717 [-]: SELF      R85 R34 K74  ; R86 := R34; R85 := R34[0xf2deaf69]
718 [-]: GETUPVAL  R87 U11      ; R87 := U11
719 [-]: GETTABLE  R87 R87 K123 ; R87 := R87["KuvaItem"]
720 [-]: CALL      R85 3 2      ; R85 := R85(R86,R87)
721 [-]: TEST      R85 0        ; if not R85 then PC := 759
722 [-]: JMP       759          ; PC := 759
723 [-]: GETGLOBAL R85 K8       ; R85 := 0x0032441c
724 [-]: GETTABLE  R85 R85 K124 ; R85 := R85["LastMissionKuva"]
725 [-]: EQ        0 R85 K13    ; if R85 ~= nil then PC := 750
726 [-]: JMP       750          ; PC := 750
727 [-]: GETTABLE  R85 R35 K125 ; R85 := R35["periodicMissionTag"]
728 [-]: GETGLOBAL R86 K126     ; R86 := EMPTY_SYMBOL
729 [-]: EQ        1 R85 R86    ; if R85 == R86 then PC := 744
730 [-]: JMP       744          ; PC := 744
731 [-]: GETGLOBAL R85 K127     ; R85 := 0x76ea806b
732 [-]: SELF      R85 R85 K128 ; R86 := R85; R85 := R85[0x3f3ae64c]
733 [-]: CONST     R87 0        ; R87 := 0.000000
734 [-]: CALL      R85 3 2      ; R85 := R85(R86,R87)
735 [-]: SELF      R85 R85 K129 ; R86 := R85; R85 := R85[0x80563238]
736 [-]: CALL      R85 2 2      ; R85 := R85(R86)
737 [-]: SELF      R85 R85 K130 ; R86 := R85; R85 := R85[0xc3150d06]
738 [-]: GETTABLE  R87 R35 K125 ; R87 := R35["periodicMissionTag"]
739 [-]: GETUPVAL  R88 U8       ; R88 := U8
740 [-]: GETTABLE  R88 R88 K131 ; R88 := R88["KUVA_TOWER_MISSION_INTERVAL"]
741 [-]: CALL      R85 4 2      ; R85 := R85(R86,R87,R88)
742 [-]: TEST      R85 0        ; if not R85 then PC := 826
743 [-]: JMP       826          ; PC := 826
744 [-]: GETUPVAL  R85 U2       ; R85 := U2
745 [-]: MOVE      R86 R79      ; R86 := R79
746 [-]: CALL      R85 2 1      ; R85(R86)
747 [-]: GETGLOBAL R85 K8       ; R85 := 0x0032441c
748 [-]: SETTABLE  R85 K124 R79 ; R85["LastMissionKuva"] := R79
749 [-]: JMP       826          ; PC := 826
750 [-]: GETGLOBAL R85 K8       ; R85 := 0x0032441c
751 [-]: GETTABLE  R85 R85 K124 ; R85 := R85["LastMissionKuva"]
752 [-]: GETTABLE  R86 R79 K99  ; R86 := R79["TaxedCount"]
753 [-]: SETTABLE  R85 K99 R86  ; R85["TaxedCount"] := R86
754 [-]: GETUPVAL  R85 U2       ; R85 := U2
755 [-]: GETGLOBAL R86 K8       ; R86 := 0x0032441c
756 [-]: GETTABLE  R86 R86 K124 ; R86 := R86["LastMissionKuva"]
757 [-]: CALL      R85 2 1      ; R85(R86)
758 [-]: JMP       826          ; PC := 826
759 [-]: SELF      R85 R34 K74  ; R86 := R34; R85 := R34[0xf2deaf69]
760 [-]: GETUPVAL  R87 U11      ; R87 := U11
761 [-]: GETTABLE  R87 R87 K132 ; R87 := R87["ScarletCredits"]
762 [-]: CALL      R85 3 2      ; R85 := R85(R86,R87)
763 [-]: TEST      R85 0        ; if not R85 then PC := 769
764 [-]: JMP       769          ; PC := 769
765 [-]: GETUPVAL  R85 U2       ; R85 := U2
766 [-]: MOVE      R86 R79      ; R86 := R79
767 [-]: CALL      R85 2 1      ; R85(R86)
768 [-]: JMP       826          ; PC := 826
769 [-]: SELF      R85 R34 K74  ; R86 := R34; R85 := R34[0xf2deaf69]
770 [-]: GETUPVAL  R87 U11      ; R87 := U11
771 [-]: GETTABLE  R87 R87 K133 ; R87 := R87["NoraDogTag"]
772 [-]: CALL      R85 3 2      ; R85 := R85(R86,R87)
773 [-]: TEST      R85 0        ; if not R85 then PC := 820
774 [-]: JMP       820          ; PC := 820
775 [-]: TEST      R0 1         ; if R0 then PC := 826
776 [-]: JMP       826          ; PC := 826
777 [-]: GETGLOBAL R85 K15      ; R85 := 0x7b998233
778 [-]: GETGLOBAL R86 K134     ; R86 := 0x25d99d89
779 [-]: CALL      R85 2 2      ; R85 := R85(R86)
780 [-]: TEST      R85 1        ; if R85 then PC := 826
781 [-]: JMP       826          ; PC := 826
782 [-]: GETGLOBAL R85 K134     ; R85 := 0x25d99d89
783 [-]: SELF      R85 R85 K135 ; R86 := R85; R85 := R85[0x69727e0b]
784 [-]: CALL      R85 2 2      ; R85 := R85(R86)
785 [-]: GETTABLE  R85 R85 K136 ; R85 := R85["mSeasonInfo"]
786 [-]: GETTABLE  R85 R85 K137 ; R85 := R85["mAffiliationTag"]
787 [-]: SELF      R86 R85 K138 ; R87 := R85; R86 := R85[0x56c01834]
788 [-]: CALL      R86 2 2      ; R86 := R86(R87)
789 [-]: TEST      R86 0        ; if not R86 then PC := 826
790 [-]: JMP       826          ; PC := 826
791 [-]: GETGLOBAL R86 K16      ; R86 := 0xb009bbc6
792 [-]: GETGLOBAL R87 K139     ; R87 := 0xa94df70b
793 [-]: SELF      R87 R87 K140 ; R88 := R87; R87 := R87[0x07408254]
794 [-]: MOVE      R89 R85      ; R89 := R85
795 [-]: CALL      R87 3 0      ; R87,... := R87(R88,R89)
796 [-]: CALL      R86 0 2      ; R86 := R86(R87,...)
797 [-]: GETUPVAL  R87 U8       ; R87 := U8
798 [-]: GETTABLE  R87 R87 K144 ; R87 := R87[0x338a8686]
799 [-]: MOVE      R88 R86      ; R88 := R86
800 [-]: CALL      R87 2 4      ; R87,R88,R89 := R87(R88)
801 [-]: SETTABLE  R79 K143 R89 ; R79["MaxStanding"] := R89
802 [-]: SETTABLE  R79 K142 R88 ; R79["Standing"] := R88
803 [-]: SETTABLE  R79 K141 R87 ; R79["Level"] := R87
804 [-]: GETTABLE  R87 R79 K33  ; R87 := R79["Count"]
805 [-]: SETTABLE  R79 K145 R87 ; R79["NewStanding"] := R87
806 [-]: SETTABLE  R79 K146 K11 ; R79["Syndicate"] := true
807 [-]: GETUPVAL  R87 U17      ; R87 := U17
808 [-]: GETTABLE  R87 R87 K147 ; R87 := R87[0x3972b419]
809 [-]: GETTABLE  R88 R79 K7   ; R88 := R79["Icon"]
810 [-]: CALL      R87 2 2      ; R87 := R87(R88)
811 [-]: TEST      R87 0        ; if not R87 then PC := 814
812 [-]: JMP       814          ; PC := 814
813 [-]: SETTABLE  R79 K148 K149; R79["IconColor"] := 9.000000
814 [-]: GETGLOBAL R87 K150     ; R87 := mAffinityGrid
815 [-]: SELF      R87 R87 K151 ; R88 := R87; R87 := R87[0xbad4316f]
816 [-]: MOVE      R89 R79      ; R89 := R79
817 [-]: LOADKB    R90 1 0      ; R90 := true
818 [-]: CALL      R87 4 1      ; R87(R88,R89,R90)
819 [-]: JMP       826          ; PC := 826
820 [-]: SELF      R87 R34 K153 ; R88 := R34; R87 := R34[0xb24acced]
821 [-]: CALL      R87 2 2      ; R87 := R87(R88)
822 [-]: SETTABLE  R79 K152 R87 ; R79["mRarity"] := R87
823 [-]: GETUPVAL  R87 U2       ; R87 := U2
824 [-]: MOVE      R88 R79      ; R88 := R79
825 [-]: CALL      R87 2 1      ; R87(R88)
826 [-]: TFORLOOP  R73 2        ; R76,R77 :=  R73(R74,R75); if R76 ~= nil then begin PC = 566; R75 := R76 end
827 [-]: JMP       566          ; PC := 566
828 [-]: CONST     R87 1        ; R87 := 1.000000
829 [-]: GETGLOBAL R88 K154     ; R88 := mSortRewardItems
830 [-]: LEN       R88 R88      ; R88 := # R88
831 [-]: CONST     R89 1        ; R89 := 1.000000
832 [-]: FORPREP   R87 837      ; R87 -= R89; PC := 837
833 [-]: GETUPVAL  R91 U2       ; R91 := U2
834 [-]: GETGLOBAL R92 K154     ; R92 := mSortRewardItems
835 [-]: GETTABLE  R92 R92 R90  ; R92 := R92[R90]
836 [-]: CALL      R91 2 1      ; R91(R92)
837 [-]: FORLOOP   R87 833      ; R87 += R89; if R87 <= R88 then begin PC := 833; R90 := R87 end
838 [-]: GETGLOBAL R91 K52      ; R91 := 0xc8802016
839 [-]: GETUPVAL  R92 U18      ; R92 := U18
840 [-]: CALL      R91 2 4      ; R91,R92,R93 := R91(R92)
841 [-]: JMP       889          ; PC := 889
842 [-]: GETTABLE  R34 R95 K94  ; R34 := R95["mItemType"]
843 [-]: GETGLOBAL R96 K15      ; R96 := 0x7b998233
844 [-]: MOVE      R97 R34      ; R97 := R34
845 [-]: CALL      R96 2 2      ; R96 := R96(R97)
846 [-]: TEST      R96 1        ; if R96 then PC := 889
847 [-]: JMP       889          ; PC := 889
848 [-]: SELF      R96 R34 K74  ; R97 := R34; R96 := R34[0xf2deaf69]
849 [-]: GETGLOBAL R98 K108     ; R98 := gLotusArtifactUpgradeType
850 [-]: CALL      R96 3 2      ; R96 := R96(R97,R98)
851 [-]: TEST      R96 0        ; if not R96 then PC := 858
852 [-]: JMP       858          ; PC := 858
853 [-]: GETUPVAL  R96 U6       ; R96 := U6
854 [-]: MOVE      R97 R34      ; R97 := R34
855 [-]: CALL      R96 2 2      ; R96 := R96(R97)
856 [-]: TEST      R96 1        ; if R96 then PC := 889
857 [-]: JMP       889          ; PC := 889
858 [-]: GETUPVAL  R96 U3       ; R96 := U3
859 [-]: GETTABLE  R96 R96 K23  ; R96 := R96[0x4eec6d11]
860 [-]: GETGLOBAL R97 K4       ; R97 := 0xae91e43b
861 [-]: GETGLOBAL R98 K16      ; R98 := 0xb009bbc6
862 [-]: MOVE      R99 R34      ; R99 := R34
863 [-]: CALL      R98 2 2      ; R98 := R98(R99)
864 [-]: NEWTABLE  R99 0 2      ; R99 := {}
865 [-]: SETTABLE  R99 K76 R95  ; R99["ItemInfo"] := R95
866 [-]: SETTABLE  R99 K19 K11  ; R99["GetVisibilityMaterial"] := true
867 [-]: LOADKB    R100 1 0     ; R100 := true
868 [-]: CALL      R96 5 2      ; R96 := R96(R97,R98,R99,R100)
869 [-]: SELF      R97 R34 K74  ; R98 := R34; R97 := R34[0xf2deaf69]
870 [-]: GETUPVAL  R99 U11      ; R99 := U11
871 [-]: GETTABLE  R99 R99 K91  ; R99 := R99["Enhancement"]
872 [-]: CALL      R97 3 2      ; R97 := R97(R98,R99)
873 [-]: TEST      R97 0        ; if not R97 then PC := 886
874 [-]: JMP       886          ; PC := 886
875 [-]: GETGLOBAL R97 K92      ; R97 := 0x6c97a788
876 [-]: GETTABLE  R97 R97 K93  ; R97 := R97[0x1aba4d9e]
877 [-]: CALL      R97 1 2      ; R97 := R97()
878 [-]: SETTABLE  R97 K94 R34  ; R97["mItemType"] := R34
879 [-]: GETTABLE  R98 R97 K96  ; R98 := R97["mInstance"]
880 [-]: SELF      R98 R98 K97  ; R99 := R98; R98 := R98[0x91fb01d5]
881 [-]: LOADK     R100 K67     ; R100 := ""
882 [-]: CALL      R98 3 2      ; R98 := R98(R99,R100)
883 [-]: SETTABLE  R96 K95 R98  ; R96["ArcaneMaxRank"] := R98
884 [-]: SETTABLE  R96 K98 K26  ; R96["ArcaneRank"] := 0.000000
885 [-]: SETTABLE  R96 K155 R97 ; R96["Arcane"] := R97
886 [-]: GETUPVAL  R98 U2       ; R98 := U2
887 [-]: MOVE      R99 R96      ; R99 := R96
888 [-]: CALL      R98 2 1      ; R98(R99)
889 [-]: TFORLOOP  R91 2        ; R94,R95 :=  R91(R92,R93); if R94 ~= nil then begin PC = 842; R93 := R94 end
890 [-]: JMP       842          ; PC := 842
891 [-]: CONST     R98 0        ; R98 := 0.000000
892 [-]: GETGLOBAL R99 K156     ; R99 := 0xcfc01047
893 [-]: GETGLOBAL R100 K2      ; R100 := mRewards
894 [-]: CALL      R99 2 4      ; R99,R100,R101 := R99(R100)
895 [-]: JMP       981          ; PC := 981
896 [-]: SETTABLE  R103 K157 R98; R103["Id"] := R98
897 [-]: GETTABLE  R34 R103 K100; R34 := R103["Type"]
898 [-]: GETTABLE  R104 R103 K27; R104 := R103["Credits"]
899 [-]: EQ        1 R104 K13   ; if R104 == nil then PC := 903
900 [-]: JMP       903          ; PC := 903
901 [-]: SETTABLE  R103 K90 K158; R103["SortPriority"] := 24.000000
902 [-]: JMP       952          ; PC := 952
903 [-]: GETGLOBAL R104 K15     ; R104 := 0x7b998233
904 [-]: MOVE      R105 R34     ; R105 := R34
905 [-]: CALL      R104 2 2     ; R104 := R104(R105)
906 [-]: TEST      R104 1       ; if R104 then PC := 952
907 [-]: JMP       952          ; PC := 952
908 [-]: GETTABLE  R104 R103 K90; R104 := R103["SortPriority"]
909 [-]: TEST      R104 1       ; if R104 then PC := 914
910 [-]: JMP       914          ; PC := 914
911 [-]: GETUPVAL  R104 U19     ; R104 := U19
912 [-]: MOVE      R105 R34     ; R105 := R34
913 [-]: CALL      R104 2 2     ; R104 := R104(R105)
914 [-]: SETTABLE  R103 K90 R104; R103["SortPriority"] := R104
915 [-]: SELF      R104 R34 K74 ; R105 := R34; R104 := R34[0xf2deaf69]
916 [-]: GETUPVAL  R106 U11     ; R106 := U11
917 [-]: GETTABLE  R106 R106 K159; R106 := R106["ZarimanDogTag"]
918 [-]: CALL      R104 3 2     ; R104 := R104(R105,R106)
919 [-]: TEST      R104 1       ; if R104 then PC := 927
920 [-]: JMP       927          ; PC := 927
921 [-]: SELF      R104 R34 K74 ; R105 := R34; R104 := R34[0xf2deaf69]
922 [-]: GETUPVAL  R106 U11     ; R106 := U11
923 [-]: GETTABLE  R106 R106 K160; R106 := R106["ZarimanResourceItem"]
924 [-]: CALL      R104 3 2     ; R104 := R104(R105,R106)
925 [-]: TEST      R104 0       ; if not R104 then PC := 940
926 [-]: JMP       940          ; PC := 940
927 [-]: GETGLOBAL R104 K161    ; R104 := 0x5bced4c4
928 [-]: GETTABLE  R104 R104 K162; R104 := R104[0x55f27c30]
929 [-]: GETTABLE  R105 R103 K90; R105 := R103["SortPriority"]
930 [-]: CALL      R104 2 2     ; R104 := R104(R105)
931 [-]: ADD       R104 R104 K163; R104 := R104 + 0.900000
932 [-]: GETTABLE  R105 R103 K152; R105 := R103["mRarity"]
933 [-]: TEST      R105 1       ; if R105 then PC := 936
934 [-]: JMP       936          ; PC := 936
935 [-]: CONST     R105 0       ; R105 := 0.000000
936 [-]: MUL       R105 R105 K164; R105 := R105 * 0.020000
937 [-]: ADD       R104 R104 R105; R104 := R104 + R105
938 [-]: SETTABLE  R103 K90 R104; R103["SortPriority"] := R104
939 [-]: JMP       948          ; PC := 948
940 [-]: GETTABLE  R104 R103 K90; R104 := R103["SortPriority"]
941 [-]: GETTABLE  R105 R103 K152; R105 := R103["mRarity"]
942 [-]: TEST      R105 1       ; if R105 then PC := 945
943 [-]: JMP       945          ; PC := 945
944 [-]: CONST     R105 0       ; R105 := 0.000000
945 [-]: MUL       R105 R105 K165; R105 := R105 * 0.200000
946 [-]: ADD       R104 R104 R105; R104 := R104 + R105
947 [-]: SETTABLE  R103 K90 R104; R103["SortPriority"] := R104
948 [-]: GETUPVAL  R104 U20     ; R104 := U20
949 [-]: MOVE      R105 R34     ; R105 := R34
950 [-]: CALL      R104 2 2     ; R104 := R104(R105)
951 [-]: SETTABLE  R103 K166 R104; R103["Categories"] := R104
952 [-]: GETTABLE  R104 R103 K166; R104 := R103["Categories"]
953 [-]: EQ        0 R104 K13   ; if R104 ~= nil then PC := 960
954 [-]: JMP       960          ; PC := 960
955 [-]: NEWTABLE  R104 1 0     ; R104 := {}
956 [-]: GETUPVAL  R105 U21     ; R105 := U21
957 [-]: GETTABLE  R105 R105 K167; R105 := R105["MISC"]
958 [-]: SETLIST   R104 1 1     ; R104[(1-1)*FPF+i] := R(104+i), 1 <= i <= 1
959 [-]: SETTABLE  R103 K166 R104; R103["Categories"] := R104
960 [-]: SETTABLE  R103 K168 K11; R103["CustomEntry"] := true
961 [-]: GETTABLE  R104 R103 K3 ; R104 := R103["Name"]
962 [-]: SETTABLE  R103 K169 R104; R103["SearchCache"] := R104
963 [-]: GETGLOBAL R104 K15     ; R104 := 0x7b998233
964 [-]: GETTABLE  R105 R103 K50; R105 := R103["StoreItem"]
965 [-]: CALL      R104 2 2     ; R104 := R104(R105)
966 [-]: TEST      R104 1       ; if R104 then PC := 975
967 [-]: JMP       975          ; PC := 975
968 [-]: GETUPVAL  R104 U3      ; R104 := U3
969 [-]: GETTABLE  R104 R104 K170; R104 := R104[0x1ac299fb]
970 [-]: GETGLOBAL R105 K4      ; R105 := 0xae91e43b
971 [-]: GETTABLE  R106 R103 K50; R106 := R103["StoreItem"]
972 [-]: GETTABLE  R107 R103 K3 ; R107 := R103["Name"]
973 [-]: CALL      R104 4 2     ; R104 := R104(R105,R106,R107)
974 [-]: SETTABLE  R103 K169 R104; R103["SearchCache"] := R104
975 [-]: GETGLOBAL R104 K0      ; R104 := mRewardGrid
976 [-]: SELF      R104 R104 K151; R105 := R104; R104 := R104[0xbad4316f]
977 [-]: MOVE      R106 R103    ; R106 := R103
978 [-]: LOADKB    R107 1 0     ; R107 := true
979 [-]: CALL      R104 4 1     ; R104(R105,R106,R107)
980 [-]: ADD       R98 R98 K34  ; R98 := R98 + 1.000000
981 [-]: TFORLOOP  R99 2        ; R102,R103 :=  R99(R100,R101); if R102 ~= nil then begin PC = 896; R101 := R102 end
982 [-]: JMP       896          ; PC := 896
983 [-]: GETUPVAL  R104 U22     ; R104 := U22
984 [-]: CALL      R104 1 1     ; R104()
985 [-]: GETGLOBAL R104 K0      ; R104 := mRewardGrid
986 [-]: SELF      R104 R104 K171; R105 := R104; R104 := R104[0x71e9ac81]
987 [-]: LOADNIL   R106 R106    ; R106 := nil
988 [-]: LOADKB    R107 1 0     ; R107 := true
989 [-]: LOADKB    R108 1 0     ; R108 := true
990 [-]: CALL      R104 5 1     ; R104(R105,R106,R107,R108)
991 [-]: GETGLOBAL R104 K0      ; R104 := mRewardGrid
992 [-]: SELF      R104 R104 K172; R105 := R104; R104 := R104[0x5fbddc1a]
993 [-]: CALL      R104 2 2     ; R104 := R104(R105)
994 [-]: LT        0 K26 R104   ; if 0.000000 >= R104 then PC := 1000
995 [-]: JMP       1000         ; PC := 1000
996 [-]: GETGLOBAL R105 K0      ; R105 := mRewardGrid
997 [-]: SELF      R105 R105 K173; R106 := R105; R105 := R105[0x070daa5a]
998 [-]: CONST     R107 1       ; R107 := 1.000000
999 [-]: CALL      R105 3 1     ; R105(R106,R107)
1000 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5765
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x9fad7d24]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: SETUPVAL  R0 U0        ; U82 := R0
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x8dc40238]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: SETUPVAL  R0 U0        ; U82 := R0
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: CALL      R0 2 1       ; R0(R1)
 24 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 5776
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K3     ; R1 := R0[0x9383bc56]
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K5        ; R3 := "ExpandableArea.PlayerInfo.PlayerStats.Stat"
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K6     ; R4 := R4[0x06d055f9]
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: CALL      R5 1 2       ; R5 := R5()
 11 [-]: CONST     R6 5         ; R6 := 5.000000
 12 [-]: CONST     R7 7         ; R7 := 7.000000
 13 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 14 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 15 [-]: SETGLOBAL R1 K2        ; mStatsGrid := R1
 16 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 17 [-]: SETTABLE  R1 K7 K8     ; R1["mHideExtraClips"] := true
 18 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 19 [-]: SETTABLE  R1 K9 K10    ; R1["mForcedVerticalSeparation"] := 49.000000
 20 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 21 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x3bc79f4f]
 22 [-]: LOADK     R3 K12       ; R3 := "ExpandableArea.PlayerInfo.PlayerStats.ScrollBar"
 23 [-]: CONST     R4 3         ; R4 := 3.000000
 24 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 25 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 26 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x7220acb6]
 27 [-]: CALL      R1 2 1       ; R1(R2)
 28 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 29 [-]: CLOSURE   R2 0         ; R2 := closure(Function #131.1)
 30 [-]: SETTABLE  R1 K14 R2    ; R1["mClipCreatedCallback"] := R2
 31 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 32 [-]: GETUPVAL  R2 U2        ; R2 := U2
 33 [-]: SETTABLE  R1 K15 R2    ; R1["mElementDrawCallback"] := R2
 34 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 35 [-]: CLOSURE   R2 1         ; R2 := closure(Function #131.2)
 36 [-]: SETTABLE  R1 K16 R2    ; R1["mOnFocusedCallback"] := R2
 37 [-]: GETGLOBAL R1 K2        ; R1 := mStatsGrid
 38 [-]: CLOSURE   R2 2         ; R2 := closure(Function #131.3)
 39 [-]: SETTABLE  R1 K17 R2    ; R1["mOnUnfocusedCallback"] := R2
 40 [-]: GETUPVAL  R1 U3        ; R1 := U3
 41 [-]: CALL      R1 1 1       ; R1()
 42 [-]: RETURN    R0 1         ; return 


; Function #131.1:
;
; Name:            
; Defined at line: 5785
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := mStatsGrid
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mElements"]
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[1.000000]
  4 [-]: LOADNIL   R2 R2        ; R2 := nil
  5 [-]: CONST     R3 1         ; R3 := 1.000000
  6 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["Value"]
  9 [-]: LEN       R3 R4        ; R3 := # R4
 10 [-]: CONST     R4 1         ; R4 := 1.000000
 11 [-]: GETGLOBAL R5 K5        ; R5 := 0x5bced4c4
 12 [-]: GETTABLE  R5 R5 K6     ; R5 := R5[0xac1b386a]
 13 [-]: GETGLOBAL R6 K7        ; R6 := mMaxPlayers
 14 [-]: MOVE      R7 R3        ; R7 := R3
 15 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 16 [-]: CONST     R6 1         ; R6 := 1.000000
 17 [-]: FORPREP   R4 45        ; R4 -= R6; PC := 45
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: LOADK     R9 K8        ; R9 := ".Value"
 20 [-]: MOVE      R10 R7       ; R10 := R7
 21 [-]: CONCAT    R2 R8 R10    ; R2 := R8 .. R9 .. R10
 22 [-]: GETGLOBAL R8 K9        ; R8 := 0xae91e43b
 23 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xa7ec3e8a]
 24 [-]: MOVE      R10 R2       ; R10 := R2
 25 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 26 [-]: TEST      R8 1         ; if R8 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETGLOBAL R8 K11       ; R8 := 0x38f10e85
 29 [-]: GETGLOBAL R9 K9        ; R9 := 0xae91e43b
 30 [-]: MOVE      R10 R0       ; R10 := R0
 31 [-]: LOADK     R11 K12      ; R11 := ".Value1.duplicateMovieClip"
 32 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 33 [-]: LOADK     R11 K4       ; R11 := "Value"
 34 [-]: MOVE      R12 R7       ; R12 := R7
 35 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 36 [-]: MOVE      R12 R7       ; R12 := R7
 37 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 38 [-]: GETGLOBAL R8 K9        ; R8 := 0xae91e43b
 39 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0xd5181643]
 40 [-]: MOVE      R10 R2       ; R10 := R2
 41 [-]: LOADK     R11 K14      ; R11 := ".Label"
 42 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 43 [-]: GETGLOBAL R11 K15      ; R11 := 0x1606c7e7
 44 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 45 [-]: FORLOOP   R4 18        ; R4 += R6; if R4 <= R5 then begin PC := 18; R7 := R4 end
 46 [-]: GETGLOBAL R8 K9        ; R8 := 0xae91e43b
 47 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0xd5181643]
 48 [-]: MOVE      R10 R0       ; R10 := R0
 49 [-]: LOADK     R11 K14      ; R11 := ".Label"
 50 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 51 [-]: GETGLOBAL R11 K15      ; R11 := 0x1606c7e7
 52 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 53 [-]: GETGLOBAL R8 K9        ; R8 := 0xae91e43b
 54 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0xd5181643]
 55 [-]: MOVE      R10 R0       ; R10 := R0
 56 [-]: LOADK     R11 K16      ; R11 := ".Backer"
 57 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 58 [-]: GETGLOBAL R11 K17      ; R11 := 0xc13a88d8
 59 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 60 [-]: RETURN    R0 1         ; return 


; Function #131.2:
;
; Name:            
; Defined at line: 5805
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #131.3:
;
; Name:            
; Defined at line: 5808
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 5816
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPanelStartY
  2 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  3 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x91a24e4b]
  4 [-]: LOADK     R3 K4        ; R3 := "ExpandableArea.Progression.Affinity"
  5 [-]: CONST     R4 1         ; R4 := 1.000000
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: SETTABLE  R0 K1 R1     ; R0["Affinity"] := R1
  8 [-]: GETGLOBAL R0 K0        ; R0 := mPanelStartY
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x91a24e4b]
 11 [-]: LOADK     R3 K6        ; R3 := "ExpandableArea.Progression.Rewards"
 12 [-]: CONST     R4 1         ; R4 := 1.000000
 13 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 14 [-]: SETTABLE  R0 K5 R1     ; R0["Rewards"] := R1
 15 [-]: GETGLOBAL R0 K0        ; R0 := mPanelStartY
 16 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 17 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x91a24e4b]
 18 [-]: LOADK     R3 K8        ; R3 := "TopAnchor.Header"
 19 [-]: CONST     R4 1         ; R4 := 1.000000
 20 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 21 [-]: SETTABLE  R0 K7 R1     ; R0["Title"] := R1
 22 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 5823
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x0032441c
  2 [-]: SETTABLE  R2 K1 K2     ; R2["EndOfMatch_didActuallySetupStuff"] := true
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x0032441c
  4 [-]: TESTSET   R3 R0 0      ; if not R0 then PC := 7 else R3 := R0
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: SETTABLE  R2 K3 R3     ; R2["EndOfMatch_abortingAndWasDoingPvpChallenge"] := R3
  8 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 5828
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "ReturnedToShip"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: TEST      R0 0         ; if not R0 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x32302b4a]
  9 [-]: CALL      R0 2 1       ; R0(R1)
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
 12 [-]: LOADK     R1 K1        ; R1 := "ReturnedToShip"
 13 [-]: CALL      R0 2 1       ; R0(R1)
 14 [-]: LOADKB    R0 0 0       ; R0 := false
 15 [-]: SETGLOBAL R0 K4        ; mShouldClose := R0
 16 [-]: LOADKB    R0 0 0       ; R0 := false
 17 [-]: SETGLOBAL R0 K5        ; mWaitingForDbUpdate := R0
 18 [-]: LOADKB    R0 0 0       ; R0 := false
 19 [-]: SETGLOBAL R0 K6        ; mInputBlocked := R0
 20 [-]: GETGLOBAL R0 K7        ; R0 := mWaitingForMissionComplete
 21 [-]: TEST      R0 1         ; if R0 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 24 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xbed40e9c]
 25 [-]: LOADKB    R2 0 0       ; R2 := false
 26 [-]: CALL      R0 3 1       ; R0(R1,R2)
 27 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 28 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0x5f56eeab]
 29 [-]: LOADK     R2 K10       ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
 30 [-]: CONST     R3 29        ; R3 := 29.000000
 31 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 32 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0x42b04007]
 33 [-]: LOADK     R6 K12       ; R6 := "<PREVIEW>"
 34 [-]: LOADKB    R7 1 0       ; R7 := true
 35 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 36 [-]: CALL      R0 0 1       ; R0(R1,...)
 37 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 38 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 39 [-]: LOADK     R2 K10       ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
 40 [-]: CONST     R3 10        ; R3 := 10.000000
 41 [-]: CONST     R4 60        ; R4 := 60.000000
 42 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 43 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 44 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 45 [-]: LOADK     R2 K14       ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconBacker"
 46 [-]: CONST     R3 10        ; R3 := 10.000000
 47 [-]: GETGLOBAL R4 K15       ; R4 := BACKER_ALPHA
 48 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 49 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 50 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0[0xaade900e]
 51 [-]: LOADK     R2 K17       ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
 52 [-]: CONST     R3 11        ; R3 := 11.000000
 53 [-]: LOADKB    R4 1 0       ; R4 := true
 54 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 55 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 56 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0[0x78f32995]
 57 [-]: LOADKB    R2 0 0       ; R2 := false
 58 [-]: CALL      R0 3 1       ; R0(R1,R2)
 59 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 60 [-]: SELF      R0 R0 K19    ; R1 := R0; R0 := R0[0x85b5d288]
 61 [-]: GETGLOBAL R2 K20       ; R2 := _T
 62 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["LoadingMissionKey"]
 63 [-]: NOT       R2 R2        ; R2 :=  R2
 64 [-]: CALL      R0 3 1       ; R0(R1,R2)
 65 [-]: GETGLOBAL R0 K22       ; R0 := 0x7b998233
 66 [-]: GETGLOBAL R1 K23       ; R1 := mPvpMovie
 67 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 68 [-]: TEST      R0 1         ; if R0 then PC := 78
 69 [-]: JMP       78           ; PC := 78
 70 [-]: GETGLOBAL R0 K23       ; R0 := mPvpMovie
 71 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0[0x78f32995]
 72 [-]: LOADKB    R2 0 0       ; R2 := false
 73 [-]: CALL      R0 3 1       ; R0(R1,R2)
 74 [-]: GETGLOBAL R0 K23       ; R0 := mPvpMovie
 75 [-]: SELF      R0 R0 K19    ; R1 := R0; R0 := R0[0x85b5d288]
 76 [-]: LOADKB    R2 1 0       ; R2 := true
 77 [-]: CALL      R0 3 1       ; R0(R1,R2)
 78 [-]: CONST     R0 -1        ; R0 := -1.000000
 79 [-]: SETGLOBAL R0 K24       ; mReturningToLobbyTime := R0
 80 [-]: LOADKB    R0 0 0       ; R0 := false
 81 [-]: SETGLOBAL R0 K25       ; mWaitingForReturnToShip := R0
 82 [-]: GETUPVAL  R0 U1        ; R0 := U1
 83 [-]: LOADKB    R1 1 0       ; R1 := true
 84 [-]: CALL      R0 2 1       ; R0(R1)
 85 [-]: GETGLOBAL R0 K26       ; R0 := mCurrentScreenType
 86 [-]: GETGLOBAL R1 K27       ; R1 := ScreenType
 87 [-]: GETTABLE  R1 R1 K28    ; R1 := R1["SCOREBOARD"]
 88 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 91
 91 [-]: LOADKB    R0 1 0       ; R0 := true
 92 [-]: TEST      R0 1         ; if R0 then PC := 98
 93 [-]: JMP       98           ; PC := 98
 94 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 95 [-]: SELF      R1 R1 K29    ; R2 := R1; R1 := R1[0xbc838db9]
 96 [-]: LOADKB    R3 0 0       ; R3 := false
 97 [-]: CALL      R1 3 1       ; R1(R2,R3)
 98 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 5868
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ACTUAL_EOM"]
  4 [-]: SETTABLE  R0 K1 R1     ; R0["eomScreenMode"] := R1
  5 [-]: LOADKB    R0 1 0       ; R0 := true
  6 [-]: SETUPVAL  R0 U1        ; U82 := R1
  7 [-]: LOADKB    R0 0 0       ; R0 := false
  8 [-]: SETUPVAL  R0 U2        ; U82 := R2
  9 [-]: GETGLOBAL R0 K3        ; R0 := mAutoCloseDelay
 10 [-]: LT        0 K4 R0      ; if 0.000000 >= R0 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: CONST     R0 -1        ; R0 := -1.000000
 13 [-]: SETGLOBAL R0 K3        ; mAutoCloseDelay := R0
 14 [-]: GETUPVAL  R0 U3        ; R0 := U3
 15 [-]: GETUPVAL  R1 U4        ; R1 := U4
 16 [-]: CALL      R0 2 1       ; R0(R1)
 17 [-]: GETUPVAL  R0 U5        ; R0 := U5
 18 [-]: CALL      R0 1 1       ; R0()
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0xae91e43b
 20 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xbc838db9]
 21 [-]: LOADKB    R2 1 0       ; R2 := true
 22 [-]: CALL      R0 3 1       ; R0(R1,R2)
 23 [-]: GETUPVAL  R0 U6        ; R0 := U6
 24 [-]: CALL      R0 1 1       ; R0()
 25 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 5881
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.AnchorMgr"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K3     ; R1 := R0[0xae6791ba]
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETGLOBAL R1 K2        ; mAnchorMgr := R1
  8 [-]: GETGLOBAL R1 K2        ; R1 := mAnchorMgr
  9 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x20ff29f7]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 11 [-]: LOADK     R4 K6        ; R4 := "TopAnchor"
 12 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 13 [-]: GETGLOBAL R6 K2        ; R6 := mAnchorMgr
 14 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_CENTRE"]
 15 [-]: GETGLOBAL R7 K2        ; R7 := mAnchorMgr
 16 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["ANCHOR_V_TOP"]
 17 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: GETGLOBAL R1 K2        ; R1 := mAnchorMgr
 20 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x20ff29f7]
 21 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 22 [-]: LOADK     R4 K9        ; R4 := "BottomAnchor"
 23 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 24 [-]: GETGLOBAL R6 K2        ; R6 := mAnchorMgr
 25 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_CENTRE"]
 26 [-]: GETGLOBAL R7 K2        ; R7 := mAnchorMgr
 27 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["ANCHOR_V_BOTTOM"]
 28 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 29 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: CALL      R1 1 1       ; R1()
 32 [-]: GETGLOBAL R1 K0        ; R1 := 0x2d0fad09
 33 [-]: LOADK     R2 K11       ; R2 := "Lotus.Interface.Libs.TimerMgr"
 34 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 35 [-]: GETTABLE  R2 R1 K13    ; R2 := R1[0xde474187]
 36 [-]: CALL      R2 1 2       ; R2 := R2()
 37 [-]: SETGLOBAL R2 K12       ; mTimerMgr := R2
 38 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 5893
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mPvpMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R1 K1        ; R1 := mPvpMovie
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xe4162eed]
  8 [-]: LOADK     R3 K3        ; R3 := "EaseInComplete"
  9 [-]: GETGLOBAL R4 K4        ; R4 := 0x64fb1586
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 12 [-]: CALL      R1 0 1       ; R1(R2,...)
 13 [-]: LOADKB    R1 0 0       ; R1 := false
 14 [-]: SETGLOBAL R1 K5        ; mInputBlocked := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 5901
; #Upvalues:       26
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: TEST      R0 0         ; if not R0 then PC := 333
  2 [-]: JMP       333          ; PC := 333
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x0032441c
  4 [-]: SETTABLE  R2 K1 K2     ; R2["LastMissionKuva"] := nil
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
  6 [-]: GETGLOBAL R3 K4        ; R3 := 0xbe190284
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 26
  9 [-]: JMP       26           ; PC := 26
 10 [-]: GETGLOBAL R2 K5        ; R2 := 0x89326c93
 11 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x18d05d30]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 26
 14 [-]: JMP       26           ; PC := 26
 15 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
 16 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x0eb34c69]
 17 [-]: GETGLOBAL R4 K8        ; R4 := 0x0469f296
 18 [-]: LOADK     R5 K9        ; R5 := "RJMissionAborted"
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: CONST     R5 0         ; R5 := 0.000000
 21 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 22 [-]: EQ        0 R2 K10     ; if R2 ~= 1.000000 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: GETGLOBAL R2 K11       ; R2 := _T
 25 [-]: SETTABLE  R2 K12 K13   ; R2["AbortedRailjackMission"] := true
 26 [-]: LOADKB    R2 0 0       ; R2 := false
 27 [-]: GETGLOBAL R3 K11       ; R3 := _T
 28 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["AbortedRailjackMission"]
 29 [-]: TEST      R3 0         ; if not R3 then PC := 55
 30 [-]: JMP       55           ; PC := 55
 31 [-]: GETGLOBAL R3 K4        ; R3 := 0xbe190284
 32 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x3790d299]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 1         ; if R3 then PC := 53
 35 [-]: JMP       53           ; PC := 53
 36 [-]: GETGLOBAL R3 K4        ; R3 := 0xbe190284
 37 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x0eb34c69]
 38 [-]: GETGLOBAL R5 K8        ; R5 := 0x0469f296
 39 [-]: LOADK     R6 K15       ; R6 := "RJMissionComplete"
 40 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 41 [-]: CONST     R6 0         ; R6 := 0.000000
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: LT        0 R3 K10     ; if R3 >= 1.000000 then PC := 53
 44 [-]: JMP       53           ; PC := 53
 45 [-]: GETGLOBAL R3 K4        ; R3 := 0xbe190284
 46 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0xef893aec]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["location"]
 49 [-]: GETUPVAL  R4 U0        ; R4 := U0
 50 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["FREE_FLIGHT_NODE"]
 51 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 54
 54 [-]: LOADKB    R2 1 0       ; R2 := true
 55 [-]: LOADKB    R3 0 0       ; R3 := false
 56 [-]: GETGLOBAL R4 K3        ; R4 := 0x7b998233
 57 [-]: GETGLOBAL R5 K4        ; R5 := 0xbe190284
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: TEST      R4 1         ; if R4 then PC := 91
 60 [-]: JMP       91           ; PC := 91
 61 [-]: TEST      R1 0         ; if not R1 then PC := 91
 62 [-]: JMP       91           ; PC := 91
 63 [-]: GETGLOBAL R4 K4        ; R4 := 0xbe190284
 64 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xef893aec]
 65 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 66 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["levelOverride"]
 67 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 68 [-]: MOVE      R6 R4        ; R6 := R4
 69 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 70 [-]: TEST      R5 1         ; if R5 then PC := 91
 71 [-]: JMP       91           ; PC := 91
 72 [-]: GETGLOBAL R5 K20       ; R5 := 0x7f5022cf
 73 [-]: GETTABLE  R5 R5 K21    ; R5 := R5[0xa5c556b9]
 74 [-]: GETGLOBAL R6 K22       ; R6 := 0x64fb1586
 75 [-]: SELF      R7 R4 K23    ; R8 := R4; R7 := R4[0xed4e0128]
 76 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 77 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 78 [-]: LOADK     R7 K24       ; R7 := "Zariman"
 79 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 80 [-]: EQ        1 R5 K2      ; if R5 == nil then PC := 91
 81 [-]: JMP       91           ; PC := 91
 82 [-]: GETGLOBAL R5 K4        ; R5 := 0xbe190284
 83 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x0eb34c69]
 84 [-]: GETUPVAL  R7 U0        ; R7 := U0
 85 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["NV_MISSION_SUCCESS"]
 86 [-]: CONST     R8 0         ; R8 := 0.000000
 87 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 88 [-]: EQ        0 R5 K26     ; if R5 ~= 0.000000 then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: LOADKB    R3 1 0       ; R3 := true
 91 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 92 [-]: GETGLOBAL R7 K4        ; R7 := 0xbe190284
 93 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 94 [-]: TEST      R6 1         ; if R6 then PC := 104
 95 [-]: JMP       104          ; PC := 104
 96 [-]: GETGLOBAL R6 K4        ; R6 := 0xbe190284
 97 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6[0x5d204145]
 98 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 99 [-]: TEST      R6 1         ; if R6 then PC := 104
100 [-]: JMP       104          ; PC := 104
101 [-]: TESTSET   R6 R2 1      ; if R2 then PC := 104 else R6 := R2
102 [-]: JMP       104          ; PC := 104
103 [-]: MOVE      R6 R3        ; R6 := R3
104 [-]: SETGLOBAL R6 K27       ; mMissionFailed := R6
105 [-]: GETGLOBAL R6 K27       ; R6 := mMissionFailed
106 [-]: TEST      R6 0         ; if not R6 then PC := 117
107 [-]: JMP       117          ; PC := 117
108 [-]: GETGLOBAL R6 K29       ; R6 := 0x3d106989
109 [-]: LOADK     R7 K30       ; R7 := "Mission Failed"
110 [-]: CALL      R6 2 1       ; R6(R7)
111 [-]: GETUPVAL  R6 U1        ; R6 := U1
112 [-]: TEST      R6 0         ; if not R6 then PC := 120
113 [-]: JMP       120          ; PC := 120
114 [-]: LOADKB    R6 0 0       ; R6 := false
115 [-]: SETUPVAL  R6 U1        ; U82 := R1
116 [-]: JMP       120          ; PC := 120
117 [-]: GETGLOBAL R6 K29       ; R6 := 0x3d106989
118 [-]: LOADK     R7 K31       ; R7 := "Mission Succeeded"
119 [-]: CALL      R6 2 1       ; R6(R7)
120 [-]: TEST      R1 0         ; if not R1 then PC := 226
121 [-]: JMP       226          ; PC := 226
122 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
123 [-]: GETGLOBAL R7 K4        ; R7 := 0xbe190284
124 [-]: CALL      R6 2 2       ; R6 := R6(R7)
125 [-]: TEST      R6 1         ; if R6 then PC := 226
126 [-]: JMP       226          ; PC := 226
127 [-]: GETGLOBAL R6 K4        ; R6 := 0xbe190284
128 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0x5c390f04]
129 [-]: CALL      R6 2 2       ; R6 := R6(R7)
130 [-]: EQ        1 R6 K34     ; if R6 == 23.000000 then PC := 226
131 [-]: JMP       226          ; PC := 226
132 [-]: GETGLOBAL R6 K27       ; R6 := mMissionFailed
133 [-]: TEST      R6 1         ; if R6 then PC := 191
134 [-]: JMP       191          ; PC := 191
135 [-]: GETUPVAL  R6 U2        ; R6 := U2
136 [-]: GETGLOBAL R7 K4        ; R7 := 0xbe190284
137 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0x0eb34c69]
138 [-]: GETUPVAL  R9 U0        ; R9 := U0
139 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["FACTION_HUNTER_SPAWNED"]
140 [-]: CONST     R10 999      ; R10 := 999.000000
141 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
142 [-]: SETTABLE  R6 K35 R7    ; R6["FactionHunterSpawned"] := R7
143 [-]: GETUPVAL  R6 U2        ; R6 := U2
144 [-]: GETTABLE  R6 R6 K35    ; R6 := R6["FactionHunterSpawned"]
145 [-]: EQ        0 R6 K26     ; if R6 ~= 0.000000 then PC := 155
146 [-]: JMP       155          ; PC := 155
147 [-]: GETUPVAL  R6 U2        ; R6 := U2
148 [-]: GETGLOBAL R7 K4        ; R7 := 0xbe190284
149 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0x0eb34c69]
150 [-]: GETUPVAL  R9 U0        ; R9 := U0
151 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["NUM_DEATH_SQUAD_VICTIMS"]
152 [-]: CONST     R10 0        ; R10 := 0.000000
153 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
154 [-]: SETTABLE  R6 K37 R7    ; R6["NumDeathSquadVictims"] := R7
155 [-]: GETUPVAL  R6 U2        ; R6 := U2
156 [-]: GETGLOBAL R7 K4        ; R7 := 0xbe190284
157 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0x0eb34c69]
158 [-]: GETGLOBAL R9 K8        ; R9 := 0x0469f296
159 [-]: LOADK     R10 K40      ; R10 := "ExterminateMid"
160 [-]: CALL      R9 2 2       ; R9 := R9(R10)
161 [-]: LOADK     R10 K41      ; R10 := 9999.000000
162 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
163 [-]: SETTABLE  R6 K39 R7    ; R6["ExterminateMidCout"] := R7
164 [-]: GETUPVAL  R6 U2        ; R6 := U2
165 [-]: GETGLOBAL R7 K4        ; R7 := 0xbe190284
166 [-]: SELF      R7 R7 K32    ; R8 := R7; R7 := R7[0x5c390f04]
167 [-]: CALL      R7 2 2       ; R7 := R7(R8)
168 [-]: SETTABLE  R6 K42 R7    ; R6["MissionType"] := R7
169 [-]: GETGLOBAL R6 K43       ; R6 := mTimerMgr
170 [-]: SELF      R6 R6 K44    ; R7 := R6; R6 := R6[0xbd2e96ea]
171 [-]: CONST     R8 2         ; R8 := 2.000000
172 [-]: GETUPVAL  R9 U3        ; R9 := U3
173 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
174 [-]: GETUPVAL  R6 U1        ; R6 := U1
175 [-]: TEST      R6 1         ; if R6 then PC := 195
176 [-]: JMP       195          ; PC := 195
177 [-]: GETUPVAL  R6 U4        ; R6 := U4
178 [-]: GETTABLE  R6 R6 K45    ; R6 := R6["isPvp"]
179 [-]: TEST      R6 1         ; if R6 then PC := 186
180 [-]: JMP       186          ; PC := 186
181 [-]: GETUPVAL  R6 U5        ; R6 := U5
182 [-]: GETTABLE  R6 R6 K46    ; R6 := R6[0x659d451f]
183 [-]: GETGLOBAL R7 K47       ; R7 := 0xb9ae96ba
184 [-]: CALL      R6 2 1       ; R6(R7)
185 [-]: JMP       195          ; PC := 195
186 [-]: GETUPVAL  R6 U5        ; R6 := U5
187 [-]: GETTABLE  R6 R6 K46    ; R6 := R6[0x659d451f]
188 [-]: GETGLOBAL R7 K48       ; R7 := 0x47615218
189 [-]: CALL      R6 2 1       ; R6(R7)
190 [-]: JMP       195          ; PC := 195
191 [-]: GETUPVAL  R6 U5        ; R6 := U5
192 [-]: GETTABLE  R6 R6 K46    ; R6 := R6[0x659d451f]
193 [-]: GETGLOBAL R7 K49       ; R7 := 0xb64f5c91
194 [-]: CALL      R6 2 1       ; R6(R7)
195 [-]: GETUPVAL  R6 U4        ; R6 := U4
196 [-]: GETTABLE  R6 R6 K45    ; R6 := R6["isPvp"]
197 [-]: TEST      R6 1         ; if R6 then PC := 226
198 [-]: JMP       226          ; PC := 226
199 [-]: GETGLOBAL R6 K27       ; R6 := mMissionFailed
200 [-]: TEST      R6 0         ; if not R6 then PC := 207
201 [-]: JMP       207          ; PC := 207
202 [-]: GETUPVAL  R6 U5        ; R6 := U5
203 [-]: GETTABLE  R6 R6 K46    ; R6 := R6[0x659d451f]
204 [-]: GETGLOBAL R7 K50       ; R7 := 0xf21adb2a
205 [-]: CALL      R6 2 1       ; R6(R7)
206 [-]: JMP       226          ; PC := 226
207 [-]: GETUPVAL  R6 U6        ; R6 := U6
208 [-]: CALL      R6 1 2       ; R6 := R6()
209 [-]: TEST      R6 0         ; if not R6 then PC := 219
210 [-]: JMP       219          ; PC := 219
211 [-]: GETGLOBAL R6 K4        ; R6 := 0xbe190284
212 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6[0x8e07e77f]
213 [-]: GETGLOBAL R8 K52       ; R8 := 0x861db57d
214 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8[0xed4e0128]
215 [-]: CALL      R8 2 2       ; R8 := R8(R9)
216 [-]: LOADK     R9 K53       ; R9 := "OnOnslaughtMusicReady"
217 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
218 [-]: JMP       226          ; PC := 226
219 [-]: GETUPVAL  R6 U1        ; R6 := U1
220 [-]: TEST      R6 1         ; if R6 then PC := 226
221 [-]: JMP       226          ; PC := 226
222 [-]: GETUPVAL  R6 U5        ; R6 := U5
223 [-]: GETTABLE  R6 R6 K46    ; R6 := R6[0x659d451f]
224 [-]: GETGLOBAL R7 K54       ; R7 := 0xa464f0c2
225 [-]: CALL      R6 2 1       ; R6(R7)
226 [-]: GETUPVAL  R6 U7        ; R6 := U7
227 [-]: LOADKB    R7 1 0       ; R7 := true
228 [-]: GETGLOBAL R8 K27       ; R8 := mMissionFailed
229 [-]: NOT       R8 R8        ; R8 :=  R8
230 [-]: MOVE      R9 R1        ; R9 := R1
231 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
232 [-]: GETUPVAL  R6 U8        ; R6 := U8
233 [-]: CALL      R6 1 2       ; R6 := R6()
234 [-]: TEST      R6 1         ; if R6 then PC := 238
235 [-]: JMP       238          ; PC := 238
236 [-]: GETUPVAL  R6 U9        ; R6 := U9
237 [-]: CALL      R6 1 2       ; R6 := R6()
238 [-]: TEST      R6 0         ; if not R6 then PC := 245
239 [-]: JMP       245          ; PC := 245
240 [-]: GETUPVAL  R7 U10       ; R7 := U10
241 [-]: CALL      R7 1 2       ; R7 := R7()
242 [-]: NOT       R7 R7        ; R7 :=  R7
243 [-]: JMP       246          ; PC := 246
244 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 245
245 [-]: LOADKB    R7 1 0       ; R7 := true
246 [-]: TEST      R7 0         ; if not R7 then PC := 299
247 [-]: JMP       299          ; PC := 299
248 [-]: GETUPVAL  R8 U11       ; R8 := U11
249 [-]: GETGLOBAL R9 K27       ; R9 := mMissionFailed
250 [-]: NOT       R9 R9        ; R9 :=  R9
251 [-]: CALL      R8 2 1       ; R8(R9)
252 [-]: GETUPVAL  R8 U12       ; R8 := U12
253 [-]: CALL      R8 1 1       ; R8()
254 [-]: GETGLOBAL R8 K55       ; R8 := mCurrentScreenType
255 [-]: GETGLOBAL R9 K56       ; R9 := ScreenType
256 [-]: GETTABLE  R9 R9 K57    ; R9 := R9["KAHL"]
257 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 292
258 [-]: JMP       292          ; PC := 292
259 [-]: GETUPVAL  R8 U13       ; R8 := U13
260 [-]: CALL      R8 1 2       ; R8 := R8()
261 [-]: SETGLOBAL R8 K58       ; mNumberOfLoadoutSlotsUsed := R8
262 [-]: GETUPVAL  R8 U14       ; R8 := U14
263 [-]: CALL      R8 1 1       ; R8()
264 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
265 [-]: CALL      R8 1 1       ; R8()
266 [-]: GETUPVAL  R8 U15       ; R8 := U15
267 [-]: GETGLOBAL R9 K27       ; R9 := mMissionFailed
268 [-]: CALL      R8 2 1       ; R8(R9)
269 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
270 [-]: CALL      R8 1 1       ; R8()
271 [-]: GETUPVAL  R8 U16       ; R8 := U16
272 [-]: GETGLOBAL R9 K27       ; R9 := mMissionFailed
273 [-]: CALL      R8 2 1       ; R8(R9)
274 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
275 [-]: CALL      R8 1 1       ; R8()
276 [-]: GETUPVAL  R8 U17       ; R8 := U17
277 [-]: CALL      R8 1 1       ; R8()
278 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
279 [-]: CALL      R8 1 1       ; R8()
280 [-]: GETUPVAL  R8 U18       ; R8 := U18
281 [-]: CALL      R8 1 1       ; R8()
282 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
283 [-]: CALL      R8 1 1       ; R8()
284 [-]: GETUPVAL  R8 U19       ; R8 := U19
285 [-]: CALL      R8 1 1       ; R8()
286 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
287 [-]: CALL      R8 1 1       ; R8()
288 [-]: GETUPVAL  R8 U20       ; R8 := U20
289 [-]: LOADNIL   R9 R9        ; R9 := nil
290 [-]: CALL      R8 2 1       ; R8(R9)
291 [-]: JMP       299          ; PC := 299
292 [-]: GETUPVAL  R8 U21       ; R8 := U21
293 [-]: CALL      R8 1 1       ; R8()
294 [-]: GETGLOBAL R8 K60       ; R8 := mPvpMovie
295 [-]: SELF      R8 R8 K61    ; R9 := R8; R8 := R8[0xe4162eed]
296 [-]: LOADK     R10 K62      ; R10 := "OnStatsReady"
297 [-]: LOADK     R11 K63      ; R11 := ""
298 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
299 [-]: TEST      R6 1         ; if R6 then PC := 303
300 [-]: JMP       303          ; PC := 303
301 [-]: TEST      R1 0         ; if not R1 then PC := 326
302 [-]: JMP       326          ; PC := 326
303 [-]: GETGLOBAL R8 K55       ; R8 := mCurrentScreenType
304 [-]: GETGLOBAL R9 K56       ; R9 := ScreenType
305 [-]: GETTABLE  R9 R9 K64    ; R9 := R9["SCOREBOARD"]
306 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 320
307 [-]: JMP       320          ; PC := 320
308 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
309 [-]: GETGLOBAL R9 K60       ; R9 := mPvpMovie
310 [-]: CALL      R8 2 2       ; R8 := R8(R9)
311 [-]: TEST      R8 1         ; if R8 then PC := 320
312 [-]: JMP       320          ; PC := 320
313 [-]: GETGLOBAL R8 K60       ; R8 := mPvpMovie
314 [-]: SELF      R8 R8 K61    ; R9 := R8; R8 := R8[0xe4162eed]
315 [-]: LOADK     R10 K65      ; R10 := "PopulateScoreboard"
316 [-]: GETGLOBAL R11 K22      ; R11 := 0x64fb1586
317 [-]: GETGLOBAL R12 K66      ; R12 := mMissionSuccessful
318 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
319 [-]: CALL      R8 0 1       ; R8(R9,...)
320 [-]: TEST      R6 0         ; if not R6 then PC := 326
321 [-]: JMP       326          ; PC := 326
322 [-]: GETUPVAL  R8 U22       ; R8 := U22
323 [-]: GETGLOBAL R9 K56       ; R9 := ScreenType
324 [-]: GETTABLE  R9 R9 K64    ; R9 := R9["SCOREBOARD"]
325 [-]: CALL      R8 2 1       ; R8(R9)
326 [-]: TEST      R1 0         ; if not R1 then PC := 491
327 [-]: JMP       491          ; PC := 491
328 [-]: GETUPVAL  R8 U23       ; R8 := U23
329 [-]: GETGLOBAL R9 K27       ; R9 := mMissionFailed
330 [-]: NOT       R9 R9        ; R9 :=  R9
331 [-]: CALL      R8 2 1       ; R8(R9)
332 [-]: JMP       491          ; PC := 491
333 [-]: GETUPVAL  R8 U12       ; R8 := U12
334 [-]: CALL      R8 1 1       ; R8()
335 [-]: GETGLOBAL R8 K55       ; R8 := mCurrentScreenType
336 [-]: GETGLOBAL R9 K56       ; R9 := ScreenType
337 [-]: GETTABLE  R9 R9 K57    ; R9 := R9["KAHL"]
338 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 370
339 [-]: JMP       370          ; PC := 370
340 [-]: GETUPVAL  R8 U13       ; R8 := U13
341 [-]: CALL      R8 1 2       ; R8 := R8()
342 [-]: SETGLOBAL R8 K58       ; mNumberOfLoadoutSlotsUsed := R8
343 [-]: GETUPVAL  R8 U14       ; R8 := U14
344 [-]: CALL      R8 1 1       ; R8()
345 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
346 [-]: CALL      R8 1 1       ; R8()
347 [-]: GETUPVAL  R8 U17       ; R8 := U17
348 [-]: CALL      R8 1 1       ; R8()
349 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
350 [-]: CALL      R8 1 1       ; R8()
351 [-]: GETUPVAL  R8 U19       ; R8 := U19
352 [-]: CALL      R8 1 1       ; R8()
353 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
354 [-]: CALL      R8 1 1       ; R8()
355 [-]: GETUPVAL  R8 U20       ; R8 := U20
356 [-]: LOADNIL   R9 R9        ; R9 := nil
357 [-]: CALL      R8 2 1       ; R8(R9)
358 [-]: GETGLOBAL R8 K66       ; R8 := mMissionSuccessful
359 [-]: NOT       R8 R8        ; R8 :=  R8
360 [-]: SETGLOBAL R8 K27       ; mMissionFailed := R8
361 [-]: GETUPVAL  R8 U18       ; R8 := U18
362 [-]: CALL      R8 1 1       ; R8()
363 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
364 [-]: CALL      R8 1 1       ; R8()
365 [-]: GETUPVAL  R8 U15       ; R8 := U15
366 [-]: CALL      R8 1 1       ; R8()
367 [-]: GETGLOBAL R8 K59       ; R8 := 0xce225efa
368 [-]: CALL      R8 1 1       ; R8()
369 [-]: JMP       380          ; PC := 380
370 [-]: GETUPVAL  R8 U21       ; R8 := U21
371 [-]: CALL      R8 1 1       ; R8()
372 [-]: GETGLOBAL R8 K66       ; R8 := mMissionSuccessful
373 [-]: NOT       R8 R8        ; R8 :=  R8
374 [-]: SETGLOBAL R8 K27       ; mMissionFailed := R8
375 [-]: GETGLOBAL R8 K60       ; R8 := mPvpMovie
376 [-]: SELF      R8 R8 K61    ; R9 := R8; R8 := R8[0xe4162eed]
377 [-]: LOADK     R10 K62      ; R10 := "OnStatsReady"
378 [-]: LOADK     R11 K63      ; R11 := ""
379 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
380 [-]: GETUPVAL  R8 U7        ; R8 := U7
381 [-]: LOADKB    R9 0 0       ; R9 := false
382 [-]: GETGLOBAL R10 K66      ; R10 := mMissionSuccessful
383 [-]: TEST      R10 1        ; if R10 then PC := 396
384 [-]: JMP       396          ; PC := 396
385 [-]: GETGLOBAL R10 K3       ; R10 := 0x7b998233
386 [-]: GETGLOBAL R11 K0       ; R11 := 0x0032441c
387 [-]: GETTABLE  R11 R11 K67  ; R11 := R11["MissionSuccessOverride"]
388 [-]: CALL      R10 2 2      ; R10 := R10(R11)
389 [-]: TEST      R10 1        ; if R10 then PC := 394
390 [-]: JMP       394          ; PC := 394
391 [-]: GETGLOBAL R10 K0       ; R10 := 0x0032441c
392 [-]: GETTABLE  R10 R10 K67  ; R10 := R10["MissionSuccessOverride"]
393 [-]: JMP       396          ; PC := 396
394 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 395
395 [-]: LOADKB    R10 1 0      ; R10 := true
396 [-]: MOVE      R11 R1       ; R11 := R1
397 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
398 [-]: GETGLOBAL R8 K0        ; R8 := 0x0032441c
399 [-]: SETTABLE  R8 K67 K68   ; R8["MissionSuccessOverride"] := false
400 [-]: GETGLOBAL R8 K27       ; R8 := mMissionFailed
401 [-]: TEST      R8 0         ; if not R8 then PC := 408
402 [-]: JMP       408          ; PC := 408
403 [-]: GETUPVAL  R8 U5        ; R8 := U5
404 [-]: GETTABLE  R8 R8 K46    ; R8 := R8[0x659d451f]
405 [-]: GETGLOBAL R9 K49       ; R9 := 0xb64f5c91
406 [-]: CALL      R8 2 1       ; R8(R9)
407 [-]: JMP       415          ; PC := 415
408 [-]: GETUPVAL  R8 U1        ; R8 := U1
409 [-]: TEST      R8 1         ; if R8 then PC := 415
410 [-]: JMP       415          ; PC := 415
411 [-]: GETUPVAL  R8 U5        ; R8 := U5
412 [-]: GETTABLE  R8 R8 K46    ; R8 := R8[0x659d451f]
413 [-]: GETGLOBAL R9 K47       ; R9 := 0xb9ae96ba
414 [-]: CALL      R8 2 1       ; R8(R9)
415 [-]: GETGLOBAL R8 K55       ; R8 := mCurrentScreenType
416 [-]: GETGLOBAL R9 K56       ; R9 := ScreenType
417 [-]: GETTABLE  R9 R9 K64    ; R9 := R9["SCOREBOARD"]
418 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 432
419 [-]: JMP       432          ; PC := 432
420 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
421 [-]: GETGLOBAL R9 K60       ; R9 := mPvpMovie
422 [-]: CALL      R8 2 2       ; R8 := R8(R9)
423 [-]: TEST      R8 1         ; if R8 then PC := 432
424 [-]: JMP       432          ; PC := 432
425 [-]: GETGLOBAL R8 K60       ; R8 := mPvpMovie
426 [-]: SELF      R8 R8 K61    ; R9 := R8; R8 := R8[0xe4162eed]
427 [-]: LOADK     R10 K69      ; R10 := "InitializeFanfare"
428 [-]: GETGLOBAL R11 K22      ; R11 := 0x64fb1586
429 [-]: GETGLOBAL R12 K66      ; R12 := mMissionSuccessful
430 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
431 [-]: CALL      R8 0 1       ; R8(R9,...)
432 [-]: TEST      R1 0         ; if not R1 then PC := 438
433 [-]: JMP       438          ; PC := 438
434 [-]: GETUPVAL  R8 U23       ; R8 := U23
435 [-]: GETGLOBAL R9 K27       ; R9 := mMissionFailed
436 [-]: NOT       R9 R9        ; R9 :=  R9
437 [-]: CALL      R8 2 1       ; R8(R9)
438 [-]: GETGLOBAL R8 K70       ; R8 := 0x2d0fad09
439 [-]: LOADK     R9 K71       ; R9 := "Lotus.Interface.Libs.DioramaLoader"
440 [-]: CALL      R8 2 2       ; R8 := R8(R9)
441 [-]: GETTABLE  R9 R8 K73    ; R9 := R8[0xbec1f4ee]
442 [-]: GETGLOBAL R10 K74      ; R10 := 0xae91e43b
443 [-]: LOADKB    R11 1 0      ; R11 := true
444 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
445 [-]: SETGLOBAL R9 K72       ; mDioramaLoader := R9
446 [-]: LOADKB    R9 0 0       ; R9 := false
447 [-]: LOADNIL   R10 R10      ; R10 := nil
448 [-]: GETGLOBAL R11 K33      ; R11 := 0x6c97a788
449 [-]: GETTABLE  R11 R11 K75  ; R11 := R11[0x6e0e9f85]
450 [-]: CALL      R11 1 2      ; R11 := R11()
451 [-]: GETGLOBAL R12 K3       ; R12 := 0x7b998233
452 [-]: GETTABLE  R13 R11 K76  ; R13 := R11["levelKeyName"]
453 [-]: CALL      R12 2 2      ; R12 := R12(R13)
454 [-]: TEST      R12 1        ; if R12 then PC := 460
455 [-]: JMP       460          ; PC := 460
456 [-]: GETGLOBAL R12 K77      ; R12 := 0xb009bbc6
457 [-]: GETTABLE  R13 R11 K76  ; R13 := R11["levelKeyName"]
458 [-]: CALL      R12 2 2      ; R12 := R12(R13)
459 [-]: MOVE      R10 R12      ; R10 := R12
460 [-]: TEST      R9 0         ; if not R9 then PC := 471
461 [-]: JMP       471          ; PC := 471
462 [-]: GETGLOBAL R12 K3       ; R12 := 0x7b998233
463 [-]: GETGLOBAL R13 K78      ; R13 := 0xa91ae65e
464 [-]: CALL      R12 2 2      ; R12 := R12(R13)
465 [-]: TEST      R12 1        ; if R12 then PC := 491
466 [-]: JMP       491          ; PC := 491
467 [-]: GETUPVAL  R12 U24      ; R12 := U24
468 [-]: GETGLOBAL R13 K78      ; R13 := 0xa91ae65e
469 [-]: CALL      R12 2 1      ; R12(R13)
470 [-]: JMP       491          ; PC := 491
471 [-]: GETGLOBAL R12 K3       ; R12 := 0x7b998233
472 [-]: MOVE      R13 R10      ; R13 := R10
473 [-]: CALL      R12 2 2      ; R12 := R12(R13)
474 [-]: TEST      R12 1        ; if R12 then PC := 489
475 [-]: JMP       489          ; PC := 489
476 [-]: GETGLOBAL R12 K77      ; R12 := 0xb009bbc6
477 [-]: SELF      R13 R10 K79  ; R14 := R10; R13 := R10[0x9b4bbe31]
478 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
479 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
480 [-]: GETGLOBAL R13 K3       ; R13 := 0x7b998233
481 [-]: MOVE      R14 R12      ; R14 := R12
482 [-]: CALL      R13 2 2      ; R13 := R13(R14)
483 [-]: TEST      R13 1        ; if R13 then PC := 491
484 [-]: JMP       491          ; PC := 491
485 [-]: GETUPVAL  R13 U24      ; R13 := U24
486 [-]: MOVE      R14 R12      ; R14 := R12
487 [-]: CALL      R13 2 1      ; R13(R14)
488 [-]: JMP       491          ; PC := 491
489 [-]: GETUPVAL  R13 U25      ; R13 := U25
490 [-]: CALL      R13 1 1      ; R13()
491 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 6085
; #Upvalues:       27
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "Initialize"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xc6a10ab1]
  6 [-]: CONST     R2 0         ; R2 := 0.000000
  7 [-]: CALL      R0 3 1       ; R0(R1,R2)
  8 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xaade900e]
 10 [-]: LOADK     R2 K5        ; R2 := "FullScreenFade"
 11 [-]: CONST     R3 11        ; R3 := 11.000000
 12 [-]: LOADKB    R4 0 0       ; R4 := false
 13 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 14 [-]: GETUPVAL  R0 U0        ; R0 := U0
 15 [-]: GETTABLE  R0 R0 K6     ; R0 := R0[0xcdc34211]
 16 [-]: CALL      R0 1 2       ; R0 := R0()
 17 [-]: GETGLOBAL R1 K7        ; R1 := 0x0032441c
 18 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["StalkerMode"]
 19 [-]: TEST      R1 0         ; if not R1 then PC := 50
 20 [-]: JMP       50           ; PC := 50
 21 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 22 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x67bc869f]
 23 [-]: LOADK     R3 K10       ; R3 := "_root"
 24 [-]: CONST     R4 10        ; R4 := 10.000000
 25 [-]: CONST     R5 0         ; R5 := 0.000000
 26 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 27 [-]: TEST      R0 0         ; if not R0 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETGLOBAL R1 K11       ; R1 := 0x7b998233
 30 [-]: GETGLOBAL R2 K12       ; R2 := 0xbe190284
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 1         ; if R1 then PC := 45
 33 [-]: JMP       45           ; PC := 45
 34 [-]: GETGLOBAL R1 K12       ; R1 := 0xbe190284
 35 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x31e985af]
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: TEST      R1 0         ; if not R1 then PC := 45
 38 [-]: JMP       45           ; PC := 45
 39 [-]: LOADKB    R1 1 0       ; R1 := true
 40 [-]: SETGLOBAL R1 K14       ; mInitialized := R1
 41 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 42 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0x32302b4a]
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETGLOBAL R1 K16       ; R1 := 0x34291f5c
 46 [-]: GETTABLE  R1 R1 K17    ; R1 := R1[0x8ee24660]
 47 [-]: LOADKB    R2 1 0       ; R2 := true
 48 [-]: CALL      R1 2 1       ; R1(R2)
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETGLOBAL R1 K18       ; R1 := _T
 51 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["ForceHideEOM"]
 52 [-]: TEST      R1 0         ; if not R1 then PC := 78
 53 [-]: JMP       78           ; PC := 78
 54 [-]: GETUPVAL  R1 U0        ; R1 := U0
 55 [-]: GETTABLE  R1 R1 K20    ; R1 := R1[0x154d0ad2]
 56 [-]: LOADKB    R2 1 0       ; R2 := true
 57 [-]: CALL      R1 2 1       ; R1(R2)
 58 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 59 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x67bc869f]
 60 [-]: LOADK     R3 K10       ; R3 := "_root"
 61 [-]: CONST     R4 10        ; R4 := 10.000000
 62 [-]: CONST     R5 0         ; R5 := 0.000000
 63 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 64 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 65 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1[0x5477b639]
 66 [-]: LOADKB    R3 0 0       ; R3 := false
 67 [-]: CALL      R1 3 1       ; R1(R2,R3)
 68 [-]: LOADKB    R1 1 0       ; R1 := true
 69 [-]: SETUPVAL  R1 U1        ; U82 := R1
 70 [-]: LOADK     R1 K23       ; R1 := 0.010000
 71 [-]: SETGLOBAL R1 K22       ; AUTO_CLOSE_DELAY := R1
 72 [-]: GETUPVAL  R1 U2        ; R1 := U2
 73 [-]: CALL      R1 1 2       ; R1 := R1()
 74 [-]: TEST      R1 0         ; if not R1 then PC := 78
 75 [-]: JMP       78           ; PC := 78
 76 [-]: GETGLOBAL R1 K22       ; R1 := AUTO_CLOSE_DELAY
 77 [-]: SETGLOBAL R1 K24       ; mAutoCloseDelay := R1
 78 [-]: GETGLOBAL R1 K11       ; R1 := 0x7b998233
 79 [-]: GETGLOBAL R2 K25       ; R2 := 0x4c5fdf9c
 80 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 81 [-]: TEST      R1 1         ; if R1 then PC := 91
 82 [-]: JMP       91           ; PC := 91
 83 [-]: GETGLOBAL R1 K7        ; R1 := 0x0032441c
 84 [-]: GETTABLE  R1 R1 K26    ; R1 := R1["UIColorObject_White"]
 85 [-]: EQ        0 R1 K27     ; if R1 ~= nil then PC := 91
 86 [-]: JMP       91           ; PC := 91
 87 [-]: GETGLOBAL R1 K28       ; R1 := 0x9ba7909f
 88 [-]: SELF      R1 R1 K29    ; R2 := R1; R1 := R1[0x6dd7aa66]
 89 [-]: GETGLOBAL R3 K25       ; R3 := 0x4c5fdf9c
 90 [-]: CALL      R1 3 1       ; R1(R2,R3)
 91 [-]: GETGLOBAL R1 K11       ; R1 := 0x7b998233
 92 [-]: GETGLOBAL R2 K30       ; R2 := 0xf5e16f12
 93 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 94 [-]: TEST      R1 1         ; if R1 then PC := 109
 95 [-]: JMP       109          ; PC := 109
 96 [-]: GETGLOBAL R1 K28       ; R1 := 0x9ba7909f
 97 [-]: SELF      R1 R1 K31    ; R2 := R1; R1 := R1[0xbcfb64ab]
 98 [-]: GETGLOBAL R3 K30       ; R3 := 0xf5e16f12
 99 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
100 [-]: GETGLOBAL R2 K11       ; R2 := 0x7b998233
101 [-]: MOVE      R3 R1        ; R3 := R1
102 [-]: CALL      R2 2 2       ; R2 := R2(R3)
103 [-]: TEST      R2 1         ; if R2 then PC := 109
104 [-]: JMP       109          ; PC := 109
105 [-]: SELF      R2 R1 K32    ; R3 := R1; R2 := R1[0xe4162eed]
106 [-]: LOADK     R4 K33       ; R4 := "Close"
107 [-]: LOADK     R5 K34       ; R5 := ""
108 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
109 [-]: GETGLOBAL R2 K11       ; R2 := 0x7b998233
110 [-]: GETGLOBAL R3 K12       ; R3 := 0xbe190284
111 [-]: CALL      R2 2 2       ; R2 := R2(R3)
112 [-]: TEST      R2 1         ; if R2 then PC := 118
113 [-]: JMP       118          ; PC := 118
114 [-]: GETGLOBAL R2 K12       ; R2 := 0xbe190284
115 [-]: SELF      R2 R2 K35    ; R3 := R2; R2 := R2[0xa1c390fe]
116 [-]: CALL      R2 2 2       ; R2 := R2(R3)
117 [-]: SETUPVAL  R2 U3        ; U82 := R3
118 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
119 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2[0x2002e1dc]
120 [-]: GETGLOBAL R4 K18       ; R4 := _T
121 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["RadialSolarMapOpen"]
122 [-]: EQ        1 R4 K38     ; if R4 == true then PC := 125
123 [-]: JMP       125          ; PC := 125
124 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 125
125 [-]: LOADKB    R4 1 0       ; R4 := true
126 [-]: CALL      R2 3 1       ; R2(R3,R4)
127 [-]: GETGLOBAL R2 K7        ; R2 := 0x0032441c
128 [-]: GETTABLE  R2 R2 K39    ; R2 := R2["EndOfMatch_didActuallySetupStuff"]
129 [-]: TEST      R2 0         ; if not R2 then PC := 136
130 [-]: JMP       136          ; PC := 136
131 [-]: GETGLOBAL R2 K7        ; R2 := 0x0032441c
132 [-]: SETTABLE  R2 K39 K27   ; R2["EndOfMatch_didActuallySetupStuff"] := nil
133 [-]: GETGLOBAL R2 K7        ; R2 := 0x0032441c
134 [-]: GETTABLE  R2 R2 K41    ; R2 := R2["EndOfMatch_abortingAndWasDoingPvpChallenge"]
135 [-]: SETGLOBAL R2 K40       ; mAbortingAndWasDoingPvpChallenge := R2
136 [-]: GETUPVAL  R2 U4        ; R2 := U4
137 [-]: CALL      R2 1 1       ; R2()
138 [-]: GETUPVAL  R2 U5        ; R2 := U5
139 [-]: CONST     R3 0         ; R3 := 0.000000
140 [-]: CALL      R2 2 1       ; R2(R3)
141 [-]: GETGLOBAL R2 K18       ; R2 := _T
142 [-]: SETTABLE  R2 K42 K38   ; R2["EOMOpen"] := true
143 [-]: GETUPVAL  R2 U0        ; R2 := U0
144 [-]: GETTABLE  R2 R2 K43    ; R2 := R2[0x9e3d3434]
145 [-]: LOADKB    R3 1 0       ; R3 := true
146 [-]: CALL      R2 2 1       ; R2(R3)
147 [-]: GETUPVAL  R2 U6        ; R2 := U6
148 [-]: CALL      R2 1 2       ; R2 := R2()
149 [-]: GETTABLE  R3 R2 K44    ; R3 := R2["missionType"]
150 [-]: GETTABLE  R4 R2 K46    ; R4 := R2["archwingRequired"]
151 [-]: TEST      R4 0         ; if not R4 then PC := 155
152 [-]: JMP       155          ; PC := 155
153 [-]: GETTABLE  R4 R2 K47    ; R4 := R2["isSharkwingMission"]
154 [-]: NOT       R4 R4        ; R4 :=  R4
155 [-]: SETGLOBAL R4 K45       ; mArchWingRequired := R4
156 [-]: GETUPVAL  R4 U7        ; R4 := U7
157 [-]: EQ        1 R3 K50     ; if R3 == 10.000000 then PC := 160
158 [-]: JMP       160          ; PC := 160
159 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 160
160 [-]: LOADKB    R5 1 0       ; R5 := true
161 [-]: SETTABLE  R4 K48 R5    ; R4["isPvp"] := R5
162 [-]: GETGLOBAL R4 K11       ; R4 := 0x7b998233
163 [-]: GETGLOBAL R5 K51       ; R5 := 0x25d99d89
164 [-]: CALL      R4 2 2       ; R4 := R4(R5)
165 [-]: TEST      R4 0         ; if not R4 then PC := 171
166 [-]: JMP       171          ; PC := 171
167 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
168 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x32302b4a]
169 [-]: CALL      R4 2 1       ; R4(R5)
170 [-]: RETURN    R0 1         ; return 
171 [-]: GETGLOBAL R4 K51       ; R4 := 0x25d99d89
172 [-]: SETGLOBAL R4 K52       ; mGameData := R4
173 [-]: GETGLOBAL R4 K53       ; R4 := 0x7f5022cf
174 [-]: GETTABLE  R4 R4 K54    ; R4 := R4[0x3f3e4d12]
175 [-]: GETUPVAL  R5 U0        ; R5 := U0
176 [-]: GETTABLE  R5 R5 K55    ; R5 := R5[0x4e234407]
177 [-]: MOVE      R6 R2        ; R6 := R2
178 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
179 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
180 [-]: SETUPVAL  R4 U8        ; U82 := R8
181 [-]: GETUPVAL  R4 U9        ; R4 := U9
182 [-]: GETUPVAL  R5 U8        ; R5 := U8
183 [-]: CALL      R4 2 1       ; R4(R5)
184 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
185 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x67bc869f]
186 [-]: LOADK     R6 K56       ; R6 := "TopAnchor.Header.DescBacker"
187 [-]: CONST     R7 10        ; R7 := 10.000000
188 [-]: CONST     R8 50        ; R8 := 50.000000
189 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
190 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
191 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x67bc869f]
192 [-]: LOADK     R6 K57       ; R6 := "TopAnchor.Header.ArrowEnds"
193 [-]: CONST     R7 10        ; R7 := 10.000000
194 [-]: GETGLOBAL R8 K58       ; R8 := BORDER_ALPHA
195 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
196 [-]: GETGLOBAL R4 K18       ; R4 := _T
197 [-]: GETUPVAL  R5 U10       ; R5 := U10
198 [-]: GETTABLE  R5 R5 K60    ; R5 := R5["ACTUAL_EOM"]
199 [-]: SETTABLE  R4 K59 R5    ; R4["eomScreenMode"] := R5
200 [-]: GETGLOBAL R4 K11       ; R4 := 0x7b998233
201 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
202 [-]: SELF      R5 R5 K61    ; R6 := R5; R5 := R5[0x33abee92]
203 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
204 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
205 [-]: TEST      R4 1         ; if R4 then PC := 221
206 [-]: JMP       221          ; PC := 221
207 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
208 [-]: SELF      R4 R4 K61    ; R5 := R4; R4 := R4[0x33abee92]
209 [-]: CALL      R4 2 2       ; R4 := R4(R5)
210 [-]: GETGLOBAL R5 K28       ; R5 := 0x9ba7909f
211 [-]: SELF      R5 R5 K31    ; R6 := R5; R5 := R5[0xbcfb64ab]
212 [-]: GETGLOBAL R7 K62       ; R7 := 0x6a400c4e
213 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
214 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 221
215 [-]: JMP       221          ; PC := 221
216 [-]: GETGLOBAL R4 K18       ; R4 := _T
217 [-]: GETUPVAL  R5 U10       ; R5 := U10
218 [-]: GETTABLE  R5 R5 K63    ; R5 := R5["DETAILED_PREVIEW"]
219 [-]: SETTABLE  R4 K59 R5    ; R4["eomScreenMode"] := R5
220 [-]: JMP       261          ; PC := 261
221 [-]: GETGLOBAL R4 K11       ; R4 := 0x7b998233
222 [-]: GETGLOBAL R5 K12       ; R5 := 0xbe190284
223 [-]: CALL      R4 2 2       ; R4 := R4(R5)
224 [-]: TEST      R4 1         ; if R4 then PC := 261
225 [-]: JMP       261          ; PC := 261
226 [-]: LOADKB    R4 0 0       ; R4 := false
227 [-]: GETUPVAL  R5 U7        ; R5 := U7
228 [-]: GETTABLE  R5 R5 K48    ; R5 := R5["isPvp"]
229 [-]: TEST      R5 0         ; if not R5 then PC := 247
230 [-]: JMP       247          ; PC := 247
231 [-]: GETGLOBAL R5 K12       ; R5 := 0xbe190284
232 [-]: SELF      R5 R5 K64    ; R6 := R5; R5 := R5[0xf2deaf69]
233 [-]: GETGLOBAL R7 K65       ; R7 := gLotusPvpGameRulesType
234 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
235 [-]: TEST      R5 0         ; if not R5 then PC := 247
236 [-]: JMP       247          ; PC := 247
237 [-]: GETGLOBAL R5 K12       ; R5 := 0xbe190284
238 [-]: SELF      R5 R5 K66    ; R6 := R5; R5 := R5[0x529b110d]
239 [-]: CALL      R5 2 2       ; R5 := R5(R6)
240 [-]: EQ        1 R5 K67     ; if R5 == 6.000000 then PC := 244
241 [-]: JMP       244          ; PC := 244
242 [-]: EQ        0 R5 K68     ; if R5 ~= 3.000000 then PC := 245
243 [-]: JMP       245          ; PC := 245
244 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 245
245 [-]: LOADKB    R4 1 0       ; R4 := true
246 [-]: JMP       253          ; PC := 253
247 [-]: TESTSET   R4 R0 0      ; if not R0 then PC := 253 else R4 := R0
248 [-]: JMP       253          ; PC := 253
249 [-]: GETGLOBAL R6 K12       ; R6 := 0xbe190284
250 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x31e985af]
251 [-]: CALL      R6 2 2       ; R6 := R6(R7)
252 [-]: MOVE      R4 R6        ; R4 := R6
253 [-]: TEST      R4 0         ; if not R4 then PC := 261
254 [-]: JMP       261          ; PC := 261
255 [-]: GETGLOBAL R6 K18       ; R6 := _T
256 [-]: GETUPVAL  R7 U10       ; R7 := U10
257 [-]: GETTABLE  R7 R7 K69    ; R7 := R7["QUICK_PREVIEW"]
258 [-]: SETTABLE  R6 K59 R7    ; R6["eomScreenMode"] := R7
259 [-]: GETGLOBAL R6 K18       ; R6 := _T
260 [-]: SETTABLE  R6 K70 K71   ; R6["eomInputIgnored"] := false
261 [-]: GETTABLE  R6 R2 K72    ; R6 := R2["syndicateTag"]
262 [-]: GETGLOBAL R7 K73       ; R7 := 0x0469f296
263 [-]: LOADK     R8 K74       ; R8 := "KahlSyndicate"
264 [-]: CALL      R7 2 2       ; R7 := R7(R8)
265 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 268
266 [-]: JMP       268          ; PC := 268
267 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 268
268 [-]: LOADKB    R6 1 0       ; R6 := true
269 [-]: TEST      R6 0         ; if not R6 then PC := 328
270 [-]: JMP       328          ; PC := 328
271 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
272 [-]: SELF      R7 R7 K76    ; R8 := R7; R7 := R7[0x1fd6abd0]
273 [-]: GETGLOBAL R9 K77       ; R9 := 0x54204451
274 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
275 [-]: SETGLOBAL R7 K75       ; mPvpMovie := R7
276 [-]: GETGLOBAL R7 K11       ; R7 := 0x7b998233
277 [-]: GETGLOBAL R8 K75       ; R8 := mPvpMovie
278 [-]: CALL      R7 2 2       ; R7 := R7(R8)
279 [-]: TEST      R7 1         ; if R7 then PC := 327
280 [-]: JMP       327          ; PC := 327
281 [-]: GETGLOBAL R7 K79       ; R7 := ScreenType
282 [-]: GETTABLE  R7 R7 K80    ; R7 := R7["KAHL"]
283 [-]: SETGLOBAL R7 K78       ; mCurrentScreenType := R7
284 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
285 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7[0xaade900e]
286 [-]: LOADK     R9 K5        ; R9 := "FullScreenFade"
287 [-]: CONST     R10 11       ; R10 := 11.000000
288 [-]: LOADKB    R11 0 0      ; R11 := false
289 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
290 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
291 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7[0xaade900e]
292 [-]: LOADK     R9 K81       ; R9 := "ExpandableArea"
293 [-]: CONST     R10 11       ; R10 := 11.000000
294 [-]: LOADKB    R11 0 0      ; R11 := false
295 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
296 [-]: GETGLOBAL R7 K11       ; R7 := 0x7b998233
297 [-]: GETGLOBAL R8 K12       ; R8 := 0xbe190284
298 [-]: CALL      R7 2 2       ; R7 := R7(R8)
299 [-]: TEST      R7 1         ; if R7 then PC := 311
300 [-]: JMP       311          ; PC := 311
301 [-]: GETGLOBAL R7 K12       ; R7 := 0xbe190284
302 [-]: SELF      R7 R7 K64    ; R8 := R7; R7 := R7[0xf2deaf69]
303 [-]: GETGLOBAL R9 K82       ; R9 := gLotusBaseGameRulesType
304 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
305 [-]: TEST      R7 0         ; if not R7 then PC := 313
306 [-]: JMP       313          ; PC := 313
307 [-]: GETGLOBAL R7 K12       ; R7 := 0xbe190284
308 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0x31e985af]
309 [-]: CALL      R7 2 2       ; R7 := R7(R8)
310 [-]: JMP       313          ; PC := 313
311 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 312
312 [-]: LOADKB    R7 1 0       ; R7 := true
313 [-]: GETGLOBAL R8 K75       ; R8 := mPvpMovie
314 [-]: SELF      R8 R8 K83    ; R9 := R8; R8 := R8[0xbed40e9c]
315 [-]: MOVE      R10 R7       ; R10 := R7
316 [-]: CALL      R8 3 1       ; R8(R9,R10)
317 [-]: GETTABLE  R8 R2 K84    ; R8 := R2["syndicateId"]
318 [-]: EQ        1 R8 K34     ; if R8 == "" then PC := 321
319 [-]: JMP       321          ; PC := 321
320 [-]: LOADKB    R8 0 1       ; R8 := false; PC := 321
321 [-]: LOADKB    R8 1 0       ; R8 := true
322 [-]: GETGLOBAL R9 K75       ; R9 := mPvpMovie
323 [-]: SELF      R9 R9 K85    ; R10 := R9; R9 := R9[0x368ad758]
324 [-]: NOT       R11 R8       ; R11 :=  R8
325 [-]: CALL      R9 3 1       ; R9(R10,R11)
326 [-]: JMP       328          ; PC := 328
327 [-]: LOADKB    R6 0 0       ; R6 := false
328 [-]: TEST      R6 1         ; if R6 then PC := 378
329 [-]: JMP       378          ; PC := 378
330 [-]: TEST      R0 0         ; if not R0 then PC := 378
331 [-]: JMP       378          ; PC := 378
332 [-]: GETUPVAL  R9 U7        ; R9 := U7
333 [-]: GETTABLE  R9 R9 K48    ; R9 := R9["isPvp"]
334 [-]: TEST      R9 1         ; if R9 then PC := 338
335 [-]: JMP       338          ; PC := 338
336 [-]: EQ        0 R3 K86     ; if R3 ~= 22.000000 then PC := 378
337 [-]: JMP       378          ; PC := 378
338 [-]: GETGLOBAL R9 K11       ; R9 := 0x7b998233
339 [-]: GETGLOBAL R10 K87      ; R10 := 0xff8691c1
340 [-]: CALL      R9 2 2       ; R9 := R9(R10)
341 [-]: TEST      R9 1         ; if R9 then PC := 378
342 [-]: JMP       378          ; PC := 378
343 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
344 [-]: SELF      R9 R9 K76    ; R10 := R9; R9 := R9[0x1fd6abd0]
345 [-]: GETGLOBAL R11 K87      ; R11 := 0xff8691c1
346 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
347 [-]: SETGLOBAL R9 K75       ; mPvpMovie := R9
348 [-]: GETGLOBAL R9 K11       ; R9 := 0x7b998233
349 [-]: GETGLOBAL R10 K75      ; R10 := mPvpMovie
350 [-]: CALL      R9 2 2       ; R9 := R9(R10)
351 [-]: TEST      R9 1         ; if R9 then PC := 378
352 [-]: JMP       378          ; PC := 378
353 [-]: GETGLOBAL R9 K75       ; R9 := mPvpMovie
354 [-]: SELF      R9 R9 K85    ; R10 := R9; R9 := R9[0x368ad758]
355 [-]: LOADKB    R11 0 0      ; R11 := false
356 [-]: CALL      R9 3 1       ; R9(R10,R11)
357 [-]: GETGLOBAL R9 K11       ; R9 := 0x7b998233
358 [-]: GETGLOBAL R10 K12      ; R10 := 0xbe190284
359 [-]: CALL      R9 2 2       ; R9 := R9(R10)
360 [-]: TEST      R9 1         ; if R9 then PC := 372
361 [-]: JMP       372          ; PC := 372
362 [-]: GETGLOBAL R9 K12       ; R9 := 0xbe190284
363 [-]: SELF      R9 R9 K64    ; R10 := R9; R9 := R9[0xf2deaf69]
364 [-]: GETGLOBAL R11 K82      ; R11 := gLotusBaseGameRulesType
365 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
366 [-]: TEST      R9 0         ; if not R9 then PC := 374
367 [-]: JMP       374          ; PC := 374
368 [-]: GETGLOBAL R9 K12       ; R9 := 0xbe190284
369 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0x31e985af]
370 [-]: CALL      R9 2 2       ; R9 := R9(R10)
371 [-]: JMP       374          ; PC := 374
372 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 373
373 [-]: LOADKB    R9 1 0       ; R9 := true
374 [-]: GETGLOBAL R10 K75      ; R10 := mPvpMovie
375 [-]: SELF      R10 R10 K83  ; R11 := R10; R10 := R10[0xbed40e9c]
376 [-]: MOVE      R12 R9       ; R12 := R9
377 [-]: CALL      R10 3 1      ; R10(R11,R12)
378 [-]: GETUPVAL  R10 U8       ; R10 := U8
379 [-]: LEN       R10 R10      ; R10 := # R10
380 [-]: LT        0 K88 R10    ; if 0.000000 >= R10 then PC := 441
381 [-]: JMP       441          ; PC := 441
382 [-]: GETUPVAL  R10 U7       ; R10 := U7
383 [-]: GETTABLE  R10 R10 K48  ; R10 := R10["isPvp"]
384 [-]: TEST      R10 1        ; if R10 then PC := 441
385 [-]: JMP       441          ; PC := 441
386 [-]: TEST      R6 1         ; if R6 then PC := 441
387 [-]: JMP       441          ; PC := 441
388 [-]: GETUPVAL  R10 U0       ; R10 := U0
389 [-]: GETTABLE  R10 R10 K89  ; R10 := R10[0x5e35d4d6]
390 [-]: CALL      R10 1 2      ; R10 := R10()
391 [-]: SELF      R11 R10 K90  ; R12 := R10; R11 := R10[0x5484bf3c]
392 [-]: GETTABLE  R13 R2 K91   ; R13 := R2["location"]
393 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
394 [-]: GETTABLE  R11 R11 K92  ; R11 := R11["name"]
395 [-]: LEN       R12 R11      ; R12 := # R11
396 [-]: EQ        0 R12 K88    ; if R12 ~= 0.000000 then PC := 412
397 [-]: JMP       412          ; PC := 412
398 [-]: GETGLOBAL R12 K93      ; R12 := 0xb009bbc6
399 [-]: GETTABLE  R13 R2 K94   ; R13 := R2["levelKeyName"]
400 [-]: CALL      R12 2 2      ; R12 := R12(R13)
401 [-]: GETGLOBAL R13 K11      ; R13 := 0x7b998233
402 [-]: MOVE      R14 R12      ; R14 := R12
403 [-]: CALL      R13 2 2      ; R13 := R13(R14)
404 [-]: TEST      R13 1        ; if R13 then PC := 412
405 [-]: JMP       412          ; PC := 412
406 [-]: SELF      R13 R10 K95  ; R14 := R10; R13 := R10[0xc1dee03f]
407 [-]: CALL      R13 2 2      ; R13 := R13(R14)
408 [-]: SELF      R14 R12 K96  ; R15 := R12; R14 := R12[0x6c053909]
409 [-]: CALL      R14 2 2      ; R14 := R14(R15)
410 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
411 [-]: GETTABLE  R11 R13 K92  ; R11 := R13["name"]
412 [-]: GETGLOBAL R13 K53      ; R13 := 0x7f5022cf
413 [-]: GETTABLE  R13 R13 K54  ; R13 := R13[0x3f3e4d12]
414 [-]: GETGLOBAL R14 K97      ; R14 := 0x603636ad
415 [-]: LOADK     R15 K98      ; R15 := "/Lotus/Language/Labels/CurrentMission"
416 [-]: NEWTABLE  R16 0 4      ; R16 := {}
417 [-]: GETUPVAL  R17 U8       ; R17 := U8
418 [-]: SETTABLE  R16 K99 R17  ; R16["NODE"] := R17
419 [-]: GETGLOBAL R17 K97      ; R17 := 0x603636ad
420 [-]: MOVE      R18 R11      ; R18 := R11
421 [-]: NEWTABLE  R19 0 0      ; R19 := {}
422 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
423 [-]: SETTABLE  R16 K100 R17 ; R16["REGION"] := R17
424 [-]: GETUPVAL  R17 U0       ; R17 := U0
425 [-]: GETTABLE  R17 R17 K102 ; R17 := R17[0xc6c45c3a]
426 [-]: GETTABLE  R18 R2 K103  ; R18 := R2["faction"]
427 [-]: CALL      R17 2 2      ; R17 := R17(R18)
428 [-]: SETTABLE  R16 K101 R17 ; R16["FACTION"] := R17
429 [-]: GETUPVAL  R17 U11      ; R17 := U11
430 [-]: CALL      R17 1 2      ; R17 := R17()
431 [-]: SETTABLE  R16 K104 R17 ; R16["TYPE"] := R17
432 [-]: CALL      R14 3 0      ; R14,... := R14(R15,R16)
433 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
434 [-]: GETGLOBAL R14 K2       ; R14 := 0xae91e43b
435 [-]: SELF      R14 R14 K105 ; R15 := R14; R14 := R14[0x5f56eeab]
436 [-]: LOADK     R16 K106     ; R16 := "BottomAnchor.NodeDetails"
437 [-]: CONST     R17 29       ; R17 := 29.000000
438 [-]: MOVE      R18 R13      ; R18 := R13
439 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
440 [-]: JMP       447          ; PC := 447
441 [-]: GETGLOBAL R14 K2       ; R14 := 0xae91e43b
442 [-]: SELF      R14 R14 K4   ; R15 := R14; R14 := R14[0xaade900e]
443 [-]: LOADK     R16 K106     ; R16 := "BottomAnchor.NodeDetails"
444 [-]: CONST     R17 11       ; R17 := 11.000000
445 [-]: LOADKB    R18 0 0      ; R18 := false
446 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
447 [-]: GETGLOBAL R14 K11      ; R14 := 0x7b998233
448 [-]: GETGLOBAL R15 K12      ; R15 := 0xbe190284
449 [-]: CALL      R14 2 2      ; R14 := R14(R15)
450 [-]: TEST      R14 1        ; if R14 then PC := 456
451 [-]: JMP       456          ; PC := 456
452 [-]: GETGLOBAL R14 K12      ; R14 := 0xbe190284
453 [-]: SELF      R14 R14 K107 ; R15 := R14; R14 := R14[0x5353427c]
454 [-]: CALL      R14 2 2      ; R14 := R14(R15)
455 [-]: SETUPVAL  R14 U12      ; U82 := R12
456 [-]: GETGLOBAL R14 K11      ; R14 := 0x7b998233
457 [-]: MOVE      R15 R2       ; R15 := R2
458 [-]: CALL      R14 2 2      ; R14 := R14(R15)
459 [-]: TEST      R14 1        ; if R14 then PC := 467
460 [-]: JMP       467          ; PC := 467
461 [-]: EQ        1 R3 K108    ; if R3 == 18.000000 then PC := 465
462 [-]: JMP       465          ; PC := 465
463 [-]: EQ        0 R3 K109    ; if R3 ~= 11.000000 then PC := 467
464 [-]: JMP       467          ; PC := 467
465 [-]: LOADKB    R14 0 0      ; R14 := false
466 [-]: SETGLOBAL R14 K110     ; mShowDuringLoadingScreen := R14
467 [-]: GETGLOBAL R14 K110     ; R14 := mShowDuringLoadingScreen
468 [-]: TEST      R14 0        ; if not R14 then PC := 501
469 [-]: JMP       501          ; PC := 501
470 [-]: GETGLOBAL R14 K18      ; R14 := _T
471 [-]: GETTABLE  R14 R14 K59  ; R14 := R14["eomScreenMode"]
472 [-]: GETUPVAL  R15 U10      ; R15 := U10
473 [-]: GETTABLE  R15 R15 K60  ; R15 := R15["ACTUAL_EOM"]
474 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 501
475 [-]: JMP       501          ; PC := 501
476 [-]: GETUPVAL  R14 U7       ; R14 := U7
477 [-]: GETTABLE  R14 R14 K48  ; R14 := R14["isPvp"]
478 [-]: TEST      R14 1        ; if R14 then PC := 501
479 [-]: JMP       501          ; PC := 501
480 [-]: GETGLOBAL R14 K2       ; R14 := 0xae91e43b
481 [-]: SELF      R14 R14 K111 ; R15 := R14; R14 := R14[0x78f32995]
482 [-]: LOADKB    R16 1 0      ; R16 := true
483 [-]: CALL      R14 3 1      ; R14(R15,R16)
484 [-]: GETGLOBAL R14 K2       ; R14 := 0xae91e43b
485 [-]: SELF      R14 R14 K112 ; R15 := R14; R14 := R14[0x85b5d288]
486 [-]: LOADKB    R16 0 0      ; R16 := false
487 [-]: CALL      R14 3 1      ; R14(R15,R16)
488 [-]: GETGLOBAL R14 K11      ; R14 := 0x7b998233
489 [-]: GETGLOBAL R15 K75      ; R15 := mPvpMovie
490 [-]: CALL      R14 2 2      ; R14 := R14(R15)
491 [-]: TEST      R14 1        ; if R14 then PC := 501
492 [-]: JMP       501          ; PC := 501
493 [-]: GETGLOBAL R14 K75      ; R14 := mPvpMovie
494 [-]: SELF      R14 R14 K111 ; R15 := R14; R14 := R14[0x78f32995]
495 [-]: LOADKB    R16 1 0      ; R16 := true
496 [-]: CALL      R14 3 1      ; R14(R15,R16)
497 [-]: GETGLOBAL R14 K75      ; R14 := mPvpMovie
498 [-]: SELF      R14 R14 K112 ; R15 := R14; R14 := R14[0x85b5d288]
499 [-]: LOADKB    R16 0 0      ; R16 := false
500 [-]: CALL      R14 3 1      ; R14(R15,R16)
501 [-]: GETGLOBAL R14 K18      ; R14 := _T
502 [-]: GETTABLE  R14 R14 K59  ; R14 := R14["eomScreenMode"]
503 [-]: GETUPVAL  R15 U10      ; R15 := U10
504 [-]: GETTABLE  R15 R15 K60  ; R15 := R15["ACTUAL_EOM"]
505 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 508
506 [-]: JMP       508          ; PC := 508
507 [-]: LOADKB    R14 0 1      ; R14 := false; PC := 508
508 [-]: LOADKB    R14 1 0      ; R14 := true
509 [-]: GETUPVAL  R15 U13      ; R15 := U13
510 [-]: CALL      R15 1 1      ; R15()
511 [-]: GETGLOBAL R15 K113     ; R15 := 0x89326c93
512 [-]: SELF      R15 R15 K114 ; R16 := R15; R15 := R15[0x18d05d30]
513 [-]: CALL      R15 2 2      ; R15 := R15(R16)
514 [-]: TEST      R15 1        ; if R15 then PC := 534
515 [-]: JMP       534          ; PC := 534
516 [-]: TEST      R14 0        ; if not R14 then PC := 534
517 [-]: JMP       534          ; PC := 534
518 [-]: LOADKB    R16 0 0      ; R16 := false
519 [-]: SETGLOBAL R16 K115     ; mMedalsValidated := R16
520 [-]: CONST     R16 1        ; R16 := 1.000000
521 [-]: GETGLOBAL R17 K116     ; R17 := mMaxPlayers
522 [-]: CONST     R18 1        ; R18 := 1.000000
523 [-]: FORPREP   R16 533      ; R16 -= R18; PC := 533
524 [-]: LOADK     R20 K117     ; R20 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
525 [-]: MOVE      R21 R19      ; R21 := R19
526 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
527 [-]: GETGLOBAL R21 K2       ; R21 := 0xae91e43b
528 [-]: SELF      R21 R21 K9   ; R22 := R21; R21 := R21[0x67bc869f]
529 [-]: MOVE      R23 R20      ; R23 := R20
530 [-]: CONST     R24 10       ; R24 := 10.000000
531 [-]: CONST     R25 0        ; R25 := 0.000000
532 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
533 [-]: FORLOOP   R16 524      ; R16 += R18; if R16 <= R17 then begin PC := 524; R19 := R16 end
534 [-]: TESTSET   R21 R14 0    ; if not R14 then PC := 541 else R21 := R14
535 [-]: JMP       541          ; PC := 541
536 [-]: TESTSET   R21 R6 1     ; if R6 then PC := 541 else R21 := R6
537 [-]: JMP       541          ; PC := 541
538 [-]: GETGLOBAL R21 K11      ; R21 := 0x7b998233
539 [-]: GETGLOBAL R22 K75      ; R22 := mPvpMovie
540 [-]: CALL      R21 2 2      ; R21 := R21(R22)
541 [-]: SETGLOBAL R21 K118     ; mWaitingForMissionComplete := R21
542 [-]: GETGLOBAL R21 K118     ; R21 := mWaitingForMissionComplete
543 [-]: TEST      R21 0        ; if not R21 then PC := 564
544 [-]: JMP       564          ; PC := 564
545 [-]: GETGLOBAL R21 K2       ; R21 := 0xae91e43b
546 [-]: SELF      R21 R21 K9   ; R22 := R21; R21 := R21[0x67bc869f]
547 [-]: LOADK     R23 K119     ; R23 := "TopAnchor.Header"
548 [-]: CONST     R24 10       ; R24 := 10.000000
549 [-]: CONST     R25 0        ; R25 := 0.000000
550 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
551 [-]: GETGLOBAL R21 K120     ; R21 := 0x38f10e85
552 [-]: GETGLOBAL R22 K2       ; R22 := 0xae91e43b
553 [-]: LOADK     R23 K121     ; R23 := "MissionComplete.gotoAndStop"
554 [-]: LOADK     R24 K122     ; R24 := "2"
555 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
556 [-]: GETUPVAL  R21 U0       ; R21 := U0
557 [-]: GETTABLE  R21 R21 K123 ; R21 := R21[0x56d89411]
558 [-]: LOADKB    R22 1 0      ; R22 := true
559 [-]: CALL      R21 2 1      ; R21(R22)
560 [-]: GETGLOBAL R21 K2       ; R21 := 0xae91e43b
561 [-]: SELF      R21 R21 K83  ; R22 := R21; R21 := R21[0xbed40e9c]
562 [-]: LOADKB    R23 1 0      ; R23 := true
563 [-]: CALL      R21 3 1      ; R21(R22,R23)
564 [-]: TEST      R14 1        ; if R14 then PC := 568
565 [-]: JMP       568          ; PC := 568
566 [-]: TEST      R0 1         ; if R0 then PC := 589
567 [-]: JMP       589          ; PC := 589
568 [-]: GETGLOBAL R21 K124     ; R21 := 0x76ea806b
569 [-]: SELF      R21 R21 K125 ; R22 := R21; R21 := R21[0x3f3ae64c]
570 [-]: CONST     R23 0        ; R23 := 0.000000
571 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
572 [-]: GETGLOBAL R22 K11      ; R22 := 0x7b998233
573 [-]: MOVE      R23 R21      ; R23 := R21
574 [-]: CALL      R22 2 2      ; R22 := R22(R23)
575 [-]: TEST      R22 0        ; if not R22 then PC := 578
576 [-]: JMP       578          ; PC := 578
577 [-]: RETURN    R0 1         ; return 
578 [-]: SELF      R22 R21 K126 ; R23 := R21; R22 := R21[0x40e9c32b]
579 [-]: CALL      R22 2 2      ; R22 := R22(R23)
580 [-]: SELF      R23 R22 K127 ; R24 := R22; R23 := R22[0xbaca14fc]
581 [-]: CALL      R23 2 2      ; R23 := R23(R24)
582 [-]: DIV       R24 R23 K128 ; R24 := R23 / 2.000000
583 [-]: LE        1 K129 R24   ; if 1.000000 <= R24 then PC := 586
584 [-]: JMP       586          ; PC := 586
585 [-]: LOADKB    R24 0 1      ; R24 := false; PC := 586
586 [-]: LOADKB    R24 1 0      ; R24 := true
587 [-]: SETUPVAL  R24 U14      ; U82 := R14
588 [-]: JMP       591          ; PC := 591
589 [-]: LOADKB    R24 1 0      ; R24 := true
590 [-]: SETUPVAL  R24 U14      ; U82 := R14
591 [-]: GETUPVAL  R24 U7       ; R24 := U7
592 [-]: GETTABLE  R24 R24 K48  ; R24 := R24["isPvp"]
593 [-]: TEST      R24 0        ; if not R24 then PC := 623
594 [-]: JMP       623          ; PC := 623
595 [-]: GETUPVAL  R24 U15      ; R24 := U15
596 [-]: CALL      R24 1 1      ; R24()
597 [-]: CONST     R24 25       ; R24 := 25.000000
598 [-]: SETGLOBAL R24 K22      ; AUTO_CLOSE_DELAY := R24
599 [-]: GETGLOBAL R24 K18      ; R24 := _T
600 [-]: GETTABLE  R24 R24 K59  ; R24 := R24["eomScreenMode"]
601 [-]: GETUPVAL  R25 U10      ; R25 := U10
602 [-]: GETTABLE  R25 R25 K60  ; R25 := R25["ACTUAL_EOM"]
603 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 628
604 [-]: JMP       628          ; PC := 628
605 [-]: GETGLOBAL R24 K18      ; R24 := _T
606 [-]: GETTABLE  R24 R24 K130 ; R24 := R24["TopMenuOpen"]
607 [-]: TEST      R24 0        ; if not R24 then PC := 628
608 [-]: JMP       628          ; PC := 628
609 [-]: GETGLOBAL R24 K28      ; R24 := 0x9ba7909f
610 [-]: SELF      R24 R24 K31  ; R25 := R24; R24 := R24[0xbcfb64ab]
611 [-]: GETGLOBAL R26 K62      ; R26 := 0x6a400c4e
612 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
613 [-]: GETGLOBAL R25 K11      ; R25 := 0x7b998233
614 [-]: MOVE      R26 R24      ; R26 := R24
615 [-]: CALL      R25 2 2      ; R25 := R25(R26)
616 [-]: TEST      R25 1        ; if R25 then PC := 628
617 [-]: JMP       628          ; PC := 628
618 [-]: SELF      R25 R24 K32  ; R26 := R24; R25 := R24[0xe4162eed]
619 [-]: LOADK     R27 K131     ; R27 := "ForceClose"
620 [-]: LOADK     R28 K34      ; R28 := ""
621 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
622 [-]: JMP       628          ; PC := 628
623 [-]: GETUPVAL  R25 U12      ; R25 := U12
624 [-]: EQ        1 R25 K34    ; if R25 == "" then PC := 628
625 [-]: JMP       628          ; PC := 628
626 [-]: CONST     R25 14       ; R25 := 14.000000
627 [-]: SETGLOBAL R25 K22      ; AUTO_CLOSE_DELAY := R25
628 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
629 [-]: SELF      R25 R25 K132 ; R26 := R25; R25 := R25[0xaa503602]
630 [-]: LOADKB    R27 0 0      ; R27 := false
631 [-]: CALL      R25 3 1      ; R25(R26,R27)
632 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
633 [-]: SELF      R25 R25 K133 ; R26 := R25; R25 := R25[0x2d6bad65]
634 [-]: GETGLOBAL R27 K7       ; R27 := 0x0032441c
635 [-]: GETTABLE  R27 R27 K134 ; R27 := R27["UIMaterial_Plain"]
636 [-]: CALL      R25 3 1      ; R25(R26,R27)
637 [-]: TEST      R0 1         ; if R0 then PC := 645
638 [-]: JMP       645          ; PC := 645
639 [-]: GETUPVAL  R25 U16      ; R25 := U16
640 [-]: GETTABLE  R25 R25 K135 ; R25 := R25[0x659d451f]
641 [-]: GETGLOBAL R26 K7       ; R26 := 0x0032441c
642 [-]: GETTABLE  R26 R26 K136 ; R26 := R26["UISound_GridOpen"]
643 [-]: CALL      R25 2 1      ; R25(R26)
644 [-]: JMP       678          ; PC := 678
645 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
646 [-]: SELF      R25 R25 K137 ; R26 := R25; R25 := R25[0x767c0947]
647 [-]: LOADKB    R27 1 0      ; R27 := true
648 [-]: CALL      R25 3 1      ; R25(R26,R27)
649 [-]: GETGLOBAL R25 K113     ; R25 := 0x89326c93
650 [-]: SELF      R25 R25 K114 ; R26 := R25; R25 := R25[0x18d05d30]
651 [-]: CALL      R25 2 2      ; R25 := R25(R26)
652 [-]: TEST      R25 0        ; if not R25 then PC := 678
653 [-]: JMP       678          ; PC := 678
654 [-]: TEST      R14 0        ; if not R14 then PC := 678
655 [-]: JMP       678          ; PC := 678
656 [-]: GETUPVAL  R25 U17      ; R25 := U17
657 [-]: CALL      R25 1 2      ; R25 := R25()
658 [-]: TEST      R25 0        ; if not R25 then PC := 664
659 [-]: JMP       664          ; PC := 664
660 [-]: GETGLOBAL R25 K18      ; R25 := _T
661 [-]: GETTABLE  R25 R25 K138 ; R25 := R25["EndlessExtermination_ForceEomForAll"]
662 [-]: TEST      R25 1        ; if R25 then PC := 678
663 [-]: JMP       678          ; PC := 678
664 [-]: GETUPVAL  R25 U2       ; R25 := U2
665 [-]: CALL      R25 1 2      ; R25 := R25()
666 [-]: TEST      R25 1        ; if R25 then PC := 678
667 [-]: JMP       678          ; PC := 678
668 [-]: GETGLOBAL R25 K113     ; R25 := 0x89326c93
669 [-]: SELF      R25 R25 K139 ; R26 := R25; R25 := R25[0x29ef273d]
670 [-]: CALL      R25 2 2      ; R25 := R25(R26)
671 [-]: SELF      R26 R25 K140 ; R27 := R25; R26 := R25[0x66905cb0]
672 [-]: CALL      R26 2 2      ; R26 := R26(R27)
673 [-]: SELF      R26 R26 K141 ; R27 := R26; R26 := R26[0x383d2e7d]
674 [-]: LOADKB    R28 0 0      ; R28 := false
675 [-]: CALL      R26 3 1      ; R26(R27,R28)
676 [-]: SELF      R26 R25 K142 ; R27 := R25; R26 := R25[0xbe2e8ea1]
677 [-]: CALL      R26 2 1      ; R26(R27)
678 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
679 [-]: SELF      R26 R26 K105 ; R27 := R26; R26 := R26[0x5f56eeab]
680 [-]: LOADK     R28 K143     ; R28 := "MainMenu.Label"
681 [-]: CONST     R29 29       ; R29 := 29.000000
682 [-]: LOADK     R30 K144     ; R30 := "MAIN MENU"
683 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
684 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
685 [-]: SELF      R26 R26 K145 ; R27 := R26; R26 := R26[0x0c33ebb2]
686 [-]: LOADK     R28 K146     ; R28 := "MainMenu"
687 [-]: LOADK     R29 K147     ; R29 := "callback"
688 [-]: LOADK     R30 K146     ; R30 := "MainMenu"
689 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
690 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
691 [-]: SELF      R26 R26 K4   ; R27 := R26; R26 := R26[0xaade900e]
692 [-]: LOADK     R28 K146     ; R28 := "MainMenu"
693 [-]: CONST     R29 11       ; R29 := 11.000000
694 [-]: LOADKB    R30 0 0      ; R30 := false
695 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
696 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
697 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0x67bc869f]
698 [-]: LOADK     R28 K81      ; R28 := "ExpandableArea"
699 [-]: CONST     R29 1        ; R29 := 1.000000
700 [-]: CONST     R30 1600     ; R30 := 1600.000000
701 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
702 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
703 [-]: SELF      R26 R26 K148 ; R27 := R26; R26 := R26[0x1e5b5cfe]
704 [-]: LOADK     R28 K149     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
705 [-]: LOADK     R29 K150     ; R29 := "PreviewDiorama"
706 [-]: LOADK     R30 K151     ; R30 := "EndDioramaPreview"
707 [-]: LOADNIL   R31 R32      ; R31 := R32 := nil
708 [-]: CALL      R26 7 1      ; R26(R27,R28,R29,R30,R31,R32)
709 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
710 [-]: SELF      R26 R26 K148 ; R27 := R26; R26 := R26[0x1e5b5cfe]
711 [-]: LOADK     R28 K152     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Btn"
712 [-]: LOADK     R29 K153     ; R29 := "ExpandFocused"
713 [-]: LOADK     R30 K154     ; R30 := "ExpandUnfocused"
714 [-]: LOADNIL   R31 R31      ; R31 := nil
715 [-]: LOADK     R32 K155     ; R32 := "ExpandPressed"
716 [-]: CALL      R26 7 1      ; R26(R27,R28,R29,R30,R31,R32)
717 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
718 [-]: SELF      R26 R26 K156 ; R27 := R26; R26 := R26[0x5ee2cc30]
719 [-]: LOADK     R28 K157     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
720 [-]: LOADK     R29 K158     ; R29 := "OnExpandArrowFrameEnter"
721 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
722 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
723 [-]: SELF      R26 R26 K156 ; R27 := R26; R26 := R26[0x5ee2cc30]
724 [-]: LOADK     R28 K159     ; R28 := "MissionComplete.TextAnim"
725 [-]: LOADK     R29 K160     ; R29 := "OnTextAnimFrameEnter"
726 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
727 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
728 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
729 [-]: LOADK     R28 K162     ; R28 := "ExpandableArea.Progression.Lines.Mid"
730 [-]: GETGLOBAL R29 K163     ; R29 := 0x5dcb0a6f
731 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
732 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
733 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
734 [-]: LOADK     R28 K164     ; R28 := "ExpandableArea.Progression.Lines.LeftCorner"
735 [-]: GETGLOBAL R29 K163     ; R29 := 0x5dcb0a6f
736 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
737 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
738 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
739 [-]: LOADK     R28 K165     ; R28 := "ExpandableArea.Progression.Lines.RightCorner"
740 [-]: GETGLOBAL R29 K163     ; R29 := 0x5dcb0a6f
741 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
742 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
743 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
744 [-]: LOADK     R28 K166     ; R28 := "ExpandableArea.Progression.Lines.LeftSide"
745 [-]: GETGLOBAL R29 K163     ; R29 := 0x5dcb0a6f
746 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
747 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
748 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
749 [-]: LOADK     R28 K167     ; R28 := "ExpandableArea.Progression.Lines.RightSide"
750 [-]: GETGLOBAL R29 K163     ; R29 := 0x5dcb0a6f
751 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
752 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
753 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
754 [-]: LOADK     R28 K168     ; R28 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Mid"
755 [-]: GETGLOBAL R29 K169     ; R29 := 0xea90a9b2
756 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
757 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
758 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
759 [-]: LOADK     R28 K170     ; R28 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.LeftSwoop"
760 [-]: GETGLOBAL R29 K169     ; R29 := 0xea90a9b2
761 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
762 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
763 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
764 [-]: LOADK     R28 K171     ; R28 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.RightSwoop"
765 [-]: GETGLOBAL R29 K169     ; R29 := 0xea90a9b2
766 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
767 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
768 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
769 [-]: LOADK     R28 K172     ; R28 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Left"
770 [-]: GETGLOBAL R29 K169     ; R29 := 0xea90a9b2
771 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
772 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
773 [-]: SELF      R26 R26 K161 ; R27 := R26; R26 := R26[0xd5181643]
774 [-]: LOADK     R28 K173     ; R28 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Right"
775 [-]: GETGLOBAL R29 K169     ; R29 := 0xea90a9b2
776 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
777 [-]: GETUPVAL  R26 U18      ; R26 := U18
778 [-]: CALL      R26 1 2      ; R26 := R26()
779 [-]: TEST      R26 1        ; if R26 then PC := 783
780 [-]: JMP       783          ; PC := 783
781 [-]: TEST      R14 0        ; if not R14 then PC := 790
782 [-]: JMP       790          ; PC := 790
783 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
784 [-]: SELF      R26 R26 K4   ; R27 := R26; R26 := R26[0xaade900e]
785 [-]: LOADK     R28 K149     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
786 [-]: CONST     R29 11       ; R29 := 11.000000
787 [-]: LOADKB    R30 0 0      ; R30 := false
788 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
789 [-]: JMP       812          ; PC := 812
790 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
791 [-]: SELF      R26 R26 K105 ; R27 := R26; R26 := R26[0x5f56eeab]
792 [-]: LOADK     R28 K174     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
793 [-]: CONST     R29 29       ; R29 := 29.000000
794 [-]: GETGLOBAL R30 K2       ; R30 := 0xae91e43b
795 [-]: SELF      R30 R30 K175 ; R31 := R30; R30 := R30[0x42b04007]
796 [-]: LOADK     R32 K176     ; R32 := "<PREVIEW>"
797 [-]: LOADKB    R33 1 0      ; R33 := true
798 [-]: CALL      R30 4 0      ; R30,... := R30(R31,R32,R33)
799 [-]: CALL      R26 0 1      ; R26(R27,...)
800 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
801 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0x67bc869f]
802 [-]: LOADK     R28 K174     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
803 [-]: CONST     R29 10       ; R29 := 10.000000
804 [-]: CONST     R30 60       ; R30 := 60.000000
805 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
806 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
807 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0x67bc869f]
808 [-]: LOADK     R28 K177     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconBacker"
809 [-]: CONST     R29 10       ; R29 := 10.000000
810 [-]: GETGLOBAL R30 K178     ; R30 := BACKER_ALPHA
811 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
812 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
813 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0x67bc869f]
814 [-]: LOADK     R28 K157     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
815 [-]: CONST     R29 1        ; R29 := 1.000000
816 [-]: CONST     R30 70       ; R30 := 70.000000
817 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
818 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
819 [-]: SELF      R26 R26 K4   ; R27 := R26; R26 := R26[0xaade900e]
820 [-]: LOADK     R28 K157     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
821 [-]: CONST     R29 11       ; R29 := 11.000000
822 [-]: LOADKB    R30 0 0      ; R30 := false
823 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
824 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
825 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0x67bc869f]
826 [-]: LOADK     R28 K179     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
827 [-]: CONST     R29 1        ; R29 := 1.000000
828 [-]: CONST     R30 70       ; R30 := 70.000000
829 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
830 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
831 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0x67bc869f]
832 [-]: LOADK     R28 K180     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
833 [-]: CONST     R29 1        ; R29 := 1.000000
834 [-]: CONST     R30 70       ; R30 := 70.000000
835 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
836 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
837 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0x67bc869f]
838 [-]: LOADK     R28 K181     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
839 [-]: CONST     R29 1        ; R29 := 1.000000
840 [-]: CONST     R30 0        ; R30 := 0.000000
841 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
842 [-]: GETGLOBAL R26 K120     ; R26 := 0x38f10e85
843 [-]: GETGLOBAL R27 K2       ; R27 := 0xae91e43b
844 [-]: LOADK     R28 K182     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.gotoAndStop"
845 [-]: LOADK     R29 K183     ; R29 := "1"
846 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
847 [-]: GETGLOBAL R26 K120     ; R26 := 0x38f10e85
848 [-]: GETGLOBAL R27 K2       ; R27 := 0xae91e43b
849 [-]: LOADK     R28 K184     ; R28 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross.gotoAndStop"
850 [-]: LOADK     R29 K183     ; R29 := "1"
851 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
852 [-]: GETGLOBAL R26 K11      ; R26 := 0x7b998233
853 [-]: GETGLOBAL R27 K12      ; R27 := 0xbe190284
854 [-]: CALL      R26 2 2      ; R26 := R26(R27)
855 [-]: TEST      R26 1        ; if R26 then PC := 881
856 [-]: JMP       881          ; PC := 881
857 [-]: GETGLOBAL R26 K12      ; R26 := 0xbe190284
858 [-]: SELF      R26 R26 K185 ; R27 := R26; R26 := R26[0x33307f92]
859 [-]: CALL      R26 2 2      ; R26 := R26(R27)
860 [-]: GETGLOBAL R27 K11      ; R27 := 0x7b998233
861 [-]: MOVE      R28 R26      ; R28 := R26
862 [-]: CALL      R27 2 2      ; R27 := R27(R28)
863 [-]: TEST      R27 1        ; if R27 then PC := 881
864 [-]: JMP       881          ; PC := 881
865 [-]: TEST      R14 0        ; if not R14 then PC := 881
866 [-]: JMP       881          ; PC := 881
867 [-]: TEST      R0 0         ; if not R0 then PC := 881
868 [-]: JMP       881          ; PC := 881
869 [-]: GETUPVAL  R27 U2       ; R27 := U2
870 [-]: CALL      R27 1 2      ; R27 := R27()
871 [-]: TEST      R27 1        ; if R27 then PC := 876
872 [-]: JMP       876          ; PC := 876
873 [-]: SELF      R27 R26 K85  ; R28 := R26; R27 := R26[0x368ad758]
874 [-]: LOADKB    R29 0 0      ; R29 := false
875 [-]: CALL      R27 3 1      ; R27(R28,R29)
876 [-]: GETGLOBAL R27 K12      ; R27 := 0xbe190284
877 [-]: SELF      R27 R27 K186 ; R28 := R27; R27 := R27[0x603d0ebe]
878 [-]: CALL      R27 2 1      ; R27(R28)
879 [-]: GETGLOBAL R27 K18      ; R27 := _T
880 [-]: SETTABLE  R27 K187 K38 ; R27["MissionEnded"] := true
881 [-]: TEST      R0 1         ; if R0 then PC := 888
882 [-]: JMP       888          ; PC := 888
883 [-]: TEST      R14 1        ; if R14 then PC := 888
884 [-]: JMP       888          ; PC := 888
885 [-]: LOADKB    R27 0 0      ; R27 := false
886 [-]: SETGLOBAL R27 K188     ; mInputBlocked := R27
887 [-]: JMP       928          ; PC := 928
888 [-]: TEST      R0 1         ; if R0 then PC := 917
889 [-]: JMP       917          ; PC := 917
890 [-]: TEST      R14 0        ; if not R14 then PC := 917
891 [-]: JMP       917          ; PC := 917
892 [-]: GETGLOBAL R27 K28      ; R27 := 0x9ba7909f
893 [-]: SELF      R27 R27 K31  ; R28 := R27; R27 := R27[0xbcfb64ab]
894 [-]: GETUPVAL  R29 U16      ; R29 := U16
895 [-]: GETTABLE  R29 R29 K189 ; R29 := R29[0xc472e470]
896 [-]: CALL      R29 1 0      ; R29,... := R29()
897 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
898 [-]: GETGLOBAL R28 K11      ; R28 := 0x7b998233
899 [-]: MOVE      R29 R27      ; R29 := R27
900 [-]: CALL      R28 2 2      ; R28 := R28(R29)
901 [-]: TEST      R28 1        ; if R28 then PC := 911
902 [-]: JMP       911          ; PC := 911
903 [-]: SELF      R28 R27 K32  ; R29 := R27; R28 := R27[0xe4162eed]
904 [-]: LOADK     R30 K190     ; R30 := "EnableInput"
905 [-]: LOADK     R31 K34      ; R31 := ""
906 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
907 [-]: SELF      R28 R27 K32  ; R29 := R27; R28 := R27[0xe4162eed]
908 [-]: LOADK     R30 K191     ; R30 := "DisableInput"
909 [-]: LOADK     R31 K34      ; R31 := ""
910 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
911 [-]: GETUPVAL  R28 U1       ; R28 := U1
912 [-]: TEST      R28 1        ; if R28 then PC := 928
913 [-]: JMP       928          ; PC := 928
914 [-]: LOADKB    R28 1 0      ; R28 := true
915 [-]: SETUPVAL  R28 U19      ; U82 := R19
916 [-]: JMP       928          ; PC := 928
917 [-]: GETGLOBAL R28 K18      ; R28 := _T
918 [-]: GETTABLE  R28 R28 K59  ; R28 := R28["eomScreenMode"]
919 [-]: GETUPVAL  R29 U10      ; R29 := U10
920 [-]: GETTABLE  R29 R29 K69  ; R29 := R29["QUICK_PREVIEW"]
921 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 928
922 [-]: JMP       928          ; PC := 928
923 [-]: GETUPVAL  R28 U1       ; R28 := U1
924 [-]: TEST      R28 1        ; if R28 then PC := 928
925 [-]: JMP       928          ; PC := 928
926 [-]: LOADKB    R28 1 0      ; R28 := true
927 [-]: SETUPVAL  R28 U19      ; U82 := R19
928 [-]: GETGLOBAL R28 K11      ; R28 := 0x7b998233
929 [-]: GETGLOBAL R29 K192     ; R29 := mCountdownMessage
930 [-]: CALL      R28 2 2      ; R28 := R28(R29)
931 [-]: TEST      R28 0        ; if not R28 then PC := 970
932 [-]: JMP       970          ; PC := 970
933 [-]: GETUPVAL  R28 U7       ; R28 := U7
934 [-]: GETTABLE  R28 R28 K48  ; R28 := R28["isPvp"]
935 [-]: TEST      R28 0        ; if not R28 then PC := 964
936 [-]: JMP       964          ; PC := 964
937 [-]: GETUPVAL  R28 U7       ; R28 := U7
938 [-]: GETTABLE  R28 R28 K193 ; R28 := R28["pvpType"]
939 [-]: EQ        0 R28 K194   ; if R28 ~= 4.000000 then PC := 957
940 [-]: JMP       957          ; PC := 957
941 [-]: TEST      R14 0        ; if not R14 then PC := 950
942 [-]: JMP       950          ; PC := 950
943 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
944 [-]: SELF      R28 R28 K175 ; R29 := R28; R28 := R28[0x42b04007]
945 [-]: LOADK     R30 K195     ; R30 := "/Lotus/Language/Menu/NextRoundTime"
946 [-]: LOADKB    R31 0 0      ; R31 := false
947 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
948 [-]: SETGLOBAL R28 K192     ; mCountdownMessage := R28
949 [-]: JMP       970          ; PC := 970
950 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
951 [-]: SELF      R28 R28 K175 ; R29 := R28; R28 := R28[0x42b04007]
952 [-]: LOADK     R30 K196     ; R30 := "/Lotus/Language/Menu/NextHalfTime"
953 [-]: LOADKB    R31 0 0      ; R31 := false
954 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
955 [-]: SETGLOBAL R28 K192     ; mCountdownMessage := R28
956 [-]: JMP       970          ; PC := 970
957 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
958 [-]: SELF      R28 R28 K175 ; R29 := R28; R28 := R28[0x42b04007]
959 [-]: LOADK     R30 K195     ; R30 := "/Lotus/Language/Menu/NextRoundTime"
960 [-]: LOADKB    R31 0 0      ; R31 := false
961 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
962 [-]: SETGLOBAL R28 K192     ; mCountdownMessage := R28
963 [-]: JMP       970          ; PC := 970
964 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
965 [-]: SELF      R28 R28 K175 ; R29 := R28; R28 := R28[0x42b04007]
966 [-]: LOADK     R30 K197     ; R30 := "/Lotus/Language/Menu/EndOfMission_ReturnToMainMenu"
967 [-]: LOADKB    R31 0 0      ; R31 := false
968 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
969 [-]: SETGLOBAL R28 K192     ; mCountdownMessage := R28
970 [-]: GETUPVAL  R28 U20      ; R28 := U20
971 [-]: CALL      R28 1 1      ; R28()
972 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
973 [-]: SELF      R28 R28 K198 ; R29 := R28; R28 := R28[0xef99134f]
974 [-]: LOADK     R30 K199     ; R30 := "ExpandableArea.Progression.Tile"
975 [-]: GETGLOBAL R31 K200     ; R31 := 0x2e279a6d
976 [-]: GETGLOBAL R32 K163     ; R32 := 0x5dcb0a6f
977 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
978 [-]: TEST      R0 1         ; if R0 then PC := 986
979 [-]: JMP       986          ; PC := 986
980 [-]: GETGLOBAL R28 K18      ; R28 := _T
981 [-]: GETTABLE  R28 R28 K59  ; R28 := R28["eomScreenMode"]
982 [-]: GETUPVAL  R29 U10      ; R29 := U10
983 [-]: GETTABLE  R29 R29 K63  ; R29 := R29["DETAILED_PREVIEW"]
984 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 1008
985 [-]: JMP       1008         ; PC := 1008
986 [-]: CONST     R28 1        ; R28 := 1.000000
987 [-]: CONST     R29 9        ; R29 := 9.000000
988 [-]: CONST     R30 1        ; R30 := 1.000000
989 [-]: FORPREP   R28 1007     ; R28 -= R30; PC := 1007
990 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
991 [-]: SELF      R32 R32 K161 ; R33 := R32; R32 := R32[0xd5181643]
992 [-]: LOADK     R34 K201     ; R34 := "ExpandableArea.Progression.Affinity.Grid.Item"
993 [-]: MOVE      R35 R31      ; R35 := R31
994 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
995 [-]: GETGLOBAL R35 K7       ; R35 := 0x0032441c
996 [-]: GETTABLE  R35 R35 K202 ; R35 := R35["UIMaterial_SmoothEdgeNoDepthTest"]
997 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
998 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
999 [-]: SELF      R32 R32 K161 ; R33 := R32; R32 := R32[0xd5181643]
1000 [-]: LOADK     R34 K201     ; R34 := "ExpandableArea.Progression.Affinity.Grid.Item"
1001 [-]: MOVE      R35 R31      ; R35 := R31
1002 [-]: LOADK     R36 K203     ; R36 := ".Info"
1003 [-]: CONCAT    R34 R34 R36  ; R34 := R34 .. R35 .. R36
1004 [-]: GETGLOBAL R35 K7       ; R35 := 0x0032441c
1005 [-]: GETTABLE  R35 R35 K202 ; R35 := R35["UIMaterial_SmoothEdgeNoDepthTest"]
1006 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
1007 [-]: FORLOOP   R28 990      ; R28 += R30; if R28 <= R29 then begin PC := 990; R31 := R28 end
1008 [-]: GETUPVAL  R32 U21      ; R32 := U21
1009 [-]: CALL      R32 1 2      ; R32 := R32()
1010 [-]: TEST      R32 0        ; if not R32 then PC := 1018
1011 [-]: JMP       1018         ; PC := 1018
1012 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1013 [-]: SELF      R32 R32 K9   ; R33 := R32; R32 := R32[0x67bc869f]
1014 [-]: LOADK     R34 K204     ; R34 := "TopAnchor.Header.Desc"
1015 [-]: CONST     R35 10       ; R35 := 10.000000
1016 [-]: CONST     R36 0        ; R36 := 0.000000
1017 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1018 [-]: GETUPVAL  R32 U18      ; R32 := U18
1019 [-]: CALL      R32 1 2      ; R32 := R32()
1020 [-]: TEST      R32 0        ; if not R32 then PC := 1065
1021 [-]: JMP       1065         ; PC := 1065
1022 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1023 [-]: SELF      R32 R32 K4   ; R33 := R32; R32 := R32[0xaade900e]
1024 [-]: LOADK     R34 K181     ; R34 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
1025 [-]: CONST     R35 11       ; R35 := 11.000000
1026 [-]: LOADKB    R36 1 0      ; R36 := true
1027 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1028 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1029 [-]: SELF      R32 R32 K4   ; R33 := R32; R32 := R32[0xaade900e]
1030 [-]: LOADK     R34 K205     ; R34 := "ExpandableArea.Progression.Rewards.Categories"
1031 [-]: CONST     R35 11       ; R35 := 11.000000
1032 [-]: LOADKB    R36 0 0      ; R36 := false
1033 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1034 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1035 [-]: SELF      R32 R32 K4   ; R33 := R32; R32 := R32[0xaade900e]
1036 [-]: LOADK     R34 K206     ; R34 := "ExpandableArea.Progression.Rewards.SearchAndSort"
1037 [-]: CONST     R35 11       ; R35 := 11.000000
1038 [-]: LOADKB    R36 0 0      ; R36 := false
1039 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1040 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1041 [-]: SELF      R32 R32 K9   ; R33 := R32; R32 := R32[0x67bc869f]
1042 [-]: LOADK     R34 K207     ; R34 := "ExpandableArea.Progression.Rewards.Items"
1043 [-]: CONST     R35 1        ; R35 := 1.000000
1044 [-]: CONST     R36 -6       ; R36 := -6.000000
1045 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1046 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1047 [-]: SELF      R32 R32 K9   ; R33 := R32; R32 := R32[0x67bc869f]
1048 [-]: LOADK     R34 K208     ; R34 := "ExpandableArea.Progression.Affinity.Grid"
1049 [-]: CONST     R35 1        ; R35 := 1.000000
1050 [-]: CONST     R36 -6       ; R36 := -6.000000
1051 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1052 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1053 [-]: SELF      R32 R32 K9   ; R33 := R32; R32 := R32[0x67bc869f]
1054 [-]: LOADK     R34 K209     ; R34 := "ExpandableArea.Progression.Rewards.ScrollBar"
1055 [-]: CONST     R35 1        ; R35 := 1.000000
1056 [-]: CONST     R36 -70      ; R36 := -70.000000
1057 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1058 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1059 [-]: SELF      R32 R32 K9   ; R33 := R32; R32 := R32[0x67bc869f]
1060 [-]: LOADK     R34 K210     ; R34 := "ExpandableArea.Progression.Affinity.ScrollBar"
1061 [-]: CONST     R35 1        ; R35 := 1.000000
1062 [-]: CONST     R36 -2       ; R36 := -2.000000
1063 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1064 [-]: JMP       1102         ; PC := 1102
1065 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1066 [-]: SELF      R32 R32 K4   ; R33 := R32; R32 := R32[0xaade900e]
1067 [-]: LOADK     R34 K181     ; R34 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
1068 [-]: CONST     R35 11       ; R35 := 11.000000
1069 [-]: LOADKB    R36 0 0      ; R36 := false
1070 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1071 [-]: GETGLOBAL R32 K18      ; R32 := _T
1072 [-]: GETTABLE  R32 R32 K59  ; R32 := R32["eomScreenMode"]
1073 [-]: GETUPVAL  R33 U10      ; R33 := U10
1074 [-]: GETTABLE  R33 R33 K63  ; R33 := R33["DETAILED_PREVIEW"]
1075 [-]: EQ        0 R32 R33    ; if R32 ~= R33 then PC := 1085
1076 [-]: JMP       1085         ; PC := 1085
1077 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1078 [-]: SELF      R32 R32 K9   ; R33 := R32; R32 := R32[0x67bc869f]
1079 [-]: LOADK     R34 K10      ; R34 := "_root"
1080 [-]: CONST     R35 10       ; R35 := 10.000000
1081 [-]: CONST     R36 100      ; R36 := 100.000000
1082 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1083 [-]: LOADKB    R32 0 0      ; R32 := false
1084 [-]: SETGLOBAL R32 K188     ; mInputBlocked := R32
1085 [-]: TEST      R0 0         ; if not R0 then PC := 1096
1086 [-]: JMP       1096         ; PC := 1096
1087 [-]: GETGLOBAL R32 K18      ; R32 := _T
1088 [-]: GETTABLE  R32 R32 K59  ; R32 := R32["eomScreenMode"]
1089 [-]: GETUPVAL  R33 U10      ; R33 := U10
1090 [-]: GETTABLE  R33 R33 K60  ; R33 := R33["ACTUAL_EOM"]
1091 [-]: EQ        1 R32 R33    ; if R32 == R33 then PC := 1096
1092 [-]: JMP       1096         ; PC := 1096
1093 [-]: LOADKB    R32 0 0      ; R32 := false
1094 [-]: TEST      R32 0        ; if not R32 then PC := 1102
1095 [-]: JMP       1102         ; PC := 1102
1096 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
1097 [-]: SELF      R32 R32 K4   ; R33 := R32; R32 := R32[0xaade900e]
1098 [-]: LOADK     R34 K157     ; R34 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
1099 [-]: CONST     R35 11       ; R35 := 11.000000
1100 [-]: LOADKB    R36 1 0      ; R36 := true
1101 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1102 [-]: GETGLOBAL R32 K11      ; R32 := 0x7b998233
1103 [-]: GETGLOBAL R33 K211     ; R33 := mPlayerMissionInfo
1104 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1105 [-]: TEST      R32 0        ; if not R32 then PC := 1111
1106 [-]: JMP       1111         ; PC := 1111
1107 [-]: GETGLOBAL R32 K49      ; R32 := 0x6c97a788
1108 [-]: GETTABLE  R32 R32 K212 ; R32 := R32[0xc1495463]
1109 [-]: CALL      R32 1 2      ; R32 := R32()
1110 [-]: SETGLOBAL R32 K211     ; mPlayerMissionInfo := R32
1111 [-]: GETUPVAL  R32 U22      ; R32 := U22
1112 [-]: MOVE      R33 R0       ; R33 := R0
1113 [-]: MOVE      R34 R14      ; R34 := R14
1114 [-]: CALL      R32 3 1      ; R32(R33,R34)
1115 [-]: GETUPVAL  R32 U23      ; R32 := U23
1116 [-]: CALL      R32 1 1      ; R32()
1117 [-]: LOADKB    R32 0 0      ; R32 := false
1118 [-]: TEST      R0 0         ; if not R0 then PC := 1124
1119 [-]: JMP       1124         ; PC := 1124
1120 [-]: GETGLOBAL R33 K12      ; R33 := 0xbe190284
1121 [-]: SELF      R33 R33 K213 ; R34 := R33; R33 := R33[0x5d204145]
1122 [-]: CALL      R33 2 2      ; R33 := R33(R34)
1123 [-]: MOVE      R32 R33      ; R32 := R33
1124 [-]: TESTSET   R33 R0 0     ; if not R0 then PC := 1146 else R33 := R0
1125 [-]: JMP       1146         ; PC := 1146
1126 [-]: TEST      R32 1        ; if R32 then PC := 1144
1127 [-]: JMP       1144         ; PC := 1144
1128 [-]: EQ        0 R3 K109    ; if R3 ~= 11.000000 then PC := 1144
1129 [-]: JMP       1144         ; PC := 1144
1130 [-]: GETGLOBAL R33 K18      ; R33 := _T
1131 [-]: GETTABLE  R33 R33 K214 ; R33 := R33["InParkourTutorial"]
1132 [-]: TEST      R33 1        ; if R33 then PC := 1144
1133 [-]: JMP       1144         ; PC := 1144
1134 [-]: GETGLOBAL R33 K7       ; R33 := 0x0032441c
1135 [-]: GETTABLE  R33 R33 K215 ; R33 := R33["IsTrainingMissionPractise"]
1136 [-]: TEST      R33 1        ; if R33 then PC := 1144
1137 [-]: JMP       1144         ; PC := 1144
1138 [-]: GETGLOBAL R33 K18      ; R33 := _T
1139 [-]: GETTABLE  R33 R33 K59  ; R33 := R33["eomScreenMode"]
1140 [-]: GETUPVAL  R34 U10      ; R34 := U10
1141 [-]: GETTABLE  R34 R34 K60  ; R34 := R34["ACTUAL_EOM"]
1142 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 1145
1143 [-]: JMP       1145         ; PC := 1145
1144 [-]: LOADKB    R33 0 1      ; R33 := false; PC := 1145
1145 [-]: LOADKB    R33 1 0      ; R33 := true
1146 [-]: TEST      R33 0        ; if not R33 then PC := 1152
1147 [-]: JMP       1152         ; PC := 1152
1148 [-]: GETUPVAL  R34 U24      ; R34 := U24
1149 [-]: GETGLOBAL R35 K79      ; R35 := ScreenType
1150 [-]: GETTABLE  R35 R35 K216 ; R35 := R35["MASTERY"]
1151 [-]: CALL      R34 2 1      ; R34(R35)
1152 [-]: GETGLOBAL R34 K118     ; R34 := mWaitingForMissionComplete
1153 [-]: TEST      R34 1        ; if R34 then PC := 1174
1154 [-]: JMP       1174         ; PC := 1174
1155 [-]: GETGLOBAL R34 K11      ; R34 := 0x7b998233
1156 [-]: GETGLOBAL R35 K217     ; R35 := 0xe17197ce
1157 [-]: CALL      R34 2 2      ; R34 := R34(R35)
1158 [-]: TEST      R34 1        ; if R34 then PC := 1174
1159 [-]: JMP       1174         ; PC := 1174
1160 [-]: GETGLOBAL R34 K78      ; R34 := mCurrentScreenType
1161 [-]: GETGLOBAL R35 K79      ; R35 := ScreenType
1162 [-]: GETTABLE  R35 R35 K216 ; R35 := R35["MASTERY"]
1163 [-]: EQ        1 R34 R35    ; if R34 == R35 then PC := 1174
1164 [-]: JMP       1174         ; PC := 1174
1165 [-]: GETUPVAL  R34 U0       ; R34 := U0
1166 [-]: GETTABLE  R34 R34 K218 ; R34 := R34[0x5a22d251]
1167 [-]: GETGLOBAL R35 K2       ; R35 := 0xae91e43b
1168 [-]: GETGLOBAL R36 K217     ; R36 := 0xe17197ce
1169 [-]: CONST     R37 800      ; R37 := 800.000000
1170 [-]: GETGLOBAL R38 K219     ; R38 := mPanelStartY
1171 [-]: GETTABLE  R38 R38 K220 ; R38 := R38["Title"]
1172 [-]: ADD       R38 R38 K221 ; R38 := R38 + 15.000000
1173 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
1174 [-]: GETGLOBAL R34 K78      ; R34 := mCurrentScreenType
1175 [-]: GETGLOBAL R35 K79      ; R35 := ScreenType
1176 [-]: GETTABLE  R35 R35 K216 ; R35 := R35["MASTERY"]
1177 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 1222
1178 [-]: JMP       1222         ; PC := 1222
1179 [-]: GETGLOBAL R34 K11      ; R34 := 0x7b998233
1180 [-]: GETGLOBAL R35 K222     ; R35 := 0xd3bbd565
1181 [-]: CALL      R34 2 2      ; R34 := R34(R35)
1182 [-]: TEST      R34 1        ; if R34 then PC := 1208
1183 [-]: JMP       1208         ; PC := 1208
1184 [-]: GETGLOBAL R34 K18      ; R34 := _T
1185 [-]: SETTABLE  R34 K223 K38 ; R34["MasteryMovie_CompleteMode"] := true
1186 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
1187 [-]: SELF      R34 R34 K76  ; R35 := R34; R34 := R34[0x1fd6abd0]
1188 [-]: GETGLOBAL R36 K222     ; R36 := 0xd3bbd565
1189 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
1190 [-]: SETGLOBAL R34 K224     ; mChildMovie := R34
1191 [-]: GETGLOBAL R34 K11      ; R34 := 0x7b998233
1192 [-]: GETGLOBAL R35 K224     ; R35 := mChildMovie
1193 [-]: CALL      R34 2 2      ; R34 := R34(R35)
1194 [-]: TEST      R34 1        ; if R34 then PC := 1208
1195 [-]: JMP       1208         ; PC := 1208
1196 [-]: GETGLOBAL R34 K18      ; R34 := _T
1197 [-]: CLOSURE   R35 0        ; R35 := closure(Function #139.1)
1198 [-]: SETTABLE  R34 K225 R35 ; R34["EOM_OnMasteryClosed"] := R35
1199 [-]: GETGLOBAL R34 K224     ; R34 := mChildMovie
1200 [-]: SELF      R34 R34 K32  ; R35 := R34; R34 := R34[0xe4162eed]
1201 [-]: LOADK     R36 K226     ; R36 := "SetCallBack"
1202 [-]: LOADK     R37 K225     ; R37 := "EOM_OnMasteryClosed"
1203 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1204 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
1205 [-]: SELF      R34 R34 K85  ; R35 := R34; R34 := R34[0x368ad758]
1206 [-]: LOADKB    R36 0 0      ; R36 := false
1207 [-]: CALL      R34 3 1      ; R34(R35,R36)
1208 [-]: TEST      R0 0         ; if not R0 then PC := 1222
1209 [-]: JMP       1222         ; PC := 1222
1210 [-]: GETGLOBAL R34 K11      ; R34 := 0x7b998233
1211 [-]: GETGLOBAL R35 K18      ; R35 := _T
1212 [-]: GETTABLE  R35 R35 K227 ; R35 := R35["SquadOverlay"]
1213 [-]: CALL      R34 2 2      ; R34 := R34(R35)
1214 [-]: TEST      R34 1        ; if R34 then PC := 1222
1215 [-]: JMP       1222         ; PC := 1222
1216 [-]: GETGLOBAL R34 K18      ; R34 := _T
1217 [-]: GETTABLE  R34 R34 K227 ; R34 := R34["SquadOverlay"]
1218 [-]: SELF      R34 R34 K32  ; R35 := R34; R34 := R34[0xe4162eed]
1219 [-]: LOADK     R36 K228     ; R36 := "SetForceHidden"
1220 [-]: LOADK     R37 K229     ; R37 := "true"
1221 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1222 [-]: GETGLOBAL R34 K40      ; R34 := mAbortingAndWasDoingPvpChallenge
1223 [-]: TEST      R34 0        ; if not R34 then PC := 1229
1224 [-]: JMP       1229         ; PC := 1229
1225 [-]: GETUPVAL  R34 U24      ; R34 := U24
1226 [-]: GETGLOBAL R35 K79      ; R35 := ScreenType
1227 [-]: GETTABLE  R35 R35 K230 ; R35 := R35["REP"]
1228 [-]: CALL      R34 2 1      ; R34(R35)
1229 [-]: GETUPVAL  R34 U17      ; R34 := U17
1230 [-]: CALL      R34 1 2      ; R34 := R34()
1231 [-]: TEST      R34 0        ; if not R34 then PC := 1240
1232 [-]: JMP       1240         ; PC := 1240
1233 [-]: GETGLOBAL R34 K12      ; R34 := 0xbe190284
1234 [-]: SELF      R34 R34 K231 ; R35 := R34; R34 := R34[0x8e07e77f]
1235 [-]: GETGLOBAL R36 K232     ; R36 := 0x6564d17e
1236 [-]: SELF      R36 R36 K233 ; R37 := R36; R36 := R36[0xed4e0128]
1237 [-]: CALL      R36 2 2      ; R36 := R36(R37)
1238 [-]: LOADK     R37 K234     ; R37 := "OnOnslaughtBackgroundReady"
1239 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1240 [-]: GETUPVAL  R34 U25      ; R34 := U25
1241 [-]: CALL      R34 1 1      ; R34()
1242 [-]: GETUPVAL  R34 U26      ; R34 := U26
1243 [-]: CALL      R34 1 1      ; R34()
1244 [-]: LOADKB    R34 1 0      ; R34 := true
1245 [-]: SETGLOBAL R34 K14      ; mInitialized := R34
1246 [-]: RETURN    R0 1         ; return 


; Function #139.1:
;
; Name:            
; Defined at line: 6459
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xe4162eed]
  8 [-]: LOADK     R2 K3        ; R2 := "AutoClose"
  9 [-]: LOADK     R3 K4        ; R3 := "0"
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 6488
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "EndOfMatch.lua - Close"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: CONST     R0 -1        ; R0 := -1.000000
  5 [-]: SETGLOBAL R0 K2        ; mAutoCloseDelay := R0
  6 [-]: LOADKB    R0 1 0       ; R0 := true
  7 [-]: SETGLOBAL R0 K3        ; mShouldClose := R0
  8 [-]: GETGLOBAL R0 K4        ; R0 := mShowDuringLoadingScreen
  9 [-]: TEST      R0 1         ; if R0 then PC := 26
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETGLOBAL R0 K5        ; R0 := 0x25312c9b
 12 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 13 [-]: LOADK     R2 K7        ; R2 := "_root"
 14 [-]: CONST     R3 8         ; R3 := 8.000000
 15 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 16 [-]: CONST     R5 10        ; R5 := 10.000000
 17 [-]: LOADK     R6 K9        ; R6 := "background"
 18 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 19 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 20 [-]: CONST     R6 0         ; R6 := 0.000000
 21 [-]: CONST     R7 0         ; R7 := 0.000000
 22 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 23 [-]: LOADK     R6 K10       ; R6 := 0.200000
 24 [-]: CONST     R7 0         ; R7 := 0.000000
 25 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 26 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 6498
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETGLOBAL R0 K1        ; R0 := AUTO_CLOSE_DELAY
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x03f57322
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: MOVE      R0 R1        ; R0 := R1
 12 [-]: LE        0 R0 K3      ; if R0 > 0.000000 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADK     R0 K4        ; R0 := 0.001000
 15 [-]: GETGLOBAL R1 K5        ; R1 := 0x3d106989
 16 [-]: LOADK     R2 K6        ; R2 := "Auto close delay="
 17 [-]: GETGLOBAL R3 K7        ; R3 := 0x64fb1586
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: SETGLOBAL R0 K8        ; mAutoCloseDelay := R0
 23 [-]: CONST     R1 1         ; R1 := 1.000000
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 6513
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 6516
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xef893aec]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: CONST     R1 1         ; R1 := 1.000000
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0xf8376828
  6 [-]: LEN       R2 R2        ; R2 := # R2
  7 [-]: CONST     R3 1         ; R3 := 1.000000
  8 [-]: FORPREP   R1 36        ; R1 -= R3; PC := 36
  9 [-]: GETGLOBAL R5 K2        ; R5 := 0xf8376828
 10 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 11 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["levelKeyName"]
 12 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 36
 13 [-]: JMP       36           ; PC := 36
 14 [-]: GETGLOBAL R7 K4        ; R7 := 0x89326c93
 15 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7[0x98f20ca5]
 16 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 17 [-]: SETTABLE  R7 K6 K7     ; R7["loadFromLobby"] := false
 18 [-]: SETTABLE  R7 K8 K9     ; R7["migrateServer"] := true
 19 [-]: GETGLOBAL R8 K11       ; R8 := 0x7b998233
 20 [-]: GETGLOBAL R9 K12       ; R9 := 0xe7f2b02f
 21 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0x565be9ee]
 22 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 23 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 24 [-]: NOT       R8 R8        ; R8 :=  R8
 25 [-]: SETTABLE  R7 K10 R8    ; R7["hostingMultiplayer"] := R8
 26 [-]: GETGLOBAL R8 K0        ; R8 := 0xbe190284
 27 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8[0x89ff11ba]
 28 [-]: MOVE      R10 R7       ; R10 := R7
 29 [-]: CALL      R8 3 1       ; R8(R9,R10)
 30 [-]: GETGLOBAL R8 K15       ; R8 := 0x34291f5c
 31 [-]: GETTABLE  R8 R8 K16    ; R8 := R8[0x4e0a1dfc]
 32 [-]: MOVE      R9 R7        ; R9 := R7
 33 [-]: CALL      R8 2 1       ; R8(R9)
 34 [-]: LOADKB    R8 1 0       ; R8 := true
 35 [-]: RETURN    R8 2         ; return R8
 36 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 37 [-]: LOADKB    R8 0 0       ; R8 := false
 38 [-]: RETURN    R8 2         ; return R8
 39 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 6535
; #Upvalues:       30
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K2        ; R0 := mInitialized
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: CALL      R0 1 1       ; R0()
 15 [-]: GETGLOBAL R0 K4        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["eomScreenMode"]
 17 [-]: GETUPVAL  R1 U2        ; R1 := U2
 18 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["ACTUAL_EOM"]
 19 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 22
 22 [-]: LOADKB    R0 1 0       ; R0 := true
 23 [-]: GETUPVAL  R1 U3        ; R1 := U3
 24 [-]: CALL      R1 1 1       ; R1()
 25 [-]: GETGLOBAL R1 K7        ; R1 := 0xb693b6c1
 26 [-]: CALL      R1 1 2       ; R1 := R1()
 27 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 28 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x8a8c8d5a]
 29 [-]: MOVE      R4 R1        ; R4 := R1
 30 [-]: CALL      R2 3 1       ; R2(R3,R4)
 31 [-]: GETUPVAL  R2 U4        ; R2 := U4
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 1       ; R2(R3)
 34 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 35 [-]: GETGLOBAL R3 K9        ; R3 := 0x89326c93
 36 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 37 [-]: TEST      R2 1         ; if R2 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 40 [-]: GETGLOBAL R3 K10       ; R3 := 0xbe190284
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: TEST      R2 0         ; if not R2 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 46 [-]: GETGLOBAL R3 K10       ; R3 := 0xbe190284
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 64
 49 [-]: JMP       64           ; PC := 64
 50 [-]: GETGLOBAL R2 K10       ; R2 := 0xbe190284
 51 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x8019cc24]
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: TEST      R2 0         ; if not R2 then PC := 64
 54 [-]: JMP       64           ; PC := 64
 55 [-]: GETUPVAL  R2 U5        ; R2 := U5
 56 [-]: EQ        0 R2 K12     ; if R2 ~= 0.000000 then PC := 64
 57 [-]: JMP       64           ; PC := 64
 58 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 59 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x78f32995]
 60 [-]: LOADKB    R4 0 0       ; R4 := false
 61 [-]: CALL      R2 3 1       ; R2(R3,R4)
 62 [-]: CONST     R2 1         ; R2 := 1.000000
 63 [-]: SETUPVAL  R2 U5        ; U82 := R5
 64 [-]: GETUPVAL  R2 U5        ; R2 := U5
 65 [-]: EQ        0 R2 K14     ; if R2 ~= 1.000000 then PC := 84
 66 [-]: JMP       84           ; PC := 84
 67 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 68 [-]: GETGLOBAL R3 K10       ; R3 := 0xbe190284
 69 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 70 [-]: TEST      R2 1         ; if R2 then PC := 77
 71 [-]: JMP       77           ; PC := 77
 72 [-]: GETGLOBAL R2 K10       ; R2 := 0xbe190284
 73 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x8019cc24]
 74 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 75 [-]: TEST      R2 1         ; if R2 then PC := 84
 76 [-]: JMP       84           ; PC := 84
 77 [-]: GETGLOBAL R2 K15       ; R2 := 0x3d106989
 78 [-]: LOADK     R3 K16       ; R3 := "EOM - back in mission!"
 79 [-]: CALL      R2 2 1       ; R2(R3)
 80 [-]: CONST     R2 2         ; R2 := 2.000000
 81 [-]: SETUPVAL  R2 U5        ; U82 := R5
 82 [-]: GETUPVAL  R2 U6        ; R2 := U6
 83 [-]: CALL      R2 1 1       ; R2()
 84 [-]: GETUPVAL  R2 U7        ; R2 := U7
 85 [-]: TEST      R2 0         ; if not R2 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: RETURN    R0 1         ; return 
 88 [-]: GETUPVAL  R2 U8        ; R2 := U8
 89 [-]: TEST      R2 1         ; if R2 then PC := 112
 90 [-]: JMP       112          ; PC := 112
 91 [-]: GETGLOBAL R2 K4        ; R2 := _T
 92 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["UIInputEnabled"]
 93 [-]: TEST      R2 1         ; if R2 then PC := 112
 94 [-]: JMP       112          ; PC := 112
 95 [-]: GETGLOBAL R2 K18       ; R2 := mWaitingForMissionComplete
 96 [-]: TEST      R2 1         ; if R2 then PC := 112
 97 [-]: JMP       112          ; PC := 112
 98 [-]: GETUPVAL  R2 U9        ; R2 := U9
 99 [-]: TEST      R2 1         ; if R2 then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: TEST      R0 0         ; if not R0 then PC := 112
102 [-]: JMP       112          ; PC := 112
103 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
104 [-]: GETGLOBAL R3 K4        ; R3 := _T
105 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["EnableUIInput"]
106 [-]: CALL      R2 2 2       ; R2 := R2(R3)
107 [-]: TEST      R2 1         ; if R2 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: GETGLOBAL R2 K4        ; R2 := _T
110 [-]: GETTABLE  R2 R2 K20    ; R2 := R2[0x3b0face1]
111 [-]: CALL      R2 1 1       ; R2()
112 [-]: GETGLOBAL R2 K4        ; R2 := _T
113 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["eomScreenMode"]
114 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 120
115 [-]: JMP       120          ; PC := 120
116 [-]: GETGLOBAL R2 K4        ; R2 := _T
117 [-]: GETUPVAL  R3 U2        ; R3 := U2
118 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["ACTUAL_EOM"]
119 [-]: SETTABLE  R2 K5 R3     ; R2["eomScreenMode"] := R3
120 [-]: GETGLOBAL R2 K4        ; R2 := _T
121 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["HideEOM"]
122 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 128
123 [-]: JMP       128          ; PC := 128
124 [-]: GETGLOBAL R2 K4        ; R2 := _T
125 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["HideEOM"]
126 [-]: LT        1 K12 R2     ; if 0.000000 < R2 then PC := 129
127 [-]: JMP       129          ; PC := 129
128 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 129
129 [-]: LOADKB    R2 1 0       ; R2 := true
130 [-]: GETUPVAL  R3 U10       ; R3 := U10
131 [-]: EQ        1 R3 R2      ; if R3 == R2 then PC := 153
132 [-]: JMP       153          ; PC := 153
133 [-]: SETUPVAL  R2 U10       ; U82 := R10
134 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
135 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xaade900e]
136 [-]: LOADK     R5 K23       ; R5 := "_root"
137 [-]: CONST     R6 11        ; R6 := 11.000000
138 [-]: GETUPVAL  R7 U10       ; R7 := U10
139 [-]: NOT       R7 R7        ; R7 :=  R7
140 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
141 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
142 [-]: GETGLOBAL R4 K24       ; R4 := mPvpMovie
143 [-]: CALL      R3 2 2       ; R3 := R3(R4)
144 [-]: TEST      R3 1         ; if R3 then PC := 153
145 [-]: JMP       153          ; PC := 153
146 [-]: GETGLOBAL R3 K24       ; R3 := mPvpMovie
147 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xaade900e]
148 [-]: LOADK     R5 K23       ; R5 := "_root"
149 [-]: CONST     R6 11        ; R6 := 11.000000
150 [-]: GETUPVAL  R7 U10       ; R7 := U10
151 [-]: NOT       R7 R7        ; R7 :=  R7
152 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
153 [-]: GETGLOBAL R3 K9        ; R3 := 0x89326c93
154 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3[0x18d05d30]
155 [-]: CALL      R3 2 2       ; R3 := R3(R4)
156 [-]: TEST      R3 1         ; if R3 then PC := 189
157 [-]: JMP       189          ; PC := 189
158 [-]: TEST      R0 0         ; if not R0 then PC := 189
159 [-]: JMP       189          ; PC := 189
160 [-]: GETGLOBAL R4 K26       ; R4 := mMedalsValidated
161 [-]: TEST      R4 1         ; if R4 then PC := 189
162 [-]: JMP       189          ; PC := 189
163 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
164 [-]: GETGLOBAL R5 K27       ; R5 := mGameData
165 [-]: CALL      R4 2 2       ; R4 := R4(R5)
166 [-]: TEST      R4 1         ; if R4 then PC := 189
167 [-]: JMP       189          ; PC := 189
168 [-]: GETGLOBAL R4 K27       ; R4 := mGameData
169 [-]: SELF      R4 R4 K28    ; R5 := R4; R4 := R4[0x93f95e26]
170 [-]: CALL      R4 2 2       ; R4 := R4(R5)
171 [-]: TEST      R4 0         ; if not R4 then PC := 189
172 [-]: JMP       189          ; PC := 189
173 [-]: LOADKB    R4 1 0       ; R4 := true
174 [-]: SETGLOBAL R4 K26       ; mMedalsValidated := R4
175 [-]: CONST     R4 1         ; R4 := 1.000000
176 [-]: GETGLOBAL R5 K29       ; R5 := mMaxPlayers
177 [-]: CONST     R6 1         ; R6 := 1.000000
178 [-]: FORPREP   R4 188       ; R4 -= R6; PC := 188
179 [-]: LOADK     R8 K30       ; R8 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
180 [-]: MOVE      R9 R7        ; R9 := R7
181 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
182 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
183 [-]: SELF      R9 R9 K31    ; R10 := R9; R9 := R9[0x67bc869f]
184 [-]: MOVE      R11 R8       ; R11 := R8
185 [-]: CONST     R12 10       ; R12 := 10.000000
186 [-]: CONST     R13 100      ; R13 := 100.000000
187 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
188 [-]: FORLOOP   R4 179       ; R4 += R6; if R4 <= R5 then begin PC := 179; R7 := R4 end
189 [-]: GETGLOBAL R9 K4        ; R9 := _T
190 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["eomScreenMode"]
191 [-]: GETUPVAL  R10 U2       ; R10 := U2
192 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["QUICK_PREVIEW"]
193 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 205
194 [-]: JMP       205          ; PC := 205
195 [-]: GETGLOBAL R9 K4        ; R9 := _T
196 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["eomInputIgnored"]
197 [-]: TEST      R9 1         ; if R9 then PC := 205
198 [-]: JMP       205          ; PC := 205
199 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
200 [-]: SELF      R9 R9 K34    ; R10 := R9; R9 := R9[0xbed40e9c]
201 [-]: LOADKB    R11 1 0      ; R11 := true
202 [-]: CALL      R9 3 1       ; R9(R10,R11)
203 [-]: GETGLOBAL R9 K4        ; R9 := _T
204 [-]: SETTABLE  R9 K33 K35   ; R9["eomInputIgnored"] := true
205 [-]: GETGLOBAL R9 K9        ; R9 := 0x89326c93
206 [-]: SELF      R9 R9 K25    ; R10 := R9; R9 := R9[0x18d05d30]
207 [-]: CALL      R9 2 2       ; R9 := R9(R10)
208 [-]: TEST      R9 1         ; if R9 then PC := 216
209 [-]: JMP       216          ; PC := 216
210 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
211 [-]: GETGLOBAL R10 K36      ; R10 := 0xe7f2b02f
212 [-]: SELF      R10 R10 K37  ; R11 := R10; R10 := R10[0x565be9ee]
213 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
214 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
215 [-]: JMP       218          ; PC := 218
216 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 217
217 [-]: LOADKB    R9 1 0       ; R9 := true
218 [-]: GETUPVAL  R10 U11      ; R10 := U11
219 [-]: GETTABLE  R10 R10 K38  ; R10 := R10["isPvp"]
220 [-]: TEST      R10 1        ; if R10 then PC := 304
221 [-]: JMP       304          ; PC := 304
222 [-]: GETGLOBAL R10 K39      ; R10 := mReturningToLobbyTime
223 [-]: LE        0 K12 R10    ; if 0.000000 > R10 then PC := 304
224 [-]: JMP       304          ; PC := 304
225 [-]: GETGLOBAL R10 K39      ; R10 := mReturningToLobbyTime
226 [-]: ADD       R10 R10 R1   ; R10 := R10 + R1
227 [-]: SETGLOBAL R10 K39      ; mReturningToLobbyTime := R10
228 [-]: GETGLOBAL R10 K40      ; R10 := mShowDuringLoadingScreen
229 [-]: TEST      R10 1        ; if R10 then PC := 269
230 [-]: JMP       269          ; PC := 269
231 [-]: GETGLOBAL R10 K41      ; R10 := 0x83f4e77c
232 [-]: SELF      R10 R10 K42  ; R11 := R10; R10 := R10[0xac0a30b1]
233 [-]: CALL      R10 2 2      ; R10 := R10(R11)
234 [-]: TEST      R10 1        ; if R10 then PC := 241
235 [-]: JMP       241          ; PC := 241
236 [-]: GETGLOBAL R10 K41      ; R10 := 0x83f4e77c
237 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10[0x47073d04]
238 [-]: CALL      R10 2 2      ; R10 := R10(R11)
239 [-]: TEST      R10 0        ; if not R10 then PC := 262
240 [-]: JMP       262          ; PC := 262
241 [-]: GETGLOBAL R10 K10      ; R10 := 0xbe190284
242 [-]: SELF      R10 R10 K44  ; R11 := R10; R10 := R10[0x7926b5dc]
243 [-]: CALL      R10 2 2      ; R10 := R10(R11)
244 [-]: TEST      R10 0        ; if not R10 then PC := 262
245 [-]: JMP       262          ; PC := 262
246 [-]: GETGLOBAL R10 K9       ; R10 := 0x89326c93
247 [-]: SELF      R10 R10 K25  ; R11 := R10; R10 := R10[0x18d05d30]
248 [-]: CALL      R10 2 2      ; R10 := R10(R11)
249 [-]: TEST      R10 1        ; if R10 then PC := 254
250 [-]: JMP       254          ; PC := 254
251 [-]: GETGLOBAL R10 K39      ; R10 := mReturningToLobbyTime
252 [-]: LT        1 K45 R10    ; if 100.000000 < R10 then PC := 262
253 [-]: JMP       262          ; PC := 262
254 [-]: GETGLOBAL R10 K46      ; R10 := 0x34291f5c
255 [-]: GETTABLE  R10 R10 K47  ; R10 := R10[0x056bfe8b]
256 [-]: CALL      R10 1 2      ; R10 := R10()
257 [-]: TEST      R10 0        ; if not R10 then PC := 269
258 [-]: JMP       269          ; PC := 269
259 [-]: GETGLOBAL R10 K39      ; R10 := mReturningToLobbyTime
260 [-]: LT        0 K48 R10    ; if 7.000000 >= R10 then PC := 269
261 [-]: JMP       269          ; PC := 269
262 [-]: GETGLOBAL R10 K15      ; R10 := 0x3d106989
263 [-]: LOADK     R11 K49      ; R11 := "EndOfMatch - disconnected, closing"
264 [-]: CALL      R10 2 1      ; R10(R11)
265 [-]: GETGLOBAL R10 K1       ; R10 := 0xae91e43b
266 [-]: SELF      R10 R10 K50  ; R11 := R10; R10 := R10[0x32302b4a]
267 [-]: CALL      R10 2 1      ; R10(R11)
268 [-]: RETURN    R0 1         ; return 
269 [-]: GETGLOBAL R10 K51      ; R10 := mWaitingForReturnToShip
270 [-]: TEST      R10 1        ; if R10 then PC := 301
271 [-]: JMP       301          ; PC := 301
272 [-]: GETGLOBAL R10 K39      ; R10 := mReturningToLobbyTime
273 [-]: LT        0 K52 R10    ; if 2.000000 >= R10 then PC := 301
274 [-]: JMP       301          ; PC := 301
275 [-]: LOADK     R10 K53      ; R10 := ""
276 [-]: GETGLOBAL R11 K54      ; R11 := mWaitingForDbUpdate
277 [-]: TEST      R11 0        ; if not R11 then PC := 286
278 [-]: JMP       286          ; PC := 286
279 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
280 [-]: SELF      R11 R11 K55  ; R12 := R11; R11 := R11[0x42b04007]
281 [-]: LOADK     R13 K56      ; R13 := "/Lotus/Language/Menu/UpdatingDB"
282 [-]: LOADKB    R14 0 0      ; R14 := false
283 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
284 [-]: MOVE      R10 R11      ; R10 := R11
285 [-]: JMP       292          ; PC := 292
286 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
287 [-]: SELF      R11 R11 K55  ; R12 := R11; R11 := R11[0x42b04007]
288 [-]: LOADK     R13 K57      ; R13 := "/Lotus/Language/Game/WaitingForPlayers"
289 [-]: LOADKB    R14 0 0      ; R14 := false
290 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
291 [-]: MOVE      R10 R11      ; R10 := R11
292 [-]: GETUPVAL  R11 U12      ; R11 := U12
293 [-]: MOVE      R12 R10      ; R12 := R10
294 [-]: CALL      R11 2 1      ; R11(R12)
295 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
296 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11[0x67bc869f]
297 [-]: LOADK     R13 K23      ; R13 := "_root"
298 [-]: CONST     R14 10       ; R14 := 10.000000
299 [-]: CONST     R15 100      ; R15 := 100.000000
300 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
301 [-]: TEST      R9 1         ; if R9 then PC := 304
302 [-]: JMP       304          ; PC := 304
303 [-]: RETURN    R0 1         ; return 
304 [-]: GETGLOBAL R11 K51      ; R11 := mWaitingForReturnToShip
305 [-]: TEST      R11 1        ; if R11 then PC := 337
306 [-]: JMP       337          ; PC := 337
307 [-]: GETUPVAL  R11 U13      ; R11 := U13
308 [-]: GETTABLE  R11 R11 K58  ; R11 := R11[0xcdc34211]
309 [-]: CALL      R11 1 2      ; R11 := R11()
310 [-]: TEST      R11 0        ; if not R11 then PC := 337
311 [-]: JMP       337          ; PC := 337
312 [-]: GETGLOBAL R11 K9       ; R11 := 0x89326c93
313 [-]: SELF      R11 R11 K25  ; R12 := R11; R11 := R11[0x18d05d30]
314 [-]: CALL      R11 2 2      ; R11 := R11(R12)
315 [-]: TEST      R11 0        ; if not R11 then PC := 337
316 [-]: JMP       337          ; PC := 337
317 [-]: GETGLOBAL R11 K10      ; R11 := 0xbe190284
318 [-]: SELF      R11 R11 K59  ; R12 := R11; R11 := R11[0xef893aec]
319 [-]: CALL      R11 2 2      ; R11 := R11(R12)
320 [-]: GETTABLE  R11 R11 K60  ; R11 := R11["missionType"]
321 [-]: EQ        0 R11 K62    ; if R11 ~= 18.000000 then PC := 337
322 [-]: JMP       337          ; PC := 337
323 [-]: GETGLOBAL R12 K4       ; R12 := _T
324 [-]: GETTABLE  R12 R12 K63  ; R12 := R12["inventoriesCommitted"]
325 [-]: TEST      R12 0        ; if not R12 then PC := 337
326 [-]: JMP       337          ; PC := 337
327 [-]: GETGLOBAL R12 K64      ; R12 := mAutoCloseDelay
328 [-]: LT        0 R12 K12    ; if R12 >= 0.000000 then PC := 337
329 [-]: JMP       337          ; PC := 337
330 [-]: GETGLOBAL R12 K15      ; R12 := 0x3d106989
331 [-]: LOADK     R13 K65      ; R13 := "Inventories committed, closing EOM"
332 [-]: CALL      R12 2 1      ; R12(R13)
333 [-]: GETGLOBAL R12 K4       ; R12 := _T
334 [-]: SETTABLE  R12 K63 K66  ; R12["inventoriesCommitted"] := false
335 [-]: GETUPVAL  R12 U14      ; R12 := U14
336 [-]: CALL      R12 1 1      ; R12()
337 [-]: GETUPVAL  R12 U8       ; R12 := U8
338 [-]: TEST      R12 0        ; if not R12 then PC := 356
339 [-]: JMP       356          ; PC := 356
340 [-]: GETGLOBAL R12 K67      ; R12 := mInputBlocked
341 [-]: TEST      R12 1        ; if R12 then PC := 356
342 [-]: JMP       356          ; PC := 356
343 [-]: GETGLOBAL R12 K54      ; R12 := mWaitingForDbUpdate
344 [-]: TEST      R12 1        ; if R12 then PC := 356
345 [-]: JMP       356          ; PC := 356
346 [-]: GETGLOBAL R12 K51      ; R12 := mWaitingForReturnToShip
347 [-]: TEST      R12 1        ; if R12 then PC := 356
348 [-]: JMP       356          ; PC := 356
349 [-]: GETUPVAL  R12 U15      ; R12 := U15
350 [-]: CALL      R12 1 2      ; R12 := R12()
351 [-]: TEST      R12 1        ; if R12 then PC := 356
352 [-]: JMP       356          ; PC := 356
353 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
354 [-]: SELF      R12 R12 K50  ; R13 := R12; R12 := R12[0x32302b4a]
355 [-]: CALL      R12 2 1      ; R12(R13)
356 [-]: GETGLOBAL R12 K51      ; R12 := mWaitingForReturnToShip
357 [-]: TEST      R12 1        ; if R12 then PC := 559
358 [-]: JMP       559          ; PC := 559
359 [-]: GETGLOBAL R12 K68      ; R12 := mShouldClose
360 [-]: TEST      R12 0        ; if not R12 then PC := 559
361 [-]: JMP       559          ; PC := 559
362 [-]: GETUPVAL  R12 U16      ; R12 := U16
363 [-]: CALL      R12 1 2      ; R12 := R12()
364 [-]: GETTABLE  R13 R12 K60  ; R13 := R12["missionType"]
365 [-]: GETTABLE  R14 R12 K69  ; R14 := R12["goalTag"]
366 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
367 [-]: MOVE      R16 R14      ; R16 := R14
368 [-]: CALL      R15 2 2      ; R15 := R15(R16)
369 [-]: TEST      R15 1        ; if R15 then PC := 382
370 [-]: JMP       382          ; PC := 382
371 [-]: GETGLOBAL R15 K70      ; R15 := 0x0469f296
372 [-]: LOADK     R16 K71      ; R16 := "MoonQuestMissionThree"
373 [-]: CALL      R15 2 2      ; R15 := R15(R16)
374 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 382
375 [-]: JMP       382          ; PC := 382
376 [-]: GETGLOBAL R15 K27      ; R15 := mGameData
377 [-]: SELF      R15 R15 K72  ; R16 := R15; R15 := R15[0x489e2f69]
378 [-]: GETUPVAL  R17 U17      ; R17 := U17
379 [-]: GETTABLE  R17 R17 K73  ; R17 := R17["REGION_TAG_MOON_VOID"]
380 [-]: CALL      R15 3 1      ; R15(R16,R17)
381 [-]: JMP       417          ; PC := 417
382 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
383 [-]: MOVE      R16 R14      ; R16 := R14
384 [-]: CALL      R15 2 2      ; R15 := R15(R16)
385 [-]: TEST      R15 1        ; if R15 then PC := 398
386 [-]: JMP       398          ; PC := 398
387 [-]: GETGLOBAL R15 K70      ; R15 := 0x0469f296
388 [-]: LOADK     R16 K74      ; R16 := "MoonQuestMissionFour"
389 [-]: CALL      R15 2 2      ; R15 := R15(R16)
390 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 398
391 [-]: JMP       398          ; PC := 398
392 [-]: GETGLOBAL R15 K27      ; R15 := mGameData
393 [-]: SELF      R15 R15 K72  ; R16 := R15; R15 := R15[0x489e2f69]
394 [-]: GETUPVAL  R17 U17      ; R17 := U17
395 [-]: GETTABLE  R17 R17 K75  ; R17 := R17["REGION_TAG_MOON_EARTH"]
396 [-]: CALL      R15 3 1      ; R15(R16,R17)
397 [-]: JMP       417          ; PC := 417
398 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
399 [-]: MOVE      R16 R14      ; R16 := R14
400 [-]: CALL      R15 2 2      ; R15 := R15(R16)
401 [-]: TEST      R15 1        ; if R15 then PC := 417
402 [-]: JMP       417          ; PC := 417
403 [-]: GETGLOBAL R15 K70      ; R15 := 0x0469f296
404 [-]: LOADK     R16 K76      ; R16 := "MoonQuestMissionFive"
405 [-]: CALL      R15 2 2      ; R15 := R15(R16)
406 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 417
407 [-]: JMP       417          ; PC := 417
408 [-]: GETGLOBAL R15 K27      ; R15 := mGameData
409 [-]: SELF      R15 R15 K72  ; R16 := R15; R15 := R15[0x489e2f69]
410 [-]: GETUPVAL  R17 U17      ; R17 := U17
411 [-]: GETTABLE  R17 R17 K75  ; R17 := R17["REGION_TAG_MOON_EARTH"]
412 [-]: CALL      R15 3 1      ; R15(R16,R17)
413 [-]: GETGLOBAL R15 K1       ; R15 := 0xae91e43b
414 [-]: SELF      R15 R15 K50  ; R16 := R15; R15 := R15[0x32302b4a]
415 [-]: CALL      R15 2 1      ; R15(R16)
416 [-]: RETURN    R0 1         ; return 
417 [-]: GETGLOBAL R15 K77      ; R15 := 0x9ba7909f
418 [-]: SELF      R15 R15 K78  ; R16 := R15; R15 := R15[0xbf9494fc]
419 [-]: LOADK     R17 K79      ; R17 := "LotusGameRules.DemoMode"
420 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
421 [-]: TEST      R15 0        ; if not R15 then PC := 428
422 [-]: JMP       428          ; PC := 428
423 [-]: GETGLOBAL R15 K46      ; R15 := 0x34291f5c
424 [-]: GETTABLE  R15 R15 K80  ; R15 := R15[0x8ee24660]
425 [-]: LOADKB    R16 0 0      ; R16 := false
426 [-]: CALL      R15 2 1      ; R15(R16)
427 [-]: JMP       556          ; PC := 556
428 [-]: EQ        0 R13 K62    ; if R13 ~= 18.000000 then PC := 434
429 [-]: JMP       434          ; PC := 434
430 [-]: GETGLOBAL R15 K4       ; R15 := _T
431 [-]: GETTABLE  R15 R15 K81  ; R15 := R15["raidIntermediateStage"]
432 [-]: TEST      R15 1        ; if R15 then PC := 438
433 [-]: JMP       438          ; PC := 438
434 [-]: GETUPVAL  R15 U11      ; R15 := U11
435 [-]: GETTABLE  R15 R15 K38  ; R15 := R15["isPvp"]
436 [-]: TEST      R15 0        ; if not R15 then PC := 442
437 [-]: JMP       442          ; PC := 442
438 [-]: GETGLOBAL R15 K1       ; R15 := 0xae91e43b
439 [-]: SELF      R15 R15 K50  ; R16 := R15; R15 := R15[0x32302b4a]
440 [-]: CALL      R15 2 1      ; R15(R16)
441 [-]: JMP       556          ; PC := 556
442 [-]: EQ        1 R13 K82    ; if R13 == 31.000000 then PC := 445
443 [-]: JMP       445          ; PC := 445
444 [-]: LOADKB    R15 0 1      ; R15 := false; PC := 445
445 [-]: LOADKB    R15 1 0      ; R15 := true
446 [-]: GETGLOBAL R16 K10      ; R16 := 0xbe190284
447 [-]: SELF      R16 R16 K83  ; R17 := R16; R16 := R16[0xf2deaf69]
448 [-]: GETGLOBAL R18 K84      ; R18 := gLotusBaseGameRulesType
449 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
450 [-]: TEST      R16 0        ; if not R16 then PC := 455
451 [-]: JMP       455          ; PC := 455
452 [-]: GETGLOBAL R16 K10      ; R16 := 0xbe190284
453 [-]: SELF      R16 R16 K85  ; R17 := R16; R16 := R16[0x5d204145]
454 [-]: CALL      R16 2 2      ; R16 := R16(R17)
455 [-]: TESTSET   R17 R15 0    ; if not R15 then PC := 458 else R17 := R15
456 [-]: JMP       458          ; PC := 458
457 [-]: NOT       R17 R16      ; R17 :=  R16
458 [-]: TEST      R17 0        ; if not R17 then PC := 468
459 [-]: JMP       468          ; PC := 468
460 [-]: GETUPVAL  R18 U18      ; R18 := U18
461 [-]: CALL      R18 1 2      ; R18 := R18()
462 [-]: TEST      R18 1        ; if R18 then PC := 468
463 [-]: JMP       468          ; PC := 468
464 [-]: GETGLOBAL R18 K1       ; R18 := 0xae91e43b
465 [-]: SELF      R18 R18 K50  ; R19 := R18; R18 := R18[0x32302b4a]
466 [-]: CALL      R18 2 1      ; R18(R19)
467 [-]: JMP       556          ; PC := 556
468 [-]: GETGLOBAL R18 K9       ; R18 := 0x89326c93
469 [-]: SELF      R18 R18 K25  ; R19 := R18; R18 := R18[0x18d05d30]
470 [-]: CALL      R18 2 2      ; R18 := R18(R19)
471 [-]: TEST      R18 0        ; if not R18 then PC := 517
472 [-]: JMP       517          ; PC := 517
473 [-]: TEST      R17 1        ; if R17 then PC := 510
474 [-]: JMP       510          ; PC := 510
475 [-]: GETUPVAL  R18 U13      ; R18 := U13
476 [-]: GETTABLE  R18 R18 K58  ; R18 := R18[0xcdc34211]
477 [-]: CALL      R18 1 2      ; R18 := R18()
478 [-]: TEST      R18 0        ; if not R18 then PC := 510
479 [-]: JMP       510          ; PC := 510
480 [-]: TEST      R15 0        ; if not R15 then PC := 489
481 [-]: JMP       489          ; PC := 489
482 [-]: TEST      R16 0        ; if not R16 then PC := 489
483 [-]: JMP       489          ; PC := 489
484 [-]: GETGLOBAL R18 K10      ; R18 := 0xbe190284
485 [-]: SELF      R18 R18 K86  ; R19 := R18; R18 := R18[0x8a9ca6b8]
486 [-]: CLOSURE   R20 0        ; R20 := closure(Function #144.1)
487 [-]: GETUPVAL  R0 U13       ; R0 := U13
488 [-]: CALL      R18 3 1      ; R18(R19,R20)
489 [-]: GETUPVAL  R18 U19      ; R18 := U19
490 [-]: GETTABLE  R18 R18 K87  ; R18 := R18[0x06d055f9]
491 [-]: MOVE      R19 R16      ; R19 := R16
492 [-]: CONST     R20 0        ; R20 := 0.000000
493 [-]: CONST     R21 1        ; R21 := 1.000000
494 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
495 [-]: GETUPVAL  R19 U19      ; R19 := U19
496 [-]: GETTABLE  R19 R19 K87  ; R19 := R19[0x06d055f9]
497 [-]: EQ        1 R13 K82    ; if R13 == 31.000000 then PC := 500
498 [-]: JMP       500          ; PC := 500
499 [-]: LOADKB    R20 0 1      ; R20 := false; PC := 500
500 [-]: LOADKB    R20 1 0      ; R20 := true
501 [-]: CONST     R21 -1       ; R21 := -1.000000
502 [-]: CONST     R22 0        ; R22 := 0.000000
503 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
504 [-]: GETGLOBAL R20 K10      ; R20 := 0xbe190284
505 [-]: SELF      R20 R20 K88  ; R21 := R20; R20 := R20[0xf9bfc5d9]
506 [-]: MOVE      R22 R18      ; R22 := R18
507 [-]: MOVE      R23 R19      ; R23 := R19
508 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
509 [-]: JMP       545          ; PC := 545
510 [-]: GETGLOBAL R20 K9       ; R20 := 0x89326c93
511 [-]: SELF      R20 R20 K89  ; R21 := R20; R20 := R20[0x29ef273d]
512 [-]: CALL      R20 2 2      ; R20 := R20(R21)
513 [-]: SELF      R20 R20 K90  ; R21 := R20; R20 := R20[0x0077d753]
514 [-]: LOADKB    R22 1 0      ; R22 := true
515 [-]: CALL      R20 3 1      ; R20(R21,R22)
516 [-]: JMP       545          ; PC := 545
517 [-]: GETUPVAL  R20 U20      ; R20 := U20
518 [-]: CALL      R20 1 2      ; R20 := R20()
519 [-]: TEST      R20 1        ; if R20 then PC := 523
520 [-]: JMP       523          ; PC := 523
521 [-]: TEST      R9 0         ; if not R9 then PC := 528
522 [-]: JMP       528          ; PC := 528
523 [-]: GETGLOBAL R20 K46      ; R20 := 0x34291f5c
524 [-]: GETTABLE  R20 R20 K80  ; R20 := R20[0x8ee24660]
525 [-]: LOADKB    R21 0 0      ; R21 := false
526 [-]: CALL      R20 2 1      ; R20(R21)
527 [-]: JMP       545          ; PC := 545
528 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
529 [-]: GETGLOBAL R21 K36      ; R21 := 0xe7f2b02f
530 [-]: SELF      R21 R21 K37  ; R22 := R21; R21 := R21[0x565be9ee]
531 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
532 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
533 [-]: TEST      R20 1        ; if R20 then PC := 545
534 [-]: JMP       545          ; PC := 545
535 [-]: GETGLOBAL R20 K36      ; R20 := 0xe7f2b02f
536 [-]: SELF      R20 R20 K37  ; R21 := R20; R20 := R20[0x565be9ee]
537 [-]: CALL      R20 2 2      ; R20 := R20(R21)
538 [-]: SELF      R20 R20 K91  ; R21 := R20; R20 := R20[0xdb45d630]
539 [-]: CALL      R20 2 2      ; R20 := R20(R21)
540 [-]: TEST      R20 0        ; if not R20 then PC := 545
541 [-]: JMP       545          ; PC := 545
542 [-]: GETGLOBAL R20 K10      ; R20 := 0xbe190284
543 [-]: SELF      R20 R20 K92  ; R21 := R20; R20 := R20[0xd96e3d8a]
544 [-]: CALL      R20 2 1      ; R20(R21)
545 [-]: TEST      R17 0        ; if not R17 then PC := 551
546 [-]: JMP       551          ; PC := 551
547 [-]: GETGLOBAL R20 K1       ; R20 := 0xae91e43b
548 [-]: SELF      R20 R20 K50  ; R21 := R20; R20 := R20[0x32302b4a]
549 [-]: CALL      R20 2 1      ; R20(R21)
550 [-]: JMP       556          ; PC := 556
551 [-]: GETGLOBAL R20 K40      ; R20 := mShowDuringLoadingScreen
552 [-]: TEST      R20 0        ; if not R20 then PC := 556
553 [-]: JMP       556          ; PC := 556
554 [-]: LOADKB    R20 1 0      ; R20 := true
555 [-]: SETGLOBAL R20 K51      ; mWaitingForReturnToShip := R20
556 [-]: CONST     R20 0        ; R20 := 0.000000
557 [-]: SETGLOBAL R20 K39      ; mReturningToLobbyTime := R20
558 [-]: RETURN    R0 1         ; return 
559 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
560 [-]: GETGLOBAL R21 K93      ; R21 := mTimerMgr
561 [-]: CALL      R20 2 2      ; R20 := R20(R21)
562 [-]: TEST      R20 1        ; if R20 then PC := 568
563 [-]: JMP       568          ; PC := 568
564 [-]: GETGLOBAL R20 K93      ; R20 := mTimerMgr
565 [-]: SELF      R20 R20 K94  ; R21 := R20; R20 := R20[0xfaa69527]
566 [-]: MOVE      R22 R1       ; R22 := R1
567 [-]: CALL      R20 3 1      ; R20(R21,R22)
568 [-]: GETGLOBAL R20 K64      ; R20 := mAutoCloseDelay
569 [-]: LT        0 K12 R20    ; if 0.000000 >= R20 then PC := 741
570 [-]: JMP       741          ; PC := 741
571 [-]: GETGLOBAL R20 K64      ; R20 := mAutoCloseDelay
572 [-]: SUB       R20 R20 R1   ; R20 := R20 - R1
573 [-]: SETGLOBAL R20 K64      ; mAutoCloseDelay := R20
574 [-]: GETGLOBAL R20 K95      ; R20 := 0x5bced4c4
575 [-]: GETTABLE  R20 R20 K96  ; R20 := R20[0x99675e23]
576 [-]: GETGLOBAL R21 K64      ; R21 := mAutoCloseDelay
577 [-]: CALL      R20 2 2      ; R20 := R20(R21)
578 [-]: LOADK     R21 K53      ; R21 := ""
579 [-]: LT        0 K12 R20    ; if 0.000000 >= R20 then PC := 593
580 [-]: JMP       593          ; PC := 593
581 [-]: GETGLOBAL R22 K97      ; R22 := mCountdownMessage
582 [-]: EQ        1 R22 K3     ; if R22 == nil then PC := 593
583 [-]: JMP       593          ; PC := 593
584 [-]: GETGLOBAL R22 K98      ; R22 := 0x7f5022cf
585 [-]: GETTABLE  R22 R22 K99  ; R22 := R22[0xe8072ded]
586 [-]: GETGLOBAL R23 K97      ; R23 := mCountdownMessage
587 [-]: GETUPVAL  R24 U19      ; R24 := U19
588 [-]: GETTABLE  R24 R24 K100 ; R24 := R24[0x74a11ec6]
589 [-]: MOVE      R25 R20      ; R25 := R20
590 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
591 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
592 [-]: MOVE      R21 R22      ; R21 := R22
593 [-]: GETUPVAL  R22 U12      ; R22 := U12
594 [-]: MOVE      R23 R21      ; R23 := R21
595 [-]: CALL      R22 2 1      ; R22(R23)
596 [-]: GETGLOBAL R22 K101     ; R22 := mQuestMissionChecked
597 [-]: TEST      R22 1        ; if R22 then PC := 631
598 [-]: JMP       631          ; PC := 631
599 [-]: GETGLOBAL R22 K64      ; R22 := mAutoCloseDelay
600 [-]: GETGLOBAL R23 K102     ; R23 := AUTO_CLOSE_DELAY
601 [-]: DIV       R23 R23 K103 ; R23 := R23 / 3.000000
602 [-]: LT        0 R22 R23    ; if R22 >= R23 then PC := 631
603 [-]: JMP       631          ; PC := 631
604 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
605 [-]: GETGLOBAL R23 K10      ; R23 := 0xbe190284
606 [-]: CALL      R22 2 2      ; R22 := R22(R23)
607 [-]: TEST      R22 1        ; if R22 then PC := 629
608 [-]: JMP       629          ; PC := 629
609 [-]: GETGLOBAL R22 K10      ; R22 := 0xbe190284
610 [-]: SELF      R22 R22 K83  ; R23 := R22; R22 := R22[0xf2deaf69]
611 [-]: GETGLOBAL R24 K84      ; R24 := gLotusBaseGameRulesType
612 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
613 [-]: TEST      R22 0        ; if not R22 then PC := 629
614 [-]: JMP       629          ; PC := 629
615 [-]: GETGLOBAL R22 K10      ; R22 := 0xbe190284
616 [-]: SELF      R22 R22 K85  ; R23 := R22; R22 := R22[0x5d204145]
617 [-]: CALL      R22 2 2      ; R22 := R22(R23)
618 [-]: TEST      R22 0        ; if not R22 then PC := 629
619 [-]: JMP       629          ; PC := 629
620 [-]: GETUPVAL  R22 U21      ; R22 := U21
621 [-]: CALL      R22 1 2      ; R22 := R22()
622 [-]: TEST      R22 0        ; if not R22 then PC := 629
623 [-]: JMP       629          ; PC := 629
624 [-]: LOADKB    R22 0 0      ; R22 := false
625 [-]: SETGLOBAL R22 K40      ; mShowDuringLoadingScreen := R22
626 [-]: GETGLOBAL R22 K1       ; R22 := 0xae91e43b
627 [-]: SELF      R22 R22 K50  ; R23 := R22; R22 := R22[0x32302b4a]
628 [-]: CALL      R22 2 1      ; R22(R23)
629 [-]: LOADKB    R22 1 0      ; R22 := true
630 [-]: SETGLOBAL R22 K101     ; mQuestMissionChecked := R22
631 [-]: GETGLOBAL R22 K64      ; R22 := mAutoCloseDelay
632 [-]: LT        0 R22 K12    ; if R22 >= 0.000000 then PC := 669
633 [-]: JMP       669          ; PC := 669
634 [-]: GETGLOBAL R22 K54      ; R22 := mWaitingForDbUpdate
635 [-]: TEST      R22 1        ; if R22 then PC := 645
636 [-]: JMP       645          ; PC := 645
637 [-]: GETUPVAL  R22 U11      ; R22 := U11
638 [-]: GETTABLE  R22 R22 K38  ; R22 := R22["isPvp"]
639 [-]: TEST      R22 0        ; if not R22 then PC := 667
640 [-]: JMP       667          ; PC := 667
641 [-]: GETUPVAL  R22 U11      ; R22 := U11
642 [-]: GETTABLE  R22 R22 K104 ; R22 := R22["allPlayersCommitted"]
643 [-]: TEST      R22 1        ; if R22 then PC := 667
644 [-]: JMP       667          ; PC := 667
645 [-]: GETUPVAL  R22 U11      ; R22 := U11
646 [-]: GETTABLE  R22 R22 K38  ; R22 := R22["isPvp"]
647 [-]: TEST      R22 1        ; if R22 then PC := 658
648 [-]: JMP       658          ; PC := 658
649 [-]: GETUPVAL  R22 U8       ; R22 := U8
650 [-]: TEST      R22 1        ; if R22 then PC := 656
651 [-]: JMP       656          ; PC := 656
652 [-]: GETUPVAL  R22 U22      ; R22 := U22
653 [-]: CALL      R22 1 2      ; R22 := R22()
654 [-]: TEST      R22 1        ; if R22 then PC := 658
655 [-]: JMP       658          ; PC := 658
656 [-]: LOADKB    R22 1 0      ; R22 := true
657 [-]: SETGLOBAL R22 K105     ; mCloseWhenDbUpdateComplete := R22
658 [-]: GETGLOBAL R22 K1       ; R22 := 0xae91e43b
659 [-]: SELF      R22 R22 K55  ; R23 := R22; R22 := R22[0x42b04007]
660 [-]: LOADK     R24 K56      ; R24 := "/Lotus/Language/Menu/UpdatingDB"
661 [-]: LOADKB    R25 0 0      ; R25 := false
662 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
663 [-]: GETUPVAL  R23 U12      ; R23 := U12
664 [-]: MOVE      R24 R22      ; R24 := R22
665 [-]: CALL      R23 2 1      ; R23(R24)
666 [-]: JMP       669          ; PC := 669
667 [-]: GETUPVAL  R23 U14      ; R23 := U14
668 [-]: CALL      R23 1 1      ; R23()
669 [-]: GETGLOBAL R23 K40      ; R23 := mShowDuringLoadingScreen
670 [-]: TEST      R23 1        ; if R23 then PC := 741
671 [-]: JMP       741          ; PC := 741
672 [-]: GETGLOBAL R23 K64      ; R23 := mAutoCloseDelay
673 [-]: LE        0 R23 K14    ; if R23 > 1.000000 then PC := 702
674 [-]: JMP       702          ; PC := 702
675 [-]: GETUPVAL  R23 U8       ; R23 := U8
676 [-]: TEST      R23 0        ; if not R23 then PC := 681
677 [-]: JMP       681          ; PC := 681
678 [-]: CONST     R23 0        ; R23 := 0.000000
679 [-]: SETGLOBAL R23 K106     ; mFadeOut := R23
680 [-]: JMP       688          ; PC := 688
681 [-]: GETGLOBAL R23 K107     ; R23 := 0x42dcc9f5
682 [-]: GETGLOBAL R24 K106     ; R24 := mFadeOut
683 [-]: SUB       R24 R24 R1   ; R24 := R24 - R1
684 [-]: CONST     R25 0        ; R25 := 0.000000
685 [-]: CONST     R26 1        ; R26 := 1.000000
686 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
687 [-]: SETGLOBAL R23 K106     ; mFadeOut := R23
688 [-]: GETGLOBAL R23 K1       ; R23 := 0xae91e43b
689 [-]: SELF      R23 R23 K31  ; R24 := R23; R23 := R23[0x67bc869f]
690 [-]: LOADK     R25 K23      ; R25 := "_root"
691 [-]: CONST     R26 10       ; R26 := 10.000000
692 [-]: GETGLOBAL R27 K106     ; R27 := mFadeOut
693 [-]: MUL       R27 R27 K45  ; R27 := R27 * 100.000000
694 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
695 [-]: GETGLOBAL R23 K1       ; R23 := 0xae91e43b
696 [-]: SELF      R23 R23 K31  ; R24 := R23; R23 := R23[0x67bc869f]
697 [-]: LOADK     R25 K108     ; R25 := "background"
698 [-]: CONST     R26 10       ; R26 := 10.000000
699 [-]: GETGLOBAL R27 K106     ; R27 := mFadeOut
700 [-]: MUL       R27 R27 K45  ; R27 := R27 * 100.000000
701 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
702 [-]: GETGLOBAL R23 K64      ; R23 := mAutoCloseDelay
703 [-]: GETGLOBAL R24 K109     ; R24 := AUTO_CLOSE_FADEOUT_TIME
704 [-]: LE        0 R23 R24    ; if R23 > R24 then PC := 741
705 [-]: JMP       741          ; PC := 741
706 [-]: GETGLOBAL R23 K110     ; R23 := mPanelTransitionOutActive
707 [-]: TEST      R23 1        ; if R23 then PC := 741
708 [-]: JMP       741          ; PC := 741
709 [-]: LOADKB    R23 1 0      ; R23 := true
710 [-]: SETGLOBAL R23 K110     ; mPanelTransitionOutActive := R23
711 [-]: GETGLOBAL R23 K111     ; R23 := 0x25312c9b
712 [-]: GETGLOBAL R24 K1       ; R24 := 0xae91e43b
713 [-]: LOADK     R25 K112     ; R25 := "ExpandableArea.Progression.Affinity"
714 [-]: CONST     R26 2        ; R26 := 2.000000
715 [-]: NEWTABLE  R27 2 0      ; R27 := {}
716 [-]: CONST     R28 1        ; R28 := 1.000000
717 [-]: CONST     R29 10       ; R29 := 10.000000
718 [-]: SETLIST   R27 2 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 2
719 [-]: NEWTABLE  R28 2 0      ; R28 := {}
720 [-]: CONST     R29 100      ; R29 := 100.000000
721 [-]: CONST     R30 0        ; R30 := 0.000000
722 [-]: SETLIST   R28 2 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
723 [-]: CONST     R29 0        ; R29 := 0.000000
724 [-]: CONST     R30 0        ; R30 := 0.000000
725 [-]: CALL      R23 8 1      ; R23(R24,R25,R26,R27,R28,R29,R30)
726 [-]: GETGLOBAL R23 K111     ; R23 := 0x25312c9b
727 [-]: GETGLOBAL R24 K1       ; R24 := 0xae91e43b
728 [-]: LOADK     R25 K114     ; R25 := "ExpandableArea.Progression.Rewards"
729 [-]: CONST     R26 2        ; R26 := 2.000000
730 [-]: NEWTABLE  R27 2 0      ; R27 := {}
731 [-]: CONST     R28 1        ; R28 := 1.000000
732 [-]: CONST     R29 10       ; R29 := 10.000000
733 [-]: SETLIST   R27 2 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 2
734 [-]: NEWTABLE  R28 2 0      ; R28 := {}
735 [-]: CONST     R29 300      ; R29 := 300.000000
736 [-]: CONST     R30 0        ; R30 := 0.000000
737 [-]: SETLIST   R28 2 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
738 [-]: CONST     R29 0        ; R29 := 0.000000
739 [-]: CONST     R30 0        ; R30 := 0.000000
740 [-]: CALL      R23 8 1      ; R23(R24,R25,R26,R27,R28,R29,R30)
741 [-]: GETGLOBAL R23 K115     ; R23 := mQueueUpdateButtons
742 [-]: TEST      R23 0        ; if not R23 then PC := 750
743 [-]: JMP       750          ; PC := 750
744 [-]: GETGLOBAL R23 K4       ; R23 := _T
745 [-]: GETTABLE  R23 R23 K116 ; R23 := R23["SetButtons"]
746 [-]: EQ        1 R23 K3     ; if R23 == nil then PC := 750
747 [-]: JMP       750          ; PC := 750
748 [-]: GETUPVAL  R23 U23      ; R23 := U23
749 [-]: CALL      R23 1 1      ; R23()
750 [-]: GETGLOBAL R23 K4       ; R23 := _T
751 [-]: GETTABLE  R23 R23 K5   ; R23 := R23["eomScreenMode"]
752 [-]: GETUPVAL  R24 U2       ; R24 := U2
753 [-]: GETTABLE  R24 R24 K32  ; R24 := R24["QUICK_PREVIEW"]
754 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 784
755 [-]: JMP       784          ; PC := 784
756 [-]: GETUPVAL  R23 U24      ; R23 := U24
757 [-]: CALL      R23 1 1      ; R23()
758 [-]: GETGLOBAL R23 K0       ; R23 := 0x7b998233
759 [-]: GETGLOBAL R24 K117     ; R24 := mRewardGrid
760 [-]: CALL      R23 2 2      ; R23 := R23(R24)
761 [-]: TEST      R23 1        ; if R23 then PC := 769
762 [-]: JMP       769          ; PC := 769
763 [-]: GETGLOBAL R23 K117     ; R23 := mRewardGrid
764 [-]: SELF      R23 R23 K118 ; R24 := R23; R23 := R23[0x741d078c]
765 [-]: CLOSURE   R25 1        ; R25 := closure(Function #144.2)
766 [-]: GETUPVAL  R0 U25       ; R0 := U25
767 [-]: MOVE      R0 R1        ; R0 := R1
768 [-]: CALL      R23 3 1      ; R23(R24,R25)
769 [-]: GETGLOBAL R23 K2       ; R23 := mInitialized
770 [-]: TEST      R23 0        ; if not R23 then PC := 784
771 [-]: JMP       784          ; PC := 784
772 [-]: GETGLOBAL R23 K119     ; R23 := mPendingTallies
773 [-]: EQ        0 R23 K12    ; if R23 ~= 0.000000 then PC := 784
774 [-]: JMP       784          ; PC := 784
775 [-]: GETGLOBAL R23 K64      ; R23 := mAutoCloseDelay
776 [-]: LT        0 R23 K120   ; if R23 >= 3.500000 then PC := 784
777 [-]: JMP       784          ; PC := 784
778 [-]: GETUPVAL  R23 U26      ; R23 := U26
779 [-]: CALL      R23 1 1      ; R23()
780 [-]: CONST     R23 -1       ; R23 := -1.000000
781 [-]: SETGLOBAL R23 K119     ; mPendingTallies := R23
782 [-]: GETUPVAL  R23 U27      ; R23 := U27
783 [-]: CALL      R23 1 1      ; R23()
784 [-]: GETGLOBAL R23 K4       ; R23 := _T
785 [-]: GETTABLE  R23 R23 K121 ; R23 := R23["MissionEnded"]
786 [-]: TEST      R23 1        ; if R23 then PC := 812
787 [-]: JMP       812          ; PC := 812
788 [-]: GETUPVAL  R23 U13      ; R23 := U13
789 [-]: GETTABLE  R23 R23 K58  ; R23 := R23[0xcdc34211]
790 [-]: CALL      R23 1 2      ; R23 := R23()
791 [-]: TEST      R23 0        ; if not R23 then PC := 812
792 [-]: JMP       812          ; PC := 812
793 [-]: TEST      R0 1         ; if R0 then PC := 812
794 [-]: JMP       812          ; PC := 812
795 [-]: GETGLOBAL R23 K10      ; R23 := 0xbe190284
796 [-]: SELF      R23 R23 K83  ; R24 := R23; R23 := R23[0xf2deaf69]
797 [-]: GETGLOBAL R25 K122     ; R25 := gLotusGameRulesType
798 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
799 [-]: TEST      R23 0        ; if not R23 then PC := 807
800 [-]: JMP       807          ; PC := 807
801 [-]: GETUPVAL  R23 U28      ; R23 := U28
802 [-]: GETGLOBAL R24 K10      ; R24 := 0xbe190284
803 [-]: SELF      R24 R24 K123 ; R25 := R24; R24 := R24[0x9fad7d24]
804 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
805 [-]: CALL      R23 0 1      ; R23(R24,...)
806 [-]: JMP       812          ; PC := 812
807 [-]: GETUPVAL  R23 U28      ; R23 := U28
808 [-]: GETGLOBAL R24 K10      ; R24 := 0xbe190284
809 [-]: SELF      R24 R24 K124 ; R25 := R24; R24 := R24[0x8dc40238]
810 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
811 [-]: CALL      R23 0 1      ; R23(R24,...)
812 [-]: GETGLOBAL R23 K117     ; R23 := mRewardGrid
813 [-]: EQ        1 R23 K3     ; if R23 == nil then PC := 845
814 [-]: JMP       845          ; PC := 845
815 [-]: GETGLOBAL R23 K117     ; R23 := mRewardGrid
816 [-]: GETTABLE  R23 R23 K125 ; R23 := R23["mScrollBar"]
817 [-]: EQ        1 R23 K3     ; if R23 == nil then PC := 845
818 [-]: JMP       845          ; PC := 845
819 [-]: GETGLOBAL R23 K95      ; R23 := 0x5bced4c4
820 [-]: GETTABLE  R23 R23 K126 ; R23 := R23[0xe4a5b3ca]
821 [-]: GETGLOBAL R24 K117     ; R24 := mRewardGrid
822 [-]: GETTABLE  R24 R24 K125 ; R24 := R24["mScrollBar"]
823 [-]: GETTABLE  R24 R24 K127 ; R24 := R24["mSmoothScroll"]
824 [-]: GETTABLE  R24 R24 K128 ; R24 := R24["mTargetVal"]
825 [-]: GETGLOBAL R25 K117     ; R25 := mRewardGrid
826 [-]: GETTABLE  R25 R25 K125 ; R25 := R25["mScrollBar"]
827 [-]: GETTABLE  R25 R25 K127 ; R25 := R25["mSmoothScroll"]
828 [-]: GETTABLE  R25 R25 K129 ; R25 := R25["mCurVal"]
829 [-]: SUB       R24 R24 R25  ; R24 := R24 - R25
830 [-]: CALL      R23 2 2      ; R23 := R23(R24)
831 [-]: LT        1 R23 K130   ; if R23 < 0.001000 then PC := 834
832 [-]: JMP       834          ; PC := 834
833 [-]: LOADKB    R23 0 1      ; R23 := false; PC := 834
834 [-]: LOADKB    R23 1 0      ; R23 := true
835 [-]: GETUPVAL  R24 U29      ; R24 := U29
836 [-]: EQ        1 R24 R23    ; if R24 == R23 then PC := 844
837 [-]: JMP       844          ; PC := 844
838 [-]: SETUPVAL  R23 U29      ; U82 := R29
839 [-]: GETGLOBAL R24 K117     ; R24 := mRewardGrid
840 [-]: SELF      R24 R24 K131 ; R25 := R24; R24 := R24[0xea061e98]
841 [-]: CLOSURE   R26 2        ; R26 := closure(Function #144.3)
842 [-]: MOVE      R0 R23       ; R0 := R23
843 [-]: CALL      R24 3 1      ; R24(R25,R26)
844 [-]: CLOSE     R23          ; SAVE R23,...
845 [-]: RETURN    R0 1         ; return 


; Function #144.1:
;
; Name:            
; Defined at line: 6694
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "ForceFailSkirmish: return to dojo'"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xf56e23e3]
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: RETURN    R0 1         ; return 


; Function #144.2:
;
; Name:            
; Defined at line: 6796
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Card"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xfaa69527]
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: RETURN    R0 1         ; return 


; Function #144.3:
;
; Name:            
; Defined at line: 6824
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xc0a3774b]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "Btn"
  5 [-]: CONST     R5 59        ; R5 := 59.000000
  6 [-]: GETUPVAL  R6 U0        ; R6 := U0
  7 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  8 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 6833
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LEN       R1 R1        ; R1 := # R1
  3 [-]: CONST     R2 1         ; R2 := 1.000000
  4 [-]: CONST     R3 -1        ; R3 := -1.000000
  5 [-]: FORPREP   R1 25        ; R1 -= R3; PC := 25
  6 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
  9 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["storeItem"]
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 1         ; if R5 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 15 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["storeItem"]
 16 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5[0xfe9eb1a5]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: EQ        0 R5 K4      ; if R5 ~= 35.000000 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R5 K5        ; R5 := 0x33bdd652
 21 [-]: GETTABLE  R5 R5 K6     ; R5 := R5[0x9c1f3b5a]
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: MOVE      R7 R4        ; R7 := R4
 24 [-]: CALL      R5 3 1       ; R5(R6,R7)
 25 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 26 [-]: LEN       R5 R0        ; R5 := # R0
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: LEN       R6 R6        ; R6 := # R6
 29 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: GETGLOBAL R5 K7        ; R5 := 0x3d106989
 32 [-]: LOADK     R6 K8        ; R6 := "WRONG NUM REWARDS"
 33 [-]: CALL      R5 2 1       ; R5(R6)
 34 [-]: CONST     R5 1         ; R5 := 1.000000
 35 [-]: LEN       R6 R0        ; R6 := # R0
 36 [-]: CONST     R7 1         ; R7 := 1.000000
 37 [-]: FORPREP   R5 80        ; R5 -= R7; PC := 80
 38 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
 39 [-]: GETGLOBAL R10 K9       ; R10 := 0xb009bbc6
 40 [-]: GETTABLE  R11 R9 K10   ; R11 := R9["StoreItem"]
 41 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 42 [-]: SETTABLE  R9 K1 R10    ; R9["storeItem"] := R10
 43 [-]: GETTABLE  R10 R9 K12   ; R10 := R9["ItemCount"]
 44 [-]: SETTABLE  R9 K11 R10   ; R9["itemCount"] := R10
 45 [-]: GETTABLE  R10 R9 K14   ; R10 := R9["UpgradeLevel"]
 46 [-]: SETTABLE  R9 K13 R10   ; R9["levelOverride"] := R10
 47 [-]: GETTABLE  R10 R9 K16   ; R10 := R9["Credits"]
 48 [-]: SETTABLE  R9 K15 R10   ; R9["credits"] := R10
 49 [-]: GETTABLE  R10 R9 K13   ; R10 := R9["levelOverride"]
 50 [-]: EQ        0 R10 K17    ; if R10 ~= nil then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: SETTABLE  R9 K13 K18   ; R9["levelOverride"] := 0.000000
 53 [-]: GETUPVAL  R10 U0       ; R10 := U0
 54 [-]: LEN       R10 R10      ; R10 := # R10
 55 [-]: LE        0 R8 R10     ; if R8 > R10 then PC := 80
 56 [-]: JMP       80           ; PC := 80
 57 [-]: GETUPVAL  R10 U0       ; R10 := U0
 58 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 59 [-]: GETTABLE  R11 R9 K1    ; R11 := R9["storeItem"]
 60 [-]: GETTABLE  R12 R10 K1   ; R12 := R10["storeItem"]
 61 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 66
 62 [-]: JMP       66           ; PC := 66
 63 [-]: GETGLOBAL R11 K7       ; R11 := 0x3d106989
 64 [-]: LOADK     R12 K19      ; R12 := "WRONG TYPE"
 65 [-]: CALL      R11 2 1      ; R11(R12)
 66 [-]: GETTABLE  R11 R9 K11   ; R11 := R9["itemCount"]
 67 [-]: GETTABLE  R12 R10 K11  ; R12 := R10["itemCount"]
 68 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETGLOBAL R11 K7       ; R11 := 0x3d106989
 71 [-]: LOADK     R12 K20      ; R12 := "WRONG COUNT"
 72 [-]: CALL      R11 2 1      ; R11(R12)
 73 [-]: GETTABLE  R11 R9 K13   ; R11 := R9["levelOverride"]
 74 [-]: GETTABLE  R12 R10 K13  ; R12 := R10["levelOverride"]
 75 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 80
 76 [-]: JMP       80           ; PC := 80
 77 [-]: GETGLOBAL R11 K7       ; R11 := 0x3d106989
 78 [-]: LOADK     R12 K21      ; R12 := "WRONG LEVEL"
 79 [-]: CALL      R11 2 1      ; R11(R12)
 80 [-]: FORLOOP   R5 38        ; R5 += R7; if R5 <= R6 then begin PC := 38; R8 := R5 end
 81 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 6873
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADKB    R0 0 0       ; R0 := false
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0x89326c93
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xfb64e76c]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADKB    R1 0 0       ; R1 := false
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x5ca33548]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x0eb34c69]
 22 [-]: GETGLOBAL R4 K6        ; R4 := 0x0469f296
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: LOADK     R6 K7        ; R6 := "NemesisSpawned"
 25 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: CONST     R5 0         ; R5 := 0.000000
 28 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 29 [-]: EQ        0 R2 K8      ; if R2 ~= 0.000000 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADKB    R2 0 0       ; R2 := false
 32 [-]: RETURN    R2 2         ; return R2
 33 [-]: GETGLOBAL R2 K9        ; R2 := 0x25d99d89
 34 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x600a0ad6]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: SELF      R3 R2 K11    ; R4 := R2; R3 := R2[0xd8140b94]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: TEST      R3 1         ; if R3 then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: LOADKB    R3 0 0       ; R3 := false
 41 [-]: RETURN    R3 2         ; return R3
 42 [-]: GETGLOBAL R3 K12       ; R3 := 0xe7f2b02f
 43 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x6923a4fa]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: EQ        1 R3 K14     ; if R3 == "" then PC := 82
 46 [-]: JMP       82           ; PC := 82
 47 [-]: GETGLOBAL R4 K15       ; R4 := cjson
 48 [-]: GETTABLE  R4 R4 K16    ; R4 := R4[0x7ab914d8]
 49 [-]: MOVE      R5 R3        ; R5 := R3
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: GETTABLE  R5 R4 K17    ; R5 := R4["name"]
 52 [-]: EQ        1 R5 K18     ; if R5 == nil then PC := 82
 53 [-]: JMP       82           ; PC := 82
 54 [-]: GETGLOBAL R5 K19       ; R5 := 0x7f5022cf
 55 [-]: GETTABLE  R5 R5 K20    ; R5 := R5[0xa5c556b9]
 56 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["name"]
 57 [-]: GETUPVAL  R7 U0        ; R7 := U0
 58 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["NEMESIS_MISSION_TAG"]
 59 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 60 [-]: EQ        1 R5 K18     ; if R5 == nil then PC := 82
 61 [-]: JMP       82           ; PC := 82
 62 [-]: GETGLOBAL R6 K19       ; R6 := 0x7f5022cf
 63 [-]: GETTABLE  R6 R6 K22    ; R6 := R6[0x1a94c9cc]
 64 [-]: GETTABLE  R7 R4 K17    ; R7 := R4["name"]
 65 [-]: CONST     R8 1         ; R8 := 1.000000
 66 [-]: SUB       R9 R5 K23    ; R9 := R5 - 1.000000
 67 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 68 [-]: GETTABLE  R7 R2 K24    ; R7 := R2["mInfluenceNodes"]
 69 [-]: CONST     R8 1         ; R8 := 1.000000
 70 [-]: LEN       R9 R7        ; R9 := # R7
 71 [-]: CONST     R10 1        ; R10 := 1.000000
 72 [-]: FORPREP   R8 81        ; R8 -= R10; PC := 81
 73 [-]: GETTABLE  R12 R7 R11   ; R12 := R7[R11]
 74 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["mNode"]
 75 [-]: SELF      R12 R12 K26  ; R13 := R12; R12 := R12[0x6d604ba7]
 76 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 77 [-]: EQ        0 R12 R6     ; if R12 ~= R6 then PC := 81
 78 [-]: JMP       81           ; PC := 81
 79 [-]: LOADKB    R12 1 0      ; R12 := true
 80 [-]: RETURN    R12 2        ; return R12
 81 [-]: FORLOOP   R8 73        ; R8 += R10; if R8 <= R9 then begin PC := 73; R11 := R8 end
 82 [-]: GETUPVAL  R12 U0       ; R12 := U0
 83 [-]: GETTABLE  R12 R12 K27  ; R12 := R12[0x5e35d4d6]
 84 [-]: CALL      R12 1 2      ; R12 := R12()
 85 [-]: SELF      R13 R12 K28  ; R14 := R12; R13 := R12[0x3ad9ed31]
 86 [-]: GETGLOBAL R15 K4       ; R15 := 0xbe190284
 87 [-]: SELF      R15 R15 K29  ; R16 := R15; R15 := R15[0xef893aec]
 88 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 89 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["location"]
 90 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 91 [-]: GETTABLE  R14 R13 K31  ; R14 := R13["missionTag"]
 92 [-]: GETGLOBAL R15 K6       ; R15 := 0x0469f296
 93 [-]: LOADK     R16 K32      ; R16 := "NemesisShowdown"
 94 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 95 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: LOADKB    R14 0 1      ; R14 := false; PC := 98
 98 [-]: LOADKB    R14 1 0      ; R14 := true
 99 [-]: RETURN    R14 2        ; return R14
100 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 6915
; #Upvalues:       23
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  85

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["result"]
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["body"]
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: SETUPVAL  R2 U0        ; U82 := R0
 13 [-]: LOADKB    R2 0 0       ; R2 := false
 14 [-]: SETGLOBAL R2 K4        ; mWaitingForDbUpdate := R2
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: LOADK     R3 K5        ; R3 := " "
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: CONST     R2 5         ; R2 := 5.000000
 19 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 20 [-]: GETGLOBAL R4 K6        ; R4 := mGameData
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 0         ; if not R3 then PC := 55
 23 [-]: JMP       55           ; PC := 55
 24 [-]: LT        0 K7 R2      ; if 0.000000 >= R2 then PC := 55
 25 [-]: JMP       55           ; PC := 55
 26 [-]: SUB       R2 R2 K8     ; R2 := R2 - 1.000000
 27 [-]: GETGLOBAL R3 K9        ; R3 := 0x3d106989
 28 [-]: LOADK     R4 K10       ; R4 := "!Something stomped on mGameData! Trying to recover"
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: GETGLOBAL R3 K11       ; R3 := 0x76ea806b
 31 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x3f3ae64c]
 32 [-]: CONST     R5 0         ; R5 := 0.000000
 33 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 34 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 35 [-]: MOVE      R5 R3        ; R5 := R3
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 1         ; if R4 then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: SELF      R4 R3 K13    ; R5 := R3; R4 := R3[0x80563238]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: SETGLOBAL R4 K6        ; mGameData := R4
 42 [-]: JMP       46           ; PC := 46
 43 [-]: GETGLOBAL R4 K9        ; R4 := 0x3d106989
 44 [-]: LOADK     R5 K14       ; R5 := "No player profile!!!!"
 45 [-]: CALL      R4 2 1       ; R4(R5)
 46 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 47 [-]: GETGLOBAL R5 K6        ; R5 := mGameData
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: TEST      R4 0         ; if not R4 then PC := 19
 50 [-]: JMP       19           ; PC := 19
 51 [-]: GETGLOBAL R4 K15       ; R4 := 0xcbd666e1
 52 [-]: CONST     R5 0         ; R5 := 0.000000
 53 [-]: CALL      R4 2 1       ; R4(R5)
 54 [-]: JMP       19           ; PC := 19
 55 [-]: CONST     R4 0         ; R4 := 0.000000
 56 [-]: TEST      R0 0         ; if not R0 then PC := 587
 57 [-]: JMP       587          ; PC := 587
 58 [-]: EQ        1 R0 K16     ; if R0 == "false" then PC := 587
 59 [-]: JMP       587          ; PC := 587
 60 [-]: GETGLOBAL R5 K17       ; R5 := _T
 61 [-]: SETTABLE  R5 K18 K19   ; R5["gInventorySaved"] := true
 62 [-]: GETGLOBAL R5 K20       ; R5 := cjson
 63 [-]: GETTABLE  R5 R5 K21    ; R5 := R5[0x7ab914d8]
 64 [-]: MOVE      R6 R1        ; R6 := R1
 65 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 66 [-]: GETTABLE  R6 R5 K22    ; R6 := R5["MissionRewards"]
 67 [-]: EQ        1 R6 K23     ; if R6 == nil then PC := 122
 68 [-]: JMP       122          ; PC := 122
 69 [-]: GETUPVAL  R6 U2        ; R6 := U2
 70 [-]: GETTABLE  R7 R5 K22    ; R7 := R5["MissionRewards"]
 71 [-]: CALL      R6 2 1       ; R6(R7)
 72 [-]: GETTABLE  R6 R5 K22    ; R6 := R5["MissionRewards"]
 73 [-]: SETUPVAL  R6 U3        ; U82 := R3
 74 [-]: GETGLOBAL R6 K1        ; R6 := 0xbe190284
 75 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6[0xf2deaf69]
 76 [-]: GETGLOBAL R8 K25       ; R8 := gLotusGameRulesType
 77 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 78 [-]: TEST      R6 0         ; if not R6 then PC := 122
 79 [-]: JMP       122          ; PC := 122
 80 [-]: GETGLOBAL R6 K6        ; R6 := mGameData
 81 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0x261f2922]
 82 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 83 [-]: GETGLOBAL R7 K27       ; R7 := 0xc8802016
 84 [-]: GETUPVAL  R8 U3        ; R8 := U3
 85 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 86 [-]: JMP       110          ; PC := 110
 87 [-]: GETTABLE  R12 R11 K28  ; R12 := R11["credits"]
 88 [-]: EQ        1 R12 K23    ; if R12 == nil then PC := 103
 89 [-]: JMP       103          ; PC := 103
 90 [-]: GETUPVAL  R12 U4       ; R12 := U4
 91 [-]: MOVE      R13 R4       ; R13 := R4
 92 [-]: GETTABLE  R14 R11 K28  ; R14 := R11["credits"]
 93 [-]: LOADK     R15 K29      ; R15 := "Credits"
 94 [-]: GETUPVAL  R16 U5       ; R16 := U5
 95 [-]: GETTABLE  R16 R16 K30  ; R16 := R16[0x1142c7a8]
 96 [-]: GETTABLE  R17 R11 K28  ; R17 := R11["credits"]
 97 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 98 [-]: LOADK     R17 K31      ; R17 := " collected credits"
 99 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
100 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
101 [-]: MOVE      R4 R12       ; R4 := R12
102 [-]: JMP       110          ; PC := 110
103 [-]: GETGLOBAL R12 K6       ; R12 := mGameData
104 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12[0x1b746252]
105 [-]: GETTABLE  R14 R11 K33  ; R14 := R11["storeItem"]
106 [-]: GETTABLE  R15 R11 K34  ; R15 := R11["levelOverride"]
107 [-]: LOADKB    R16 1 0      ; R16 := true
108 [-]: GETTABLE  R17 R11 K35  ; R17 := R11["itemCount"]
109 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
110 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 87; R9 := R10 end
111 [-]: JMP       87           ; PC := 87
112 [-]: CONST     R12 1        ; R12 := 1.000000
113 [-]: LEN       R13 R6       ; R13 := # R6
114 [-]: CONST     R14 1        ; R14 := 1.000000
115 [-]: FORPREP   R12 121      ; R12 -= R14; PC := 121
116 [-]: GETGLOBAL R16 K36      ; R16 := 0x33bdd652
117 [-]: GETTABLE  R16 R16 K37  ; R16 := R16[0x23d5322f]
118 [-]: GETUPVAL  R17 U3       ; R17 := U3
119 [-]: GETTABLE  R18 R6 R15   ; R18 := R6[R15]
120 [-]: CALL      R16 3 1      ; R16(R17,R18)
121 [-]: FORLOOP   R12 116      ; R12 += R14; if R12 <= R13 then begin PC := 116; R15 := R12 end
122 [-]: GETTABLE  R16 R5 K38   ; R16 := R5["TotalCredits"]
123 [-]: EQ        1 R16 K23    ; if R16 == nil then PC := 133
124 [-]: JMP       133          ; PC := 133
125 [-]: GETGLOBAL R16 K39      ; R16 := mPlayerMissionInfo
126 [-]: GETTABLE  R17 R5 K38   ; R17 := R5["TotalCredits"]
127 [-]: GETTABLE  R17 R17 K8   ; R17 := R17[1.000000]
128 [-]: SETTABLE  R16 K40 R17  ; R16["mTotalCredits"] := R17
129 [-]: GETGLOBAL R16 K39      ; R16 := mPlayerMissionInfo
130 [-]: GETTABLE  R17 R5 K38   ; R17 := R5["TotalCredits"]
131 [-]: GETTABLE  R17 R17 K42  ; R17 := R17[2.000000]
132 [-]: SETTABLE  R16 K41 R17  ; R16["mFinalCredits"] := R17
133 [-]: GETTABLE  R16 R5 K43   ; R16 := R5["NemesisRankUp"]
134 [-]: EQ        1 R16 K23    ; if R16 == nil then PC := 160
135 [-]: JMP       160          ; PC := 160
136 [-]: GETGLOBAL R16 K44      ; R16 := 0x25d99d89
137 [-]: SELF      R16 R16 K45  ; R17 := R16; R16 := R16[0x600a0ad6]
138 [-]: CALL      R16 2 2      ; R16 := R16(R17)
139 [-]: GETUPVAL  R17 U6       ; R17 := U6
140 [-]: GETTABLE  R17 R17 K46  ; R17 := R17[0x6a965652]
141 [-]: MOVE      R18 R16      ; R18 := R16
142 [-]: CALL      R17 2 2      ; R17 := R17(R18)
143 [-]: GETGLOBAL R18 K47      ; R18 := 0x603636ad
144 [-]: LOADK     R19 K48      ; R19 := "/Lotus/Language/Kingpins/NemesisPopupRankupLabel"
145 [-]: LOADKB    R20 0 0      ; R20 := false
146 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
147 [-]: GETGLOBAL R19 K49      ; R19 := 0x0032441c
148 [-]: NEWTABLE  R20 0 6      ; R20 := {}
149 [-]: SETTABLE  R20 K51 K19  ; R20["OpenScreen"] := true
150 [-]: SETTABLE  R20 K52 K19  ; R20["IsRankUp"] := true
151 [-]: GETTABLE  R21 R5 K43   ; R21 := R5["NemesisRankUp"]
152 [-]: ADD       R21 R21 K8   ; R21 := R21 + 1.000000
153 [-]: SETTABLE  R20 K53 R21  ; R20["Rank"] := R21
154 [-]: SETTABLE  R20 K54 R18  ; R20["Description"] := R18
155 [-]: GETTABLE  R21 R17 K56  ; R21 := R17["mName"]
156 [-]: SETTABLE  R20 K55 R21  ; R20["Name"] := R21
157 [-]: GETTABLE  R21 R17 K58  ; R21 := R17["mFaction"]
158 [-]: SETTABLE  R20 K57 R21  ; R20["FactionId"] := R21
159 [-]: SETTABLE  R19 K50 R20  ; R19["NemesisPopup_Info"] := R20
160 [-]: GETTABLE  R19 R5 K59   ; R19 := R5["NemesisTaxInfo"]
161 [-]: EQ        1 R19 K23    ; if R19 == nil then PC := 288
162 [-]: JMP       288          ; PC := 288
163 [-]: GETUPVAL  R19 U6       ; R19 := U6
164 [-]: GETTABLE  R19 R19 K60  ; R19 := R19[0x9d3fe9c0]
165 [-]: GETGLOBAL R20 K61      ; R20 := 0x0469f296
166 [-]: LOADK     R21 K62      ; R21 := "RewardsTaxed"
167 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
168 [-]: CALL      R19 0 1      ; R19(R20,...)
169 [-]: GETGLOBAL R19 K17      ; R19 := _T
170 [-]: SETTABLE  R19 K63 K64  ; R19["EndOfMissionVoiceOverride"] := ""
171 [-]: GETGLOBAL R19 K39      ; R19 := mPlayerMissionInfo
172 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["mNemesisTaxInfo"]
173 [-]: GETGLOBAL R20 K67      ; R20 := 0x03f57322
174 [-]: GETTABLE  R21 R5 K59   ; R21 := R5["NemesisTaxInfo"]
175 [-]: GETTABLE  R21 R21 K68  ; R21 := R21["TaxRate"]
176 [-]: CALL      R20 2 2      ; R20 := R20(R21)
177 [-]: SETTABLE  R19 K66 R20  ; R19["mTaxRate"] := R20
178 [-]: GETTABLE  R19 R5 K59   ; R19 := R5["NemesisTaxInfo"]
179 [-]: GETTABLE  R19 R19 K69  ; R19 := R19["TaxedCredits"]
180 [-]: EQ        1 R19 K23    ; if R19 == nil then PC := 189
181 [-]: JMP       189          ; PC := 189
182 [-]: GETGLOBAL R19 K39      ; R19 := mPlayerMissionInfo
183 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["mNemesisTaxInfo"]
184 [-]: GETGLOBAL R20 K67      ; R20 := 0x03f57322
185 [-]: GETTABLE  R21 R5 K59   ; R21 := R5["NemesisTaxInfo"]
186 [-]: GETTABLE  R21 R21 K69  ; R21 := R21["TaxedCredits"]
187 [-]: CALL      R20 2 2      ; R20 := R20(R21)
188 [-]: SETTABLE  R19 K70 R20  ; R19["mTaxedCredits"] := R20
189 [-]: GETTABLE  R19 R5 K59   ; R19 := R5["NemesisTaxInfo"]
190 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["TaxedFusionPoints"]
191 [-]: EQ        1 R19 K23    ; if R19 == nil then PC := 200
192 [-]: JMP       200          ; PC := 200
193 [-]: GETGLOBAL R19 K39      ; R19 := mPlayerMissionInfo
194 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["mNemesisTaxInfo"]
195 [-]: GETGLOBAL R20 K67      ; R20 := 0x03f57322
196 [-]: GETTABLE  R21 R5 K59   ; R21 := R5["NemesisTaxInfo"]
197 [-]: GETTABLE  R21 R21 K71  ; R21 := R21["TaxedFusionPoints"]
198 [-]: CALL      R20 2 2      ; R20 := R20(R21)
199 [-]: SETTABLE  R19 K72 R20  ; R19["mTaxedFusionPoints"] := R20
200 [-]: GETTABLE  R19 R5 K59   ; R19 := R5["NemesisTaxInfo"]
201 [-]: GETTABLE  R19 R19 K73  ; R19 := R19["TaxedCrewShipFusionPoints"]
202 [-]: EQ        1 R19 K23    ; if R19 == nil then PC := 211
203 [-]: JMP       211          ; PC := 211
204 [-]: GETGLOBAL R19 K39      ; R19 := mPlayerMissionInfo
205 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["mNemesisTaxInfo"]
206 [-]: GETGLOBAL R20 K67      ; R20 := 0x03f57322
207 [-]: GETTABLE  R21 R5 K59   ; R21 := R5["NemesisTaxInfo"]
208 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["TaxedCrewShipFusionPoints"]
209 [-]: CALL      R20 2 2      ; R20 := R20(R21)
210 [-]: SETTABLE  R19 K74 R20  ; R19["mTaxedCrewShipFusionPoints"] := R20
211 [-]: GETTABLE  R19 R5 K59   ; R19 := R5["NemesisTaxInfo"]
212 [-]: GETTABLE  R19 R19 K75  ; R19 := R19["TaxedMiscItems"]
213 [-]: EQ        1 R19 K23    ; if R19 == nil then PC := 242
214 [-]: JMP       242          ; PC := 242
215 [-]: NEWTABLE  R19 0 0      ; R19 := {}
216 [-]: CONST     R20 1        ; R20 := 1.000000
217 [-]: GETTABLE  R21 R5 K59   ; R21 := R5["NemesisTaxInfo"]
218 [-]: GETTABLE  R21 R21 K75  ; R21 := R21["TaxedMiscItems"]
219 [-]: LEN       R21 R21      ; R21 := # R21
220 [-]: CONST     R22 1        ; R22 := 1.000000
221 [-]: FORPREP   R20 238      ; R20 -= R22; PC := 238
222 [-]: GETTABLE  R24 R5 K59   ; R24 := R5["NemesisTaxInfo"]
223 [-]: GETTABLE  R24 R24 K75  ; R24 := R24["TaxedMiscItems"]
224 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
225 [-]: GETGLOBAL R25 K36      ; R25 := 0x33bdd652
226 [-]: GETTABLE  R25 R25 K37  ; R25 := R25[0x23d5322f]
227 [-]: MOVE      R26 R19      ; R26 := R19
228 [-]: GETGLOBAL R27 K76      ; R27 := 0x6c97a788
229 [-]: GETTABLE  R27 R27 K77  ; R27 := R27[0x925e2bbb]
230 [-]: GETGLOBAL R28 K78      ; R28 := 0x7ed0a956
231 [-]: GETTABLE  R29 R24 K79  ; R29 := R24["ItemType"]
232 [-]: CALL      R28 2 2      ; R28 := R28(R29)
233 [-]: GETGLOBAL R29 K67      ; R29 := 0x03f57322
234 [-]: GETTABLE  R30 R24 K80  ; R30 := R24["ItemCount"]
235 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
236 [-]: CALL      R27 0 0      ; R27,... := R27(R28,...)
237 [-]: CALL      R25 0 1      ; R25(R26,...)
238 [-]: FORLOOP   R20 222      ; R20 += R22; if R20 <= R21 then begin PC := 222; R23 := R20 end
239 [-]: GETGLOBAL R25 K39      ; R25 := mPlayerMissionInfo
240 [-]: GETTABLE  R25 R25 K65  ; R25 := R25["mNemesisTaxInfo"]
241 [-]: SETTABLE  R25 K81 R19  ; R25["mTaxedMiscItems"] := R19
242 [-]: GETTABLE  R25 R5 K59   ; R25 := R5["NemesisTaxInfo"]
243 [-]: GETTABLE  R25 R25 K82  ; R25 := R25["TaxedCollectedItems"]
244 [-]: EQ        1 R25 K23    ; if R25 == nil then PC := 288
245 [-]: JMP       288          ; PC := 288
246 [-]: NEWTABLE  R25 0 0      ; R25 := {}
247 [-]: CONST     R26 1        ; R26 := 1.000000
248 [-]: GETTABLE  R27 R5 K59   ; R27 := R5["NemesisTaxInfo"]
249 [-]: GETTABLE  R27 R27 K82  ; R27 := R27["TaxedCollectedItems"]
250 [-]: LEN       R27 R27      ; R27 := # R27
251 [-]: CONST     R28 1        ; R28 := 1.000000
252 [-]: FORPREP   R26 284      ; R26 -= R28; PC := 284
253 [-]: GETTABLE  R30 R5 K59   ; R30 := R5["NemesisTaxInfo"]
254 [-]: GETTABLE  R30 R30 K82  ; R30 := R30["TaxedCollectedItems"]
255 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
256 [-]: GETGLOBAL R31 K76      ; R31 := 0x6c97a788
257 [-]: GETTABLE  R31 R31 K83  ; R31 := R31[0xab8a5261]
258 [-]: CALL      R31 1 2      ; R31 := R31()
259 [-]: GETGLOBAL R32 K84      ; R32 := 0xb009bbc6
260 [-]: GETTABLE  R33 R30 K85  ; R33 := R30["StoreItem"]
261 [-]: CALL      R32 2 2      ; R32 := R32(R33)
262 [-]: SETTABLE  R31 K33 R32  ; R31["storeItem"] := R32
263 [-]: GETTABLE  R32 R30 K80  ; R32 := R30["ItemCount"]
264 [-]: EQ        1 R32 K23    ; if R32 == nil then PC := 271
265 [-]: JMP       271          ; PC := 271
266 [-]: GETGLOBAL R32 K67      ; R32 := 0x03f57322
267 [-]: GETTABLE  R33 R30 K80  ; R33 := R30["ItemCount"]
268 [-]: CALL      R32 2 2      ; R32 := R32(R33)
269 [-]: SETTABLE  R31 K35 R32  ; R31["itemCount"] := R32
270 [-]: JMP       272          ; PC := 272
271 [-]: SETTABLE  R31 K35 K8   ; R31["itemCount"] := 1.000000
272 [-]: GETTABLE  R32 R30 K86  ; R32 := R30["LevelOverride"]
273 [-]: EQ        1 R32 K23    ; if R32 == nil then PC := 279
274 [-]: JMP       279          ; PC := 279
275 [-]: GETGLOBAL R32 K67      ; R32 := 0x03f57322
276 [-]: GETTABLE  R33 R30 K86  ; R33 := R30["LevelOverride"]
277 [-]: CALL      R32 2 2      ; R32 := R32(R33)
278 [-]: SETTABLE  R31 K34 R32  ; R31["levelOverride"] := R32
279 [-]: GETGLOBAL R32 K36      ; R32 := 0x33bdd652
280 [-]: GETTABLE  R32 R32 K37  ; R32 := R32[0x23d5322f]
281 [-]: MOVE      R33 R25      ; R33 := R25
282 [-]: MOVE      R34 R31      ; R34 := R31
283 [-]: CALL      R32 3 1      ; R32(R33,R34)
284 [-]: FORLOOP   R26 253      ; R26 += R28; if R26 <= R27 then begin PC := 253; R29 := R26 end
285 [-]: GETGLOBAL R32 K39      ; R32 := mPlayerMissionInfo
286 [-]: GETTABLE  R32 R32 K65  ; R32 := R32["mNemesisTaxInfo"]
287 [-]: SETTABLE  R32 K87 R25  ; R32["mTaxedCollectedItems"] := R25
288 [-]: LOADK     R32 K88      ; R32 := "LichDefeatedPlayerTaunt"
289 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
290 [-]: GETTABLE  R33 R33 K89  ; R33 := R33["NemesisTaunt"]
291 [-]: EQ        1 R33 K23    ; if R33 == nil then PC := 299
292 [-]: JMP       299          ; PC := 299
293 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
294 [-]: GETTABLE  R33 R33 K89  ; R33 := R33["NemesisTaunt"]
295 [-]: SELF      R33 R33 K90  ; R34 := R33; R33 := R33[0x56c01834]
296 [-]: CALL      R33 2 2      ; R33 := R33(R34)
297 [-]: TEST      R33 1        ; if R33 then PC := 341
298 [-]: JMP       341          ; PC := 341
299 [-]: GETUPVAL  R33 U7       ; R33 := U7
300 [-]: CALL      R33 1 2      ; R33 := R33()
301 [-]: TEST      R33 0        ; if not R33 then PC := 354
302 [-]: JMP       354          ; PC := 354
303 [-]: GETGLOBAL R33 K1       ; R33 := 0xbe190284
304 [-]: SELF      R33 R33 K91  ; R34 := R33; R33 := R33[0x5d204145]
305 [-]: CALL      R33 2 2      ; R33 := R33(R34)
306 [-]: TEST      R33 0        ; if not R33 then PC := 354
307 [-]: JMP       354          ; PC := 354
308 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
309 [-]: GETGLOBAL R34 K49      ; R34 := 0x0032441c
310 [-]: GETTABLE  R34 R34 K92  ; R34 := R34["NemesisTauntCooldowns"]
311 [-]: TEST      R34 1        ; if R34 then PC := 314
312 [-]: JMP       314          ; PC := 314
313 [-]: NEWTABLE  R34 0 0      ; R34 := {}
314 [-]: SETTABLE  R33 K92 R34  ; R33["NemesisTauntCooldowns"] := R34
315 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
316 [-]: GETTABLE  R33 R33 K92  ; R33 := R33["NemesisTauntCooldowns"]
317 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
318 [-]: TEST      R33 0        ; if not R33 then PC := 329
319 [-]: JMP       329          ; PC := 329
320 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
321 [-]: GETTABLE  R33 R33 K92  ; R33 := R33["NemesisTauntCooldowns"]
322 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
323 [-]: ADD       R33 R33 K93  ; R33 := R33 + 1200.000000
324 [-]: GETGLOBAL R34 K1       ; R34 := 0xbe190284
325 [-]: SELF      R34 R34 K94  ; R35 := R34; R34 := R34[0x715c5d7f]
326 [-]: CALL      R34 2 2      ; R34 := R34(R35)
327 [-]: LT        0 R33 R34    ; if R33 >= R34 then PC := 354
328 [-]: JMP       354          ; PC := 354
329 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
330 [-]: GETGLOBAL R34 K61      ; R34 := 0x0469f296
331 [-]: MOVE      R35 R32      ; R35 := R32
332 [-]: CALL      R34 2 2      ; R34 := R34(R35)
333 [-]: SETTABLE  R33 K89 R34  ; R33["NemesisTaunt"] := R34
334 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
335 [-]: GETTABLE  R33 R33 K92  ; R33 := R33["NemesisTauntCooldowns"]
336 [-]: GETGLOBAL R34 K1       ; R34 := 0xbe190284
337 [-]: SELF      R34 R34 K94  ; R35 := R34; R34 := R34[0x715c5d7f]
338 [-]: CALL      R34 2 2      ; R34 := R34(R35)
339 [-]: SETTABLE  R33 R32 R34  ; R33[R32] := R34
340 [-]: JMP       354          ; PC := 354
341 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
342 [-]: GETTABLE  R33 R33 K89  ; R33 := R33["NemesisTaunt"]
343 [-]: GETGLOBAL R34 K61      ; R34 := 0x0469f296
344 [-]: MOVE      R35 R32      ; R35 := R32
345 [-]: CALL      R34 2 2      ; R34 := R34(R35)
346 [-]: EQ        0 R33 R34    ; if R33 ~= R34 then PC := 354
347 [-]: JMP       354          ; PC := 354
348 [-]: GETUPVAL  R33 U7       ; R33 := U7
349 [-]: CALL      R33 1 2      ; R33 := R33()
350 [-]: TEST      R33 1        ; if R33 then PC := 354
351 [-]: JMP       354          ; PC := 354
352 [-]: GETGLOBAL R33 K49      ; R33 := 0x0032441c
353 [-]: SETTABLE  R33 K89 K23  ; R33["NemesisTaunt"] := nil
354 [-]: GETTABLE  R33 R5 K95   ; R33 := R5["FusionPoints"]
355 [-]: EQ        1 R33 K23    ; if R33 == nil then PC := 360
356 [-]: JMP       360          ; PC := 360
357 [-]: GETGLOBAL R33 K39      ; R33 := mPlayerMissionInfo
358 [-]: GETTABLE  R34 R5 K95   ; R34 := R5["FusionPoints"]
359 [-]: SETTABLE  R33 K96 R34  ; R33["mFusionPoints"] := R34
360 [-]: GETTABLE  R33 R5 K97   ; R33 := R5["CrewShipFusionPoints"]
361 [-]: EQ        1 R33 K23    ; if R33 == nil then PC := 366
362 [-]: JMP       366          ; PC := 366
363 [-]: GETGLOBAL R33 K39      ; R33 := mPlayerMissionInfo
364 [-]: GETTABLE  R34 R5 K97   ; R34 := R5["CrewShipFusionPoints"]
365 [-]: SETTABLE  R33 K98 R34  ; R33["mCrewShipFusionPoints"] := R34
366 [-]: GETGLOBAL R33 K39      ; R33 := mPlayerMissionInfo
367 [-]: GETUPVAL  R34 U8       ; R34 := U8
368 [-]: SETTABLE  R33 K99 R34  ; R33["mPlayedTime"] := R34
369 [-]: GETTABLE  R33 R5 K100  ; R33 := R5["BonusVoidTrace"]
370 [-]: EQ        1 R33 K23    ; if R33 == nil then PC := 439
371 [-]: JMP       439          ; PC := 439
372 [-]: GETGLOBAL R33 K0       ; R33 := 0x7b998233
373 [-]: GETGLOBAL R34 K101     ; R34 := 0x89326c93
374 [-]: SELF      R34 R34 K102 ; R35 := R34; R34 := R34[0xfb64e76c]
375 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
376 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
377 [-]: TEST      R33 1        ; if R33 then PC := 402
378 [-]: JMP       402          ; PC := 402
379 [-]: GETGLOBAL R33 K101     ; R33 := 0x89326c93
380 [-]: SELF      R33 R33 K102 ; R34 := R33; R33 := R33[0xfb64e76c]
381 [-]: CALL      R33 2 2      ; R33 := R33(R34)
382 [-]: SELF      R33 R33 K103 ; R34 := R33; R33 := R33[0xa534c3ac]
383 [-]: CALL      R33 2 2      ; R33 := R33(R34)
384 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
385 [-]: MOVE      R35 R33      ; R35 := R33
386 [-]: CALL      R34 2 2      ; R34 := R34(R35)
387 [-]: TEST      R34 1        ; if R34 then PC := 402
388 [-]: JMP       402          ; PC := 402
389 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
390 [-]: SELF      R35 R33 K104 ; R36 := R33; R35 := R33[0xb8c8dfbd]
391 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
392 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
393 [-]: TEST      R34 1        ; if R34 then PC := 402
394 [-]: JMP       402          ; PC := 402
395 [-]: SELF      R34 R33 K104 ; R35 := R33; R34 := R33[0xb8c8dfbd]
396 [-]: CALL      R34 2 2      ; R34 := R34(R35)
397 [-]: SELF      R34 R34 K105 ; R35 := R34; R34 := R34[0x39def7bf]
398 [-]: GETUPVAL  R36 U9       ; R36 := U9
399 [-]: GETTABLE  R36 R36 K106 ; R36 := R36["VoidTrace"]
400 [-]: GETTABLE  R37 R5 K100  ; R37 := R5["BonusVoidTrace"]
401 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
402 [-]: LOADKB    R34 0 0      ; R34 := false
403 [-]: CONST     R35 1        ; R35 := 1.000000
404 [-]: GETUPVAL  R36 U10      ; R36 := U10
405 [-]: LEN       R36 R36      ; R36 := # R36
406 [-]: CONST     R37 1        ; R37 := 1.000000
407 [-]: FORPREP   R35 425      ; R35 -= R37; PC := 425
408 [-]: GETUPVAL  R39 U10      ; R39 := U10
409 [-]: GETTABLE  R39 R39 R38  ; R39 := R39[R38]
410 [-]: GETTABLE  R39 R39 K107 ; R39 := R39["mItemType"]
411 [-]: GETUPVAL  R40 U9       ; R40 := U9
412 [-]: GETTABLE  R40 R40 K106 ; R40 := R40["VoidTrace"]
413 [-]: EQ        0 R39 R40    ; if R39 ~= R40 then PC := 425
414 [-]: JMP       425          ; PC := 425
415 [-]: GETUPVAL  R39 U10      ; R39 := U10
416 [-]: GETTABLE  R39 R39 R38  ; R39 := R39[R38]
417 [-]: GETUPVAL  R40 U10      ; R40 := U10
418 [-]: GETTABLE  R40 R40 R38  ; R40 := R40[R38]
419 [-]: GETTABLE  R40 R40 K108 ; R40 := R40["mItemCount"]
420 [-]: GETTABLE  R41 R5 K100  ; R41 := R5["BonusVoidTrace"]
421 [-]: ADD       R40 R40 R41  ; R40 := R40 + R41
422 [-]: SETTABLE  R39 K108 R40 ; R39["mItemCount"] := R40
423 [-]: LOADKB    R34 1 0      ; R34 := true
424 [-]: JMP       426          ; PC := 426
425 [-]: FORLOOP   R35 408      ; R35 += R37; if R35 <= R36 then begin PC := 408; R38 := R35 end
426 [-]: TEST      R34 1        ; if R34 then PC := 439
427 [-]: JMP       439          ; PC := 439
428 [-]: GETGLOBAL R39 K76      ; R39 := 0x6c97a788
429 [-]: GETTABLE  R39 R39 K77  ; R39 := R39[0x925e2bbb]
430 [-]: GETUPVAL  R40 U9       ; R40 := U9
431 [-]: GETTABLE  R40 R40 K106 ; R40 := R40["VoidTrace"]
432 [-]: GETTABLE  R41 R5 K100  ; R41 := R5["BonusVoidTrace"]
433 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
434 [-]: GETGLOBAL R40 K36      ; R40 := 0x33bdd652
435 [-]: GETTABLE  R40 R40 K37  ; R40 := R40[0x23d5322f]
436 [-]: GETUPVAL  R41 U10      ; R41 := U10
437 [-]: MOVE      R42 R39      ; R42 := R39
438 [-]: CALL      R40 3 1      ; R40(R41,R42)
439 [-]: GETTABLE  R40 R5 K109  ; R40 := R5["ChallengeMissionRewards"]
440 [-]: TEST      R40 0        ; if not R40 then PC := 463
441 [-]: JMP       463          ; PC := 463
442 [-]: GETGLOBAL R40 K110     ; R40 := 0xae91e43b
443 [-]: SELF      R40 R40 K111 ; R41 := R40; R40 := R40[0x1fd6abd0]
444 [-]: GETGLOBAL R42 K112     ; R42 := 0x52bea474
445 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
446 [-]: GETGLOBAL R41 K20      ; R41 := cjson
447 [-]: GETTABLE  R41 R41 K113 ; R41 := R41[0xb139d7bc]
448 [-]: NEWTABLE  R42 0 1      ; R42 := {}
449 [-]: GETTABLE  R43 R5 K109  ; R43 := R5["ChallengeMissionRewards"]
450 [-]: SETTABLE  R42 K22 R43  ; R42["MissionRewards"] := R43
451 [-]: CALL      R41 2 2      ; R41 := R41(R42)
452 [-]: SELF      R42 R40 K114 ; R43 := R40; R42 := R40[0xf56f3887]
453 [-]: LOADK     R44 K115     ; R44 := "SetInfo"
454 [-]: NEWTABLE  R45 6 0      ; R45 := {}
455 [-]: LOADK     R46 K116     ; R46 := "true"
456 [-]: LOADK     R47 K16      ; R47 := "false"
457 [-]: MOVE      R48 R41      ; R48 := R41
458 [-]: LOADK     R49 K117     ; R49 := "3"
459 [-]: LOADK     R50 K118     ; R50 := "4"
460 [-]: LOADK     R51 K16      ; R51 := "false"
461 [-]: SETLIST   R45 6 1      ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 6
462 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
463 [-]: GETGLOBAL R42 K0       ; R42 := 0x7b998233
464 [-]: GETGLOBAL R43 K119     ; R43 := mPvpMovie
465 [-]: CALL      R42 2 2      ; R42 := R42(R43)
466 [-]: TEST      R42 1        ; if R42 then PC := 501
467 [-]: JMP       501          ; PC := 501
468 [-]: GETUPVAL  R42 U11      ; R42 := U11
469 [-]: CALL      R42 1 2      ; R42 := R42()
470 [-]: TEST      R42 1        ; if R42 then PC := 481
471 [-]: JMP       481          ; PC := 481
472 [-]: GETTABLE  R42 R5 K120  ; R42 := R5["DailyMissionBonus"]
473 [-]: EQ        1 R42 K23    ; if R42 == nil then PC := 481
474 [-]: JMP       481          ; PC := 481
475 [-]: GETGLOBAL R42 K119     ; R42 := mPvpMovie
476 [-]: SELF      R42 R42 K121 ; R43 := R42; R42 := R42[0xe4162eed]
477 [-]: LOADK     R44 K122     ; R44 := "SetFirstWinOfDay"
478 [-]: LOADK     R45 K64      ; R45 := ""
479 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
480 [-]: JMP       501          ; PC := 501
481 [-]: GETUPVAL  R42 U11      ; R42 := U11
482 [-]: CALL      R42 1 2      ; R42 := R42()
483 [-]: TEST      R42 0        ; if not R42 then PC := 501
484 [-]: JMP       501          ; PC := 501
485 [-]: GETTABLE  R42 R5 K123  ; R42 := R5["DailyPVPWinBonus"]
486 [-]: EQ        1 R42 K23    ; if R42 == nil then PC := 501
487 [-]: JMP       501          ; PC := 501
488 [-]: GETUPVAL  R42 U12      ; R42 := U12
489 [-]: GETTABLE  R42 R42 K124 ; R42 := R42["pvpType"]
490 [-]: EQ        1 R42 K125   ; if R42 == 3.000000 then PC := 493
491 [-]: JMP       493          ; PC := 493
492 [-]: LOADKB    R42 0 1      ; R42 := false; PC := 493
493 [-]: LOADKB    R42 1 0      ; R42 := true
494 [-]: GETGLOBAL R43 K119     ; R43 := mPvpMovie
495 [-]: SELF      R43 R43 K121 ; R44 := R43; R43 := R43[0xe4162eed]
496 [-]: LOADK     R45 K122     ; R45 := "SetFirstWinOfDay"
497 [-]: GETGLOBAL R46 K126     ; R46 := 0x64fb1586
498 [-]: MOVE      R47 R42      ; R47 := R42
499 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
500 [-]: CALL      R43 0 1      ; R43(R44,...)
501 [-]: GETUPVAL  R43 U13      ; R43 := U13
502 [-]: CALL      R43 1 2      ; R43 := R43()
503 [-]: LOADNIL   R44 R46      ; R44 := R45 := R46 := nil
504 [-]: GETGLOBAL R47 K127     ; R47 := 0x7f5022cf
505 [-]: GETTABLE  R47 R47 K128 ; R47 := R47[0xa5c556b9]
506 [-]: GETGLOBAL R48 K126     ; R48 := 0x64fb1586
507 [-]: GETTABLE  R49 R43 K129 ; R49 := R43["location"]
508 [-]: CALL      R48 2 2      ; R48 := R48(R49)
509 [-]: LOADK     R49 K130     ; R49 := "Nightwave"
510 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
511 [-]: TEST      R47 0        ; if not R47 then PC := 550
512 [-]: JMP       550          ; PC := 550
513 [-]: GETGLOBAL R47 K131     ; R47 := 0xcfc01047
514 [-]: GETTABLE  R48 R43 K132 ; R48 := R43["missionReward"]
515 [-]: GETTABLE  R48 R48 K133 ; R48 := R48["countedItems"]
516 [-]: CALL      R47 2 4      ; R47,R48,R49 := R47(R48)
517 [-]: JMP       548          ; PC := 548
518 [-]: GETGLOBAL R52 K84      ; R52 := 0xb009bbc6
519 [-]: GETTABLE  R53 R51 K107 ; R53 := R51["mItemType"]
520 [-]: CALL      R52 2 2      ; R52 := R52(R53)
521 [-]: MOVE      R44 R52      ; R44 := R52
522 [-]: GETUPVAL  R52 U14      ; R52 := U14
523 [-]: GETTABLE  R52 R52 K134 ; R52 := R52[0x056dcf06]
524 [-]: MOVE      R53 R44      ; R53 := R44
525 [-]: LOADKB    R54 1 0      ; R54 := true
526 [-]: CALL      R52 3 3      ; R52,R53 := R52(R53,R54)
527 [-]: MOVE      R46 R53      ; R46 := R53
528 [-]: MOVE      R45 R52      ; R45 := R52
529 [-]: GETGLOBAL R52 K36      ; R52 := 0x33bdd652
530 [-]: GETTABLE  R52 R52 K37  ; R52 := R52[0x23d5322f]
531 [-]: GETGLOBAL R53 K135     ; R53 := mOtherStuff
532 [-]: NEWTABLE  R54 0 5      ; R54 := {}
533 [-]: GETGLOBAL R55 K110     ; R55 := 0xae91e43b
534 [-]: SELF      R55 R55 K136 ; R56 := R55; R55 := R55[0x42b04007]
535 [-]: GETGLOBAL R57 K126     ; R57 := 0x64fb1586
536 [-]: SELF      R58 R44 K137 ; R59 := R44; R58 := R44[0xd3a9d01f]
537 [-]: CALL      R58 2 0      ; R58,... := R58(R59)
538 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
539 [-]: LOADKB    R58 1 0      ; R58 := true
540 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
541 [-]: SETTABLE  R54 K55 R55  ; R54["Name"] := R55
542 [-]: GETTABLE  R55 R51 K108 ; R55 := R51["mItemCount"]
543 [-]: SETTABLE  R54 K138 R55 ; R54["Count"] := R55
544 [-]: SETTABLE  R54 K139 R45 ; R54["Icon"] := R45
545 [-]: SETTABLE  R54 K140 R46 ; R54["Themed"] := R46
546 [-]: SETTABLE  R54 K141 K23 ; R54["Background"] := nil
547 [-]: CALL      R52 3 1      ; R52(R53,R54)
548 [-]: TFORLOOP  R47 2        ; R50,R51 :=  R47(R48,R49); if R50 ~= nil then begin PC = 518; R49 := R50 end
549 [-]: JMP       518          ; PC := 518
550 [-]: GETTABLE  R52 R5 K142  ; R52 := R5["ScenarioScoreChange"]
551 [-]: EQ        1 R52 K23    ; if R52 == nil then PC := 587
552 [-]: JMP       587          ; PC := 587
553 [-]: NEWTABLE  R52 0 2      ; R52 := {}
554 [-]: GETUPVAL  R53 U9       ; R53 := U9
555 [-]: GETTABLE  R53 R53 K143 ; R53 := R53["ScarletCredits"]
556 [-]: SETTABLE  R52 K107 R53 ; R52["mItemType"] := R53
557 [-]: GETTABLE  R53 R5 K142  ; R53 := R5["ScenarioScoreChange"]
558 [-]: SETTABLE  R52 K108 R53 ; R52["mItemCount"] := R53
559 [-]: GETGLOBAL R53 K36      ; R53 := 0x33bdd652
560 [-]: GETTABLE  R53 R53 K37  ; R53 := R53[0x23d5322f]
561 [-]: GETUPVAL  R54 U10      ; R54 := U10
562 [-]: MOVE      R55 R52      ; R55 := R52
563 [-]: CALL      R53 3 1      ; R53(R54,R55)
564 [-]: GETGLOBAL R53 K17      ; R53 := _T
565 [-]: GETTABLE  R53 R53 K144 ; R53 := R53["SendScenarioHubEvent"]
566 [-]: TEST      R53 0        ; if not R53 then PC := 587
567 [-]: JMP       587          ; PC := 587
568 [-]: NEWTABLE  R53 0 0      ; R53 := {}
569 [-]: GETTABLE  R54 R43 K145 ; R54 := R43["missionType"]
570 [-]: EQ        0 R54 K146   ; if R54 ~= 31.000000 then PC := 575
571 [-]: JMP       575          ; PC := 575
572 [-]: GETTABLE  R54 R5 K142  ; R54 := R5["ScenarioScoreChange"]
573 [-]: SETTABLE  R53 K147 R54 ; R53["SpaceScore"] := R54
574 [-]: JMP       577          ; PC := 577
575 [-]: GETTABLE  R54 R5 K142  ; R54 := R5["ScenarioScoreChange"]
576 [-]: SETTABLE  R53 K148 R54 ; R53["GroundScore"] := R54
577 [-]: GETGLOBAL R54 K17      ; R54 := _T
578 [-]: GETTABLE  R54 R54 K149 ; R54 := R54[0x136252c7]
579 [-]: LOADNIL   R55 R56      ; R55 := R56 := nil
580 [-]: LOADK     R57 K150     ; R57 := "Scores"
581 [-]: GETGLOBAL R58 K20      ; R58 := cjson
582 [-]: GETTABLE  R58 R58 K113 ; R58 := R58[0xb139d7bc]
583 [-]: MOVE      R59 R53      ; R59 := R53
584 [-]: CALL      R58 2 2      ; R58 := R58(R59)
585 [-]: LOADK     R59 K151     ; R59 := "inc"
586 [-]: CALL      R54 6 1      ; R54(R55,R56,R57,R58,R59)
587 [-]: GETUPVAL  R54 U15      ; R54 := U15
588 [-]: CALL      R54 1 2      ; R54 := R54()
589 [-]: TEST      R54 0        ; if not R54 then PC := 626
590 [-]: JMP       626          ; PC := 626
591 [-]: GETUPVAL  R54 U16      ; R54 := U16
592 [-]: GETTABLE  R54 R54 K152 ; R54 := R54[0xcdc34211]
593 [-]: CALL      R54 1 2      ; R54 := R54()
594 [-]: TEST      R54 0        ; if not R54 then PC := 626
595 [-]: JMP       626          ; PC := 626
596 [-]: GETUPVAL  R54 U17      ; R54 := U17
597 [-]: CALL      R54 1 2      ; R54 := R54()
598 [-]: GETGLOBAL R55 K0       ; R55 := 0x7b998233
599 [-]: MOVE      R56 R54      ; R56 := R54
600 [-]: CALL      R55 2 2      ; R55 := R55(R56)
601 [-]: TEST      R55 1        ; if R55 then PC := 626
602 [-]: JMP       626          ; PC := 626
603 [-]: SELF      R55 R54 K104 ; R56 := R54; R55 := R54[0xb8c8dfbd]
604 [-]: CALL      R55 2 2      ; R55 := R55(R56)
605 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
606 [-]: MOVE      R57 R55      ; R57 := R55
607 [-]: CALL      R56 2 2      ; R56 := R56(R57)
608 [-]: TEST      R56 1        ; if R56 then PC := 626
609 [-]: JMP       626          ; PC := 626
610 [-]: GETGLOBAL R56 K1       ; R56 := 0xbe190284
611 [-]: SELF      R56 R56 K91  ; R57 := R56; R56 := R56[0x5d204145]
612 [-]: CALL      R56 2 2      ; R56 := R56(R57)
613 [-]: TEST      R56 1        ; if R56 then PC := 626
614 [-]: JMP       626          ; PC := 626
615 [-]: SELF      R56 R55 K153 ; R57 := R55; R56 := R55[0x864e4735]
616 [-]: CONST     R58 0        ; R58 := 0.000000
617 [-]: CALL      R56 3 2      ; R56 := R56(R57,R58)
618 [-]: LT        0 K7 R56     ; if 0.000000 >= R56 then PC := 626
619 [-]: JMP       626          ; PC := 626
620 [-]: SETGLOBAL R56 K154     ; mIntrinsicPoints := R56
621 [-]: GETGLOBAL R57 K39      ; R57 := mPlayerMissionInfo
622 [-]: SELF      R57 R57 K155 ; R58 := R57; R57 := R57[0x86da8894]
623 [-]: CONST     R59 0        ; R59 := 0.000000
624 [-]: MOVE      R60 R56      ; R60 := R56
625 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
626 [-]: GETGLOBAL R57 K0       ; R57 := 0x7b998233
627 [-]: GETGLOBAL R58 K6       ; R58 := mGameData
628 [-]: CALL      R57 2 2      ; R57 := R57(R58)
629 [-]: TEST      R57 1        ; if R57 then PC := 655
630 [-]: JMP       655          ; PC := 655
631 [-]: GETGLOBAL R57 K0       ; R57 := 0x7b998233
632 [-]: GETGLOBAL R58 K39      ; R58 := mPlayerMissionInfo
633 [-]: CALL      R57 2 2      ; R57 := R57(R58)
634 [-]: TEST      R57 1        ; if R57 then PC := 655
635 [-]: JMP       655          ; PC := 655
636 [-]: GETGLOBAL R57 K0       ; R57 := 0x7b998233
637 [-]: GETGLOBAL R58 K101     ; R58 := 0x89326c93
638 [-]: CALL      R57 2 2      ; R57 := R57(R58)
639 [-]: TEST      R57 1        ; if R57 then PC := 655
640 [-]: JMP       655          ; PC := 655
641 [-]: GETGLOBAL R57 K0       ; R57 := 0x7b998233
642 [-]: GETGLOBAL R58 K101     ; R58 := 0x89326c93
643 [-]: SELF      R58 R58 K102 ; R59 := R58; R58 := R58[0xfb64e76c]
644 [-]: CALL      R58 2 0      ; R58,... := R58(R59)
645 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
646 [-]: TEST      R57 1        ; if R57 then PC := 655
647 [-]: JMP       655          ; PC := 655
648 [-]: GETGLOBAL R57 K6       ; R57 := mGameData
649 [-]: SELF      R57 R57 K156 ; R58 := R57; R57 := R57[0xad87a3cb]
650 [-]: GETGLOBAL R59 K101     ; R59 := 0x89326c93
651 [-]: SELF      R59 R59 K102 ; R60 := R59; R59 := R59[0xfb64e76c]
652 [-]: CALL      R59 2 2      ; R59 := R59(R60)
653 [-]: GETGLOBAL R60 K39      ; R60 := mPlayerMissionInfo
654 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
655 [-]: GETGLOBAL R57 K1       ; R57 := 0xbe190284
656 [-]: SELF      R57 R57 K157 ; R58 := R57; R57 := R57[0x3801d351]
657 [-]: CALL      R57 2 1      ; R57(R58)
658 [-]: GETUPVAL  R57 U15      ; R57 := U15
659 [-]: CALL      R57 1 2      ; R57 := R57()
660 [-]: TEST      R57 1        ; if R57 then PC := 703
661 [-]: JMP       703          ; PC := 703
662 [-]: GETGLOBAL R57 K11      ; R57 := 0x76ea806b
663 [-]: SELF      R57 R57 K12  ; R58 := R57; R57 := R57[0x3f3ae64c]
664 [-]: CONST     R59 0        ; R59 := 0.000000
665 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
666 [-]: GETGLOBAL R58 K6       ; R58 := mGameData
667 [-]: SELF      R58 R58 K158 ; R59 := R58; R58 := R58[0xa8c9f8a6]
668 [-]: CALL      R58 2 2      ; R58 := R58(R59)
669 [-]: GETGLOBAL R59 K0       ; R59 := 0x7b998233
670 [-]: MOVE      R60 R57      ; R60 := R57
671 [-]: CALL      R59 2 2      ; R59 := R59(R60)
672 [-]: TEST      R59 1        ; if R59 then PC := 703
673 [-]: JMP       703          ; PC := 703
674 [-]: GETGLOBAL R59 K0       ; R59 := 0x7b998233
675 [-]: MOVE      R60 R58      ; R60 := R58
676 [-]: CALL      R59 2 2      ; R59 := R59(R60)
677 [-]: TEST      R59 1        ; if R59 then PC := 703
678 [-]: JMP       703          ; PC := 703
679 [-]: SELF      R59 R57 K159 ; R60 := R57; R59 := R57[0x5ca33548]
680 [-]: CALL      R59 2 2      ; R59 := R59(R60)
681 [-]: CONST     R60 1        ; R60 := 1.000000
682 [-]: LEN       R61 R58      ; R61 := # R58
683 [-]: CONST     R62 1        ; R62 := 1.000000
684 [-]: FORPREP   R60 702      ; R60 -= R62; PC := 702
685 [-]: GETTABLE  R64 R58 R63  ; R64 := R58[R63]
686 [-]: GETTABLE  R64 R64 K160 ; R64 := R64["playerName"]
687 [-]: EQ        0 R64 R59    ; if R64 ~= R59 then PC := 702
688 [-]: JMP       702          ; PC := 702
689 [-]: GETTABLE  R64 R58 R63  ; R64 := R58[R63]
690 [-]: GETTABLE  R64 R64 K161 ; R64 := R64["playerMissionInfo"]
691 [-]: GETUPVAL  R65 U8       ; R65 := U8
692 [-]: SETTABLE  R64 K99 R65  ; R64["mPlayedTime"] := R65
693 [-]: GETGLOBAL R64 K6       ; R64 := mGameData
694 [-]: SELF      R64 R64 K156 ; R65 := R64; R64 := R64[0xad87a3cb]
695 [-]: GETGLOBAL R66 K101     ; R66 := 0x89326c93
696 [-]: SELF      R66 R66 K102 ; R67 := R66; R66 := R66[0xfb64e76c]
697 [-]: CALL      R66 2 2      ; R66 := R66(R67)
698 [-]: GETTABLE  R67 R58 R63  ; R67 := R58[R63]
699 [-]: GETTABLE  R67 R67 K161 ; R67 := R67["playerMissionInfo"]
700 [-]: CALL      R64 4 1      ; R64(R65,R66,R67)
701 [-]: JMP       703          ; PC := 703
702 [-]: FORLOOP   R60 685      ; R60 += R62; if R60 <= R61 then begin PC := 685; R63 := R60 end
703 [-]: GETUPVAL  R64 U18      ; R64 := U18
704 [-]: CALL      R64 1 1      ; R64()
705 [-]: CONST     R4 0         ; R4 := 0.000000
706 [-]: GETGLOBAL R64 K0       ; R64 := 0x7b998233
707 [-]: GETGLOBAL R65 K39      ; R65 := mPlayerMissionInfo
708 [-]: CALL      R64 2 2      ; R64 := R64(R65)
709 [-]: TEST      R64 1        ; if R64 then PC := 775
710 [-]: JMP       775          ; PC := 775
711 [-]: GETGLOBAL R64 K39      ; R64 := mPlayerMissionInfo
712 [-]: GETTABLE  R64 R64 K65  ; R64 := R64["mNemesisTaxInfo"]
713 [-]: GETTABLE  R64 R64 K70  ; R64 := R64["mTaxedCredits"]
714 [-]: GETGLOBAL R65 K39      ; R65 := mPlayerMissionInfo
715 [-]: GETTABLE  R65 R65 K40  ; R65 := R65["mTotalCredits"]
716 [-]: GETGLOBAL R66 K39      ; R66 := mPlayerMissionInfo
717 [-]: GETTABLE  R66 R66 K41  ; R66 := R66["mFinalCredits"]
718 [-]: GETGLOBAL R67 K39      ; R67 := mPlayerMissionInfo
719 [-]: GETTABLE  R67 R67 K162 ; R67 := R67["mMissionCompleteCreditBonus"]
720 [-]: GETGLOBAL R68 K39      ; R68 := mPlayerMissionInfo
721 [-]: GETTABLE  R68 R68 K163 ; R68 := R68["mCreditsEarnedInMission"]
722 [-]: ADD       R69 R66 R64  ; R69 := R66 + R64
723 [-]: SUB       R69 R69 R65  ; R69 := R69 - R65
724 [-]: GETUPVAL  R70 U4       ; R70 := U4
725 [-]: MOVE      R71 R4       ; R71 := R4
726 [-]: MOVE      R72 R67      ; R72 := R67
727 [-]: LOADK     R73 K29      ; R73 := "Credits"
728 [-]: GETUPVAL  R74 U5       ; R74 := U5
729 [-]: GETTABLE  R74 R74 K30  ; R74 := R74[0x1142c7a8]
730 [-]: MOVE      R75 R67      ; R75 := R67
731 [-]: CALL      R74 2 2      ; R74 := R74(R75)
732 [-]: LOADK     R75 K5       ; R75 := " "
733 [-]: GETGLOBAL R76 K110     ; R76 := 0xae91e43b
734 [-]: SELF      R76 R76 K136 ; R77 := R76; R76 := R76[0x42b04007]
735 [-]: LOADK     R78 K164     ; R78 := "/Lotus/Language/Menu/MissionStats_CreditsBonus"
736 [-]: LOADKB    R79 0 0      ; R79 := false
737 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
738 [-]: CONCAT    R74 R74 R76  ; R74 := R74 .. R75 .. R76
739 [-]: CALL      R70 5 2      ; R70 := R70(R71,R72,R73,R74)
740 [-]: MOVE      R4 R70       ; R4 := R70
741 [-]: GETUPVAL  R70 U4       ; R70 := U4
742 [-]: MOVE      R71 R4       ; R71 := R4
743 [-]: MOVE      R72 R68      ; R72 := R68
744 [-]: LOADK     R73 K29      ; R73 := "Credits"
745 [-]: GETUPVAL  R74 U5       ; R74 := U5
746 [-]: GETTABLE  R74 R74 K30  ; R74 := R74[0x1142c7a8]
747 [-]: MOVE      R75 R68      ; R75 := R68
748 [-]: CALL      R74 2 2      ; R74 := R74(R75)
749 [-]: LOADK     R75 K5       ; R75 := " "
750 [-]: GETGLOBAL R76 K110     ; R76 := 0xae91e43b
751 [-]: SELF      R76 R76 K136 ; R77 := R76; R76 := R76[0x42b04007]
752 [-]: LOADK     R78 K165     ; R78 := "/Lotus/Language/Menu/MissionStats_MissionCredits"
753 [-]: LOADKB    R79 0 0      ; R79 := false
754 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
755 [-]: CONCAT    R74 R74 R76  ; R74 := R74 .. R75 .. R76
756 [-]: CALL      R70 5 2      ; R70 := R70(R71,R72,R73,R74)
757 [-]: MOVE      R4 R70       ; R4 := R70
758 [-]: GETUPVAL  R70 U4       ; R70 := U4
759 [-]: MOVE      R71 R4       ; R71 := R4
760 [-]: MOVE      R72 R69      ; R72 := R69
761 [-]: LOADK     R73 K29      ; R73 := "Credits"
762 [-]: GETUPVAL  R74 U5       ; R74 := U5
763 [-]: GETTABLE  R74 R74 K30  ; R74 := R74[0x1142c7a8]
764 [-]: MOVE      R75 R69      ; R75 := R69
765 [-]: CALL      R74 2 2      ; R74 := R74(R75)
766 [-]: LOADK     R75 K5       ; R75 := " "
767 [-]: GETGLOBAL R76 K110     ; R76 := 0xae91e43b
768 [-]: SELF      R76 R76 K136 ; R77 := R76; R76 := R76[0x42b04007]
769 [-]: LOADK     R78 K166     ; R78 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
770 [-]: LOADKB    R79 0 0      ; R79 := false
771 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
772 [-]: CONCAT    R74 R74 R76  ; R74 := R74 .. R75 .. R76
773 [-]: CALL      R70 5 2      ; R70 := R70(R71,R72,R73,R74)
774 [-]: MOVE      R4 R70       ; R4 := R70
775 [-]: LT        0 K7 R4      ; if 0.000000 >= R4 then PC := 802
776 [-]: JMP       802          ; PC := 802
777 [-]: GETGLOBAL R70 K127     ; R70 := 0x7f5022cf
778 [-]: GETTABLE  R70 R70 K167 ; R70 := R70[0x3f3e4d12]
779 [-]: GETGLOBAL R71 K110     ; R71 := 0xae91e43b
780 [-]: SELF      R71 R71 K136 ; R72 := R71; R71 := R71[0x42b04007]
781 [-]: LOADK     R73 K168     ; R73 := "/Lotus/Language/Menu/Store_BuyWithCredits"
782 [-]: LOADKB    R74 1 0      ; R74 := true
783 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
784 [-]: CALL      R70 0 2      ; R70 := R70(R71,...)
785 [-]: NEWTABLE  R71 0 7      ; R71 := {}
786 [-]: SETTABLE  R71 K55 R70  ; R71["Name"] := R70
787 [-]: SETTABLE  R71 K138 K8  ; R71["Count"] := 1.000000
788 [-]: SETTABLE  R71 K29 R4   ; R71["Credits"] := R4
789 [-]: GETGLOBAL R72 K39      ; R72 := mPlayerMissionInfo
790 [-]: GETTABLE  R72 R72 K65  ; R72 := R72["mNemesisTaxInfo"]
791 [-]: GETTABLE  R72 R72 K70  ; R72 := R72["mTaxedCredits"]
792 [-]: SETTABLE  R71 K169 R72 ; R71["TaxedCount"] := R72
793 [-]: GETGLOBAL R72 K170     ; R72 := 0x9afd2e71
794 [-]: SETTABLE  R71 K139 R72 ; R71["Icon"] := R72
795 [-]: SETTABLE  R71 K140 K19 ; R71["Themed"] := true
796 [-]: SETTABLE  R71 K141 K23 ; R71["Background"] := nil
797 [-]: GETGLOBAL R72 K36      ; R72 := 0x33bdd652
798 [-]: GETTABLE  R72 R72 K37  ; R72 := R72[0x23d5322f]
799 [-]: GETGLOBAL R73 K135     ; R73 := mOtherStuff
800 [-]: MOVE      R74 R71      ; R74 := R71
801 [-]: CALL      R72 3 1      ; R72(R73,R74)
802 [-]: LOADKB    R72 0 0      ; R72 := false
803 [-]: TEST      R72 0        ; if not R72 then PC := 847
804 [-]: JMP       847          ; PC := 847
805 [-]: GETGLOBAL R72 K39      ; R72 := mPlayerMissionInfo
806 [-]: GETTABLE  R72 R72 K40  ; R72 := R72["mTotalCredits"]
807 [-]: LT        0 K7 R72     ; if 0.000000 >= R72 then PC := 826
808 [-]: JMP       826          ; PC := 826
809 [-]: GETGLOBAL R73 K36      ; R73 := 0x33bdd652
810 [-]: GETTABLE  R73 R73 K37  ; R73 := R73[0x23d5322f]
811 [-]: GETGLOBAL R74 K135     ; R74 := mOtherStuff
812 [-]: GETUPVAL  R75 U19      ; R75 := U19
813 [-]: GETGLOBAL R76 K127     ; R76 := 0x7f5022cf
814 [-]: GETTABLE  R76 R76 K167 ; R76 := R76[0x3f3e4d12]
815 [-]: GETGLOBAL R77 K110     ; R77 := 0xae91e43b
816 [-]: SELF      R77 R77 K136 ; R78 := R77; R77 := R77[0x42b04007]
817 [-]: LOADK     R79 K171     ; R79 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
818 [-]: LOADKB    R80 0 0      ; R80 := false
819 [-]: CALL      R77 4 0      ; R77,... := R77(R78,R79,R80)
820 [-]: CALL      R76 0 2      ; R76 := R76(R77,...)
821 [-]: MOVE      R77 R72      ; R77 := R72
822 [-]: LOADNIL   R78 R78      ; R78 := nil
823 [-]: GETGLOBAL R79 K170     ; R79 := 0x9afd2e71
824 [-]: CALL      R75 5 0      ; R75,... := R75(R76,R77,R78,R79)
825 [-]: CALL      R73 0 1      ; R73(R74,...)
826 [-]: GETGLOBAL R73 K39      ; R73 := mPlayerMissionInfo
827 [-]: GETTABLE  R73 R73 K41  ; R73 := R73["mFinalCredits"]
828 [-]: LT        0 K7 R73     ; if 0.000000 >= R73 then PC := 847
829 [-]: JMP       847          ; PC := 847
830 [-]: GETGLOBAL R74 K36      ; R74 := 0x33bdd652
831 [-]: GETTABLE  R74 R74 K37  ; R74 := R74[0x23d5322f]
832 [-]: GETGLOBAL R75 K135     ; R75 := mOtherStuff
833 [-]: GETUPVAL  R76 U19      ; R76 := U19
834 [-]: GETGLOBAL R77 K127     ; R77 := 0x7f5022cf
835 [-]: GETTABLE  R77 R77 K167 ; R77 := R77[0x3f3e4d12]
836 [-]: GETGLOBAL R78 K110     ; R78 := 0xae91e43b
837 [-]: SELF      R78 R78 K136 ; R79 := R78; R78 := R78[0x42b04007]
838 [-]: LOADK     R80 K166     ; R80 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
839 [-]: LOADKB    R81 0 0      ; R81 := false
840 [-]: CALL      R78 4 0      ; R78,... := R78(R79,R80,R81)
841 [-]: CALL      R77 0 2      ; R77 := R77(R78,...)
842 [-]: MOVE      R78 R73      ; R78 := R73
843 [-]: LOADNIL   R79 R79      ; R79 := nil
844 [-]: GETGLOBAL R80 K170     ; R80 := 0x9afd2e71
845 [-]: CALL      R76 5 0      ; R76,... := R76(R77,R78,R79,R80)
846 [-]: CALL      R74 0 1      ; R74(R75,...)
847 [-]: GETGLOBAL R74 K0       ; R74 := 0x7b998233
848 [-]: GETGLOBAL R75 K39      ; R75 := mPlayerMissionInfo
849 [-]: CALL      R74 2 2      ; R74 := R74(R75)
850 [-]: TEST      R74 1        ; if R74 then PC := 885
851 [-]: JMP       885          ; PC := 885
852 [-]: GETGLOBAL R74 K39      ; R74 := mPlayerMissionInfo
853 [-]: GETTABLE  R74 R74 K96  ; R74 := R74["mFusionPoints"]
854 [-]: LT        0 K7 R74     ; if 0.000000 >= R74 then PC := 885
855 [-]: JMP       885          ; PC := 885
856 [-]: GETGLOBAL R74 K127     ; R74 := 0x7f5022cf
857 [-]: GETTABLE  R74 R74 K167 ; R74 := R74[0x3f3e4d12]
858 [-]: GETGLOBAL R75 K110     ; R75 := 0xae91e43b
859 [-]: SELF      R75 R75 K136 ; R76 := R75; R75 := R75[0x42b04007]
860 [-]: LOADK     R77 K172     ; R77 := "/Lotus/Language/Items/FusionBundle"
861 [-]: LOADKB    R78 1 0      ; R78 := true
862 [-]: CALL      R75 4 0      ; R75,... := R75(R76,R77,R78)
863 [-]: CALL      R74 0 2      ; R74 := R74(R75,...)
864 [-]: NEWTABLE  R75 0 8      ; R75 := {}
865 [-]: SETTABLE  R75 K55 R74  ; R75["Name"] := R74
866 [-]: SETTABLE  R75 K54 K173 ; R75["Description"] := "/Lotus/Language/Items/FusionPartDesc"
867 [-]: GETGLOBAL R76 K39      ; R76 := mPlayerMissionInfo
868 [-]: GETTABLE  R76 R76 K96  ; R76 := R76["mFusionPoints"]
869 [-]: SETTABLE  R75 K174 R76 ; R75["Endo"] := R76
870 [-]: SETTABLE  R75 K138 K8  ; R75["Count"] := 1.000000
871 [-]: GETGLOBAL R76 K39      ; R76 := mPlayerMissionInfo
872 [-]: GETTABLE  R76 R76 K65  ; R76 := R76["mNemesisTaxInfo"]
873 [-]: GETTABLE  R76 R76 K72  ; R76 := R76["mTaxedFusionPoints"]
874 [-]: SETTABLE  R75 K169 R76 ; R75["TaxedCount"] := R76
875 [-]: GETGLOBAL R76 K175     ; R76 := 0x457d7698
876 [-]: SETTABLE  R75 K139 R76 ; R75["Icon"] := R76
877 [-]: SETTABLE  R75 K141 K23 ; R75["Background"] := nil
878 [-]: GETGLOBAL R76 K177     ; R76 := mFusionPointsSortPriority
879 [-]: SETTABLE  R75 K176 R76 ; R75["SortPriority"] := R76
880 [-]: GETGLOBAL R76 K36      ; R76 := 0x33bdd652
881 [-]: GETTABLE  R76 R76 K37  ; R76 := R76[0x23d5322f]
882 [-]: GETGLOBAL R77 K178     ; R77 := mSortRewardItems
883 [-]: MOVE      R78 R75      ; R78 := R75
884 [-]: CALL      R76 3 1      ; R76(R77,R78)
885 [-]: GETGLOBAL R76 K0       ; R76 := 0x7b998233
886 [-]: GETGLOBAL R77 K39      ; R77 := mPlayerMissionInfo
887 [-]: CALL      R76 2 2      ; R76 := R76(R77)
888 [-]: TEST      R76 1        ; if R76 then PC := 922
889 [-]: JMP       922          ; PC := 922
890 [-]: GETGLOBAL R76 K39      ; R76 := mPlayerMissionInfo
891 [-]: GETTABLE  R76 R76 K98  ; R76 := R76["mCrewShipFusionPoints"]
892 [-]: LT        0 K7 R76     ; if 0.000000 >= R76 then PC := 922
893 [-]: JMP       922          ; PC := 922
894 [-]: GETGLOBAL R76 K127     ; R76 := 0x7f5022cf
895 [-]: GETTABLE  R76 R76 K167 ; R76 := R76[0x3f3e4d12]
896 [-]: GETGLOBAL R77 K110     ; R77 := 0xae91e43b
897 [-]: SELF      R77 R77 K136 ; R78 := R77; R77 := R77[0x42b04007]
898 [-]: LOADK     R79 K179     ; R79 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
899 [-]: LOADKB    R80 1 0      ; R80 := true
900 [-]: CALL      R77 4 0      ; R77,... := R77(R78,R79,R80)
901 [-]: CALL      R76 0 2      ; R76 := R76(R77,...)
902 [-]: NEWTABLE  R77 0 7      ; R77 := {}
903 [-]: SETTABLE  R77 K55 R76  ; R77["Name"] := R76
904 [-]: SETTABLE  R77 K54 K180 ; R77["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
905 [-]: GETGLOBAL R78 K39      ; R78 := mPlayerMissionInfo
906 [-]: GETTABLE  R78 R78 K98  ; R78 := R78["mCrewShipFusionPoints"]
907 [-]: SETTABLE  R77 K138 R78 ; R77["Count"] := R78
908 [-]: GETGLOBAL R78 K39      ; R78 := mPlayerMissionInfo
909 [-]: GETTABLE  R78 R78 K65  ; R78 := R78["mNemesisTaxInfo"]
910 [-]: GETTABLE  R78 R78 K74  ; R78 := R78["mTaxedCrewShipFusionPoints"]
911 [-]: SETTABLE  R77 K169 R78 ; R77["TaxedCount"] := R78
912 [-]: GETGLOBAL R78 K181     ; R78 := 0x1ae7e99f
913 [-]: SETTABLE  R77 K139 R78 ; R77["Icon"] := R78
914 [-]: SETTABLE  R77 K141 K23 ; R77["Background"] := nil
915 [-]: GETGLOBAL R78 K177     ; R78 := mFusionPointsSortPriority
916 [-]: SETTABLE  R77 K176 R78 ; R77["SortPriority"] := R78
917 [-]: GETGLOBAL R78 K36      ; R78 := 0x33bdd652
918 [-]: GETTABLE  R78 R78 K37  ; R78 := R78[0x23d5322f]
919 [-]: GETGLOBAL R79 K178     ; R79 := mSortRewardItems
920 [-]: MOVE      R80 R77      ; R80 := R77
921 [-]: CALL      R78 3 1      ; R78(R79,R80)
922 [-]: GETGLOBAL R78 K182     ; R78 := mRewardGrid
923 [-]: EQ        1 R78 K23    ; if R78 == nil then PC := 928
924 [-]: JMP       928          ; PC := 928
925 [-]: GETUPVAL  R78 U20      ; R78 := U20
926 [-]: LOADKB    R79 1 0      ; R79 := true
927 [-]: CALL      R78 2 1      ; R78(R79)
928 [-]: GETGLOBAL R78 K0       ; R78 := 0x7b998233
929 [-]: GETGLOBAL R79 K6       ; R79 := mGameData
930 [-]: CALL      R78 2 2      ; R78 := R78(R79)
931 [-]: TEST      R78 1        ; if R78 then PC := 1007
932 [-]: JMP       1007         ; PC := 1007
933 [-]: GETGLOBAL R78 K6       ; R78 := mGameData
934 [-]: SELF      R78 R78 K183 ; R79 := R78; R78 := R78[0x276d0d04]
935 [-]: CALL      R78 2 1      ; R78(R79)
936 [-]: GETUPVAL  R78 U21      ; R78 := U21
937 [-]: CALL      R78 1 2      ; R78 := R78()
938 [-]: TEST      R78 0        ; if not R78 then PC := 1007
939 [-]: JMP       1007         ; PC := 1007
940 [-]: GETGLOBAL R78 K6       ; R78 := mGameData
941 [-]: SELF      R78 R78 K184 ; R79 := R78; R78 := R78[0x1ddaa793]
942 [-]: LOADK     R80 K185     ; R80 := "EEFinalRank"
943 [-]: GETGLOBAL R81 K1       ; R81 := 0xbe190284
944 [-]: SELF      R81 R81 K186 ; R82 := R81; R81 := R81[0x0eb34c69]
945 [-]: GETGLOBAL R83 K61      ; R83 := 0x0469f296
946 [-]: LOADK     R84 K187     ; R84 := "AvgWaveRank"
947 [-]: CALL      R83 2 2      ; R83 := R83(R84)
948 [-]: CONST     R84 4        ; R84 := 4.000000
949 [-]: CALL      R81 4 0      ; R81,... := R81(R82,R83,R84)
950 [-]: CALL      R78 0 1      ; R78(R79,...)
951 [-]: GETGLOBAL R78 K6       ; R78 := mGameData
952 [-]: SELF      R78 R78 K184 ; R79 := R78; R78 := R78[0x1ddaa793]
953 [-]: LOADK     R80 K188     ; R80 := "EEKills"
954 [-]: GETGLOBAL R81 K1       ; R81 := 0xbe190284
955 [-]: SELF      R81 R81 K186 ; R82 := R81; R81 := R81[0x0eb34c69]
956 [-]: GETGLOBAL R83 K61      ; R83 := 0x0469f296
957 [-]: LOADK     R84 K189     ; R84 := "Kills"
958 [-]: CALL      R83 2 2      ; R83 := R83(R84)
959 [-]: CONST     R84 0        ; R84 := 0.000000
960 [-]: CALL      R81 4 0      ; R81,... := R81(R82,R83,R84)
961 [-]: CALL      R78 0 1      ; R78(R79,...)
962 [-]: GETGLOBAL R78 K6       ; R78 := mGameData
963 [-]: SELF      R78 R78 K184 ; R79 := R78; R78 := R78[0x1ddaa793]
964 [-]: LOADK     R80 K190     ; R80 := "EEVipKills"
965 [-]: GETGLOBAL R81 K1       ; R81 := 0xbe190284
966 [-]: SELF      R81 R81 K186 ; R82 := R81; R81 := R81[0x0eb34c69]
967 [-]: GETGLOBAL R83 K61      ; R83 := 0x0469f296
968 [-]: LOADK     R84 K191     ; R84 := "VIPKills"
969 [-]: CALL      R83 2 2      ; R83 := R83(R84)
970 [-]: CONST     R84 0        ; R84 := 0.000000
971 [-]: CALL      R81 4 0      ; R81,... := R81(R82,R83,R84)
972 [-]: CALL      R78 0 1      ; R78(R79,...)
973 [-]: GETGLOBAL R78 K6       ; R78 := mGameData
974 [-]: SELF      R78 R78 K184 ; R79 := R78; R78 := R78[0x1ddaa793]
975 [-]: LOADK     R80 K192     ; R80 := "EETotal"
976 [-]: GETGLOBAL R81 K1       ; R81 := 0xbe190284
977 [-]: SELF      R81 R81 K186 ; R82 := R81; R81 := R81[0x0eb34c69]
978 [-]: GETGLOBAL R83 K61      ; R83 := 0x0469f296
979 [-]: LOADK     R84 K193     ; R84 := "Score"
980 [-]: CALL      R83 2 2      ; R83 := R83(R84)
981 [-]: CONST     R84 0        ; R84 := 0.000000
982 [-]: CALL      R81 4 0      ; R81,... := R81(R82,R83,R84)
983 [-]: CALL      R78 0 1      ; R78(R79,...)
984 [-]: GETGLOBAL R78 K6       ; R78 := mGameData
985 [-]: SELF      R78 R78 K184 ; R79 := R78; R78 := R78[0x1ddaa793]
986 [-]: LOADK     R80 K194     ; R80 := "EEWaveScore"
987 [-]: GETGLOBAL R81 K1       ; R81 := 0xbe190284
988 [-]: SELF      R81 R81 K186 ; R82 := R81; R81 := R81[0x0eb34c69]
989 [-]: GETGLOBAL R83 K61      ; R83 := 0x0469f296
990 [-]: LOADK     R84 K195     ; R84 := "WaveClearScore"
991 [-]: CALL      R83 2 2      ; R83 := R83(R84)
992 [-]: CONST     R84 0        ; R84 := 0.000000
993 [-]: CALL      R81 4 0      ; R81,... := R81(R82,R83,R84)
994 [-]: CALL      R78 0 1      ; R78(R79,...)
995 [-]: GETGLOBAL R78 K6       ; R78 := mGameData
996 [-]: SELF      R78 R78 K184 ; R79 := R78; R78 := R78[0x1ddaa793]
997 [-]: LOADK     R80 K196     ; R80 := "EEWaveReached"
998 [-]: GETGLOBAL R81 K1       ; R81 := 0xbe190284
999 [-]: SELF      R81 R81 K186 ; R82 := R81; R81 := R81[0x0eb34c69]
1000 [-]: GETGLOBAL R83 K61      ; R83 := 0x0469f296
1001 [-]: LOADK     R84 K197     ; R84 := "Wave"
1002 [-]: CALL      R83 2 2      ; R83 := R83(R84)
1003 [-]: CONST     R84 0        ; R84 := 0.000000
1004 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
1005 [-]: ADD       R81 R81 K8   ; R81 := R81 + 1.000000
1006 [-]: CALL      R78 4 1      ; R78(R79,R80,R81)
1007 [-]: GETGLOBAL R78 K44      ; R78 := 0x25d99d89
1008 [-]: SELF      R78 R78 K198 ; R79 := R78; R78 := R78[0xd723c617]
1009 [-]: CALL      R78 2 1      ; R78(R79)
1010 [-]: GETGLOBAL R78 K199     ; R78 := mCloseWhenDbUpdateComplete
1011 [-]: TEST      R78 0        ; if not R78 then PC := 1015
1012 [-]: JMP       1015         ; PC := 1015
1013 [-]: GETUPVAL  R78 U22      ; R78 := U22
1014 [-]: CALL      R78 1 1      ; R78()
1015 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 7247
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x3d106989
  5 [-]: LOADK     R3 K2        ; R3 := "Emergency flushing DbUpdateComplete!"
  6 [-]: CALL      R2 2 1       ; R2(R3)
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R2 1 1       ; R2()
  9 [-]: NEWTABLE  R2 0 2       ; R2 := {}
 10 [-]: SETTABLE  R2 K3 R0     ; R2["result"] := R0
 11 [-]: SETTABLE  R2 K4 R1     ; R2["body"] := R1
 12 [-]: SETUPVAL  R2 U0        ; U82 := R0
 13 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 7258
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 7262
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: GETGLOBAL R5 K1        ; R5 := 0x89326c93
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x89326c93
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0x7d108ddb]
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: MOVE      R3 R4        ; R3 := R4
 10 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: LEN       R4 R3        ; R4 := # R3
 16 [-]: LT        1 K3 R4      ; if 1.000000 < R4 then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R4 K4        ; R4 := mPanelTransitionOutActive
 19 [-]: TEST      R4 1         ; if R4 then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETGLOBAL R4 K5        ; R4 := mPendingTallies
 22 [-]: LT        1 K6 R4      ; if 0.000000 < R4 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETGLOBAL R4 K7        ; R4 := mWaitingForDbUpdate
 25 [-]: TEST      R4 1         ; if R4 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETGLOBAL R4 K8        ; R4 := mAutoCloseDelay
 28 [-]: EQ        0 R4 K9      ; if R4 ~= -1.000000 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R4 K10       ; R4 := 0x7f5022cf
 32 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0xa5c556b9]
 33 [-]: MOVE      R5 R1        ; R5 := R1
 34 [-]: LOADK     R6 K12       ; R6 := "_SPACE"
 35 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 36 [-]: EQ        1 R4 K13     ; if R4 == nil then PC := 69
 37 [-]: JMP       69           ; PC := 69
 38 [-]: GETGLOBAL R4 K14       ; R4 := _T
 39 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["eomScreenMode"]
 40 [-]: GETUPVAL  R5 U0        ; R5 := U0
 41 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["ACTUAL_EOM"]
 42 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 69
 43 [-]: JMP       69           ; PC := 69
 44 [-]: EQ        0 R2 K17     ; if R2 ~= "1" then PC := 69
 45 [-]: JMP       69           ; PC := 69
 46 [-]: GETGLOBAL R4 K8        ; R4 := mAutoCloseDelay
 47 [-]: LT        1 R4 K18     ; if R4 < 5.000000 then PC := 65
 48 [-]: JMP       65           ; PC := 65
 49 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 50 [-]: GETGLOBAL R5 K19       ; R5 := 0xbe190284
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: TEST      R4 1         ; if R4 then PC := 69
 53 [-]: JMP       69           ; PC := 69
 54 [-]: GETGLOBAL R4 K19       ; R4 := 0xbe190284
 55 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0xf2deaf69]
 56 [-]: GETGLOBAL R6 K21       ; R6 := gLotusBaseGameRulesType
 57 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 58 [-]: TEST      R4 0         ; if not R4 then PC := 69
 59 [-]: JMP       69           ; PC := 69
 60 [-]: GETGLOBAL R4 K19       ; R4 := 0xbe190284
 61 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x5d204145]
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: TEST      R4 1         ; if R4 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETGLOBAL R4 K23       ; R4 := AUTO_CLOSE_FADEOUT_TIME
 66 [-]: SETGLOBAL R4 K8        ; mAutoCloseDelay := R4
 67 [-]: CONST     R4 1         ; R4 := 1.000000
 68 [-]: RETURN    R4 2         ; return R4
 69 [-]: LOADNIL   R4 R4        ; R4 := nil
 70 [-]: RETURN    R4 2         ; return R4
 71 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 7283
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mPvpMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := mPvpMovie
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xe4162eed]
  8 [-]: LOADK     R2 K3        ; R2 := "UpdateMapVote"
  9 [-]: LOADK     R3 K4        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 7289
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mPvpMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := mPvpMovie
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xe4162eed]
  8 [-]: LOADK     R2 K3        ; R2 := "PopulateMapVote"
  9 [-]: LOADK     R3 K4        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 7295
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mPvpMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := mPvpMovie
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xe4162eed]
  8 [-]: LOADK     R2 K3        ; R2 := "OnMapVotingFinished"
  9 [-]: LOADK     R3 K4        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 7301
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["allPlayersCommitted"] := true
  3 [-]: GETGLOBAL R0 K2        ; R0 := mAutoCloseDelay
  4 [-]: LT        0 R0 K3      ; if R0 >= 0.000000 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: LOADKB    R0 1 0       ; R0 := true
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 7310
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := mInputBlocked
  2 [-]: TEST      R2 1         ; if R2 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  5 [-]: GETGLOBAL R3 K2        ; R3 := mStatsGrid
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 0         ; if not R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R2 K2        ; R2 := mStatsGrid
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mScrollBar"]
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 13 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x91a24e4b]
 14 [-]: LOADK     R5 K6        ; R5 := "_root"
 15 [-]: CONST     R6 25        ; R6 := 25.000000
 16 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 17 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 18 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x91a24e4b]
 19 [-]: LOADK     R6 K6        ; R6 := "_root"
 20 [-]: CONST     R7 26        ; R7 := 26.000000
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: GETUPVAL  R5 U0        ; R5 := U0
 23 [-]: CALL      R5 1 2       ; R5 := R5()
 24 [-]: TEST      R5 1         ; if R5 then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: GETUPVAL  R5 U1        ; R5 := U1
 27 [-]: TEST      R5 0         ; if not R5 then PC := 40
 28 [-]: JMP       40           ; PC := 40
 29 [-]: GETUPVAL  R5 U0        ; R5 := U0
 30 [-]: CALL      R5 1 2       ; R5 := R5()
 31 [-]: TEST      R5 0         ; if not R5 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 34 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x91a24e4b]
 35 [-]: LOADK     R7 K7        ; R7 := "ExpandableArea.PlayerInfo.PlayerStats"
 36 [-]: CONST     R8 3         ; R8 := 3.000000
 37 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 38 [-]: LT        0 R4 R5      ; if R4 >= R5 then PC := 53
 39 [-]: JMP       53           ; PC := 53
 40 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 41 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x91a24e4b]
 42 [-]: LOADK     R7 K8        ; R7 := "ExpandableArea.Progression.Affinity.ScrollBar"
 43 [-]: CONST     R8 2         ; R8 := 2.000000
 44 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 45 [-]: ADD       R5 R5 K9     ; R5 := R5 + 10.000000
 46 [-]: LT        0 R3 R5      ; if R3 >= R5 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETGLOBAL R5 K10       ; R5 := mAffinityGrid
 49 [-]: GETTABLE  R2 R5 K3     ; R2 := R5["mScrollBar"]
 50 [-]: JMP       53           ; PC := 53
 51 [-]: GETGLOBAL R5 K11       ; R5 := mRewardGrid
 52 [-]: GETTABLE  R2 R5 K3     ; R2 := R5["mScrollBar"]
 53 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 54 [-]: MOVE      R6 R2        ; R6 := R2
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: TEST      R5 1         ; if R5 then PC := 65
 57 [-]: JMP       65           ; PC := 65
 58 [-]: SELF      R5 R2 K12    ; R6 := R2; R5 := R2[0x30456f58]
 59 [-]: GETGLOBAL R7 K13       ; R7 := 0x03f57322
 60 [-]: MOVE      R8 R1        ; R8 := R1
 61 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 62 [-]: GETGLOBAL R8 K14       ; R8 := 0x0032441c
 63 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["UISound_Scroll"]
 64 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 65 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 7330
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x32302b4a]
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K6        ; R2 := 0xbe190284
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K6        ; R1 := 0xbe190284
 15 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xc849bff9]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
 18 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0x8ee24660]
 19 [-]: LOADKB    R2 0 0       ; R2 := false
 20 [-]: CALL      R1 2 1       ; R1(R2)
 21 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 7340
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xdedfded7]
  3 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/QuitGameConfirm"
  4 [-]: LOADK     R2 K2        ; R2 := "ExitPvpAtEOM"
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 7344
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 7350
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: SETUPVAL  R0 U0        ; U82 := R0
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x25312c9b
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  8 [-]: LOADK     R3 K2        ; R3 := "_root"
  9 [-]: CONST     R4 2         ; R4 := 2.000000
 10 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 11 [-]: CONST     R6 10        ; R6 := 10.000000
 12 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 13 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 14 [-]: GETUPVAL  R7 U1        ; R7 := U1
 15 [-]: GETTABLE  R7 R7 K4     ; R7 := R7[0x06d055f9]
 16 [-]: MOVE      R8 R0        ; R8 := R0
 17 [-]: CONST     R9 0         ; R9 := 0.000000
 18 [-]: CONST     R10 100      ; R10 := 100.000000
 19 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 20 [-]: SETLIST   R6 0 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 0
 21 [-]: LOADK     R7 K5        ; R7 := 0.200000
 22 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 23 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5477b639]
 25 [-]: NOT       R3 R0        ; R3 :=  R0
 26 [-]: CALL      R1 3 1       ; R1(R2,R3)
 27 [-]: GETUPVAL  R1 U2        ; R1 := U2
 28 [-]: GETTABLE  R1 R1 K7     ; R1 := R1[0x102f073a]
 29 [-]: NOT       R2 R0        ; R2 :=  R0
 30 [-]: CALL      R1 2 1       ; R1(R2)
 31 [-]: GETUPVAL  R1 U3        ; R1 := U3
 32 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0x56d89411]
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: CALL      R1 2 1       ; R1(R2)
 35 [-]: GETUPVAL  R1 U3        ; R1 := U3
 36 [-]: GETTABLE  R1 R1 K9     ; R1 := R1[0x15deabb1]
 37 [-]: MOVE      R2 R0        ; R2 := R0
 38 [-]: CALL      R1 2 1       ; R1(R2)
 39 [-]: GETUPVAL  R1 U4        ; R1 := U4
 40 [-]: CALL      R1 1 1       ; R1()
 41 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 7363
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADKB    R1 1 0       ; R1 := true
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 7367
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADKB    R1 0 0       ; R1 := false
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 7371
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 0         ; if not R0 then PC := 23
  4 [-]: JMP       23           ; PC := 23
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xcdc34211]
  7 [-]: CALL      R0 1 2       ; R0 := R0()
  8 [-]: TEST      R0 0         ; if not R0 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R0 K1        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["eomScreenMode"]
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ACTUAL_EOM"]
 14 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R0 K4        ; R0 := 0x89326c93
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x18d05d30]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: TEST      R0 1         ; if R0 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: GETUPVAL  R0 U3        ; R0 := U3
 22 [-]: CALL      R0 1 1       ; R0()
 23 [-]: GETUPVAL  R0 U4        ; R0 := U4
 24 [-]: TEST      R0 0         ; if not R0 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETUPVAL  R0 U5        ; R0 := U5
 27 [-]: LOADKB    R1 0 0       ; R1 := false
 28 [-]: CALL      R0 2 1       ; R0(R1)
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETUPVAL  R0 U6        ; R0 := U6
 31 [-]: CALL      R0 1 2       ; R0 := R0()
 32 [-]: TEST      R0 0         ; if not R0 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: LOADKB    R0 1 0       ; R0 := true
 35 [-]: RETURN    R0 2         ; return R0
 36 [-]: GETGLOBAL R0 K6        ; R0 := mInputBlocked
 37 [-]: TEST      R0 1         ; if R0 then PC := 49
 38 [-]: JMP       49           ; PC := 49
 39 [-]: GETGLOBAL R0 K7        ; R0 := mWaitingForDbUpdate
 40 [-]: TEST      R0 1         ; if R0 then PC := 49
 41 [-]: JMP       49           ; PC := 49
 42 [-]: GETGLOBAL R0 K8        ; R0 := mWaitingForReturnToShip
 43 [-]: TEST      R0 1         ; if R0 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETUPVAL  R0 U7        ; R0 := U7
 46 [-]: CALL      R0 1 1       ; R0()
 47 [-]: LOADKB    R0 1 0       ; R0 := true
 48 [-]: RETURN    R0 2         ; return R0
 49 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 7392
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 1         ; if R1 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETGLOBAL R1 K1        ; R1 := mRewardGrid
  5 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K1        ; R1 := mRewardGrid
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x070daa5a]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 7400
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mRewardGrid
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K0        ; R1 := mRewardGrid
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xdf42446e]
  7 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 7408
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mRewardGrid
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K0        ; R1 := mRewardGrid
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbce5a201]
  7 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 7416
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 25
  3 [-]: JMP       25           ; PC := 25
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 25
  6 [-]: JMP       25           ; PC := 25
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x91e13703]
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: LOADK     R4 K3        ; R4 := ".IconBacker"
 11 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 12 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["FloatingContentHighlight"]
 15 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["r"]
 16 [-]: GETUPVAL  R6 U1        ; R6 := U1
 17 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["FloatingContentHighlight"]
 18 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["g"]
 19 [-]: GETUPVAL  R7 U1        ; R7 := U1
 20 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["FloatingContentHighlight"]
 21 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["b"]
 22 [-]: GETGLOBAL R8 K9        ; R8 := BORDER_ALPHA
 23 [-]: DIV       R8 R8 K10    ; R8 := R8 / 100.000000
 24 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 25 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 46
 26 [-]: JMP       46           ; PC := 46
 27 [-]: SETUPVAL  R0 U0        ; U82 := R0
 28 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 29 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x91e13703]
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: LOADK     R4 K3        ; R4 := ".IconBacker"
 32 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 33 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
 34 [-]: GETUPVAL  R5 U1        ; R5 := U1
 35 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["FloatingContentHighlight"]
 36 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["r"]
 37 [-]: GETUPVAL  R6 U1        ; R6 := U1
 38 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["FloatingContentHighlight"]
 39 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["g"]
 40 [-]: GETUPVAL  R7 U1        ; R7 := U1
 41 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["FloatingContentHighlight"]
 42 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["b"]
 43 [-]: GETGLOBAL R8 K11       ; R8 := BACKER_ALPHA
 44 [-]: DIV       R8 R8 K10    ; R8 := R8 / 100.000000
 45 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 46 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 7426
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: SETGLOBAL R0 K1        ; mChildMovie := R0
  7 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 7432
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADKB    R1 0 0       ; R1 := false
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xbe190284
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 38
  6 [-]: JMP       38           ; PC := 38
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xd7d79b74]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 38
 14 [-]: JMP       38           ; PC := 38
 15 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 16 [-]: SELF      R4 R2 K3     ; R5 := R2; R4 := R2[0xcd57f819]
 17 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 18 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 19 [-]: TEST      R3 1         ; if R3 then PC := 38
 20 [-]: JMP       38           ; PC := 38
 21 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0xcd57f819]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x5163741e]
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 26 [-]: MOVE      R5 R3        ; R5 := R3
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: TEST      R4 1         ; if R4 then PC := 38
 29 [-]: JMP       38           ; PC := 38
 30 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3[0x9e4623d9]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: EQ        1 R4 K7      ; if R4 == 4.000000 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: EQ        1 R4 K8      ; if R4 == 3.000000 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 37
 37 [-]: LOADKB    R1 1 0       ; R1 := true
 38 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 39 [-]: GETGLOBAL R6 K9        ; R6 := _T
 40 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["isStreamingLevel"]
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: TEST      R5 1         ; if R5 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R5 K9        ; R5 := _T
 45 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["isStreamingLevel"]
 46 [-]: TEST      R5 1         ; if R5 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: MOVE      R5 R1        ; R5 := R1
 49 [-]: TEST      R5 1         ; if R5 then PC := 102
 50 [-]: JMP       102          ; PC := 102
 51 [-]: GETGLOBAL R6 K9        ; R6 := _T
 52 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["OpenScreen"]
 53 [-]: TEST      R6 0         ; if not R6 then PC := 102
 54 [-]: JMP       102          ; PC := 102
 55 [-]: GETUPVAL  R6 U0        ; R6 := U0
 56 [-]: CALL      R6 1 2       ; R6 := R6()
 57 [-]: TEST      R6 1         ; if R6 then PC := 102
 58 [-]: JMP       102          ; PC := 102
 59 [-]: GETGLOBAL R6 K12       ; R6 := mWaitingForReturnToShip
 60 [-]: TEST      R6 1         ; if R6 then PC := 102
 61 [-]: JMP       102          ; PC := 102
 62 [-]: LOADK     R6 K13       ; R6 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
 63 [-]: GETGLOBAL R7 K14       ; R7 := 0x64fb1586
 64 [-]: MOVE      R8 R0        ; R8 := R0
 65 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 66 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 67 [-]: GETGLOBAL R7 K15       ; R7 := 0x03f57322
 68 [-]: GETGLOBAL R8 K16       ; R8 := 0xae91e43b
 69 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0x5b638cce]
 70 [-]: MOVE      R10 R6       ; R10 := R6
 71 [-]: LOADK     R11 K18      ; R11 := ".Btn"
 72 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 73 [-]: LOADK     R11 K19      ; R11 := "PlayerId"
 74 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 75 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 76 [-]: GETUPVAL  R8 U1        ; R8 := U1
 77 [-]: CALL      R8 1 2       ; R8 := R8()
 78 [-]: EQ        1 R7 K20     ; if R7 == nil then PC := 85
 79 [-]: JMP       85           ; PC := 85
 80 [-]: EQ        1 R8 K20     ; if R8 == nil then PC := 85
 81 [-]: JMP       85           ; PC := 85
 82 [-]: LEN       R9 R8        ; R9 := # R8
 83 [-]: LT        0 R9 R7      ; if R9 >= R7 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: RETURN    R0 1         ; return 
 86 [-]: GETTABLE  R9 R8 R7     ; R9 := R8[R7]
 87 [-]: GETGLOBAL R10 K9       ; R10 := _T
 88 [-]: SETTABLE  R10 K21 K22  ; R10["SelectedIsGuild"] := false
 89 [-]: GETGLOBAL R10 K9       ; R10 := _T
 90 [-]: GETTABLE  R11 R9 K24   ; R11 := R9["name"]
 91 [-]: SETTABLE  R10 K23 R11  ; R10["SelectedProfileName"] := R11
 92 [-]: GETGLOBAL R10 K9       ; R10 := _T
 93 [-]: GETTABLE  R11 R9 K26   ; R11 := R9["onlineId"]
 94 [-]: SETTABLE  R10 K25 R11  ; R10["SelectedProfileId"] := R11
 95 [-]: GETGLOBAL R10 K9       ; R10 := _T
 96 [-]: GETTABLE  R10 R10 K27  ; R10 := R10[0x32bb15a6]
 97 [-]: LOADK     R11 K28      ; R11 := "Profile"
 98 [-]: LOADNIL   R12 R12      ; R12 := nil
 99 [-]: LOADKB    R13 0 0      ; R13 := false
100 [-]: GETUPVAL  R14 U2       ; R14 := U2
101 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
102 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 7461
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 66
  5 [-]: JMP       66           ; PC := 66
  6 [-]: GETGLOBAL R1 K2        ; R1 := mInputBlocked
  7 [-]: TEST      R1 1         ; if R1 then PC := 66
  8 [-]: JMP       66           ; PC := 66
  9 [-]: LOADK     R1 K3        ; R1 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x64fb1586
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 18 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xae31ab92]
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: LOADK     R5 K6        ; R5 := "Name"
 21 [-]: CONST     R6 29        ; R6 := 29.000000
 22 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 23 [-]: CONST     R3 1         ; R3 := 1.000000
 24 [-]: GETGLOBAL R4 K7        ; R4 := mSquadLoadoutsInfo
 25 [-]: LEN       R4 R4        ; R4 := # R4
 26 [-]: CONST     R5 1         ; R5 := 1.000000
 27 [-]: FORPREP   R3 65        ; R3 -= R5; PC := 65
 28 [-]: GETGLOBAL R7 K7        ; R7 := mSquadLoadoutsInfo
 29 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 30 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["Name"]
 31 [-]: EQ        0 R7 R2      ; if R7 ~= R2 then PC := 65
 32 [-]: JMP       65           ; PC := 65
 33 [-]: GETGLOBAL R7 K8        ; R7 := _T
 34 [-]: GETGLOBAL R8 K7        ; R8 := mSquadLoadoutsInfo
 35 [-]: GETTABLE  R8 R8 R6     ; R8 := R8[R6]
 36 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["NameWithRank"]
 37 [-]: LOADK     R9 K11       ; R9 := "\n\r"
 38 [-]: GETGLOBAL R10 K7       ; R10 := mSquadLoadoutsInfo
 39 [-]: GETTABLE  R10 R10 R6   ; R10 := R10[R6]
 40 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["LoadoutDesc"]
 41 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 42 [-]: SETTABLE  R7 K9 R8     ; R7["gToolTip"] := R8
 43 [-]: GETGLOBAL R7 K8        ; R7 := _T
 44 [-]: GETUPVAL  R8 U1        ; R8 := U1
 45 [-]: GETTABLE  R8 R8 K14    ; R8 := R8[0x6d7e6810]
 46 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
 47 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 48 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
 49 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11[0x91a24e4b]
 50 [-]: MOVE      R13 R1       ; R13 := R1
 51 [-]: CONST     R14 2        ; R14 := 2.000000
 52 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 53 [-]: ADD       R11 R11 K17  ; R11 := R11 + 26.000000
 54 [-]: SETTABLE  R10 K15 R11  ; R10["x"] := R11
 55 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
 56 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11[0x91a24e4b]
 57 [-]: MOVE      R13 R1       ; R13 := R1
 58 [-]: CONST     R14 3        ; R14 := 3.000000
 59 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 60 [-]: SUB       R11 R11 K17  ; R11 := R11 - 26.000000
 61 [-]: SETTABLE  R10 K18 R11  ; R10["y"] := R11
 62 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 63 [-]: SETTABLE  R7 K13 R8    ; R7["gToolTipCoords"] := R8
 64 [-]: JMP       66           ; PC := 66
 65 [-]: FORLOOP   R3 28        ; R3 += R5; if R3 <= R4 then begin PC := 28; R6 := R3 end
 66 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 7480
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETGLOBAL R1 K2        ; R1 := _T
 10 [-]: SETTABLE  R1 K3 K4     ; R1["gToolTip"] := nil
 11 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 7487
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R0 K2        ; R0 := mRewardGrid
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x0b35b612]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["DECREMENT"]
 13 [-]: LOADKB    R3 0 0       ; R3 := false
 14 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 15 [-]: LOADKB    R0 1 0       ; R0 := true
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 7494
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R0 K2        ; R0 := mRewardGrid
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x0b35b612]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["INCREMENT"]
 13 [-]: LOADKB    R3 0 0       ; R3 := false
 14 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 15 [-]: LOADKB    R0 1 0       ; R0 := true
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 7501
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R0 K2        ; R0 := mRewardGrid
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x0b35b612]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["DECREMENT"]
 13 [-]: LOADKB    R3 1 0       ; R3 := true
 14 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 15 [-]: LOADKB    R0 1 0       ; R0 := true
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 7508
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R0 K2        ; R0 := mRewardGrid
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x0b35b612]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["INCREMENT"]
 13 [-]: LOADKB    R3 1 0       ; R3 := true
 14 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 15 [-]: LOADKB    R0 1 0       ; R0 := true
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 7515
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 1         ; if R1 then PC := 17
  3 [-]: JMP       17           ; PC := 17
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := mRewardGrid
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCategoryMenu"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 17
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCategoryMenu"]
 12 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xdf42446e]
 13 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 16 [-]: CALL      R1 0 1       ; R1(R2,...)
 17 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 7521
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mRewardGrid
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCategoryMenu"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R1 K1        ; R1 := mRewardGrid
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCategoryMenu"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbce5a201]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 7527
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 1         ; if R1 then PC := 20
  3 [-]: JMP       20           ; PC := 20
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := mRewardGrid
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCategoryMenu"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETGLOBAL R1 K2        ; R1 := mRewardGrid
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCategoryMenu"]
 12 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x070daa5a]
 13 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: LOADKB    R4 1 0       ; R4 := true
 17 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: CALL      R1 1 1       ; R1()
 20 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 7534
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mAffinityGrid
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R1 K1        ; R1 := mAffinityGrid
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xdf42446e]
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 7540
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mAffinityGrid
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R1 K1        ; R1 := mAffinityGrid
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbce5a201]
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: GETGLOBAL R1 K4        ; R1 := _T
 13 [-]: SETTABLE  R1 K5 K6     ; R1["InfoPopup_Data"] := nil
 14 [-]: GETGLOBAL R1 K4        ; R1 := _T
 15 [-]: SETTABLE  R1 K7 K6     ; R1["InfoPopup_Grid"] := nil
 16 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 7548
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mAffinityGrid
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R1 K1        ; R1 := mAffinityGrid
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x070daa5a]
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 7554
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: NOT       R0 R0        ; R0 :=  R0
  3 [-]: SETUPVAL  R0 U0        ; U82 := R0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 7560
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
  4 [-]: CONST     R3 9         ; R3 := 9.000000
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FloatingContentHighlightInt"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
 10 [-]: LOADK     R2 K4        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
 11 [-]: CONST     R3 9         ; R3 := 9.000000
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FloatingContentHighlightInt"]
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 16 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
 17 [-]: LOADK     R2 K4        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
 18 [-]: CONST     R3 5         ; R3 := 5.000000
 19 [-]: CONST     R4 120       ; R4 := 120.000000
 20 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 21 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
 23 [-]: LOADK     R2 K4        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
 24 [-]: CONST     R3 6         ; R3 := 6.000000
 25 [-]: CONST     R4 120       ; R4 := 120.000000
 26 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 7567
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
  4 [-]: CONST     R3 9         ; R3 := 9.000000
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FloatingContentInt"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
 10 [-]: LOADK     R2 K4        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
 11 [-]: CONST     R3 9         ; R3 := 9.000000
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FloatingContentInt"]
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 16 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
 17 [-]: LOADK     R2 K4        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
 18 [-]: CONST     R3 5         ; R3 := 5.000000
 19 [-]: CONST     R4 100       ; R4 := 100.000000
 20 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 21 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
 23 [-]: LOADK     R2 K4        ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
 24 [-]: CONST     R3 6         ; R3 := 6.000000
 25 [-]: CONST     R4 100       ; R4 := 100.000000
 26 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 7574
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADKB    R4 0 0       ; R4 := false
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: SETGLOBAL R1 K0        ; mCountdownMessage := R1
  7 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 7578
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x0032441c
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UIMaterial_FocusLensStore"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: LOADKB    R0 1 0       ; R0 := true
  6 [-]: SETUPVAL  R0 U0        ; U82 := R0
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0x8024bd2d]
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K5        ; R1 := mAffinityGrid
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETGLOBAL R0 K5        ; R0 := mAffinityGrid
 17 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xea061e98]
 18 [-]: CLOSURE   R2 0         ; R2 := closure(Function #185.1)
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: CALL      R0 3 1       ; R0(R1,R2)
 21 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 22 [-]: GETGLOBAL R1 K7        ; R1 := mRewardGrid
 23 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 24 [-]: TEST      R0 1         ; if R0 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETUPVAL  R0 U3        ; R0 := U3
 27 [-]: LOADKB    R1 1 0       ; R1 := true
 28 [-]: LOADKB    R2 1 0       ; R2 := true
 29 [-]: LOADKB    R3 1 0       ; R3 := true
 30 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 31 [-]: RETURN    R0 1         ; return 


; Function #185.1:
;
; Name:            
; Defined at line: 7593
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["PolarityInfo"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 45
  5 [-]: JMP       45           ; PC := 45
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["TotalFocus"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 45
 10 [-]: JMP       45           ; PC := 45
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 12 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["FocusGained"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 45
 15 [-]: JMP       45           ; PC := 45
 16 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["InterpingFocusGain"]
 17 [-]: TEST      R1 1         ; if R1 then PC := 45
 18 [-]: JMP       45           ; PC := 45
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5f56eeab]
 21 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mClipName"]
 22 [-]: LOADK     R4 K8        ; R4 := ".Info.BonusXP"
 23 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 24 [-]: CONST     R4 29        ; R4 := 29.000000
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["PolarityInfo"]
 27 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["TotalFocus"]
 28 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 29 [-]: CALL      R1 0 1       ; R1(R2,...)
 30 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["FocusGained"]
 31 [-]: LT        0 K9 R1      ; if 0.000000 >= R1 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 34 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5f56eeab]
 35 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mClipName"]
 36 [-]: LOADK     R4 K10       ; R4 := ".Info.XP"
 37 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 38 [-]: CONST     R4 29        ; R4 := 29.000000
 39 [-]: GETUPVAL  R5 U0        ; R5 := U0
 40 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["PolarityInfo"]
 41 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["FocusGained"]
 42 [-]: LOADKB    R8 1 0       ; R8 := true
 43 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 44 [-]: CALL      R1 0 1       ; R1(R2,...)
 45 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 7612
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETGLOBAL R0 K0        ; mChildMovie := R0
  2 [-]: LOADKB    R0 0 0       ; R0 := false
  3 [-]: SETUPVAL  R0 U0        ; U82 := R0
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: SETGLOBAL R0 K1        ; mKudosScreenClosed := R0
  6 [-]: LOADKB    R0 0 0       ; R0 := false
  7 [-]: SETGLOBAL R0 K2        ; mInputBlocked := R0
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: CALL      R0 1 1       ; R0()
 10 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 7620
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 7624
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: LOADKB    R0 0 0       ; R0 := false
  7 [-]: SETUPVAL  R0 U0        ; U82 := R0
  8 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 7632
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mOpenedFromPauseMenu := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 7636
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 7640
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 7644
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x76ea806b
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x3f3ae64c]
  8 [-]: CONST     R2 0         ; R2 := 0.000000
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: CALL      R1 1 1       ; R1()
 17 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 7653
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 7657
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 31
  5 [-]: JMP       31           ; PC := 31
  6 [-]: LOADKB    R0 0 0       ; R0 := false
  7 [-]: SETGLOBAL R0 K2        ; mWaitingForMissionComplete := R0
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xbed40e9c]
 10 [-]: LOADKB    R2 0 0       ; R2 := false
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K4        ; R1 := mPvpMovie
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R0 K5        ; R0 := mSearchBox
 18 [-]: SETTABLE  R0 K6 K7     ; R0["mSkipAutoFocus"] := false
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: CALL      R0 1 1       ; R0()
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R0 K4        ; R0 := mPvpMovie
 23 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xe4162eed]
 24 [-]: LOADK     R2 K9        ; R2 := "ShowEndOfMatch"
 25 [-]: LOADK     R3 K10       ; R3 := ""
 26 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 27 [-]: GETUPVAL  R0 U1        ; R0 := U1
 28 [-]: GETTABLE  R0 R0 K11    ; R0 := R0[0x56d89411]
 29 [-]: LOADKB    R1 0 0       ; R1 := false
 30 [-]: CALL      R0 2 1       ; R0(R1)
 31 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 7671
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x25312c9b
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  8 [-]: LOADK     R2 K3        ; R2 := "TopAnchor.Header"
  9 [-]: CONST     R3 6         ; R3 := 6.000000
 10 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 11 [-]: CONST     R5 10        ; R5 := 10.000000
 12 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 13 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 14 [-]: CONST     R6 100       ; R6 := 100.000000
 15 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 16 [-]: CONST     R6 0         ; R6 := 0.500000
 17 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 7677
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: LEN       R0 R0        ; R0 := # R0
  9 [-]: EQ        0 R0 K2      ; if R0 ~= 0.000000 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETUPVAL  R0 U1        ; R0 := U1
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0x06d055f9]
 13 [-]: GETGLOBAL R1 K4        ; R1 := mMissionFailed
 14 [-]: LOADK     R2 K5        ; R2 := "/Lotus/Language/Menu/MissionStats_Failed"
 15 [-]: LOADK     R3 K6        ; R3 := "/Lotus/Language/Menu/MissionStats_Complete"
 16 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 17 [-]: SETUPVAL  R0 U0        ; U82 := R0
 18 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 19 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x20b98db3]
 20 [-]: LOADK     R2 K8        ; R2 := "MissionComplete.TextAnim.Label.GrowAnim.Label.text"
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 23 [-]: CONST     R0 130       ; R0 := 130.000000
 24 [-]: GETGLOBAL R1 K9        ; R1 := 0x5bced4c4
 25 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0xb62ecfe0]
 26 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 27 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x91a24e4b]
 28 [-]: LOADK     R4 K12       ; R4 := "MissionComplete.TextAnim.Label.GrowAnim.Label"
 29 [-]: CONST     R5 33        ; R5 := 33.000000
 30 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 31 [-]: MOVE      R3 R0        ; R3 := R0
 32 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 33 [-]: ADD       R1 R1 K13    ; R1 := R1 + 50.000000
 34 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 35 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x91a24e4b]
 36 [-]: LOADK     R4 K14       ; R4 := "MissionComplete.BackerAnim.Backer.Mid"
 37 [-]: CONST     R5 12        ; R5 := 12.000000
 38 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 39 [-]: SUB       R3 R0 K15    ; R3 := R0 - 2.000000
 40 [-]: SUB       R1 R1 R3     ; R1 := R1 - R3
 41 [-]: CLOSURE   R3 0         ; R3 := closure(Function #196.1)
 42 [-]: MOVE      R0 R1        ; R0 := R1
 43 [-]: MOVE      R0 R2        ; R0 := R2
 44 [-]: GETGLOBAL R4 K16       ; R4 := 0x25312c9b
 45 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
 46 [-]: LOADK     R6 K14       ; R6 := "MissionComplete.BackerAnim.Backer.Mid"
 47 [-]: CONST     R7 2         ; R7 := 2.000000
 48 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 49 [-]: MOVE      R9 R3        ; R9 := R3
 50 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 51 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 52 [-]: CONST     R10 1        ; R10 := 1.000000
 53 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 54 [-]: CONST     R10 1        ; R10 := 1.500000
 55 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 56 [-]: DIV       R4 R1 K15    ; R4 := R1 / 2.000000
 57 [-]: ADD       R4 R4 K18    ; R4 := R4 + 64.000000
 58 [-]: GETGLOBAL R5 K16       ; R5 := 0x25312c9b
 59 [-]: GETGLOBAL R6 K1        ; R6 := 0xae91e43b
 60 [-]: LOADK     R7 K19       ; R7 := "MissionComplete.ArrowEndsAnim.ArrowEnds.Left"
 61 [-]: CONST     R8 2         ; R8 := 2.000000
 62 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 63 [-]: CONST     R10 0        ; R10 := 0.000000
 64 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 65 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 66 [-]: UNM       R11 R4       ; R11 :=  R4
 67 [-]: SUB       R11 R11 K20  ; R11 := R11 - 22.000000
 68 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 69 [-]: CONST     R11 1        ; R11 := 1.500000
 70 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 71 [-]: GETGLOBAL R5 K16       ; R5 := 0x25312c9b
 72 [-]: GETGLOBAL R6 K1        ; R6 := 0xae91e43b
 73 [-]: LOADK     R7 K21       ; R7 := "MissionComplete.ArrowEndsAnim.ArrowEnds.Right"
 74 [-]: CONST     R8 2         ; R8 := 2.000000
 75 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 76 [-]: CONST     R10 0        ; R10 := 0.000000
 77 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 78 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 79 [-]: ADD       R11 R4 K20   ; R11 := R4 + 22.000000
 80 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 81 [-]: CONST     R11 1        ; R11 := 1.500000
 82 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 83 [-]: RETURN    R0 1         ; return 


; Function #196.1:
;
; Name:            
; Defined at line: 7693
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: SUB       R1 R1 R2     ; R1 := R1 - R2
  4 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
  7 [-]: DIV       R2 R1 K0     ; R2 := R1 / 2.000000
  8 [-]: ADD       R2 R2 K1     ; R2 := R2 + 64.000000
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 10 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x67bc869f]
 11 [-]: LOADK     R5 K4        ; R5 := "MissionComplete.BackerAnim.Backer.Left"
 12 [-]: CONST     R6 0         ; R6 := 0.000000
 13 [-]: UNM       R7 R2        ; R7 :=  R2
 14 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 16 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x67bc869f]
 17 [-]: LOADK     R5 K5        ; R5 := "MissionComplete.BackerAnim.Backer.Mid"
 18 [-]: CONST     R6 12        ; R6 := 12.000000
 19 [-]: MOVE      R7 R1        ; R7 := R1
 20 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 21 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 22 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x67bc869f]
 23 [-]: LOADK     R5 K6        ; R5 := "MissionComplete.BackerAnim.Backer.Right"
 24 [-]: CONST     R6 0         ; R6 := 0.000000
 25 [-]: MOVE      R7 R2        ; R7 := R2
 26 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 27 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 28 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x67bc869f]
 29 [-]: LOADK     R5 K7        ; R5 := "MissionComplete.Header.Lines.Left"
 30 [-]: CONST     R6 0         ; R6 := 0.000000
 31 [-]: UNM       R7 R2        ; R7 :=  R2
 32 [-]: SUB       R7 R7 K8     ; R7 := R7 - 16.000000
 33 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 34 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 35 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x67bc869f]
 36 [-]: LOADK     R5 K9        ; R5 := "MissionComplete.Header.Lines.Right"
 37 [-]: CONST     R6 0         ; R6 := 0.000000
 38 [-]: ADD       R7 R2 K8     ; R7 := R2 + 16.000000
 39 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 40 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 7710
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R1 K0      ; if R1 ~= "UpdateMissionCompleteTitle" then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
  5 [-]: LOADK     R4 K0        ; R4 := "UpdateMissionCompleteTitle"
  6 [-]: LOADK     R5 K3        ; R5 := ""
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: JMP       24           ; PC := 24
  9 [-]: EQ        0 R1 K4      ; if R1 ~= "ShowEndOfMatch" then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 12 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
 13 [-]: LOADK     R4 K4        ; R4 := "ShowEndOfMatch"
 14 [-]: LOADK     R5 K3        ; R5 := ""
 15 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 16 [-]: JMP       24           ; PC := 24
 17 [-]: EQ        0 R1 K5      ; if R1 ~= "StopShowEndOfMatchTitle" then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
 21 [-]: LOADK     R4 K6        ; R4 := "ShowEndOfMatchTitle"
 22 [-]: LOADK     R5 K3        ; R5 := ""
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 7720
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R1 K0      ; if R1 ~= "UpdateMissionCompleteArrows" then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
  5 [-]: LOADK     R4 K0        ; R4 := "UpdateMissionCompleteArrows"
  6 [-]: LOADK     R5 K3        ; R5 := ""
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 7726
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R1 K0      ; if R1 ~= "HideArrowFill" then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
  5 [-]: LOADK     R4 K0        ; R4 := "HideArrowFill"
  6 [-]: LOADK     R5 K3        ; R5 := ""
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: JMP       16           ; PC := 16
  9 [-]: EQ        0 R1 K4      ; if R1 ~= "ShowArrowFill" then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 12 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
 13 [-]: LOADK     R4 K4        ; R4 := "ShowArrowFill"
 14 [-]: LOADK     R5 K3        ; R5 := ""
 15 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 16 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 7734
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 0         ; if not R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: LOADKB    R0 0 0       ; R0 := false
  6 [-]: SETGLOBAL R0 K0        ; mWaitingForReturnToShip := R0
  7 [-]: LOADKB    R0 1 0       ; R0 := true
  8 [-]: SETGLOBAL R0 K1        ; mShouldClose := R0
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0x56d89411]
 11 [-]: LOADKB    R1 0 0       ; R1 := false
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 7742
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 7746
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "Closing EOM - User changed"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 7751
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


