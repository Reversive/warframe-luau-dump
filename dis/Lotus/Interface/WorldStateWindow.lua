; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  152

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.LotusUtilities"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x2d0fad09
  5 [-]: LOADK     R2 K2        ; R2 := "Lotus.Interface.LotusNetworkUtilities"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x2d0fad09
  8 [-]: LOADK     R3 K3        ; R3 := "EE.Interface.Utilities"
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x2d0fad09
 11 [-]: LOADK     R4 K4        ; R4 := "Lotus.Interface.MissionRequirementUtilities"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x2d0fad09
 14 [-]: LOADK     R5 K5        ; R5 := "Lotus.Interface.UIStyleUtilities"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K0        ; R5 := 0x2d0fad09
 17 [-]: LOADK     R6 K6        ; R6 := "Lotus.Interface.UIUtilities"
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K0        ; R6 := 0x2d0fad09
 20 [-]: LOADK     R7 K7        ; R7 := "Lotus.Interface.StoreItemUtilities"
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: GETGLOBAL R7 K0        ; R7 := 0x2d0fad09
 23 [-]: LOADK     R8 K8        ; R8 := "Lotus.Interface.WorldStateUtilities"
 24 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 25 [-]: GETGLOBAL R8 K0        ; R8 := 0x2d0fad09
 26 [-]: LOADK     R9 K9        ; R9 := "Lotus.Interface.LoadoutUtilities"
 27 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 28 [-]: LOADKB    R9 0 0       ; R9 := false
 29 [-]: LOADKB    R10 0 0      ; R10 := false
 30 [-]: LOADNIL   R11 R13      ; R11 := R12 := R13 := nil
 31 [-]: LOADKB    R14 1 0      ; R14 := true
 32 [-]: LOADKB    R15 0 0      ; R15 := false
 33 [-]: LOADNIL   R16 R18      ; R16 := R17 := R18 := nil
 34 [-]: LOADKB    R19 0 0      ; R19 := false
 35 [-]: LOADNIL   R20 R21      ; R20 := R21 := nil
 36 [-]: LOADKB    R22 0 0      ; R22 := false
 37 [-]: LOADKB    R23 0 0      ; R23 := false
 38 [-]: NEWTABLE  R24 0 0      ; R24 := {}
 39 [-]: LOADNIL   R25 R25      ; R25 := nil
 40 [-]: LOADKB    R26 0 0      ; R26 := false
 41 [-]: LOADNIL   R27 R27      ; R27 := nil
 42 [-]: NEWTABLE  R28 0 11     ; R28 := {}
 43 [-]: SETTABLE  R28 K10 K11  ; R28["QUESTS"] := 1.000000
 44 [-]: SETTABLE  R28 K12 K13  ; R28["EVENTS"] := 2.000000
 45 [-]: SETTABLE  R28 K14 K15  ; R28["ALERTS"] := 3.000000
 46 [-]: SETTABLE  R28 K16 K17  ; R28["INVASIONS"] := 4.000000
 47 [-]: SETTABLE  R28 K18 K19  ; R28["SYND_MISSIONS"] := 5.000000
 48 [-]: SETTABLE  R28 K20 K21  ; R28["PVPCHALLENGES"] := 6.000000
 49 [-]: SETTABLE  R28 K22 K23  ; R28["PVPCHALLENGES_WEEKLY"] := 7.000000
 50 [-]: SETTABLE  R28 K24 K25  ; R28["SORTIES"] := 8.000000
 51 [-]: SETTABLE  R28 K26 K27  ; R28["LITE_SORTIES"] := 9.000000
 52 [-]: SETTABLE  R28 K28 K29  ; R28["VOID_TEARS"] := 10.000000
 53 [-]: SETTABLE  R28 K30 K31  ; R28["HARD_ALERTS"] := 11.000000
 54 [-]: NEWTABLE  R29 0 9      ; R29 := {}
 55 [-]: SETTABLE  R29 K32 K11  ; R29["QUEST"] := 1.000000
 56 [-]: SETTABLE  R29 K33 K13  ; R29["ALERT"] := 2.000000
 57 [-]: SETTABLE  R29 K34 K15  ; R29["SYND_MISSION"] := 3.000000
 58 [-]: SETTABLE  R29 K35 K17  ; R29["EVENT"] := 4.000000
 59 [-]: SETTABLE  R29 K36 K19  ; R29["INVASION"] := 5.000000
 60 [-]: SETTABLE  R29 K20 K21  ; R29["PVPCHALLENGES"] := 6.000000
 61 [-]: SETTABLE  R29 K37 K23  ; R29["SORTIE"] := 7.000000
 62 [-]: SETTABLE  R29 K38 K25  ; R29["LITE_SORTIE"] := 8.000000
 63 [-]: SETTABLE  R29 K39 K27  ; R29["VOID_TEAR_MISSION"] := 9.000000
 64 [-]: LOADNIL   R30 R32      ; R30 := R31 := R32 := nil
 65 [-]: CONST     R33 0        ; R33 := 0.000000
 66 [-]: LOADKB    R34 0 0      ; R34 := false
 67 [-]: LOADNIL   R35 R35      ; R35 := nil
 68 [-]: NEWTABLE  R36 3 0      ; R36 := {}
 69 [-]: LOADK     R37 K40      ; R37 := "/Lotus/Language/Menu/GrineerInvasionGeneric"
 70 [-]: LOADK     R38 K41      ; R38 := "/Lotus/Language/Menu/CorpusInvasionGeneric"
 71 [-]: LOADK     R39 K42      ; R39 := "/Lotus/Language/Menu/InfestedInvasionGeneric"
 72 [-]: SETLIST   R36 3 1      ; R36[(1-1)*FPF+i] := R(36+i), 1 <= i <= 3
 73 [-]: NEWTABLE  R37 4 0      ; R37 := {}
 74 [-]: LOADK     R38 K43      ; R38 := "/Lotus/Language/Game/Faction_GrineerUC"
 75 [-]: LOADK     R39 K44      ; R39 := "/Lotus/Language/Game/Faction_CorpusUC"
 76 [-]: LOADK     R40 K45      ; R40 := "/Lotus/Language/Game/Faction_InfestationUC"
 77 [-]: LOADK     R41 K46      ; R41 := "/Lotus/Language/Game/Faction_OrokinUC"
 78 [-]: SETLIST   R37 4 1      ; R37[(1-1)*FPF+i] := R(37+i), 1 <= i <= 4
 79 [-]: NEWTABLE  R38 3 0      ; R38 := {}
 80 [-]: LOADK     R39 K47      ; R39 := 12397107.000000
 81 [-]: LOADK     R40 K48      ; R40 := 2838886.000000
 82 [-]: LOADK     R41 K49      ; R41 := 4227414.000000
 83 [-]: SETLIST   R38 3 1      ; R38[(1-1)*FPF+i] := R(38+i), 1 <= i <= 3
 84 [-]: CONST     R39 163      ; R39 := 163.000000
 85 [-]: NEWTABLE  R40 3 0      ; R40 := {}
 86 [-]: LOADK     R41 K50      ; R41 := 0.600000
 87 [-]: LOADK     R42 K51      ; R42 := 0.200000
 88 [-]: LOADK     R43 K51      ; R43 := 0.200000
 89 [-]: SETLIST   R40 3 1      ; R40[(1-1)*FPF+i] := R(40+i), 1 <= i <= 3
 90 [-]: NEWTABLE  R41 4 0      ; R41 := {}
 91 [-]: LOADK     R42 K52      ; R42 := 0.190000
 92 [-]: LOADK     R43 K53      ; R43 := 0.050000
 93 [-]: LOADK     R44 K54      ; R44 := 0.005000
 94 [-]: CONST     R45 0        ; R45 := 0.000000
 95 [-]: SETLIST   R41 4 1      ; R41[(1-1)*FPF+i] := R(41+i), 1 <= i <= 4
 96 [-]: GETGLOBAL R42 K55      ; R42 := 0x7ed0a956
 97 [-]: LOADK     R43 K56      ; R43 := "/Lotus/Types/Items/MiscItems/FocusLensGreater"
 98 [-]: CALL      R42 2 2      ; R42 := R42(R43)
 99 [-]: LOADKB    R43 0 0      ; R43 := false
100 [-]: LOADNIL   R44 R44      ; R44 := nil
101 [-]: NEWTABLE  R45 0 3      ; R45 := {}
102 [-]: NEWTABLE  R46 0 0      ; R46 := {}
103 [-]: SETTABLE  R45 K57 R46  ; R45["RewardTable"] := R46
104 [-]: SETTABLE  R45 K58 K59  ; R45["NumMissions"] := 0.000000
105 [-]: SETTABLE  R45 K60 K59  ; R45["NumCompleted"] := 0.000000
106 [-]: NEWTABLE  R46 0 3      ; R46 := {}
107 [-]: NEWTABLE  R47 0 0      ; R47 := {}
108 [-]: SETTABLE  R46 K57 R47  ; R46["RewardTable"] := R47
109 [-]: SETTABLE  R46 K58 K59  ; R46["NumMissions"] := 0.000000
110 [-]: SETTABLE  R46 K60 K59  ; R46["NumCompleted"] := 0.000000
111 [-]: CONST     R47 0        ; R47 := 0.000000
112 [-]: CONST     R48 0        ; R48 := 0.000000
113 [-]: CONST     R49 0        ; R49 := 0.000000
114 [-]: LOADNIL   R50 R50      ; R50 := nil
115 [-]: NEWTABLE  R51 6 0      ; R51 := {}
116 [-]: LOADK     R52 K61      ; R52 := ".Btn"
117 [-]: LOADK     R53 K62      ; R53 := ".Image"
118 [-]: LOADK     R54 K63      ; R54 := ".BlueprintBg"
119 [-]: LOADK     R55 K64      ; R55 := ".FactionIcon"
120 [-]: LOADK     R56 K65      ; R56 := ".Text.SuitBuffIcon.Icon"
121 [-]: LOADK     R57 K66      ; R57 := ".Text.WeaponBuffIcon.Icon"
122 [-]: SETLIST   R51 6 1      ; R51[(1-1)*FPF+i] := R(51+i), 1 <= i <= 6
123 [-]: NEWTABLE  R52 5 0      ; R52 := {}
124 [-]: LOADK     R53 K61      ; R53 := ".Btn"
125 [-]: LOADK     R54 K67      ; R54 := ".AttackerIcon"
126 [-]: LOADK     R55 K68      ; R55 := ".DefenderBar"
127 [-]: LOADK     R56 K69      ; R56 := ".DefenderIcon"
128 [-]: LOADK     R57 K70      ; R57 := ".AttackerBar"
129 [-]: SETLIST   R52 5 1      ; R52[(1-1)*FPF+i] := R(52+i), 1 <= i <= 5
130 [-]: NEWTABLE  R53 5 0      ; R53 := {}
131 [-]: LOADK     R54 K61      ; R54 := ".Btn"
132 [-]: LOADK     R55 K71      ; R55 := ".Expiry.Separator"
133 [-]: LOADK     R56 K72      ; R56 := ".Event.Icon"
134 [-]: LOADK     R57 K64      ; R57 := ".FactionIcon"
135 [-]: LOADK     R58 K73      ; R58 := ".EventHeader.Banner"
136 [-]: SETLIST   R53 5 1      ; R53[(1-1)*FPF+i] := R(53+i), 1 <= i <= 5
137 [-]: NEWTABLE  R54 3 0      ; R54 := {}
138 [-]: LOADK     R55 K74      ; R55 := ".Progress"
139 [-]: LOADK     R56 K62      ; R56 := ".Image"
140 [-]: LOADK     R57 K63      ; R57 := ".BlueprintBg"
141 [-]: SETLIST   R54 3 1      ; R54[(1-1)*FPF+i] := R(54+i), 1 <= i <= 3
142 [-]: NEWTABLE  R55 3 0      ; R55 := {}
143 [-]: LOADK     R56 K75      ; R56 := ".Banner"
144 [-]: LOADK     R57 K76      ; R57 := ".CollectBtn"
145 [-]: LOADK     R58 K77      ; R58 := ".DepositBtn"
146 [-]: SETLIST   R55 3 1      ; R55[(1-1)*FPF+i] := R(55+i), 1 <= i <= 3
147 [-]: NEWTABLE  R56 7 0      ; R56 := {}
148 [-]: LOADK     R57 K61      ; R57 := ".Btn"
149 [-]: LOADK     R58 K62      ; R58 := ".Image"
150 [-]: LOADK     R59 K78      ; R59 := ".MediumLogo"
151 [-]: LOADK     R60 K79      ; R60 := ".Bg"
152 [-]: LOADK     R61 K80      ; R61 := ".LogoHighlight"
153 [-]: LOADK     R62 K81      ; R62 := ".Separator"
154 [-]: LOADK     R63 K64      ; R63 := ".FactionIcon"
155 [-]: SETLIST   R56 7 1      ; R56[(1-1)*FPF+i] := R(56+i), 1 <= i <= 7
156 [-]: NEWTABLE  R57 3 0      ; R57 := {}
157 [-]: LOADK     R58 K61      ; R58 := ".Btn"
158 [-]: LOADK     R59 K62      ; R59 := ".Image"
159 [-]: LOADK     R60 K82      ; R60 := ".ActiveIcon"
160 [-]: SETLIST   R57 3 1      ; R57[(1-1)*FPF+i] := R(57+i), 1 <= i <= 3
161 [-]: NEWTABLE  R58 10 0     ; R58 := {}
162 [-]: LOADK     R59 K61      ; R59 := ".Btn"
163 [-]: LOADK     R60 K79      ; R60 := ".Bg"
164 [-]: LOADK     R61 K83      ; R61 := ".StepCompleted"
165 [-]: LOADK     R62 K84      ; R62 := ".StepLine.Fill"
166 [-]: LOADK     R63 K85      ; R63 := ".StepLine.TopCap"
167 [-]: LOADK     R64 K86      ; R64 := ".StepLine.BottomCap"
168 [-]: LOADK     R65 K87      ; R65 := ".ModifiersInfo.Banner"
169 [-]: LOADK     R66 K88      ; R66 := ".ModifiersInfo.SuitBuffIcon.Icon"
170 [-]: LOADK     R67 K89      ; R67 := ".ModifiersInfo.WeaponBuffIcon.Icon"
171 [-]: LOADK     R68 K90      ; R68 := ".ModifiersInfo.CrystalIcon.Icon"
172 [-]: SETLIST   R58 10 1     ; R58[(1-1)*FPF+i] := R(58+i), 1 <= i <= 10
173 [-]: GETGLOBAL R59 K91      ; R59 := 0x0469f296
174 [-]: LOADK     R60 K92      ; R60 := "ProjectSinisterB"
175 [-]: CALL      R59 2 2      ; R59 := R59(R60)
176 [-]: GETGLOBAL R60 K91      ; R60 := 0x0469f296
177 [-]: LOADK     R61 K93      ; R61 := "GhoulEmergence"
178 [-]: CALL      R60 2 2      ; R60 := R60(R61)
179 [-]: GETGLOBAL R61 K91      ; R61 := 0x0469f296
180 [-]: LOADK     R62 K94      ; R62 := "HeatFissure"
181 [-]: CALL      R61 2 2      ; R61 := R61(R62)
182 [-]: GETGLOBAL R62 K91      ; R62 := 0x0469f296
183 [-]: LOADK     R63 K95      ; R63 := "Dojo"
184 [-]: CALL      R62 2 2      ; R62 := R62(R63)
185 [-]: GETGLOBAL R63 K96      ; R63 := 0xb009bbc6
186 [-]: LOADK     R64 K97      ; R64 := "/Lotus/Types/Lore/PrimaryCodexManifest"
187 [-]: CALL      R63 2 2      ; R63 := R63(R64)
188 [-]: LOADKB    R64 0 0      ; R64 := false
189 [-]: LOADKB    R65 0 0      ; R65 := false
190 [-]: LOADKB    R66 0 0      ; R66 := false
191 [-]: LOADNIL   R67 R69      ; R67 := R68 := R69 := nil
192 [-]: NEWTABLE  R70 6 0      ; R70 := {}
193 [-]: GETGLOBAL R71 K91      ; R71 := 0x0469f296
194 [-]: LOADK     R72 K98      ; R72 := "EarthHUB"
195 [-]: CALL      R71 2 2      ; R71 := R71(R72)
196 [-]: GETGLOBAL R72 K91      ; R72 := 0x0469f296
197 [-]: LOADK     R73 K99      ; R73 := "MercuryHUB"
198 [-]: CALL      R72 2 2      ; R72 := R72(R73)
199 [-]: GETGLOBAL R73 K91      ; R73 := 0x0469f296
200 [-]: LOADK     R74 K100     ; R74 := "VenusHUB"
201 [-]: CALL      R73 2 2      ; R73 := R73(R74)
202 [-]: GETGLOBAL R74 K91      ; R74 := 0x0469f296
203 [-]: LOADK     R75 K101     ; R75 := "SaturnHUB"
204 [-]: CALL      R74 2 2      ; R74 := R74(R75)
205 [-]: GETGLOBAL R75 K91      ; R75 := 0x0469f296
206 [-]: LOADK     R76 K102     ; R76 := "EuropaHUB"
207 [-]: CALL      R75 2 2      ; R75 := R75(R76)
208 [-]: GETGLOBAL R76 K91      ; R76 := 0x0469f296
209 [-]: LOADK     R77 K103     ; R77 := "ErisHUB"
210 [-]: CALL      R76 2 2      ; R76 := R76(R77)
211 [-]: GETGLOBAL R77 K91      ; R77 := 0x0469f296
212 [-]: LOADK     R78 K104     ; R78 := "PlutoHUB"
213 [-]: CALL      R77 2 0      ; R77,... := R77(R78)
214 [-]: SETLIST   R70 0 1      ; R70[(1-1)*FPF+i] := R(70+i), 1 <= i <= 0
215 [-]: NEWTABLE  R71 0 0      ; R71 := {}
216 [-]: LOADKB    R72 0 0      ; R72 := false
217 [-]: NEWTABLE  R73 0 4      ; R73 := {}
218 [-]: SETTABLE  R73 K105 K106; R73["PvpNode14"] := "DM"
219 [-]: SETTABLE  R73 K107 K108; R73["PvpNode13"] := "TDM"
220 [-]: SETTABLE  R73 K109 K110; R73["PvpNode12"] := "CTF"
221 [-]: SETTABLE  R73 K111 K112; R73["PvpNode16"] := "VT"
222 [-]: NEWTABLE  R74 0 12     ; R74 := {}
223 [-]: NEWTABLE  R75 0 5      ; R75 := {}
224 [-]: GETGLOBAL R76 K91      ; R76 := 0x0469f296
225 [-]: LOADK     R77 K115     ; R77 := "CetusHub4"
226 [-]: CALL      R76 2 2      ; R76 := R76(R77)
227 [-]: SETTABLE  R75 K114 R76 ; R75["NodeOverride"] := R76
228 [-]: SETTABLE  R75 K116 K11 ; R75["ImageIndex"] := 1.000000
229 [-]: SETTABLE  R75 K117 K11 ; R75["BannerIndex"] := 1.000000
230 [-]: SETTABLE  R75 K118 K119; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventInfestedPlainsBannerDesc"
231 [-]: SETTABLE  R75 K120 K121; R75["Hint"] := "/Lotus/Language/WorldStateWindow/EventInfestedPlainsHint"
232 [-]: SETTABLE  R74 K113 R75 ; R74["InfestedPlains"] := R75
233 [-]: NEWTABLE  R75 0 4      ; R75 := {}
234 [-]: SETTABLE  R75 K123 K124; R75["HideFaction"] := true
235 [-]: SETTABLE  R75 K117 K13 ; R75["BannerIndex"] := 2.000000
236 [-]: SETTABLE  R75 K118 K125; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventValentinesBannerDesc"
237 [-]: SETTABLE  R75 K120 K126; R75["Hint"] := "/Lotus/Language/WorldStateWindow/EventValentinesHint"
238 [-]: SETTABLE  R74 K122 R75 ; R74["FortunaValentines"] := R75
239 [-]: NEWTABLE  R75 0 5      ; R75 := {}
240 [-]: SETTABLE  R75 K127 K59 ; R75["FactionOverride"] := 0.000000
241 [-]: SETTABLE  R75 K129 K124; R75["ShowProgress"] := true
242 [-]: SETTABLE  R75 K116 K13 ; R75["ImageIndex"] := 2.000000
243 [-]: SETTABLE  R75 K117 K15 ; R75["BannerIndex"] := 3.000000
244 [-]: SETTABLE  R75 K118 K130; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventGhoulBannerDesc"
245 [-]: SETTABLE  R74 K93 R75  ; R74["GhoulEmergence"] := R75
246 [-]: NEWTABLE  R75 0 5      ; R75 := {}
247 [-]: SETTABLE  R75 K127 K11 ; R75["FactionOverride"] := 1.000000
248 [-]: SETTABLE  R75 K129 K124; R75["ShowProgress"] := true
249 [-]: SETTABLE  R75 K116 K15 ; R75["ImageIndex"] := 3.000000
250 [-]: SETTABLE  R75 K117 K17 ; R75["BannerIndex"] := 4.000000
251 [-]: SETTABLE  R75 K118 K131; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventHeatFissuresDesc"
252 [-]: SETTABLE  R74 K94 R75  ; R74["HeatFissure"] := R75
253 [-]: NEWTABLE  R75 0 4      ; R75 := {}
254 [-]: SETTABLE  R75 K129 K124; R75["ShowProgress"] := true
255 [-]: SETTABLE  R75 K117 K19 ; R75["BannerIndex"] := 5.000000
256 [-]: SETTABLE  R75 K118 K133; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventFomorianDesc"
257 [-]: SETTABLE  R75 K120 K134; R75["Hint"] := "/Lotus/Language/WorldStateWindow/EventFomorianHint"
258 [-]: SETTABLE  R74 K132 R75 ; R74["GrineerFomorian"] := R75
259 [-]: NEWTABLE  R75 0 4      ; R75 := {}
260 [-]: SETTABLE  R75 K129 K124; R75["ShowProgress"] := true
261 [-]: SETTABLE  R75 K117 K21 ; R75["BannerIndex"] := 6.000000
262 [-]: SETTABLE  R75 K118 K136; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventRazorbackDesc"
263 [-]: SETTABLE  R75 K120 K137; R75["Hint"] := "/Lotus/Language/WorldStateWindow/EventRazorbackHint"
264 [-]: SETTABLE  R74 K135 R75 ; R74["FriendlyFireTacAlert"] := R75
265 [-]: NEWTABLE  R75 0 1      ; R75 := {}
266 [-]: SETTABLE  R75 K117 K23 ; R75["BannerIndex"] := 7.000000
267 [-]: SETTABLE  R74 K138 R75 ; R74["Anniversary"] := R75
268 [-]: NEWTABLE  R75 0 3      ; R75 := {}
269 [-]: SETTABLE  R75 K129 K124; R75["ShowProgress"] := true
270 [-]: SETTABLE  R75 K117 K25 ; R75["BannerIndex"] := 8.000000
271 [-]: SETTABLE  R75 K118 K140; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventWaterFightDesc"
272 [-]: SETTABLE  R74 K139 R75 ; R74["WaterFight"] := R75
273 [-]: NEWTABLE  R75 0 3      ; R75 := {}
274 [-]: SETTABLE  R75 K123 K124; R75["HideFaction"] := true
275 [-]: SETTABLE  R75 K117 K27 ; R75["BannerIndex"] := 9.000000
276 [-]: SETTABLE  R75 K118 K142; R75["BannerDesc"] := "/Lotus/Language/Locations/RelayStationTennoConDesc"
277 [-]: SETTABLE  R74 K141 R75 ; R74["TennoConRelay"] := R75
278 [-]: NEWTABLE  R75 0 3      ; R75 := {}
279 [-]: SETTABLE  R75 K123 K124; R75["HideFaction"] := true
280 [-]: SETTABLE  R75 K117 K29 ; R75["BannerIndex"] := 10.000000
281 [-]: SETTABLE  R75 K118 K144; R75["BannerDesc"] := "/Lotus/Language/Locations/RelayStationTennoConDescB"
282 [-]: SETTABLE  R74 K143 R75 ; R74["TennoConRelayB"] := R75
283 [-]: NEWTABLE  R75 0 5      ; R75 := {}
284 [-]: SETTABLE  R75 K123 K124; R75["HideFaction"] := true
285 [-]: SETTABLE  R75 K117 K31 ; R75["BannerIndex"] := 11.000000
286 [-]: SETTABLE  R75 K118 K146; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventDeimosHalloweenDesc"
287 [-]: SETTABLE  R75 K120 K147; R75["Hint"] := "/Lotus/Language/WorldStateWindow/EventDeimosHalloweenHint"
288 [-]: GETGLOBAL R76 K96      ; R76 := 0xb009bbc6
289 [-]: LOADK     R77 K149     ; R77 := "/Lotus/Interface/Graphics/WorldStatePanel/DeimosHalloweenEventBackerChina.png"
290 [-]: CALL      R76 2 2      ; R76 := R76(R77)
291 [-]: SETTABLE  R75 K148 R76 ; R75["ChinaBanner"] := R76
292 [-]: SETTABLE  R74 K145 R75 ; R74["DeimosHalloween"] := R75
293 [-]: NEWTABLE  R75 0 4      ; R75 := {}
294 [-]: SETTABLE  R75 K123 K124; R75["HideFaction"] := true
295 [-]: SETTABLE  R75 K117 K151; R75["BannerIndex"] := 12.000000
296 [-]: SETTABLE  R75 K118 K152; R75["BannerDesc"] := "/Lotus/Language/WorldStateWindow/EventMPVDesc"
297 [-]: SETTABLE  R75 K120 K153; R75["Hint"] := "/Lotus/Language/WorldStateWindow/EventMPVHint"
298 [-]: SETTABLE  R74 K150 R75 ; R74["PrimeVaultTrader"] := R75
299 [-]: LOADNIL   R75 R75      ; R75 := nil
300 [-]: NEWTABLE  R76 5 0      ; R76 := {}
301 [-]: NEWTABLE  R77 0 2      ; R77 := {}
302 [-]: GETGLOBAL R78 K55      ; R78 := 0x7ed0a956
303 [-]: LOADK     R79 K155     ; R79 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
304 [-]: CALL      R78 2 2      ; R78 := R78(R79)
305 [-]: SETTABLE  R77 K154 R78 ; R77["keyChain"] := R78
306 [-]: NEWTABLE  R78 2 0      ; R78 := {}
307 [-]: LOADK     R79 K157     ; R79 := "EarthToVenusJunction"
308 [-]: LOADK     R80 K158     ; R80 := "VenusToMercuryJunction"
309 [-]: SETLIST   R78 2 1      ; R78[(1-1)*FPF+i] := R(78+i), 1 <= i <= 2
310 [-]: SETTABLE  R77 K156 R78 ; R77["prereqJunctions"] := R78
311 [-]: NEWTABLE  R78 0 2      ; R78 := {}
312 [-]: GETGLOBAL R79 K55      ; R79 := 0x7ed0a956
313 [-]: LOADK     R80 K159     ; R80 := "/Lotus/Types/Keys/ArchwingQuest/ArchwingQuestKeyChain"
314 [-]: CALL      R79 2 2      ; R79 := R79(R80)
315 [-]: SETTABLE  R78 K154 R79 ; R78["keyChain"] := R79
316 [-]: NEWTABLE  R79 1 0      ; R79 := {}
317 [-]: LOADK     R80 K160     ; R80 := "EarthToMarsJunction"
318 [-]: SETLIST   R79 1 1      ; R79[(1-1)*FPF+i] := R(79+i), 1 <= i <= 1
319 [-]: SETTABLE  R78 K156 R79 ; R78["prereqJunctions"] := R79
320 [-]: NEWTABLE  R79 0 5      ; R79 := {}
321 [-]: GETGLOBAL R80 K55      ; R80 := 0x7ed0a956
322 [-]: LOADK     R81 K161     ; R81 := "/Lotus/Types/Keys/SentientQuest/SentientQuestKeyChain"
323 [-]: CALL      R80 2 2      ; R80 := R80(R81)
324 [-]: SETTABLE  R79 K154 R80 ; R79["keyChain"] := R80
325 [-]: NEWTABLE  R80 5 0      ; R80 := {}
326 [-]: LOADK     R81 K162     ; R81 := "MarsToPhobosJunction"
327 [-]: LOADK     R82 K163     ; R82 := "MarsToCeresJunction"
328 [-]: LOADK     R83 K164     ; R83 := "CeresToJupiterJunction"
329 [-]: LOADK     R84 K165     ; R84 := "JupiterToSaturnJunction"
330 [-]: LOADK     R85 K166     ; R85 := "SaturnToUranusJunction"
331 [-]: SETLIST   R80 5 1      ; R80[(1-1)*FPF+i] := R(80+i), 1 <= i <= 5
332 [-]: SETTABLE  R79 K156 R80 ; R79["prereqJunctions"] := R80
333 [-]: NEWTABLE  R80 1 0      ; R80 := {}
334 [-]: LOADK     R81 K168     ; R81 := "/Lotus/Language/Locations/Uranus"
335 [-]: SETLIST   R80 1 1      ; R80[(1-1)*FPF+i] := R(80+i), 1 <= i <= 1
336 [-]: SETTABLE  R79 K167 R80 ; R79["postJunctionTitles"] := R80
337 [-]: NEWTABLE  R80 1 0      ; R80 := {}
338 [-]: LOADK     R81 K170     ; R81 := "/Lotus/Language/G1Quests/SentientQuestHelpText"
339 [-]: SETLIST   R80 1 1      ; R80[(1-1)*FPF+i] := R(80+i), 1 <= i <= 1
340 [-]: SETTABLE  R79 K169 R80 ; R79["postJunctionDescriptions"] := R80
341 [-]: NEWTABLE  R80 1 0      ; R80 := {}
342 [-]: GETGLOBAL R81 K172     ; R81 := 0x0032441c
343 [-]: GETTABLE  R81 R81 K173 ; R81 := R81["UITextures_GrineerOcean"]
344 [-]: GETTABLE  R81 R81 K11  ; R81 := R81[1.000000]
345 [-]: SETLIST   R80 1 1      ; R80[(1-1)*FPF+i] := R(80+i), 1 <= i <= 1
346 [-]: SETTABLE  R79 K171 R80 ; R79["postJunctionTextures"] := R80
347 [-]: NEWTABLE  R80 0 2      ; R80 := {}
348 [-]: GETGLOBAL R81 K55      ; R81 := 0x7ed0a956
349 [-]: LOADK     R82 K174     ; R82 := "/Lotus/Types/Keys/OrokinMoonQuest/OrokinMoonQuestKeyChain"
350 [-]: CALL      R81 2 2      ; R81 := R81(R82)
351 [-]: SETTABLE  R80 K154 R81 ; R80["keyChain"] := R81
352 [-]: NEWTABLE  R81 1 0      ; R81 := {}
353 [-]: LOADK     R82 K175     ; R82 := "UranusToNeptuneJunction"
354 [-]: SETLIST   R81 1 1      ; R81[(1-1)*FPF+i] := R(81+i), 1 <= i <= 1
355 [-]: SETTABLE  R80 K156 R81 ; R80["prereqJunctions"] := R81
356 [-]: NEWTABLE  R81 0 2      ; R81 := {}
357 [-]: GETGLOBAL R82 K55      ; R82 := 0x7ed0a956
358 [-]: LOADK     R83 K176     ; R83 := "/Lotus/Types/Keys/WarWithinQuest/WarWithinQuestKeyChain"
359 [-]: CALL      R82 2 2      ; R82 := R82(R83)
360 [-]: SETTABLE  R81 K154 R82 ; R81["keyChain"] := R82
361 [-]: NEWTABLE  R82 3 0      ; R82 := {}
362 [-]: LOADK     R83 K175     ; R83 := "UranusToNeptuneJunction"
363 [-]: LOADK     R84 K177     ; R84 := "NeptuneToPlutoJunction"
364 [-]: LOADK     R85 K178     ; R85 := "PlutoToSednaJunction"
365 [-]: SETLIST   R82 3 1      ; R82[(1-1)*FPF+i] := R(82+i), 1 <= i <= 3
366 [-]: SETTABLE  R81 K156 R82 ; R81["prereqJunctions"] := R82
367 [-]: SETLIST   R76 5 1      ; R76[(1-1)*FPF+i] := R(76+i), 1 <= i <= 5
368 [-]: GETGLOBAL R77 K55      ; R77 := 0x7ed0a956
369 [-]: LOADK     R78 K179     ; R78 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
370 [-]: CALL      R77 2 2      ; R77 := R77(R78)
371 [-]: GETGLOBAL R78 K55      ; R78 := 0x7ed0a956
372 [-]: LOADK     R79 K180     ; R79 := "/Lotus/Types/Keys/RailJackBuildQuest/RailjackBuildQuestKeyChain"
373 [-]: CALL      R78 2 2      ; R78 := R78(R79)
374 [-]: GETGLOBAL R79 K55      ; R79 := 0x7ed0a956
375 [-]: LOADK     R80 K181     ; R80 := "/Lotus/Types/Keys/ZarimanQuest/ZarimanQuestKeyChain"
376 [-]: CALL      R79 2 2      ; R79 := R79(R80)
377 [-]: GETGLOBAL R80 K55      ; R80 := 0x7ed0a956
378 [-]: LOADK     R81 K182     ; R81 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
379 [-]: CALL      R80 2 2      ; R80 := R80(R81)
380 [-]: GETGLOBAL R81 K55      ; R81 := 0x7ed0a956
381 [-]: LOADK     R82 K183     ; R82 := "/Lotus/Types/Game/RawRandomizedArtifactUpgrade"
382 [-]: CALL      R81 2 2      ; R81 := R81(R82)
383 [-]: GETGLOBAL R82 K55      ; R82 := 0x7ed0a956
384 [-]: LOADK     R83 K184     ; R83 := "/Lotus/Weapons/Sentients/OperatorAmplifiers/SentTrainingAmplifier/OperatorTrainingAmpWeapon"
385 [-]: CALL      R82 2 2      ; R82 := R82(R83)
386 [-]: GETGLOBAL R83 K55      ; R83 := 0x7ed0a956
387 [-]: LOADK     R84 K185     ; R84 := "/Lotus/Levels/Proc/Hub/RelayStationHubMain"
388 [-]: CALL      R83 2 2      ; R83 := R83(R84)
389 [-]: NEWTABLE  R84 1 0      ; R84 := {}
390 [-]: GETGLOBAL R85 K91      ; R85 := 0x0469f296
391 [-]: LOADK     R86 K186     ; R86 := "SolNode801"
392 [-]: CALL      R85 2 2      ; R85 := R85(R86)
393 [-]: GETGLOBAL R86 K91      ; R86 := 0x0469f296
394 [-]: LOADK     R87 K187     ; R87 := "SolNode802"
395 [-]: CALL      R86 2 0      ; R86,... := R86(R87)
396 [-]: SETLIST   R84 0 1      ; R84[(1-1)*FPF+i] := R(84+i), 1 <= i <= 0
397 [-]: GETGLOBAL R85 K91      ; R85 := 0x0469f296
398 [-]: LOADK     R86 K188     ; R86 := "VoidTrader"
399 [-]: CALL      R85 2 2      ; R85 := R85(R86)
400 [-]: NEWTABLE  R86 0 0      ; R86 := {}
401 [-]: LOADNIL   R87 R92      ; R87 := R88 := R89 := R90 := R91 := R92 := nil
402 [-]: CLOSURE   R93 0        ; R93 := closure(Function #1)
403 [-]: CLOSURE   R94 1        ; R94 := closure(Function #2)
404 [-]: MOVE      R0 R93       ; R0 := R93
405 [-]: CLOSURE   R95 2        ; R95 := closure(Function #3)
406 [-]: CLOSURE   R96 3        ; R96 := closure(Function #4)
407 [-]: MOVE      R0 R94       ; R0 := R94
408 [-]: MOVE      R0 R93       ; R0 := R93
409 [-]: MOVE      R0 R28       ; R0 := R28
410 [-]: MOVE      R0 R95       ; R0 := R95
411 [-]: MOVE      R0 R17       ; R0 := R17
412 [-]: MOVE      R0 R29       ; R0 := R29
413 [-]: CLOSURE   R97 4        ; R97 := closure(Function #5)
414 [-]: MOVE      R0 R94       ; R0 := R94
415 [-]: MOVE      R0 R93       ; R0 := R93
416 [-]: MOVE      R0 R28       ; R0 := R28
417 [-]: MOVE      R0 R95       ; R0 := R95
418 [-]: CLOSURE   R98 5        ; R98 := closure(Function #6)
419 [-]: MOVE      R0 R28       ; R0 := R28
420 [-]: CLOSURE   R99 6        ; R99 := closure(Function #7)
421 [-]: MOVE      R0 R0        ; R0 := R0
422 [-]: CLOSURE   R100 7       ; R100 := closure(Function #8)
423 [-]: MOVE      R0 R0        ; R0 := R0
424 [-]: MOVE      R0 R11       ; R0 := R11
425 [-]: CLOSURE   R101 8       ; R101 := closure(Function #9)
426 [-]: MOVE      R0 R93       ; R0 := R93
427 [-]: MOVE      R0 R0        ; R0 := R0
428 [-]: CLOSURE   R102 9       ; R102 := closure(Function #10)
429 [-]: MOVE      R0 R16       ; R0 := R16
430 [-]: MOVE      R0 R50       ; R0 := R50
431 [-]: CLOSURE   R103 10      ; R103 := closure(Function #11)
432 [-]: MOVE      R0 R15       ; R0 := R15
433 [-]: SETGLOBAL R103 K189    ; OnZoomStateChanged := R103
434 [-]: CLOSURE   R103 11      ; R103 := closure(Function #12)
435 [-]: MOVE      R0 R50       ; R0 := R50
436 [-]: MOVE      R0 R10       ; R0 := R10
437 [-]: MOVE      R0 R49       ; R0 := R49
438 [-]: MOVE      R0 R2        ; R0 := R2
439 [-]: MOVE      R0 R16       ; R0 := R16
440 [-]: MOVE      R0 R13       ; R0 := R13
441 [-]: MOVE      R0 R33       ; R0 := R33
442 [-]: MOVE      R0 R17       ; R0 := R17
443 [-]: CLOSURE   R104 12      ; R104 := closure(Function #13)
444 [-]: MOVE      R0 R16       ; R0 := R16
445 [-]: CLOSURE   R105 13      ; R105 := closure(Function #14)
446 [-]: MOVE      R0 R26       ; R0 := R26
447 [-]: CLOSURE   R106 14      ; R106 := closure(Function #15)
448 [-]: MOVE      R0 R44       ; R0 := R44
449 [-]: MOVE      R0 R0        ; R0 := R0
450 [-]: CLOSURE   R107 15      ; R107 := closure(Function #16)
451 [-]: MOVE      R0 R26       ; R0 := R26
452 [-]: MOVE      R0 R105      ; R0 := R105
453 [-]: MOVE      R0 R104      ; R0 := R104
454 [-]: MOVE      R0 R106      ; R0 := R106
455 [-]: SETGLOBAL R107 K190    ; CancelPressed := R107
456 [-]: CLOSURE   R107 16      ; R107 := closure(Function #17)
457 [-]: MOVE      R0 R17       ; R0 := R17
458 [-]: MOVE      R0 R2        ; R0 := R2
459 [-]: MOVE      R0 R49       ; R0 := R49
460 [-]: MOVE      R0 R9        ; R0 := R9
461 [-]: MOVE      R0 R50       ; R0 := R50
462 [-]: MOVE      R0 R103      ; R0 := R103
463 [-]: CLOSURE   R108 17      ; R108 := closure(Function #18)
464 [-]: MOVE      R0 R2        ; R0 := R2
465 [-]: CLOSURE   R109 18      ; R109 := closure(Function #19)
466 [-]: MOVE      R0 R16       ; R0 := R16
467 [-]: MOVE      R0 R17       ; R0 := R17
468 [-]: MOVE      R0 R108      ; R0 := R108
469 [-]: MOVE      R0 R18       ; R0 := R18
470 [-]: MOVE      R0 R2        ; R0 := R2
471 [-]: CLOSURE   R110 19      ; R110 := closure(Function #20)
472 [-]: MOVE      R0 R93       ; R0 := R93
473 [-]: MOVE      R0 R2        ; R0 := R2
474 [-]: MOVE      R0 R40       ; R0 := R40
475 [-]: MOVE      R0 R42       ; R0 := R42
476 [-]: MOVE      R0 R41       ; R0 := R41
477 [-]: CLOSURE   R111 20      ; R111 := closure(Function #21)
478 [-]: MOVE      R0 R17       ; R0 := R17
479 [-]: MOVE      R0 R29       ; R0 := R29
480 [-]: MOVE      R0 R46       ; R0 := R46
481 [-]: MOVE      R0 R87       ; R0 := R87
482 [-]: MOVE      R0 R110      ; R0 := R110
483 [-]: CLOSURE   R112 21      ; R112 := closure(Function #22)
484 [-]: MOVE      R0 R17       ; R0 := R17
485 [-]: MOVE      R0 R2        ; R0 := R2
486 [-]: MOVE      R0 R27       ; R0 := R27
487 [-]: MOVE      R0 R28       ; R0 := R28
488 [-]: MOVE      R0 R92       ; R0 := R92
489 [-]: MOVE      R0 R12       ; R0 := R12
490 [-]: MOVE      R0 R112      ; R0 := R112
491 [-]: CLOSURE   R113 22      ; R113 := closure(Function #23)
492 [-]: MOVE      R0 R10       ; R0 := R10
493 [-]: MOVE      R0 R19       ; R0 := R19
494 [-]: MOVE      R0 R17       ; R0 := R17
495 [-]: MOVE      R0 R2        ; R0 := R2
496 [-]: MOVE      R0 R12       ; R0 := R12
497 [-]: MOVE      R0 R113      ; R0 := R113
498 [-]: MOVE      R0 R0        ; R0 := R0
499 [-]: MOVE      R0 R28       ; R0 := R28
500 [-]: MOVE      R0 R112      ; R0 := R112
501 [-]: MOVE      R0 R32       ; R0 := R32
502 [-]: MOVE      R0 R29       ; R0 := R29
503 [-]: MOVE      R0 R31       ; R0 := R31
504 [-]: MOVE      R0 R11       ; R0 := R11
505 [-]: MOVE      R0 R61       ; R0 := R61
506 [-]: MOVE      R0 R77       ; R0 := R77
507 [-]: MOVE      R0 R60       ; R0 := R60
508 [-]: MOVE      R0 R86       ; R0 := R86
509 [-]: MOVE      R0 R69       ; R0 := R69
510 [-]: MOVE      R0 R64       ; R0 := R64
511 [-]: MOVE      R0 R65       ; R0 := R65
512 [-]: MOVE      R0 R67       ; R0 := R67
513 [-]: MOVE      R0 R68       ; R0 := R68
514 [-]: MOVE      R0 R30       ; R0 := R30
515 [-]: MOVE      R0 R7        ; R0 := R7
516 [-]: MOVE      R0 R63       ; R0 := R63
517 [-]: MOVE      R0 R66       ; R0 := R66
518 [-]: MOVE      R0 R84       ; R0 := R84
519 [-]: MOVE      R0 R20       ; R0 := R20
520 [-]: MOVE      R0 R96       ; R0 := R96
521 [-]: MOVE      R0 R45       ; R0 := R45
522 [-]: MOVE      R0 R87       ; R0 := R87
523 [-]: MOVE      R0 R110      ; R0 := R110
524 [-]: MOVE      R0 R111      ; R0 := R111
525 [-]: MOVE      R0 R34       ; R0 := R34
526 [-]: MOVE      R0 R109      ; R0 := R109
527 [-]: MOVE      R0 R106      ; R0 := R106
528 [-]: CLOSURE   R114 23      ; R114 := closure(Function #24)
529 [-]: MOVE      R0 R28       ; R0 := R28
530 [-]: MOVE      R0 R2        ; R0 := R2
531 [-]: MOVE      R0 R17       ; R0 := R17
532 [-]: MOVE      R0 R72       ; R0 := R72
533 [-]: MOVE      R0 R32       ; R0 := R32
534 [-]: MOVE      R0 R0        ; R0 := R0
535 [-]: MOVE      R0 R80       ; R0 := R80
536 [-]: MOVE      R0 R71       ; R0 := R71
537 [-]: MOVE      R0 R108      ; R0 := R108
538 [-]: MOVE      R0 R18       ; R0 := R18
539 [-]: MOVE      R0 R113      ; R0 := R113
540 [-]: CLOSURE   R87 24       ; R87 := closure(Function #25)
541 [-]: MOVE      R0 R0        ; R0 := R0
542 [-]: MOVE      R0 R2        ; R0 := R2
543 [-]: MOVE      R0 R85       ; R0 := R85
544 [-]: CLOSURE   R115 25      ; R115 := closure(Function #26)
545 [-]: CLOSURE   R92 26       ; R92 := closure(Function #27)
546 [-]: MOVE      R0 R71       ; R0 := R71
547 [-]: CLOSURE   R116 27      ; R116 := closure(Function #28)
548 [-]: MOVE      R0 R71       ; R0 := R71
549 [-]: MOVE      R0 R2        ; R0 := R2
550 [-]: CLOSURE   R117 28      ; R117 := closure(Function #29)
551 [-]: MOVE      R0 R0        ; R0 := R0
552 [-]: MOVE      R0 R51       ; R0 := R51
553 [-]: MOVE      R0 R71       ; R0 := R71
554 [-]: MOVE      R0 R2        ; R0 := R2
555 [-]: MOVE      R0 R37       ; R0 := R37
556 [-]: MOVE      R0 R92       ; R0 := R92
557 [-]: MOVE      R0 R17       ; R0 := R17
558 [-]: MOVE      R0 R116      ; R0 := R116
559 [-]: MOVE      R0 R87       ; R0 := R87
560 [-]: MOVE      R0 R115      ; R0 := R115
561 [-]: CLOSURE   R118 29      ; R118 := closure(Function #30)
562 [-]: MOVE      R0 R0        ; R0 := R0
563 [-]: MOVE      R0 R56       ; R0 := R56
564 [-]: MOVE      R0 R29       ; R0 := R29
565 [-]: MOVE      R0 R71       ; R0 := R71
566 [-]: MOVE      R0 R2        ; R0 := R2
567 [-]: MOVE      R0 R35       ; R0 := R35
568 [-]: MOVE      R0 R28       ; R0 := R28
569 [-]: MOVE      R0 R87       ; R0 := R87
570 [-]: MOVE      R0 R95       ; R0 := R95
571 [-]: CLOSURE   R119 30      ; R119 := closure(Function #31)
572 [-]: MOVE      R0 R29       ; R0 := R29
573 [-]: MOVE      R0 R17       ; R0 := R17
574 [-]: MOVE      R0 R2        ; R0 := R2
575 [-]: CLOSURE   R120 31      ; R120 := closure(Function #32)
576 [-]: MOVE      R0 R119      ; R0 := R119
577 [-]: MOVE      R0 R29       ; R0 := R29
578 [-]: MOVE      R0 R2        ; R0 := R2
579 [-]: MOVE      R0 R71       ; R0 := R71
580 [-]: CLOSURE   R121 32      ; R121 := closure(Function #33)
581 [-]: MOVE      R0 R2        ; R0 := R2
582 [-]: CLOSURE   R122 33      ; R122 := closure(Function #34)
583 [-]: MOVE      R0 R71       ; R0 := R71
584 [-]: MOVE      R0 R2        ; R0 := R2
585 [-]: MOVE      R0 R46       ; R0 := R46
586 [-]: MOVE      R0 R8        ; R0 := R8
587 [-]: MOVE      R0 R92       ; R0 := R92
588 [-]: MOVE      R0 R17       ; R0 := R17
589 [-]: MOVE      R0 R116      ; R0 := R116
590 [-]: CLOSURE   R123 34      ; R123 := closure(Function #35)
591 [-]: MOVE      R0 R2        ; R0 := R2
592 [-]: MOVE      R0 R0        ; R0 := R0
593 [-]: MOVE      R0 R71       ; R0 := R71
594 [-]: CLOSURE   R124 35      ; R124 := closure(Function #36)
595 [-]: MOVE      R0 R2        ; R0 := R2
596 [-]: CLOSURE   R125 36      ; R125 := closure(Function #37)
597 [-]: MOVE      R0 R0        ; R0 := R0
598 [-]: MOVE      R0 R2        ; R0 := R2
599 [-]: MOVE      R0 R58       ; R0 := R58
600 [-]: MOVE      R0 R71       ; R0 := R71
601 [-]: MOVE      R0 R121      ; R0 := R121
602 [-]: MOVE      R0 R124      ; R0 := R124
603 [-]: MOVE      R0 R123      ; R0 := R123
604 [-]: MOVE      R0 R11       ; R0 := R11
605 [-]: MOVE      R0 R39       ; R0 := R39
606 [-]: MOVE      R0 R120      ; R0 := R120
607 [-]: CLOSURE   R126 37      ; R126 := closure(Function #38)
608 [-]: MOVE      R0 R0        ; R0 := R0
609 [-]: MOVE      R0 R2        ; R0 := R2
610 [-]: MOVE      R0 R58       ; R0 := R58
611 [-]: MOVE      R0 R71       ; R0 := R71
612 [-]: MOVE      R0 R121      ; R0 := R121
613 [-]: MOVE      R0 R122      ; R0 := R122
614 [-]: MOVE      R0 R123      ; R0 := R123
615 [-]: MOVE      R0 R11       ; R0 := R11
616 [-]: MOVE      R0 R39       ; R0 := R39
617 [-]: MOVE      R0 R120      ; R0 := R120
618 [-]: CLOSURE   R127 38      ; R127 := closure(Function #39)
619 [-]: MOVE      R0 R0        ; R0 := R0
620 [-]: MOVE      R0 R51       ; R0 := R51
621 [-]: MOVE      R0 R71       ; R0 := R71
622 [-]: MOVE      R0 R37       ; R0 := R37
623 [-]: MOVE      R0 R87       ; R0 := R87
624 [-]: MOVE      R0 R115      ; R0 := R115
625 [-]: CLOSURE   R128 39      ; R128 := closure(Function #40)
626 [-]: CLOSURE   R129 40      ; R129 := closure(Function #41)
627 [-]: MOVE      R0 R94       ; R0 := R94
628 [-]: MOVE      R0 R37       ; R0 := R37
629 [-]: MOVE      R0 R38       ; R0 := R38
630 [-]: MOVE      R0 R2        ; R0 := R2
631 [-]: MOVE      R0 R71       ; R0 := R71
632 [-]: CLOSURE   R130 41      ; R130 := closure(Function #42)
633 [-]: MOVE      R0 R71       ; R0 := R71
634 [-]: MOVE      R0 R2        ; R0 := R2
635 [-]: MOVE      R0 R129      ; R0 := R129
636 [-]: MOVE      R0 R52       ; R0 := R52
637 [-]: MOVE      R0 R36       ; R0 := R36
638 [-]: MOVE      R0 R128      ; R0 := R128
639 [-]: MOVE      R0 R37       ; R0 := R37
640 [-]: CLOSURE   R131 42      ; R131 := closure(Function #43)
641 [-]: MOVE      R0 R2        ; R0 := R2
642 [-]: MOVE      R0 R57       ; R0 := R57
643 [-]: MOVE      R0 R71       ; R0 := R71
644 [-]: MOVE      R0 R32       ; R0 := R32
645 [-]: MOVE      R0 R0        ; R0 := R0
646 [-]: MOVE      R0 R62       ; R0 := R62
647 [-]: MOVE      R0 R72       ; R0 := R72
648 [-]: CLOSURE   R132 43      ; R132 := closure(Function #44)
649 [-]: MOVE      R0 R26       ; R0 := R26
650 [-]: MOVE      R0 R105      ; R0 := R105
651 [-]: MOVE      R0 R25       ; R0 := R25
652 [-]: MOVE      R0 R10       ; R0 := R10
653 [-]: CLOSURE   R133 44      ; R133 := closure(Function #45)
654 [-]: MOVE      R0 R17       ; R0 := R17
655 [-]: MOVE      R0 R2        ; R0 := R2
656 [-]: CLOSURE   R134 45      ; R134 := closure(Function #46)
657 [-]: MOVE      R0 R133      ; R0 := R133
658 [-]: SETGLOBAL R134 K191    ; RelayBannerRollOver := R134
659 [-]: CLOSURE   R134 46      ; R134 := closure(Function #47)
660 [-]: MOVE      R0 R133      ; R0 := R133
661 [-]: SETGLOBAL R134 K192    ; RelayBannerRollOut := R134
662 [-]: CLOSURE   R134 47      ; R134 := closure(Function #48)
663 [-]: MOVE      R0 R17       ; R0 := R17
664 [-]: MOVE      R0 R132      ; R0 := R132
665 [-]: SETGLOBAL R134 K193    ; RelayBannerPreview := R134
666 [-]: CLOSURE   R134 48      ; R134 := closure(Function #49)
667 [-]: MOVE      R0 R17       ; R0 := R17
668 [-]: MOVE      R0 R75       ; R0 := R75
669 [-]: SETGLOBAL R134 K194    ; CollectEssence := R134
670 [-]: CLOSURE   R134 49      ; R134 := closure(Function #50)
671 [-]: MOVE      R0 R88       ; R0 := R88
672 [-]: MOVE      R0 R31       ; R0 := R31
673 [-]: MOVE      R0 R1        ; R0 := R1
674 [-]: MOVE      R0 R0        ; R0 := R0
675 [-]: CLOSURE   R135 50      ; R135 := closure(Function #51)
676 [-]: MOVE      R0 R134      ; R0 := R134
677 [-]: SETGLOBAL R135 K195    ; SelectRelayMissionA := R135
678 [-]: CLOSURE   R135 51      ; R135 := closure(Function #52)
679 [-]: MOVE      R0 R134      ; R0 := R134
680 [-]: SETGLOBAL R135 K196    ; SelectRelayMissionB := R135
681 [-]: CLOSURE   R135 52      ; R135 := closure(Function #53)
682 [-]: MOVE      R0 R17       ; R0 := R17
683 [-]: SETGLOBAL R135 K197    ; DepositEssence := R135
684 [-]: CLOSURE   R89 53       ; R89 := closure(Function #54)
685 [-]: MOVE      R0 R55       ; R0 := R55
686 [-]: MOVE      R0 R2        ; R0 := R2
687 [-]: CLOSURE   R135 54      ; R135 := closure(Function #55)
688 [-]: MOVE      R0 R2        ; R0 := R2
689 [-]: CLOSURE   R136 55      ; R136 := closure(Function #56)
690 [-]: MOVE      R0 R53       ; R0 := R53
691 [-]: MOVE      R0 R90       ; R0 := R90
692 [-]: MOVE      R0 R135      ; R0 := R135
693 [-]: CLOSURE   R90 56       ; R90 := closure(Function #57)
694 [-]: MOVE      R0 R54       ; R0 := R54
695 [-]: CLOSURE   R137 57      ; R137 := closure(Function #58)
696 [-]: MOVE      R0 R74       ; R0 := R74
697 [-]: CLOSURE   R138 58      ; R138 := closure(Function #59)
698 [-]: MOVE      R0 R71       ; R0 := R71
699 [-]: MOVE      R0 R137      ; R0 := R137
700 [-]: MOVE      R0 R87       ; R0 := R87
701 [-]: MOVE      R0 R2        ; R0 := R2
702 [-]: MOVE      R0 R5        ; R0 := R5
703 [-]: MOVE      R0 R0        ; R0 := R0
704 [-]: MOVE      R0 R90       ; R0 := R90
705 [-]: MOVE      R0 R123      ; R0 := R123
706 [-]: MOVE      R0 R17       ; R0 := R17
707 [-]: CLOSURE   R139 59      ; R139 := closure(Function #60)
708 [-]: MOVE      R0 R71       ; R0 := R71
709 [-]: MOVE      R0 R0        ; R0 := R0
710 [-]: MOVE      R0 R53       ; R0 := R53
711 [-]: MOVE      R0 R137      ; R0 := R137
712 [-]: MOVE      R0 R138      ; R0 := R138
713 [-]: MOVE      R0 R125      ; R0 := R125
714 [-]: MOVE      R0 R17       ; R0 := R17
715 [-]: MOVE      R0 R89       ; R0 := R89
716 [-]: MOVE      R0 R136      ; R0 := R136
717 [-]: MOVE      R0 R2        ; R0 := R2
718 [-]: MOVE      R0 R90       ; R0 := R90
719 [-]: MOVE      R0 R123      ; R0 := R123
720 [-]: MOVE      R0 R124      ; R0 := R124
721 [-]: MOVE      R0 R11       ; R0 := R11
722 [-]: MOVE      R0 R87       ; R0 := R87
723 [-]: CLOSURE   R140 60      ; R140 := closure(Function #61)
724 [-]: MOVE      R0 R2        ; R0 := R2
725 [-]: SETGLOBAL R140 K198    ; OnActiveQuestSet := R140
726 [-]: CLOSURE   R140 61      ; R140 := closure(Function #62)
727 [-]: MOVE      R0 R32       ; R0 := R32
728 [-]: MOVE      R0 R21       ; R0 := R21
729 [-]: MOVE      R0 R2        ; R0 := R2
730 [-]: MOVE      R0 R11       ; R0 := R11
731 [-]: CLOSURE   R141 62      ; R141 := closure(Function #63)
732 [-]: MOVE      R0 R140      ; R0 := R140
733 [-]: SETGLOBAL R141 K199    ; ConfirmQuestCommitment := R141
734 [-]: CLOSURE   R141 63      ; R141 := closure(Function #64)
735 [-]: MOVE      R0 R140      ; R0 := R140
736 [-]: SETGLOBAL R141 K200    ; OSKConfirmQuestCommitment := R141
737 [-]: CLOSURE   R141 64      ; R141 := closure(Function #65)
738 [-]: MOVE      R0 R21       ; R0 := R21
739 [-]: MOVE      R0 R32       ; R0 := R32
740 [-]: MOVE      R0 R11       ; R0 := R11
741 [-]: SETGLOBAL R141 K201    ; OnConfirmSetActiveQuest := R141
742 [-]: CLOSURE   R141 65      ; R141 := closure(Function #66)
743 [-]: MOVE      R0 R21       ; R0 := R21
744 [-]: MOVE      R0 R2        ; R0 := R2
745 [-]: MOVE      R0 R32       ; R0 := R32
746 [-]: SETGLOBAL R141 K202    ; OnConfirmGotoQuestInCodex := R141
747 [-]: CLOSURE   R141 66      ; R141 := closure(Function #67)
748 [-]: MOVE      R0 R17       ; R0 := R17
749 [-]: MOVE      R0 R28       ; R0 := R28
750 [-]: MOVE      R0 R29       ; R0 := R29
751 [-]: MOVE      R0 R2        ; R0 := R2
752 [-]: MOVE      R0 R10       ; R0 := R10
753 [-]: MOVE      R0 R50       ; R0 := R50
754 [-]: MOVE      R0 R71       ; R0 := R71
755 [-]: MOVE      R0 R45       ; R0 := R45
756 [-]: MOVE      R0 R46       ; R0 := R46
757 [-]: MOVE      R0 R6        ; R0 := R6
758 [-]: MOVE      R0 R93       ; R0 := R93
759 [-]: MOVE      R0 R5        ; R0 := R5
760 [-]: MOVE      R0 R81       ; R0 := R81
761 [-]: MOVE      R0 R7        ; R0 := R7
762 [-]: MOVE      R0 R32       ; R0 := R32
763 [-]: MOVE      R0 R11       ; R0 := R11
764 [-]: MOVE      R0 R18       ; R0 := R18
765 [-]: MOVE      R0 R21       ; R0 := R21
766 [-]: MOVE      R0 R0        ; R0 := R0
767 [-]: MOVE      R0 R79       ; R0 := R79
768 [-]: MOVE      R0 R82       ; R0 := R82
769 [-]: MOVE      R0 R140      ; R0 := R140
770 [-]: MOVE      R0 R63       ; R0 := R63
771 [-]: MOVE      R0 R1        ; R0 := R1
772 [-]: MOVE      R0 R62       ; R0 := R62
773 [-]: MOVE      R0 R3        ; R0 := R3
774 [-]: MOVE      R0 R30       ; R0 := R30
775 [-]: MOVE      R0 R59       ; R0 := R59
776 [-]: MOVE      R0 R73       ; R0 := R73
777 [-]: MOVE      R0 R75       ; R0 := R75
778 [-]: MOVE      R0 R98       ; R0 := R98
779 [-]: MOVE      R0 R88       ; R0 := R88
780 [-]: MOVE      R0 R131      ; R0 := R131
781 [-]: MOVE      R0 R139      ; R0 := R139
782 [-]: MOVE      R0 R117      ; R0 := R117
783 [-]: MOVE      R0 R130      ; R0 := R130
784 [-]: MOVE      R0 R118      ; R0 := R118
785 [-]: MOVE      R0 R125      ; R0 := R125
786 [-]: MOVE      R0 R43       ; R0 := R43
787 [-]: MOVE      R0 R44       ; R0 := R44
788 [-]: MOVE      R0 R126      ; R0 := R126
789 [-]: MOVE      R0 R127      ; R0 := R127
790 [-]: MOVE      R0 R109      ; R0 := R109
791 [-]: CLOSURE   R142 67      ; R142 := closure(Function #68)
792 [-]: MOVE      R0 R16       ; R0 := R16
793 [-]: MOVE      R0 R28       ; R0 := R28
794 [-]: MOVE      R0 R32       ; R0 := R32
795 [-]: MOVE      R0 R0        ; R0 := R0
796 [-]: MOVE      R0 R61       ; R0 := R61
797 [-]: MOVE      R0 R77       ; R0 := R77
798 [-]: MOVE      R0 R64       ; R0 := R64
799 [-]: MOVE      R0 R65       ; R0 := R65
800 [-]: MOVE      R0 R11       ; R0 := R11
801 [-]: MOVE      R0 R101      ; R0 := R101
802 [-]: MOVE      R0 R97       ; R0 := R97
803 [-]: MOVE      R0 R2        ; R0 := R2
804 [-]: MOVE      R0 R34       ; R0 := R34
805 [-]: CLOSURE   R143 68      ; R143 := closure(Function #69)
806 [-]: MOVE      R0 R16       ; R0 := R16
807 [-]: MOVE      R0 R28       ; R0 := R28
808 [-]: MOVE      R0 R72       ; R0 := R72
809 [-]: MOVE      R0 R71       ; R0 := R71
810 [-]: MOVE      R0 R2        ; R0 := R2
811 [-]: MOVE      R0 R27       ; R0 := R27
812 [-]: MOVE      R0 R114      ; R0 := R114
813 [-]: MOVE      R0 R103      ; R0 := R103
814 [-]: MOVE      R0 R29       ; R0 := R29
815 [-]: MOVE      R0 R23       ; R0 := R23
816 [-]: MOVE      R0 R61       ; R0 := R61
817 [-]: MOVE      R0 R0        ; R0 := R0
818 [-]: MOVE      R0 R77       ; R0 := R77
819 [-]: MOVE      R0 R24       ; R0 := R24
820 [-]: MOVE      R0 R5        ; R0 := R5
821 [-]: MOVE      R0 R32       ; R0 := R32
822 [-]: MOVE      R0 R65       ; R0 := R65
823 [-]: MOVE      R0 R64       ; R0 := R64
824 [-]: MOVE      R0 R69       ; R0 := R69
825 [-]: MOVE      R0 R20       ; R0 := R20
826 [-]: MOVE      R0 R11       ; R0 := R11
827 [-]: MOVE      R0 R101      ; R0 := R101
828 [-]: MOVE      R0 R80       ; R0 := R80
829 [-]: MOVE      R0 R142      ; R0 := R142
830 [-]: MOVE      R0 R12       ; R0 := R12
831 [-]: CLOSURE   R144 69      ; R144 := closure(Function #70)
832 [-]: MOVE      R0 R32       ; R0 := R32
833 [-]: MOVE      R0 R0        ; R0 := R0
834 [-]: MOVE      R0 R11       ; R0 := R11
835 [-]: MOVE      R0 R6        ; R0 := R6
836 [-]: MOVE      R0 R62       ; R0 := R62
837 [-]: MOVE      R0 R78       ; R0 := R78
838 [-]: MOVE      R0 R83       ; R0 := R83
839 [-]: MOVE      R0 R72       ; R0 := R72
840 [-]: MOVE      R0 R17       ; R0 := R17
841 [-]: MOVE      R0 R142      ; R0 := R142
842 [-]: CLOSURE   R145 70      ; R145 := closure(Function #71)
843 [-]: MOVE      R0 R32       ; R0 := R32
844 [-]: MOVE      R0 R11       ; R0 := R11
845 [-]: MOVE      R0 R35       ; R0 := R35
846 [-]: MOVE      R0 R144      ; R0 := R144
847 [-]: MOVE      R0 R72       ; R0 := R72
848 [-]: MOVE      R0 R27       ; R0 := R27
849 [-]: MOVE      R0 R28       ; R0 := R28
850 [-]: MOVE      R0 R0        ; R0 := R0
851 [-]: MOVE      R0 R80       ; R0 := R80
852 [-]: MOVE      R0 R16       ; R0 := R16
853 [-]: MOVE      R0 R2        ; R0 := R2
854 [-]: MOVE      R0 R76       ; R0 := R76
855 [-]: MOVE      R0 R142      ; R0 := R142
856 [-]: CLOSURE   R146 71      ; R146 := closure(Function #72)
857 [-]: MOVE      R0 R12       ; R0 := R12
858 [-]: MOVE      R0 R35       ; R0 := R35
859 [-]: SETGLOBAL R146 K203    ; OnResourceLoaded := R146
860 [-]: CLOSURE   R146 72      ; R146 := closure(Function #73)
861 [-]: MOVE      R0 R2        ; R0 := R2
862 [-]: MOVE      R0 R47       ; R0 := R47
863 [-]: MOVE      R0 R48       ; R0 := R48
864 [-]: CLOSURE   R147 73      ; R147 := closure(Function #74)
865 [-]: MOVE      R0 R16       ; R0 := R16
866 [-]: CLOSURE   R148 74      ; R148 := closure(Function #75)
867 [-]: MOVE      R0 R10       ; R0 := R10
868 [-]: MOVE      R0 R72       ; R0 := R72
869 [-]: MOVE      R0 R12       ; R0 := R12
870 [-]: MOVE      R0 R11       ; R0 := R11
871 [-]: MOVE      R0 R24       ; R0 := R24
872 [-]: MOVE      R0 R13       ; R0 := R13
873 [-]: MOVE      R0 R25       ; R0 := R25
874 [-]: MOVE      R0 R35       ; R0 := R35
875 [-]: MOVE      R0 R71       ; R0 := R71
876 [-]: MOVE      R0 R4        ; R0 := R4
877 [-]: MOVE      R0 R2        ; R0 := R2
878 [-]: MOVE      R0 R99       ; R0 := R99
879 [-]: MOVE      R0 R64       ; R0 := R64
880 [-]: MOVE      R0 R0        ; R0 := R0
881 [-]: MOVE      R0 R65       ; R0 := R65
882 [-]: MOVE      R0 R100      ; R0 := R100
883 [-]: MOVE      R0 R66       ; R0 := R66
884 [-]: MOVE      R0 R101      ; R0 := R101
885 [-]: MOVE      R0 R23       ; R0 := R23
886 [-]: MOVE      R0 R63       ; R0 := R63
887 [-]: MOVE      R0 R67       ; R0 := R67
888 [-]: MOVE      R0 R70       ; R0 := R70
889 [-]: MOVE      R0 R68       ; R0 := R68
890 [-]: MOVE      R0 R69       ; R0 := R69
891 [-]: MOVE      R0 R85       ; R0 := R85
892 [-]: MOVE      R0 R145      ; R0 := R145
893 [-]: MOVE      R0 R47       ; R0 := R47
894 [-]: MOVE      R0 R48       ; R0 := R48
895 [-]: MOVE      R0 R49       ; R0 := R49
896 [-]: MOVE      R0 R146      ; R0 := R146
897 [-]: MOVE      R0 R18       ; R0 := R18
898 [-]: MOVE      R0 R107      ; R0 := R107
899 [-]: MOVE      R0 R143      ; R0 := R143
900 [-]: MOVE      R0 R141      ; R0 := R141
901 [-]: MOVE      R0 R5        ; R0 := R5
902 [-]: MOVE      R0 R103      ; R0 := R103
903 [-]: MOVE      R0 R147      ; R0 := R147
904 [-]: MOVE      R0 R28       ; R0 := R28
905 [-]: MOVE      R0 R9        ; R0 := R9
906 [-]: SETGLOBAL R148 K204    ; Initialize := R148
907 [-]: CLOSURE   R148 75      ; R148 := closure(Function #76)
908 [-]: MOVE      R0 R25       ; R0 := R25
909 [-]: MOVE      R0 R26       ; R0 := R26
910 [-]: MOVE      R0 R10       ; R0 := R10
911 [-]: CLOSURE   R149 76      ; R149 := closure(Function #77)
912 [-]: MOVE      R0 R11       ; R0 := R11
913 [-]: MOVE      R0 R15       ; R0 := R15
914 [-]: MOVE      R0 R22       ; R0 := R22
915 [-]: MOVE      R0 R75       ; R0 := R75
916 [-]: MOVE      R0 R26       ; R0 := R26
917 [-]: MOVE      R0 R14       ; R0 := R14
918 [-]: MOVE      R0 R13       ; R0 := R13
919 [-]: MOVE      R0 R2        ; R0 := R2
920 [-]: MOVE      R0 R33       ; R0 := R33
921 [-]: MOVE      R0 R12       ; R0 := R12
922 [-]: MOVE      R0 R86       ; R0 := R86
923 [-]: MOVE      R0 R148      ; R0 := R148
924 [-]: MOVE      R0 R17       ; R0 := R17
925 [-]: MOVE      R0 R19       ; R0 := R19
926 [-]: MOVE      R0 R27       ; R0 := R27
927 [-]: MOVE      R0 R28       ; R0 := R28
928 [-]: MOVE      R0 R87       ; R0 := R87
929 [-]: MOVE      R0 R10       ; R0 := R10
930 [-]: MOVE      R0 R34       ; R0 := R34
931 [-]: MOVE      R0 R16       ; R0 := R16
932 [-]: MOVE      R0 R142      ; R0 := R142
933 [-]: MOVE      R0 R102      ; R0 := R102
934 [-]: SETGLOBAL R149 K205    ; Update := R149
935 [-]: CLOSURE   R149 77      ; R149 := closure(Function #78)
936 [-]: MOVE      R0 R106      ; R0 := R106
937 [-]: MOVE      R0 R75       ; R0 := R75
938 [-]: MOVE      R0 R13       ; R0 := R13
939 [-]: MOVE      R0 R26       ; R0 := R26
940 [-]: MOVE      R0 R105      ; R0 := R105
941 [-]: SETGLOBAL R149 K206    ; Shutdown := R149
942 [-]: CLOSURE   R149 78      ; R149 := closure(Function #79)
943 [-]: MOVE      R0 R107      ; R0 := R107
944 [-]: MOVE      R0 R17       ; R0 := R17
945 [-]: MOVE      R0 R109      ; R0 := R109
946 [-]: SETGLOBAL R149 K207    ; onViewportSizeChanged := R149
947 [-]: CLOSURE   R149 79      ; R149 := closure(Function #80)
948 [-]: MOVE      R0 R145      ; R0 := R145
949 [-]: MOVE      R0 R17       ; R0 := R17
950 [-]: MOVE      R0 R19       ; R0 := R19
951 [-]: MOVE      R0 R113      ; R0 := R113
952 [-]: MOVE      R0 R27       ; R0 := R27
953 [-]: SETGLOBAL R149 K208    ; OnQuestsChanged := R149
954 [-]: CLOSURE   R149 80      ; R149 := closure(Function #81)
955 [-]: MOVE      R0 R30       ; R0 := R30
956 [-]: MOVE      R0 R31       ; R0 := R31
957 [-]: MOVE      R0 R16       ; R0 := R16
958 [-]: MOVE      R0 R142      ; R0 := R142
959 [-]: MOVE      R0 R27       ; R0 := R27
960 [-]: MOVE      R0 R28       ; R0 := R28
961 [-]: MOVE      R0 R2        ; R0 := R2
962 [-]: MOVE      R0 R17       ; R0 := R17
963 [-]: MOVE      R0 R19       ; R0 := R19
964 [-]: MOVE      R0 R113      ; R0 := R113
965 [-]: SETGLOBAL R149 K209    ; OnWorldStateChanged := R149
966 [-]: CLOSURE   R149 81      ; R149 := closure(Function #82)
967 [-]: MOVE      R0 R16       ; R0 := R16
968 [-]: MOVE      R0 R28       ; R0 := R28
969 [-]: MOVE      R0 R142      ; R0 := R142
970 [-]: MOVE      R0 R91       ; R0 := R91
971 [-]: MOVE      R0 R2        ; R0 := R2
972 [-]: MOVE      R0 R103      ; R0 := R103
973 [-]: MOVE      R0 R50       ; R0 := R50
974 [-]: SETGLOBAL R149 K210    ; OnDifficultyChanged := R149
975 [-]: CLOSURE   R149 82      ; R149 := closure(Function #83)
976 [-]: MOVE      R0 R10       ; R0 := R10
977 [-]: MOVE      R0 R19       ; R0 := R19
978 [-]: MOVE      R0 R16       ; R0 := R16
979 [-]: SETGLOBAL R149 K211    ; TopMenuEntryPressed := R149
980 [-]: CLOSURE   R149 83      ; R149 := closure(Function #84)
981 [-]: MOVE      R0 R16       ; R0 := R16
982 [-]: SETGLOBAL R149 K212    ; TopMenuEntryFocused := R149
983 [-]: CLOSURE   R149 84      ; R149 := closure(Function #85)
984 [-]: MOVE      R0 R16       ; R0 := R16
985 [-]: SETGLOBAL R149 K213    ; TopMenuEntryUnfocused := R149
986 [-]: CLOSURE   R149 85      ; R149 := closure(Function #86)
987 [-]: MOVE      R0 R10       ; R0 := R10
988 [-]: MOVE      R0 R17       ; R0 := R17
989 [-]: SETGLOBAL R149 K214    ; InfoMenuItemPressed := R149
990 [-]: CLOSURE   R149 86      ; R149 := closure(Function #87)
991 [-]: MOVE      R0 R17       ; R0 := R17
992 [-]: SETGLOBAL R149 K215    ; InfoMenuItemFocused := R149
993 [-]: CLOSURE   R149 87      ; R149 := closure(Function #88)
994 [-]: MOVE      R0 R17       ; R0 := R17
995 [-]: SETGLOBAL R149 K216    ; InfoMenuItemUnfocused := R149
996 [-]: CLOSURE   R149 88      ; R149 := closure(Function #89)
997 [-]: MOVE      R0 R17       ; R0 := R17
998 [-]: CLOSURE   R150 89      ; R150 := closure(Function #90)
999 [-]: MOVE      R0 R10       ; R0 := R10
1000 [-]: MOVE      R0 R149      ; R0 := R149
1001 [-]: MOVE      R0 R17       ; R0 := R17
1002 [-]: MOVE      R0 R71       ; R0 := R71
1003 [-]: SETGLOBAL R150 K217    ; LiteSortieNerfFocused := R150
1004 [-]: CLOSURE   R150 90      ; R150 := closure(Function #91)
1005 [-]: MOVE      R0 R10       ; R0 := R10
1006 [-]: MOVE      R0 R149      ; R0 := R149
1007 [-]: MOVE      R0 R71       ; R0 := R71
1008 [-]: SETGLOBAL R150 K218    ; LiteSortieNerfUnfocused := R150
1009 [-]: CLOSURE   R150 91      ; R150 := closure(Function #92)
1010 [-]: MOVE      R0 R10       ; R0 := R10
1011 [-]: MOVE      R0 R149      ; R0 := R149
1012 [-]: MOVE      R0 R17       ; R0 := R17
1013 [-]: SETGLOBAL R150 K219    ; LiteSortieRewardFocused := R150
1014 [-]: CLOSURE   R150 92      ; R150 := closure(Function #93)
1015 [-]: MOVE      R0 R10       ; R0 := R10
1016 [-]: MOVE      R0 R149      ; R0 := R149
1017 [-]: SETGLOBAL R150 K220    ; LiteSortieRewardUnfocused := R150
1018 [-]: CLOSURE   R150 93      ; R150 := closure(Function #94)
1019 [-]: MOVE      R0 R18       ; R0 := R18
1020 [-]: SETGLOBAL R150 K221    ; InfoMenuScrollBarScrubStartDrag := R150
1021 [-]: CLOSURE   R150 94      ; R150 := closure(Function #95)
1022 [-]: MOVE      R0 R18       ; R0 := R18
1023 [-]: SETGLOBAL R150 K222    ; InfoMenuScrollBarScrubStopDrag := R150
1024 [-]: CLOSURE   R150 95      ; R150 := closure(Function #96)
1025 [-]: MOVE      R0 R18       ; R0 := R18
1026 [-]: SETGLOBAL R150 K223    ; InfoMenuScrollBarClick := R150
1027 [-]: CLOSURE   R150 96      ; R150 := closure(Function #97)
1028 [-]: MOVE      R0 R10       ; R0 := R10
1029 [-]: MOVE      R0 R19       ; R0 := R19
1030 [-]: MOVE      R0 R102      ; R0 := R102
1031 [-]: MOVE      R0 R18       ; R0 := R18
1032 [-]: SETGLOBAL R150 K224    ; onKeyDown_MENU_MOUSE_Z := R150
1033 [-]: CLOSURE   R88 97       ; R88 := closure(Function #98)
1034 [-]: MOVE      R0 R10       ; R0 := R10
1035 [-]: MOVE      R0 R50       ; R0 := R50
1036 [-]: MOVE      R0 R16       ; R0 := R16
1037 [-]: CLOSURE   R91 98       ; R91 := closure(Function #99)
1038 [-]: MOVE      R0 R16       ; R0 := R16
1039 [-]: MOVE      R0 R2        ; R0 := R2
1040 [-]: CLOSURE   R150 99      ; R150 := closure(Function #100)
1041 [-]: MOVE      R0 R10       ; R0 := R10
1042 [-]: MOVE      R0 R50       ; R0 := R50
1043 [-]: MOVE      R0 R16       ; R0 := R16
1044 [-]: MOVE      R0 R19       ; R0 := R19
1045 [-]: MOVE      R0 R2        ; R0 := R2
1046 [-]: MOVE      R0 R91       ; R0 := R91
1047 [-]: SETGLOBAL R150 K225    ; onKeyDown_MENU_LTRIGGER2 := R150
1048 [-]: CLOSURE   R150 100     ; R150 := closure(Function #101)
1049 [-]: MOVE      R0 R10       ; R0 := R10
1050 [-]: MOVE      R0 R50       ; R0 := R50
1051 [-]: MOVE      R0 R16       ; R0 := R16
1052 [-]: MOVE      R0 R19       ; R0 := R19
1053 [-]: MOVE      R0 R2        ; R0 := R2
1054 [-]: MOVE      R0 R91       ; R0 := R91
1055 [-]: MOVE      R0 R88       ; R0 := R88
1056 [-]: SETGLOBAL R150 K226    ; onKeyDown_MENU_RTRIGGER2 := R150
1057 [-]: CLOSURE   R150 101     ; R150 := closure(Function #102)
1058 [-]: MOVE      R0 R50       ; R0 := R50
1059 [-]: SETGLOBAL R150 K227    ; IsMaximized := R150
1060 [-]: CLOSURE   R150 102     ; R150 := closure(Function #103)
1061 [-]: MOVE      R0 R10       ; R0 := R10
1062 [-]: MOVE      R0 R50       ; R0 := R50
1063 [-]: MOVE      R0 R17       ; R0 := R17
1064 [-]: SETGLOBAL R150 K228    ; onKeyUp_MENU_SELECT := R150
1065 [-]: CLOSURE   R150 103     ; R150 := closure(Function #104)
1066 [-]: SETGLOBAL R150 K229    ; OnMouseCatcherFocused := R150
1067 [-]: CLOSURE   R150 104     ; R150 := closure(Function #105)
1068 [-]: MOVE      R0 R22       ; R0 := R22
1069 [-]: SETGLOBAL R150 K230    ; ItemBrowsing := R150
1070 [-]: CLOSURE   R150 105     ; R150 := closure(Function #106)
1071 [-]: MOVE      R0 R2        ; R0 := R2
1072 [-]: MOVE      R0 R50       ; R0 := R50
1073 [-]: CLOSURE   R151 106     ; R151 := closure(Function #107)
1074 [-]: MOVE      R0 R150      ; R0 := R150
1075 [-]: SETGLOBAL R151 K231    ; IconCacheFlushed := R151
1076 [-]: CLOSURE   R151 107     ; R151 := closure(Function #108)
1077 [-]: MOVE      R0 R50       ; R0 := R50
1078 [-]: MOVE      R0 R75       ; R0 := R75
1079 [-]: MOVE      R0 R88       ; R0 := R88
1080 [-]: SETGLOBAL R151 K232    ; onKeyUp_MENU_CLICK := R151
1081 [-]: CLOSURE   R151 108     ; R151 := closure(Function #109)
1082 [-]: MOVE      R0 R146      ; R0 := R146
1083 [-]: MOVE      R0 R150      ; R0 := R150
1084 [-]: SETGLOBAL R151 K233    ; OnGamepadTransition := R151
1085 [-]: CLOSURE   R151 109     ; R151 := closure(Function #110)
1086 [-]: SETGLOBAL R151 K234    ; SupportsThemes := R151
1087 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 258
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x80563238]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: MOVE      R1 R2        ; R1 := R2
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 267
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADNIL   R1 R1        ; R1 := nil
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x69727e0b]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 280
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x34291f5c
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x397b920f]
  3 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mEndDate"]
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: LOADKB    R4 0 0       ; R4 := false
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: TEST      R5 1         ; if R5 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: TEST      R2 0         ; if not R2 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: SELF      R5 R1 K4     ; R6 := R1; R5 := R1[0x2698bd19]
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: MOVE      R4 R5        ; R4 := R5
 16 [-]: JMP       18           ; PC := 18
 17 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["mIsRewardCollected"]
 18 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 19 [-]: MOVE      R6 R1        ; R6 := R1
 20 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 21 [-]: TEST      R5 1         ; if R5 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: TEST      R4 1         ; if R4 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: LT        0 K6 R3      ; if 0.000000 >= R3 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0[0xe31cd12f]
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: NOT       R5 R5        ; R5 :=  R5
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 32
 32 [-]: LOADKB    R5 1 0       ; R5 := true
 33 [-]: RETURN    R5 2         ; return R5
 34 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 296
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 0         ; if not R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: GETGLOBAL R3 K1        ; R3 := 0xcfc01047
 12 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mPVPChallengeInstances"]
 13 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 14 [-]: JMP       96           ; PC := 96
 15 [-]: LOADNIL   R8 R8        ; R8 := nil
 16 [-]: GETGLOBAL R9 K1        ; R9 := 0xcfc01047
 17 [-]: GETGLOBAL R10 K3       ; R10 := 0xd3bdad44
 18 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["mEntries"]
 19 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETTABLE  R14 R7 K5    ; R14 := R7["mChallengeTypeRefID"]
 22 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: MOVE      R8 R13       ; R8 := R13
 25 [-]: JMP       28           ; PC := 28
 26 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 21; R11 := R12 end
 27 [-]: JMP       21           ; PC := 21
 28 [-]: GETUPVAL  R14 U2       ; R14 := U2
 29 [-]: GETTABLE  R14 R14 K6   ; R14 := R14["PVPCHALLENGES"]
 30 [-]: EQ        0 R0 R14     ; if R0 ~= R14 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETTABLE  R14 R7 K7    ; R14 := R7["mCategory"]
 33 [-]: EQ        1 R14 K9     ; if R14 == 0.000000 then PC := 42
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETUPVAL  R14 U2       ; R14 := U2
 36 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["PVPCHALLENGES_WEEKLY"]
 37 [-]: EQ        0 R0 R14     ; if R0 ~= R14 then PC := 96
 38 [-]: JMP       96           ; PC := 96
 39 [-]: GETTABLE  R14 R7 K7    ; R14 := R7["mCategory"]
 40 [-]: EQ        0 R14 K11    ; if R14 ~= 1.000000 then PC := 96
 41 [-]: JMP       96           ; PC := 96
 42 [-]: TEST      R8 0         ; if not R8 then PC := 86
 43 [-]: JMP       86           ; PC := 86
 44 [-]: GETGLOBAL R14 K12      ; R14 := 0xb009bbc6
 45 [-]: MOVE      R15 R8       ; R15 := R8
 46 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 47 [-]: SELF      R15 R2 K13   ; R16 := R2; R15 := R2[0x896fe205]
 48 [-]: GETTABLE  R17 R7 K14   ; R17 := R7["mId"]
 49 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 50 [-]: GETUPVAL  R16 U3       ; R16 := U3
 51 [-]: MOVE      R17 R7       ; R17 := R7
 52 [-]: MOVE      R18 R15      ; R18 := R15
 53 [-]: LOADKB    R19 0 0      ; R19 := false
 54 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 55 [-]: TEST      R16 1        ; if R16 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETTABLE  R16 R7 K7    ; R16 := R7["mCategory"]
 58 [-]: EQ        0 R16 K11    ; if R16 ~= 1.000000 then PC := 96
 59 [-]: JMP       96           ; PC := 96
 60 [-]: GETUPVAL  R16 U4       ; R16 := U4
 61 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16[0xbad4316f]
 62 [-]: NEWTABLE  R18 0 13     ; R18 := {}
 63 [-]: SETTABLE  R18 K16 R14  ; R18["challengeType"] := R14
 64 [-]: SETTABLE  R18 K17 R7   ; R18["challengeInstance"] := R7
 65 [-]: SETTABLE  R18 K18 R15  ; R18["challengeState"] := R15
 66 [-]: SETTABLE  R18 K19 R0   ; R18["sectionID"] := R0
 67 [-]: GETUPVAL  R19 U5       ; R19 := U5
 68 [-]: GETTABLE  R19 R19 K6   ; R19 := R19["PVPCHALLENGES"]
 69 [-]: SETTABLE  R18 K20 R19  ; R18["EntryId"] := R19
 70 [-]: SETTABLE  R18 K21 K22  ; R18["mMissionInfo"] := nil
 71 [-]: GETTABLE  R19 R14 K23  ; R19 := R14["mIcon"]
 72 [-]: SETTABLE  R18 K23 R19  ; R18["mIcon"] := R19
 73 [-]: SETTABLE  R18 K24 K22  ; R18["mLogoColor"] := nil
 74 [-]: SETTABLE  R18 K25 K22  ; R18["mBgColor"] := nil
 75 [-]: SETTABLE  R18 K26 K22  ; R18["mSyndicateName"] := nil
 76 [-]: GETTABLE  R19 R14 K28  ; R19 := R14["mLocName"]
 77 [-]: SETTABLE  R18 K27 R19  ; R18["mTitleName"] := R19
 78 [-]: GETTABLE  R19 R7 K30   ; R19 := R7["mEndDate"]
 79 [-]: SELF      R19 R19 K31  ; R20 := R19; R19 := R19[0x8f89d633]
 80 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 81 [-]: SETTABLE  R18 K29 R19  ; R18["mExpiry"] := R19
 82 [-]: SETTABLE  R18 K32 K22  ; R18["mRegionUnlocked"] := nil
 83 [-]: LOADKB    R19 1 0      ; R19 := true
 84 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
 85 [-]: JMP       96           ; PC := 96
 86 [-]: GETGLOBAL R16 K33      ; R16 := 0x3d106989
 87 [-]: LOADK     R17 K34      ; R17 := "Could not find ChallengeTypeRes for challengeInstance "
 88 [-]: GETGLOBAL R18 K35      ; R18 := 0x64fb1586
 89 [-]: GETTABLE  R19 R7 K5    ; R19 := R7["mChallengeTypeRefID"]
 90 [-]: SELF      R19 R19 K36  ; R20 := R19; R19 := R19[0xed4e0128]
 91 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
 92 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
 93 [-]: LOADK     R19 K37      ; R19 := " IGNORING!"
 94 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
 95 [-]: CALL      R16 2 1      ; R16(R17)
 96 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 15; R5 := R6 end
 97 [-]: JMP       15           ; PC := 15
 98 [-]: GETUPVAL  R16 U4       ; R16 := U4
 99 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0xcedda36e]
100 [-]: LOADK     R18 K39      ; R18 := "InfoPanel.InfoMenu.SyndicateElement"
101 [-]: CALL      R16 3 1      ; R16(R17,R18)
102 [-]: GETUPVAL  R16 U4       ; R16 := U4
103 [-]: SETTABLE  R16 K40 K41  ; R16["mVisibleElements"] := 6.000000
104 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 343
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  4 [-]: MOVE      R4 R2        ; R4 := R2
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: TEST      R3 0         ; if not R3 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: SETTABLE  R0 K1 K2     ; R0["Count"] := 0.000000
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: CALL      R3 1 2       ; R3 := R3()
 12 [-]: CONST     R4 0         ; R4 := 0.000000
 13 [-]: GETGLOBAL R5 K3        ; R5 := 0xcfc01047
 14 [-]: GETTABLE  R6 R2 K4     ; R6 := R2["mPVPChallengeInstances"]
 15 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 16 [-]: JMP       61           ; PC := 61
 17 [-]: LOADNIL   R10 R10      ; R10 := nil
 18 [-]: GETGLOBAL R11 K3       ; R11 := 0xcfc01047
 19 [-]: GETGLOBAL R12 K5       ; R12 := 0xd3bdad44
 20 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["mEntries"]
 21 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETTABLE  R16 R9 K7    ; R16 := R9["mChallengeTypeRefID"]
 24 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R10 R15      ; R10 := R15
 27 [-]: JMP       30           ; PC := 30
 28 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 23; R13 := R14 end
 29 [-]: JMP       23           ; PC := 23
 30 [-]: GETUPVAL  R16 U2       ; R16 := U2
 31 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["PVPCHALLENGES"]
 32 [-]: EQ        0 R1 R16     ; if R1 ~= R16 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETTABLE  R16 R9 K9    ; R16 := R9["mCategory"]
 35 [-]: EQ        1 R16 K2     ; if R16 == 0.000000 then PC := 44
 36 [-]: JMP       44           ; PC := 44
 37 [-]: GETUPVAL  R16 U2       ; R16 := U2
 38 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["PVPCHALLENGES_WEEKLY"]
 39 [-]: EQ        0 R1 R16     ; if R1 ~= R16 then PC := 61
 40 [-]: JMP       61           ; PC := 61
 41 [-]: GETTABLE  R16 R9 K9    ; R16 := R9["mCategory"]
 42 [-]: EQ        0 R16 K12    ; if R16 ~= 1.000000 then PC := 61
 43 [-]: JMP       61           ; PC := 61
 44 [-]: TEST      R10 0        ; if not R10 then PC := 61
 45 [-]: JMP       61           ; PC := 61
 46 [-]: SELF      R16 R3 K13   ; R17 := R3; R16 := R3[0x896fe205]
 47 [-]: GETTABLE  R18 R9 K14   ; R18 := R9["mId"]
 48 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 49 [-]: GETUPVAL  R17 U3       ; R17 := U3
 50 [-]: MOVE      R18 R9       ; R18 := R9
 51 [-]: MOVE      R19 R16      ; R19 := R16
 52 [-]: GETTABLE  R20 R9 K9    ; R20 := R9["mCategory"]
 53 [-]: EQ        1 R20 K12    ; if R20 == 1.000000 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: LOADKB    R20 0 1      ; R20 := false; PC := 56
 56 [-]: LOADKB    R20 1 0      ; R20 := true
 57 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 58 [-]: TEST      R17 0        ; if not R17 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: ADD       R4 R4 K12    ; R4 := R4 + 1.000000
 61 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 17; R7 := R8 end
 62 [-]: JMP       17           ; PC := 17
 63 [-]: SETTABLE  R0 K1 R4     ; R0["Count"] := R4
 64 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 383
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["challengeInstance"]
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mPVPMode"]
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["sectionID"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["PVPCHALLENGES"]
  8 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x397b920f]
 12 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mExpiry"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: LT        0 K8 R1      ; if 0.000000 >= R1 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETGLOBAL R2 K9        ; R2 := _T
 17 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["challengeInstance"]
 18 [-]: SETTABLE  R2 K10 R3    ; R2["MAGIC_StartPVPChallengeInstance"] := R3
 19 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 401
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MarooMissionKey"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 41
  4 [-]: JMP       41           ; PC := 41
  5 [-]: GETGLOBAL R0 K3        ; R0 := 0x6de1bcff
  6 [-]: LEN       R0 R0        ; R0 := # R0
  7 [-]: CONST     R1 1         ; R1 := 1.000000
  8 [-]: CONST     R2 -1        ; R2 := -1.000000
  9 [-]: FORPREP   R0 29        ; R0 -= R2; PC := 29
 10 [-]: GETGLOBAL R4 K3        ; R4 := 0x6de1bcff
 11 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 12 [-]: SELF      R5 R4 K4     ; R6 := R4; R5 := R4[0x6c053909]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: GETUPVAL  R6 U0        ; R6 := U0
 15 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["REGION_ID_MOON"]
 16 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: GETUPVAL  R5 U0        ; R5 := U0
 19 [-]: GETTABLE  R5 R5 K6     ; R5 := R5[0x52fb05b3]
 20 [-]: GETGLOBAL R6 K7        ; R6 := 0x7016eb48
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R5 K8        ; R5 := 0x33bdd652
 25 [-]: GETTABLE  R5 R5 K9     ; R5 := R5[0x9c1f3b5a]
 26 [-]: GETGLOBAL R6 K3        ; R6 := 0x6de1bcff
 27 [-]: MOVE      R7 R3        ; R7 := R3
 28 [-]: CALL      R5 3 1       ; R5(R6,R7)
 29 [-]: FORLOOP   R0 10        ; R0 += R2; if R0 <= R1 then begin PC := 10; R3 := R0 end
 30 [-]: GETUPVAL  R5 U0        ; R5 := U0
 31 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x37e4bdc5]
 32 [-]: CALL      R5 1 2       ; R5 := R5()
 33 [-]: GETGLOBAL R6 K3        ; R6 := 0x6de1bcff
 34 [-]: LEN       R6 R6        ; R6 := # R6
 35 [-]: MOD       R6 R5 R6     ; R6 := R5 % R6
 36 [-]: ADD       R6 R6 K11    ; R6 := R6 + 1.000000
 37 [-]: GETGLOBAL R7 K0        ; R7 := _T
 38 [-]: GETGLOBAL R8 K3        ; R8 := 0x6de1bcff
 39 [-]: GETTABLE  R8 R8 R6     ; R8 := R8[R6]
 40 [-]: SETTABLE  R7 K1 R8     ; R7["MarooMissionKey"] := R8
 41 [-]: GETGLOBAL R7 K0        ; R7 := _T
 42 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["MarooMissionKey"]
 43 [-]: RETURN    R7 2         ; return R7
 44 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 421
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xa71787b6
  2 [-]: LEN       R0 R0        ; R0 := # R0
  3 [-]: EQ        1 R0 K1      ; if R0 == 0.000000 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0x52fb05b3]
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xd5f19843
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADKB    R0 0 0       ; R0 := false
 12 [-]: RETURN    R0 2         ; return R0
 13 [-]: GETGLOBAL R0 K0        ; R0 := 0xa71787b6
 14 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[1.000000]
 15 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0xef893aec]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["periodicMissionTag"]
 18 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["periodicMissionCooldown"]
 19 [-]: GETUPVAL  R4 U1        ; R4 := U1
 20 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xc3150d06]
 21 [-]: MOVE      R6 R2        ; R6 := R2
 22 [-]: MOVE      R7 R3        ; R7 := R3
 23 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 24 [-]: RETURN    R4 2         ; return R4
 25 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 436
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x0d0dada1
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADKB    R0 0 0       ; R0 := false
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: LOADKB    R0 0 0       ; R0 := false
  9 [-]: TEST      R0 0         ; if not R0 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADKB    R0 1 0       ; R0 := true
 12 [-]: RETURN    R0 2         ; return R0
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x2b1b267d]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETGLOBAL R2 K3        ; R2 := 0x0469f296
 18 [-]: LOADK     R3 K4        ; R3 := "LibrarySyndicate"
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: LOADKB    R3 0 0       ; R3 := false
 21 [-]: CONST     R4 1         ; R4 := 1.000000
 22 [-]: LEN       R5 R1        ; R5 := # R1
 23 [-]: CONST     R6 1         ; R6 := 1.000000
 24 [-]: FORPREP   R4 31        ; R4 -= R6; PC := 31
 25 [-]: GETTABLE  R8 R1 R7     ; R8 := R1[R7]
 26 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mTag"]
 27 [-]: EQ        0 R9 R2      ; if R9 ~= R2 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETTABLE  R3 R8 K6     ; R3 := R8["mInitiated"]
 30 [-]: JMP       32           ; PC := 32
 31 [-]: FORLOOP   R4 25        ; R4 += R6; if R4 <= R5 then begin PC := 25; R7 := R4 end
 32 [-]: TESTSET   R9 R3 0      ; if not R3 then PC := 38 else R9 := R3
 33 [-]: JMP       38           ; PC := 38
 34 [-]: GETUPVAL  R9 U1        ; R9 := U1
 35 [-]: GETTABLE  R9 R9 K7     ; R9 := R9[0x52fb05b3]
 36 [-]: GETGLOBAL R10 K8       ; R10 := 0x69b0a422
 37 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 38 [-]: RETURN    R9 2         ; return R9
 39 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 463
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x91a24e4b]
  3 [-]: LOADK     R2 K2        ; R2 := "_root"
  4 [-]: CONST     R3 25        ; R3 := 25.000000
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91a24e4b]
  8 [-]: LOADK     R3 K2        ; R3 := "_root"
  9 [-]: CONST     R4 26        ; R4 := 26.000000
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: LOADKB    R2 0 0       ; R2 := false
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x5fbddc1a]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mForcedHorizontalSeparation"]
 17 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 18 [-]: CONST     R4 37        ; R4 := 37.000000
 19 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 20 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0x91a24e4b]
 21 [-]: LOADK     R7 K5        ; R7 := "TopMenu"
 22 [-]: CONST     R8 2         ; R8 := 2.000000
 23 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 24 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
 25 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6[0x91a24e4b]
 26 [-]: LOADK     R8 K5        ; R8 := "TopMenu"
 27 [-]: CONST     R9 3         ; R9 := 3.000000
 28 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 29 [-]: LE        0 R0 R5      ; if R0 > R5 then PC := 39
 30 [-]: JMP       39           ; PC := 39
 31 [-]: SUB       R7 R5 R3     ; R7 := R5 - R3
 32 [-]: LE        0 R7 R0      ; if R7 > R0 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: LE        0 R6 R1      ; if R6 > R1 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: ADD       R7 R6 R4     ; R7 := R6 + R4
 37 [-]: LE        1 R1 R7      ; if R1 <= R7 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 40
 40 [-]: LOADKB    R2 1 0       ; R2 := true
 41 [-]: GETUPVAL  R7 U1        ; R7 := U1
 42 [-]: TEST      R7 0         ; if not R7 then PC := 78
 43 [-]: JMP       78           ; PC := 78
 44 [-]: TEST      R2 1         ; if R2 then PC := 78
 45 [-]: JMP       78           ; PC := 78
 46 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 47 [-]: SELF      R7 R7 K1     ; R8 := R7; R7 := R7[0x91a24e4b]
 48 [-]: LOADK     R9 K6        ; R9 := "InfoPanel.Bg"
 49 [-]: CONST     R10 2        ; R10 := 2.000000
 50 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 51 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 52 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8[0x91a24e4b]
 53 [-]: LOADK     R10 K6       ; R10 := "InfoPanel.Bg"
 54 [-]: CONST     R11 3        ; R11 := 3.000000
 55 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 56 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
 57 [-]: SELF      R9 R9 K1     ; R10 := R9; R9 := R9[0x91a24e4b]
 58 [-]: LOADK     R11 K6       ; R11 := "InfoPanel.Bg"
 59 [-]: CONST     R12 12       ; R12 := 12.000000
 60 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 61 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
 62 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10[0x91a24e4b]
 63 [-]: LOADK     R12 K6       ; R12 := "InfoPanel.Bg"
 64 [-]: CONST     R13 13       ; R13 := 13.000000
 65 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 66 [-]: LE        0 R7 R0      ; if R7 > R0 then PC := 76
 67 [-]: JMP       76           ; PC := 76
 68 [-]: ADD       R11 R7 R9    ; R11 := R7 + R9
 69 [-]: LE        0 R0 R11     ; if R0 > R11 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: LE        0 R8 R1      ; if R8 > R1 then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: ADD       R11 R8 R10   ; R11 := R8 + R10
 74 [-]: LE        1 R1 R11     ; if R1 <= R11 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 77
 77 [-]: LOADKB    R2 1 0       ; R2 := true
 78 [-]: RETURN    R2 2         ; return R2
 79 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 489
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 4
  4 [-]: LOADKB    R1 1 0       ; R1 := true
  5 [-]: SETUPVAL  R1 U0        ; U82 := R0
  6 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 493
; #Upvalues:       8
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: TEST      R2 1         ; if R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADKB    R3 1 0       ; R3 := true
  8 [-]: SETUPVAL  R3 U1        ; U82 := R1
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 10 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x91a24e4b]
 11 [-]: LOADK     R5 K2        ; R5 := "InfoPanel.Bg"
 12 [-]: CONST     R6 13        ; R6 := 13.000000
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: GETUPVAL  R4 U2        ; R4 := U2
 15 [-]: GETUPVAL  R5 U3        ; R5 := U3
 16 [-]: GETTABLE  R5 R5 K3     ; R5 := R5[0x06d055f9]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: CONST     R7 0         ; R7 := 0.000000
 19 [-]: ADD       R8 R3 K4     ; R8 := R3 + 10.000000
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 22 [-]: GETUPVAL  R5 U3        ; R5 := U3
 23 [-]: GETTABLE  R5 R5 K3     ; R5 := R5[0x06d055f9]
 24 [-]: TESTSET   R6 R0 0      ; if not R0 then PC := 34 else R6 := R0
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETGLOBAL R6 K5        ; R6 := 0x34291f5c
 27 [-]: GETTABLE  R6 R6 K6     ; R6 := R6[0x1467d5f4]
 28 [-]: CALL      R6 1 2       ; R6 := R6()
 29 [-]: TEST      R6 1         ; if R6 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: GETGLOBAL R6 K5        ; R6 := 0x34291f5c
 32 [-]: GETTABLE  R6 R6 K7     ; R6 := R6[0x399826a5]
 33 [-]: CALL      R6 1 2       ; R6 := R6()
 34 [-]: CONST     R7 100       ; R7 := 100.000000
 35 [-]: CONST     R8 0         ; R8 := 0.000000
 36 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 37 [-]: GETUPVAL  R6 U3        ; R6 := U3
 38 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[0x06d055f9]
 39 [-]: TESTSET   R7 R0 0      ; if not R0 then PC := 49 else R7 := R0
 40 [-]: JMP       49           ; PC := 49
 41 [-]: GETGLOBAL R7 K5        ; R7 := 0x34291f5c
 42 [-]: GETTABLE  R7 R7 K6     ; R7 := R7[0x1467d5f4]
 43 [-]: CALL      R7 1 2       ; R7 := R7()
 44 [-]: TEST      R7 1         ; if R7 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R7 K5        ; R7 := 0x34291f5c
 47 [-]: GETTABLE  R7 R7 K7     ; R7 := R7[0x399826a5]
 48 [-]: CALL      R7 1 2       ; R7 := R7()
 49 [-]: CONST     R8 0         ; R8 := 0.000000
 50 [-]: CONST     R9 100       ; R9 := 100.000000
 51 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 52 [-]: GETUPVAL  R7 U4        ; R7 := U4
 53 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x5fbddc1a]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: GETUPVAL  R8 U4        ; R8 := U4
 56 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mForcedHorizontalSeparation"]
 57 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
 58 [-]: UNM       R8 R7        ; R8 :=  R7
 59 [-]: GETGLOBAL R9 K10       ; R9 := 0x7b998233
 60 [-]: GETUPVAL  R10 U5       ; R10 := U5
 61 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 62 [-]: TEST      R9 1         ; if R9 then PC := 72
 63 [-]: JMP       72           ; PC := 72
 64 [-]: SETUPVAL  R7 U6        ; U82 := R6
 65 [-]: GETUPVAL  R9 U5        ; R9 := U5
 66 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0xe4162eed]
 67 [-]: LOADK     R11 K12      ; R11 := "WSWWidthChanged"
 68 [-]: GETGLOBAL R12 K13      ; R12 := 0x64fb1586
 69 [-]: MOVE      R13 R7       ; R13 := R7
 70 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 71 [-]: CALL      R9 0 1       ; R9(R10,...)
 72 [-]: TEST      R1 0         ; if not R1 then PC := 113
 73 [-]: JMP       113          ; PC := 113
 74 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
 75 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9[0xaade900e]
 76 [-]: LOADK     R11 K15      ; R11 := "InfoPanel"
 77 [-]: CONST     R12 11       ; R12 := 11.000000
 78 [-]: MOVE      R13 R0       ; R13 := R0
 79 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 80 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
 81 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x67bc869f]
 82 [-]: LOADK     R11 K15      ; R11 := "InfoPanel"
 83 [-]: CONST     R12 1        ; R12 := 1.000000
 84 [-]: MOVE      R13 R4       ; R13 := R4
 85 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 86 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
 87 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x67bc869f]
 88 [-]: LOADK     R11 K17      ; R11 := "TopMenu.MenuList"
 89 [-]: CONST     R12 0        ; R12 := 0.000000
 90 [-]: MOVE      R13 R8       ; R13 := R8
 91 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 92 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
 93 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x67bc869f]
 94 [-]: LOADK     R11 K18      ; R11 := "TopMenu.MenuList.LeftBumper"
 95 [-]: CONST     R12 10       ; R12 := 10.000000
 96 [-]: MOVE      R13 R5       ; R13 := R5
 97 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 98 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
 99 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x67bc869f]
100 [-]: LOADK     R11 K19      ; R11 := "TopMenu.MenuList.RightBumper"
101 [-]: CONST     R12 10       ; R12 := 10.000000
102 [-]: MOVE      R13 R5       ; R13 := R5
103 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
104 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
105 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x67bc869f]
106 [-]: LOADK     R11 K20      ; R11 := "TopMenu.MaxMinCallout"
107 [-]: CONST     R12 10       ; R12 := 10.000000
108 [-]: MOVE      R13 R6       ; R13 := R6
109 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
110 [-]: LOADKB    R9 0 0       ; R9 := false
111 [-]: SETUPVAL  R9 U1        ; U82 := R1
112 [-]: JMP       164          ; PC := 164
113 [-]: TEST      R0 0         ; if not R0 then PC := 146
114 [-]: JMP       146          ; PC := 146
115 [-]: GETGLOBAL R9 K21       ; R9 := 0x25312c9b
116 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
117 [-]: LOADK     R11 K17      ; R11 := "TopMenu.MenuList"
118 [-]: CONST     R12 8        ; R12 := 8.000000
119 [-]: NEWTABLE  R13 1 0      ; R13 := {}
120 [-]: CONST     R14 0        ; R14 := 0.000000
121 [-]: SETLIST   R13 1 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
122 [-]: NEWTABLE  R14 1 0      ; R14 := {}
123 [-]: MOVE      R15 R8       ; R15 := R8
124 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
125 [-]: CONST     R15 0        ; R15 := 0.250000
126 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
127 [-]: GETGLOBAL R9 K21       ; R9 := 0x25312c9b
128 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
129 [-]: LOADK     R11 K20      ; R11 := "TopMenu.MaxMinCallout"
130 [-]: CONST     R12 8        ; R12 := 8.000000
131 [-]: NEWTABLE  R13 1 0      ; R13 := {}
132 [-]: CONST     R14 10       ; R14 := 10.000000
133 [-]: SETLIST   R13 1 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
134 [-]: NEWTABLE  R14 1 0      ; R14 := {}
135 [-]: MOVE      R15 R6       ; R15 := R6
136 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
137 [-]: LOADK     R15 K23      ; R15 := 0.150000
138 [-]: CONST     R16 0        ; R16 := 0.000000
139 [-]: CLOSURE   R17 0        ; R17 := closure(Function #12.1)
140 [-]: MOVE      R0 R5        ; R0 := R5
141 [-]: MOVE      R0 R4        ; R0 := R4
142 [-]: GETUPVAL  R0 U1        ; R0 := U1
143 [-]: GETUPVAL  R0 U7        ; R0 := U7
144 [-]: CALL      R9 9 1       ; R9(R10,R11,R12,R13,R14,R15,R16,R17)
145 [-]: JMP       164          ; PC := 164
146 [-]: GETGLOBAL R9 K21       ; R9 := 0x25312c9b
147 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
148 [-]: LOADK     R11 K15      ; R11 := "InfoPanel"
149 [-]: CONST     R12 8        ; R12 := 8.000000
150 [-]: NEWTABLE  R13 1 0      ; R13 := {}
151 [-]: CONST     R14 1        ; R14 := 1.000000
152 [-]: SETLIST   R13 1 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
153 [-]: NEWTABLE  R14 1 0      ; R14 := {}
154 [-]: MOVE      R15 R4       ; R15 := R4
155 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
156 [-]: CONST     R15 0        ; R15 := 0.250000
157 [-]: CONST     R16 0        ; R16 := 0.000000
158 [-]: CLOSURE   R17 1        ; R17 := closure(Function #12.2)
159 [-]: MOVE      R0 R5        ; R0 := R5
160 [-]: GETUPVAL  R0 U1        ; R0 := U1
161 [-]: MOVE      R0 R6        ; R0 := R6
162 [-]: MOVE      R0 R8        ; R0 := R8
163 [-]: CALL      R9 9 1       ; R9(R10,R11,R12,R13,R14,R15,R16,R17)
164 [-]: SETUPVAL  R0 U0        ; U82 := R0
165 [-]: GETGLOBAL R9 K24       ; R9 := 0x9ba7909f
166 [-]: SELF      R9 R9 K25    ; R10 := R9; R9 := R9[0x7e17ae26]
167 [-]: LOADK     R11 K26      ; R11 := "WorldStateWindowVisChanged"
168 [-]: GETUPVAL  R12 U3       ; R12 := U3
169 [-]: GETTABLE  R12 R12 K3   ; R12 := R12[0x06d055f9]
170 [-]: GETUPVAL  R13 U0       ; R13 := U0
171 [-]: LOADK     R14 K27      ; R14 := "true"
172 [-]: LOADK     R15 K28      ; R15 := "false"
173 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
174 [-]: CALL      R9 0 1       ; R9(R10,...)
175 [-]: RETURN    R0 1         ; return 


; Function #12.1:
;
; Name:            
; Defined at line: 525
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: LOADK     R2 K2        ; R2 := "TopMenu.MenuList.LeftBumper"
  4 [-]: CONST     R3 8         ; R3 := 8.000000
  5 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  6 [-]: CONST     R5 10        ; R5 := 10.000000
  7 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  8 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  9 [-]: GETUPVAL  R6 U0        ; R6 := U0
 10 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 11 [-]: LOADK     R6 K4        ; R6 := 0.150000
 12 [-]: CONST     R7 0         ; R7 := 0.000000
 13 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 14 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 16 [-]: LOADK     R2 K5        ; R2 := "TopMenu.MenuList.RightBumper"
 17 [-]: CONST     R3 8         ; R3 := 8.000000
 18 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 19 [-]: CONST     R5 10        ; R5 := 10.000000
 20 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 21 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 24 [-]: LOADK     R6 K4        ; R6 := 0.150000
 25 [-]: CONST     R7 0         ; R7 := 0.000000
 26 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 27 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 28 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xaade900e]
 29 [-]: LOADK     R2 K7        ; R2 := "InfoPanel"
 30 [-]: CONST     R3 11        ; R3 := 11.000000
 31 [-]: LOADKB    R4 1 0       ; R4 := true
 32 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 33 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
 34 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 35 [-]: LOADK     R2 K7        ; R2 := "InfoPanel"
 36 [-]: CONST     R3 8         ; R3 := 8.000000
 37 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 38 [-]: CONST     R5 1         ; R5 := 1.000000
 39 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 40 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 41 [-]: GETUPVAL  R6 U1        ; R6 := U1
 42 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 43 [-]: LOADK     R6 K8        ; R6 := 0.350000
 44 [-]: CONST     R7 0         ; R7 := 0.000000
 45 [-]: CLOSURE   R8 0         ; R8 := closure(Function #12.1.1)
 46 [-]: GETUPVAL  R0 U2        ; R0 := U2
 47 [-]: GETUPVAL  R0 U3        ; R0 := U3
 48 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 49 [-]: RETURN    R0 1         ; return 


; Function #12.1.1:
;
; Name:            
; Defined at line: 530
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LOADKB    R0 0 0       ; R0 := false
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xea061e98]
 10 [-]: CLOSURE   R2 0         ; R2 := closure(Function #12.1.1.1)
 11 [-]: GETUPVAL  R0 U1        ; R0 := U1
 12 [-]: CALL      R0 3 1       ; R0(R1,R2)
 13 [-]: RETURN    R0 1         ; return 


; Function #12.1.1.1:
;
; Name:            
; Defined at line: 535
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xbe07f4f4]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #12.2:
;
; Name:            
; Defined at line: 544
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "InfoPanel"
  4 [-]: CONST     R3 11        ; R3 := 11.000000
  5 [-]: LOADKB    R4 0 0       ; R4 := false
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x25312c9b
  8 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  9 [-]: LOADK     R2 K4        ; R2 := "TopMenu.MenuList.LeftBumper"
 10 [-]: CONST     R3 8         ; R3 := 8.000000
 11 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 12 [-]: CONST     R5 10        ; R5 := 10.000000
 13 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 14 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 15 [-]: GETUPVAL  R6 U0        ; R6 := U0
 16 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 17 [-]: LOADK     R6 K6        ; R6 := 0.150000
 18 [-]: CONST     R7 0         ; R7 := 0.000000
 19 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 20 [-]: GETGLOBAL R0 K3        ; R0 := 0x25312c9b
 21 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 22 [-]: LOADK     R2 K7        ; R2 := "TopMenu.MenuList.RightBumper"
 23 [-]: CONST     R3 8         ; R3 := 8.000000
 24 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 25 [-]: CONST     R5 10        ; R5 := 10.000000
 26 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 27 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 30 [-]: LOADK     R6 K6        ; R6 := 0.150000
 31 [-]: CONST     R7 0         ; R7 := 0.000000
 32 [-]: CLOSURE   R8 0         ; R8 := closure(Function #12.2.1)
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 35 [-]: GETGLOBAL R0 K3        ; R0 := 0x25312c9b
 36 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 37 [-]: LOADK     R2 K8        ; R2 := "TopMenu.MaxMinCallout"
 38 [-]: CONST     R3 8         ; R3 := 8.000000
 39 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 40 [-]: CONST     R5 10        ; R5 := 10.000000
 41 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 42 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 43 [-]: GETUPVAL  R6 U2        ; R6 := U2
 44 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 45 [-]: LOADK     R6 K6        ; R6 := 0.150000
 46 [-]: LOADK     R7 K6        ; R7 := 0.150000
 47 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 48 [-]: GETGLOBAL R0 K3        ; R0 := 0x25312c9b
 49 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 50 [-]: LOADK     R2 K9        ; R2 := "TopMenu.MenuList"
 51 [-]: CONST     R3 8         ; R3 := 8.000000
 52 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 53 [-]: CONST     R5 0         ; R5 := 0.000000
 54 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 55 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 56 [-]: GETUPVAL  R6 U3        ; R6 := U3
 57 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 58 [-]: CONST     R6 0         ; R6 := 0.250000
 59 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 60 [-]: RETURN    R0 1         ; return 


; Function #12.2.1:
;
; Name:            
; Defined at line: 548
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 0 0       ; R0 := false
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 562
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 18
  3 [-]: JMP       18           ; PC := 18
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mSelectedElement"]
  6 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x1d246732]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mSelectedElement"]
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Id"]
 13 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x77de11fe]
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R1 3 1       ; R1(R2,R3)
 18 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 570
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  6 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xb21930e8]
  7 [-]: CALL      R0 2 1       ; R0(R1)
  8 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x27abb3c0]
 10 [-]: CONST     R2 0         ; R2 := 0.000000
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: LOADKB    R0 0 0       ; R0 := false
 13 [-]: SETUPVAL  R0 U0        ; U82 := R0
 14 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
 15 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xbcfb64ab]
 16 [-]: GETGLOBAL R2 K5        ; R2 := 0x6476f22d
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0xe4162eed]
 24 [-]: LOADK     R3 K8        ; R3 := "WSWDioramaChanged"
 25 [-]: LOADK     R4 K9        ; R4 := "false"
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 585
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xfe0d9469]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: CALL      R0 2 1       ; R0(R1)
 10 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 592
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: GETUPVAL  R0 U3        ; R0 := U3
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 602
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: CONST     R0 1         ; R0 := 1.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x1ae553af]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xc018b56e]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: DIV       R0 K3 R1     ; R0 := 1.000000 / R1
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 12 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x2cc9d281]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
 15 [-]: SUB       R2 R1 K5     ; R2 := R1 - 100.000000
 16 [-]: MUL       R2 R2 K6     ; R2 := R2 * 0.880000
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 18 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x67bc869f]
 19 [-]: LOADK     R5 K8        ; R5 := "InfoPanel.Bg"
 20 [-]: CONST     R6 13        ; R6 := 13.000000
 21 [-]: MOVE      R7 R2        ; R7 := R2
 22 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 23 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 24 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x67bc869f]
 25 [-]: LOADK     R5 K9        ; R5 := "InfoPanel.Blurer"
 26 [-]: CONST     R6 13        ; R6 := 13.000000
 27 [-]: MOVE      R7 R2        ; R7 := R2
 28 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 29 [-]: CONST     R3 70        ; R3 := 70.000000
 30 [-]: GETGLOBAL R4 K10       ; R4 := 0x7b998233
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 1         ; if R4 then PC := 54
 34 [-]: JMP       54           ; PC := 54
 35 [-]: GETGLOBAL R4 K10       ; R4 := 0x7b998233
 36 [-]: GETUPVAL  R5 U0        ; R5 := U0
 37 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mSelectedElement"]
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: TEST      R4 1         ; if R4 then PC := 54
 40 [-]: JMP       54           ; PC := 54
 41 [-]: GETUPVAL  R4 U1        ; R4 := U1
 42 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x06d055f9]
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mSelectedElement"]
 45 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["Title"]
 46 [-]: EQ        0 R5 K14     ; if R5 ~= "" then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 49
 49 [-]: LOADKB    R5 1 0       ; R5 := true
 50 [-]: MOVE      R6 R3        ; R6 := R3
 51 [-]: CONST     R7 30        ; R7 := 30.000000
 52 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 53 [-]: MOVE      R3 R4        ; R3 := R4
 54 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 55 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x67bc869f]
 56 [-]: LOADK     R6 K15       ; R6 := "InfoPanel.InfoMenuMask"
 57 [-]: CONST     R7 13        ; R7 := 13.000000
 58 [-]: SUB       R8 R2 R3     ; R8 := R2 - R3
 59 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 60 [-]: GETUPVAL  R4 U1        ; R4 := U1
 61 [-]: GETTABLE  R4 R4 K16    ; R4 := R4[0xd718f59b]
 62 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 63 [-]: SUB       R6 R2 K17    ; R6 := R2 - 5.000000
 64 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 65 [-]: GETUPVAL  R5 U1        ; R5 := U1
 66 [-]: GETTABLE  R5 R5 K18    ; R5 := R5[0xe5e5a417]
 67 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
 68 [-]: GETUPVAL  R7 U2        ; R7 := U2
 69 [-]: DIV       R8 R2 K19    ; R8 := R2 / 2.000000
 70 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 71 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 72 [-]: NEWTABLE  R6 5 0       ; R6 := {}
 73 [-]: GETGLOBAL R7 K20       ; R7 := 0x3f56a9a5
 74 [-]: GETGLOBAL R8 K21       ; R8 := 0xf9376b34
 75 [-]: GETGLOBAL R9 K22       ; R9 := 0xe3d94630
 76 [-]: GETGLOBAL R10 K23      ; R10 := 0x1a1539ea
 77 [-]: GETGLOBAL R11 K24      ; R11 := 0x1e64747e
 78 [-]: SETLIST   R6 5 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 5
 79 [-]: GETGLOBAL R7 K25       ; R7 := 0xcfc01047
 80 [-]: GETGLOBAL R8 K26       ; R8 := 0x0032441c
 81 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["UIMaterial_ArchonShardsStore"]
 82 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 83 [-]: JMP       89           ; PC := 89
 84 [-]: GETGLOBAL R12 K28      ; R12 := 0x33bdd652
 85 [-]: GETTABLE  R12 R12 K29  ; R12 := R12[0x23d5322f]
 86 [-]: MOVE      R13 R6       ; R13 := R6
 87 [-]: MOVE      R14 R11      ; R14 := R11
 88 [-]: CALL      R12 3 1      ; R12(R13,R14)
 89 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 84; R9 := R10 end
 90 [-]: JMP       84           ; PC := 84
 91 [-]: GETGLOBAL R12 K25      ; R12 := 0xcfc01047
 92 [-]: MOVE      R13 R6       ; R13 := R6
 93 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 94 [-]: JMP       105          ; PC := 105
 95 [-]: SELF      R17 R16 K30  ; R18 := R16; R17 := R16[0x830eea67]
 96 [-]: GETGLOBAL R19 K31      ; R19 := 0x6c97a788
 97 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["VISIBILITY_CENTER"]
 98 [-]: MOVE      R20 R5       ; R20 := R5
 99 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
100 [-]: SELF      R17 R16 K30  ; R18 := R16; R17 := R16[0x830eea67]
101 [-]: GETGLOBAL R19 K31      ; R19 := 0x6c97a788
102 [-]: GETTABLE  R19 R19 K33  ; R19 := R19["VISIBILITY_SIZE"]
103 [-]: MOVE      R20 R4       ; R20 := R4
104 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
105 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 95; R14 := R15 end
106 [-]: JMP       95           ; PC := 95
107 [-]: GETGLOBAL R17 K20      ; R17 := 0x3f56a9a5
108 [-]: SELF      R17 R17 K30  ; R18 := R17; R17 := R17[0x830eea67]
109 [-]: GETGLOBAL R19 K31      ; R19 := 0x6c97a788
110 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["VISIBILITY_FADE_SIZE"]
111 [-]: LOADK     R20 K35      ; R20 := 0.000500
112 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
113 [-]: GETGLOBAL R17 K21      ; R17 := 0xf9376b34
114 [-]: SELF      R17 R17 K30  ; R18 := R17; R17 := R17[0x830eea67]
115 [-]: GETGLOBAL R19 K31      ; R19 := 0x6c97a788
116 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["VISIBILITY_FADE_SIZE"]
117 [-]: LOADK     R20 K35      ; R20 := 0.000500
118 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
119 [-]: GETUPVAL  R17 U3       ; R17 := U3
120 [-]: TEST      R17 0        ; if not R17 then PC := 129
121 [-]: JMP       129          ; PC := 129
122 [-]: GETUPVAL  R17 U4       ; R17 := U4
123 [-]: NOT       R18 R17      ; R18 :=  R17
124 [-]: SETUPVAL  R18 U4       ; U82 := R4
125 [-]: GETUPVAL  R18 U5       ; R18 := U5
126 [-]: MOVE      R19 R17      ; R19 := R17
127 [-]: LOADKB    R20 1 0      ; R20 := true
128 [-]: CALL      R18 3 1      ; R18(R19,R20)
129 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 642
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91a24e4b]
  3 [-]: LOADK     R3 K2        ; R3 := "InfoPanel.Bg"
  4 [-]: CONST     R4 13        ; R4 := 13.000000
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x06d055f9]
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CONST     R4 60        ; R4 := 60.000000
 10 [-]: CONST     R5 20        ; R5 := 20.000000
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: SUB       R1 R1 R2     ; R1 := R1 - R2
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 646
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mSelectedElement"]
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["Title"]
  9 [-]: EQ        0 R2 K3      ; if R2 ~= "" then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 12
 12 [-]: LOADKB    R2 1 0       ; R2 := true
 13 [-]: GETUPVAL  R3 U1        ; R3 := U1
 14 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x68e36b8d]
 15 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 16 [-]: GETUPVAL  R6 U1        ; R6 := U1
 17 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["mElements"]
 18 [-]: LEN       R6 R6        ; R6 := # R6
 19 [-]: ADD       R6 R6 K7     ; R6 := R6 + 1.000000
 20 [-]: SETTABLE  R5 K5 R6     ; R5["mIndex"] := R6
 21 [-]: MOVE      R6 R0        ; R6 := R0
 22 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 23 [-]: GETUPVAL  R4 U2        ; R4 := U2
 24 [-]: MOVE      R5 R2        ; R5 := R2
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: DIV       R5 R4 R3     ; R5 := R4 / R3
 27 [-]: LT        1 R5 K7      ; if R5 < 1.000000 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 30
 30 [-]: LOADKB    R6 1 0       ; R6 := true
 31 [-]: GETGLOBAL R7 K8        ; R7 := 0xae91e43b
 32 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xaade900e]
 33 [-]: LOADK     R9 K10       ; R9 := "InfoPanel.ScrollBar.Scrub"
 34 [-]: CONST     R10 11       ; R10 := 11.000000
 35 [-]: MOVE      R11 R6       ; R11 := R6
 36 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 37 [-]: GETUPVAL  R7 U3        ; R7 := U3
 38 [-]: SETTABLE  R7 K11 R3    ; R7["mTotalHeight"] := R3
 39 [-]: GETUPVAL  R7 U3        ; R7 := U3
 40 [-]: SETTABLE  R7 K12 R4    ; R7["mHeight"] := R4
 41 [-]: GETUPVAL  R7 U3        ; R7 := U3
 42 [-]: CLOSURE   R8 0         ; R8 := closure(Function #19.1)
 43 [-]: GETUPVAL  R0 U1        ; R0 := U1
 44 [-]: MOVE      R0 R4        ; R0 := R4
 45 [-]: MOVE      R0 R3        ; R0 := R3
 46 [-]: SETTABLE  R7 K13 R8    ; R7["GetMenuYAtScroll"] := R8
 47 [-]: GETUPVAL  R7 U3        ; R7 := U3
 48 [-]: CLOSURE   R8 1         ; R8 := closure(Function #19.2)
 49 [-]: GETUPVAL  R0 U3        ; R0 := U3
 50 [-]: GETUPVAL  R0 U1        ; R0 := U1
 51 [-]: SETTABLE  R7 K14 R8    ; R7["mScrollValueChangedCallback"] := R8
 52 [-]: GETUPVAL  R7 U3        ; R7 := U3
 53 [-]: GETUPVAL  R8 U4        ; R8 := U4
 54 [-]: GETTABLE  R8 R8 K16    ; R8 := R8[0x06d055f9]
 55 [-]: MOVE      R9 R6        ; R9 := R6
 56 [-]: MOVE      R10 R5       ; R10 := R5
 57 [-]: CONST     R11 0        ; R11 := 0.500000
 58 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 59 [-]: SETTABLE  R7 K15 R8    ; R7["mVisibleProp"] := R8
 60 [-]: GETUPVAL  R7 U3        ; R7 := U3
 61 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0x44aa79ac]
 62 [-]: CONST     R9 0         ; R9 := 0.000000
 63 [-]: LOADKB    R10 0 0      ; R10 := false
 64 [-]: LOADKB    R11 1 0      ; R11 := true
 65 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 66 [-]: GETUPVAL  R7 U3        ; R7 := U3
 67 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0xa8854625]
 68 [-]: CALL      R7 2 1       ; R7(R8)
 69 [-]: GETUPVAL  R7 U3        ; R7 := U3
 70 [-]: SUB       R8 K7 R5     ; R8 := 1.000000 - R5
 71 [-]: GETUPVAL  R9 U1        ; R9 := U1
 72 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mElements"]
 73 [-]: LEN       R9 R9        ; R9 := # R9
 74 [-]: ADD       R9 R9 K7     ; R9 := R9 + 1.000000
 75 [-]: MUL       R8 R8 R9     ; R8 := R8 * R9
 76 [-]: DIV       R8 K7 R8     ; R8 := 1.000000 / R8
 77 [-]: ADD       R8 R8 K20    ; R8 := R8 + 0.050000
 78 [-]: SETTABLE  R7 K19 R8    ; R7["mScrollStep"] := R8
 79 [-]: GETUPVAL  R7 U3        ; R7 := U3
 80 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0x0077d753]
 81 [-]: MOVE      R9 R6        ; R9 := R6
 82 [-]: CALL      R7 3 1       ; R7(R8,R9)
 83 [-]: RETURN    R0 1         ; return 


; Function #19.1:
;
; Name:            
; Defined at line: 658
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mCurrYPos"]
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETUPVAL  R4 U2        ; R4 := U2
  5 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
  6 [-]: MUL       R3 R3 R1     ; R3 := R3 * R1
  7 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: RETURN    R0 1         ; return 


; Function #19.2:
;
; Name:            
; Defined at line: 662
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x67bc869f]
  3 [-]: LOADK     R4 K2        ; R4 := "InfoPanel.InfoMenu"
  4 [-]: CONST     R5 1         ; R5 := 1.000000
  5 [-]: GETUPVAL  R6 U0        ; R6 := U0
  6 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x430251e8]
  7 [-]: MOVE      R8 R0        ; R8 := R0
  8 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
  9 [-]: CALL      R2 0 1       ; R2(R3,...)
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xea061e98]
 12 [-]: CLOSURE   R4 0         ; R4 := closure(Function #19.2.1)
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: CALL      R2 3 1       ; R2(R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #19.2.1:
;
; Name:            
; Defined at line: 666
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xbe07f4f4]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 677
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  60

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: SETTABLE  R0 K0 R3     ; R0["RewardTable"] := R3
  3 [-]: SETTABLE  R0 K1 K2     ; R0["EarnedReward"] := false
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: CALL      R3 1 2       ; R3 := R3()
  6 [-]: LOADNIL   R4 R4        ; R4 := nil
  7 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
  8 [-]: MOVE      R6 R3        ; R6 := R3
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: TEST      R5 1         ; if R5 then PC := 42
 11 [-]: JMP       42           ; PC := 42
 12 [-]: GETUPVAL  R5 U1        ; R5 := U1
 13 [-]: GETTABLE  R5 R5 K4     ; R5 := R5[0x06d055f9]
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: SELF      R7 R3 K5     ; R8 := R3; R7 := R3[0xfa96a013]
 16 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 17 [-]: SELF      R8 R3 K6     ; R9 := R3; R8 := R3[0xbb836e07]
 18 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 19 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 20 [-]: MOVE      R4 R5        ; R4 := R5
 21 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 22 [-]: MOVE      R6 R4        ; R6 := R4
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: TEST      R5 1         ; if R5 then PC := 41
 25 [-]: JMP       41           ; PC := 41
 26 [-]: LEN       R5 R4        ; R5 := # R4
 27 [-]: EQ        1 R5 K7      ; if R5 == 0.000000 then PC := 41
 28 [-]: JMP       41           ; PC := 41
 29 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 30 [-]: MOVE      R6 R1        ; R6 := R1
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: TEST      R5 1         ; if R5 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1[0xf2deaf69]
 35 [-]: LEN       R7 R4        ; R7 := # R4
 36 [-]: GETTABLE  R7 R4 R7     ; R7 := R4[R7]
 37 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["mManifest"]
 38 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 39 [-]: TEST      R5 1         ; if R5 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADNIL   R4 R4        ; R4 := nil
 42 [-]: SELF      R5 R1 K10    ; R6 := R1; R5 := R1[0xb4ef819f]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: NEWTABLE  R6 0 4       ; R6 := {}
 45 [-]: GETGLOBAL R7 K12       ; R7 := 0xae91e43b
 46 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0x42b04007]
 47 [-]: LOADK     R9 K14       ; R9 := "/Lotus/Language/Menu/Loadout_Lens"
 48 [-]: LOADKB    R10 0 0      ; R10 := false
 49 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 50 [-]: SETTABLE  R6 K11 R7    ; R6["t"] := R7
 51 [-]: SETTABLE  R6 K15 K16   ; R6["Reward"] := nil
 52 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 53 [-]: SETTABLE  R6 K17 R7    ; R6["Rewards"] := R7
 54 [-]: SETTABLE  R6 K18 K7    ; R6["Prob"] := 0.000000
 55 [-]: NEWTABLE  R7 0 4       ; R7 := {}
 56 [-]: GETGLOBAL R8 K12       ; R8 := 0xae91e43b
 57 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x42b04007]
 58 [-]: LOADK     R10 K19      ; R10 := "/Lotus/Language/Menu/WorldStatePanel_GreaterFocusLensReward"
 59 [-]: LOADKB    R11 0 0      ; R11 := false
 60 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 61 [-]: SETTABLE  R7 K11 R8    ; R7["t"] := R8
 62 [-]: SETTABLE  R7 K15 K16   ; R7["Reward"] := nil
 63 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 64 [-]: SETTABLE  R7 K17 R8    ; R7["Rewards"] := R8
 65 [-]: SETTABLE  R7 K18 K7    ; R7["Prob"] := 0.000000
 66 [-]: NEWTABLE  R8 0 4       ; R8 := {}
 67 [-]: GETGLOBAL R9 K12       ; R9 := 0xae91e43b
 68 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0x42b04007]
 69 [-]: LOADK     R11 K20      ; R11 := "/Lotus/Language/Menu/WorldStatePanel_BoosterReward"
 70 [-]: LOADKB    R12 0 0      ; R12 := false
 71 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 72 [-]: SETTABLE  R8 K11 R9    ; R8["t"] := R9
 73 [-]: SETTABLE  R8 K15 K16   ; R8["Reward"] := nil
 74 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 75 [-]: SETTABLE  R8 K17 R9    ; R8["Rewards"] := R9
 76 [-]: SETTABLE  R8 K18 K7    ; R8["Prob"] := 0.000000
 77 [-]: NEWTABLE  R9 0 4       ; R9 := {}
 78 [-]: GETGLOBAL R10 K12      ; R10 := 0xae91e43b
 79 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0x42b04007]
 80 [-]: LOADK     R12 K21      ; R12 := "/Lotus/Language/Items/OmegaModGenericName"
 81 [-]: LOADKB    R13 0 0      ; R13 := false
 82 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 83 [-]: SETTABLE  R9 K11 R10   ; R9["t"] := R10
 84 [-]: SETTABLE  R9 K15 K16   ; R9["Reward"] := nil
 85 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 86 [-]: SETTABLE  R9 K17 R10   ; R9["Rewards"] := R10
 87 [-]: SETTABLE  R9 K18 K7    ; R9["Prob"] := 0.000000
 88 [-]: GETGLOBAL R10 K22      ; R10 := 0x7ed0a956
 89 [-]: LOADK     R11 K23      ; R11 := "/Lotus/Types/Boosters/BoosterBase"
 90 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 91 [-]: GETGLOBAL R11 K22      ; R11 := 0x7ed0a956
 92 [-]: LOADK     R12 K24      ; R12 := "/Lotus/Types/Game/RawRandomizedArtifactUpgrade"
 93 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 94 [-]: CONST     R12 0        ; R12 := 0.000000
 95 [-]: MOVE      R13 R5       ; R13 := R5
 96 [-]: CONST     R14 1        ; R14 := 1.000000
 97 [-]: FORPREP   R12 302      ; R12 -= R14; PC := 302
 98 [-]: SELF      R16 R1 K25   ; R17 := R1; R16 := R1[0x509d9f9e]
 99 [-]: MOVE      R18 R15      ; R18 := R15
100 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
101 [-]: CONST     R17 0        ; R17 := 0.000000
102 [-]: SUB       R18 R16 K26  ; R18 := R16 - 1.000000
103 [-]: CONST     R19 1        ; R19 := 1.000000
104 [-]: FORPREP   R17 301      ; R17 -= R19; PC := 301
105 [-]: SELF      R21 R1 K27   ; R22 := R1; R21 := R1[0x04d63414]
106 [-]: MOVE      R23 R15      ; R23 := R15
107 [-]: MOVE      R24 R20      ; R24 := R20
108 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
109 [-]: GETGLOBAL R22 K3       ; R22 := 0x7b998233
110 [-]: MOVE      R23 R21      ; R23 := R21
111 [-]: CALL      R22 2 2      ; R22 := R22(R23)
112 [-]: TEST      R22 1        ; if R22 then PC := 301
113 [-]: JMP       301          ; PC := 301
114 [-]: GETTABLE  R22 R21 K28  ; R22 := R21["mStoreItem"]
115 [-]: GETGLOBAL R23 K12      ; R23 := 0xae91e43b
116 [-]: SELF      R23 R23 K13  ; R24 := R23; R23 := R23[0x42b04007]
117 [-]: GETGLOBAL R25 K29      ; R25 := 0x64fb1586
118 [-]: SELF      R26 R22 K30  ; R27 := R22; R26 := R22[0xd3a9d01f]
119 [-]: CALL      R26 2 0      ; R26,... := R26(R27)
120 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
121 [-]: LOADKB    R26 0 0      ; R26 := false
122 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
123 [-]: GETTABLE  R24 R21 K28  ; R24 := R21["mStoreItem"]
124 [-]: SELF      R24 R24 K31  ; R25 := R24; R24 := R24[0xf278f8a1]
125 [-]: CALL      R24 2 2      ; R24 := R24(R25)
126 [-]: LOADKB    R25 1 0      ; R25 := true
127 [-]: CONST     R26 0        ; R26 := 0.000000
128 [-]: SELF      R27 R1 K32   ; R28 := R1; R27 := R1[0x10813400]
129 [-]: MOVE      R29 R15      ; R29 := R15
130 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
131 [-]: TEST      R27 0        ; if not R27 then PC := 135
132 [-]: JMP       135          ; PC := 135
133 [-]: GETTABLE  R26 R21 K33  ; R26 := R21["mProbability"]
134 [-]: JMP       140          ; PC := 140
135 [-]: GETTABLE  R27 R21 K34  ; R27 := R21["mBiasedProb"]
136 [-]: GETUPVAL  R28 U2       ; R28 := U2
137 [-]: ADD       R29 R15 K26  ; R29 := R15 + 1.000000
138 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
139 [-]: MUL       R26 R27 R28  ; R26 := R27 * R28
140 [-]: GETGLOBAL R27 K3       ; R27 := 0x7b998233
141 [-]: MOVE      R28 R24      ; R28 := R24
142 [-]: CALL      R27 2 2      ; R27 := R27(R28)
143 [-]: TEST      R27 1        ; if R27 then PC := 291
144 [-]: JMP       291          ; PC := 291
145 [-]: SELF      R27 R24 K8   ; R28 := R24; R27 := R24[0xf2deaf69]
146 [-]: GETGLOBAL R29 K35      ; R29 := gRecipeItemType
147 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
148 [-]: TEST      R27 0        ; if not R27 then PC := 159
149 [-]: JMP       159          ; PC := 159
150 [-]: GETGLOBAL R27 K12      ; R27 := 0xae91e43b
151 [-]: SELF      R27 R27 K13  ; R28 := R27; R27 := R27[0x42b04007]
152 [-]: LOADK     R29 K36      ; R29 := "/Lotus/Language/Items/BlueprintAndItem"
153 [-]: LOADKB    R30 0 0      ; R30 := false
154 [-]: NEWTABLE  R31 0 1      ; R31 := {}
155 [-]: SETTABLE  R31 K37 R23  ; R31["ITEM"] := R23
156 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
157 [-]: MOVE      R23 R27      ; R23 := R27
158 [-]: JMP       291          ; PC := 291
159 [-]: SELF      R27 R24 K8   ; R28 := R24; R27 := R24[0xf2deaf69]
160 [-]: GETGLOBAL R29 K38      ; R29 := gFusionBundleType
161 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
162 [-]: TEST      R27 0        ; if not R27 then PC := 176
163 [-]: JMP       176          ; PC := 176
164 [-]: SELF      R27 R22 K39  ; R28 := R22; R27 := R22[0x4e485a6f]
165 [-]: CALL      R27 2 2      ; R27 := R27(R28)
166 [-]: UNM       R27 R27      ; R27 :=  R27
167 [-]: GETUPVAL  R28 U1       ; R28 := U1
168 [-]: GETTABLE  R28 R28 K40  ; R28 := R28[0x1142c7a8]
169 [-]: GETTABLE  R29 R21 K41  ; R29 := R21["mItemCount"]
170 [-]: MUL       R29 R27 R29  ; R29 := R27 * R29
171 [-]: CALL      R28 2 2      ; R28 := R28(R29)
172 [-]: LOADK     R29 K42      ; R29 := " "
173 [-]: MOVE      R30 R23      ; R30 := R23
174 [-]: CONCAT    R23 R28 R30  ; R23 := R28 .. R29 .. R30
175 [-]: JMP       291          ; PC := 291
176 [-]: SELF      R28 R24 K8   ; R29 := R24; R28 := R24[0xf2deaf69]
177 [-]: GETGLOBAL R30 K43      ; R30 := gFocusLensType
178 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
179 [-]: TEST      R28 0        ; if not R28 then PC := 213
180 [-]: JMP       213          ; PC := 213
181 [-]: SELF      R28 R24 K8   ; R29 := R24; R28 := R24[0xf2deaf69]
182 [-]: GETUPVAL  R30 U3       ; R30 := U3
183 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
184 [-]: TEST      R28 0        ; if not R28 then PC := 199
185 [-]: JMP       199          ; PC := 199
186 [-]: GETTABLE  R28 R7 K18   ; R28 := R7["Prob"]
187 [-]: ADD       R28 R28 R26  ; R28 := R28 + R26
188 [-]: SETTABLE  R7 K18 R28   ; R7["Prob"] := R28
189 [-]: GETGLOBAL R28 K44      ; R28 := 0x33bdd652
190 [-]: GETTABLE  R28 R28 K45  ; R28 := R28[0x23d5322f]
191 [-]: GETTABLE  R29 R7 K17   ; R29 := R7["Rewards"]
192 [-]: MOVE      R30 R21      ; R30 := R21
193 [-]: CALL      R28 3 1      ; R28(R29,R30)
194 [-]: GETTABLE  R28 R7 K15   ; R28 := R7["Reward"]
195 [-]: EQ        0 R28 K16    ; if R28 ~= nil then PC := 211
196 [-]: JMP       211          ; PC := 211
197 [-]: SETTABLE  R7 K15 R21   ; R7["Reward"] := R21
198 [-]: JMP       211          ; PC := 211
199 [-]: GETTABLE  R28 R6 K18   ; R28 := R6["Prob"]
200 [-]: ADD       R28 R28 R26  ; R28 := R28 + R26
201 [-]: SETTABLE  R6 K18 R28   ; R6["Prob"] := R28
202 [-]: GETGLOBAL R28 K44      ; R28 := 0x33bdd652
203 [-]: GETTABLE  R28 R28 K45  ; R28 := R28[0x23d5322f]
204 [-]: GETTABLE  R29 R6 K17   ; R29 := R6["Rewards"]
205 [-]: MOVE      R30 R21      ; R30 := R21
206 [-]: CALL      R28 3 1      ; R28(R29,R30)
207 [-]: GETTABLE  R28 R6 K15   ; R28 := R6["Reward"]
208 [-]: EQ        0 R28 K16    ; if R28 ~= nil then PC := 211
209 [-]: JMP       211          ; PC := 211
210 [-]: SETTABLE  R6 K15 R21   ; R6["Reward"] := R21
211 [-]: LOADKB    R25 0 0      ; R25 := false
212 [-]: JMP       291          ; PC := 291
213 [-]: SELF      R28 R24 K8   ; R29 := R24; R28 := R24[0xf2deaf69]
214 [-]: MOVE      R30 R11      ; R30 := R11
215 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
216 [-]: TEST      R28 0        ; if not R28 then PC := 232
217 [-]: JMP       232          ; PC := 232
218 [-]: GETTABLE  R28 R9 K18   ; R28 := R9["Prob"]
219 [-]: ADD       R28 R28 R26  ; R28 := R28 + R26
220 [-]: SETTABLE  R9 K18 R28   ; R9["Prob"] := R28
221 [-]: GETGLOBAL R28 K44      ; R28 := 0x33bdd652
222 [-]: GETTABLE  R28 R28 K45  ; R28 := R28[0x23d5322f]
223 [-]: GETTABLE  R29 R9 K17   ; R29 := R9["Rewards"]
224 [-]: MOVE      R30 R21      ; R30 := R21
225 [-]: CALL      R28 3 1      ; R28(R29,R30)
226 [-]: GETTABLE  R28 R9 K15   ; R28 := R9["Reward"]
227 [-]: EQ        0 R28 K16    ; if R28 ~= nil then PC := 230
228 [-]: JMP       230          ; PC := 230
229 [-]: SETTABLE  R9 K15 R21   ; R9["Reward"] := R21
230 [-]: LOADKB    R25 0 0      ; R25 := false
231 [-]: JMP       291          ; PC := 291
232 [-]: SELF      R28 R24 K8   ; R29 := R24; R28 := R24[0xf2deaf69]
233 [-]: MOVE      R30 R10      ; R30 := R10
234 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
235 [-]: TEST      R28 0        ; if not R28 then PC := 251
236 [-]: JMP       251          ; PC := 251
237 [-]: GETTABLE  R28 R8 K18   ; R28 := R8["Prob"]
238 [-]: ADD       R28 R28 R26  ; R28 := R28 + R26
239 [-]: SETTABLE  R8 K18 R28   ; R8["Prob"] := R28
240 [-]: GETGLOBAL R28 K44      ; R28 := 0x33bdd652
241 [-]: GETTABLE  R28 R28 K45  ; R28 := R28[0x23d5322f]
242 [-]: GETTABLE  R29 R8 K17   ; R29 := R8["Rewards"]
243 [-]: MOVE      R30 R21      ; R30 := R21
244 [-]: CALL      R28 3 1      ; R28(R29,R30)
245 [-]: GETTABLE  R28 R8 K15   ; R28 := R8["Reward"]
246 [-]: EQ        0 R28 K16    ; if R28 ~= nil then PC := 249
247 [-]: JMP       249          ; PC := 249
248 [-]: SETTABLE  R8 K15 R21   ; R8["Reward"] := R21
249 [-]: LOADKB    R25 0 0      ; R25 := false
250 [-]: JMP       291          ; PC := 291
251 [-]: GETTABLE  R28 R21 K41  ; R28 := R21["mItemCount"]
252 [-]: LT        0 K26 R28    ; if 1.000000 >= R28 then PC := 291
253 [-]: JMP       291          ; PC := 291
254 [-]: SELF      R28 R22 K46  ; R29 := R22; R28 := R22[0xfe9eb1a5]
255 [-]: CALL      R28 2 2      ; R28 := R28(R29)
256 [-]: EQ        0 R28 K48    ; if R28 ~= 35.000000 then PC := 278
257 [-]: JMP       278          ; PC := 278
258 [-]: SELF      R28 R22 K39  ; R29 := R22; R28 := R22[0x4e485a6f]
259 [-]: CALL      R28 2 2      ; R28 := R28(R29)
260 [-]: UNM       R28 R28      ; R28 :=  R28
261 [-]: GETTABLE  R29 R21 K41  ; R29 := R21["mItemCount"]
262 [-]: MUL       R28 R28 R29  ; R28 := R28 * R29
263 [-]: GETUPVAL  R29 U1       ; R29 := U1
264 [-]: GETTABLE  R29 R29 K40  ; R29 := R29[0x1142c7a8]
265 [-]: MOVE      R30 R28      ; R30 := R28
266 [-]: CALL      R29 2 2      ; R29 := R29(R30)
267 [-]: LOADK     R30 K42      ; R30 := " "
268 [-]: GETGLOBAL R31 K12      ; R31 := 0xae91e43b
269 [-]: SELF      R31 R31 K13  ; R32 := R31; R31 := R31[0x42b04007]
270 [-]: SELF      R33 R22 K30  ; R34 := R22; R33 := R22[0xd3a9d01f]
271 [-]: CALL      R33 2 2      ; R33 := R33(R34)
272 [-]: SELF      R33 R33 K49  ; R34 := R33; R33 := R33[0x6d604ba7]
273 [-]: CALL      R33 2 2      ; R33 := R33(R34)
274 [-]: LOADKB    R34 0 0      ; R34 := false
275 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
276 [-]: CONCAT    R23 R29 R31  ; R23 := R29 .. R30 .. R31
277 [-]: JMP       291          ; PC := 291
278 [-]: GETGLOBAL R29 K12      ; R29 := 0xae91e43b
279 [-]: SELF      R29 R29 K13  ; R30 := R29; R29 := R29[0x42b04007]
280 [-]: LOADK     R31 K50      ; R31 := "/Lotus/Language/Items/LargeBatchItem"
281 [-]: LOADKB    R32 0 0      ; R32 := false
282 [-]: NEWTABLE  R33 0 2      ; R33 := {}
283 [-]: SETTABLE  R33 K37 R23  ; R33["ITEM"] := R23
284 [-]: GETUPVAL  R34 U1       ; R34 := U1
285 [-]: GETTABLE  R34 R34 K40  ; R34 := R34[0x1142c7a8]
286 [-]: GETTABLE  R35 R21 K41  ; R35 := R21["mItemCount"]
287 [-]: CALL      R34 2 2      ; R34 := R34(R35)
288 [-]: SETTABLE  R33 K51 R34  ; R33["NUM"] := R34
289 [-]: CALL      R29 5 2      ; R29 := R29(R30,R31,R32,R33)
290 [-]: MOVE      R23 R29      ; R23 := R29
291 [-]: TEST      R25 0        ; if not R25 then PC := 301
292 [-]: JMP       301          ; PC := 301
293 [-]: GETGLOBAL R29 K44      ; R29 := 0x33bdd652
294 [-]: GETTABLE  R29 R29 K45  ; R29 := R29[0x23d5322f]
295 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["RewardTable"]
296 [-]: NEWTABLE  R31 0 3      ; R31 := {}
297 [-]: SETTABLE  R31 K11 R23  ; R31["t"] := R23
298 [-]: SETTABLE  R31 K15 R21  ; R31["Reward"] := R21
299 [-]: SETTABLE  R31 K18 R26  ; R31["Prob"] := R26
300 [-]: CALL      R29 3 1      ; R29(R30,R31)
301 [-]: FORLOOP   R17 105      ; R17 += R19; if R17 <= R18 then begin PC := 105; R20 := R17 end
302 [-]: FORLOOP   R12 98       ; R12 += R14; if R12 <= R13 then begin PC := 98; R15 := R12 end
303 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
304 [-]: GETTABLE  R30 R6 K15   ; R30 := R6["Reward"]
305 [-]: CALL      R29 2 2      ; R29 := R29(R30)
306 [-]: TEST      R29 1        ; if R29 then PC := 313
307 [-]: JMP       313          ; PC := 313
308 [-]: GETGLOBAL R29 K44      ; R29 := 0x33bdd652
309 [-]: GETTABLE  R29 R29 K45  ; R29 := R29[0x23d5322f]
310 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["RewardTable"]
311 [-]: MOVE      R31 R6       ; R31 := R6
312 [-]: CALL      R29 3 1      ; R29(R30,R31)
313 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
314 [-]: GETTABLE  R30 R7 K15   ; R30 := R7["Reward"]
315 [-]: CALL      R29 2 2      ; R29 := R29(R30)
316 [-]: TEST      R29 1        ; if R29 then PC := 323
317 [-]: JMP       323          ; PC := 323
318 [-]: GETGLOBAL R29 K44      ; R29 := 0x33bdd652
319 [-]: GETTABLE  R29 R29 K45  ; R29 := R29[0x23d5322f]
320 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["RewardTable"]
321 [-]: MOVE      R31 R7       ; R31 := R7
322 [-]: CALL      R29 3 1      ; R29(R30,R31)
323 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
324 [-]: GETTABLE  R30 R8 K15   ; R30 := R8["Reward"]
325 [-]: CALL      R29 2 2      ; R29 := R29(R30)
326 [-]: TEST      R29 1        ; if R29 then PC := 333
327 [-]: JMP       333          ; PC := 333
328 [-]: GETGLOBAL R29 K44      ; R29 := 0x33bdd652
329 [-]: GETTABLE  R29 R29 K45  ; R29 := R29[0x23d5322f]
330 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["RewardTable"]
331 [-]: MOVE      R31 R8       ; R31 := R8
332 [-]: CALL      R29 3 1      ; R29(R30,R31)
333 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
334 [-]: GETTABLE  R30 R9 K15   ; R30 := R9["Reward"]
335 [-]: CALL      R29 2 2      ; R29 := R29(R30)
336 [-]: TEST      R29 1        ; if R29 then PC := 343
337 [-]: JMP       343          ; PC := 343
338 [-]: GETGLOBAL R29 K44      ; R29 := 0x33bdd652
339 [-]: GETTABLE  R29 R29 K45  ; R29 := R29[0x23d5322f]
340 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["RewardTable"]
341 [-]: MOVE      R31 R9       ; R31 := R9
342 [-]: CALL      R29 3 1      ; R29(R30,R31)
343 [-]: GETGLOBAL R29 K12      ; R29 := 0xae91e43b
344 [-]: SELF      R29 R29 K13  ; R30 := R29; R29 := R29[0x42b04007]
345 [-]: LOADK     R31 K52      ; R31 := "<CHECKMARK_NO_BORDER>"
346 [-]: LOADKB    R32 1 0      ; R32 := true
347 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
348 [-]: GETGLOBAL R30 K53      ; R30 := 0xcfc01047
349 [-]: GETTABLE  R31 R0 K0    ; R31 := R0["RewardTable"]
350 [-]: CALL      R30 2 4      ; R30,R31,R32 := R30(R31)
351 [-]: JMP       472          ; PC := 472
352 [-]: CONST     R35 1        ; R35 := 1.000000
353 [-]: GETUPVAL  R36 U4       ; R36 := U4
354 [-]: LEN       R36 R36      ; R36 := # R36
355 [-]: CONST     R37 1        ; R37 := 1.000000
356 [-]: FORPREP   R35 365      ; R35 -= R37; PC := 365
357 [-]: GETTABLE  R39 R34 K18  ; R39 := R34["Prob"]
358 [-]: GETUPVAL  R40 U4       ; R40 := U4
359 [-]: GETTABLE  R40 R40 R38  ; R40 := R40[R38]
360 [-]: LE        0 R40 R39    ; if R40 > R39 then PC := 365
361 [-]: JMP       365          ; PC := 365
362 [-]: SUB       R39 R38 K26  ; R39 := R38 - 1.000000
363 [-]: SETTABLE  R34 K54 R39  ; R34["r"] := R39
364 [-]: JMP       366          ; PC := 366
365 [-]: FORLOOP   R35 357      ; R35 += R37; if R35 <= R36 then begin PC := 357; R38 := R35 end
366 [-]: TEST      R4 0         ; if not R4 then PC := 472
367 [-]: JMP       472          ; PC := 472
368 [-]: GETGLOBAL R39 K29      ; R39 := 0x64fb1586
369 [-]: GETTABLE  R40 R34 K15  ; R40 := R34["Reward"]
370 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["mStoreItem"]
371 [-]: SELF      R40 R40 K55  ; R41 := R40; R40 := R40[0xed4e0128]
372 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
373 [-]: CALL      R39 0 2      ; R39 := R39(R40,...)
374 [-]: GETTABLE  R40 R34 K15  ; R40 := R34["Reward"]
375 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["mStoreItem"]
376 [-]: SELF      R40 R40 K31  ; R41 := R40; R40 := R40[0xf278f8a1]
377 [-]: CALL      R40 2 2      ; R40 := R40(R41)
378 [-]: GETTABLE  R41 R34 K15  ; R41 := R34["Reward"]
379 [-]: GETTABLE  R41 R41 K41  ; R41 := R41["mItemCount"]
380 [-]: LT        0 K26 R41    ; if 1.000000 >= R41 then PC := 392
381 [-]: JMP       392          ; PC := 392
382 [-]: GETGLOBAL R41 K3       ; R41 := 0x7b998233
383 [-]: MOVE      R42 R40      ; R42 := R40
384 [-]: CALL      R41 2 2      ; R41 := R41(R42)
385 [-]: TEST      R41 1        ; if R41 then PC := 394
386 [-]: JMP       394          ; PC := 394
387 [-]: SELF      R41 R40 K8   ; R42 := R40; R41 := R40[0xf2deaf69]
388 [-]: GETGLOBAL R43 K38      ; R43 := gFusionBundleType
389 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
390 [-]: NOT       R41 R41      ; R41 :=  R41
391 [-]: JMP       394          ; PC := 394
392 [-]: LOADKB    R41 0 1      ; R41 := false; PC := 393
393 [-]: LOADKB    R41 1 0      ; R41 := true
394 [-]: TEST      R41 0        ; if not R41 then PC := 400
395 [-]: JMP       400          ; PC := 400
396 [-]: MOVE      R42 R39      ; R42 := R39
397 [-]: GETTABLE  R43 R34 K15  ; R43 := R34["Reward"]
398 [-]: GETTABLE  R43 R43 K41  ; R43 := R43["mItemCount"]
399 [-]: CONCAT    R39 R42 R43  ; R39 := R42 .. R43
400 [-]: TEST      R41 1        ; if R41 then PC := 410
401 [-]: JMP       410          ; PC := 410
402 [-]: GETTABLE  R42 R34 K15  ; R42 := R34["Reward"]
403 [-]: GETTABLE  R42 R42 K41  ; R42 := R42["mItemCount"]
404 [-]: LT        0 K26 R42    ; if 1.000000 >= R42 then PC := 410
405 [-]: JMP       410          ; PC := 410
406 [-]: MOVE      R42 R39      ; R42 := R39
407 [-]: GETTABLE  R43 R34 K15  ; R43 := R34["Reward"]
408 [-]: GETTABLE  R43 R43 K41  ; R43 := R43["mItemCount"]
409 [-]: CONCAT    R39 R42 R43  ; R39 := R42 .. R43
410 [-]: LOADKB    R42 0 0      ; R42 := false
411 [-]: GETGLOBAL R43 K53      ; R43 := 0xcfc01047
412 [-]: MOVE      R44 R4       ; R44 := R4
413 [-]: CALL      R43 2 4      ; R43,R44,R45 := R43(R44)
414 [-]: JMP       462          ; PC := 462
415 [-]: GETGLOBAL R48 K29      ; R48 := 0x64fb1586
416 [-]: GETTABLE  R49 R47 K28  ; R49 := R47["mStoreItem"]
417 [-]: CALL      R48 2 2      ; R48 := R48(R49)
418 [-]: EQ        1 R48 R39    ; if R48 == R39 then PC := 421
419 [-]: JMP       421          ; PC := 421
420 [-]: LOADKB    R49 0 1      ; R49 := false; PC := 421
421 [-]: LOADKB    R49 1 0      ; R49 := true
422 [-]: TEST      R49 1        ; if R49 then PC := 444
423 [-]: JMP       444          ; PC := 444
424 [-]: GETGLOBAL R50 K3       ; R50 := 0x7b998233
425 [-]: GETTABLE  R51 R34 K17  ; R51 := R34["Rewards"]
426 [-]: CALL      R50 2 2      ; R50 := R50(R51)
427 [-]: TEST      R50 1        ; if R50 then PC := 444
428 [-]: JMP       444          ; PC := 444
429 [-]: GETGLOBAL R50 K53      ; R50 := 0xcfc01047
430 [-]: GETTABLE  R51 R34 K17  ; R51 := R34["Rewards"]
431 [-]: CALL      R50 2 4      ; R50,R51,R52 := R50(R51)
432 [-]: JMP       442          ; PC := 442
433 [-]: GETGLOBAL R55 K29      ; R55 := 0x64fb1586
434 [-]: GETTABLE  R56 R54 K28  ; R56 := R54["mStoreItem"]
435 [-]: SELF      R56 R56 K55  ; R57 := R56; R56 := R56[0xed4e0128]
436 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
437 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
438 [-]: EQ        0 R48 R55    ; if R48 ~= R55 then PC := 442
439 [-]: JMP       442          ; PC := 442
440 [-]: LOADKB    R49 1 0      ; R49 := true
441 [-]: JMP       444          ; PC := 444
442 [-]: TFORLOOP  R50 2        ; R53,R54 :=  R50(R51,R52); if R53 ~= nil then begin PC = 433; R52 := R53 end
443 [-]: JMP       433          ; PC := 433
444 [-]: TEST      R49 0        ; if not R49 then PC := 462
445 [-]: JMP       462          ; PC := 462
446 [-]: TEST      R42 1        ; if R42 then PC := 462
447 [-]: JMP       462          ; PC := 462
448 [-]: GETTABLE  R55 R47 K56  ; R55 := R47["mSortieId"]
449 [-]: GETTABLE  R55 R55 K57  ; R55 := R55["mId"]
450 [-]: GETUPVAL  R56 U1       ; R56 := U1
451 [-]: GETTABLE  R56 R56 K4   ; R56 := R56[0x06d055f9]
452 [-]: MOVE      R57 R2       ; R57 := R2
453 [-]: GETGLOBAL R58 K58      ; R58 := _T
454 [-]: GETTABLE  R58 R58 K59  ; R58 := R58["CachedLiteSortieId"]
455 [-]: GETGLOBAL R59 K58      ; R59 := _T
456 [-]: GETTABLE  R59 R59 K60  ; R59 := R59["CachedSortieId"]
457 [-]: CALL      R56 4 2      ; R56 := R56(R57,R58,R59)
458 [-]: EQ        1 R55 R56    ; if R55 == R56 then PC := 461
459 [-]: JMP       461          ; PC := 461
460 [-]: LOADKB    R42 0 1      ; R42 := false; PC := 461
461 [-]: LOADKB    R42 1 0      ; R42 := true
462 [-]: TFORLOOP  R43 2        ; R46,R47 :=  R43(R44,R45); if R46 ~= nil then begin PC = 415; R45 := R46 end
463 [-]: JMP       415          ; PC := 415
464 [-]: TEST      R42 0        ; if not R42 then PC := 472
465 [-]: JMP       472          ; PC := 472
466 [-]: MOVE      R55 R29      ; R55 := R29
467 [-]: LOADK     R56 K42      ; R56 := " "
468 [-]: GETTABLE  R57 R34 K11  ; R57 := R34["t"]
469 [-]: CONCAT    R55 R55 R57  ; R55 := R55 .. R56 .. R57
470 [-]: SETTABLE  R34 K11 R55  ; R34["t"] := R55
471 [-]: SETTABLE  R0 K1 K61    ; R0["EarnedReward"] := true
472 [-]: TFORLOOP  R30 2        ; R33,R34 :=  R30(R31,R32); if R33 ~= nil then begin PC = 352; R32 := R33 end
473 [-]: JMP       352          ; PC := 352
474 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 839
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: CONST     R1 0         ; R1 := 0.000000
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0xcfc01047
  4 [-]: GETGLOBAL R3 K1        ; R3 := _T
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["CachedLiteSortieMissions"]
  6 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETTABLE  R7 R6 K3     ; R7 := R6["mVisible"]
  9 [-]: TEST      R7 0         ; if not R7 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R7 K4        ; R7 := 0x33bdd652
 12 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x23d5322f]
 13 [-]: MOVE      R8 R0        ; R8 := R0
 14 [-]: MOVE      R9 R6        ; R9 := R6
 15 [-]: CALL      R7 3 1       ; R7(R8,R9)
 16 [-]: ADD       R1 R1 K6     ; R1 := R1 + 1.000000
 17 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 8; R4 := R5 end
 18 [-]: JMP       8            ; PC := 8
 19 [-]: GETGLOBAL R7 K4        ; R7 := 0x33bdd652
 20 [-]: GETTABLE  R7 R7 K7     ; R7 := R7[0xf21b1d8e]
 21 [-]: MOVE      R8 R0        ; R8 := R0
 22 [-]: CLOSURE   R9 0         ; R9 := closure(Function #21.1)
 23 [-]: CALL      R7 3 1       ; R7(R8,R9)
 24 [-]: LOADKB    R7 0 0       ; R7 := false
 25 [-]: EQ        0 R1 K8      ; if R1 ~= 0.000000 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETUPVAL  R8 U0        ; R8 := U0
 28 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8[0xbad4316f]
 29 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 30 [-]: GETUPVAL  R11 U1       ; R11 := U1
 31 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["LITE_SORTIE"]
 32 [-]: SETTABLE  R10 K10 R11  ; R10["EntryId"] := R11
 33 [-]: SETTABLE  R10 K12 K6   ; R10["mMissionNumber"] := 1.000000
 34 [-]: SETTABLE  R10 K13 K14  ; R10["mIsUnlockHint"] := true
 35 [-]: LOADKB    R11 1 0      ; R11 := true
 36 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 37 [-]: JMP       171          ; PC := 171
 38 [-]: GETUPVAL  R8 U0        ; R8 := U0
 39 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8[0xbad4316f]
 40 [-]: NEWTABLE  R10 0 5      ; R10 := {}
 41 [-]: GETUPVAL  R11 U1       ; R11 := U1
 42 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["LITE_SORTIE"]
 43 [-]: SETTABLE  R10 K10 R11  ; R10["EntryId"] := R11
 44 [-]: SETTABLE  R10 K15 K14  ; R10["mIsModifiersHint"] := true
 45 [-]: GETTABLE  R11 R0 K6    ; R11 := R0[1.000000]
 46 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["mBuffInfo"]
 47 [-]: SETTABLE  R10 K16 R11  ; R10["mBuffInfo"] := R11
 48 [-]: GETTABLE  R11 R0 K6    ; R11 := R0[1.000000]
 49 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["mBossInfo"]
 50 [-]: SETTABLE  R10 K17 R11  ; R10["mBossInfo"] := R11
 51 [-]: GETTABLE  R11 R0 K6    ; R11 := R0[1.000000]
 52 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["mBossIndex"]
 53 [-]: SETTABLE  R10 K18 R11  ; R10["mBossIndex"] := R11
 54 [-]: LOADKB    R11 1 0      ; R11 := true
 55 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 56 [-]: GETUPVAL  R8 U2        ; R8 := U2
 57 [-]: LEN       R9 R0        ; R9 := # R0
 58 [-]: SETTABLE  R8 K19 R9    ; R8["NumMissions"] := R9
 59 [-]: GETUPVAL  R8 U2        ; R8 := U2
 60 [-]: SETTABLE  R8 K20 K8    ; R8["NumCompleted"] := 0.000000
 61 [-]: GETUPVAL  R8 U2        ; R8 := U2
 62 [-]: SETTABLE  R8 K21 K22   ; R8["CrystalStoreItem"] := nil
 63 [-]: GETUPVAL  R8 U2        ; R8 := U2
 64 [-]: SETTABLE  R8 K23 K8    ; R8["CrystalMythicProb"] := 0.000000
 65 [-]: GETGLOBAL R8 K0        ; R8 := 0xcfc01047
 66 [-]: MOVE      R9 R0        ; R9 := R0
 67 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 68 [-]: JMP       157          ; PC := 157
 69 [-]: GETTABLE  R13 R12 K24  ; R13 := R12["mCompleted"]
 70 [-]: TEST      R13 0        ; if not R13 then PC := 77
 71 [-]: JMP       77           ; PC := 77
 72 [-]: GETUPVAL  R13 U2       ; R13 := U2
 73 [-]: GETUPVAL  R14 U2       ; R14 := U2
 74 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["NumCompleted"]
 75 [-]: ADD       R14 R14 K6   ; R14 := R14 + 1.000000
 76 [-]: SETTABLE  R13 K20 R14  ; R13["NumCompleted"] := R14
 77 [-]: NEWTABLE  R13 0 15     ; R13 := {}
 78 [-]: GETUPVAL  R14 U1       ; R14 := U1
 79 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["LITE_SORTIE"]
 80 [-]: SETTABLE  R13 K10 R14  ; R13["EntryId"] := R14
 81 [-]: SETTABLE  R13 K12 R11  ; R13["mMissionNumber"] := R11
 82 [-]: GETTABLE  R14 R12 K25  ; R14 := R12["mMissionInfo"]
 83 [-]: SETTABLE  R13 K25 R14  ; R13["mMissionInfo"] := R14
 84 [-]: GETTABLE  R14 R12 K26  ; R14 := R12["mIcon"]
 85 [-]: SETTABLE  R13 K26 R14  ; R13["mIcon"] := R14
 86 [-]: GETTABLE  R14 R12 K27  ; R14 := R12["mExpiry"]
 87 [-]: SETTABLE  R13 K27 R14  ; R13["mExpiry"] := R14
 88 [-]: GETTABLE  R14 R12 K28  ; R14 := R12["mUnlocked"]
 89 [-]: SETTABLE  R13 K28 R14  ; R13["mUnlocked"] := R14
 90 [-]: GETTABLE  R14 R12 K29  ; R14 := R12["mModifierAuraDesc"]
 91 [-]: SETTABLE  R13 K29 R14  ; R13["mModifierAuraDesc"] := R14
 92 [-]: GETTABLE  R14 R12 K30  ; R14 := R12["mMissionName"]
 93 [-]: SETTABLE  R13 K30 R14  ; R13["mMissionName"] := R14
 94 [-]: GETTABLE  R14 R12 K31  ; R14 := R12["mMissionDesc"]
 95 [-]: SETTABLE  R13 K31 R14  ; R13["mMissionDesc"] := R14
 96 [-]: GETTABLE  R14 R12 K17  ; R14 := R12["mBossInfo"]
 97 [-]: SETTABLE  R13 K17 R14  ; R13["mBossInfo"] := R14
 98 [-]: GETTABLE  R14 R12 K32  ; R14 := R12["mShowInStarChart"]
 99 [-]: SETTABLE  R13 K32 R14  ; R13["mShowInStarChart"] := R14
100 [-]: GETTABLE  R14 R12 K33  ; R14 := R12["mNodeUnlocked"]
101 [-]: SETTABLE  R13 K33 R14  ; R13["mNodeUnlocked"] := R14
102 [-]: GETTABLE  R14 R12 K34  ; R14 := R12["mPrereqDesc"]
103 [-]: SETTABLE  R13 K34 R14  ; R13["mPrereqDesc"] := R14
104 [-]: GETTABLE  R14 R12 K35  ; R14 := R12["mLocationTexture"]
105 [-]: SETTABLE  R13 K35 R14  ; R13["mLocationTexture"] := R14
106 [-]: GETTABLE  R14 R12 K24  ; R14 := R12["mCompleted"]
107 [-]: SETTABLE  R13 K24 R14  ; R13["mCompleted"] := R14
108 [-]: GETUPVAL  R14 U0       ; R14 := U0
109 [-]: SELF      R14 R14 K9   ; R15 := R14; R14 := R14[0xbad4316f]
110 [-]: MOVE      R16 R13      ; R16 := R13
111 [-]: LOADKB    R17 1 0      ; R17 := true
112 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
113 [-]: GETGLOBAL R15 K36      ; R15 := 0x7b998233
114 [-]: MOVE      R16 R14      ; R16 := R14
115 [-]: CALL      R15 2 2      ; R15 := R15(R16)
116 [-]: TEST      R15 1        ; if R15 then PC := 125
117 [-]: JMP       125          ; PC := 125
118 [-]: TEST      R7 1         ; if R7 then PC := 125
119 [-]: JMP       125          ; PC := 125
120 [-]: GETUPVAL  R15 U3       ; R15 := U3
121 [-]: LOADK     R16 K37      ; R16 := "InfoPanel.TimeLeft"
122 [-]: MOVE      R17 R14      ; R17 := R14
123 [-]: CALL      R15 3 1      ; R15(R16,R17)
124 [-]: LOADKB    R7 1 0       ; R7 := true
125 [-]: LEN       R15 R0       ; R15 := # R0
126 [-]: EQ        0 R11 R15    ; if R11 ~= R15 then PC := 157
127 [-]: JMP       157          ; PC := 157
128 [-]: GETTABLE  R15 R12 K25  ; R15 := R12["mMissionInfo"]
129 [-]: GETTABLE  R15 R15 K38  ; R15 := R15["missionReward"]
130 [-]: GETTABLE  R15 R15 K39  ; R15 := R15["randomizedItems"]
131 [-]: GETGLOBAL R16 K36      ; R16 := 0x7b998233
132 [-]: MOVE      R17 R15      ; R17 := R15
133 [-]: CALL      R16 2 2      ; R16 := R16(R17)
134 [-]: TEST      R16 1        ; if R16 then PC := 157
135 [-]: JMP       157          ; PC := 157
136 [-]: SELF      R16 R15 K40  ; R17 := R15; R16 := R15[0x509d9f9e]
137 [-]: CONST     R18 0        ; R18 := 0.000000
138 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
139 [-]: LT        0 K8 R16     ; if 0.000000 >= R16 then PC := 157
140 [-]: JMP       157          ; PC := 157
141 [-]: SELF      R16 R15 K41  ; R17 := R15; R16 := R15[0x04d63414]
142 [-]: CONST     R18 0        ; R18 := 0.000000
143 [-]: CONST     R19 0        ; R19 := 0.000000
144 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
145 [-]: GETGLOBAL R17 K36      ; R17 := 0x7b998233
146 [-]: GETTABLE  R18 R16 K42  ; R18 := R16["mStoreItem"]
147 [-]: CALL      R17 2 2      ; R17 := R17(R18)
148 [-]: TEST      R17 1        ; if R17 then PC := 157
149 [-]: JMP       157          ; PC := 157
150 [-]: GETUPVAL  R17 U2       ; R17 := U2
151 [-]: GETTABLE  R18 R16 K42  ; R18 := R16["mStoreItem"]
152 [-]: SETTABLE  R17 K21 R18  ; R17["CrystalStoreItem"] := R18
153 [-]: GETUPVAL  R17 U2       ; R17 := U2
154 [-]: GETTABLE  R18 R16 K43  ; R18 := R16["mProbability"]
155 [-]: SUB       R18 K6 R18   ; R18 := 1.000000 - R18
156 [-]: SETTABLE  R17 K23 R18  ; R17["CrystalMythicProb"] := R18
157 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 69; R10 := R11 end
158 [-]: JMP       69           ; PC := 69
159 [-]: GETGLOBAL R17 K36      ; R17 := 0x7b998233
160 [-]: GETGLOBAL R18 K1       ; R18 := _T
161 [-]: GETTABLE  R18 R18 K44  ; R18 := R18["CachedLiteSortieRewardManifest"]
162 [-]: CALL      R17 2 2      ; R17 := R17(R18)
163 [-]: TEST      R17 1        ; if R17 then PC := 171
164 [-]: JMP       171          ; PC := 171
165 [-]: GETUPVAL  R17 U4       ; R17 := U4
166 [-]: GETUPVAL  R18 U2       ; R18 := U2
167 [-]: GETGLOBAL R19 K1       ; R19 := _T
168 [-]: GETTABLE  R19 R19 K44  ; R19 := R19["CachedLiteSortieRewardManifest"]
169 [-]: LOADKB    R20 1 0      ; R20 := true
170 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
171 [-]: GETGLOBAL R17 K45      ; R17 := 0xae91e43b
172 [-]: SELF      R17 R17 K46  ; R18 := R17; R17 := R17[0xaade900e]
173 [-]: LOADK     R19 K37      ; R19 := "InfoPanel.TimeLeft"
174 [-]: CONST     R20 11       ; R20 := 11.000000
175 [-]: MOVE      R21 R7       ; R21 := R7
176 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
177 [-]: GETUPVAL  R17 U0       ; R17 := U0
178 [-]: SELF      R17 R17 K47  ; R18 := R17; R17 := R17[0xcedda36e]
179 [-]: LOADK     R19 K48      ; R19 := "InfoPanel.InfoMenu.SortieElement"
180 [-]: CALL      R17 3 1      ; R17(R18,R19)
181 [-]: GETUPVAL  R17 U0       ; R17 := U0
182 [-]: SETTABLE  R17 K49 K50  ; R17["mVisibleElements"] := 6.000000
183 [-]: RETURN    R0 1         ; return 


; Function #21.1:
;
; Name:            
; Defined at line: 850
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mMissionIndex"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mMissionIndex"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADKB    R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 898
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x5465f8f3]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x06d055f9]
  5 [-]: GETUPVAL  R3 U2        ; R3 := U2
  6 [-]: GETUPVAL  R4 U3        ; R4 := U3
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["ALERTS"]
  8 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 11
 11 [-]: LOADKB    R3 1 0       ; R3 := true
 12 [-]: CONST     R4 2         ; R4 := 2.000000
 13 [-]: CONST     R5 1         ; R5 := 1.000000
 14 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 15 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 16 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 74
 17 [-]: JMP       74           ; PC := 74
 18 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mClipName"]
 19 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 74
 20 [-]: JMP       74           ; PC := 74
 21 [-]: LOADNIL   R1 R1        ; R1 := nil
 22 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mClipName"]
 23 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mBuffInfo"]
 24 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mBuffInfo"]
 27 [-]: GETTABLE  R1 R3 K6     ; R1 := R3["mWeaponStoreItems"]
 28 [-]: MOVE      R3 R2        ; R3 := R2
 29 [-]: LOADK     R4 K7        ; R4 := ".ModifiersInfo.WeaponBuffIcon"
 30 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 31 [-]: JMP       39           ; PC := 39
 32 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mWeaponStoreItems"]
 33 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["mWeaponStoreItems"]
 36 [-]: MOVE      R3 R2        ; R3 := R2
 37 [-]: LOADK     R4 K8        ; R4 := ".Text.WeaponBuffIcon"
 38 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 39 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 73
 40 [-]: JMP       73           ; PC := 73
 41 [-]: GETUPVAL  R3 U0        ; R3 := U0
 42 [-]: GETUPVAL  R4 U0        ; R4 := U0
 43 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mBuffIconIndex"]
 44 [-]: ADD       R4 R4 K10    ; R4 := R4 + 1.000000
 45 [-]: SETTABLE  R3 K9 R4     ; R3["mBuffIconIndex"] := R4
 46 [-]: GETUPVAL  R3 U0        ; R3 := U0
 47 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mBuffIconIndex"]
 48 [-]: LEN       R4 R1        ; R4 := # R1
 49 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: GETUPVAL  R3 U0        ; R3 := U0
 52 [-]: SETTABLE  R3 K9 K10    ; R3["mBuffIconIndex"] := 1.000000
 53 [-]: GETGLOBAL R3 K11       ; R3 := 0x25312c9b
 54 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 55 [-]: MOVE      R5 R2        ; R5 := R2
 56 [-]: LOADK     R6 K13       ; R6 := ".Icon"
 57 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 58 [-]: CONST     R6 8         ; R6 := 8.000000
 59 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 60 [-]: CONST     R8 10        ; R8 := 10.000000
 61 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 62 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 63 [-]: CONST     R9 0         ; R9 := 0.000000
 64 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 65 [-]: LOADK     R9 K15       ; R9 := 0.300000
 66 [-]: LOADK     R10 K16      ; R10 := 0.100000
 67 [-]: CLOSURE   R11 0        ; R11 := closure(Function #22.1)
 68 [-]: GETUPVAL  R0 U4        ; R0 := U4
 69 [-]: MOVE      R0 R2        ; R0 := R2
 70 [-]: MOVE      R0 R1        ; R0 := R1
 71 [-]: GETUPVAL  R0 U0        ; R0 := U0
 72 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 73 [-]: CLOSE     R1           ; SAVE R1,...
 74 [-]: GETUPVAL  R1 U0        ; R1 := U0
 75 [-]: GETUPVAL  R2 U5        ; R2 := U5
 76 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xbd2e96ea]
 77 [-]: CONST     R4 3         ; R4 := 3.500000
 78 [-]: CLOSURE   R5 1         ; R5 := closure(Function #22.2)
 79 [-]: GETUPVAL  R0 U6        ; R0 := U6
 80 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 81 [-]: SETTABLE  R1 K17 R2    ; R1["mBuffIconTimer"] := R2
 82 [-]: RETURN    R0 1         ; return 


; Function #22.1:
;
; Name:            
; Defined at line: 917
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0xb009bbc6
  4 [-]: GETUPVAL  R3 U2        ; R3 := U2
  5 [-]: GETUPVAL  R4 U3        ; R4 := U3
  6 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mBuffIconIndex"]
  7 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
  8 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  9 [-]: CALL      R0 0 1       ; R0(R1,...)
 10 [-]: GETGLOBAL R0 K2        ; R0 := 0x25312c9b
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: LOADK     R3 K4        ; R3 := ".Icon"
 14 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 15 [-]: CONST     R3 8         ; R3 := 8.000000
 16 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 17 [-]: CONST     R5 10        ; R5 := 10.000000
 18 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 19 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 20 [-]: CONST     R6 100       ; R6 := 100.000000
 21 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 22 [-]: LOADK     R6 K6        ; R6 := 0.300000
 23 [-]: LOADK     R7 K7        ; R7 := 0.100000
 24 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 25 [-]: RETURN    R0 1         ; return 


; Function #22.2:
;
; Name:            
; Defined at line: 925
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 930
; #Upvalues:       36
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  199

  1 [-]: LOADKB    R2 1 0       ; R2 := true
  2 [-]: SETUPVAL  R2 U0        ; U82 := R0
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: TEST      R1 0         ; if not R1 then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: GETUPVAL  R3 U3        ; R3 := U3
 10 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x06d055f9]
 11 [-]: MOVE      R4 R1        ; R4 := R1
 12 [-]: GETUPVAL  R5 U2        ; R5 := U2
 13 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5[0xc704a9b7]
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: CONST     R6 1         ; R6 := 1.000000
 16 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 17 [-]: SETTABLE  R2 K0 R3     ; R2["mPrevFocusedIndex"] := R3
 18 [-]: GETUPVAL  R2 U2        ; R2 := U2
 19 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x7c09c373]
 20 [-]: LOADKB    R4 1 0       ; R4 := true
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 23 [-]: TEST      R1 1         ; if R1 then PC := 45
 24 [-]: JMP       45           ; PC := 45
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: TEST      R2 0         ; if not R2 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: GETUPVAL  R2 U2        ; R2 := U2
 29 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x5fbddc1a]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: LT        0 K5 R2      ; if 0.000000 >= R2 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: LOADKB    R2 1 0       ; R2 := true
 34 [-]: SETUPVAL  R2 U1        ; U82 := R1
 35 [-]: GETUPVAL  R2 U4        ; R2 := U4
 36 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xbd2e96ea]
 37 [-]: GETUPVAL  R4 U2        ; R4 := U2
 38 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mElementTransitionTime"]
 39 [-]: ADD       R4 R4 K8     ; R4 := R4 + 0.050000
 40 [-]: CLOSURE   R5 0         ; R5 := closure(Function #23.1)
 41 [-]: GETUPVAL  R0 U5        ; R0 := U5
 42 [-]: MOVE      R0 R0        ; R0 := R0
 43 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: LOADKB    R2 0 0       ; R2 := false
 46 [-]: SETUPVAL  R2 U1        ; U82 := R1
 47 [-]: LOADK     R2 K9        ; R2 := "InfoPanel.InfoMenu"
 48 [-]: NEWTABLE  R3 6 0       ; R3 := {}
 49 [-]: LOADK     R4 K10       ; R4 := "AlertElement"
 50 [-]: LOADK     R5 K11       ; R5 := "InvasionElement"
 51 [-]: LOADK     R6 K12       ; R6 := "EventElement"
 52 [-]: LOADK     R7 K13       ; R7 := "SyndicateElement"
 53 [-]: LOADK     R8 K14       ; R8 := "QuestElement"
 54 [-]: LOADK     R9 K15       ; R9 := "SortieElement"
 55 [-]: SETLIST   R3 6 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 6
 56 [-]: GETGLOBAL R4 K16       ; R4 := 0xc8802016
 57 [-]: MOVE      R5 R3        ; R5 := R3
 58 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 59 [-]: JMP       74           ; PC := 74
 60 [-]: GETGLOBAL R9 K17       ; R9 := 0xae91e43b
 61 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9[0xc0a3774b]
 62 [-]: MOVE      R11 R2       ; R11 := R2
 63 [-]: MOVE      R12 R8       ; R12 := R8
 64 [-]: CONST     R13 11       ; R13 := 11.000000
 65 [-]: LOADKB    R14 0 0      ; R14 := false
 66 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 67 [-]: GETGLOBAL R9 K17       ; R9 := 0xae91e43b
 68 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9[0xc0a3774b]
 69 [-]: MOVE      R11 R2       ; R11 := R2
 70 [-]: MOVE      R12 R8       ; R12 := R8
 71 [-]: CONST     R13 59       ; R13 := 59.000000
 72 [-]: LOADKB    R14 0 0      ; R14 := false
 73 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 74 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 60; R6 := R7 end
 75 [-]: JMP       60           ; PC := 60
 76 [-]: GETUPVAL  R9 U6        ; R9 := U6
 77 [-]: GETTABLE  R9 R9 K19    ; R9 := R9[0x293ec9c4]
 78 [-]: CALL      R9 1 2       ; R9 := R9()
 79 [-]: GETUPVAL  R10 U2       ; R10 := U2
 80 [-]: SETTABLE  R10 K20 K21  ; R10["mBuffIconIndex"] := 1.000000
 81 [-]: GETUPVAL  R10 U2       ; R10 := U2
 82 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["mBuffIconTimer"]
 83 [-]: EQ        1 R10 K23    ; if R10 == nil then PC := 92
 84 [-]: JMP       92           ; PC := 92
 85 [-]: GETUPVAL  R10 U4       ; R10 := U4
 86 [-]: SELF      R10 R10 K24  ; R11 := R10; R10 := R10[0x775c858b]
 87 [-]: GETUPVAL  R12 U2       ; R12 := U2
 88 [-]: GETTABLE  R12 R12 K22  ; R12 := R12["mBuffIconTimer"]
 89 [-]: CALL      R10 3 1      ; R10(R11,R12)
 90 [-]: GETUPVAL  R10 U2       ; R10 := U2
 91 [-]: SETTABLE  R10 K22 K23  ; R10["mBuffIconTimer"] := nil
 92 [-]: GETUPVAL  R10 U7       ; R10 := U7
 93 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["ALERTS"]
 94 [-]: EQ        1 R0 R10     ; if R0 == R10 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: GETUPVAL  R10 U7       ; R10 := U7
 97 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["LITE_SORTIES"]
 98 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 108
 99 [-]: JMP       108          ; PC := 108
100 [-]: GETUPVAL  R10 U2       ; R10 := U2
101 [-]: GETUPVAL  R11 U4       ; R11 := U4
102 [-]: SELF      R11 R11 K6   ; R12 := R11; R11 := R11[0xbd2e96ea]
103 [-]: CONST     R13 3        ; R13 := 3.500000
104 [-]: CLOSURE   R14 1        ; R14 := closure(Function #23.2)
105 [-]: GETUPVAL  R0 U8        ; R0 := U8
106 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
107 [-]: SETTABLE  R10 K22 R11  ; R10["mBuffIconTimer"] := R11
108 [-]: GETUPVAL  R10 U7       ; R10 := U7
109 [-]: GETTABLE  R10 R10 K27  ; R10 := R10["QUESTS"]
110 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 226
111 [-]: JMP       226          ; PC := 226
112 [-]: LOADKB    R10 0 0      ; R10 := false
113 [-]: LOADKB    R11 0 0      ; R11 := false
114 [-]: LOADKB    R12 0 0      ; R12 := false
115 [-]: GETGLOBAL R13 K16      ; R13 := 0xc8802016
116 [-]: GETUPVAL  R14 U9       ; R14 := U9
117 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
118 [-]: JMP       190          ; PC := 190
119 [-]: NEWTABLE  R18 0 2      ; R18 := {}
120 [-]: GETUPVAL  R19 U10      ; R19 := U10
121 [-]: GETTABLE  R19 R19 K29  ; R19 := R19["QUEST"]
122 [-]: SETTABLE  R18 K28 R19  ; R18["EntryId"] := R19
123 [-]: SETTABLE  R18 K30 R16  ; R18["QuestIndex"] := R16
124 [-]: GETTABLE  R19 R17 K31  ; R19 := R17["IsActive"]
125 [-]: TEST      R19 0        ; if not R19 then PC := 157
126 [-]: JMP       157          ; PC := 157
127 [-]: GETTABLE  R19 R17 K32  ; R19 := R17["Nodes"]
128 [-]: EQ        1 R19 K23    ; if R19 == nil then PC := 149
129 [-]: JMP       149          ; PC := 149
130 [-]: CONST     R19 1        ; R19 := 1.000000
131 [-]: GETTABLE  R20 R17 K32  ; R20 := R17["Nodes"]
132 [-]: LEN       R20 R20      ; R20 := # R20
133 [-]: CONST     R21 1        ; R21 := 1.000000
134 [-]: FORPREP   R19 147      ; R19 -= R21; PC := 147
135 [-]: NEWTABLE  R23 0 3      ; R23 := {}
136 [-]: GETUPVAL  R24 U10      ; R24 := U10
137 [-]: GETTABLE  R24 R24 K29  ; R24 := R24["QUEST"]
138 [-]: SETTABLE  R23 K28 R24  ; R23["EntryId"] := R24
139 [-]: SETTABLE  R23 K30 R16  ; R23["QuestIndex"] := R16
140 [-]: SETTABLE  R23 K33 R22  ; R23["NodeIndex"] := R22
141 [-]: GETUPVAL  R24 U2       ; R24 := U2
142 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x45082a31]
143 [-]: CONST     R26 1        ; R26 := 1.000000
144 [-]: MOVE      R27 R23      ; R27 := R23
145 [-]: LOADKB    R28 1 0      ; R28 := true
146 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
147 [-]: FORLOOP   R19 135      ; R19 += R21; if R19 <= R20 then begin PC := 135; R22 := R19 end
148 [-]: JMP       155          ; PC := 155
149 [-]: GETUPVAL  R24 U2       ; R24 := U2
150 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x45082a31]
151 [-]: CONST     R26 1        ; R26 := 1.000000
152 [-]: MOVE      R27 R18      ; R27 := R18
153 [-]: LOADKB    R28 1 0      ; R28 := true
154 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
155 [-]: LOADKB    R10 1 0      ; R10 := true
156 [-]: JMP       190          ; PC := 190
157 [-]: GETTABLE  R24 R17 K35  ; R24 := R17["IsPrereq"]
158 [-]: TEST      R24 0        ; if not R24 then PC := 170
159 [-]: JMP       170          ; PC := 170
160 [-]: TEST      R10 1        ; if R10 then PC := 170
161 [-]: JMP       170          ; PC := 170
162 [-]: GETUPVAL  R24 U2       ; R24 := U2
163 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x45082a31]
164 [-]: CONST     R26 1        ; R26 := 1.000000
165 [-]: MOVE      R27 R18      ; R27 := R18
166 [-]: LOADKB    R28 1 0      ; R28 := true
167 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
168 [-]: LOADKB    R11 1 0      ; R11 := true
169 [-]: JMP       190          ; PC := 190
170 [-]: TEST      R9 1         ; if R9 then PC := 190
171 [-]: JMP       190          ; PC := 190
172 [-]: TEST      R12 1        ; if R12 then PC := 185
173 [-]: JMP       185          ; PC := 185
174 [-]: GETUPVAL  R24 U2       ; R24 := U2
175 [-]: SELF      R24 R24 K36  ; R25 := R24; R24 := R24[0xbad4316f]
176 [-]: NEWTABLE  R26 0 3      ; R26 := {}
177 [-]: GETUPVAL  R27 U10      ; R27 := U10
178 [-]: GETTABLE  R27 R27 K29  ; R27 := R27["QUEST"]
179 [-]: SETTABLE  R26 K28 R27  ; R26["EntryId"] := R27
180 [-]: SETTABLE  R26 K37 K38  ; R26["IsBanner"] := true
181 [-]: SETTABLE  R26 K39 K40  ; R26["Label"] := "/Lotus/Language/Menu/ResourceDrone_Pending"
182 [-]: LOADKB    R27 1 0      ; R27 := true
183 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
184 [-]: LOADKB    R12 1 0      ; R12 := true
185 [-]: GETUPVAL  R24 U2       ; R24 := U2
186 [-]: SELF      R24 R24 K36  ; R25 := R24; R24 := R24[0xbad4316f]
187 [-]: MOVE      R26 R18      ; R26 := R18
188 [-]: LOADKB    R27 1 0      ; R27 := true
189 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
190 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 119; R15 := R16 end
191 [-]: JMP       119          ; PC := 119
192 [-]: TEST      R10 0        ; if not R10 then PC := 206
193 [-]: JMP       206          ; PC := 206
194 [-]: GETUPVAL  R24 U2       ; R24 := U2
195 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x45082a31]
196 [-]: CONST     R26 1        ; R26 := 1.000000
197 [-]: NEWTABLE  R27 0 3      ; R27 := {}
198 [-]: GETUPVAL  R28 U10      ; R28 := U10
199 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["QUEST"]
200 [-]: SETTABLE  R27 K28 R28  ; R27["EntryId"] := R28
201 [-]: SETTABLE  R27 K37 K38  ; R27["IsBanner"] := true
202 [-]: SETTABLE  R27 K39 K41  ; R27["Label"] := "/Lotus/Language/Menu/WorldStatePanel_ActiveQuestLabel"
203 [-]: LOADKB    R28 1 0      ; R28 := true
204 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
205 [-]: JMP       219          ; PC := 219
206 [-]: TEST      R11 0        ; if not R11 then PC := 219
207 [-]: JMP       219          ; PC := 219
208 [-]: GETUPVAL  R24 U2       ; R24 := U2
209 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x45082a31]
210 [-]: CONST     R26 1        ; R26 := 1.000000
211 [-]: NEWTABLE  R27 0 3      ; R27 := {}
212 [-]: GETUPVAL  R28 U10      ; R28 := U10
213 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["QUEST"]
214 [-]: SETTABLE  R27 K28 R28  ; R27["EntryId"] := R28
215 [-]: SETTABLE  R27 K37 K38  ; R27["IsBanner"] := true
216 [-]: SETTABLE  R27 K39 K42  ; R27["Label"] := "/Lotus/Language/Menu/WorldStatePanel_PrereqQuestLabel"
217 [-]: LOADKB    R28 1 0      ; R28 := true
218 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
219 [-]: GETUPVAL  R24 U2       ; R24 := U2
220 [-]: SELF      R24 R24 K43  ; R25 := R24; R24 := R24[0xcedda36e]
221 [-]: LOADK     R26 K44      ; R26 := "InfoPanel.InfoMenu.QuestElement"
222 [-]: CALL      R24 3 1      ; R24(R25,R26)
223 [-]: GETUPVAL  R24 U2       ; R24 := U2
224 [-]: SETTABLE  R24 K45 K21  ; R24["mVisibleElements"] := 1.000000
225 [-]: JMP       1891         ; PC := 1891
226 [-]: GETUPVAL  R24 U7       ; R24 := U7
227 [-]: GETTABLE  R24 R24 K46  ; R24 := R24["EVENTS"]
228 [-]: EQ        0 R0 R24     ; if R0 ~= R24 then PC := 839
229 [-]: JMP       839          ; PC := 839
230 [-]: GETUPVAL  R24 U11      ; R24 := U11
231 [-]: EQ        0 R24 K23    ; if R24 ~= nil then PC := 424
232 [-]: JMP       424          ; PC := 424
233 [-]: NEWTABLE  R24 0 0      ; R24 := {}
234 [-]: SETUPVAL  R24 U11      ; U82 := R11
235 [-]: NEWTABLE  R24 0 0      ; R24 := {}
236 [-]: GETUPVAL  R25 U12      ; R25 := U12
237 [-]: SELF      R25 R25 K47  ; R26 := R25; R25 := R25[0x69727e0b]
238 [-]: CALL      R25 2 2      ; R25 := R25(R26)
239 [-]: GETTABLE  R25 R25 K48  ; R25 := R25["mGoals"]
240 [-]: CONST     R26 0        ; R26 := 0.000000
241 [-]: GETGLOBAL R27 K49      ; R27 := 0xcfc01047
242 [-]: MOVE      R28 R25      ; R28 := R25
243 [-]: CALL      R27 2 4      ; R27,R28,R29 := R27(R28)
244 [-]: JMP       422          ; PC := 422
245 [-]: GETGLOBAL R32 K50      ; R32 := 0x34291f5c
246 [-]: GETTABLE  R32 R32 K51  ; R32 := R32[0x397b920f]
247 [-]: GETTABLE  R33 R31 K52  ; R33 := R31["mExpiry"]
248 [-]: CALL      R32 2 2      ; R32 := R32(R33)
249 [-]: GETGLOBAL R33 K53      ; R33 := 0x7f5022cf
250 [-]: GETTABLE  R33 R33 K54  ; R33 := R33[0xa5c556b9]
251 [-]: GETGLOBAL R34 K55      ; R34 := 0x64fb1586
252 [-]: GETTABLE  R35 R31 K56  ; R35 := R31["mTag"]
253 [-]: CALL      R34 2 2      ; R34 := R34(R35)
254 [-]: LOADK     R35 K57      ; R35 := "MechSurvival"
255 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
256 [-]: EQ        0 R33 K23    ; if R33 ~= nil then PC := 259
257 [-]: JMP       259          ; PC := 259
258 [-]: LOADKB    R33 0 1      ; R33 := false; PC := 259
259 [-]: LOADKB    R33 1 0      ; R33 := true
260 [-]: GETUPVAL  R34 U12      ; R34 := U12
261 [-]: SELF      R34 R34 K58  ; R35 := R34; R34 := R34[0x7e2a4aa9]
262 [-]: SUB       R36 R30 K21  ; R36 := R30 - 1.000000
263 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
264 [-]: GETTABLE  R35 R31 K56  ; R35 := R31["mTag"]
265 [-]: GETUPVAL  R36 U13      ; R36 := U13
266 [-]: EQ        0 R35 R36    ; if R35 ~= R36 then PC := 275
267 [-]: JMP       275          ; PC := 275
268 [-]: GETUPVAL  R35 U6       ; R35 := U6
269 [-]: GETTABLE  R35 R35 K59  ; R35 := R35[0x52fb05b3]
270 [-]: GETUPVAL  R36 U14      ; R36 := U14
271 [-]: CALL      R35 2 2      ; R35 := R35(R36)
272 [-]: TEST      R35 1        ; if R35 then PC := 275
273 [-]: JMP       275          ; PC := 275
274 [-]: LOADKB    R34 0 0      ; R34 := false
275 [-]: TEST      R34 1        ; if R34 then PC := 279
276 [-]: JMP       279          ; PC := 279
277 [-]: TEST      R33 0        ; if not R33 then PC := 422
278 [-]: JMP       422          ; PC := 422
279 [-]: LT        0 K5 R32     ; if 0.000000 >= R32 then PC := 422
280 [-]: JMP       422          ; PC := 422
281 [-]: GETTABLE  R35 R31 K60  ; R35 := R31["mId"]
282 [-]: GETTABLE  R35 R35 K60  ; R35 := R35["mId"]
283 [-]: GETUPVAL  R36 U6       ; R36 := U6
284 [-]: GETTABLE  R36 R36 K61  ; R36 := R36[0x9897ecc6]
285 [-]: MOVE      R37 R31      ; R37 := R31
286 [-]: CALL      R36 2 4      ; R36,R37,R38 := R36(R37)
287 [-]: GETGLOBAL R39 K53      ; R39 := 0x7f5022cf
288 [-]: GETTABLE  R39 R39 K54  ; R39 := R39[0xa5c556b9]
289 [-]: GETTABLE  R40 R31 K62  ; R40 := R31["mNode"]
290 [-]: GETUPVAL  R41 U6       ; R41 := U6
291 [-]: GETTABLE  R41 R41 K63  ; R41 := R41["ANY_NODE_PREFIX"]
292 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
293 [-]: TEST      R39 0        ; if not R39 then PC := 300
294 [-]: JMP       300          ; PC := 300
295 [-]: GETTABLE  R39 R31 K64  ; R39 := R31["mInvasionNode"]
296 [-]: GETGLOBAL R40 K65      ; R40 := EMPTY_SYMBOL
297 [-]: EQ        0 R39 R40    ; if R39 ~= R40 then PC := 300
298 [-]: JMP       300          ; PC := 300
299 [-]: LOADKB    R39 0 1      ; R39 := false; PC := 300
300 [-]: LOADKB    R39 1 0      ; R39 := true
301 [-]: GETUPVAL  R40 U3       ; R40 := U3
302 [-]: GETTABLE  R40 R40 K1   ; R40 := R40[0x06d055f9]
303 [-]: MOVE      R41 R33      ; R41 := R33
304 [-]: GETTABLE  R42 R31 K66  ; R42 := R31["mMissionKeyName"]
305 [-]: LOADNIL   R43 R43      ; R43 := nil
306 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
307 [-]: TEST      R39 0        ; if not R39 then PC := 412
308 [-]: JMP       412          ; PC := 412
309 [-]: GETTABLE  R41 R31 K62  ; R41 := R31["mNode"]
310 [-]: GETTABLE  R42 R31 K64  ; R42 := R31["mInvasionNode"]
311 [-]: GETGLOBAL R43 K65      ; R43 := EMPTY_SYMBOL
312 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 315
313 [-]: JMP       315          ; PC := 315
314 [-]: GETTABLE  R41 R31 K64  ; R41 := R31["mInvasionNode"]
315 [-]: GETTABLE  R42 R24 R35  ; R42 := R24[R35]
316 [-]: EQ        0 R42 K23    ; if R42 ~= nil then PC := 327
317 [-]: JMP       327          ; PC := 327
318 [-]: GETGLOBAL R42 K67      ; R42 := _T
319 [-]: GETTABLE  R42 R42 K68  ; R42 := R42["LockedGoalList"]
320 [-]: TEST      R42 0        ; if not R42 then PC := 329
321 [-]: JMP       329          ; PC := 329
322 [-]: GETGLOBAL R42 K67      ; R42 := _T
323 [-]: GETTABLE  R42 R42 K68  ; R42 := R42["LockedGoalList"]
324 [-]: GETTABLE  R42 R42 R41  ; R42 := R42[R41]
325 [-]: TEST      R42 0        ; if not R42 then PC := 329
326 [-]: JMP       329          ; PC := 329
327 [-]: TEST      R33 0        ; if not R33 then PC := 371
328 [-]: JMP       371          ; PC := 371
329 [-]: GETGLOBAL R42 K69      ; R42 := 0x33bdd652
330 [-]: GETTABLE  R42 R42 K70  ; R42 := R42[0x23d5322f]
331 [-]: GETUPVAL  R43 U11      ; R43 := U11
332 [-]: NEWTABLE  R44 0 6      ; R44 := {}
333 [-]: SETTABLE  R44 K71 R36  ; R44["Count"] := R36
334 [-]: SETTABLE  R44 K72 R38  ; R44["Goal"] := R38
335 [-]: SETTABLE  R44 K73 R31  ; R44["EventInfo"] := R31
336 [-]: SETTABLE  R44 K74 R26  ; R44["GoalIdx"] := R26
337 [-]: GETUPVAL  R45 U3       ; R45 := U3
338 [-]: GETTABLE  R45 R45 K1   ; R45 := R45[0x06d055f9]
339 [-]: TESTSET   R46 R33 0    ; if not R33 then PC := 342 else R46 := R33
340 [-]: JMP       342          ; PC := 342
341 [-]: NOT       R46 R34      ; R46 :=  R34
342 [-]: GETTABLE  R47 R31 K76  ; R47 := R31["mPrereqGoalTags"]
343 [-]: LEN       R47 R47      ; R47 := # R47
344 [-]: LOADNIL   R48 R48      ; R48 := nil
345 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
346 [-]: SETTABLE  R44 K75 R45  ; R44["Locked"] := R45
347 [-]: SETTABLE  R44 K77 R40  ; R44["LockedKeyName"] := R40
348 [-]: CALL      R42 3 1      ; R42(R43,R44)
349 [-]: GETGLOBAL R42 K78      ; R42 := 0x0032441c
350 [-]: GETTABLE  R42 R42 K79  ; R42 := R42["MergedGoalNodes"]
351 [-]: GETTABLE  R42 R42 R41  ; R42 := R42[R41]
352 [-]: EQ        1 R42 K23    ; if R42 == nil then PC := 364
353 [-]: JMP       364          ; PC := 364
354 [-]: NEWTABLE  R42 0 2      ; R42 := {}
355 [-]: GETGLOBAL R43 K78      ; R43 := 0x0032441c
356 [-]: GETTABLE  R43 R43 K79  ; R43 := R43["MergedGoalNodes"]
357 [-]: GETTABLE  R43 R43 R41  ; R43 := R43[R41]
358 [-]: SETTABLE  R42 K80 R43  ; R42["score"] := R43
359 [-]: GETUPVAL  R43 U11      ; R43 := U11
360 [-]: LEN       R43 R43      ; R43 := # R43
361 [-]: SETTABLE  R42 K81 R43  ; R42["index"] := R43
362 [-]: SETTABLE  R24 R35 R42  ; R24[R35] := R42
363 [-]: JMP       421          ; PC := 421
364 [-]: NEWTABLE  R42 0 2      ; R42 := {}
365 [-]: SETTABLE  R42 K80 K5   ; R42["score"] := 0.000000
366 [-]: GETUPVAL  R43 U11      ; R43 := U11
367 [-]: LEN       R43 R43      ; R43 := # R43
368 [-]: SETTABLE  R42 K81 R43  ; R42["index"] := R43
369 [-]: SETTABLE  R24 R35 R42  ; R24[R35] := R42
370 [-]: JMP       421          ; PC := 421
371 [-]: GETGLOBAL R42 K78      ; R42 := 0x0032441c
372 [-]: GETTABLE  R42 R42 K79  ; R42 := R42["MergedGoalNodes"]
373 [-]: TEST      R42 0        ; if not R42 then PC := 421
374 [-]: JMP       421          ; PC := 421
375 [-]: GETGLOBAL R42 K78      ; R42 := 0x0032441c
376 [-]: GETTABLE  R42 R42 K79  ; R42 := R42["MergedGoalNodes"]
377 [-]: GETTABLE  R42 R42 R41  ; R42 := R42[R41]
378 [-]: EQ        1 R42 K23    ; if R42 == nil then PC := 421
379 [-]: JMP       421          ; PC := 421
380 [-]: GETGLOBAL R42 K78      ; R42 := 0x0032441c
381 [-]: GETTABLE  R42 R42 K79  ; R42 := R42["MergedGoalNodes"]
382 [-]: GETTABLE  R42 R42 R41  ; R42 := R42[R41]
383 [-]: GETTABLE  R43 R24 R35  ; R43 := R24[R35]
384 [-]: GETTABLE  R43 R43 K80  ; R43 := R43["score"]
385 [-]: LT        0 R43 R42    ; if R43 >= R42 then PC := 421
386 [-]: JMP       421          ; PC := 421
387 [-]: GETUPVAL  R42 U11      ; R42 := U11
388 [-]: GETTABLE  R43 R24 R35  ; R43 := R24[R35]
389 [-]: GETTABLE  R43 R43 K81  ; R43 := R43["index"]
390 [-]: NEWTABLE  R44 0 6      ; R44 := {}
391 [-]: SETTABLE  R44 K71 R36  ; R44["Count"] := R36
392 [-]: SETTABLE  R44 K72 R38  ; R44["Goal"] := R38
393 [-]: SETTABLE  R44 K73 R31  ; R44["EventInfo"] := R31
394 [-]: SETTABLE  R44 K74 R26  ; R44["GoalIdx"] := R26
395 [-]: GETUPVAL  R45 U3       ; R45 := U3
396 [-]: GETTABLE  R45 R45 K1   ; R45 := R45[0x06d055f9]
397 [-]: TESTSET   R46 R33 0    ; if not R33 then PC := 400 else R46 := R33
398 [-]: JMP       400          ; PC := 400
399 [-]: NOT       R46 R34      ; R46 :=  R34
400 [-]: SUB       R47 R30 K21  ; R47 := R30 - 1.000000
401 [-]: LOADNIL   R48 R48      ; R48 := nil
402 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
403 [-]: SETTABLE  R44 K75 R45  ; R44["Locked"] := R45
404 [-]: SETTABLE  R44 K77 R40  ; R44["LockedKeyName"] := R40
405 [-]: SETTABLE  R42 R43 R44  ; R42[R43] := R44
406 [-]: GETTABLE  R42 R24 R35  ; R42 := R24[R35]
407 [-]: GETGLOBAL R43 K78      ; R43 := 0x0032441c
408 [-]: GETTABLE  R43 R43 K79  ; R43 := R43["MergedGoalNodes"]
409 [-]: GETTABLE  R43 R43 R41  ; R43 := R43[R41]
410 [-]: SETTABLE  R42 K80 R43  ; R42["score"] := R43
411 [-]: JMP       421          ; PC := 421
412 [-]: GETGLOBAL R42 K69      ; R42 := 0x33bdd652
413 [-]: GETTABLE  R42 R42 K70  ; R42 := R42[0x23d5322f]
414 [-]: GETUPVAL  R43 U11      ; R43 := U11
415 [-]: NEWTABLE  R44 0 4      ; R44 := {}
416 [-]: SETTABLE  R44 K71 R36  ; R44["Count"] := R36
417 [-]: SETTABLE  R44 K72 R38  ; R44["Goal"] := R38
418 [-]: SETTABLE  R44 K73 R31  ; R44["EventInfo"] := R31
419 [-]: SETTABLE  R44 K74 R26  ; R44["GoalIdx"] := R26
420 [-]: CALL      R42 3 1      ; R42(R43,R44)
421 [-]: ADD       R26 R26 K21  ; R26 := R26 + 1.000000
422 [-]: TFORLOOP  R27 2        ; R30,R31 :=  R27(R28,R29); if R30 ~= nil then begin PC = 245; R29 := R30 end
423 [-]: JMP       245          ; PC := 245
424 [-]: GETGLOBAL R42 K69      ; R42 := 0x33bdd652
425 [-]: GETTABLE  R42 R42 K82  ; R42 := R42[0xf21b1d8e]
426 [-]: GETUPVAL  R43 U11      ; R43 := U11
427 [-]: CLOSURE   R44 2        ; R44 := closure(Function #23.3)
428 [-]: CALL      R42 3 1      ; R42(R43,R44)
429 [-]: CONST     R42 1        ; R42 := 1.000000
430 [-]: GETUPVAL  R43 U11      ; R43 := U11
431 [-]: LEN       R43 R43      ; R43 := # R43
432 [-]: CONST     R44 1        ; R44 := 1.000000
433 [-]: FORPREP   R42 831      ; R42 -= R44; PC := 831
434 [-]: GETUPVAL  R46 U11      ; R46 := U11
435 [-]: GETTABLE  R46 R46 R45  ; R46 := R46[R45]
436 [-]: GETTABLE  R47 R46 K73  ; R47 := R46["EventInfo"]
437 [-]: GETTABLE  R47 R47 K83  ; R47 := R47["mRelayReconstruction"]
438 [-]: GETTABLE  R48 R46 K73  ; R48 := R46["EventInfo"]
439 [-]: GETTABLE  R48 R48 K56  ; R48 := R48["mTag"]
440 [-]: GETUPVAL  R49 U15      ; R49 := U15
441 [-]: EQ        1 R48 R49    ; if R48 == R49 then PC := 444
442 [-]: JMP       444          ; PC := 444
443 [-]: LOADKB    R49 0 1      ; R49 := false; PC := 444
444 [-]: LOADKB    R49 1 0      ; R49 := true
445 [-]: GETUPVAL  R50 U13      ; R50 := U13
446 [-]: EQ        1 R48 R50    ; if R48 == R50 then PC := 449
447 [-]: JMP       449          ; PC := 449
448 [-]: LOADKB    R50 0 1      ; R50 := false; PC := 449
449 [-]: LOADKB    R50 1 0      ; R50 := true
450 [-]: GETTABLE  R51 R46 K73  ; R51 := R46["EventInfo"]
451 [-]: GETTABLE  R51 R51 K84  ; R51 := R51["mIsMultiProgress"]
452 [-]: TEST      R47 1        ; if R47 then PC := 476
453 [-]: JMP       476          ; PC := 476
454 [-]: GETTABLE  R52 R46 K73  ; R52 := R46["EventInfo"]
455 [-]: GETTABLE  R52 R52 K85  ; R52 := R52["mConcurrentMissionKeyNames"]
456 [-]: LEN       R52 R52      ; R52 := # R52
457 [-]: LT        1 K5 R52     ; if 0.000000 < R52 then PC := 477
458 [-]: JMP       477          ; PC := 477
459 [-]: GETTABLE  R52 R46 K73  ; R52 := R46["EventInfo"]
460 [-]: GETTABLE  R52 R52 K86  ; R52 := R52["mClanGoal"]
461 [-]: LEN       R52 R52      ; R52 := # R52
462 [-]: LT        0 K5 R52     ; if 0.000000 >= R52 then PC := 468
463 [-]: JMP       468          ; PC := 468
464 [-]: GETTABLE  R52 R46 K73  ; R52 := R46["EventInfo"]
465 [-]: GETTABLE  R52 R52 K87  ; R52 := R52["mRoaming"]
466 [-]: TEST      R52 1        ; if R52 then PC := 478
467 [-]: JMP       478          ; PC := 478
468 [-]: GETTABLE  R52 R46 K73  ; R52 := R46["EventInfo"]
469 [-]: GETTABLE  R52 R52 K62  ; R52 := R52["mNode"]
470 [-]: EQ        1 R52 K88    ; if R52 == "" then PC := 476
471 [-]: JMP       476          ; PC := 476
472 [-]: GETTABLE  R52 R46 K73  ; R52 := R46["EventInfo"]
473 [-]: GETTABLE  R52 R52 K89  ; R52 := R52["mGoal"]
474 [-]: EQ        1 R52 K21    ; if R52 == 1.000000 then PC := 477
475 [-]: JMP       477          ; PC := 477
476 [-]: LOADKB    R52 0 1      ; R52 := false; PC := 477
477 [-]: LOADKB    R52 1 0      ; R52 := true
478 [-]: TEST      R52 0        ; if not R52 then PC := 688
479 [-]: JMP       688          ; PC := 688
480 [-]: GETTABLE  R53 R46 K73  ; R53 := R46["EventInfo"]
481 [-]: CLOSURE   R54 3        ; R54 := closure(Function #23.4)
482 [-]: GETUPVAL  R0 U6        ; R0 := U6
483 [-]: GETUPVAL  R0 U10       ; R0 := U10
484 [-]: MOVE      R0 R53       ; R0 := R53
485 [-]: NEWTABLE  R55 0 0      ; R55 := {}
486 [-]: NEWTABLE  R56 0 0      ; R56 := {}
487 [-]: GETUPVAL  R57 U6       ; R57 := U6
488 [-]: GETTABLE  R57 R57 K61  ; R57 := R57[0x9897ecc6]
489 [-]: MOVE      R58 R53      ; R58 := R53
490 [-]: CALL      R57 2 4      ; R57,R58,R59 := R57(R58)
491 [-]: GETTABLE  R60 R53 K90  ; R60 := R53["mInterimGoals"]
492 [-]: GETTABLE  R61 R53 K91  ; R61 := R53["mInterimRewards"]
493 [-]: CONST     R62 1        ; R62 := 1.000000
494 [-]: GETGLOBAL R63 K92      ; R63 := 0x5bced4c4
495 [-]: GETTABLE  R63 R63 K93  ; R63 := R63[0xac1b386a]
496 [-]: LEN       R64 R60      ; R64 := # R60
497 [-]: LEN       R65 R61      ; R65 := # R61
498 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
499 [-]: CONST     R64 1        ; R64 := 1.000000
500 [-]: FORPREP   R62 511      ; R62 -= R64; PC := 511
501 [-]: GETGLOBAL R66 K69      ; R66 := 0x33bdd652
502 [-]: GETTABLE  R66 R66 K70  ; R66 := R66[0x23d5322f]
503 [-]: MOVE      R67 R55      ; R67 := R55
504 [-]: GETTABLE  R68 R61 R65  ; R68 := R61[R65]
505 [-]: CALL      R66 3 1      ; R66(R67,R68)
506 [-]: GETGLOBAL R66 K69      ; R66 := 0x33bdd652
507 [-]: GETTABLE  R66 R66 K70  ; R66 := R66[0x23d5322f]
508 [-]: MOVE      R67 R56      ; R67 := R56
509 [-]: GETTABLE  R68 R60 R65  ; R68 := R60[R65]
510 [-]: CALL      R66 3 1      ; R66(R67,R68)
511 [-]: FORLOOP   R62 501      ; R62 += R64; if R62 <= R63 then begin PC := 501; R65 := R62 end
512 [-]: GETTABLE  R66 R53 K89  ; R66 := R53["mGoal"]
513 [-]: LT        0 K5 R66     ; if 0.000000 >= R66 then PC := 525
514 [-]: JMP       525          ; PC := 525
515 [-]: GETGLOBAL R66 K69      ; R66 := 0x33bdd652
516 [-]: GETTABLE  R66 R66 K70  ; R66 := R66[0x23d5322f]
517 [-]: MOVE      R67 R55      ; R67 := R55
518 [-]: GETTABLE  R68 R53 K94  ; R68 := R53["mReward"]
519 [-]: CALL      R66 3 1      ; R66(R67,R68)
520 [-]: GETGLOBAL R66 K69      ; R66 := 0x33bdd652
521 [-]: GETTABLE  R66 R66 K70  ; R66 := R66[0x23d5322f]
522 [-]: MOVE      R67 R56      ; R67 := R56
523 [-]: GETTABLE  R68 R53 K89  ; R68 := R53["mGoal"]
524 [-]: CALL      R66 3 1      ; R66(R67,R68)
525 [-]: GETTABLE  R66 R53 K95  ; R66 := R53["mBonusGoal"]
526 [-]: LT        0 K5 R66     ; if 0.000000 >= R66 then PC := 538
527 [-]: JMP       538          ; PC := 538
528 [-]: GETGLOBAL R66 K69      ; R66 := 0x33bdd652
529 [-]: GETTABLE  R66 R66 K70  ; R66 := R66[0x23d5322f]
530 [-]: MOVE      R67 R55      ; R67 := R55
531 [-]: GETTABLE  R68 R53 K96  ; R68 := R53["mBonusReward"]
532 [-]: CALL      R66 3 1      ; R66(R67,R68)
533 [-]: GETGLOBAL R66 K69      ; R66 := 0x33bdd652
534 [-]: GETTABLE  R66 R66 K70  ; R66 := R66[0x23d5322f]
535 [-]: MOVE      R67 R56      ; R67 := R56
536 [-]: GETTABLE  R68 R53 K95  ; R68 := R53["mBonusGoal"]
537 [-]: CALL      R66 3 1      ; R66(R67,R68)
538 [-]: LEN       R66 R56      ; R66 := # R56
539 [-]: EQ        0 R66 K5     ; if R66 ~= 0.000000 then PC := 545
540 [-]: JMP       545          ; PC := 545
541 [-]: NEWTABLE  R66 1 0      ; R66 := {}
542 [-]: CONST     R67 0        ; R67 := 0.000000
543 [-]: SETLIST   R66 1 1      ; R66[(1-1)*FPF+i] := R(66+i), 1 <= i <= 1
544 [-]: MOVE      R56 R66      ; R56 := R66
545 [-]: NEWTABLE  R66 0 0      ; R66 := {}
546 [-]: GETTABLE  R67 R53 K62  ; R67 := R53["mNode"]
547 [-]: EQ        0 R67 K88    ; if R67 ~= "" then PC := 557
548 [-]: JMP       557          ; PC := 557
549 [-]: GETTABLE  R68 R53 K87  ; R68 := R53["mRoaming"]
550 [-]: TEST      R68 0        ; if not R68 then PC := 557
551 [-]: JMP       557          ; PC := 557
552 [-]: GETUPVAL  R68 U6       ; R68 := U6
553 [-]: GETTABLE  R68 R68 K63  ; R68 := R68["ANY_NODE_PREFIX"]
554 [-]: GETTABLE  R69 R46 K74  ; R69 := R46["GoalIdx"]
555 [-]: ADD       R69 R69 K21  ; R69 := R69 + 1.000000
556 [-]: CONCAT    R67 R68 R69  ; R67 := R68 .. R69
557 [-]: GETGLOBAL R68 K69      ; R68 := 0x33bdd652
558 [-]: GETTABLE  R68 R68 K70  ; R68 := R68[0x23d5322f]
559 [-]: MOVE      R69 R66      ; R69 := R66
560 [-]: MOVE      R70 R54      ; R70 := R54
561 [-]: MOVE      R71 R67      ; R71 := R67
562 [-]: MOVE      R72 R57      ; R72 := R57
563 [-]: GETTABLE  R73 R56 K21  ; R73 := R56[1.000000]
564 [-]: GETTABLE  R74 R55 K21  ; R74 := R55[1.000000]
565 [-]: GETTABLE  R75 R56 K21  ; R75 := R56[1.000000]
566 [-]: LT        1 R57 R75    ; if R57 < R75 then PC := 572
567 [-]: JMP       572          ; PC := 572
568 [-]: GETTABLE  R75 R56 K21  ; R75 := R56[1.000000]
569 [-]: EQ        1 R75 K5     ; if R75 == 0.000000 then PC := 572
570 [-]: JMP       572          ; PC := 572
571 [-]: LOADKB    R75 0 1      ; R75 := false; PC := 572
572 [-]: LOADKB    R75 1 0      ; R75 := true
573 [-]: GETTABLE  R76 R53 K97  ; R76 := R53["mBest"]
574 [-]: TEST      R76 1        ; if R76 then PC := 582
575 [-]: JMP       582          ; PC := 582
576 [-]: GETTABLE  R76 R56 K21  ; R76 := R56[1.000000]
577 [-]: LE        0 R76 R57    ; if R76 > R57 then PC := 582
578 [-]: JMP       582          ; PC := 582
579 [-]: GETTABLE  R76 R56 K21  ; R76 := R56[1.000000]
580 [-]: LT        1 K5 R76     ; if 0.000000 < R76 then PC := 589
581 [-]: JMP       589          ; PC := 589
582 [-]: GETTABLE  R76 R53 K97  ; R76 := R53["mBest"]
583 [-]: TEST      R76 0        ; if not R76 then PC := 590
584 [-]: JMP       590          ; PC := 590
585 [-]: GETTABLE  R76 R56 K21  ; R76 := R56[1.000000]
586 [-]: LE        1 R76 R58    ; if R76 <= R58 then PC := 589
587 [-]: JMP       589          ; PC := 589
588 [-]: LOADKB    R76 0 1      ; R76 := false; PC := 589
589 [-]: LOADKB    R76 1 0      ; R76 := true
590 [-]: CONST     R77 1        ; R77 := 1.000000
591 [-]: LOADKB    R78 0 0      ; R78 := false
592 [-]: MOVE      R79 R58      ; R79 := R58
593 [-]: GETTABLE  R80 R53 K98  ; R80 := R53["mConcurrentNodes"]
594 [-]: LEN       R80 R80      ; R80 := # R80
595 [-]: EQ        1 R80 K5     ; if R80 == 0.000000 then PC := 598
596 [-]: JMP       598          ; PC := 598
597 [-]: LOADKB    R80 0 1      ; R80 := false; PC := 598
598 [-]: LOADKB    R80 1 0      ; R80 := true
599 [-]: GETTABLE  R81 R53 K66  ; R81 := R53["mMissionKeyName"]
600 [-]: CALL      R70 12 0     ; R70,... := R70(R71,R72,R73,R74,R75,R76,R77,R78,R79,R80,R81)
601 [-]: CALL      R68 0 1      ; R68(R69,...)
602 [-]: CONST     R68 1        ; R68 := 1.000000
603 [-]: GETTABLE  R69 R53 K98  ; R69 := R53["mConcurrentNodes"]
604 [-]: LEN       R69 R69      ; R69 := # R69
605 [-]: CONST     R70 1        ; R70 := 1.000000
606 [-]: FORPREP   R68 667      ; R68 -= R70; PC := 667
607 [-]: ADD       R72 R71 K21  ; R72 := R71 + 1.000000
608 [-]: EQ        0 R72 K99    ; if R72 ~= 4.000000 then PC := 613
609 [-]: JMP       613          ; PC := 613
610 [-]: GETTABLE  R73 R53 K95  ; R73 := R53["mBonusGoal"]
611 [-]: LT        1 K5 R73     ; if 0.000000 < R73 then PC := 614
612 [-]: JMP       614          ; PC := 614
613 [-]: LOADKB    R73 0 1      ; R73 := false; PC := 614
614 [-]: LOADKB    R73 1 0      ; R73 := true
615 [-]: GETGLOBAL R74 K69      ; R74 := 0x33bdd652
616 [-]: GETTABLE  R74 R74 K70  ; R74 := R74[0x23d5322f]
617 [-]: MOVE      R75 R66      ; R75 := R66
618 [-]: MOVE      R76 R54      ; R76 := R54
619 [-]: GETTABLE  R77 R53 K98  ; R77 := R53["mConcurrentNodes"]
620 [-]: GETTABLE  R77 R77 R71  ; R77 := R77[R71]
621 [-]: MOVE      R78 R57      ; R78 := R57
622 [-]: GETTABLE  R79 R56 R72  ; R79 := R56[R72]
623 [-]: GETTABLE  R80 R55 R72  ; R80 := R55[R72]
624 [-]: GETTABLE  R81 R53 K97  ; R81 := R53["mBest"]
625 [-]: TEST      R81 1        ; if R81 then PC := 631
626 [-]: JMP       631          ; PC := 631
627 [-]: SUB       R81 R72 K21  ; R81 := R72 - 1.000000
628 [-]: GETTABLE  R81 R56 R81  ; R81 := R56[R81]
629 [-]: LE        1 R81 R57    ; if R81 <= R57 then PC := 639
630 [-]: JMP       639          ; PC := 639
631 [-]: GETTABLE  R81 R53 K97  ; R81 := R53["mBest"]
632 [-]: TEST      R81 0        ; if not R81 then PC := 640
633 [-]: JMP       640          ; PC := 640
634 [-]: SUB       R81 R72 K21  ; R81 := R72 - 1.000000
635 [-]: GETTABLE  R81 R56 R81  ; R81 := R56[R81]
636 [-]: LE        1 R81 R58    ; if R81 <= R58 then PC := 639
637 [-]: JMP       639          ; PC := 639
638 [-]: LOADKB    R81 0 1      ; R81 := false; PC := 639
639 [-]: LOADKB    R81 1 0      ; R81 := true
640 [-]: GETTABLE  R82 R53 K97  ; R82 := R53["mBest"]
641 [-]: TEST      R82 1        ; if R82 then PC := 646
642 [-]: JMP       646          ; PC := 646
643 [-]: GETTABLE  R82 R56 R72  ; R82 := R56[R72]
644 [-]: LE        1 R82 R57    ; if R82 <= R57 then PC := 653
645 [-]: JMP       653          ; PC := 653
646 [-]: GETTABLE  R82 R53 K97  ; R82 := R53["mBest"]
647 [-]: TEST      R82 0        ; if not R82 then PC := 654
648 [-]: JMP       654          ; PC := 654
649 [-]: GETTABLE  R82 R56 R72  ; R82 := R56[R72]
650 [-]: LE        1 R82 R58    ; if R82 <= R58 then PC := 653
651 [-]: JMP       653          ; PC := 653
652 [-]: LOADKB    R82 0 1      ; R82 := false; PC := 653
653 [-]: LOADKB    R82 1 0      ; R82 := true
654 [-]: MOVE      R83 R72      ; R83 := R72
655 [-]: MOVE      R84 R73      ; R84 := R73
656 [-]: MOVE      R85 R58      ; R85 := R58
657 [-]: GETTABLE  R86 R53 K98  ; R86 := R53["mConcurrentNodes"]
658 [-]: LEN       R86 R86      ; R86 := # R86
659 [-]: EQ        1 R71 R86    ; if R71 == R86 then PC := 662
660 [-]: JMP       662          ; PC := 662
661 [-]: LOADKB    R86 0 1      ; R86 := false; PC := 662
662 [-]: LOADKB    R86 1 0      ; R86 := true
663 [-]: GETTABLE  R87 R53 K85  ; R87 := R53["mConcurrentMissionKeyNames"]
664 [-]: GETTABLE  R87 R87 R71  ; R87 := R87[R71]
665 [-]: CALL      R76 12 0     ; R76,... := R76(R77,R78,R79,R80,R81,R82,R83,R84,R85,R86,R87)
666 [-]: CALL      R74 0 1      ; R74(R75,...)
667 [-]: FORLOOP   R68 607      ; R68 += R70; if R68 <= R69 then begin PC := 607; R71 := R68 end
668 [-]: GETGLOBAL R74 K16      ; R74 := 0xc8802016
669 [-]: MOVE      R75 R66      ; R75 := R66
670 [-]: CALL      R74 2 4      ; R74,R75,R76 := R74(R75)
671 [-]: JMP       682          ; PC := 682
672 [-]: GETGLOBAL R79 K100     ; R79 := 0x7b998233
673 [-]: MOVE      R80 R78      ; R80 := R78
674 [-]: CALL      R79 2 2      ; R79 := R79(R80)
675 [-]: TEST      R79 1        ; if R79 then PC := 682
676 [-]: JMP       682          ; PC := 682
677 [-]: GETUPVAL  R79 U2       ; R79 := U2
678 [-]: SELF      R79 R79 K36  ; R80 := R79; R79 := R79[0xbad4316f]
679 [-]: MOVE      R81 R78      ; R81 := R78
680 [-]: LOADKB    R82 1 0      ; R82 := true
681 [-]: CALL      R79 4 1      ; R79(R80,R81,R82)
682 [-]: TFORLOOP  R74 2        ; R77,R78 :=  R74(R75,R76); if R77 ~= nil then begin PC = 672; R76 := R77 end
683 [-]: JMP       672          ; PC := 672
684 [-]: GETUPVAL  R79 U2       ; R79 := U2
685 [-]: SETTABLE  R79 K101 K21 ; R79["mDepthDirection"] := 1.000000
686 [-]: CLOSE     R53          ; SAVE R53,...
687 [-]: JMP       831          ; PC := 831
688 [-]: TEST      R47 0        ; if not R47 then PC := 750
689 [-]: JMP       750          ; PC := 750
690 [-]: GETTABLE  R53 R46 K73  ; R53 := R46["EventInfo"]
691 [-]: LOADNIL   R54 R54      ; R54 := nil
692 [-]: CONST     R55 0        ; R55 := 0.000000
693 [-]: CONST     R56 0        ; R56 := 0.000000
694 [-]: GETGLOBAL R57 K49      ; R57 := 0xcfc01047
695 [-]: GETGLOBAL R58 K67      ; R58 := _T
696 [-]: GETTABLE  R58 R58 K102 ; R58 := R58["CachedConstructionProjects"]
697 [-]: CALL      R57 2 4      ; R57,R58,R59 := R57(R58)
698 [-]: JMP       732          ; PC := 732
699 [-]: GETTABLE  R62 R61 K103 ; R62 := R61["info"]
700 [-]: GETTABLE  R63 R53 K56  ; R63 := R53["mTag"]
701 [-]: GETTABLE  R64 R62 K56  ; R64 := R62["mTag"]
702 [-]: EQ        0 R63 R64    ; if R63 ~= R64 then PC := 732
703 [-]: JMP       732          ; PC := 732
704 [-]: GETTABLE  R63 R62 K104 ; R63 := R62["mTasks"]
705 [-]: LEN       R55 R63      ; R55 := # R63
706 [-]: CONST     R63 1        ; R63 := 1.000000
707 [-]: MOVE      R64 R55      ; R64 := R55
708 [-]: CONST     R65 1        ; R65 := 1.000000
709 [-]: FORPREP   R63 729      ; R63 -= R65; PC := 729
710 [-]: GETGLOBAL R67 K105     ; R67 := 0xb009bbc6
711 [-]: GETTABLE  R68 R62 K104 ; R68 := R62["mTasks"]
712 [-]: GETTABLE  R68 R68 R66  ; R68 := R68[R66]
713 [-]: CALL      R67 2 2      ; R67 := R67(R68)
714 [-]: GETGLOBAL R68 K100     ; R68 := 0x7b998233
715 [-]: MOVE      R69 R67      ; R69 := R67
716 [-]: CALL      R68 2 2      ; R68 := R68(R69)
717 [-]: TEST      R68 1        ; if R68 then PC := 729
718 [-]: JMP       729          ; PC := 729
719 [-]: GETGLOBAL R68 K106     ; R68 := 0xba7dfcd2
720 [-]: SELF      R68 R68 K107 ; R69 := R68; R68 := R68[0xd87c0114]
721 [-]: SELF      R70 R67 K108 ; R71 := R67; R70 := R67[0xe223e2b1]
722 [-]: CALL      R70 2 0      ; R70,... := R70(R71)
723 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
724 [-]: SELF      R69 R67 K109 ; R70 := R67; R69 := R67[0x2f5d21d2]
725 [-]: CALL      R69 2 2      ; R69 := R69(R70)
726 [-]: LE        0 R69 R68    ; if R69 > R68 then PC := 729
727 [-]: JMP       729          ; PC := 729
728 [-]: ADD       R56 R56 K21  ; R56 := R56 + 1.000000
729 [-]: FORLOOP   R63 710      ; R63 += R65; if R63 <= R64 then begin PC := 710; R66 := R63 end
730 [-]: GETTABLE  R54 R62 K62  ; R54 := R62["mNode"]
731 [-]: JMP       734          ; PC := 734
732 [-]: TFORLOOP  R57 2        ; R60,R61 :=  R57(R58,R59); if R60 ~= nil then begin PC = 699; R59 := R60 end
733 [-]: JMP       699          ; PC := 699
734 [-]: GETUPVAL  R68 U2       ; R68 := U2
735 [-]: SELF      R68 R68 K36  ; R69 := R68; R68 := R68[0xbad4316f]
736 [-]: NEWTABLE  R70 0 5      ; R70 := {}
737 [-]: GETUPVAL  R71 U10      ; R71 := U10
738 [-]: GETTABLE  R71 R71 K110 ; R71 := R71["EVENT"]
739 [-]: SETTABLE  R70 K28 R71  ; R70["EntryId"] := R71
740 [-]: SETTABLE  R70 K111 K38 ; R70["IsRelayEvent"] := true
741 [-]: SETTABLE  R70 K112 R55 ; R70["ReqCount"] := R55
742 [-]: SETTABLE  R70 K113 R56 ; R70["PersonalCount"] := R56
743 [-]: NEWTABLE  R71 0 2      ; R71 := {}
744 [-]: SETTABLE  R71 K62 R54  ; R71["mNode"] := R54
745 [-]: SETTABLE  R71 K114 K5  ; R71["mRelayReconstructionPhase"] := 0.000000
746 [-]: SETTABLE  R70 K73 R71  ; R70["EventInfo"] := R71
747 [-]: LOADKB    R71 1 0      ; R71 := true
748 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
749 [-]: JMP       831          ; PC := 831
750 [-]: TEST      R49 0        ; if not R49 then PC := 769
751 [-]: JMP       769          ; PC := 769
752 [-]: GETUPVAL  R68 U2       ; R68 := U2
753 [-]: SELF      R68 R68 K36  ; R69 := R68; R68 := R68[0xbad4316f]
754 [-]: NEWTABLE  R70 0 6      ; R70 := {}
755 [-]: GETUPVAL  R71 U10      ; R71 := U10
756 [-]: GETTABLE  R71 R71 K110 ; R71 := R71["EVENT"]
757 [-]: SETTABLE  R70 K28 R71  ; R70["EntryId"] := R71
758 [-]: GETTABLE  R71 R46 K71  ; R71 := R46["Count"]
759 [-]: SETTABLE  R70 K71 R71  ; R70["Count"] := R71
760 [-]: GETTABLE  R71 R46 K72  ; R71 := R46["Goal"]
761 [-]: SETTABLE  R70 K72 R71  ; R70["Goal"] := R71
762 [-]: GETTABLE  R71 R46 K73  ; R71 := R46["EventInfo"]
763 [-]: SETTABLE  R70 K73 R71  ; R70["EventInfo"] := R71
764 [-]: SETTABLE  R70 K115 R52 ; R70["IsLinearEvent"] := R52
765 [-]: SETTABLE  R70 K116 K38 ; R70["IsGhoulEvent"] := true
766 [-]: LOADKB    R71 1 0      ; R71 := true
767 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
768 [-]: JMP       831          ; PC := 831
769 [-]: TEST      R51 0        ; if not R51 then PC := 795
770 [-]: JMP       795          ; PC := 795
771 [-]: GETUPVAL  R68 U2       ; R68 := U2
772 [-]: SELF      R68 R68 K36  ; R69 := R68; R68 := R68[0xbad4316f]
773 [-]: NEWTABLE  R70 0 6      ; R70 := {}
774 [-]: GETUPVAL  R71 U10      ; R71 := U10
775 [-]: GETTABLE  R71 R71 K110 ; R71 := R71["EVENT"]
776 [-]: SETTABLE  R70 K28 R71  ; R70["EntryId"] := R71
777 [-]: GETTABLE  R71 R46 K71  ; R71 := R46["Count"]
778 [-]: SETTABLE  R70 K71 R71  ; R70["Count"] := R71
779 [-]: GETTABLE  R71 R46 K72  ; R71 := R46["Goal"]
780 [-]: SETTABLE  R70 K72 R71  ; R70["Goal"] := R71
781 [-]: GETTABLE  R71 R46 K73  ; R71 := R46["EventInfo"]
782 [-]: SETTABLE  R70 K73 R71  ; R70["EventInfo"] := R71
783 [-]: SETTABLE  R70 K115 R52 ; R70["IsLinearEvent"] := R52
784 [-]: SETTABLE  R70 K117 K38 ; R70["IsMultiProgressEvent"] := true
785 [-]: LOADKB    R71 1 0      ; R71 := true
786 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
787 [-]: GETGLOBAL R69 K69      ; R69 := 0x33bdd652
788 [-]: GETTABLE  R69 R69 K70  ; R69 := R69[0x23d5322f]
789 [-]: GETUPVAL  R70 U16      ; R70 := U16
790 [-]: CLOSURE   R71 4        ; R71 := closure(Function #23.5)
791 [-]: MOVE      R0 R68       ; R0 := R68
792 [-]: CALL      R69 3 1      ; R69(R70,R71)
793 [-]: CLOSE     R68          ; SAVE R68,...
794 [-]: JMP       831          ; PC := 831
795 [-]: TEST      R50 0        ; if not R50 then PC := 814
796 [-]: JMP       814          ; PC := 814
797 [-]: GETUPVAL  R68 U6       ; R68 := U6
798 [-]: GETTABLE  R68 R68 K61  ; R68 := R68[0x9897ecc6]
799 [-]: GETTABLE  R69 R46 K73  ; R69 := R46["EventInfo"]
800 [-]: CALL      R68 2 4      ; R68,R69,R70 := R68(R69)
801 [-]: GETUPVAL  R71 U2       ; R71 := U2
802 [-]: SELF      R71 R71 K36  ; R72 := R71; R71 := R71[0xbad4316f]
803 [-]: NEWTABLE  R73 0 4      ; R73 := {}
804 [-]: GETUPVAL  R74 U10      ; R74 := U10
805 [-]: GETTABLE  R74 R74 K110 ; R74 := R74["EVENT"]
806 [-]: SETTABLE  R73 K28 R74  ; R73["EntryId"] := R74
807 [-]: SETTABLE  R73 K71 R68  ; R73["Count"] := R68
808 [-]: GETTABLE  R74 R46 K73  ; R74 := R46["EventInfo"]
809 [-]: SETTABLE  R73 K73 R74  ; R73["EventInfo"] := R74
810 [-]: SETTABLE  R73 K118 K38 ; R73["IsHeatFissureEvent"] := true
811 [-]: LOADKB    R74 1 0      ; R74 := true
812 [-]: CALL      R71 4 1      ; R71(R72,R73,R74)
813 [-]: JMP       831          ; PC := 831
814 [-]: GETUPVAL  R71 U2       ; R71 := U2
815 [-]: SELF      R71 R71 K36  ; R72 := R71; R71 := R71[0xbad4316f]
816 [-]: NEWTABLE  R73 0 6      ; R73 := {}
817 [-]: GETUPVAL  R74 U10      ; R74 := U10
818 [-]: GETTABLE  R74 R74 K110 ; R74 := R74["EVENT"]
819 [-]: SETTABLE  R73 K28 R74  ; R73["EntryId"] := R74
820 [-]: GETTABLE  R74 R46 K71  ; R74 := R46["Count"]
821 [-]: SETTABLE  R73 K71 R74  ; R73["Count"] := R74
822 [-]: GETTABLE  R74 R46 K72  ; R74 := R46["Goal"]
823 [-]: SETTABLE  R73 K72 R74  ; R73["Goal"] := R74
824 [-]: GETTABLE  R74 R46 K73  ; R74 := R46["EventInfo"]
825 [-]: SETTABLE  R73 K73 R74  ; R73["EventInfo"] := R74
826 [-]: SETTABLE  R73 K115 R52 ; R73["IsLinearEvent"] := R52
827 [-]: GETTABLE  R74 R46 K75  ; R74 := R46["Locked"]
828 [-]: SETTABLE  R73 K75 R74  ; R73["Locked"] := R74
829 [-]: LOADKB    R74 1 0      ; R74 := true
830 [-]: CALL      R71 4 1      ; R71(R72,R73,R74)
831 [-]: FORLOOP   R42 434      ; R42 += R44; if R42 <= R43 then begin PC := 434; R45 := R42 end
832 [-]: GETUPVAL  R71 U2       ; R71 := U2
833 [-]: SELF      R71 R71 K43  ; R72 := R71; R71 := R71[0xcedda36e]
834 [-]: LOADK     R73 K119     ; R73 := "InfoPanel.InfoMenu.EventElement"
835 [-]: CALL      R71 3 1      ; R71(R72,R73)
836 [-]: GETUPVAL  R71 U2       ; R71 := U2
837 [-]: SETTABLE  R71 K45 K120 ; R71["mVisibleElements"] := 6.000000
838 [-]: JMP       1891         ; PC := 1891
839 [-]: GETUPVAL  R71 U7       ; R71 := U7
840 [-]: GETTABLE  R71 R71 K25  ; R71 := R71["ALERTS"]
841 [-]: EQ        0 R0 R71     ; if R0 ~= R71 then PC := 1297
842 [-]: JMP       1297         ; PC := 1297
843 [-]: GETUPVAL  R71 U6       ; R71 := U6
844 [-]: GETTABLE  R71 R71 K121 ; R71 := R71[0x5e35d4d6]
845 [-]: CALL      R71 1 2      ; R71 := R71()
846 [-]: LOADKB    R72 0 0      ; R72 := false
847 [-]: GETGLOBAL R73 K67      ; R73 := _T
848 [-]: GETTABLE  R73 R73 K122 ; R73 := R73["CachedEliteAlertMissions"]
849 [-]: TEST      R73 0        ; if not R73 then PC := 924
850 [-]: JMP       924          ; PC := 924
851 [-]: LOADKB    R73 1 0      ; R73 := true
852 [-]: GETGLOBAL R74 K49      ; R74 := 0xcfc01047
853 [-]: GETGLOBAL R75 K67      ; R75 := _T
854 [-]: GETTABLE  R75 R75 K122 ; R75 := R75["CachedEliteAlertMissions"]
855 [-]: CALL      R74 2 4      ; R74,R75,R76 := R74(R75)
856 [-]: JMP       922          ; PC := 922
857 [-]: GETTABLE  R79 R78 K123 ; R79 := R78["mVisible"]
858 [-]: TEST      R79 0        ; if not R79 then PC := 922
859 [-]: JMP       922          ; PC := 922
860 [-]: TEST      R73 0        ; if not R73 then PC := 880
861 [-]: JMP       880          ; PC := 880
862 [-]: GETUPVAL  R79 U2       ; R79 := U2
863 [-]: SELF      R79 R79 K36  ; R80 := R79; R79 := R79[0xbad4316f]
864 [-]: NEWTABLE  R81 0 3      ; R81 := {}
865 [-]: GETUPVAL  R82 U10      ; R82 := U10
866 [-]: GETTABLE  R82 R82 K124 ; R82 := R82["ALERT"]
867 [-]: SETTABLE  R81 K28 R82  ; R81["EntryId"] := R82
868 [-]: SETTABLE  R81 K125 K38 ; R81["IsHeader"] := true
869 [-]: GETGLOBAL R82 K53      ; R82 := 0x7f5022cf
870 [-]: GETTABLE  R82 R82 K127 ; R82 := R82[0x3f3e4d12]
871 [-]: GETGLOBAL R83 K128     ; R83 := 0x603636ad
872 [-]: LOADK     R84 K129     ; R84 := "/Lotus/Language/Menu/AlertHardMode"
873 [-]: LOADNIL   R85 R85      ; R85 := nil
874 [-]: CALL      R83 3 0      ; R83,... := R83(R84,R85)
875 [-]: CALL      R82 0 2      ; R82 := R82(R83,...)
876 [-]: SETTABLE  R81 K126 R82 ; R81["Title"] := R82
877 [-]: LOADKB    R82 1 0      ; R82 := true
878 [-]: CALL      R79 4 1      ; R79(R80,R81,R82)
879 [-]: LOADKB    R73 0 0      ; R73 := false
880 [-]: GETGLOBAL R79 K130     ; R79 := 0x6c97a788
881 [-]: GETTABLE  R79 R79 K131 ; R79 := R79[0x56888730]
882 [-]: CALL      R79 1 2      ; R79 := R79()
883 [-]: GETTABLE  R80 R78 K132 ; R80 := R78["mMissionInfo"]
884 [-]: SELF      R80 R80 K133 ; R81 := R80; R80 := R80[0x8f89d633]
885 [-]: CALL      R80 2 2      ; R80 := R80(R81)
886 [-]: SETTABLE  R79 K132 R80 ; R79["mMissionInfo"] := R80
887 [-]: GETTABLE  R80 R78 K52  ; R80 := R78["mExpiry"]
888 [-]: GETTABLE  R81 R79 K52  ; R81 := R79["mExpiry"]
889 [-]: GETGLOBAL R82 K53      ; R82 := 0x7f5022cf
890 [-]: GETTABLE  R82 R82 K135 ; R82 := R82[0xe8072ded]
891 [-]: LOADK     R83 K136     ; R83 := "%.0f"
892 [-]: MOVE      R84 R80      ; R84 := R80
893 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
894 [-]: SETTABLE  R81 K134 R82 ; R81["sec"] := R82
895 [-]: GETUPVAL  R81 U2       ; R81 := U2
896 [-]: SELF      R81 R81 K36  ; R82 := R81; R81 := R81[0xbad4316f]
897 [-]: NEWTABLE  R83 0 12     ; R83 := {}
898 [-]: GETUPVAL  R84 U10      ; R84 := U10
899 [-]: GETTABLE  R84 R84 K124 ; R84 := R84["ALERT"]
900 [-]: SETTABLE  R83 K28 R84  ; R83["EntryId"] := R84
901 [-]: SETTABLE  R83 K137 R79 ; R83["mAlertInfo"] := R79
902 [-]: SETTABLE  R83 K123 K38 ; R83["mVisible"] := true
903 [-]: GETTABLE  R84 R78 K138 ; R84 := R78["mUnlocked"]
904 [-]: SETTABLE  R83 K138 R84 ; R83["mUnlocked"] := R84
905 [-]: SETTABLE  R83 K139 K38 ; R83["mRegionUnlocked"] := true
906 [-]: GETGLOBAL R84 K78      ; R84 := 0x0032441c
907 [-]: GETTABLE  R84 R84 K141 ; R84 := R84["UITexture_EliteAlert"]
908 [-]: SETTABLE  R83 K140 R84 ; R83["mImage"] := R84
909 [-]: SETTABLE  R83 K142 K38 ; R83["mSquareIcon"] := true
910 [-]: GETTABLE  R84 R78 K143 ; R84 := R78["mSuitStoreItem"]
911 [-]: SETTABLE  R83 K143 R84 ; R83["mSuitStoreItem"] := R84
912 [-]: GETTABLE  R84 R78 K144 ; R84 := R78["mSuitMods"]
913 [-]: SETTABLE  R83 K144 R84 ; R83["mSuitMods"] := R84
914 [-]: GETTABLE  R84 R78 K145 ; R84 := R78["mWeaponStoreItems"]
915 [-]: SETTABLE  R83 K145 R84 ; R83["mWeaponStoreItems"] := R84
916 [-]: GETTABLE  R84 R78 K146 ; R84 := R78["mWeaponMods"]
917 [-]: SETTABLE  R83 K146 R84 ; R83["mWeaponMods"] := R84
918 [-]: GETTABLE  R84 R78 K147 ; R84 := R78["mCompleted"]
919 [-]: SETTABLE  R83 K147 R84 ; R83["mCompleted"] := R84
920 [-]: LOADKB    R84 1 0      ; R84 := true
921 [-]: CALL      R81 4 1      ; R81(R82,R83,R84)
922 [-]: TFORLOOP  R74 2        ; R77,R78 :=  R74(R75,R76); if R77 ~= nil then begin PC = 857; R76 := R77 end
923 [-]: JMP       857          ; PC := 857
924 [-]: GETUPVAL  R81 U17      ; R81 := U17
925 [-]: EQ        1 R81 K23    ; if R81 == nil then PC := 993
926 [-]: JMP       993          ; PC := 993
927 [-]: GETUPVAL  R81 U2       ; R81 := U2
928 [-]: SELF      R81 R81 K36  ; R82 := R81; R81 := R81[0xbad4316f]
929 [-]: NEWTABLE  R83 0 3      ; R83 := {}
930 [-]: GETUPVAL  R84 U10      ; R84 := U10
931 [-]: GETTABLE  R84 R84 K124 ; R84 := R84["ALERT"]
932 [-]: SETTABLE  R83 K28 R84  ; R83["EntryId"] := R84
933 [-]: SETTABLE  R83 K125 K38 ; R83["IsHeader"] := true
934 [-]: GETGLOBAL R84 K128     ; R84 := 0x603636ad
935 [-]: LOADK     R85 K148     ; R85 := "/Lotus/Language/Menu/Vendor_Void_GenericTitle"
936 [-]: LOADNIL   R86 R86      ; R86 := nil
937 [-]: CALL      R84 3 2      ; R84 := R84(R85,R86)
938 [-]: SETTABLE  R83 K126 R84 ; R83["Title"] := R84
939 [-]: LOADKB    R84 1 0      ; R84 := true
940 [-]: CALL      R81 4 1      ; R81(R82,R83,R84)
941 [-]: SELF      R81 R71 K149 ; R82 := R71; R81 := R71[0x3ad9ed31]
942 [-]: GETUPVAL  R83 U17      ; R83 := U17
943 [-]: GETTABLE  R83 R83 K132 ; R83 := R83["mMissionInfo"]
944 [-]: GETTABLE  R83 R83 K150 ; R83 := R83["location"]
945 [-]: CALL      R81 3 2      ; R81 := R81(R82,R83)
946 [-]: GETTABLE  R82 R81 K151 ; R82 := R81["region"]
947 [-]: ADD       R82 R82 K21  ; R82 := R82 + 1.000000
948 [-]: GETUPVAL  R83 U12      ; R83 := U12
949 [-]: SELF      R83 R83 K152 ; R84 := R83; R83 := R83[0xefee6c91]
950 [-]: CALL      R83 2 2      ; R83 := R83(R84)
951 [-]: GETUPVAL  R84 U6       ; R84 := U6
952 [-]: GETTABLE  R84 R84 K153 ; R84 := R84[0xdebdf69b]
953 [-]: MOVE      R85 R71      ; R85 := R71
954 [-]: GETUPVAL  R86 U12      ; R86 := U12
955 [-]: MOVE      R87 R82      ; R87 := R82
956 [-]: CALL      R84 4 2      ; R84 := R84(R85,R86,R87)
957 [-]: TEST      R84 0        ; if not R84 then PC := 965
958 [-]: JMP       965          ; PC := 965
959 [-]: GETTABLE  R84 R81 K154 ; R84 := R81["mission"]
960 [-]: GETTABLE  R84 R84 K155 ; R84 := R84["masteryReq"]
961 [-]: LE        1 R84 R83    ; if R84 <= R83 then PC := 964
962 [-]: JMP       964          ; PC := 964
963 [-]: LOADKB    R84 0 1      ; R84 := false; PC := 964
964 [-]: LOADKB    R84 1 0      ; R84 := true
965 [-]: LOADNIL   R85 R85      ; R85 := nil
966 [-]: GETTABLE  R86 R81 K154 ; R86 := R81["mission"]
967 [-]: GETTABLE  R86 R86 K155 ; R86 := R86["masteryReq"]
968 [-]: LT        0 R83 R86    ; if R83 >= R86 then PC := 978
969 [-]: JMP       978          ; PC := 978
970 [-]: GETGLOBAL R86 K128     ; R86 := 0x603636ad
971 [-]: LOADK     R87 K156     ; R87 := "/Lotus/Language/TennoWay/UnlockAbilityMRRequired"
972 [-]: NEWTABLE  R88 0 1      ; R88 := {}
973 [-]: GETTABLE  R89 R81 K154 ; R89 := R81["mission"]
974 [-]: GETTABLE  R89 R89 K155 ; R89 := R89["masteryReq"]
975 [-]: SETTABLE  R88 K157 R89 ; R88["RANK"] := R89
976 [-]: CALL      R86 3 2      ; R86 := R86(R87,R88)
977 [-]: MOVE      R85 R86      ; R85 := R86
978 [-]: GETUPVAL  R86 U2       ; R86 := U2
979 [-]: SELF      R86 R86 K36  ; R87 := R86; R86 := R86[0xbad4316f]
980 [-]: NEWTABLE  R88 0 7      ; R88 := {}
981 [-]: GETUPVAL  R89 U10      ; R89 := U10
982 [-]: GETTABLE  R89 R89 K124 ; R89 := R89["ALERT"]
983 [-]: SETTABLE  R88 K28 R89  ; R88["EntryId"] := R89
984 [-]: GETUPVAL  R89 U17      ; R89 := U17
985 [-]: SETTABLE  R88 K137 R89 ; R88["mAlertInfo"] := R89
986 [-]: SETTABLE  R88 K123 K38 ; R88["mVisible"] := true
987 [-]: SETTABLE  R88 K138 R84 ; R88["mUnlocked"] := R84
988 [-]: SETTABLE  R88 K139 R84 ; R88["mRegionUnlocked"] := R84
989 [-]: SETTABLE  R88 K158 K38 ; R88["mVoidTrader"] := true
990 [-]: SETTABLE  R88 K159 R85 ; R88["mMissionLockedText"] := R85
991 [-]: LOADKB    R89 1 0      ; R89 := true
992 [-]: CALL      R86 4 1      ; R86(R87,R88,R89)
993 [-]: GETUPVAL  R86 U18      ; R86 := U18
994 [-]: TEST      R86 1        ; if R86 then PC := 999
995 [-]: JMP       999          ; PC := 999
996 [-]: GETUPVAL  R86 U19      ; R86 := U19
997 [-]: TEST      R86 0        ; if not R86 then PC := 1013
998 [-]: JMP       1013         ; PC := 1013
999 [-]: GETUPVAL  R86 U2       ; R86 := U2
1000 [-]: SELF      R86 R86 K36  ; R87 := R86; R86 := R86[0xbad4316f]
1001 [-]: NEWTABLE  R88 0 3      ; R88 := {}
1002 [-]: GETUPVAL  R89 U10      ; R89 := U10
1003 [-]: GETTABLE  R89 R89 K124 ; R89 := R89["ALERT"]
1004 [-]: SETTABLE  R88 K28 R89  ; R88["EntryId"] := R89
1005 [-]: SETTABLE  R88 K125 K38 ; R88["IsHeader"] := true
1006 [-]: GETGLOBAL R89 K128     ; R89 := 0x603636ad
1007 [-]: LOADK     R90 K160     ; R90 := "/Lotus/Language/Menu/AlertWeekly"
1008 [-]: LOADNIL   R91 R91      ; R91 := nil
1009 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
1010 [-]: SETTABLE  R88 K126 R89 ; R88["Title"] := R89
1011 [-]: LOADKB    R89 1 0      ; R89 := true
1012 [-]: CALL      R86 4 1      ; R86(R87,R88,R89)
1013 [-]: GETUPVAL  R86 U18      ; R86 := U18
1014 [-]: TEST      R86 0        ; if not R86 then PC := 1051
1015 [-]: JMP       1051         ; PC := 1051
1016 [-]: GETGLOBAL R86 K130     ; R86 := 0x6c97a788
1017 [-]: GETTABLE  R86 R86 K131 ; R86 := R86[0x56888730]
1018 [-]: CALL      R86 1 2      ; R86 := R86()
1019 [-]: GETUPVAL  R87 U20      ; R87 := U20
1020 [-]: SETTABLE  R86 K132 R87 ; R86["mMissionInfo"] := R87
1021 [-]: SELF      R87 R71 K149 ; R88 := R71; R87 := R71[0x3ad9ed31]
1022 [-]: GETUPVAL  R89 U20      ; R89 := U20
1023 [-]: GETTABLE  R89 R89 K150 ; R89 := R89["location"]
1024 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1025 [-]: GETTABLE  R88 R87 K151 ; R88 := R87["region"]
1026 [-]: ADD       R88 R88 K21  ; R88 := R88 + 1.000000
1027 [-]: GETUPVAL  R89 U6       ; R89 := U6
1028 [-]: GETTABLE  R89 R89 K153 ; R89 := R89[0xdebdf69b]
1029 [-]: MOVE      R90 R71      ; R90 := R71
1030 [-]: GETUPVAL  R91 U12      ; R91 := U12
1031 [-]: MOVE      R92 R88      ; R92 := R88
1032 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
1033 [-]: GETUPVAL  R90 U2       ; R90 := U2
1034 [-]: SELF      R90 R90 K36  ; R91 := R90; R90 := R90[0xbad4316f]
1035 [-]: NEWTABLE  R92 0 6      ; R92 := {}
1036 [-]: GETUPVAL  R93 U10      ; R93 := U10
1037 [-]: GETTABLE  R93 R93 K124 ; R93 := R93["ALERT"]
1038 [-]: SETTABLE  R92 K28 R93  ; R92["EntryId"] := R93
1039 [-]: SETTABLE  R92 K137 R86 ; R92["mAlertInfo"] := R86
1040 [-]: SETTABLE  R92 K123 K38 ; R92["mVisible"] := true
1041 [-]: GETUPVAL  R93 U20      ; R93 := U20
1042 [-]: GETTABLE  R93 R93 K161 ; R93 := R93["unlocked"]
1043 [-]: TEST      R93 1        ; if R93 then PC := 1046
1044 [-]: JMP       1046         ; PC := 1046
1045 [-]: MOVE      R93 R72      ; R93 := R72
1046 [-]: SETTABLE  R92 K138 R93 ; R92["mUnlocked"] := R93
1047 [-]: SETTABLE  R92 K139 R89 ; R92["mRegionUnlocked"] := R89
1048 [-]: SETTABLE  R92 K162 K38 ; R92["mNoTimer"] := true
1049 [-]: LOADKB    R93 1 0      ; R93 := true
1050 [-]: CALL      R90 4 1      ; R90(R91,R92,R93)
1051 [-]: GETUPVAL  R90 U19      ; R90 := U19
1052 [-]: TEST      R90 0        ; if not R90 then PC := 1089
1053 [-]: JMP       1089         ; PC := 1089
1054 [-]: GETGLOBAL R90 K130     ; R90 := 0x6c97a788
1055 [-]: GETTABLE  R90 R90 K131 ; R90 := R90[0x56888730]
1056 [-]: CALL      R90 1 2      ; R90 := R90()
1057 [-]: GETUPVAL  R91 U21      ; R91 := U21
1058 [-]: SETTABLE  R90 K132 R91 ; R90["mMissionInfo"] := R91
1059 [-]: SELF      R91 R71 K149 ; R92 := R71; R91 := R71[0x3ad9ed31]
1060 [-]: GETUPVAL  R93 U21      ; R93 := U21
1061 [-]: GETTABLE  R93 R93 K150 ; R93 := R93["location"]
1062 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
1063 [-]: GETTABLE  R92 R91 K151 ; R92 := R91["region"]
1064 [-]: ADD       R92 R92 K21  ; R92 := R92 + 1.000000
1065 [-]: GETUPVAL  R93 U6       ; R93 := U6
1066 [-]: GETTABLE  R93 R93 K153 ; R93 := R93[0xdebdf69b]
1067 [-]: MOVE      R94 R71      ; R94 := R71
1068 [-]: GETUPVAL  R95 U12      ; R95 := U12
1069 [-]: MOVE      R96 R92      ; R96 := R92
1070 [-]: CALL      R93 4 2      ; R93 := R93(R94,R95,R96)
1071 [-]: GETUPVAL  R94 U2       ; R94 := U2
1072 [-]: SELF      R94 R94 K36  ; R95 := R94; R94 := R94[0xbad4316f]
1073 [-]: NEWTABLE  R96 0 6      ; R96 := {}
1074 [-]: GETUPVAL  R97 U10      ; R97 := U10
1075 [-]: GETTABLE  R97 R97 K124 ; R97 := R97["ALERT"]
1076 [-]: SETTABLE  R96 K28 R97  ; R96["EntryId"] := R97
1077 [-]: SETTABLE  R96 K137 R90 ; R96["mAlertInfo"] := R90
1078 [-]: SETTABLE  R96 K123 K38 ; R96["mVisible"] := true
1079 [-]: GETUPVAL  R97 U21      ; R97 := U21
1080 [-]: GETTABLE  R97 R97 K161 ; R97 := R97["unlocked"]
1081 [-]: TEST      R97 1        ; if R97 then PC := 1084
1082 [-]: JMP       1084         ; PC := 1084
1083 [-]: MOVE      R97 R72      ; R97 := R72
1084 [-]: SETTABLE  R96 K138 R97 ; R96["mUnlocked"] := R97
1085 [-]: SETTABLE  R96 K139 R93 ; R96["mRegionUnlocked"] := R93
1086 [-]: SETTABLE  R96 K162 K38 ; R96["mNoTimer"] := true
1087 [-]: LOADKB    R97 1 0      ; R97 := true
1088 [-]: CALL      R94 4 1      ; R94(R95,R96,R97)
1089 [-]: NEWTABLE  R94 0 0      ; R94 := {}
1090 [-]: GETGLOBAL R95 K49      ; R95 := 0xcfc01047
1091 [-]: GETGLOBAL R96 K67      ; R96 := _T
1092 [-]: GETTABLE  R96 R96 K163 ; R96 := R96["CachedAlerts"]
1093 [-]: CALL      R95 2 4      ; R95,R96,R97 := R95(R96)
1094 [-]: JMP       1103         ; PC := 1103
1095 [-]: GETTABLE  R100 R99 K123; R100 := R99["mVisible"]
1096 [-]: TEST      R100 0       ; if not R100 then PC := 1103
1097 [-]: JMP       1103         ; PC := 1103
1098 [-]: GETGLOBAL R100 K69     ; R100 := 0x33bdd652
1099 [-]: GETTABLE  R100 R100 K70; R100 := R100[0x23d5322f]
1100 [-]: MOVE      R101 R94     ; R101 := R94
1101 [-]: MOVE      R102 R99     ; R102 := R99
1102 [-]: CALL      R100 3 1     ; R100(R101,R102)
1103 [-]: TFORLOOP  R95 2        ; R98,R99 :=  R95(R96,R97); if R98 ~= nil then begin PC = 1095; R97 := R98 end
1104 [-]: JMP       1095         ; PC := 1095
1105 [-]: LEN       R100 R94     ; R100 := # R94
1106 [-]: LT        0 K5 R100    ; if 0.000000 >= R100 then PC := 1122
1107 [-]: JMP       1122         ; PC := 1122
1108 [-]: GETUPVAL  R100 U2      ; R100 := U2
1109 [-]: SELF      R100 R100 K36; R101 := R100; R100 := R100[0xbad4316f]
1110 [-]: NEWTABLE  R102 0 3     ; R102 := {}
1111 [-]: GETUPVAL  R103 U10     ; R103 := U10
1112 [-]: GETTABLE  R103 R103 K124; R103 := R103["ALERT"]
1113 [-]: SETTABLE  R102 K28 R103; R102["EntryId"] := R103
1114 [-]: SETTABLE  R102 K125 K38; R102["IsHeader"] := true
1115 [-]: GETGLOBAL R103 K128    ; R103 := 0x603636ad
1116 [-]: LOADK     R104 K164    ; R104 := "/Lotus/Language/Menu/MainMenu_Alerts"
1117 [-]: LOADNIL   R105 R105    ; R105 := nil
1118 [-]: CALL      R103 3 2     ; R103 := R103(R104,R105)
1119 [-]: SETTABLE  R102 K126 R103; R102["Title"] := R103
1120 [-]: LOADKB    R103 1 0     ; R103 := true
1121 [-]: CALL      R100 4 1     ; R100(R101,R102,R103)
1122 [-]: GETGLOBAL R100 K69     ; R100 := 0x33bdd652
1123 [-]: GETTABLE  R100 R100 K82; R100 := R100[0xf21b1d8e]
1124 [-]: MOVE      R101 R94     ; R101 := R94
1125 [-]: CLOSURE   R102 5       ; R102 := closure(Function #23.6)
1126 [-]: CALL      R100 3 1     ; R100(R101,R102)
1127 [-]: GETGLOBAL R100 K49     ; R100 := 0xcfc01047
1128 [-]: MOVE      R101 R94     ; R101 := R94
1129 [-]: CALL      R100 2 4     ; R100,R101,R102 := R100(R101)
1130 [-]: JMP       1147         ; PC := 1147
1131 [-]: GETUPVAL  R105 U2      ; R105 := U2
1132 [-]: SELF      R105 R105 K36; R106 := R105; R105 := R105[0xbad4316f]
1133 [-]: NEWTABLE  R107 0 5     ; R107 := {}
1134 [-]: GETUPVAL  R108 U10     ; R108 := U10
1135 [-]: GETTABLE  R108 R108 K124; R108 := R108["ALERT"]
1136 [-]: SETTABLE  R107 K28 R108; R107["EntryId"] := R108
1137 [-]: GETTABLE  R108 R104 K137; R108 := R104["mAlertInfo"]
1138 [-]: SETTABLE  R107 K137 R108; R107["mAlertInfo"] := R108
1139 [-]: GETTABLE  R108 R104 K123; R108 := R104["mVisible"]
1140 [-]: SETTABLE  R107 K123 R108; R107["mVisible"] := R108
1141 [-]: GETTABLE  R108 R104 K138; R108 := R104["mUnlocked"]
1142 [-]: SETTABLE  R107 K138 R108; R107["mUnlocked"] := R108
1143 [-]: GETTABLE  R108 R104 K139; R108 := R104["mRegionUnlocked"]
1144 [-]: SETTABLE  R107 K139 R108; R107["mRegionUnlocked"] := R108
1145 [-]: LOADKB    R108 1 0     ; R108 := true
1146 [-]: CALL      R105 4 1     ; R105(R106,R107,R108)
1147 [-]: TFORLOOP  R100 2       ; R103,R104 :=  R100(R101,R102); if R103 ~= nil then begin PC = 1131; R102 := R103 end
1148 [-]: JMP       1131         ; PC := 1131
1149 [-]: GETGLOBAL R105 K67     ; R105 := _T
1150 [-]: GETTABLE  R105 R105 K165; R105 := R105["CachedGhostTowerMissions"]
1151 [-]: TEST      R105 0       ; if not R105 then PC := 1229
1152 [-]: JMP       1229         ; PC := 1229
1153 [-]: LOADKB    R105 1 0     ; R105 := true
1154 [-]: GETGLOBAL R106 K49     ; R106 := 0xcfc01047
1155 [-]: GETGLOBAL R107 K67     ; R107 := _T
1156 [-]: GETTABLE  R107 R107 K165; R107 := R107["CachedGhostTowerMissions"]
1157 [-]: CALL      R106 2 4     ; R106,R107,R108 := R106(R107)
1158 [-]: JMP       1227         ; PC := 1227
1159 [-]: GETTABLE  R111 R110 K138; R111 := R110["mUnlocked"]
1160 [-]: TEST      R111 0       ; if not R111 then PC := 1227
1161 [-]: JMP       1227         ; PC := 1227
1162 [-]: GETTABLE  R111 R110 K166; R111 := R110["mShowInStarChart"]
1163 [-]: TEST      R111 0       ; if not R111 then PC := 1227
1164 [-]: JMP       1227         ; PC := 1227
1165 [-]: TEST      R105 0       ; if not R105 then PC := 1182
1166 [-]: JMP       1182         ; PC := 1182
1167 [-]: GETUPVAL  R111 U2      ; R111 := U2
1168 [-]: SELF      R111 R111 K36; R112 := R111; R111 := R111[0xbad4316f]
1169 [-]: NEWTABLE  R113 0 3     ; R113 := {}
1170 [-]: GETUPVAL  R114 U10     ; R114 := U10
1171 [-]: GETTABLE  R114 R114 K124; R114 := R114["ALERT"]
1172 [-]: SETTABLE  R113 K28 R114; R113["EntryId"] := R114
1173 [-]: SETTABLE  R113 K125 K38; R113["IsHeader"] := true
1174 [-]: GETGLOBAL R114 K128    ; R114 := 0x603636ad
1175 [-]: LOADK     R115 K167    ; R115 := "/Lotus/Language/Menu/KuvaMissionsLabel"
1176 [-]: LOADNIL   R116 R116    ; R116 := nil
1177 [-]: CALL      R114 3 2     ; R114 := R114(R115,R116)
1178 [-]: SETTABLE  R113 K126 R114; R113["Title"] := R114
1179 [-]: LOADKB    R114 1 0     ; R114 := true
1180 [-]: CALL      R111 4 1     ; R111(R112,R113,R114)
1181 [-]: LOADKB    R105 0 0     ; R105 := false
1182 [-]: GETGLOBAL R111 K130    ; R111 := 0x6c97a788
1183 [-]: GETTABLE  R111 R111 K131; R111 := R111[0x56888730]
1184 [-]: CALL      R111 1 2     ; R111 := R111()
1185 [-]: GETTABLE  R112 R110 K132; R112 := R110["mMissionInfo"]
1186 [-]: SELF      R112 R112 K133; R113 := R112; R112 := R112[0x8f89d633]
1187 [-]: CALL      R112 2 2     ; R112 := R112(R113)
1188 [-]: SETTABLE  R111 K132 R112; R111["mMissionInfo"] := R112
1189 [-]: GETTABLE  R112 R110 K52; R112 := R110["mExpiry"]
1190 [-]: GETTABLE  R113 R111 K52; R113 := R111["mExpiry"]
1191 [-]: GETGLOBAL R114 K53     ; R114 := 0x7f5022cf
1192 [-]: GETTABLE  R114 R114 K135; R114 := R114[0xe8072ded]
1193 [-]: LOADK     R115 K136    ; R115 := "%.0f"
1194 [-]: MOVE      R116 R112    ; R116 := R112
1195 [-]: CALL      R114 3 2     ; R114 := R114(R115,R116)
1196 [-]: SETTABLE  R113 K134 R114; R113["sec"] := R114
1197 [-]: GETUPVAL  R113 U3      ; R113 := U3
1198 [-]: GETTABLE  R113 R113 K1 ; R113 := R113[0x06d055f9]
1199 [-]: GETTABLE  R114 R110 K168; R114 := R110["mFlood"]
1200 [-]: GETGLOBAL R115 K78     ; R115 := 0x0032441c
1201 [-]: GETTABLE  R115 R115 K169; R115 := R115["UITextures_GhostTowerVariant"]
1202 [-]: GETGLOBAL R116 K78     ; R116 := 0x0032441c
1203 [-]: GETTABLE  R116 R116 K170; R116 := R116["UITextures_GhostTower"]
1204 [-]: CALL      R113 4 2     ; R113 := R113(R114,R115,R116)
1205 [-]: GETUPVAL  R114 U3      ; R114 := U3
1206 [-]: GETTABLE  R114 R114 K1 ; R114 := R114[0x06d055f9]
1207 [-]: GETTABLE  R115 R110 K168; R115 := R110["mFlood"]
1208 [-]: LOADK     R116 K171    ; R116 := "/Lotus/Language/WorldStateWindow/KuvaFloodRewardLabel"
1209 [-]: LOADK     R117 K172    ; R117 := "/Lotus/Language/WorldStateWindow/KuvaSiphonRewardLabel"
1210 [-]: CALL      R114 4 2     ; R114 := R114(R115,R116,R117)
1211 [-]: GETUPVAL  R115 U2      ; R115 := U2
1212 [-]: SELF      R115 R115 K36; R116 := R115; R115 := R115[0xbad4316f]
1213 [-]: NEWTABLE  R117 0 9     ; R117 := {}
1214 [-]: GETUPVAL  R118 U10     ; R118 := U10
1215 [-]: GETTABLE  R118 R118 K124; R118 := R118["ALERT"]
1216 [-]: SETTABLE  R117 K28 R118; R117["EntryId"] := R118
1217 [-]: SETTABLE  R117 K137 R111; R117["mAlertInfo"] := R111
1218 [-]: SETTABLE  R117 K123 K38; R117["mVisible"] := true
1219 [-]: SETTABLE  R117 K138 K38; R117["mUnlocked"] := true
1220 [-]: SETTABLE  R117 K139 K38; R117["mRegionUnlocked"] := true
1221 [-]: SETTABLE  R117 K140 R113; R117["mImage"] := R113
1222 [-]: SETTABLE  R117 K173 K38; R117["mGhostTower"] := true
1223 [-]: SETTABLE  R117 K174 R114; R117["mRewardTagOverride"] := R114
1224 [-]: SETTABLE  R117 K142 K38; R117["mSquareIcon"] := true
1225 [-]: LOADKB    R118 1 0     ; R118 := true
1226 [-]: CALL      R115 4 1     ; R115(R116,R117,R118)
1227 [-]: TFORLOOP  R106 2       ; R109,R110 :=  R106(R107,R108); if R109 ~= nil then begin PC = 1159; R108 := R109 end
1228 [-]: JMP       1159         ; PC := 1159
1229 [-]: GETGLOBAL R115 K67     ; R115 := _T
1230 [-]: GETTABLE  R115 R115 K175; R115 := R115["CachedSkullNodes"]
1231 [-]: TEST      R115 0       ; if not R115 then PC := 1290
1232 [-]: JMP       1290         ; PC := 1290
1233 [-]: LOADKB    R115 0 0     ; R115 := false
1234 [-]: GETGLOBAL R116 K49     ; R116 := 0xcfc01047
1235 [-]: GETGLOBAL R117 K67     ; R117 := _T
1236 [-]: GETTABLE  R117 R117 K175; R117 := R117["CachedSkullNodes"]
1237 [-]: CALL      R116 2 4     ; R116,R117,R118 := R116(R117)
1238 [-]: JMP       1288         ; PC := 1288
1239 [-]: TEST      R115 1       ; if R115 then PC := 1256
1240 [-]: JMP       1256         ; PC := 1256
1241 [-]: GETUPVAL  R121 U2      ; R121 := U2
1242 [-]: SELF      R121 R121 K36; R122 := R121; R121 := R121[0xbad4316f]
1243 [-]: NEWTABLE  R123 0 3     ; R123 := {}
1244 [-]: GETUPVAL  R124 U10     ; R124 := U10
1245 [-]: GETTABLE  R124 R124 K124; R124 := R124["ALERT"]
1246 [-]: SETTABLE  R123 K28 R124; R123["EntryId"] := R124
1247 [-]: SETTABLE  R123 K125 K38; R123["IsHeader"] := true
1248 [-]: GETGLOBAL R124 K128    ; R124 := 0x603636ad
1249 [-]: LOADK     R125 K176    ; R125 := "/Lotus/Language/Menu/NightmareMissionsLabel"
1250 [-]: LOADNIL   R126 R126    ; R126 := nil
1251 [-]: CALL      R124 3 2     ; R124 := R124(R125,R126)
1252 [-]: SETTABLE  R123 K126 R124; R123["Title"] := R124
1253 [-]: LOADKB    R124 1 0     ; R124 := true
1254 [-]: CALL      R121 4 1     ; R121(R122,R123,R124)
1255 [-]: LOADKB    R115 1 0     ; R115 := true
1256 [-]: SELF      R121 R71 K149; R122 := R71; R121 := R71[0x3ad9ed31]
1257 [-]: GETGLOBAL R123 K177    ; R123 := 0x0469f296
1258 [-]: MOVE      R124 R119    ; R124 := R119
1259 [-]: CALL      R123 2 0     ; R123,... := R123(R124)
1260 [-]: CALL      R121 0 2     ; R121 := R121(R122,...)
1261 [-]: GETGLOBAL R122 K130    ; R122 := 0x6c97a788
1262 [-]: GETTABLE  R122 R122 K131; R122 := R122[0x56888730]
1263 [-]: CALL      R122 1 2     ; R122 := R122()
1264 [-]: GETTABLE  R123 R121 K154; R123 := R121["mission"]
1265 [-]: SELF      R123 R123 K133; R124 := R123; R123 := R123[0x8f89d633]
1266 [-]: CALL      R123 2 2     ; R123 := R123(R124)
1267 [-]: SETTABLE  R122 K132 R123; R122["mMissionInfo"] := R123
1268 [-]: GETUPVAL  R123 U2      ; R123 := U2
1269 [-]: SELF      R123 R123 K36; R124 := R123; R123 := R123[0xbad4316f]
1270 [-]: NEWTABLE  R125 0 8     ; R125 := {}
1271 [-]: GETUPVAL  R126 U10     ; R126 := U10
1272 [-]: GETTABLE  R126 R126 K124; R126 := R126["ALERT"]
1273 [-]: SETTABLE  R125 K28 R126; R125["EntryId"] := R126
1274 [-]: SETTABLE  R125 K137 R122; R125["mAlertInfo"] := R122
1275 [-]: SETTABLE  R125 K178 R120; R125["mModifiers"] := R120
1276 [-]: SETTABLE  R125 K123 K38; R125["mVisible"] := true
1277 [-]: SETTABLE  R125 K138 K38; R125["mUnlocked"] := true
1278 [-]: SETTABLE  R125 K139 K38; R125["mRegionUnlocked"] := true
1279 [-]: GETGLOBAL R126 K179    ; R126 := 0x649a746b
1280 [-]: SELF      R126 R126 K180; R127 := R126; R126 := R126[0x628bc0ab]
1281 [-]: LOADK     R128 K181    ; R128 := "nightmare"
1282 [-]: CONST     R129 0       ; R129 := 0.000000
1283 [-]: CALL      R126 4 2     ; R126 := R126(R127,R128,R129)
1284 [-]: SETTABLE  R125 K140 R126; R125["mImage"] := R126
1285 [-]: SETTABLE  R125 K142 K38; R125["mSquareIcon"] := true
1286 [-]: LOADKB    R126 1 0     ; R126 := true
1287 [-]: CALL      R123 4 1     ; R123(R124,R125,R126)
1288 [-]: TFORLOOP  R116 2       ; R119,R120 :=  R116(R117,R118); if R119 ~= nil then begin PC = 1239; R118 := R119 end
1289 [-]: JMP       1239         ; PC := 1239
1290 [-]: GETUPVAL  R123 U2      ; R123 := U2
1291 [-]: SELF      R123 R123 K43; R124 := R123; R123 := R123[0xcedda36e]
1292 [-]: LOADK     R125 K182    ; R125 := "InfoPanel.InfoMenu.AlertElement"
1293 [-]: CALL      R123 3 1     ; R123(R124,R125)
1294 [-]: GETUPVAL  R123 U2      ; R123 := U2
1295 [-]: SETTABLE  R123 K45 K120; R123["mVisibleElements"] := 6.000000
1296 [-]: JMP       1891         ; PC := 1891
1297 [-]: GETUPVAL  R123 U7      ; R123 := U7
1298 [-]: GETTABLE  R123 R123 K183; R123 := R123["HARD_ALERTS"]
1299 [-]: EQ        0 R0 R123    ; if R0 ~= R123 then PC := 1359
1300 [-]: JMP       1359         ; PC := 1359
1301 [-]: GETGLOBAL R123 K100    ; R123 := 0x7b998233
1302 [-]: GETGLOBAL R124 K67     ; R124 := _T
1303 [-]: GETTABLE  R124 R124 K184; R124 := R124["CachedHardModeDailyMissions"]
1304 [-]: CALL      R123 2 2     ; R123 := R123(R124)
1305 [-]: TEST      R123 1       ; if R123 then PC := 1359
1306 [-]: JMP       1359         ; PC := 1359
1307 [-]: GETGLOBAL R123 K92     ; R123 := 0x5bced4c4
1308 [-]: GETTABLE  R123 R123 K185; R123 := R123[0x55f27c30]
1309 [-]: GETGLOBAL R124 K186    ; R124 := 0xbe190284
1310 [-]: SELF      R124 R124 K187; R125 := R124; R124 := R124[0x67b221fa]
1311 [-]: CALL      R124 2 0     ; R124,... := R124(R125)
1312 [-]: CALL      R123 0 2     ; R123 := R123(R124,...)
1313 [-]: GETGLOBAL R124 K67     ; R124 := _T
1314 [-]: GETTABLE  R124 R124 K188; R124 := R124["CachedHardModeDailyMissionsExpiry"]
1315 [-]: ADD       R123 R123 R124; R123 := R123 + R124
1316 [-]: GETGLOBAL R124 K49     ; R124 := 0xcfc01047
1317 [-]: GETGLOBAL R125 K67     ; R125 := _T
1318 [-]: GETTABLE  R125 R125 K184; R125 := R125["CachedHardModeDailyMissions"]
1319 [-]: CALL      R124 2 4     ; R124,R125,R126 := R124(R125)
1320 [-]: JMP       1350         ; PC := 1350
1321 [-]: GETTABLE  R129 R128 K189; R129 := R128["isVisible"]
1322 [-]: TEST      R129 0       ; if not R129 then PC := 1350
1323 [-]: JMP       1350         ; PC := 1350
1324 [-]: GETGLOBAL R129 K130    ; R129 := 0x6c97a788
1325 [-]: GETTABLE  R129 R129 K131; R129 := R129[0x56888730]
1326 [-]: CALL      R129 1 2     ; R129 := R129()
1327 [-]: GETTABLE  R130 R128 K154; R130 := R128["mission"]
1328 [-]: SELF      R130 R130 K133; R131 := R130; R130 := R130[0x8f89d633]
1329 [-]: CALL      R130 2 2     ; R130 := R130(R131)
1330 [-]: SETTABLE  R129 K132 R130; R129["mMissionInfo"] := R130
1331 [-]: GETTABLE  R130 R129 K52; R130 := R129["mExpiry"]
1332 [-]: GETGLOBAL R131 K53     ; R131 := 0x7f5022cf
1333 [-]: GETTABLE  R131 R131 K135; R131 := R131[0xe8072ded]
1334 [-]: LOADK     R132 K136    ; R132 := "%.0f"
1335 [-]: MOVE      R133 R123    ; R133 := R123
1336 [-]: CALL      R131 3 2     ; R131 := R131(R132,R133)
1337 [-]: SETTABLE  R130 K134 R131; R130["sec"] := R131
1338 [-]: GETUPVAL  R130 U2      ; R130 := U2
1339 [-]: SELF      R130 R130 K36; R131 := R130; R130 := R130[0xbad4316f]
1340 [-]: NEWTABLE  R132 0 5     ; R132 := {}
1341 [-]: GETUPVAL  R133 U10     ; R133 := U10
1342 [-]: GETTABLE  R133 R133 K124; R133 := R133["ALERT"]
1343 [-]: SETTABLE  R132 K28 R133; R132["EntryId"] := R133
1344 [-]: SETTABLE  R132 K137 R129; R132["mAlertInfo"] := R129
1345 [-]: SETTABLE  R132 K123 K38; R132["mVisible"] := true
1346 [-]: SETTABLE  R132 K138 K38; R132["mUnlocked"] := true
1347 [-]: SETTABLE  R132 K139 K38; R132["mRegionUnlocked"] := true
1348 [-]: LOADKB    R133 1 0     ; R133 := true
1349 [-]: CALL      R130 4 1     ; R130(R131,R132,R133)
1350 [-]: TFORLOOP  R124 2       ; R127,R128 :=  R124(R125,R126); if R127 ~= nil then begin PC = 1321; R126 := R127 end
1351 [-]: JMP       1321         ; PC := 1321
1352 [-]: GETUPVAL  R130 U2      ; R130 := U2
1353 [-]: SELF      R130 R130 K43; R131 := R130; R130 := R130[0xcedda36e]
1354 [-]: LOADK     R132 K182    ; R132 := "InfoPanel.InfoMenu.AlertElement"
1355 [-]: CALL      R130 3 1     ; R130(R131,R132)
1356 [-]: GETUPVAL  R130 U2      ; R130 := U2
1357 [-]: SETTABLE  R130 K45 K120; R130["mVisibleElements"] := 6.000000
1358 [-]: JMP       1891         ; PC := 1891
1359 [-]: GETUPVAL  R130 U7      ; R130 := U7
1360 [-]: GETTABLE  R130 R130 K190; R130 := R130["INVASIONS"]
1361 [-]: EQ        0 R0 R130    ; if R0 ~= R130 then PC := 1432
1362 [-]: JMP       1432         ; PC := 1432
1363 [-]: GETUPVAL  R130 U22     ; R130 := U22
1364 [-]: EQ        0 R130 K23   ; if R130 ~= nil then PC := 1370
1365 [-]: JMP       1370         ; PC := 1370
1366 [-]: GETUPVAL  R130 U23     ; R130 := U23
1367 [-]: GETTABLE  R130 R130 K191; R130 := R130[0x778b8b16]
1368 [-]: CALL      R130 1 2     ; R130 := R130()
1369 [-]: SETUPVAL  R130 U22     ; U82 := R22
1370 [-]: GETGLOBAL R130 K49     ; R130 := 0xcfc01047
1371 [-]: GETUPVAL  R131 U22     ; R131 := U22
1372 [-]: CALL      R130 2 4     ; R130,R131,R132 := R130(R131)
1373 [-]: JMP       1401         ; PC := 1401
1374 [-]: GETUPVAL  R135 U2      ; R135 := U2
1375 [-]: SELF      R135 R135 K36; R136 := R135; R135 := R135[0xbad4316f]
1376 [-]: NEWTABLE  R137 0 11    ; R137 := {}
1377 [-]: GETUPVAL  R138 U10     ; R138 := U10
1378 [-]: GETTABLE  R138 R138 K192; R138 := R138["INVASION"]
1379 [-]: SETTABLE  R137 K28 R138; R137["EntryId"] := R138
1380 [-]: SETTABLE  R137 K193 R133; R137["Region"] := R133
1381 [-]: GETTABLE  R138 R134 K194; R138 := R134["RegionIdx"]
1382 [-]: SETTABLE  R137 K194 R138; R137["RegionIdx"] := R138
1383 [-]: GETTABLE  R138 R134 K195; R138 := R134["AttackerFaction"]
1384 [-]: SETTABLE  R137 K195 R138; R137["AttackerFaction"] := R138
1385 [-]: GETTABLE  R138 R134 K196; R138 := R134["DefenderFaction"]
1386 [-]: SETTABLE  R137 K196 R138; R137["DefenderFaction"] := R138
1387 [-]: GETTABLE  R138 R134 K197; R138 := R134["AttackerName"]
1388 [-]: SETTABLE  R137 K197 R138; R137["AttackerName"] := R138
1389 [-]: GETTABLE  R138 R134 K198; R138 := R134["DefenderName"]
1390 [-]: SETTABLE  R137 K198 R138; R137["DefenderName"] := R138
1391 [-]: GETTABLE  R138 R134 K199; R138 := R134["SubInvasions"]
1392 [-]: SETTABLE  R137 K199 R138; R137["SubInvasions"] := R138
1393 [-]: GETTABLE  R138 R134 K200; R138 := R134["Unlocked"]
1394 [-]: SETTABLE  R137 K200 R138; R137["Unlocked"] := R138
1395 [-]: GETTABLE  R138 R134 K201; R138 := R134["Completed"]
1396 [-]: SETTABLE  R137 K201 R138; R137["Completed"] := R138
1397 [-]: GETTABLE  R138 R134 K202; R138 := R134["LocTag"]
1398 [-]: SETTABLE  R137 K202 R138; R137["LocTag"] := R138
1399 [-]: LOADKB    R138 1 0     ; R138 := true
1400 [-]: CALL      R135 4 1     ; R135(R136,R137,R138)
1401 [-]: TFORLOOP  R130 2       ; R133,R134 :=  R130(R131,R132); if R133 ~= nil then begin PC = 1374; R132 := R133 end
1402 [-]: JMP       1374         ; PC := 1374
1403 [-]: GETUPVAL  R135 U2      ; R135 := U2
1404 [-]: SELF      R135 R135 K36; R136 := R135; R135 := R135[0xbad4316f]
1405 [-]: NEWTABLE  R137 0 12    ; R137 := {}
1406 [-]: GETUPVAL  R138 U10     ; R138 := U10
1407 [-]: GETTABLE  R138 R138 K192; R138 := R138["INVASION"]
1408 [-]: SETTABLE  R137 K28 R138; R137["EntryId"] := R138
1409 [-]: SETTABLE  R137 K203 K38; R137["IsConstructionEntry"] := true
1410 [-]: SETTABLE  R137 K193 K23; R137["Region"] := nil
1411 [-]: SETTABLE  R137 K194 K5 ; R137["RegionIdx"] := 0.000000
1412 [-]: SETTABLE  R137 K195 K5 ; R137["AttackerFaction"] := 0.000000
1413 [-]: SETTABLE  R137 K196 K5 ; R137["DefenderFaction"] := 0.000000
1414 [-]: SETTABLE  R137 K197 K88; R137["AttackerName"] := ""
1415 [-]: SETTABLE  R137 K198 K88; R137["DefenderName"] := ""
1416 [-]: NEWTABLE  R138 0 0     ; R138 := {}
1417 [-]: SETTABLE  R137 K199 R138; R137["SubInvasions"] := R138
1418 [-]: SETTABLE  R137 K200 K38; R137["Unlocked"] := true
1419 [-]: SETTABLE  R137 K201 K204; R137["Completed"] := false
1420 [-]: GETGLOBAL R138 K177    ; R138 := 0x0469f296
1421 [-]: CALL      R138 1 2     ; R138 := R138()
1422 [-]: SETTABLE  R137 K202 R138; R137["LocTag"] := R138
1423 [-]: LOADKB    R138 1 0     ; R138 := true
1424 [-]: CALL      R135 4 1     ; R135(R136,R137,R138)
1425 [-]: GETUPVAL  R135 U2      ; R135 := U2
1426 [-]: SELF      R135 R135 K43; R136 := R135; R135 := R135[0xcedda36e]
1427 [-]: LOADK     R137 K205    ; R137 := "InfoPanel.InfoMenu.InvasionElement"
1428 [-]: CALL      R135 3 1     ; R135(R136,R137)
1429 [-]: GETUPVAL  R135 U2      ; R135 := U2
1430 [-]: SETTABLE  R135 K45 K120; R135["mVisibleElements"] := 6.000000
1431 [-]: JMP       1891         ; PC := 1891
1432 [-]: GETUPVAL  R135 U7      ; R135 := U7
1433 [-]: GETTABLE  R135 R135 K206; R135 := R135["SYND_MISSIONS"]
1434 [-]: EQ        0 R0 R135    ; if R0 ~= R135 then PC := 1608
1435 [-]: JMP       1608         ; PC := 1608
1436 [-]: GETUPVAL  R135 U12     ; R135 := U12
1437 [-]: SELF      R135 R135 K207; R136 := R135; R135 := R135[0x55e93a91]
1438 [-]: CALL      R135 2 2     ; R135 := R135(R136)
1439 [-]: GETGLOBAL R136 K100    ; R136 := 0x7b998233
1440 [-]: MOVE      R137 R135    ; R137 := R135
1441 [-]: CALL      R136 2 2     ; R136 := R136(R137)
1442 [-]: TEST      R136 1       ; if R136 then PC := 1496
1443 [-]: JMP       1496         ; PC := 1496
1444 [-]: SELF      R136 R135 K208; R137 := R135; R136 := R135[0x56c01834]
1445 [-]: CALL      R136 2 2     ; R136 := R136(R137)
1446 [-]: TEST      R136 0       ; if not R136 then PC := 1496
1447 [-]: JMP       1496         ; PC := 1496
1448 [-]: NEWTABLE  R136 0 2     ; R136 := {}
1449 [-]: GETUPVAL  R137 U10     ; R137 := U10
1450 [-]: GETTABLE  R137 R137 K209; R137 := R137["SYND_MISSION"]
1451 [-]: SETTABLE  R136 K28 R137; R136["EntryId"] := R137
1452 [-]: SETTABLE  R136 K210 R135; R136["DailyTask"] := R135
1453 [-]: GETTABLE  R137 R135 K211; R137 := R135["mEnemyTypes"]
1454 [-]: LEN       R137 R137    ; R137 := # R137
1455 [-]: LT        0 K5 R137    ; if 0.000000 >= R137 then PC := 1463
1456 [-]: JMP       1463         ; PC := 1463
1457 [-]: GETUPVAL  R137 U24     ; R137 := U24
1458 [-]: SELF      R137 R137 K213; R138 := R137; R137 := R137[0x0f58e5f8]
1459 [-]: GETTABLE  R139 R135 K211; R139 := R135["mEnemyTypes"]
1460 [-]: GETTABLE  R139 R139 K21; R139 := R139[1.000000]
1461 [-]: CALL      R137 3 2     ; R137 := R137(R138,R139)
1462 [-]: SETTABLE  R136 K212 R137; R136["CodexEntry"] := R137
1463 [-]: GETGLOBAL R137 K100    ; R137 := 0x7b998233
1464 [-]: GETGLOBAL R138 K214    ; R138 := 0x0d0dada1
1465 [-]: CALL      R137 2 2     ; R137 := R137(R138)
1466 [-]: TEST      R137 1       ; if R137 then PC := 1491
1467 [-]: JMP       1491         ; PC := 1491
1468 [-]: GETGLOBAL R137 K214    ; R137 := 0x0d0dada1
1469 [-]: SELF      R137 R137 K216; R138 := R137; R137 := R137[0x056dcf06]
1470 [-]: CALL      R137 2 2     ; R137 := R137(R138)
1471 [-]: SETTABLE  R136 K215 R137; R136["mIcon"] := R137
1472 [-]: GETGLOBAL R137 K214    ; R137 := 0x0d0dada1
1473 [-]: SELF      R137 R137 K218; R138 := R137; R137 := R137[0x5660f6f0]
1474 [-]: CALL      R137 2 2     ; R137 := R137(R138)
1475 [-]: SETTABLE  R136 K217 R137; R136["mLogoColor"] := R137
1476 [-]: GETGLOBAL R137 K214    ; R137 := 0x0d0dada1
1477 [-]: SELF      R137 R137 K220; R138 := R137; R137 := R137[0xf36b7a3d]
1478 [-]: CALL      R137 2 2     ; R137 := R137(R138)
1479 [-]: SETTABLE  R136 K219 R137; R136["mBgColor"] := R137
1480 [-]: GETUPVAL  R137 U12     ; R137 := U12
1481 [-]: SELF      R137 R137 K207; R138 := R137; R137 := R137[0x55e93a91]
1482 [-]: CALL      R137 2 2     ; R137 := R137(R138)
1483 [-]: GETTABLE  R138 R137 K221; R138 := R137["mScans"]
1484 [-]: GETTABLE  R139 R137 K222; R139 := R137["mScansRequired"]
1485 [-]: LE        0 R139 R138  ; if R139 > R138 then PC := 1491
1486 [-]: JMP       1491         ; PC := 1491
1487 [-]: SETTABLE  R136 K138 K38; R136["mUnlocked"] := true
1488 [-]: SETTABLE  R136 K139 K38; R136["mRegionUnlocked"] := true
1489 [-]: GETUPVAL  R138 U21     ; R138 := U21
1490 [-]: SETTABLE  R136 K132 R138; R136["mMissionInfo"] := R138
1491 [-]: GETUPVAL  R138 U2      ; R138 := U2
1492 [-]: SELF      R138 R138 K36; R139 := R138; R138 := R138[0xbad4316f]
1493 [-]: MOVE      R140 R136    ; R140 := R136
1494 [-]: LOADKB    R141 1 0     ; R141 := true
1495 [-]: CALL      R138 4 1     ; R138(R139,R140,R141)
1496 [-]: GETUPVAL  R138 U25     ; R138 := U25
1497 [-]: TEST      R138 0       ; if not R138 then PC := 1536
1498 [-]: JMP       1536         ; PC := 1536
1499 [-]: GETUPVAL  R138 U6      ; R138 := U6
1500 [-]: GETTABLE  R138 R138 K121; R138 := R138[0x5e35d4d6]
1501 [-]: CALL      R138 1 2     ; R138 := R138()
1502 [-]: GETGLOBAL R139 K16     ; R139 := 0xc8802016
1503 [-]: GETUPVAL  R140 U26     ; R140 := U26
1504 [-]: CALL      R139 2 4     ; R139,R140,R141 := R139(R140)
1505 [-]: JMP       1534         ; PC := 1534
1506 [-]: NEWTABLE  R144 0 1     ; R144 := {}
1507 [-]: GETUPVAL  R145 U10     ; R145 := U10
1508 [-]: GETTABLE  R145 R145 K209; R145 := R145["SYND_MISSION"]
1509 [-]: SETTABLE  R144 K28 R145; R144["EntryId"] := R145
1510 [-]: SELF      R145 R138 K223; R146 := R138; R145 := R138[0xc18bf6f0]
1511 [-]: MOVE      R147 R143    ; R147 := R143
1512 [-]: CALL      R145 3 2     ; R145 := R145(R146,R147)
1513 [-]: SETTABLE  R144 K132 R145; R144["mMissionInfo"] := R145
1514 [-]: GETGLOBAL R145 K214    ; R145 := 0x0d0dada1
1515 [-]: SELF      R145 R145 K216; R146 := R145; R145 := R145[0x056dcf06]
1516 [-]: CALL      R145 2 2     ; R145 := R145(R146)
1517 [-]: SETTABLE  R144 K215 R145; R144["mIcon"] := R145
1518 [-]: GETGLOBAL R145 K214    ; R145 := 0x0d0dada1
1519 [-]: SELF      R145 R145 K218; R146 := R145; R145 := R145[0x5660f6f0]
1520 [-]: CALL      R145 2 2     ; R145 := R145(R146)
1521 [-]: SETTABLE  R144 K217 R145; R144["mLogoColor"] := R145
1522 [-]: GETGLOBAL R145 K214    ; R145 := 0x0d0dada1
1523 [-]: SELF      R145 R145 K220; R146 := R145; R145 := R145[0xf36b7a3d]
1524 [-]: CALL      R145 2 2     ; R145 := R145(R146)
1525 [-]: SETTABLE  R144 K219 R145; R144["mBgColor"] := R145
1526 [-]: SETTABLE  R144 K138 K38; R144["mUnlocked"] := true
1527 [-]: SETTABLE  R144 K139 K38; R144["mRegionUnlocked"] := true
1528 [-]: SETTABLE  R144 K224 K38; R144["mIsRegularMission"] := true
1529 [-]: GETUPVAL  R145 U2      ; R145 := U2
1530 [-]: SELF      R145 R145 K36; R146 := R145; R145 := R145[0xbad4316f]
1531 [-]: MOVE      R147 R144    ; R147 := R144
1532 [-]: LOADKB    R148 1 0     ; R148 := true
1533 [-]: CALL      R145 4 1     ; R145(R146,R147,R148)
1534 [-]: TFORLOOP  R139 2       ; R142,R143 :=  R139(R140,R141); if R142 ~= nil then begin PC = 1506; R141 := R142 end
1535 [-]: JMP       1506         ; PC := 1506
1536 [-]: NEWTABLE  R145 0 0     ; R145 := {}
1537 [-]: GETGLOBAL R146 K49     ; R146 := 0xcfc01047
1538 [-]: GETGLOBAL R147 K67     ; R147 := _T
1539 [-]: GETTABLE  R147 R147 K225; R147 := R147["CachedSyndicateMissions"]
1540 [-]: CALL      R146 2 4     ; R146,R147,R148 := R146(R147)
1541 [-]: JMP       1550         ; PC := 1550
1542 [-]: GETTABLE  R151 R150 K123; R151 := R150["mVisible"]
1543 [-]: TEST      R151 0       ; if not R151 then PC := 1550
1544 [-]: JMP       1550         ; PC := 1550
1545 [-]: GETGLOBAL R151 K69     ; R151 := 0x33bdd652
1546 [-]: GETTABLE  R151 R151 K70; R151 := R151[0x23d5322f]
1547 [-]: MOVE      R152 R145    ; R152 := R145
1548 [-]: MOVE      R153 R150    ; R153 := R150
1549 [-]: CALL      R151 3 1     ; R151(R152,R153)
1550 [-]: TFORLOOP  R146 2       ; R149,R150 :=  R146(R147,R148); if R149 ~= nil then begin PC = 1542; R148 := R149 end
1551 [-]: JMP       1542         ; PC := 1542
1552 [-]: GETGLOBAL R151 K69     ; R151 := 0x33bdd652
1553 [-]: GETTABLE  R151 R151 K82; R151 := R151[0xf21b1d8e]
1554 [-]: MOVE      R152 R145    ; R152 := R145
1555 [-]: CLOSURE   R153 6       ; R153 := closure(Function #23.7)
1556 [-]: CALL      R151 3 1     ; R151(R152,R153)
1557 [-]: GETGLOBAL R151 K49     ; R151 := 0xcfc01047
1558 [-]: MOVE      R152 R145    ; R152 := R145
1559 [-]: CALL      R151 2 4     ; R151,R152,R153 := R151(R152)
1560 [-]: JMP       1587         ; PC := 1587
1561 [-]: GETUPVAL  R156 U2      ; R156 := U2
1562 [-]: SELF      R156 R156 K36; R157 := R156; R156 := R156[0xbad4316f]
1563 [-]: NEWTABLE  R158 0 10    ; R158 := {}
1564 [-]: GETUPVAL  R159 U10     ; R159 := U10
1565 [-]: GETTABLE  R159 R159 K209; R159 := R159["SYND_MISSION"]
1566 [-]: SETTABLE  R158 K28 R159; R158["EntryId"] := R159
1567 [-]: GETTABLE  R159 R155 K132; R159 := R155["mMissionInfo"]
1568 [-]: SETTABLE  R158 K132 R159; R158["mMissionInfo"] := R159
1569 [-]: GETTABLE  R159 R155 K215; R159 := R155["mIcon"]
1570 [-]: SETTABLE  R158 K215 R159; R158["mIcon"] := R159
1571 [-]: GETTABLE  R159 R155 K217; R159 := R155["mLogoColor"]
1572 [-]: SETTABLE  R158 K217 R159; R158["mLogoColor"] := R159
1573 [-]: GETTABLE  R159 R155 K226; R159 := R155["mColor"]
1574 [-]: SETTABLE  R158 K219 R159; R158["mBgColor"] := R159
1575 [-]: GETTABLE  R159 R155 K227; R159 := R155["mSyndicateName"]
1576 [-]: SETTABLE  R158 K227 R159; R158["mSyndicateName"] := R159
1577 [-]: GETTABLE  R159 R155 K229; R159 := R155["mSyndicateTitle"]
1578 [-]: SETTABLE  R158 K228 R159; R158["mTitleName"] := R159
1579 [-]: GETTABLE  R159 R155 K52; R159 := R155["mExpiry"]
1580 [-]: SETTABLE  R158 K52 R159; R158["mExpiry"] := R159
1581 [-]: GETTABLE  R159 R155 K138; R159 := R155["mUnlocked"]
1582 [-]: SETTABLE  R158 K138 R159; R158["mUnlocked"] := R159
1583 [-]: GETTABLE  R159 R155 K139; R159 := R155["mRegionUnlocked"]
1584 [-]: SETTABLE  R158 K139 R159; R158["mRegionUnlocked"] := R159
1585 [-]: LOADKB    R159 1 0     ; R159 := true
1586 [-]: CALL      R156 4 1     ; R156(R157,R158,R159)
1587 [-]: TFORLOOP  R151 2       ; R154,R155 :=  R151(R152,R153); if R154 ~= nil then begin PC = 1561; R153 := R154 end
1588 [-]: JMP       1561         ; PC := 1561
1589 [-]: GETUPVAL  R156 U27     ; R156 := U27
1590 [-]: TEST      R156 1       ; if R156 then PC := 1601
1591 [-]: JMP       1601         ; PC := 1601
1592 [-]: GETUPVAL  R156 U2      ; R156 := U2
1593 [-]: SELF      R156 R156 K36; R157 := R156; R156 := R156[0xbad4316f]
1594 [-]: NEWTABLE  R158 0 2     ; R158 := {}
1595 [-]: GETUPVAL  R159 U10     ; R159 := U10
1596 [-]: GETTABLE  R159 R159 K209; R159 := R159["SYND_MISSION"]
1597 [-]: SETTABLE  R158 K28 R159; R158["EntryId"] := R159
1598 [-]: SETTABLE  R158 K230 K38; R158["mIsUnlockHint"] := true
1599 [-]: LOADKB    R159 1 0     ; R159 := true
1600 [-]: CALL      R156 4 1     ; R156(R157,R158,R159)
1601 [-]: GETUPVAL  R156 U2      ; R156 := U2
1602 [-]: SELF      R156 R156 K43; R157 := R156; R156 := R156[0xcedda36e]
1603 [-]: LOADK     R158 K231    ; R158 := "InfoPanel.InfoMenu.SyndicateElement"
1604 [-]: CALL      R156 3 1     ; R156(R157,R158)
1605 [-]: GETUPVAL  R156 U2      ; R156 := U2
1606 [-]: SETTABLE  R156 K45 K120; R156["mVisibleElements"] := 6.000000
1607 [-]: JMP       1891         ; PC := 1891
1608 [-]: GETUPVAL  R156 U7      ; R156 := U7
1609 [-]: GETTABLE  R156 R156 K232; R156 := R156["PVPCHALLENGES"]
1610 [-]: EQ        1 R0 R156    ; if R0 == R156 then PC := 1616
1611 [-]: JMP       1616         ; PC := 1616
1612 [-]: GETUPVAL  R156 U7      ; R156 := U7
1613 [-]: GETTABLE  R156 R156 K233; R156 := R156["PVPCHALLENGES_WEEKLY"]
1614 [-]: EQ        0 R0 R156    ; if R0 ~= R156 then PC := 1620
1615 [-]: JMP       1620         ; PC := 1620
1616 [-]: GETUPVAL  R156 U28     ; R156 := U28
1617 [-]: MOVE      R157 R0      ; R157 := R0
1618 [-]: CALL      R156 2 1     ; R156(R157)
1619 [-]: JMP       1891         ; PC := 1891
1620 [-]: GETUPVAL  R156 U7      ; R156 := U7
1621 [-]: GETTABLE  R156 R156 K234; R156 := R156["SORTIES"]
1622 [-]: EQ        0 R0 R156    ; if R0 ~= R156 then PC := 1750
1623 [-]: JMP       1750         ; PC := 1750
1624 [-]: NEWTABLE  R156 0 0     ; R156 := {}
1625 [-]: CONST     R157 0       ; R157 := 0.000000
1626 [-]: GETGLOBAL R158 K49     ; R158 := 0xcfc01047
1627 [-]: GETGLOBAL R159 K67     ; R159 := _T
1628 [-]: GETTABLE  R159 R159 K235; R159 := R159["CachedSortieMissions"]
1629 [-]: CALL      R158 2 4     ; R158,R159,R160 := R158(R159)
1630 [-]: JMP       1640         ; PC := 1640
1631 [-]: GETTABLE  R163 R162 K123; R163 := R162["mVisible"]
1632 [-]: TEST      R163 0       ; if not R163 then PC := 1640
1633 [-]: JMP       1640         ; PC := 1640
1634 [-]: GETGLOBAL R163 K69     ; R163 := 0x33bdd652
1635 [-]: GETTABLE  R163 R163 K70; R163 := R163[0x23d5322f]
1636 [-]: MOVE      R164 R156    ; R164 := R156
1637 [-]: MOVE      R165 R162    ; R165 := R162
1638 [-]: CALL      R163 3 1     ; R163(R164,R165)
1639 [-]: ADD       R157 R157 K21; R157 := R157 + 1.000000
1640 [-]: TFORLOOP  R158 2       ; R161,R162 :=  R158(R159,R160); if R161 ~= nil then begin PC = 1631; R160 := R161 end
1641 [-]: JMP       1631         ; PC := 1631
1642 [-]: GETGLOBAL R163 K69     ; R163 := 0x33bdd652
1643 [-]: GETTABLE  R163 R163 K82; R163 := R163[0xf21b1d8e]
1644 [-]: MOVE      R164 R156    ; R164 := R156
1645 [-]: CLOSURE   R165 7       ; R165 := closure(Function #23.8)
1646 [-]: CALL      R163 3 1     ; R163(R164,R165)
1647 [-]: LOADKB    R163 0 0     ; R163 := false
1648 [-]: EQ        0 R157 K5    ; if R157 ~= 0.000000 then PC := 1661
1649 [-]: JMP       1661         ; PC := 1661
1650 [-]: GETUPVAL  R164 U2      ; R164 := U2
1651 [-]: SELF      R164 R164 K36; R165 := R164; R164 := R164[0xbad4316f]
1652 [-]: NEWTABLE  R166 0 3     ; R166 := {}
1653 [-]: GETUPVAL  R167 U10     ; R167 := U10
1654 [-]: GETTABLE  R167 R167 K236; R167 := R167["SORTIE"]
1655 [-]: SETTABLE  R166 K28 R167; R166["EntryId"] := R167
1656 [-]: SETTABLE  R166 K237 K21; R166["mMissionNumber"] := 1.000000
1657 [-]: SETTABLE  R166 K230 K38; R166["mIsUnlockHint"] := true
1658 [-]: LOADKB    R167 1 0     ; R167 := true
1659 [-]: CALL      R164 4 1     ; R164(R165,R166,R167)
1660 [-]: JMP       1737         ; PC := 1737
1661 [-]: GETUPVAL  R164 U29     ; R164 := U29
1662 [-]: LEN       R165 R156    ; R165 := # R156
1663 [-]: SETTABLE  R164 K238 R165; R164["NumMissions"] := R165
1664 [-]: GETUPVAL  R164 U29     ; R164 := U29
1665 [-]: SETTABLE  R164 K239 K5 ; R164["NumCompleted"] := 0.000000
1666 [-]: GETGLOBAL R164 K49     ; R164 := 0xcfc01047
1667 [-]: MOVE      R165 R156    ; R165 := R156
1668 [-]: CALL      R164 2 4     ; R164,R165,R166 := R164(R165)
1669 [-]: JMP       1723         ; PC := 1723
1670 [-]: GETTABLE  R169 R168 K147; R169 := R168["mCompleted"]
1671 [-]: TEST      R169 0       ; if not R169 then PC := 1678
1672 [-]: JMP       1678         ; PC := 1678
1673 [-]: GETUPVAL  R169 U29     ; R169 := U29
1674 [-]: GETUPVAL  R170 U29     ; R170 := U29
1675 [-]: GETTABLE  R170 R170 K239; R170 := R170["NumCompleted"]
1676 [-]: ADD       R170 R170 K21; R170 := R170 + 1.000000
1677 [-]: SETTABLE  R169 K239 R170; R169["NumCompleted"] := R170
1678 [-]: GETUPVAL  R169 U2      ; R169 := U2
1679 [-]: SELF      R169 R169 K36; R170 := R169; R169 := R169[0xbad4316f]
1680 [-]: NEWTABLE  R171 0 14    ; R171 := {}
1681 [-]: GETUPVAL  R172 U10     ; R172 := U10
1682 [-]: GETTABLE  R172 R172 K236; R172 := R172["SORTIE"]
1683 [-]: SETTABLE  R171 K28 R172; R171["EntryId"] := R172
1684 [-]: SETTABLE  R171 K237 R167; R171["mMissionNumber"] := R167
1685 [-]: GETTABLE  R172 R168 K132; R172 := R168["mMissionInfo"]
1686 [-]: SETTABLE  R171 K132 R172; R171["mMissionInfo"] := R172
1687 [-]: GETTABLE  R172 R168 K215; R172 := R168["mIcon"]
1688 [-]: SETTABLE  R171 K215 R172; R171["mIcon"] := R172
1689 [-]: GETTABLE  R172 R168 K52; R172 := R168["mExpiry"]
1690 [-]: SETTABLE  R171 K52 R172; R171["mExpiry"] := R172
1691 [-]: GETTABLE  R172 R168 K138; R172 := R168["mUnlocked"]
1692 [-]: SETTABLE  R171 K138 R172; R171["mUnlocked"] := R172
1693 [-]: GETTABLE  R172 R168 K240; R172 := R168["mModifierAuraDesc"]
1694 [-]: SETTABLE  R171 K240 R172; R171["mModifierAuraDesc"] := R172
1695 [-]: GETTABLE  R172 R168 K241; R172 := R168["mMissionDesc"]
1696 [-]: SETTABLE  R171 K241 R172; R171["mMissionDesc"] := R172
1697 [-]: GETTABLE  R172 R168 K242; R172 := R168["mBossInfo"]
1698 [-]: SETTABLE  R171 K242 R172; R171["mBossInfo"] := R172
1699 [-]: GETTABLE  R172 R168 K166; R172 := R168["mShowInStarChart"]
1700 [-]: SETTABLE  R171 K166 R172; R171["mShowInStarChart"] := R172
1701 [-]: GETTABLE  R172 R168 K243; R172 := R168["mNodeUnlocked"]
1702 [-]: SETTABLE  R171 K243 R172; R171["mNodeUnlocked"] := R172
1703 [-]: GETTABLE  R172 R168 K244; R172 := R168["mPrereqDesc"]
1704 [-]: SETTABLE  R171 K244 R172; R171["mPrereqDesc"] := R172
1705 [-]: GETTABLE  R172 R168 K245; R172 := R168["mLocationTexture"]
1706 [-]: SETTABLE  R171 K245 R172; R171["mLocationTexture"] := R172
1707 [-]: GETTABLE  R172 R168 K147; R172 := R168["mCompleted"]
1708 [-]: SETTABLE  R171 K147 R172; R171["mCompleted"] := R172
1709 [-]: LOADKB    R172 1 0     ; R172 := true
1710 [-]: CALL      R169 4 2     ; R169 := R169(R170,R171,R172)
1711 [-]: GETGLOBAL R170 K100    ; R170 := 0x7b998233
1712 [-]: MOVE      R171 R169    ; R171 := R169
1713 [-]: CALL      R170 2 2     ; R170 := R170(R171)
1714 [-]: TEST      R170 1       ; if R170 then PC := 1723
1715 [-]: JMP       1723         ; PC := 1723
1716 [-]: TEST      R163 1       ; if R163 then PC := 1723
1717 [-]: JMP       1723         ; PC := 1723
1718 [-]: GETUPVAL  R170 U30     ; R170 := U30
1719 [-]: LOADK     R171 K246    ; R171 := "InfoPanel.TimeLeft"
1720 [-]: MOVE      R172 R169    ; R172 := R169
1721 [-]: CALL      R170 3 1     ; R170(R171,R172)
1722 [-]: LOADKB    R163 1 0     ; R163 := true
1723 [-]: TFORLOOP  R164 2       ; R167,R168 :=  R164(R165,R166); if R167 ~= nil then begin PC = 1670; R166 := R167 end
1724 [-]: JMP       1670         ; PC := 1670
1725 [-]: GETGLOBAL R170 K100    ; R170 := 0x7b998233
1726 [-]: GETGLOBAL R171 K67     ; R171 := _T
1727 [-]: GETTABLE  R171 R171 K247; R171 := R171["CachedSortieRewardManifest"]
1728 [-]: CALL      R170 2 2     ; R170 := R170(R171)
1729 [-]: TEST      R170 1       ; if R170 then PC := 1737
1730 [-]: JMP       1737         ; PC := 1737
1731 [-]: GETUPVAL  R170 U31     ; R170 := U31
1732 [-]: GETUPVAL  R171 U29     ; R171 := U29
1733 [-]: GETGLOBAL R172 K67     ; R172 := _T
1734 [-]: GETTABLE  R172 R172 K247; R172 := R172["CachedSortieRewardManifest"]
1735 [-]: LOADKB    R173 0 0     ; R173 := false
1736 [-]: CALL      R170 4 1     ; R170(R171,R172,R173)
1737 [-]: GETGLOBAL R170 K17     ; R170 := 0xae91e43b
1738 [-]: SELF      R170 R170 K248; R171 := R170; R170 := R170[0xaade900e]
1739 [-]: LOADK     R172 K246    ; R172 := "InfoPanel.TimeLeft"
1740 [-]: CONST     R173 11      ; R173 := 11.000000
1741 [-]: MOVE      R174 R163    ; R174 := R163
1742 [-]: CALL      R170 5 1     ; R170(R171,R172,R173,R174)
1743 [-]: GETUPVAL  R170 U2      ; R170 := U2
1744 [-]: SELF      R170 R170 K43; R171 := R170; R170 := R170[0xcedda36e]
1745 [-]: LOADK     R172 K249    ; R172 := "InfoPanel.InfoMenu.SortieElement"
1746 [-]: CALL      R170 3 1     ; R170(R171,R172)
1747 [-]: GETUPVAL  R170 U2      ; R170 := U2
1748 [-]: SETTABLE  R170 K45 K120; R170["mVisibleElements"] := 6.000000
1749 [-]: JMP       1891         ; PC := 1891
1750 [-]: GETUPVAL  R170 U7      ; R170 := U7
1751 [-]: GETTABLE  R170 R170 K26; R170 := R170["LITE_SORTIES"]
1752 [-]: EQ        0 R0 R170    ; if R0 ~= R170 then PC := 1757
1753 [-]: JMP       1757         ; PC := 1757
1754 [-]: GETUPVAL  R170 U32     ; R170 := U32
1755 [-]: CALL      R170 1 1     ; R170()
1756 [-]: JMP       1891         ; PC := 1891
1757 [-]: GETUPVAL  R170 U7      ; R170 := U7
1758 [-]: GETTABLE  R170 R170 K250; R170 := R170["VOID_TEARS"]
1759 [-]: EQ        0 R0 R170    ; if R0 ~= R170 then PC := 1891
1760 [-]: JMP       1891         ; PC := 1891
1761 [-]: NEWTABLE  R170 0 0     ; R170 := {}
1762 [-]: NEWTABLE  R171 0 0     ; R171 := {}
1763 [-]: GETGLOBAL R172 K251    ; R172 := 0x25d99d89
1764 [-]: SELF      R172 R172 K252; R173 := R172; R172 := R172[0xefc55311]
1765 [-]: CALL      R172 2 2     ; R172 := R172(R173)
1766 [-]: LT        1 K5 R172    ; if 0.000000 < R172 then PC := 1769
1767 [-]: JMP       1769         ; PC := 1769
1768 [-]: LOADKB    R172 0 1     ; R172 := false; PC := 1769
1769 [-]: LOADKB    R172 1 0     ; R172 := true
1770 [-]: GETGLOBAL R173 K49     ; R173 := 0xcfc01047
1771 [-]: GETGLOBAL R174 K67     ; R174 := _T
1772 [-]: GETTABLE  R174 R174 K253; R174 := R174["CachedActiveMissions"]
1773 [-]: CALL      R173 2 4     ; R173,R174,R175 := R173(R174)
1774 [-]: JMP       1798         ; PC := 1798
1775 [-]: GETTABLE  R178 R177 K123; R178 := R177["mVisible"]
1776 [-]: TEST      R178 0       ; if not R178 then PC := 1798
1777 [-]: JMP       1798         ; PC := 1798
1778 [-]: GETTABLE  R178 R177 K132; R178 := R177["mMissionInfo"]
1779 [-]: GETTABLE  R178 R178 K254; R178 := R178["activeMissionTag"]
1780 [-]: GETGLOBAL R179 K65     ; R179 := EMPTY_SYMBOL
1781 [-]: EQ        1 R178 R179  ; if R178 == R179 then PC := 1798
1782 [-]: JMP       1798         ; PC := 1798
1783 [-]: TEST      R172 0       ; if not R172 then PC := 1788
1784 [-]: JMP       1788         ; PC := 1788
1785 [-]: GETTABLE  R178 R177 K255; R178 := R177["mHard"]
1786 [-]: TEST      R178 1       ; if R178 then PC := 1793
1787 [-]: JMP       1793         ; PC := 1793
1788 [-]: TEST      R172 1       ; if R172 then PC := 1798
1789 [-]: JMP       1798         ; PC := 1798
1790 [-]: GETTABLE  R178 R177 K255; R178 := R177["mHard"]
1791 [-]: TEST      R178 1       ; if R178 then PC := 1798
1792 [-]: JMP       1798         ; PC := 1798
1793 [-]: GETGLOBAL R178 K69     ; R178 := 0x33bdd652
1794 [-]: GETTABLE  R178 R178 K70; R178 := R178[0x23d5322f]
1795 [-]: MOVE      R179 R170    ; R179 := R170
1796 [-]: MOVE      R180 R177    ; R180 := R177
1797 [-]: CALL      R178 3 1     ; R178(R179,R180)
1798 [-]: TFORLOOP  R173 2       ; R176,R177 :=  R173(R174,R175); if R176 ~= nil then begin PC = 1775; R175 := R176 end
1799 [-]: JMP       1775         ; PC := 1775
1800 [-]: GETGLOBAL R178 K49     ; R178 := 0xcfc01047
1801 [-]: GETGLOBAL R179 K67     ; R179 := _T
1802 [-]: LOADK     R180 K256    ; R180 := "CachedVoidStormMissions"
1803 [-]: GETTABLE  R179 R179 R180; R179 := R179[R180]
1804 [-]: CALL      R178 2 4     ; R178,R179,R180 := R178(R179)
1805 [-]: JMP       1818         ; PC := 1818
1806 [-]: GETGLOBAL R183 K50     ; R183 := 0x34291f5c
1807 [-]: GETTABLE  R183 R183 K51; R183 := R183[0x397b920f]
1808 [-]: GETTABLE  R184 R182 K52; R184 := R182["mExpiry"]
1809 [-]: CALL      R183 2 2     ; R183 := R183(R184)
1810 [-]: CONST     R184 0       ; R184 := 0.000000
1811 [-]: LT        0 R184 R183  ; if R184 >= R183 then PC := 1818
1812 [-]: JMP       1818         ; PC := 1818
1813 [-]: GETGLOBAL R183 K69     ; R183 := 0x33bdd652
1814 [-]: GETTABLE  R183 R183 K70; R183 := R183[0x23d5322f]
1815 [-]: MOVE      R184 R171    ; R184 := R171
1816 [-]: MOVE      R185 R182    ; R185 := R182
1817 [-]: CALL      R183 3 1     ; R183(R184,R185)
1818 [-]: TFORLOOP  R178 2       ; R181,R182 :=  R178(R179,R180); if R181 ~= nil then begin PC = 1806; R180 := R181 end
1819 [-]: JMP       1806         ; PC := 1806
1820 [-]: GETGLOBAL R183 K69     ; R183 := 0x33bdd652
1821 [-]: GETTABLE  R183 R183 K82; R183 := R183[0xf21b1d8e]
1822 [-]: MOVE      R184 R170    ; R184 := R170
1823 [-]: CLOSURE   R185 8       ; R185 := closure(Function #23.9)
1824 [-]: CALL      R183 3 1     ; R183(R184,R185)
1825 [-]: GETGLOBAL R183 K69     ; R183 := 0x33bdd652
1826 [-]: GETTABLE  R183 R183 K82; R183 := R183[0xf21b1d8e]
1827 [-]: MOVE      R184 R171    ; R184 := R171
1828 [-]: CLOSURE   R185 9       ; R185 := closure(Function #23.10)
1829 [-]: CALL      R183 3 1     ; R183(R184,R185)
1830 [-]: GETUPVAL  R183 U33     ; R183 := U33
1831 [-]: TEST      R183 1       ; if R183 then PC := 1859
1832 [-]: JMP       1859         ; PC := 1859
1833 [-]: GETGLOBAL R183 K49     ; R183 := 0xcfc01047
1834 [-]: MOVE      R184 R170    ; R184 := R170
1835 [-]: CALL      R183 2 4     ; R183,R184,R185 := R183(R184)
1836 [-]: JMP       1856         ; PC := 1856
1837 [-]: GETUPVAL  R188 U2      ; R188 := U2
1838 [-]: SELF      R188 R188 K36; R189 := R188; R188 := R188[0xbad4316f]
1839 [-]: NEWTABLE  R190 0 6     ; R190 := {}
1840 [-]: GETUPVAL  R191 U10     ; R191 := U10
1841 [-]: LOADK     R192 K257    ; R192 := "VOID_TEAR_MISSION"
1842 [-]: GETTABLE  R191 R191 R192; R191 := R191[R192]
1843 [-]: SETTABLE  R190 K28 R191; R190["EntryId"] := R191
1844 [-]: GETTABLE  R191 R187 K132; R191 := R187["mMissionInfo"]
1845 [-]: SETTABLE  R190 K132 R191; R190["mMissionInfo"] := R191
1846 [-]: GETTABLE  R191 R187 K215; R191 := R187["mIcon"]
1847 [-]: SETTABLE  R190 K215 R191; R190["mIcon"] := R191
1848 [-]: GETTABLE  R191 R187 K138; R191 := R187["mUnlocked"]
1849 [-]: SETTABLE  R190 K138 R191; R190["mUnlocked"] := R191
1850 [-]: GETTABLE  R191 R187 K52; R191 := R187["mExpiry"]
1851 [-]: SETTABLE  R190 K52 R191; R190["mExpiry"] := R191
1852 [-]: GETTABLE  R191 R187 K139; R191 := R187["mRegionUnlocked"]
1853 [-]: SETTABLE  R190 K139 R191; R190["mRegionUnlocked"] := R191
1854 [-]: LOADKB    R191 1 0     ; R191 := true
1855 [-]: CALL      R188 4 1     ; R188(R189,R190,R191)
1856 [-]: TFORLOOP  R183 2       ; R186,R187 :=  R183(R184,R185); if R186 ~= nil then begin PC = 1837; R185 := R186 end
1857 [-]: JMP       1837         ; PC := 1837
1858 [-]: JMP       1884         ; PC := 1884
1859 [-]: GETGLOBAL R188 K49     ; R188 := 0xcfc01047
1860 [-]: MOVE      R189 R171    ; R189 := R171
1861 [-]: CALL      R188 2 4     ; R188,R189,R190 := R188(R189)
1862 [-]: JMP       1882         ; PC := 1882
1863 [-]: GETUPVAL  R193 U2      ; R193 := U2
1864 [-]: SELF      R193 R193 K36; R194 := R193; R193 := R193[0xbad4316f]
1865 [-]: NEWTABLE  R195 0 6     ; R195 := {}
1866 [-]: GETUPVAL  R196 U10     ; R196 := U10
1867 [-]: LOADK     R197 K257    ; R197 := "VOID_TEAR_MISSION"
1868 [-]: GETTABLE  R196 R196 R197; R196 := R196[R197]
1869 [-]: SETTABLE  R195 K28 R196; R195["EntryId"] := R196
1870 [-]: GETTABLE  R196 R192 K132; R196 := R192["mMissionInfo"]
1871 [-]: SETTABLE  R195 K132 R196; R195["mMissionInfo"] := R196
1872 [-]: GETTABLE  R196 R192 K215; R196 := R192["mIcon"]
1873 [-]: SETTABLE  R195 K215 R196; R195["mIcon"] := R196
1874 [-]: GETTABLE  R196 R192 K138; R196 := R192["mUnlocked"]
1875 [-]: SETTABLE  R195 K138 R196; R195["mUnlocked"] := R196
1876 [-]: GETTABLE  R196 R192 K52; R196 := R192["mExpiry"]
1877 [-]: SETTABLE  R195 K52 R196; R195["mExpiry"] := R196
1878 [-]: GETTABLE  R196 R192 K139; R196 := R192["mRegionUnlocked"]
1879 [-]: SETTABLE  R195 K139 R196; R195["mRegionUnlocked"] := R196
1880 [-]: LOADKB    R196 1 0     ; R196 := true
1881 [-]: CALL      R193 4 1     ; R193(R194,R195,R196)
1882 [-]: TFORLOOP  R188 2       ; R191,R192 :=  R188(R189,R190); if R191 ~= nil then begin PC = 1863; R190 := R191 end
1883 [-]: JMP       1863         ; PC := 1863
1884 [-]: GETUPVAL  R193 U2      ; R193 := U2
1885 [-]: SELF      R193 R193 K43; R194 := R193; R193 := R193[0xcedda36e]
1886 [-]: LOADK     R195 K182    ; R195 := "InfoPanel.InfoMenu.AlertElement"
1887 [-]: CALL      R193 3 1     ; R193(R194,R195)
1888 [-]: GETUPVAL  R193 U2      ; R193 := U2
1889 [-]: CONST     R194 6       ; R194 := 6.000000
1890 [-]: SETTABLE  R193 K45 R194; R193["mVisibleElements"] := R194
1891 [-]: CLOSURE   R193 10      ; R193 := closure(Function #23.11)
1892 [-]: GETUPVAL  R0 U34       ; R0 := U34
1893 [-]: GETUPVAL  R194 U2      ; R194 := U2
1894 [-]: LOADK     R196 K258    ; R196 := true
1895 [-]: SELF      R194 R194 R196; R195 := R194; R194 := R194[R196]
1896 [-]: CLOSURE   R196 11      ; R196 := closure(Function #23.12)
1897 [-]: GETUPVAL  R0 U0        ; R0 := U0
1898 [-]: MOVE      R0 R1        ; R0 := R1
1899 [-]: MOVE      R0 R193      ; R0 := R193
1900 [-]: LOADKB    R197 0 0     ; R197 := false
1901 [-]: MOVE      R198 R1      ; R198 := R1
1902 [-]: CALL      R194 5 1     ; R194(R195,R196,R197,R198)
1903 [-]: TEST      R1 0         ; if not R1 then PC := 1907
1904 [-]: JMP       1907         ; PC := 1907
1905 [-]: MOVE      R194 R193    ; R194 := R193
1906 [-]: CALL      R194 1 1     ; R194()
1907 [-]: GETUPVAL  R194 U7      ; R194 := U7
1908 [-]: GETTABLE  R194 R194 K234; R194 := R194["SORTIES"]
1909 [-]: EQ        1 R0 R194    ; if R0 == R194 then PC := 1913
1910 [-]: JMP       1913         ; PC := 1913
1911 [-]: GETUPVAL  R194 U35     ; R194 := U35
1912 [-]: CALL      R194 1 1     ; R194()
1913 [-]: RETURN    R0 1         ; return 


; Function #23.1:
;
; Name:            
; Defined at line: 940
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #23.2:
;
; Name:            
; Defined at line: 962
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #23.3:
;
; Name:            
; Defined at line: 1058
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EventInfo"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCommunity"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["EventInfo"]
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCommunity"]
  7 [-]: TEST      R2 1         ; if R2 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADKB    R2 0 0       ; R2 := false
 10 [-]: RETURN    R2 2         ; return R2
 11 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EventInfo"]
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mOngoing"]
 13 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["EventInfo"]
 14 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mOngoing"]
 15 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EventInfo"]
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mOngoing"]
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EventInfo"]
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mSuccess"]
 22 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["EventInfo"]
 23 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mSuccess"]
 24 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 49
 25 [-]: JMP       49           ; PC := 49
 26 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EventInfo"]
 27 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mActivation"]
 28 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["sec"]
 29 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["EventInfo"]
 30 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mActivation"]
 31 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["sec"]
 32 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 47
 33 [-]: JMP       47           ; PC := 47
 34 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EventInfo"]
 35 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mActivation"]
 36 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["sec"]
 37 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["EventInfo"]
 38 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mActivation"]
 39 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["sec"]
 40 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["GoalIdx"]
 43 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["GoalIdx"]
 44 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 47
 47 [-]: LOADKB    R2 1 0       ; R2 := true
 48 [-]: RETURN    R2 2         ; return R2
 49 [-]: GETGLOBAL R2 K7        ; R2 := 0x5bced4c4
 50 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0xe4a5b3ca]
 51 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["EventInfo"]
 52 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mSuccess"]
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: GETGLOBAL R3 K7        ; R3 := 0x5bced4c4
 55 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0xe4a5b3ca]
 56 [-]: GETTABLE  R4 R1 K0     ; R4 := R1["EventInfo"]
 57 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mSuccess"]
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 62
 62 [-]: LOADKB    R2 1 0       ; R2 := true
 63 [-]: RETURN    R2 2         ; return R2
 64 [-]: RETURN    R0 1         ; return 


; Function #23.4:
;
; Name:            
; Defined at line: 1082
; #Upvalues:       3
; #Parameters:     11
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R11 K0       ; R11 := 0x0032441c
  2 [-]: GETTABLE  R11 R11 K1   ; R11 := R11["CachedGoalInfo"]
  3 [-]: GETTABLE  R11 R11 R0   ; R11 := R11[R0]
  4 [-]: GETGLOBAL R12 K2       ; R12 := 0x7b998233
  5 [-]: MOVE      R13 R11      ; R13 := R11
  6 [-]: CALL      R12 2 2      ; R12 := R12(R13)
  7 [-]: TEST      R12 0        ; if not R12 then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETGLOBAL R12 K3       ; R12 := _T
 10 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["LockedGoalMissionInfo"]
 11 [-]: TEST      R12 0        ; if not R12 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R12 K3       ; R12 := _T
 14 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["LockedGoalMissionInfo"]
 15 [-]: GETTABLE  R12 R12 R0   ; R12 := R12[R0]
 16 [-]: TEST      R12 0        ; if not R12 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETGLOBAL R12 K3       ; R12 := _T
 19 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["LockedGoalMissionInfo"]
 20 [-]: GETTABLE  R11 R12 R0   ; R11 := R12[R0]
 21 [-]: EQ        0 R4 K5      ; if R4 ~= nil then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADKB    R4 0 0       ; R4 := false
 24 [-]: EQ        0 R5 K5      ; if R5 ~= nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADKB    R5 0 0       ; R5 := false
 27 [-]: GETGLOBAL R12 K2       ; R12 := 0x7b998233
 28 [-]: MOVE      R13 R11      ; R13 := R11
 29 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 30 [-]: TEST      R12 0        ; if not R12 then PC := 39
 31 [-]: JMP       39           ; PC := 39
 32 [-]: GETGLOBAL R12 K6       ; R12 := 0x3d106989
 33 [-]: LOADK     R13 K7       ; R13 := "ERROR: invalid mission/key supplied for event at node="
 34 [-]: MOVE      R14 R0       ; R14 := R0
 35 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 36 [-]: CALL      R12 2 1      ; R12(R13)
 37 [-]: LOADNIL   R12 R12      ; R12 := nil
 38 [-]: RETURN    R12 2        ; return R12
 39 [-]: GETGLOBAL R12 K8       ; R12 := 0x7f5022cf
 40 [-]: GETTABLE  R12 R12 K9   ; R12 := R12[0xa5c556b9]
 41 [-]: MOVE      R13 R0       ; R13 := R0
 42 [-]: GETUPVAL  R14 U0       ; R14 := U0
 43 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["ANY_NODE_PREFIX"]
 44 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 45 [-]: EQ        1 R12 K5     ; if R12 == nil then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: LOADK     R0 K11       ; R0 := ""
 48 [-]: LOADNIL   R12 R12      ; R12 := nil
 49 [-]: GETTABLE  R13 R11 K12  ; R13 := R11["mFomorian"]
 50 [-]: TEST      R13 0        ; if not R13 then PC := 66
 51 [-]: JMP       66           ; PC := 66
 52 [-]: GETUPVAL  R13 U0       ; R13 := U0
 53 [-]: GETTABLE  R13 R13 K13  ; R13 := R13[0x5e35d4d6]
 54 [-]: CALL      R13 1 2      ; R13 := R13()
 55 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13[0x3ad9ed31]
 56 [-]: GETTABLE  R15 R11 K15  ; R15 := R11["mVictimNode"]
 57 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 58 [-]: GETGLOBAL R14 K16      ; R14 := 0x603636ad
 59 [-]: GETGLOBAL R15 K17      ; R15 := 0x64fb1586
 60 [-]: GETTABLE  R16 R13 K18  ; R16 := R13["locTag"]
 61 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 62 [-]: LOADKB    R16 0 0      ; R16 := false
 63 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 64 [-]: MOVE      R12 R14      ; R12 := R14
 65 [-]: JMP       100          ; PC := 100
 66 [-]: GETTABLE  R14 R11 K19  ; R14 := R11["mRoaming"]
 67 [-]: TEST      R14 0        ; if not R14 then PC := 77
 68 [-]: JMP       77           ; PC := 77
 69 [-]: GETGLOBAL R14 K16      ; R14 := 0x603636ad
 70 [-]: GETGLOBAL R15 K17      ; R15 := 0x64fb1586
 71 [-]: GETTABLE  R16 R11 K20  ; R16 := R11["mToolTip"]
 72 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 73 [-]: LOADKB    R16 0 0      ; R16 := false
 74 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 75 [-]: MOVE      R12 R14      ; R12 := R14
 76 [-]: JMP       100          ; PC := 100
 77 [-]: TEST      R7 0         ; if not R7 then PC := 91
 78 [-]: JMP       91           ; PC := 91
 79 [-]: GETTABLE  R14 R11 K21  ; R14 := R11["mTag"]
 80 [-]: GETGLOBAL R15 K22      ; R15 := 0x0469f296
 81 [-]: LOADK     R16 K23      ; R16 := "WaterFight"
 82 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 83 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 91
 84 [-]: JMP       91           ; PC := 91
 85 [-]: GETGLOBAL R14 K16      ; R14 := 0x603636ad
 86 [-]: LOADK     R15 K24      ; R15 := "/Lotus/Language/Menu/BonusBounty"
 87 [-]: LOADNIL   R16 R16      ; R16 := nil
 88 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 89 [-]: MOVE      R12 R14      ; R12 := R14
 90 [-]: JMP       100          ; PC := 100
 91 [-]: GETGLOBAL R14 K16      ; R14 := 0x603636ad
 92 [-]: LOADK     R15 K25      ; R15 := "/Lotus/Language/Menu/Lobby_Mission"
 93 [-]: LOADNIL   R16 R16      ; R16 := nil
 94 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 95 [-]: LOADK     R15 K26      ; R15 := " "
 96 [-]: GETGLOBAL R16 K17      ; R16 := 0x64fb1586
 97 [-]: MOVE      R17 R6       ; R17 := R6
 98 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 99 [-]: CONCAT    R12 R14 R16  ; R12 := R14 .. R15 .. R16
100 [-]: LOADNIL   R14 R14      ; R14 := nil
101 [-]: TEST      R10 0        ; if not R10 then PC := 116
102 [-]: JMP       116          ; PC := 116
103 [-]: EQ        1 R10 K11    ; if R10 == "" then PC := 116
104 [-]: JMP       116          ; PC := 116
105 [-]: GETGLOBAL R15 K27      ; R15 := 0xb009bbc6
106 [-]: MOVE      R16 R10      ; R16 := R10
107 [-]: CALL      R15 2 2      ; R15 := R15(R16)
108 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
109 [-]: MOVE      R17 R15      ; R17 := R15
110 [-]: CALL      R16 2 2      ; R16 := R16(R17)
111 [-]: TEST      R16 1        ; if R16 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: SELF      R16 R15 K28  ; R17 := R15; R16 := R15[0x056dcf06]
114 [-]: CALL      R16 2 2      ; R16 := R16(R17)
115 [-]: MOVE      R14 R16      ; R14 := R16
116 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
117 [-]: MOVE      R17 R14      ; R17 := R14
118 [-]: CALL      R16 2 2      ; R16 := R16(R17)
119 [-]: TEST      R16 0        ; if not R16 then PC := 126
120 [-]: JMP       126          ; PC := 126
121 [-]: GETUPVAL  R16 U0       ; R16 := U0
122 [-]: GETTABLE  R16 R16 K29  ; R16 := R16[0xc63cb7e8]
123 [-]: GETTABLE  R17 R11 K30  ; R17 := R11["mMissionInfo"]
124 [-]: CALL      R16 2 2      ; R16 := R16(R17)
125 [-]: MOVE      R14 R16      ; R14 := R16
126 [-]: NEWTABLE  R16 0 21     ; R16 := {}
127 [-]: GETUPVAL  R17 U1       ; R17 := U1
128 [-]: GETTABLE  R17 R17 K32  ; R17 := R17["EVENT"]
129 [-]: SETTABLE  R16 K31 R17  ; R16["EntryId"] := R17
130 [-]: SETTABLE  R16 K33 R8   ; R16["Best"] := R8
131 [-]: SETTABLE  R16 K34 R1   ; R16["Count"] := R1
132 [-]: SETTABLE  R16 K35 R2   ; R16["Goal"] := R2
133 [-]: GETUPVAL  R17 U2       ; R17 := U2
134 [-]: GETTABLE  R17 R17 K37  ; R17 := R17["mFaction"]
135 [-]: SETTABLE  R16 K36 R17  ; R16["Faction"] := R17
136 [-]: GETUPVAL  R17 U2       ; R17 := U2
137 [-]: SETTABLE  R16 K38 R17  ; R16["EventInfo"] := R17
138 [-]: SETTABLE  R16 K39 K40  ; R16["IsLinearEvent"] := true
139 [-]: GETTABLE  R17 R11 K30  ; R17 := R11["mMissionInfo"]
140 [-]: SETTABLE  R16 K30 R17  ; R16["mMissionInfo"] := R17
141 [-]: SETTABLE  R16 K41 K5   ; R16["mIcon"] := nil
142 [-]: GETUPVAL  R17 U2       ; R17 := U2
143 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["mExpiry"]
144 [-]: SETTABLE  R16 K42 R17  ; R16["mExpiry"] := R17
145 [-]: TESTSET   R17 R4 1     ; if R4 then PC := 148 else R17 := R4
146 [-]: JMP       148          ; PC := 148
147 [-]: MOVE      R17 R5       ; R17 := R5
148 [-]: SETTABLE  R16 K43 R17  ; R16["mUnlocked"] := R17
149 [-]: GETGLOBAL R17 K16      ; R17 := 0x603636ad
150 [-]: LOADK     R18 K45      ; R18 := "/Lotus/Language/Menu/WorldStatePanel_AlertReward"
151 [-]: NEWTABLE  R19 0 1      ; R19 := {}
152 [-]: SETTABLE  R19 K46 K11  ; R19["REWARD"] := ""
153 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
154 [-]: SETTABLE  R16 K44 R17  ; R16["mModifierAuraDesc"] := R17
155 [-]: SETTABLE  R16 K47 K11  ; R16["mMissionDesc"] := ""
156 [-]: SETTABLE  R16 K48 K5   ; R16["mBossInfo"] := nil
157 [-]: TESTSET   R17 R4 1     ; if R4 then PC := 160 else R17 := R4
158 [-]: JMP       160          ; PC := 160
159 [-]: MOVE      R17 R5       ; R17 := R5
160 [-]: SETTABLE  R16 K49 R17  ; R16["mShowInStarChart"] := R17
161 [-]: SETTABLE  R16 K50 R4   ; R16["mNodeUnlocked"] := R4
162 [-]: SETTABLE  R16 K51 K11  ; R16["mPrereqDesc"] := ""
163 [-]: SETTABLE  R16 K52 R14  ; R16["mLocationTexture"] := R14
164 [-]: SETTABLE  R16 K53 R5   ; R16["mCompleted"] := R5
165 [-]: SETTABLE  R16 K54 R3   ; R16["Reward"] := R3
166 [-]: SETTABLE  R16 K55 R12  ; R16["mDesc"] := R12
167 [-]: SETTABLE  R16 K56 R0   ; R16["mLinearEventNode"] := R0
168 [-]: SETTABLE  R16 K57 R6   ; R16["mMissionNumber"] := R6
169 [-]: SETTABLE  R16 K58 R9   ; R16["mIsFinalMission"] := R9
170 [-]: GETGLOBAL R17 K22      ; R17 := 0x0469f296
171 [-]: MOVE      R18 R0       ; R18 := R0
172 [-]: CALL      R17 2 2      ; R17 := R17(R18)
173 [-]: SETTABLE  R16 K59 R17  ; R16["mNodeTag"] := R17
174 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
175 [-]: GETGLOBAL R18 K3       ; R18 := _T
176 [-]: GETTABLE  R18 R18 K60  ; R18 := R18["CachedGoalLongDesc"]
177 [-]: CALL      R17 2 2      ; R17 := R17(R18)
178 [-]: TEST      R17 1        ; if R17 then PC := 194
179 [-]: JMP       194          ; PC := 194
180 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
181 [-]: GETGLOBAL R18 K3       ; R18 := _T
182 [-]: GETTABLE  R18 R18 K60  ; R18 := R18["CachedGoalLongDesc"]
183 [-]: GETTABLE  R18 R18 R0   ; R18 := R18[R0]
184 [-]: CALL      R17 2 2      ; R17 := R17(R18)
185 [-]: TEST      R17 1        ; if R17 then PC := 194
186 [-]: JMP       194          ; PC := 194
187 [-]: GETGLOBAL R17 K16      ; R17 := 0x603636ad
188 [-]: GETGLOBAL R18 K3       ; R18 := _T
189 [-]: GETTABLE  R18 R18 K60  ; R18 := R18["CachedGoalLongDesc"]
190 [-]: GETTABLE  R18 R18 R0   ; R18 := R18[R0]
191 [-]: LOADNIL   R19 R19      ; R19 := nil
192 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
193 [-]: SETTABLE  R16 K47 R17  ; R16["mMissionDesc"] := R17
194 [-]: RETURN    R16 2        ; return R16
195 [-]: RETURN    R0 1         ; return 


; Function #23.5:
;
; Name:            
; Defined at line: 1248
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mRewardList"]
  3 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xea061e98]
  4 [-]: CLOSURE   R2 0         ; R2 := closure(Function #23.5.1)
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #23.5.1:
;
; Name:            
; Defined at line: 1250
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["PixelateScroll"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x67652851
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: MUL       R2 R2 K2     ; R2 := R2 * 0.350000
  5 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
  6 [-]: SETTABLE  R0 K0 R1     ; R0["PixelateScroll"] := R1
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x9bafffe3
  8 [-]: CONST     R2 0         ; R2 := 0.500000
  9 [-]: CONST     R3 1         ; R3 := 1.500000
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0x5bced4c4
 11 [-]: GETTABLE  R4 R4 K5     ; R4 := R4[0xa40531d8]
 12 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["PixelateBias"]
 13 [-]: CONST     R6 5         ; R6 := 5.000000
 14 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 15 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 16 [-]: GETGLOBAL R2 K7        ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x91e13703]
 18 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mClipName"]
 19 [-]: LOADK     R5 K10       ; R5 := ".Image"
 20 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 21 [-]: LOADK     R5 K6        ; R5 := "PixelateBias"
 22 [-]: CONST     R6 0         ; R6 := 0.500000
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["PixelateScroll"]
 25 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["PixelateBias"]
 26 [-]: SUB       R9 K11 R9    ; R9 := 1.000000 - R9
 27 [-]: MUL       R8 R8 R9     ; R8 := R8 * R9
 28 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["PixelateBias"]
 29 [-]: SUB       R9 K11 R9    ; R9 := 1.000000 - R9
 30 [-]: MUL       R9 R9 K12    ; R9 := R9 * 0.500000
 31 [-]: ADD       R9 K12 R9    ; R9 := 0.500000 + R9
 32 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 33 [-]: RETURN    R0 1         ; return 


; Function #23.6:
;
; Name:            
; Defined at line: 1342
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mAlertInfo"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTag"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x56c01834]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mAlertInfo"]
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTag"]
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x56c01834]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 0         ; if not R2 then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETGLOBAL R2 K3        ; R2 := 0x64fb1586
 14 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mAlertInfo"]
 15 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mTag"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: GETGLOBAL R3 K3        ; R3 := 0x64fb1586
 18 [-]: GETTABLE  R4 R1 K0     ; R4 := R1["mAlertInfo"]
 19 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mTag"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 24
 24 [-]: LOADKB    R2 1 0       ; R2 := true
 25 [-]: RETURN    R2 2         ; return R2
 26 [-]: JMP       42           ; PC := 42
 27 [-]: GETGLOBAL R2 K4        ; R2 := 0x34291f5c
 28 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x397b920f]
 29 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mAlertInfo"]
 30 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mActivation"]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: GETGLOBAL R3 K4        ; R3 := 0x34291f5c
 33 [-]: GETTABLE  R3 R3 K5     ; R3 := R3[0x397b920f]
 34 [-]: GETTABLE  R4 R1 K0     ; R4 := R1["mAlertInfo"]
 35 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mActivation"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 40
 40 [-]: LOADKB    R2 1 0       ; R2 := true
 41 [-]: RETURN    R2 2         ; return R2
 42 [-]: RETURN    R0 1         ; return 


; Function #23.7:
;
; Name:            
; Defined at line: 1470
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSyndicateName"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mSyndicateName"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSyndicateName"]
  6 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mSyndicateName"]
  7 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 10
 10 [-]: LOADKB    R2 1 0       ; R2 := true
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTitleLevel"]
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["minValue"]
 14 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mTitleLevel"]
 15 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["minValue"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 27
 17 [-]: JMP       27           ; PC := 27
 18 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTitleLevel"]
 19 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["minValue"]
 20 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mTitleLevel"]
 21 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["minValue"]
 22 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 25
 25 [-]: LOADKB    R2 1 0       ; R2 := true
 26 [-]: RETURN    R2 2         ; return R2
 27 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mMissionInfo"]
 28 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["syndicateXP"]
 29 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mMissionInfo"]
 30 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["syndicateXP"]
 31 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 34
 34 [-]: LOADKB    R2 1 0       ; R2 := true
 35 [-]: RETURN    R2 2         ; return R2
 36 [-]: RETURN    R0 1         ; return 


; Function #23.8:
;
; Name:            
; Defined at line: 1505
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mMissionIndex"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mMissionIndex"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADKB    R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #23.9:
;
; Name:            
; Defined at line: 1557
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x64fb1586
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mMissionInfo"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["activeMissionTag"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x64fb1586
  6 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mMissionInfo"]
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["activeMissionTag"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 12
 12 [-]: LOADKB    R2 1 0       ; R2 := true
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #23.10:
;
; Name:            
; Defined at line: 1561
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x64fb1586
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mMissionInfo"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["activeMissionTag"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x64fb1586
  6 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mMissionInfo"]
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["activeMissionTag"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 12
 12 [-]: LOADKB    R2 1 0       ; R2 := true
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #23.11:
;
; Name:            
; Defined at line: 1580
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #23.12:
;
; Name:            
; Defined at line: 1585
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 0 0       ; R0 := false
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: TEST      R0 1         ; if R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 1601
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Section"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SORTIES"]
  4 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Section"]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["LITE_SORTIES"]
  9 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 27
 10 [-]: JMP       27           ; PC := 27
 11 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Section"]
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SYND_MISSIONS"]
 14 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Section"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VOID_TEARS"]
 19 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETGLOBAL R1 K5        ; R1 := 0x25d99d89
 22 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xefc55311]
 23 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 24 [-]: LT        1 K7 R1      ; if 0.000000 < R1 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 27
 27 [-]: LOADKB    R1 1 0       ; R1 := true
 28 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 29 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xaade900e]
 30 [-]: LOADK     R4 K10       ; R4 := "InfoPanel.TimeLeft"
 31 [-]: CONST     R5 11        ; R5 := 11.000000
 32 [-]: MOVE      R6 R1        ; R6 := R1
 33 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 34 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 35 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x67bc869f]
 36 [-]: LOADK     R4 K12       ; R4 := "InfoPanel.Title"
 37 [-]: CONST     R5 12        ; R5 := 12.000000
 38 [-]: GETUPVAL  R6 U1        ; R6 := U1
 39 [-]: GETTABLE  R6 R6 K13    ; R6 := R6[0x06d055f9]
 40 [-]: MOVE      R7 R1        ; R7 := R1
 41 [-]: CONST     R8 0         ; R8 := 0.000000
 42 [-]: CONST     R9 125       ; R9 := 125.000000
 43 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 44 [-]: ADD       R6 K14 R6    ; R6 := 479.000000 + R6
 45 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 46 [-]: GETUPVAL  R2 U2        ; R2 := U2
 47 [-]: GETUPVAL  R3 U1        ; R3 := U1
 48 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0x06d055f9]
 49 [-]: MOVE      R4 R1        ; R4 := R1
 50 [-]: CONST     R5 1         ; R5 := 1.000000
 51 [-]: CONST     R6 -1        ; R6 := -1.000000
 52 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 53 [-]: SETTABLE  R2 K15 R3    ; R2["mDepthDirection"] := R3
 54 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 55 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x42b04007]
 56 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["Title"]
 57 [-]: LOADKB    R5 1 0       ; R5 := true
 58 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 59 [-]: GETUPVAL  R3 U3        ; R3 := U3
 60 [-]: TEST      R3 0         ; if not R3 then PC := 105
 61 [-]: JMP       105          ; PC := 105
 62 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["Section"]
 63 [-]: GETUPVAL  R4 U0        ; R4 := U0
 64 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["QUESTS"]
 65 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 105
 66 [-]: JMP       105          ; PC := 105
 67 [-]: GETUPVAL  R3 U4        ; R3 := U4
 68 [-]: EQ        1 R3 K19     ; if R3 == nil then PC := 105
 69 [-]: JMP       105          ; PC := 105
 70 [-]: GETUPVAL  R3 U4        ; R3 := U4
 71 [-]: GETTABLE  R3 R3 K20    ; R3 := R3[1.000000]
 72 [-]: EQ        1 R3 K19     ; if R3 == nil then PC := 105
 73 [-]: JMP       105          ; PC := 105
 74 [-]: GETUPVAL  R3 U4        ; R3 := U4
 75 [-]: GETTABLE  R3 R3 K20    ; R3 := R3[1.000000]
 76 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Title"]
 77 [-]: EQ        1 R3 K19     ; if R3 == nil then PC := 105
 78 [-]: JMP       105          ; PC := 105
 79 [-]: GETUPVAL  R3 U5        ; R3 := U5
 80 [-]: GETTABLE  R3 R3 K21    ; R3 := R3[0x8e7c3b5e]
 81 [-]: GETGLOBAL R4 K5        ; R4 := 0x25d99d89
 82 [-]: CALL      R3 2 3       ; R3,R4 := R3(R4)
 83 [-]: GETUPVAL  R5 U6        ; R5 := U6
 84 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 105
 85 [-]: JMP       105          ; PC := 105
 86 [-]: EQ        1 R4 K22     ; if R4 == 11.000000 then PC := 90
 87 [-]: JMP       90           ; PC := 90
 88 [-]: EQ        0 R4 K23     ; if R4 ~= 13.000000 then PC := 105
 89 [-]: JMP       105          ; PC := 105
 90 [-]: MOVE      R5 R2        ; R5 := R2
 91 [-]: LOADK     R6 K24       ; R6 := " - "
 92 [-]: GETUPVAL  R7 U4        ; R7 := U4
 93 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[1.000000]
 94 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["Title"]
 95 [-]: LOADK     R8 K24       ; R8 := " - "
 96 [-]: GETGLOBAL R9 K25       ; R9 := 0x603636ad
 97 [-]: GETGLOBAL R10 K26      ; R10 := 0x64fb1586
 98 [-]: GETUPVAL  R11 U4       ; R11 := U4
 99 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
100 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["Text"]
101 [-]: CALL      R10 2 2      ; R10 := R10(R11)
102 [-]: LOADKB    R11 0 0      ; R11 := false
103 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
104 [-]: CONCAT    R2 R5 R9     ; R2 := R5 .. R6 .. R7 .. R8 .. R9
105 [-]: GETUPVAL  R5 U1        ; R5 := U1
106 [-]: GETTABLE  R5 R5 K28    ; R5 := R5[0xc340ce91]
107 [-]: GETGLOBAL R6 K8        ; R6 := 0xae91e43b
108 [-]: LOADK     R7 K12       ; R7 := "InfoPanel.Title"
109 [-]: MOVE      R8 R2        ; R8 := R2
110 [-]: LOADK     R9 K29       ; R9 := "..."
111 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
112 [-]: TEST      R1 0         ; if not R1 then PC := 156
113 [-]: JMP       156          ; PC := 156
114 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["Section"]
115 [-]: GETUPVAL  R6 U0        ; R6 := U0
116 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["VOID_TEARS"]
117 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 156
118 [-]: JMP       156          ; PC := 156
119 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
120 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0x42b04007]
121 [-]: LOADK     R7 K30       ; R7 := "/Lotus/Language/Resources/SteelEssence"
122 [-]: LOADKB    R8 0 0       ; R8 := false
123 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
124 [-]: GETGLOBAL R6 K8        ; R6 := 0xae91e43b
125 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0x42b04007]
126 [-]: LOADK     R8 K31       ; R8 := "/Lotus/Language/WorldStateWindow/HardModeRelicReward"
127 [-]: LOADKB    R9 1 0       ; R9 := true
128 [-]: NEWTABLE  R10 0 4      ; R10 := {}
129 [-]: LOADK     R11 K33      ; R11 := "<font color=\""
130 [-]: GETUPVAL  R12 U7       ; R12 := U7
131 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["FloatingContentHex"]
132 [-]: LOADK     R13 K35      ; R13 := "\">"
133 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
134 [-]: SETTABLE  R10 K32 R11  ; R10["OPEN_COLOR"] := R11
135 [-]: SETTABLE  R10 K36 K37  ; R10["CLOSE_COLOR"] := "</font>"
136 [-]: GETUPVAL  R11 U1       ; R11 := U1
137 [-]: GETTABLE  R11 R11 K39  ; R11 := R11[0x1142c7a8]
138 [-]: CONST     R12 1        ; R12 := 1.000000
139 [-]: CALL      R11 2 2      ; R11 := R11(R12)
140 [-]: SETTABLE  R10 K38 R11  ; R10["NUM"] := R11
141 [-]: SETTABLE  R10 K40 R5   ; R10["REWARD"] := R5
142 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
143 [-]: LOADK     R7 K41       ; R7 := "<p><font color=\""
144 [-]: GETUPVAL  R8 U7        ; R8 := U7
145 [-]: GETTABLE  R8 R8 K42    ; R8 := R8["ContentHex"]
146 [-]: LOADK     R9 K35       ; R9 := "\">"
147 [-]: MOVE      R10 R6       ; R10 := R6
148 [-]: LOADK     R11 K43      ; R11 := "</font></p>"
149 [-]: CONCAT    R7 R7 R11    ; R7 := R7 .. R8 .. R9 .. R10 .. R11
150 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
151 [-]: SELF      R8 R8 K44    ; R9 := R8; R8 := R8[0x5f56eeab]
152 [-]: LOADK     R10 K10      ; R10 := "InfoPanel.TimeLeft"
153 [-]: CONST     R11 29       ; R11 := 29.000000
154 [-]: MOVE      R12 R7       ; R12 := R7
155 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
156 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
157 [-]: SELF      R8 R8 K44    ; R9 := R8; R8 := R8[0x5f56eeab]
158 [-]: LOADK     R10 K45      ; R10 := "InfoPanel.Currency"
159 [-]: CONST     R11 29       ; R11 := 29.000000
160 [-]: LOADK     R12 K46      ; R12 := ""
161 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
162 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
163 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8[0xaade900e]
164 [-]: LOADK     R10 K45      ; R10 := "InfoPanel.Currency"
165 [-]: CONST     R11 11       ; R11 := 11.000000
166 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["Section"]
167 [-]: GETUPVAL  R13 U0       ; R13 := U0
168 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["EVENTS"]
169 [-]: EQ        1 R12 R13    ; if R12 == R13 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: LOADKB    R12 0 1      ; R12 := false; PC := 172
172 [-]: LOADKB    R12 1 0      ; R12 := true
173 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
174 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["Section"]
175 [-]: GETUPVAL  R9 U0        ; R9 := U0
176 [-]: GETTABLE  R9 R9 K47    ; R9 := R9["EVENTS"]
177 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 219
178 [-]: JMP       219          ; PC := 219
179 [-]: GETGLOBAL R8 K5        ; R8 := 0x25d99d89
180 [-]: SELF      R8 R8 K48    ; R9 := R8; R8 := R8[0x25a6e75e]
181 [-]: CALL      R8 2 2       ; R8 := R8(R9)
182 [-]: LOADK     R9 K46       ; R9 := ""
183 [-]: CONST     R10 1        ; R10 := 1.000000
184 [-]: GETGLOBAL R11 K49      ; R11 := 0x11db00b5
185 [-]: LEN       R11 R11      ; R11 := # R11
186 [-]: CONST     R12 1        ; R12 := 1.000000
187 [-]: FORPREP   R10 209      ; R10 -= R12; PC := 209
188 [-]: CONST     R14 0        ; R14 := 0.000000
189 [-]: GETGLOBAL R15 K50      ; R15 := 0x7b998233
190 [-]: MOVE      R16 R8       ; R16 := R8
191 [-]: CALL      R15 2 2      ; R15 := R15(R16)
192 [-]: TEST      R15 1        ; if R15 then PC := 199
193 [-]: JMP       199          ; PC := 199
194 [-]: SELF      R15 R8 K51   ; R16 := R8; R15 := R8[0x51b30e60]
195 [-]: GETGLOBAL R17 K49      ; R17 := 0x11db00b5
196 [-]: GETTABLE  R17 R17 R13  ; R17 := R17[R13]
197 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
198 [-]: MOVE      R14 R15      ; R14 := R15
199 [-]: LT        0 K7 R14     ; if 0.000000 >= R14 then PC := 209
200 [-]: JMP       209          ; PC := 209
201 [-]: MOVE      R15 R9       ; R15 := R9
202 [-]: LOADK     R16 K52      ; R16 := "<"
203 [-]: GETGLOBAL R17 K53      ; R17 := 0x90e775a4
204 [-]: GETTABLE  R17 R17 R13  ; R17 := R17[R13]
205 [-]: LOADK     R18 K54      ; R18 := "> "
206 [-]: MOVE      R19 R14      ; R19 := R14
207 [-]: LOADK     R20 K55      ; R20 := "  "
208 [-]: CONCAT    R9 R15 R20   ; R9 := R15 .. R16 .. R17 .. R18 .. R19 .. R20
209 [-]: FORLOOP   R10 188      ; R10 += R12; if R10 <= R11 then begin PC := 188; R13 := R10 end
210 [-]: GETGLOBAL R15 K8       ; R15 := 0xae91e43b
211 [-]: SELF      R15 R15 K44  ; R16 := R15; R15 := R15[0x5f56eeab]
212 [-]: LOADK     R17 K45      ; R17 := "InfoPanel.Currency"
213 [-]: CONST     R18 29       ; R18 := 29.000000
214 [-]: GETGLOBAL R19 K8       ; R19 := 0xae91e43b
215 [-]: SELF      R19 R19 K56  ; R20 := R19; R19 := R19[0xdca61cfa]
216 [-]: MOVE      R21 R9       ; R21 := R9
217 [-]: CALL      R19 3 0      ; R19,... := R19(R20,R21)
218 [-]: CALL      R15 0 1      ; R15(R16,...)
219 [-]: EQ        0 R2 K46     ; if R2 ~= "" then PC := 222
220 [-]: JMP       222          ; PC := 222
221 [-]: LOADKB    R15 0 1      ; R15 := false; PC := 222
222 [-]: LOADKB    R15 1 0      ; R15 := true
223 [-]: GETGLOBAL R16 K8       ; R16 := 0xae91e43b
224 [-]: SELF      R16 R16 K9   ; R17 := R16; R16 := R16[0xaade900e]
225 [-]: LOADK     R18 K57      ; R18 := "InfoPanel.Separator"
226 [-]: CONST     R19 11       ; R19 := 11.000000
227 [-]: MOVE      R20 R15      ; R20 := R15
228 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
229 [-]: GETUPVAL  R16 U2       ; R16 := U2
230 [-]: GETUPVAL  R17 U2       ; R17 := U2
231 [-]: GETTABLE  R17 R17 K59  ; R17 := R17["mOriginalYPos"]
232 [-]: GETUPVAL  R18 U1       ; R18 := U1
233 [-]: GETTABLE  R18 R18 K13  ; R18 := R18[0x06d055f9]
234 [-]: MOVE      R19 R15      ; R19 := R15
235 [-]: CONST     R20 0        ; R20 := 0.000000
236 [-]: CONST     R21 -40      ; R21 := -40.000000
237 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
238 [-]: ADD       R17 R17 R18  ; R17 := R17 + R18
239 [-]: SETTABLE  R16 K58 R17  ; R16["mCurrYPos"] := R17
240 [-]: GETGLOBAL R16 K8       ; R16 := 0xae91e43b
241 [-]: SELF      R16 R16 K11  ; R17 := R16; R16 := R16[0x67bc869f]
242 [-]: LOADK     R18 K60      ; R18 := "InfoPanel.InfoMenu"
243 [-]: CONST     R19 1        ; R19 := 1.000000
244 [-]: GETUPVAL  R20 U2       ; R20 := U2
245 [-]: GETTABLE  R20 R20 K58  ; R20 := R20["mCurrYPos"]
246 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
247 [-]: GETGLOBAL R16 K8       ; R16 := 0xae91e43b
248 [-]: SELF      R16 R16 K11  ; R17 := R16; R16 := R16[0x67bc869f]
249 [-]: LOADK     R18 K61      ; R18 := "InfoPanel.InfoMenuMask"
250 [-]: CONST     R19 1        ; R19 := 1.000000
251 [-]: GETUPVAL  R20 U2       ; R20 := U2
252 [-]: GETTABLE  R20 R20 K58  ; R20 := R20["mCurrYPos"]
253 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
254 [-]: GETGLOBAL R16 K8       ; R16 := 0xae91e43b
255 [-]: SELF      R16 R16 K11  ; R17 := R16; R16 := R16[0x67bc869f]
256 [-]: LOADK     R18 K61      ; R18 := "InfoPanel.InfoMenuMask"
257 [-]: CONST     R19 13       ; R19 := 13.000000
258 [-]: GETUPVAL  R20 U8       ; R20 := U8
259 [-]: MOVE      R21 R15      ; R21 := R15
260 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
261 [-]: CALL      R16 0 1      ; R16(R17,...)
262 [-]: GETGLOBAL R16 K8       ; R16 := 0xae91e43b
263 [-]: SELF      R16 R16 K11  ; R17 := R16; R16 := R16[0x67bc869f]
264 [-]: LOADK     R18 K62      ; R18 := "InfoPanel.ScrollBar"
265 [-]: CONST     R19 1        ; R19 := 1.000000
266 [-]: GETUPVAL  R20 U9       ; R20 := U9
267 [-]: GETTABLE  R20 R20 K63  ; R20 := R20["mInitYPos"]
268 [-]: GETUPVAL  R21 U1       ; R21 := U1
269 [-]: GETTABLE  R21 R21 K13  ; R21 := R21[0x06d055f9]
270 [-]: MOVE      R22 R15      ; R22 := R15
271 [-]: CONST     R23 0        ; R23 := 0.000000
272 [-]: CONST     R24 -40      ; R24 := -40.000000
273 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
274 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
275 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
276 [-]: GETUPVAL  R16 U10      ; R16 := U10
277 [-]: GETTABLE  R17 R0 K0    ; R17 := R0["Section"]
278 [-]: CALL      R16 2 1      ; R16(R17)
279 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 1661
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 13
  2 [-]: JMP       13           ; PC := 13
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  9 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["mExpiry"]
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: TEST      R4 0         ; if not R4 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: CONST     R4 0         ; R4 := 0.000000
 14 [-]: RETURN    R4 2         ; return R4
 15 [-]: GETGLOBAL R4 K3        ; R4 := 0x34291f5c
 16 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0x397b920f]
 17 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["mExpiry"]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R3 0         ; if not R3 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: LT        0 R4 K5      ; if R4 >= 0.000000 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: CONST     R4 0         ; R4 := 0.000000
 24 [-]: LT        0 K5 R4      ; if 0.000000 >= R4 then PC := 82
 25 [-]: JMP       82           ; PC := 82
 26 [-]: GETGLOBAL R5 K6        ; R5 := 0xae91e43b
 27 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x42b04007]
 28 [-]: LOADK     R7 K8        ; R7 := "<TIMER>"
 29 [-]: LOADKB    R8 1 0       ; R8 := true
 30 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K9     ; R6 := R6[0x817b1503]
 33 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 34 [-]: MOVE      R8 R4        ; R8 := R4
 35 [-]: LOADK     R9 K10       ; R9 := "CompactTwoMax"
 36 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 37 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 38 [-]: GETTABLE  R6 R1 K11    ; R6 := R1["mFomorian"]
 39 [-]: TEST      R6 0         ; if not R6 then PC := 61
 40 [-]: JMP       61           ; PC := 61
 41 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 61
 42 [-]: JMP       61           ; PC := 61
 43 [-]: GETUPVAL  R6 U1        ; R6 := U1
 44 [-]: GETTABLE  R6 R6 K12    ; R6 := R6[0x06d055f9]
 45 [-]: GETTABLE  R7 R1 K13    ; R7 := R1["mFaction"]
 46 [-]: EQ        1 R7 K5      ; if R7 == 0.000000 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 49
 49 [-]: LOADKB    R7 1 0       ; R7 := true
 50 [-]: LOADK     R8 K15       ; R8 := "/Lotus/Language/Menu/FomorianCountdown"
 51 [-]: LOADK     R9 K16       ; R9 := "/Lotus/Language/Menu/RazorbackArmadaCountdown"
 52 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 53 [-]: GETGLOBAL R7 K17       ; R7 := 0x603636ad
 54 [-]: MOVE      R8 R6        ; R8 := R6
 55 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 56 [-]: SETTABLE  R9 K18 R2    ; R9["LOCATION"] := R2
 57 [-]: SETTABLE  R9 K19 R5    ; R9["TIME"] := R5
 58 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 59 [-]: MOVE      R5 R7        ; R5 := R7
 60 [-]: JMP       75           ; PC := 75
 61 [-]: GETTABLE  R7 R1 K20    ; R7 := R1["mTag"]
 62 [-]: GETUPVAL  R8 U2        ; R8 := U2
 63 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 75
 64 [-]: JMP       75           ; PC := 75
 65 [-]: GETGLOBAL R7 K21       ; R7 := 0x5f0788c4
 66 [-]: GETGLOBAL R8 K6        ; R8 := 0xae91e43b
 67 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x42b04007]
 68 [-]: LOADK     R10 K22      ; R10 := "/Lotus/Language/Menu/VoidTraderLeavingCountdown"
 69 [-]: LOADKB    R11 0 0      ; R11 := false
 70 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 71 [-]: SETTABLE  R12 K19 R5   ; R12["TIME"] := R5
 72 [-]: CALL      R8 5 0       ; R8,... := R8(R9,R10,R11,R12)
 73 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 74 [-]: MOVE      R5 R7        ; R5 := R7
 75 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 76 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7[0x5f56eeab]
 77 [-]: MOVE      R9 R0        ; R9 := R0
 78 [-]: CONST     R10 29       ; R10 := 29.000000
 79 [-]: MOVE      R11 R5       ; R11 := R5
 80 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 81 [-]: JMP       89           ; PC := 89
 82 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 83 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7[0x20b98db3]
 84 [-]: MOVE      R9 R0        ; R9 := R0
 85 [-]: LOADK     R10 K25      ; R10 := ".text"
 86 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 87 [-]: LOADK     R10 K26      ; R10 := "/Lotus/Language/Menu/Expired"
 88 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 89 [-]: RETURN    R4 2         ; return R4
 90 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 1689
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x2ce15376]
  3 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := "Text.Title"
  5 [-]: CONST     R6 34        ; R6 := 34.000000
  6 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
  7 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  8 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x2ce15376]
  9 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 10 [-]: LOADK     R6 K4        ; R6 := "Text.Description"
 11 [-]: CONST     R7 34        ; R7 := 34.000000
 12 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 14 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x2ce15376]
 15 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mClipName"]
 16 [-]: LOADK     R7 K5        ; R7 := "Text.Timer"
 17 [-]: CONST     R8 34        ; R8 := 34.000000
 18 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 19 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mModifiers"]
 20 [-]: EQ        1 R5 K7      ; if R5 == nil then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: CONST     R4 -7        ; R4 := -7.000000
 23 [-]: TEST      R1 0         ; if not R1 then PC := 62
 24 [-]: JMP       62           ; PC := 62
 25 [-]: CONST     R5 95        ; R5 := 95.000000
 26 [-]: ADD       R6 R2 R3     ; R6 := R2 + R3
 27 [-]: ADD       R6 R6 K8     ; R6 := R6 + 18.000000
 28 [-]: LT        0 R6 K9      ; if R6 >= 95.000000 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: SUB       R7 K9 R6     ; R7 := 95.000000 - R6
 31 [-]: ADD       R5 R5 R7     ; R5 := R5 + R7
 32 [-]: CONST     R6 95        ; R6 := 95.000000
 33 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 34 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xf64b7262]
 35 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 36 [-]: LOADK     R10 K11      ; R10 := "Text.SuitBuffIcon"
 37 [-]: CONST     R11 1        ; R11 := 1.000000
 38 [-]: MOVE      R12 R6       ; R12 := R6
 39 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 40 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 41 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xf64b7262]
 42 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 43 [-]: LOADK     R10 K12      ; R10 := "Text.SuitInfo"
 44 [-]: CONST     R11 1        ; R11 := 1.000000
 45 [-]: MOVE      R12 R6       ; R12 := R6
 46 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 47 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 48 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xf64b7262]
 49 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 50 [-]: LOADK     R10 K13      ; R10 := "Text.WeaponBuffIcon"
 51 [-]: CONST     R11 1        ; R11 := 1.000000
 52 [-]: MOVE      R12 R6       ; R12 := R6
 53 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 54 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 55 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xf64b7262]
 56 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 57 [-]: LOADK     R10 K14      ; R10 := "Text.WeaponInfo"
 58 [-]: CONST     R11 1        ; R11 := 1.000000
 59 [-]: MOVE      R12 R6       ; R12 := R6
 60 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 61 [-]: ADD       R3 R3 R5     ; R3 := R3 + R5
 62 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 63 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xf64b7262]
 64 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 65 [-]: LOADK     R10 K5       ; R10 := "Text.Timer"
 66 [-]: CONST     R11 1        ; R11 := 1.000000
 67 [-]: ADD       R12 R2 R3    ; R12 := R2 + R3
 68 [-]: ADD       R12 R12 K15  ; R12 := R12 + 14.000000
 69 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 70 [-]: ADD       R7 R2 R3     ; R7 := R2 + R3
 71 [-]: ADD       R7 R7 R4     ; R7 := R7 + R4
 72 [-]: GETGLOBAL R8 K17       ; R8 := 0x5bced4c4
 73 [-]: GETTABLE  R8 R8 K18    ; R8 := R8[0xb62ecfe0]
 74 [-]: CONST     R9 108       ; R9 := 108.000000
 75 [-]: ADD       R10 R7 K19   ; R10 := R7 + 30.000000
 76 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 77 [-]: SETTABLE  R0 K16 R8    ; R0["TotalHeight"] := R8
 78 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 79 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 80 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
 81 [-]: LOADK     R11 K20      ; R11 := "Text"
 82 [-]: CONST     R12 1        ; R12 := 1.000000
 83 [-]: GETTABLE  R13 R0 K16   ; R13 := R0["TotalHeight"]
 84 [-]: DIV       R13 R13 K21  ; R13 := R13 / 2.000000
 85 [-]: DIV       R14 R7 K21   ; R14 := R7 / 2.000000
 86 [-]: ADD       R14 R14 K22  ; R14 := R14 + 10.000000
 87 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
 88 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 89 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 90 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 91 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
 92 [-]: LOADK     R11 K23      ; R11 := "Outline"
 93 [-]: CONST     R12 13       ; R12 := 13.000000
 94 [-]: GETTABLE  R13 R0 K16   ; R13 := R0["TotalHeight"]
 95 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 96 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 97 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 98 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
 99 [-]: LOADK     R11 K24      ; R11 := "Btn"
100 [-]: CONST     R12 13       ; R12 := 13.000000
101 [-]: GETTABLE  R13 R0 K16   ; R13 := R0["TotalHeight"]
102 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
103 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
104 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
105 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
106 [-]: LOADK     R11 K25      ; R11 := "Highlight"
107 [-]: CONST     R12 1        ; R12 := 1.000000
108 [-]: GETTABLE  R13 R0 K16   ; R13 := R0["TotalHeight"]
109 [-]: SUB       R13 R13 K21  ; R13 := R13 - 2.000000
110 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
111 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 1720
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Background1Object"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["FloatingContentObject"]
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
  6 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xd5181643]
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: LOADK     R7 K4        ; R7 := ".Bg"
  9 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 10 [-]: GETGLOBAL R7 K5        ; R7 := 0xe3d94630
 11 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 13 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x91e13703]
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: LOADK     R7 K4        ; R7 := ".Bg"
 16 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 17 [-]: LOADK     R7 K7        ; R7 := "RectEdgeColor"
 18 [-]: GETTABLE  R8 R3 K8     ; R8 := R3["r"]
 19 [-]: GETTABLE  R9 R3 K9     ; R9 := R3["g"]
 20 [-]: GETTABLE  R10 R3 K10   ; R10 := R3["b"]
 21 [-]: LOADK     R11 K11      ; R11 := 0.400000
 22 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 23 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 24 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x91e13703]
 25 [-]: MOVE      R6 R0        ; R6 := R0
 26 [-]: LOADK     R7 K4        ; R7 := ".Bg"
 27 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 28 [-]: LOADK     R7 K12       ; R7 := "RectInnerColor"
 29 [-]: GETTABLE  R8 R2 K8     ; R8 := R2["r"]
 30 [-]: GETTABLE  R9 R2 K9     ; R9 := R2["g"]
 31 [-]: GETTABLE  R10 R2 K10   ; R10 := R2["b"]
 32 [-]: LOADK     R11 K13      ; R11 := 0.900000
 33 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 34 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 35 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x1cb415c1]
 36 [-]: MOVE      R6 R0        ; R6 := R0
 37 [-]: LOADK     R7 K15       ; R7 := ".Icon"
 38 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 39 [-]: SELF      R7 R1 K16    ; R8 := R1; R7 := R1[0x056dcf06]
 40 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 41 [-]: CALL      R4 0 1       ; R4(R5,...)
 42 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 1730
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  36

  1 [-]: LOADK     R2 K0        ; R2 := "<font color=\""
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["FloatingContentHex"]
  4 [-]: LOADK     R4 K2        ; R4 := "\">"
  5 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
  6 [-]: LOADK     R3 K3        ; R3 := "</font>"
  7 [-]: GETGLOBAL R4 K4        ; R4 := 0xb009bbc6
  8 [-]: GETTABLE  R5 R1 K5     ; R5 := R1["mSuitStoreItem"]
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: GETGLOBAL R5 K6        ; R5 := 0x5f0788c4
 11 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 12 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x42b04007]
 13 [-]: GETGLOBAL R8 K9        ; R8 := 0x64fb1586
 14 [-]: SELF      R9 R4 K10    ; R10 := R4; R9 := R4[0xd3a9d01f]
 15 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 16 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 17 [-]: LOADKB    R9 1 0       ; R9 := true
 18 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 19 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 20 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 21 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x42b04007]
 22 [-]: LOADK     R8 K11       ; R8 := "/Lotus/Language/UiElements/Syndicates_ArbitrationEquipmentBuffItem"
 23 [-]: LOADKB    R9 0 0       ; R9 := false
 24 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 25 [-]: SETTABLE  R10 K12 R2   ; R10["OPEN_COLOR"] := R2
 26 [-]: SETTABLE  R10 K13 R5   ; R10["ITEMNAME"] := R5
 27 [-]: SETTABLE  R10 K14 R3   ; R10["CLOSE_COLOR"] := R3
 28 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 29 [-]: MOVE      R7 R6        ; R7 := R6
 30 [-]: CONST     R8 1         ; R8 := 1.000000
 31 [-]: GETTABLE  R9 R1 K15    ; R9 := R1["mSuitMods"]
 32 [-]: LEN       R9 R9        ; R9 := # R9
 33 [-]: CONST     R10 1        ; R10 := 1.000000
 34 [-]: FORPREP   R8 69        ; R8 -= R10; PC := 69
 35 [-]: LOADK     R12 K16      ; R12 := "/Lotus/Language/UiElements/Syndicates_ArbitrationEquipmentBuff"
 36 [-]: GETTABLE  R13 R1 K15   ; R13 := R1["mSuitMods"]
 37 [-]: GETTABLE  R13 R13 R11  ; R13 := R13[R11]
 38 [-]: GETGLOBAL R14 K6       ; R14 := 0x5f0788c4
 39 [-]: GETGLOBAL R15 K7       ; R15 := 0xae91e43b
 40 [-]: SELF      R15 R15 K8   ; R16 := R15; R15 := R15[0x42b04007]
 41 [-]: GETTABLE  R17 R13 K17  ; R17 := R13["label"]
 42 [-]: LOADKB    R18 0 0      ; R18 := false
 43 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
 44 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 45 [-]: GETTABLE  R15 R13 K18  ; R15 := R13["value"]
 46 [-]: GETTABLE  R16 R13 K19  ; R16 := R13["upgOp"]
 47 [-]: EQ        0 R16 K21    ; if R16 ~= 3.000000 then PC := 54
 48 [-]: JMP       54           ; PC := 54
 49 [-]: MUL       R15 R15 K22  ; R15 := R15 * 100.000000
 50 [-]: MOVE      R16 R12      ; R16 := R12
 51 [-]: LOADK     R17 K23      ; R17 := "Pct"
 52 [-]: CONCAT    R12 R16 R17  ; R12 := R16 .. R17
 53 [-]: JMP       57           ; PC := 57
 54 [-]: MOVE      R16 R12      ; R16 := R12
 55 [-]: LOADK     R17 K24      ; R17 := "Flat"
 56 [-]: CONCAT    R12 R16 R17  ; R12 := R16 .. R17
 57 [-]: GETGLOBAL R16 K7       ; R16 := 0xae91e43b
 58 [-]: SELF      R16 R16 K8   ; R17 := R16; R16 := R16[0x42b04007]
 59 [-]: MOVE      R18 R12      ; R18 := R12
 60 [-]: LOADKB    R19 0 0      ; R19 := false
 61 [-]: NEWTABLE  R20 0 2      ; R20 := {}
 62 [-]: SETTABLE  R20 K25 R14  ; R20["MODIFIER_NAME"] := R14
 63 [-]: SETTABLE  R20 K26 R15  ; R20["AMOUNT"] := R15
 64 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
 65 [-]: MOVE      R17 R7       ; R17 := R7
 66 [-]: LOADK     R18 K27      ; R18 := "<br>"
 67 [-]: MOVE      R19 R16      ; R19 := R16
 68 [-]: CONCAT    R7 R17 R19   ; R7 := R17 .. R18 .. R19
 69 [-]: FORLOOP   R8 35        ; R8 += R10; if R8 <= R9 then begin PC := 35; R11 := R8 end
 70 [-]: GETGLOBAL R17 K7       ; R17 := 0xae91e43b
 71 [-]: SELF      R17 R17 K28  ; R18 := R17; R17 := R17[0xe261aa96]
 72 [-]: MOVE      R19 R0       ; R19 := R0
 73 [-]: LOADK     R20 K29      ; R20 := "SuitInfo"
 74 [-]: CONST     R21 29       ; R21 := 29.000000
 75 [-]: LOADK     R22 K30      ; R22 := "<p><font color=\""
 76 [-]: GETUPVAL  R23 U0       ; R23 := U0
 77 [-]: GETTABLE  R23 R23 K31  ; R23 := R23["ContentHex"]
 78 [-]: LOADK     R24 K2       ; R24 := "\">"
 79 [-]: MOVE      R25 R7       ; R25 := R7
 80 [-]: LOADK     R26 K32      ; R26 := "</font></p>"
 81 [-]: CONCAT    R22 R22 R26  ; R22 := R22 .. R23 .. R24 .. R25 .. R26
 82 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
 83 [-]: LOADK     R17 K33      ; R17 := ""
 84 [-]: CONST     R18 1        ; R18 := 1.000000
 85 [-]: GETTABLE  R19 R1 K34   ; R19 := R1["mWeaponStoreItems"]
 86 [-]: LEN       R19 R19      ; R19 := # R19
 87 [-]: CONST     R20 1        ; R20 := 1.000000
 88 [-]: FORPREP   R18 126      ; R18 -= R20; PC := 126
 89 [-]: GETGLOBAL R22 K4       ; R22 := 0xb009bbc6
 90 [-]: GETTABLE  R23 R1 K34   ; R23 := R1["mWeaponStoreItems"]
 91 [-]: GETTABLE  R23 R23 R21  ; R23 := R23[R21]
 92 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 93 [-]: GETGLOBAL R23 K6       ; R23 := 0x5f0788c4
 94 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
 95 [-]: SELF      R24 R24 K8   ; R25 := R24; R24 := R24[0x42b04007]
 96 [-]: GETGLOBAL R26 K9       ; R26 := 0x64fb1586
 97 [-]: SELF      R27 R22 K10  ; R28 := R22; R27 := R22[0xd3a9d01f]
 98 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
 99 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
100 [-]: LOADKB    R27 1 0      ; R27 := true
101 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
102 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
103 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
104 [-]: SELF      R24 R24 K8   ; R25 := R24; R24 := R24[0x42b04007]
105 [-]: LOADK     R26 K11      ; R26 := "/Lotus/Language/UiElements/Syndicates_ArbitrationEquipmentBuffItem"
106 [-]: LOADKB    R27 0 0      ; R27 := false
107 [-]: NEWTABLE  R28 0 3      ; R28 := {}
108 [-]: SETTABLE  R28 K12 R2   ; R28["OPEN_COLOR"] := R2
109 [-]: SETTABLE  R28 K13 R23  ; R28["ITEMNAME"] := R23
110 [-]: SETTABLE  R28 K14 R3   ; R28["CLOSE_COLOR"] := R3
111 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
112 [-]: MOVE      R25 R17      ; R25 := R17
113 [-]: MOVE      R26 R23      ; R26 := R23
114 [-]: GETUPVAL  R27 U1       ; R27 := U1
115 [-]: GETTABLE  R27 R27 K35  ; R27 := R27[0x06d055f9]
116 [-]: GETTABLE  R28 R1 K34   ; R28 := R1["mWeaponStoreItems"]
117 [-]: LEN       R28 R28      ; R28 := # R28
118 [-]: EQ        1 R21 R28    ; if R21 == R28 then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: LOADKB    R28 0 1      ; R28 := false; PC := 121
121 [-]: LOADKB    R28 1 0      ; R28 := true
122 [-]: LOADK     R29 K33      ; R29 := ""
123 [-]: LOADK     R30 K36      ; R30 := ", "
124 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
125 [-]: CONCAT    R17 R25 R27  ; R17 := R25 .. R26 .. R27
126 [-]: FORLOOP   R18 89       ; R18 += R20; if R18 <= R19 then begin PC := 89; R21 := R18 end
127 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
128 [-]: SELF      R25 R25 K8   ; R26 := R25; R25 := R25[0x42b04007]
129 [-]: LOADK     R27 K11      ; R27 := "/Lotus/Language/UiElements/Syndicates_ArbitrationEquipmentBuffItem"
130 [-]: LOADKB    R28 0 0      ; R28 := false
131 [-]: NEWTABLE  R29 0 3      ; R29 := {}
132 [-]: SETTABLE  R29 K12 R2   ; R29["OPEN_COLOR"] := R2
133 [-]: SETTABLE  R29 K13 R17  ; R29["ITEMNAME"] := R17
134 [-]: SETTABLE  R29 K14 R3   ; R29["CLOSE_COLOR"] := R3
135 [-]: CALL      R25 5 2      ; R25 := R25(R26,R27,R28,R29)
136 [-]: MOVE      R7 R25       ; R7 := R25
137 [-]: MOVE      R25 R7       ; R25 := R7
138 [-]: LOADK     R26 K27      ; R26 := "<br>"
139 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
140 [-]: SELF      R27 R27 K8   ; R28 := R27; R27 := R27[0x42b04007]
141 [-]: LOADK     R29 K37      ; R29 := "/Lotus/Language/UiElements/Syndicates_ArbitrationEquipmentBuffPct"
142 [-]: LOADKB    R30 0 0      ; R30 := false
143 [-]: NEWTABLE  R31 0 2      ; R31 := {}
144 [-]: SETTABLE  R31 K26 K38  ; R31["AMOUNT"] := 300.000000
145 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
146 [-]: SELF      R32 R32 K8   ; R33 := R32; R32 := R32[0x42b04007]
147 [-]: LOADK     R34 K39      ; R34 := "/Lotus/Language/Game/DAMAGE"
148 [-]: LOADKB    R35 0 0      ; R35 := false
149 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
150 [-]: SETTABLE  R31 K25 R32  ; R31["MODIFIER_NAME"] := R32
151 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
152 [-]: CONCAT    R7 R25 R27   ; R7 := R25 .. R26 .. R27
153 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
154 [-]: SELF      R25 R25 K28  ; R26 := R25; R25 := R25[0xe261aa96]
155 [-]: MOVE      R27 R0       ; R27 := R0
156 [-]: LOADK     R28 K40      ; R28 := "WeaponInfo"
157 [-]: CONST     R29 29       ; R29 := 29.000000
158 [-]: LOADK     R30 K30      ; R30 := "<p><font color=\""
159 [-]: GETUPVAL  R31 U0       ; R31 := U0
160 [-]: GETTABLE  R31 R31 K31  ; R31 := R31["ContentHex"]
161 [-]: LOADK     R32 K2       ; R32 := "\">"
162 [-]: MOVE      R33 R7       ; R33 := R7
163 [-]: LOADK     R34 K32      ; R34 := "</font></p>"
164 [-]: CONCAT    R30 R30 R34  ; R30 := R30 .. R31 .. R32 .. R33 .. R34
165 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
166 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1768
; #Upvalues:       10
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  50

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x5e35d4d6]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: CONST     R3 1         ; R3 := 1.000000
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: LEN       R4 R4        ; R4 := # R4
 13 [-]: CONST     R5 1         ; R5 := 1.000000
 14 [-]: FORPREP   R3 23        ; R3 -= R5; PC := 23
 15 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 16 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7[0xd5181643]
 17 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 18 [-]: GETUPVAL  R10 U1       ; R10 := U1
 19 [-]: GETTABLE  R10 R10 R6   ; R10 := R10[R6]
 20 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 21 [-]: GETGLOBAL R10 K5       ; R10 := 0x3f56a9a5
 22 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 23 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 24 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 25 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 26 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 27 [-]: LOADK     R10 K7       ; R10 := "Arrow"
 28 [-]: CONST     R11 11       ; R11 := 11.000000
 29 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 30 [-]: NOT       R12 R12      ; R12 :=  R12
 31 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 32 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 33 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 34 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 35 [-]: LOADK     R10 K9       ; R10 := "Text"
 36 [-]: CONST     R11 11       ; R11 := 11.000000
 37 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 38 [-]: NOT       R12 R12      ; R12 :=  R12
 39 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 40 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 41 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 42 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 43 [-]: LOADK     R10 K10      ; R10 := "TextImage"
 44 [-]: CONST     R11 11       ; R11 := 11.000000
 45 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 46 [-]: NOT       R12 R12      ; R12 :=  R12
 47 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 48 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 49 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 50 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 51 [-]: LOADK     R10 K11      ; R10 := "Image"
 52 [-]: CONST     R11 11       ; R11 := 11.000000
 53 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 54 [-]: NOT       R12 R12      ; R12 :=  R12
 55 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 56 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 57 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 58 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 59 [-]: LOADK     R10 K12      ; R10 := "BlueprintBg"
 60 [-]: CONST     R11 11       ; R11 := 11.000000
 61 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 62 [-]: NOT       R12 R12      ; R12 :=  R12
 63 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 64 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 65 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 66 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 67 [-]: LOADK     R10 K13      ; R10 := "FactionIcon"
 68 [-]: CONST     R11 11       ; R11 := 11.000000
 69 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 70 [-]: NOT       R12 R12      ; R12 :=  R12
 71 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 72 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 73 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 74 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 75 [-]: LOADK     R10 K14      ; R10 := "Outline"
 76 [-]: CONST     R11 11       ; R11 := 11.000000
 77 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 78 [-]: NOT       R12 R12      ; R12 :=  R12
 79 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 80 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["IsHeader"]
 81 [-]: TEST      R7 0         ; if not R7 then PC := 100
 82 [-]: JMP       100          ; PC := 100
 83 [-]: SETTABLE  R0 K15 K16   ; R0["TotalHeight"] := 15.000000
 84 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 85 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0xe261aa96]
 86 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 87 [-]: LOADK     R10 K18      ; R10 := "Header.Title"
 88 [-]: CONST     R11 29       ; R11 := 29.000000
 89 [-]: GETTABLE  R12 R0 K19   ; R12 := R0["Title"]
 90 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 91 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 92 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7[0xf64b7262]
 93 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 94 [-]: LOADK     R10 K18      ; R10 := "Header.Title"
 95 [-]: CONST     R11 36       ; R11 := 36.000000
 96 [-]: GETUPVAL  R12 U2       ; R12 := U2
 97 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["FloatingContent"]
 98 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 99 [-]: RETURN    R0 1         ; return 
100 [-]: SELF      R7 R2 K22    ; R8 := R2; R7 := R2[0x3ad9ed31]
101 [-]: GETTABLE  R9 R0 K23    ; R9 := R0["mAlertInfo"]
102 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["mMissionInfo"]
103 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["location"]
104 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
105 [-]: GETGLOBAL R8 K26       ; R8 := 0x603636ad
106 [-]: GETTABLE  R9 R7 K27    ; R9 := R7["locTag"]
107 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0x6d604ba7]
108 [-]: CALL      R9 2 2       ; R9 := R9(R10)
109 [-]: LOADNIL   R10 R10      ; R10 := nil
110 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
111 [-]: GETGLOBAL R9 K26       ; R9 := 0x603636ad
112 [-]: SELF      R10 R2 K29   ; R11 := R2; R10 := R2[0xc1dee03f]
113 [-]: CALL      R10 2 2      ; R10 := R10(R11)
114 [-]: GETTABLE  R11 R7 K30   ; R11 := R7["region"]
115 [-]: ADD       R11 R11 K31  ; R11 := R11 + 1.000000
116 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
117 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["name"]
118 [-]: LOADNIL   R11 R11      ; R11 := nil
119 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
120 [-]: LOADK     R10 K33      ; R10 := ""
121 [-]: GETTABLE  R11 R0 K34   ; R11 := R0["mModifiers"]
122 [-]: EQ        0 R11 K35    ; if R11 ~= nil then PC := 125
123 [-]: JMP       125          ; PC := 125
124 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 125
125 [-]: LOADKB    R11 1 0      ; R11 := true
126 [-]: GETUPVAL  R12 U3       ; R12 := U3
127 [-]: GETTABLE  R12 R12 K36  ; R12 := R12[0x06d055f9]
128 [-]: MOVE      R13 R11      ; R13 := R11
129 [-]: CONST     R14 10       ; R14 := 10.000000
130 [-]: CONST     R15 0        ; R15 := 0.000000
131 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
132 [-]: GETTABLE  R13 R0 K23   ; R13 := R0["mAlertInfo"]
133 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["mMissionInfo"]
134 [-]: GETTABLE  R13 R13 K37  ; R13 := R13["minEnemyLevel"]
135 [-]: ADD       R13 R13 R12  ; R13 := R13 + R12
136 [-]: GETTABLE  R14 R0 K23   ; R14 := R0["mAlertInfo"]
137 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mMissionInfo"]
138 [-]: GETTABLE  R14 R14 K38  ; R14 := R14["maxEnemyLevel"]
139 [-]: ADD       R14 R14 R12  ; R14 := R14 + R12
140 [-]: GETTABLE  R15 R0 K39   ; R15 := R0["mUnlocked"]
141 [-]: TEST      R15 1        ; if R15 then PC := 160
142 [-]: JMP       160          ; PC := 160
143 [-]: LOADK     R15 K40      ; R15 := " ("
144 [-]: GETUPVAL  R16 U3       ; R16 := U3
145 [-]: GETTABLE  R16 R16 K36  ; R16 := R16[0x06d055f9]
146 [-]: GETTABLE  R17 R0 K41   ; R17 := R0["mMissionLockedText"]
147 [-]: EQ        0 R17 K35    ; if R17 ~= nil then PC := 150
148 [-]: JMP       150          ; PC := 150
149 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 150
150 [-]: LOADKB    R17 1 0      ; R17 := true
151 [-]: GETTABLE  R18 R0 K41   ; R18 := R0["mMissionLockedText"]
152 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
153 [-]: SELF      R19 R19 K42  ; R20 := R19; R19 := R19[0x42b04007]
154 [-]: LOADK     R21 K43      ; R21 := "/Lotus/Language/Menu/MissionLocked"
155 [-]: LOADKB    R22 0 0      ; R22 := false
156 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
157 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
158 [-]: LOADK     R17 K44      ; R17 := ")"
159 [-]: CONCAT    R10 R15 R17  ; R10 := R15 .. R16 .. R17
160 [-]: GETGLOBAL R15 K2       ; R15 := 0xae91e43b
161 [-]: SELF      R15 R15 K20  ; R16 := R15; R15 := R15[0xf64b7262]
162 [-]: GETTABLE  R17 R0 K4    ; R17 := R0["mClipName"]
163 [-]: LOADK     R18 K45      ; R18 := "Text.Title"
164 [-]: CONST     R19 36       ; R19 := 36.000000
165 [-]: GETUPVAL  R20 U2       ; R20 := U2
166 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["FloatingContent"]
167 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
168 [-]: GETGLOBAL R15 K2       ; R15 := 0xae91e43b
169 [-]: SELF      R15 R15 K20  ; R16 := R15; R15 := R15[0xf64b7262]
170 [-]: GETTABLE  R17 R0 K4    ; R17 := R0["mClipName"]
171 [-]: LOADK     R18 K46      ; R18 := "Text.Timer"
172 [-]: CONST     R19 36       ; R19 := 36.000000
173 [-]: GETUPVAL  R20 U2       ; R20 := U2
174 [-]: GETTABLE  R20 R20 K47  ; R20 := R20["FloatingContentHighlight"]
175 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
176 [-]: GETGLOBAL R15 K2       ; R15 := 0xae91e43b
177 [-]: SELF      R15 R15 K6   ; R16 := R15; R15 := R15[0xc0a3774b]
178 [-]: GETTABLE  R17 R0 K4    ; R17 := R0["mClipName"]
179 [-]: LOADK     R18 K46      ; R18 := "Text.Timer"
180 [-]: CONST     R19 11       ; R19 := 11.000000
181 [-]: NOT       R20 R11      ; R20 :=  R11
182 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
183 [-]: LOADK     R15 K33      ; R15 := ""
184 [-]: LOADK     R16 K48      ; R16 := "<p><font color=\""
185 [-]: GETUPVAL  R17 U2       ; R17 := U2
186 [-]: GETTABLE  R17 R17 K49  ; R17 := R17["ContentHex"]
187 [-]: LOADK     R18 K50      ; R18 := "\">"
188 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
189 [-]: MOVE      R17 R11      ; R17 := R11
190 [-]: LOADKB    R18 0 0      ; R18 := false
191 [-]: GETTABLE  R19 R7 K51   ; R19 := R7["nodeType"]
192 [-]: EQ        0 R19 K53    ; if R19 ~= 3.000000 then PC := 342
193 [-]: JMP       342          ; PC := 342
194 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
195 [-]: SELF      R19 R19 K6   ; R20 := R19; R19 := R19[0xc0a3774b]
196 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
197 [-]: LOADK     R22 K54      ; R22 := "Reward"
198 [-]: CONST     R23 11       ; R23 := 11.000000
199 [-]: LOADKB    R24 0 0      ; R24 := false
200 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
201 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
202 [-]: SELF      R19 R19 K6   ; R20 := R19; R19 := R19[0xc0a3774b]
203 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
204 [-]: LOADK     R22 K10      ; R22 := "TextImage"
205 [-]: CONST     R23 11       ; R23 := 11.000000
206 [-]: LOADKB    R24 0 0      ; R24 := false
207 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
208 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
209 [-]: SELF      R19 R19 K6   ; R20 := R19; R19 := R19[0xc0a3774b]
210 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
211 [-]: LOADK     R22 K11      ; R22 := "Image"
212 [-]: CONST     R23 11       ; R23 := 11.000000
213 [-]: LOADKB    R24 1 0      ; R24 := true
214 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
215 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
216 [-]: SELF      R19 R19 K6   ; R20 := R19; R19 := R19[0xc0a3774b]
217 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
218 [-]: LOADK     R22 K12      ; R22 := "BlueprintBg"
219 [-]: CONST     R23 11       ; R23 := 11.000000
220 [-]: LOADKB    R24 0 0      ; R24 := false
221 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
222 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
223 [-]: SELF      R19 R19 K6   ; R20 := R19; R19 := R19[0xc0a3774b]
224 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
225 [-]: LOADK     R22 K13      ; R22 := "FactionIcon"
226 [-]: CONST     R23 11       ; R23 := 11.000000
227 [-]: LOADKB    R24 0 0      ; R24 := false
228 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
229 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
230 [-]: SELF      R19 R19 K17  ; R20 := R19; R19 := R19[0xe261aa96]
231 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
232 [-]: LOADK     R22 K46      ; R22 := "Text.Timer"
233 [-]: CONST     R23 29       ; R23 := 29.000000
234 [-]: GETGLOBAL R24 K26      ; R24 := 0x603636ad
235 [-]: LOADK     R25 K55      ; R25 := "/Lotus/Language/Game/Available"
236 [-]: LOADKB    R26 0 0      ; R26 := false
237 [-]: CALL      R24 3 0      ; R24,... := R24(R25,R26)
238 [-]: CALL      R19 0 1      ; R19(R20,...)
239 [-]: GETGLOBAL R19 K56      ; R19 := 0x7f5022cf
240 [-]: GETTABLE  R19 R19 K57  ; R19 := R19[0x3f3e4d12]
241 [-]: MOVE      R20 R8       ; R20 := R8
242 [-]: CALL      R19 2 2      ; R19 := R19(R20)
243 [-]: MOVE      R15 R19      ; R15 := R19
244 [-]: GETTABLE  R19 R7 K32   ; R19 := R7["name"]
245 [-]: GETGLOBAL R20 K58      ; R20 := 0x0469f296
246 [-]: LOADK     R21 K59      ; R21 := "TradeHUB1"
247 [-]: CALL      R20 2 2      ; R20 := R20(R21)
248 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 275
249 [-]: JMP       275          ; PC := 275
250 [-]: MOVE      R19 R16      ; R19 := R16
251 [-]: GETGLOBAL R20 K60      ; R20 := 0x5f0788c4
252 [-]: MOVE      R21 R15      ; R21 := R15
253 [-]: CALL      R20 2 2      ; R20 := R20(R21)
254 [-]: LOADK     R21 K40      ; R21 := " ("
255 [-]: MOVE      R22 R9       ; R22 := R9
256 [-]: LOADK     R23 K44      ; R23 := ")"
257 [-]: CONCAT    R16 R19 R23  ; R16 := R19 .. R20 .. R21 .. R22 .. R23
258 [-]: GETGLOBAL R19 K56      ; R19 := 0x7f5022cf
259 [-]: GETTABLE  R19 R19 K57  ; R19 := R19[0x3f3e4d12]
260 [-]: GETGLOBAL R20 K2       ; R20 := 0xae91e43b
261 [-]: SELF      R20 R20 K42  ; R21 := R20; R20 := R20[0x42b04007]
262 [-]: LOADK     R22 K61      ; R22 := "/Lotus/Language/G1Quests/TreasureHuntWeeklyObjective"
263 [-]: LOADKB    R23 0 0      ; R23 := false
264 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
265 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
266 [-]: MOVE      R15 R19      ; R15 := R19
267 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
268 [-]: SELF      R19 R19 K62  ; R20 := R19; R19 := R19[0x1cb415c1]
269 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
270 [-]: LOADK     R22 K63      ; R22 := ".Image"
271 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
272 [-]: GETGLOBAL R22 K64      ; R22 := 0xda824772
273 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
274 [-]: JMP       795          ; PC := 795
275 [-]: GETTABLE  R19 R0 K65   ; R19 := R0["mVoidTrader"]
276 [-]: TEST      R19 0        ; if not R19 then PC := 317
277 [-]: JMP       317          ; PC := 317
278 [-]: GETUPVAL  R19 U3       ; R19 := U3
279 [-]: GETTABLE  R19 R19 K66  ; R19 := R19[0xc340ce91]
280 [-]: GETGLOBAL R20 K2       ; R20 := 0xae91e43b
281 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
282 [-]: LOADK     R22 K67      ; R22 := ".Desc"
283 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
284 [-]: GETGLOBAL R22 K56      ; R22 := 0x7f5022cf
285 [-]: GETTABLE  R22 R22 K57  ; R22 := R22[0x3f3e4d12]
286 [-]: GETGLOBAL R23 K26      ; R23 := 0x603636ad
287 [-]: LOADK     R24 K68      ; R24 := "/Lotus/Language/Bosses/BaroKiTeer"
288 [-]: LOADKB    R25 0 0      ; R25 := false
289 [-]: CALL      R23 3 0      ; R23,... := R23(R24,R25)
290 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
291 [-]: MOVE      R23 R10      ; R23 := R10
292 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
293 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
294 [-]: GETGLOBAL R19 K56      ; R19 := 0x7f5022cf
295 [-]: GETTABLE  R19 R19 K57  ; R19 := R19[0x3f3e4d12]
296 [-]: GETGLOBAL R20 K26      ; R20 := 0x603636ad
297 [-]: LOADK     R21 K68      ; R21 := "/Lotus/Language/Bosses/BaroKiTeer"
298 [-]: LOADKB    R22 0 0      ; R22 := false
299 [-]: CALL      R20 3 0      ; R20,... := R20(R21,R22)
300 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
301 [-]: MOVE      R20 R10      ; R20 := R10
302 [-]: CONCAT    R15 R19 R20  ; R15 := R19 .. R20
303 [-]: MOVE      R19 R16      ; R19 := R16
304 [-]: MOVE      R20 R8       ; R20 := R8
305 [-]: LOADK     R21 K40      ; R21 := " ("
306 [-]: MOVE      R22 R9       ; R22 := R9
307 [-]: LOADK     R23 K44      ; R23 := ")"
308 [-]: CONCAT    R16 R19 R23  ; R16 := R19 .. R20 .. R21 .. R22 .. R23
309 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
310 [-]: SELF      R19 R19 K62  ; R20 := R19; R19 := R19[0x1cb415c1]
311 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
312 [-]: LOADK     R22 K63      ; R22 := ".Image"
313 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
314 [-]: GETGLOBAL R22 K69      ; R22 := 0x1e0f74d5
315 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
316 [-]: JMP       795          ; PC := 795
317 [-]: MOVE      R19 R16      ; R19 := R16
318 [-]: GETGLOBAL R20 K60      ; R20 := 0x5f0788c4
319 [-]: MOVE      R21 R15      ; R21 := R15
320 [-]: CALL      R20 2 2      ; R20 := R20(R21)
321 [-]: LOADK     R21 K40      ; R21 := " ("
322 [-]: MOVE      R22 R9       ; R22 := R9
323 [-]: LOADK     R23 K44      ; R23 := ")"
324 [-]: CONCAT    R16 R19 R23  ; R16 := R19 .. R20 .. R21 .. R22 .. R23
325 [-]: GETGLOBAL R19 K56      ; R19 := 0x7f5022cf
326 [-]: GETTABLE  R19 R19 K57  ; R19 := R19[0x3f3e4d12]
327 [-]: GETGLOBAL R20 K2       ; R20 := 0xae91e43b
328 [-]: SELF      R20 R20 K42  ; R21 := R20; R20 := R20[0x42b04007]
329 [-]: LOADK     R22 K70      ; R22 := "/Lotus/Language/G1Quests/ClemWeeklyMissionDesc"
330 [-]: LOADKB    R23 0 0      ; R23 := false
331 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
332 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
333 [-]: MOVE      R15 R19      ; R15 := R19
334 [-]: GETGLOBAL R19 K2       ; R19 := 0xae91e43b
335 [-]: SELF      R19 R19 K62  ; R20 := R19; R19 := R19[0x1cb415c1]
336 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
337 [-]: LOADK     R22 K63      ; R22 := ".Image"
338 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
339 [-]: GETGLOBAL R22 K71      ; R22 := 0x2b369c7d
340 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
341 [-]: JMP       795          ; PC := 795
342 [-]: GETUPVAL  R19 U0       ; R19 := U0
343 [-]: GETTABLE  R19 R19 K72  ; R19 := R19[0x8a389d5f]
344 [-]: GETTABLE  R20 R0 K23   ; R20 := R0["mAlertInfo"]
345 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["mMissionInfo"]
346 [-]: CALL      R19 2 2      ; R19 := R19(R20)
347 [-]: LOADK     R20 K33      ; R20 := ""
348 [-]: GETTABLE  R21 R0 K23   ; R21 := R0["mAlertInfo"]
349 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mMissionInfo"]
350 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["archwingRequired"]
351 [-]: TEST      R21 1        ; if R21 then PC := 358
352 [-]: JMP       358          ; PC := 358
353 [-]: GETTABLE  R21 R0 K23   ; R21 := R0["mAlertInfo"]
354 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mMissionInfo"]
355 [-]: GETTABLE  R21 R21 K74  ; R21 := R21["isSharkwingMission"]
356 [-]: TEST      R21 0        ; if not R21 then PC := 365
357 [-]: JMP       365          ; PC := 365
358 [-]: GETGLOBAL R21 K2       ; R21 := 0xae91e43b
359 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21[0x42b04007]
360 [-]: LOADK     R23 K75      ; R23 := "<ARCHWING>"
361 [-]: LOADKB    R24 1 0      ; R24 := true
362 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
363 [-]: LOADK     R22 K76      ; R22 := " "
364 [-]: CONCAT    R20 R21 R22  ; R20 := R21 .. R22
365 [-]: LOADK     R21 K33      ; R21 := ""
366 [-]: GETGLOBAL R22 K1       ; R22 := 0x7b998233
367 [-]: GETTABLE  R23 R0 K23   ; R23 := R0["mAlertInfo"]
368 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["mMissionInfo"]
369 [-]: GETTABLE  R23 R23 K77  ; R23 := R23["exclusiveWeapon"]
370 [-]: CALL      R22 2 2      ; R22 := R22(R23)
371 [-]: TEST      R22 1        ; if R22 then PC := 396
372 [-]: JMP       396          ; PC := 396
373 [-]: GETGLOBAL R22 K26      ; R22 := 0x603636ad
374 [-]: GETGLOBAL R23 K78      ; R23 := 0x64fb1586
375 [-]: GETGLOBAL R24 K79      ; R24 := 0xb009bbc6
376 [-]: GETTABLE  R25 R0 K23   ; R25 := R0["mAlertInfo"]
377 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mMissionInfo"]
378 [-]: GETTABLE  R25 R25 K77  ; R25 := R25["exclusiveWeapon"]
379 [-]: CALL      R24 2 2      ; R24 := R24(R25)
380 [-]: SELF      R24 R24 K80  ; R25 := R24; R24 := R24[0xd3a9d01f]
381 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
382 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
383 [-]: LOADKB    R24 0 0      ; R24 := false
384 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
385 [-]: LOADK     R23 K40      ; R23 := " ("
386 [-]: GETGLOBAL R24 K60      ; R24 := 0x5f0788c4
387 [-]: GETGLOBAL R25 K26      ; R25 := 0x603636ad
388 [-]: LOADK     R26 K81      ; R26 := "/Lotus/Language/Sorties/SOModifierWeaponRestriction"
389 [-]: NEWTABLE  R27 0 1      ; R27 := {}
390 [-]: SETTABLE  R27 K82 R22  ; R27["WEAPON_TYPE"] := R22
391 [-]: CALL      R25 3 0      ; R25,... := R25(R26,R27)
392 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
393 [-]: LOADK     R25 K44      ; R25 := ")"
394 [-]: CONCAT    R21 R23 R25  ; R21 := R23 .. R24 .. R25
395 [-]: JMP       410          ; PC := 410
396 [-]: GETTABLE  R23 R0 K23   ; R23 := R0["mAlertInfo"]
397 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["mMissionInfo"]
398 [-]: GETTABLE  R23 R23 K83  ; R23 := R23["nightmare"]
399 [-]: TEST      R23 0        ; if not R23 then PC := 410
400 [-]: JMP       410          ; PC := 410
401 [-]: LOADK     R23 K40      ; R23 := " ("
402 [-]: GETGLOBAL R24 K60      ; R24 := 0x5f0788c4
403 [-]: GETGLOBAL R25 K26      ; R25 := 0x603636ad
404 [-]: LOADK     R26 K84      ; R26 := "/Lotus/Language/Menu/NightmareModeName"
405 [-]: LOADNIL   R27 R27      ; R27 := nil
406 [-]: CALL      R25 3 0      ; R25,... := R25(R26,R27)
407 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
408 [-]: LOADK     R25 K44      ; R25 := ")"
409 [-]: CONCAT    R21 R23 R25  ; R21 := R23 .. R24 .. R25
410 [-]: GETGLOBAL R23 K56      ; R23 := 0x7f5022cf
411 [-]: GETTABLE  R23 R23 K57  ; R23 := R23[0x3f3e4d12]
412 [-]: GETGLOBAL R24 K26      ; R24 := 0x603636ad
413 [-]: LOADK     R25 K85      ; R25 := "/Lotus/Language/Missions/MissionName_"
414 [-]: MOVE      R26 R19      ; R26 := R19
415 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
416 [-]: LOADKB    R26 0 0      ; R26 := false
417 [-]: CALL      R24 3 0      ; R24,... := R24(R25,R26)
418 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
419 [-]: MOVE      R24 R20      ; R24 := R20
420 [-]: MOVE      R25 R23      ; R25 := R23
421 [-]: LOADK     R26 K40      ; R26 := " ("
422 [-]: MOVE      R27 R13      ; R27 := R13
423 [-]: LOADK     R28 K86      ; R28 := "-"
424 [-]: MOVE      R29 R14      ; R29 := R14
425 [-]: LOADK     R30 K44      ; R30 := ")"
426 [-]: CONCAT    R15 R24 R30  ; R15 := R24 .. R25 .. R26 .. R27 .. R28 .. R29 .. R30
427 [-]: GETUPVAL  R24 U4       ; R24 := U4
428 [-]: GETTABLE  R25 R0 K23   ; R25 := R0["mAlertInfo"]
429 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mMissionInfo"]
430 [-]: GETTABLE  R25 R25 K87  ; R25 := R25["faction"]
431 [-]: ADD       R25 R25 K31  ; R25 := R25 + 1.000000
432 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
433 [-]: MOVE      R25 R15      ; R25 := R15
434 [-]: LOADK     R26 K88      ; R26 := " - "
435 [-]: GETGLOBAL R27 K2       ; R27 := 0xae91e43b
436 [-]: SELF      R27 R27 K42  ; R28 := R27; R27 := R27[0x42b04007]
437 [-]: MOVE      R29 R24      ; R29 := R24
438 [-]: LOADKB    R30 0 0      ; R30 := false
439 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
440 [-]: MOVE      R28 R10      ; R28 := R10
441 [-]: CONCAT    R15 R25 R28  ; R15 := R25 .. R26 .. R27 .. R28
442 [-]: GETTABLE  R25 R0 K23   ; R25 := R0["mAlertInfo"]
443 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mMissionInfo"]
444 [-]: GETTABLE  R25 R25 K89  ; R25 := R25["descText"]
445 [-]: SELF      R25 R25 K28  ; R26 := R25; R25 := R25[0x6d604ba7]
446 [-]: CALL      R25 2 2      ; R25 := R25(R26)
447 [-]: EQ        1 R25 K33    ; if R25 == "" then PC := 461
448 [-]: JMP       461          ; PC := 461
449 [-]: MOVE      R25 R16      ; R25 := R16
450 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
451 [-]: SELF      R26 R26 K42  ; R27 := R26; R26 := R26[0x42b04007]
452 [-]: GETTABLE  R28 R0 K23   ; R28 := R0["mAlertInfo"]
453 [-]: GETTABLE  R28 R28 K24  ; R28 := R28["mMissionInfo"]
454 [-]: GETTABLE  R28 R28 K89  ; R28 := R28["descText"]
455 [-]: SELF      R28 R28 K28  ; R29 := R28; R28 := R28[0x6d604ba7]
456 [-]: CALL      R28 2 2      ; R28 := R28(R29)
457 [-]: LOADKB    R29 0 0      ; R29 := false
458 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
459 [-]: LOADK     R27 K90      ; R27 := "<br>"
460 [-]: CONCAT    R16 R25 R27  ; R16 := R25 .. R26 .. R27
461 [-]: MOVE      R25 R16      ; R25 := R16
462 [-]: MOVE      R26 R8       ; R26 := R8
463 [-]: LOADK     R27 K40      ; R27 := " ("
464 [-]: MOVE      R28 R9       ; R28 := R9
465 [-]: LOADK     R29 K91      ; R29 := ")<br>"
466 [-]: CONCAT    R16 R25 R29  ; R16 := R25 .. R26 .. R27 .. R28 .. R29
467 [-]: EQ        1 R21 K33    ; if R21 == "" then PC := 473
468 [-]: JMP       473          ; PC := 473
469 [-]: MOVE      R25 R16      ; R25 := R16
470 [-]: MOVE      R26 R21      ; R26 := R21
471 [-]: LOADK     R27 K90      ; R27 := "<br>"
472 [-]: CONCAT    R16 R25 R27  ; R16 := R25 .. R26 .. R27
473 [-]: GETTABLE  R25 R0 K34   ; R25 := R0["mModifiers"]
474 [-]: EQ        1 R25 K35    ; if R25 == nil then PC := 506
475 [-]: JMP       506          ; PC := 506
476 [-]: MOVE      R25 R16      ; R25 := R16
477 [-]: LOADK     R26 K92      ; R26 := "<font color=\""
478 [-]: GETUPVAL  R27 U2       ; R27 := U2
479 [-]: GETTABLE  R27 R27 K93  ; R27 := R27["FloatingContentHex"]
480 [-]: LOADK     R28 K50      ; R28 := "\">"
481 [-]: GETGLOBAL R29 K2       ; R29 := 0xae91e43b
482 [-]: SELF      R29 R29 K42  ; R30 := R29; R29 := R29[0x42b04007]
483 [-]: LOADK     R31 K84      ; R31 := "/Lotus/Language/Menu/NightmareModeName"
484 [-]: LOADKB    R32 0 0      ; R32 := false
485 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
486 [-]: LOADK     R30 K94      ; R30 := " </font>"
487 [-]: CONCAT    R16 R25 R30  ; R16 := R25 .. R26 .. R27 .. R28 .. R29 .. R30
488 [-]: GETGLOBAL R25 K95      ; R25 := 0xcfc01047
489 [-]: GETTABLE  R26 R0 K34   ; R26 := R0["mModifiers"]
490 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
491 [-]: JMP       504          ; PC := 504
492 [-]: LT        0 K31 R28    ; if 1.000000 >= R28 then PC := 497
493 [-]: JMP       497          ; PC := 497
494 [-]: MOVE      R30 R16      ; R30 := R16
495 [-]: LOADK     R31 K96      ; R31 := ", "
496 [-]: CONCAT    R16 R30 R31  ; R16 := R30 .. R31
497 [-]: MOVE      R30 R16      ; R30 := R16
498 [-]: GETGLOBAL R31 K2       ; R31 := 0xae91e43b
499 [-]: SELF      R31 R31 K42  ; R32 := R31; R31 := R31[0x42b04007]
500 [-]: GETTABLE  R33 R29 K97  ; R33 := R29[2.000000]
501 [-]: LOADKB    R34 0 0      ; R34 := false
502 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
503 [-]: CONCAT    R16 R30 R31  ; R16 := R30 .. R31
504 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 492; R27 := R28 end
505 [-]: JMP       492          ; PC := 492
506 [-]: GETGLOBAL R30 K60      ; R30 := 0x5f0788c4
507 [-]: GETUPVAL  R31 U0       ; R31 := U0
508 [-]: GETTABLE  R31 R31 K98  ; R31 := R31[0xfbe41490]
509 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
510 [-]: GETTABLE  R33 R0 K23   ; R33 := R0["mAlertInfo"]
511 [-]: GETTABLE  R33 R33 K24  ; R33 := R33["mMissionInfo"]
512 [-]: GETTABLE  R33 R33 K99  ; R33 := R33["missionReward"]
513 [-]: CALL      R31 3 0      ; R31,... := R31(R32,R33)
514 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
515 [-]: GETTABLE  R31 R0 K100  ; R31 := R0["mRewardTagOverride"]
516 [-]: TEST      R31 0        ; if not R31 then PC := 527
517 [-]: JMP       527          ; PC := 527
518 [-]: GETGLOBAL R31 K60      ; R31 := 0x5f0788c4
519 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
520 [-]: SELF      R32 R32 K42  ; R33 := R32; R32 := R32[0x42b04007]
521 [-]: GETTABLE  R34 R0 K100  ; R34 := R0["mRewardTagOverride"]
522 [-]: LOADKB    R35 1 0      ; R35 := true
523 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
524 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
525 [-]: MOVE      R30 R31      ; R30 := R31
526 [-]: JMP       595          ; PC := 595
527 [-]: GETTABLE  R31 R0 K23   ; R31 := R0["mAlertInfo"]
528 [-]: GETTABLE  R31 R31 K24  ; R31 := R31["mMissionInfo"]
529 [-]: GETTABLE  R31 R31 K101 ; R31 := R31["periodicMissionTag"]
530 [-]: GETUPVAL  R32 U0       ; R32 := U0
531 [-]: GETTABLE  R32 R32 K102 ; R32 := R32["ELITE_ALERT_PERIODIC_MISSION_TAG"]
532 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 541
533 [-]: JMP       541          ; PC := 541
534 [-]: GETTABLE  R31 R0 K23   ; R31 := R0["mAlertInfo"]
535 [-]: GETTABLE  R31 R31 K24  ; R31 := R31["mMissionInfo"]
536 [-]: GETTABLE  R31 R31 K101 ; R31 := R31["periodicMissionTag"]
537 [-]: GETUPVAL  R32 U0       ; R32 := U0
538 [-]: GETTABLE  R32 R32 K103 ; R32 := R32["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
539 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 595
540 [-]: JMP       595          ; PC := 595
541 [-]: LOADKB    R17 1 0      ; R17 := true
542 [-]: GETTABLE  R31 R0 K104  ; R31 := R0["mCompleted"]
543 [-]: TEST      R31 0        ; if not R31 then PC := 552
544 [-]: JMP       552          ; PC := 552
545 [-]: GETGLOBAL R31 K2       ; R31 := 0xae91e43b
546 [-]: SELF      R31 R31 K42  ; R32 := R31; R31 := R31[0x42b04007]
547 [-]: LOADK     R33 K105     ; R33 := "/Lotus/Language/Menu/CompletedPersonal"
548 [-]: LOADKB    R34 0 0      ; R34 := false
549 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
550 [-]: MOVE      R30 R31      ; R30 := R31
551 [-]: JMP       595          ; PC := 595
552 [-]: GETTABLE  R31 R0 K39   ; R31 := R0["mUnlocked"]
553 [-]: TEST      R31 1        ; if R31 then PC := 568
554 [-]: JMP       568          ; PC := 568
555 [-]: GETUPVAL  R31 U0       ; R31 := U0
556 [-]: GETTABLE  R31 R31 K106 ; R31 := R31[0x7fa20839]
557 [-]: CALL      R31 1 4      ; R31,R32,R33 := R31()
558 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
559 [-]: SELF      R34 R34 K42  ; R35 := R34; R34 := R34[0x42b04007]
560 [-]: LOADK     R36 K107     ; R36 := "/Lotus/Language/Menu/MissionStarChartCompletedHint"
561 [-]: LOADKB    R37 0 0      ; R37 := false
562 [-]: NEWTABLE  R38 0 1      ; R38 := {}
563 [-]: LEN       R39 R33      ; R39 := # R33
564 [-]: SETTABLE  R38 K108 R39 ; R38["COUNT"] := R39
565 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
566 [-]: MOVE      R30 R34      ; R30 := R34
567 [-]: JMP       595          ; PC := 595
568 [-]: LOADKB    R18 1 0      ; R18 := true
569 [-]: GETGLOBAL R34 K79      ; R34 := 0xb009bbc6
570 [-]: GETTABLE  R35 R0 K109  ; R35 := R0["mSuitStoreItem"]
571 [-]: CALL      R34 2 2      ; R34 := R34(R35)
572 [-]: GETUPVAL  R35 U5       ; R35 := U5
573 [-]: GETTABLE  R36 R0 K4    ; R36 := R0["mClipName"]
574 [-]: LOADK     R37 K110     ; R37 := ".Text.SuitBuffIcon"
575 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
576 [-]: MOVE      R37 R34      ; R37 := R34
577 [-]: CALL      R35 3 1      ; R35(R36,R37)
578 [-]: GETUPVAL  R35 U5       ; R35 := U5
579 [-]: GETTABLE  R36 R0 K4    ; R36 := R0["mClipName"]
580 [-]: LOADK     R37 K111     ; R37 := ".Text.WeaponBuffIcon"
581 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
582 [-]: GETGLOBAL R37 K79      ; R37 := 0xb009bbc6
583 [-]: GETTABLE  R38 R0 K112  ; R38 := R0["mWeaponStoreItems"]
584 [-]: GETUPVAL  R39 U6       ; R39 := U6
585 [-]: GETTABLE  R39 R39 K113 ; R39 := R39["mBuffIconIndex"]
586 [-]: GETTABLE  R38 R38 R39  ; R38 := R38[R39]
587 [-]: CALL      R37 2 0      ; R37,... := R37(R38)
588 [-]: CALL      R35 0 1      ; R35(R36,...)
589 [-]: GETUPVAL  R35 U7       ; R35 := U7
590 [-]: GETTABLE  R36 R0 K4    ; R36 := R0["mClipName"]
591 [-]: LOADK     R37 K114     ; R37 := ".Text"
592 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
593 [-]: MOVE      R37 R0       ; R37 := R0
594 [-]: CALL      R35 3 1      ; R35(R36,R37)
595 [-]: MOVE      R35 R16      ; R35 := R16
596 [-]: MOVE      R36 R30      ; R36 := R30
597 [-]: CONCAT    R16 R35 R36  ; R16 := R35 .. R36
598 [-]: LOADNIL   R35 R37      ; R35 := R36 := R37 := nil
599 [-]: LOADKB    R38 0 0      ; R38 := false
600 [-]: GETGLOBAL R39 K1       ; R39 := 0x7b998233
601 [-]: GETTABLE  R40 R0 K115  ; R40 := R0["mImage"]
602 [-]: CALL      R39 2 2      ; R39 := R39(R40)
603 [-]: TEST      R39 1        ; if R39 then PC := 607
604 [-]: JMP       607          ; PC := 607
605 [-]: GETTABLE  R35 R0 K115  ; R35 := R0["mImage"]
606 [-]: JMP       618          ; PC := 618
607 [-]: GETUPVAL  R39 U0       ; R39 := U0
608 [-]: GETTABLE  R39 R39 K116 ; R39 := R39[0x73a7fd40]
609 [-]: GETTABLE  R40 R0 K23   ; R40 := R0["mAlertInfo"]
610 [-]: GETTABLE  R40 R40 K24  ; R40 := R40["mMissionInfo"]
611 [-]: GETTABLE  R40 R40 K99  ; R40 := R40["missionReward"]
612 [-]: LOADKB    R41 1 0      ; R41 := true
613 [-]: CALL      R39 3 5      ; R39,R40,R41,R42 := R39(R40,R41)
614 [-]: MOVE      R38 R42      ; R38 := R42
615 [-]: MOVE      R37 R41      ; R37 := R41
616 [-]: MOVE      R36 R40      ; R36 := R40
617 [-]: MOVE      R35 R39      ; R35 := R39
618 [-]: GETGLOBAL R39 K2       ; R39 := 0xae91e43b
619 [-]: SELF      R39 R39 K6   ; R40 := R39; R39 := R39[0xc0a3774b]
620 [-]: GETTABLE  R41 R0 K4    ; R41 := R0["mClipName"]
621 [-]: LOADK     R42 K10      ; R42 := "TextImage"
622 [-]: CONST     R43 11       ; R43 := 11.000000
623 [-]: LOADKB    R44 0 0      ; R44 := false
624 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
625 [-]: GETGLOBAL R39 K2       ; R39 := 0xae91e43b
626 [-]: SELF      R39 R39 K6   ; R40 := R39; R39 := R39[0xc0a3774b]
627 [-]: GETTABLE  R41 R0 K4    ; R41 := R0["mClipName"]
628 [-]: LOADK     R42 K11      ; R42 := "Image"
629 [-]: CONST     R43 11       ; R43 := 11.000000
630 [-]: EQ        0 R35 K35    ; if R35 ~= nil then PC := 633
631 [-]: JMP       633          ; PC := 633
632 [-]: LOADKB    R44 0 1      ; R44 := false; PC := 633
633 [-]: LOADKB    R44 1 0      ; R44 := true
634 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
635 [-]: GETGLOBAL R39 K2       ; R39 := 0xae91e43b
636 [-]: SELF      R39 R39 K20  ; R40 := R39; R39 := R39[0xf64b7262]
637 [-]: GETTABLE  R41 R0 K4    ; R41 := R0["mClipName"]
638 [-]: LOADK     R42 K11      ; R42 := "Image"
639 [-]: CONST     R43 9        ; R43 := 9.000000
640 [-]: GETUPVAL  R44 U3       ; R44 := U3
641 [-]: GETTABLE  R44 R44 K36  ; R44 := R44[0x06d055f9]
642 [-]: MOVE      R45 R17      ; R45 := R17
643 [-]: GETUPVAL  R46 U2       ; R46 := U2
644 [-]: GETTABLE  R46 R46 K117 ; R46 := R46["Content"]
645 [-]: GETGLOBAL R47 K118     ; R47 := 0x0032441c
646 [-]: GETTABLE  R47 R47 K119 ; R47 := R47["UIColor_White"]
647 [-]: CALL      R44 4 0      ; R44,... := R44(R45,R46,R47)
648 [-]: CALL      R39 0 1      ; R39(R40,...)
649 [-]: GETGLOBAL R39 K2       ; R39 := 0xae91e43b
650 [-]: SELF      R39 R39 K6   ; R40 := R39; R39 := R39[0xc0a3774b]
651 [-]: GETTABLE  R41 R0 K4    ; R41 := R0["mClipName"]
652 [-]: LOADK     R42 K12      ; R42 := "BlueprintBg"
653 [-]: CONST     R43 11       ; R43 := 11.000000
654 [-]: EQ        1 R35 K35    ; if R35 == nil then PC := 658
655 [-]: JMP       658          ; PC := 658
656 [-]: EQ        1 R36 K120   ; if R36 == true then PC := 659
657 [-]: JMP       659          ; PC := 659
658 [-]: LOADKB    R44 0 1      ; R44 := false; PC := 659
659 [-]: LOADKB    R44 1 0      ; R44 := true
660 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
661 [-]: GETGLOBAL R39 K2       ; R39 := 0xae91e43b
662 [-]: SELF      R39 R39 K62  ; R40 := R39; R39 := R39[0x1cb415c1]
663 [-]: GETTABLE  R41 R0 K4    ; R41 := R0["mClipName"]
664 [-]: LOADK     R42 K121     ; R42 := ".BlueprintBg"
665 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
666 [-]: GETGLOBAL R42 K118     ; R42 := 0x0032441c
667 [-]: GETTABLE  R42 R42 K122 ; R42 := R42["UITexture_Blueprint"]
668 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
669 [-]: EQ        1 R35 K35    ; if R35 == nil then PC := 738
670 [-]: JMP       738          ; PC := 738
671 [-]: CONST     R39 70       ; R39 := 70.000000
672 [-]: GETTABLE  R40 R0 K23   ; R40 := R0["mAlertInfo"]
673 [-]: GETTABLE  R40 R40 K24  ; R40 := R40["mMissionInfo"]
674 [-]: GETTABLE  R40 R40 K101 ; R40 := R40["periodicMissionTag"]
675 [-]: GETUPVAL  R41 U0       ; R41 := U0
676 [-]: GETTABLE  R41 R41 K102 ; R41 := R41["ELITE_ALERT_PERIODIC_MISSION_TAG"]
677 [-]: EQ        1 R40 R41    ; if R40 == R41 then PC := 686
678 [-]: JMP       686          ; PC := 686
679 [-]: GETTABLE  R40 R0 K23   ; R40 := R0["mAlertInfo"]
680 [-]: GETTABLE  R40 R40 K24  ; R40 := R40["mMissionInfo"]
681 [-]: GETTABLE  R40 R40 K101 ; R40 := R40["periodicMissionTag"]
682 [-]: GETUPVAL  R41 U0       ; R41 := U0
683 [-]: GETTABLE  R41 R41 K103 ; R41 := R41["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
684 [-]: EQ        0 R40 R41    ; if R40 ~= R41 then PC := 687
685 [-]: JMP       687          ; PC := 687
686 [-]: CONST     R39 100      ; R39 := 100.000000
687 [-]: GETGLOBAL R40 K1       ; R40 := 0x7b998233
688 [-]: MOVE      R41 R37      ; R41 := R37
689 [-]: CALL      R40 2 2      ; R40 := R40(R41)
690 [-]: TEST      R40 1        ; if R40 then PC := 697
691 [-]: JMP       697          ; PC := 697
692 [-]: SELF      R40 R37 K123 ; R41 := R37; R40 := R37[0xf2deaf69]
693 [-]: GETGLOBAL R42 K124     ; R42 := gLotusArtifactUpgradeType
694 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
695 [-]: TEST      R40 1        ; if R40 then PC := 707
696 [-]: JMP       707          ; PC := 707
697 [-]: GETGLOBAL R40 K118     ; R40 := 0x0032441c
698 [-]: GETTABLE  R40 R40 K125 ; R40 := R40["UITexture_CreditsIcon"]
699 [-]: EQ        1 R35 R40    ; if R35 == R40 then PC := 706
700 [-]: JMP       706          ; PC := 706
701 [-]: TESTSET   R40 R38 1    ; if R38 then PC := 707 else R40 := R38
702 [-]: JMP       707          ; PC := 707
703 [-]: GETTABLE  R40 R0 K126  ; R40 := R0["mSquareIcon"]
704 [-]: JMP       707          ; PC := 707
705 [-]: LOADKB    R40 0 1      ; R40 := false; PC := 706
706 [-]: LOADKB    R40 1 0      ; R40 := true
707 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
708 [-]: SELF      R41 R41 K20  ; R42 := R41; R41 := R41[0xf64b7262]
709 [-]: GETTABLE  R43 R0 K4    ; R43 := R0["mClipName"]
710 [-]: LOADK     R44 K11      ; R44 := "Image"
711 [-]: CONST     R45 12       ; R45 := 12.000000
712 [-]: GETUPVAL  R46 U3       ; R46 := U3
713 [-]: GETTABLE  R46 R46 K36  ; R46 := R46[0x06d055f9]
714 [-]: MOVE      R47 R40      ; R47 := R40
715 [-]: MOVE      R48 R39      ; R48 := R39
716 [-]: CONST     R49 108      ; R49 := 108.000000
717 [-]: CALL      R46 4 0      ; R46,... := R46(R47,R48,R49)
718 [-]: CALL      R41 0 1      ; R41(R42,...)
719 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
720 [-]: SELF      R41 R41 K20  ; R42 := R41; R41 := R41[0xf64b7262]
721 [-]: GETTABLE  R43 R0 K4    ; R43 := R0["mClipName"]
722 [-]: LOADK     R44 K11      ; R44 := "Image"
723 [-]: CONST     R45 13       ; R45 := 13.000000
724 [-]: GETUPVAL  R46 U3       ; R46 := U3
725 [-]: GETTABLE  R46 R46 K36  ; R46 := R46[0x06d055f9]
726 [-]: MOVE      R47 R40      ; R47 := R40
727 [-]: MOVE      R48 R39      ; R48 := R39
728 [-]: CONST     R49 71       ; R49 := 71.000000
729 [-]: CALL      R46 4 0      ; R46,... := R46(R47,R48,R49)
730 [-]: CALL      R41 0 1      ; R41(R42,...)
731 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
732 [-]: SELF      R41 R41 K62  ; R42 := R41; R41 := R41[0x1cb415c1]
733 [-]: GETTABLE  R43 R0 K4    ; R43 := R0["mClipName"]
734 [-]: LOADK     R44 K63      ; R44 := ".Image"
735 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
736 [-]: MOVE      R44 R35      ; R44 := R35
737 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
738 [-]: GETGLOBAL R41 K1       ; R41 := 0x7b998233
739 [-]: GETTABLE  R42 R0 K23   ; R42 := R0["mAlertInfo"]
740 [-]: GETTABLE  R42 R42 K127 ; R42 := R42["mIcon"]
741 [-]: CALL      R41 2 2      ; R41 := R41(R42)
742 [-]: TEST      R41 1        ; if R41 then PC := 752
743 [-]: JMP       752          ; PC := 752
744 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
745 [-]: SELF      R41 R41 K62  ; R42 := R41; R41 := R41[0x1cb415c1]
746 [-]: GETTABLE  R43 R0 K4    ; R43 := R0["mClipName"]
747 [-]: LOADK     R44 K63      ; R44 := ".Image"
748 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
749 [-]: GETTABLE  R44 R0 K23   ; R44 := R0["mAlertInfo"]
750 [-]: GETTABLE  R44 R44 K127 ; R44 := R44["mIcon"]
751 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
752 [-]: GETTABLE  R41 R0 K23   ; R41 := R0["mAlertInfo"]
753 [-]: GETTABLE  R41 R41 K24  ; R41 := R41["mMissionInfo"]
754 [-]: GETTABLE  R41 R41 K87  ; R41 := R41["faction"]
755 [-]: ADD       R41 R41 K31  ; R41 := R41 + 1.000000
756 [-]: LOADNIL   R42 R42      ; R42 := nil
757 [-]: GETTABLE  R43 R0 K39   ; R43 := R0["mUnlocked"]
758 [-]: TEST      R43 1        ; if R43 then PC := 763
759 [-]: JMP       763          ; PC := 763
760 [-]: GETGLOBAL R43 K118     ; R43 := 0x0032441c
761 [-]: GETTABLE  R42 R43 K128 ; R42 := R43["UITexture_Locked"]
762 [-]: JMP       768          ; PC := 768
763 [-]: LE        0 R41 K129   ; if R41 > 4.000000 then PC := 768
764 [-]: JMP       768          ; PC := 768
765 [-]: GETGLOBAL R43 K118     ; R43 := 0x0032441c
766 [-]: GETTABLE  R43 R43 K130 ; R43 := R43["UITextures_FactionInvasion"]
767 [-]: GETTABLE  R42 R43 R41  ; R42 := R43[R41]
768 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
769 [-]: SELF      R43 R43 K6   ; R44 := R43; R43 := R43[0xc0a3774b]
770 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
771 [-]: LOADK     R46 K13      ; R46 := "FactionIcon"
772 [-]: CONST     R47 11       ; R47 := 11.000000
773 [-]: EQ        0 R42 K35    ; if R42 ~= nil then PC := 776
774 [-]: JMP       776          ; PC := 776
775 [-]: LOADKB    R48 0 1      ; R48 := false; PC := 776
776 [-]: LOADKB    R48 1 0      ; R48 := true
777 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
778 [-]: EQ        1 R42 K35    ; if R42 == nil then PC := 787
779 [-]: JMP       787          ; PC := 787
780 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
781 [-]: SELF      R43 R43 K62  ; R44 := R43; R43 := R43[0x1cb415c1]
782 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
783 [-]: LOADK     R46 K131     ; R46 := ".FactionIcon"
784 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
785 [-]: MOVE      R46 R42      ; R46 := R42
786 [-]: CALL      R43 4 1      ; R43(R44,R45,R46)
787 [-]: GETUPVAL  R43 U8       ; R43 := U8
788 [-]: GETTABLE  R44 R0 K4    ; R44 := R0["mClipName"]
789 [-]: LOADK     R45 K132     ; R45 := ".Text.Timer"
790 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
791 [-]: GETTABLE  R45 R0 K23   ; R45 := R0["mAlertInfo"]
792 [-]: LOADNIL   R46 R46      ; R46 := nil
793 [-]: LOADKB    R47 1 0      ; R47 := true
794 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
795 [-]: MOVE      R43 R16      ; R43 := R16
796 [-]: LOADK     R44 K133     ; R44 := "</font></p>"
797 [-]: CONCAT    R16 R43 R44  ; R16 := R43 .. R44
798 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
799 [-]: SELF      R43 R43 K6   ; R44 := R43; R43 := R43[0xc0a3774b]
800 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
801 [-]: LOADK     R46 K134     ; R46 := "Text.SuitBuffIcon"
802 [-]: CONST     R47 11       ; R47 := 11.000000
803 [-]: MOVE      R48 R18      ; R48 := R18
804 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
805 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
806 [-]: SELF      R43 R43 K6   ; R44 := R43; R43 := R43[0xc0a3774b]
807 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
808 [-]: LOADK     R46 K135     ; R46 := "Text.SuitInfo"
809 [-]: CONST     R47 11       ; R47 := 11.000000
810 [-]: MOVE      R48 R18      ; R48 := R18
811 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
812 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
813 [-]: SELF      R43 R43 K6   ; R44 := R43; R43 := R43[0xc0a3774b]
814 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
815 [-]: LOADK     R46 K136     ; R46 := "Text.WeaponBuffIcon"
816 [-]: CONST     R47 11       ; R47 := 11.000000
817 [-]: MOVE      R48 R18      ; R48 := R18
818 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
819 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
820 [-]: SELF      R43 R43 K6   ; R44 := R43; R43 := R43[0xc0a3774b]
821 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
822 [-]: LOADK     R46 K137     ; R46 := "Text.WeaponInfo"
823 [-]: CONST     R47 11       ; R47 := 11.000000
824 [-]: MOVE      R48 R18      ; R48 := R18
825 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
826 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
827 [-]: SELF      R43 R43 K17  ; R44 := R43; R43 := R43[0xe261aa96]
828 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
829 [-]: LOADK     R46 K45      ; R46 := "Text.Title"
830 [-]: CONST     R47 29       ; R47 := 29.000000
831 [-]: MOVE      R48 R15      ; R48 := R15
832 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
833 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
834 [-]: SELF      R43 R43 K17  ; R44 := R43; R43 := R43[0xe261aa96]
835 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
836 [-]: LOADK     R46 K138     ; R46 := "Text.Description"
837 [-]: CONST     R47 29       ; R47 := 29.000000
838 [-]: MOVE      R48 R16      ; R48 := R16
839 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
840 [-]: GETUPVAL  R43 U9       ; R43 := U9
841 [-]: MOVE      R44 R0       ; R44 := R0
842 [-]: MOVE      R45 R18      ; R45 := R18
843 [-]: CALL      R43 3 1      ; R43(R44,R45)
844 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1952
; #Upvalues:       9
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x5e35d4d6]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: CONST     R3 1         ; R3 := 1.000000
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: LEN       R4 R4        ; R4 := # R4
 13 [-]: CONST     R5 1         ; R5 := 1.000000
 14 [-]: FORPREP   R3 23        ; R3 -= R5; PC := 23
 15 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 16 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7[0xd5181643]
 17 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 18 [-]: GETUPVAL  R10 U1       ; R10 := U1
 19 [-]: GETTABLE  R10 R10 R6   ; R10 := R10[R6]
 20 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 21 [-]: GETGLOBAL R10 K5       ; R10 := 0x3f56a9a5
 22 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 23 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 24 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["EntryId"]
 25 [-]: GETUPVAL  R8 U2        ; R8 := U2
 26 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["PVPCHALLENGES"]
 27 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 30
 30 [-]: LOADKB    R7 1 0       ; R7 := true
 31 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 32 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0xf64b7262]
 33 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["mClipName"]
 34 [-]: LOADK     R11 K9       ; R11 := "Title"
 35 [-]: CONST     R12 36       ; R12 := 36.000000
 36 [-]: GETUPVAL  R13 U3       ; R13 := U3
 37 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["FloatingContent"]
 38 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 39 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 40 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0xf64b7262]
 41 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["mClipName"]
 42 [-]: LOADK     R11 K11      ; R11 := "Desc"
 43 [-]: CONST     R12 36       ; R12 := 36.000000
 44 [-]: GETUPVAL  R13 U3       ; R13 := U3
 45 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["Content"]
 46 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 47 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 48 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x2ce15376]
 49 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["mClipName"]
 50 [-]: LOADK     R11 K9       ; R11 := "Title"
 51 [-]: CONST     R12 1        ; R12 := 1.000000
 52 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 53 [-]: GETUPVAL  R9 U4        ; R9 := U4
 54 [-]: GETTABLE  R9 R9 K14    ; R9 := R9[0x06d055f9]
 55 [-]: GETGLOBAL R10 K1       ; R10 := 0x7b998233
 56 [-]: GETTABLE  R11 R0 K15   ; R11 := R0["DailyTask"]
 57 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 58 [-]: TEST      R10 0        ; if not R10 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: MOVE      R10 R7       ; R10 := R7
 61 [-]: JMP       64           ; PC := 64
 62 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 63
 63 [-]: LOADKB    R10 1 0      ; R10 := true
 64 [-]: CONST     R11 37       ; R11 := 37.000000
 65 [-]: CONST     R12 25       ; R12 := 25.000000
 66 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 67 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 68 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
 69 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9[0xf64b7262]
 70 [-]: GETTABLE  R11 R0 K4    ; R11 := R0["mClipName"]
 71 [-]: LOADK     R12 K11      ; R12 := "Desc"
 72 [-]: CONST     R13 1        ; R13 := 1.000000
 73 [-]: MOVE      R14 R8       ; R14 := R8
 74 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 75 [-]: GETUPVAL  R9 U4        ; R9 := U4
 76 [-]: GETTABLE  R9 R9 K14    ; R9 := R9[0x06d055f9]
 77 [-]: GETTABLE  R10 R0 K16   ; R10 := R0["mIsUnlockHint"]
 78 [-]: CONST     R11 15       ; R11 := 15.000000
 79 [-]: CONST     R12 115      ; R12 := 115.000000
 80 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 81 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
 82 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10[0xf64b7262]
 83 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
 84 [-]: LOADK     R13 K9       ; R13 := "Title"
 85 [-]: CONST     R14 0        ; R14 := 0.000000
 86 [-]: MOVE      R15 R9       ; R15 := R9
 87 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 88 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
 89 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10[0xf64b7262]
 90 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
 91 [-]: LOADK     R13 K11      ; R13 := "Desc"
 92 [-]: CONST     R14 0        ; R14 := 0.000000
 93 [-]: MOVE      R15 R9       ; R15 := R9
 94 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 95 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
 96 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10[0xf64b7262]
 97 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
 98 [-]: LOADK     R13 K17      ; R13 := "Timer"
 99 [-]: CONST     R14 36       ; R14 := 36.000000
100 [-]: GETUPVAL  R15 U3       ; R15 := U3
101 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["Content"]
102 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
103 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
104 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0xc0a3774b]
105 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
106 [-]: LOADK     R13 K17      ; R13 := "Timer"
107 [-]: CONST     R14 11       ; R14 := 11.000000
108 [-]: MOVE      R15 R7       ; R15 := R7
109 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
110 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
111 [-]: SELF      R10 R10 K3   ; R11 := R10; R10 := R10[0xd5181643]
112 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
113 [-]: LOADK     R13 K19      ; R13 := ".Progress.Fill"
114 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
115 [-]: GETGLOBAL R13 K20      ; R13 := 0xe3d94630
116 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
117 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
118 [-]: SELF      R10 R10 K3   ; R11 := R10; R10 := R10[0xd5181643]
119 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
120 [-]: LOADK     R13 K21      ; R13 := ".Progress.Bg"
121 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
122 [-]: GETGLOBAL R13 K20      ; R13 := 0xe3d94630
123 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
124 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
125 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0x91e13703]
126 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
127 [-]: LOADK     R13 K19      ; R13 := ".Progress.Fill"
128 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
129 [-]: LOADK     R13 K23      ; R13 := "RectInnerColor"
130 [-]: GETUPVAL  R14 U3       ; R14 := U3
131 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["FloatingContentObject"]
132 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["r"]
133 [-]: GETUPVAL  R15 U3       ; R15 := U3
134 [-]: GETTABLE  R15 R15 K24  ; R15 := R15["FloatingContentObject"]
135 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["g"]
136 [-]: GETUPVAL  R16 U3       ; R16 := U3
137 [-]: GETTABLE  R16 R16 K24  ; R16 := R16["FloatingContentObject"]
138 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["b"]
139 [-]: CONST     R17 1        ; R17 := 1.000000
140 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
141 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
142 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0x91e13703]
143 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
144 [-]: LOADK     R13 K19      ; R13 := ".Progress.Fill"
145 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
146 [-]: LOADK     R13 K28      ; R13 := "RectEdgeColor"
147 [-]: CONST     R14 0        ; R14 := 0.000000
148 [-]: CONST     R15 0        ; R15 := 0.000000
149 [-]: CONST     R16 0        ; R16 := 0.000000
150 [-]: CONST     R17 0        ; R17 := 0.000000
151 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
152 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
153 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0x91e13703]
154 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
155 [-]: LOADK     R13 K21      ; R13 := ".Progress.Bg"
156 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
157 [-]: LOADK     R13 K23      ; R13 := "RectInnerColor"
158 [-]: GETUPVAL  R14 U3       ; R14 := U3
159 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["Background1Object"]
160 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["r"]
161 [-]: GETUPVAL  R15 U3       ; R15 := U3
162 [-]: GETTABLE  R15 R15 K29  ; R15 := R15["Background1Object"]
163 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["g"]
164 [-]: GETUPVAL  R16 U3       ; R16 := U3
165 [-]: GETTABLE  R16 R16 K29  ; R16 := R16["Background1Object"]
166 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["b"]
167 [-]: CONST     R17 1        ; R17 := 1.000000
168 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
169 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
170 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0x91e13703]
171 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mClipName"]
172 [-]: LOADK     R13 K21      ; R13 := ".Progress.Bg"
173 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
174 [-]: LOADK     R13 K28      ; R13 := "RectEdgeColor"
175 [-]: GETUPVAL  R14 U3       ; R14 := U3
176 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["FloatingContentObject"]
177 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["r"]
178 [-]: GETUPVAL  R15 U3       ; R15 := U3
179 [-]: GETTABLE  R15 R15 K24  ; R15 := R15["FloatingContentObject"]
180 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["g"]
181 [-]: GETUPVAL  R16 U3       ; R16 := U3
182 [-]: GETTABLE  R16 R16 K24  ; R16 := R16["FloatingContentObject"]
183 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["b"]
184 [-]: CONST     R17 1        ; R17 := 1.000000
185 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
186 [-]: CONST     R10 350      ; R10 := 350.000000
187 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
188 [-]: SELF      R11 R11 K8   ; R12 := R11; R11 := R11[0xf64b7262]
189 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["mClipName"]
190 [-]: LOADK     R14 K30      ; R14 := "Progress.Fill"
191 [-]: CONST     R15 12       ; R15 := 12.000000
192 [-]: MOVE      R16 R10      ; R16 := R10
193 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
194 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
195 [-]: SELF      R11 R11 K8   ; R12 := R11; R11 := R11[0xf64b7262]
196 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["mClipName"]
197 [-]: LOADK     R14 K31      ; R14 := "Progress.Bg"
198 [-]: CONST     R15 12       ; R15 := 12.000000
199 [-]: MOVE      R16 R10      ; R16 := R10
200 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
201 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
202 [-]: SELF      R11 R11 K8   ; R12 := R11; R11 := R11[0xf64b7262]
203 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["mClipName"]
204 [-]: LOADK     R14 K32      ; R14 := "FactionIcon"
205 [-]: CONST     R15 10       ; R15 := 10.000000
206 [-]: GETUPVAL  R16 U4       ; R16 := U4
207 [-]: GETTABLE  R16 R16 K14  ; R16 := R16[0x06d055f9]
208 [-]: GETGLOBAL R17 K1       ; R17 := 0x7b998233
209 [-]: GETTABLE  R18 R0 K15   ; R18 := R0["DailyTask"]
210 [-]: CALL      R17 2 2      ; R17 := R17(R18)
211 [-]: NOT       R17 R17      ; R17 :=  R17
212 [-]: CONST     R18 100      ; R18 := 100.000000
213 [-]: CONST     R19 50       ; R19 := 50.000000
214 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
215 [-]: CALL      R11 0 1      ; R11(R12,...)
216 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
217 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11[0xc0a3774b]
218 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["mClipName"]
219 [-]: LOADK     R14 K32      ; R14 := "FactionIcon"
220 [-]: CONST     R15 11       ; R15 := 11.000000
221 [-]: LOADKB    R16 0 0      ; R16 := false
222 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
223 [-]: TESTSET   R11 R7 1     ; if R7 then PC := 242 else R11 := R7
224 [-]: JMP       242          ; PC := 242
225 [-]: GETGLOBAL R11 K1       ; R11 := 0x7b998233
226 [-]: GETTABLE  R12 R0 K33   ; R12 := R0["mIcon"]
227 [-]: CALL      R11 2 2      ; R11 := R11(R12)
228 [-]: TEST      R11 1        ; if R11 then PC := 240
229 [-]: JMP       240          ; PC := 240
230 [-]: GETGLOBAL R11 K1       ; R11 := 0x7b998233
231 [-]: GETTABLE  R12 R0 K34   ; R12 := R0["mLogoColor"]
232 [-]: CALL      R11 2 2      ; R11 := R11(R12)
233 [-]: TEST      R11 1        ; if R11 then PC := 240
234 [-]: JMP       240          ; PC := 240
235 [-]: GETGLOBAL R11 K1       ; R11 := 0x7b998233
236 [-]: GETTABLE  R12 R0 K35   ; R12 := R0["mBgColor"]
237 [-]: CALL      R11 2 2      ; R11 := R11(R12)
238 [-]: NOT       R11 R11      ; R11 :=  R11
239 [-]: JMP       242          ; PC := 242
240 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 241
241 [-]: LOADKB    R11 1 0      ; R11 := true
242 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
243 [-]: SELF      R12 R12 K18  ; R13 := R12; R12 := R12[0xc0a3774b]
244 [-]: GETTABLE  R14 R0 K4    ; R14 := R0["mClipName"]
245 [-]: LOADK     R15 K36      ; R15 := "Image"
246 [-]: CONST     R16 11       ; R16 := 11.000000
247 [-]: MOVE      R17 R11      ; R17 := R11
248 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
249 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
250 [-]: SELF      R12 R12 K18  ; R13 := R12; R12 := R12[0xc0a3774b]
251 [-]: GETTABLE  R14 R0 K4    ; R14 := R0["mClipName"]
252 [-]: LOADK     R15 K37      ; R15 := "MediumLogo"
253 [-]: CONST     R16 11       ; R16 := 11.000000
254 [-]: MOVE      R17 R11      ; R17 := R11
255 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
256 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
257 [-]: SELF      R12 R12 K18  ; R13 := R12; R12 := R12[0xc0a3774b]
258 [-]: GETTABLE  R14 R0 K4    ; R14 := R0["mClipName"]
259 [-]: LOADK     R15 K38      ; R15 := "Bg"
260 [-]: CONST     R16 11       ; R16 := 11.000000
261 [-]: MOVE      R17 R11      ; R17 := R11
262 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
263 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
264 [-]: SELF      R12 R12 K18  ; R13 := R12; R12 := R12[0xc0a3774b]
265 [-]: GETTABLE  R14 R0 K4    ; R14 := R0["mClipName"]
266 [-]: LOADK     R15 K39      ; R15 := "LogoHighlight"
267 [-]: CONST     R16 11       ; R16 := 11.000000
268 [-]: TESTSET   R17 R11 0    ; if not R11 then PC := 271 else R17 := R11
269 [-]: JMP       271          ; PC := 271
270 [-]: NOT       R17 R7       ; R17 :=  R7
271 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
272 [-]: TEST      R11 0        ; if not R11 then PC := 417
273 [-]: JMP       417          ; PC := 417
274 [-]: GETTABLE  R12 R0 K33   ; R12 := R0["mIcon"]
275 [-]: GETUPVAL  R13 U3       ; R13 := U3
276 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["FloatingContent"]
277 [-]: CONST     R14 0        ; R14 := 0.000000
278 [-]: GETGLOBAL R15 K40      ; R15 := 0x0032441c
279 [-]: GETTABLE  R15 R15 K41  ; R15 := R15["UIColor_White"]
280 [-]: TEST      R7 0         ; if not R7 then PC := 295
281 [-]: JMP       295          ; PC := 295
282 [-]: GETTABLE  R16 R0 K42   ; R16 := R0["challengeInstance"]
283 [-]: GETTABLE  R16 R16 K43  ; R16 := R16["mCategory"]
284 [-]: EQ        0 R16 K45    ; if R16 ~= 1.000000 then PC := 289
285 [-]: JMP       289          ; PC := 289
286 [-]: GETGLOBAL R16 K40      ; R16 := 0x0032441c
287 [-]: GETTABLE  R12 R16 K46  ; R12 := R16["UITexture_PvpWeeklyChallenges"]
288 [-]: JMP       307          ; PC := 307
289 [-]: GETGLOBAL R16 K40      ; R16 := 0x0032441c
290 [-]: GETTABLE  R16 R16 K47  ; R16 := R16["UITextures_pvpGameModesTextures"]
291 [-]: GETTABLE  R17 R0 K42   ; R17 := R0["challengeInstance"]
292 [-]: GETTABLE  R17 R17 K48  ; R17 := R17["mPVPMode"]
293 [-]: GETTABLE  R12 R16 R17  ; R12 := R16[R17]
294 [-]: JMP       307          ; PC := 307
295 [-]: GETTABLE  R16 R0 K34   ; R16 := R0["mLogoColor"]
296 [-]: SELF      R16 R16 K49  ; R17 := R16; R16 := R16[0xa5d5c8f6]
297 [-]: CALL      R16 2 2      ; R16 := R16(R17)
298 [-]: MOVE      R13 R16      ; R13 := R16
299 [-]: GETTABLE  R16 R0 K35   ; R16 := R0["mBgColor"]
300 [-]: GETTABLE  R16 R16 K50  ; R16 := R16["alpha"]
301 [-]: DIV       R16 R16 K51  ; R16 := R16 / 255.000000
302 [-]: MUL       R14 R16 K52  ; R14 := R16 * 100.000000
303 [-]: GETTABLE  R16 R0 K35   ; R16 := R0["mBgColor"]
304 [-]: SELF      R16 R16 K49  ; R17 := R16; R16 := R16[0xa5d5c8f6]
305 [-]: CALL      R16 2 2      ; R16 := R16(R17)
306 [-]: MOVE      R15 R16      ; R15 := R16
307 [-]: GETGLOBAL R16 K2       ; R16 := 0xae91e43b
308 [-]: SELF      R16 R16 K53  ; R17 := R16; R16 := R16[0x1cb415c1]
309 [-]: GETTABLE  R18 R0 K4    ; R18 := R0["mClipName"]
310 [-]: LOADK     R19 K54      ; R19 := ".Image"
311 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
312 [-]: MOVE      R19 R12      ; R19 := R12
313 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
314 [-]: GETGLOBAL R16 K2       ; R16 := 0xae91e43b
315 [-]: SELF      R16 R16 K8   ; R17 := R16; R16 := R16[0xf64b7262]
316 [-]: GETTABLE  R18 R0 K4    ; R18 := R0["mClipName"]
317 [-]: LOADK     R19 K36      ; R19 := "Image"
318 [-]: CONST     R20 9        ; R20 := 9.000000
319 [-]: MOVE      R21 R13      ; R21 := R13
320 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
321 [-]: CONST     R16 150      ; R16 := 150.000000
322 [-]: CONST     R17 102      ; R17 := 102.000000
323 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
324 [-]: SELF      R18 R18 K8   ; R19 := R18; R18 := R18[0xf64b7262]
325 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
326 [-]: LOADK     R21 K37      ; R21 := "MediumLogo"
327 [-]: CONST     R22 12       ; R22 := 12.000000
328 [-]: CONST     R23 150      ; R23 := 150.000000
329 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
330 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
331 [-]: SELF      R18 R18 K8   ; R19 := R18; R18 := R18[0xf64b7262]
332 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
333 [-]: LOADK     R21 K37      ; R21 := "MediumLogo"
334 [-]: CONST     R22 13       ; R22 := 13.000000
335 [-]: CONST     R23 150      ; R23 := 150.000000
336 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
337 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
338 [-]: SELF      R18 R18 K55  ; R19 := R18; R18 := R18[0xef99134f]
339 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
340 [-]: LOADK     R21 K56      ; R21 := ".MediumLogo"
341 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
342 [-]: MOVE      R21 R12      ; R21 := R12
343 [-]: GETGLOBAL R22 K57      ; R22 := 0x1e64747e
344 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
345 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
346 [-]: SELF      R18 R18 K8   ; R19 := R18; R18 := R18[0xf64b7262]
347 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
348 [-]: LOADK     R21 K37      ; R21 := "MediumLogo"
349 [-]: CONST     R22 10       ; R22 := 10.000000
350 [-]: CONST     R23 5        ; R23 := 5.000000
351 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
352 [-]: CONST     R18 1        ; R18 := 1.000000
353 [-]: CONST     R19 0        ; R19 := 0.000000
354 [-]: MUL       R20 R17 K58  ; R20 := R17 * 1.070000
355 [-]: DIV       R21 R20 R16  ; R21 := R20 / R16
356 [-]: DIV       R18 K45 R21  ; R18 := 1.000000 / R21
357 [-]: SUB       R21 R18 K45  ; R21 := R18 - 1.000000
358 [-]: DIV       R21 R21 K59  ; R21 := R21 / 2.000000
359 [-]: UNM       R19 R21      ; R19 :=  R21
360 [-]: MUL       R21 R17 K58  ; R21 := R17 * 1.070000
361 [-]: DIV       R22 R21 R16  ; R22 := R21 / R16
362 [-]: DIV       R22 K45 R22  ; R22 := 1.000000 / R22
363 [-]: SUB       R23 R22 K45  ; R23 := R22 - 1.000000
364 [-]: DIV       R23 R23 K59  ; R23 := R23 / 2.000000
365 [-]: UNM       R23 R23      ; R23 :=  R23
366 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
367 [-]: SELF      R24 R24 K22  ; R25 := R24; R24 := R24[0x91e13703]
368 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
369 [-]: LOADK     R27 K56      ; R27 := ".MediumLogo"
370 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
371 [-]: LOADK     R27 K60      ; R27 := "MaskScale"
372 [-]: MOVE      R28 R22      ; R28 := R22
373 [-]: MOVE      R29 R18      ; R29 := R18
374 [-]: CONST     R30 0        ; R30 := 0.000000
375 [-]: CONST     R31 0        ; R31 := 0.000000
376 [-]: CALL      R24 8 1      ; R24(R25,R26,R27,R28,R29,R30,R31)
377 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
378 [-]: SELF      R24 R24 K22  ; R25 := R24; R24 := R24[0x91e13703]
379 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
380 [-]: LOADK     R27 K56      ; R27 := ".MediumLogo"
381 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
382 [-]: LOADK     R27 K61      ; R27 := "MaskOffset"
383 [-]: MOVE      R28 R23      ; R28 := R23
384 [-]: MOVE      R29 R19      ; R29 := R19
385 [-]: CONST     R30 0        ; R30 := 0.000000
386 [-]: CONST     R31 0        ; R31 := 0.000000
387 [-]: CALL      R24 8 1      ; R24(R25,R26,R27,R28,R29,R30,R31)
388 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
389 [-]: SELF      R24 R24 K8   ; R25 := R24; R24 := R24[0xf64b7262]
390 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
391 [-]: LOADK     R27 K39      ; R27 := "LogoHighlight"
392 [-]: CONST     R28 9        ; R28 := 9.000000
393 [-]: GETGLOBAL R29 K40      ; R29 := 0x0032441c
394 [-]: GETTABLE  R29 R29 K62  ; R29 := R29["UIColor_Black"]
395 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
396 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
397 [-]: SELF      R24 R24 K8   ; R25 := R24; R24 := R24[0xf64b7262]
398 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
399 [-]: LOADK     R27 K39      ; R27 := "LogoHighlight"
400 [-]: CONST     R28 10       ; R28 := 10.000000
401 [-]: CONST     R29 40       ; R29 := 40.000000
402 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
403 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
404 [-]: SELF      R24 R24 K8   ; R25 := R24; R24 := R24[0xf64b7262]
405 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
406 [-]: LOADK     R27 K38      ; R27 := "Bg"
407 [-]: CONST     R28 10       ; R28 := 10.000000
408 [-]: MOVE      R29 R14      ; R29 := R14
409 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
410 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
411 [-]: SELF      R24 R24 K8   ; R25 := R24; R24 := R24[0xf64b7262]
412 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
413 [-]: LOADK     R27 K38      ; R27 := "Bg"
414 [-]: CONST     R28 9        ; R28 := 9.000000
415 [-]: MOVE      R29 R15      ; R29 := R15
416 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
417 [-]: GETTABLE  R24 R0 K16   ; R24 := R0["mIsUnlockHint"]
418 [-]: TEST      R24 0        ; if not R24 then PC := 456
419 [-]: JMP       456          ; PC := 456
420 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
421 [-]: SELF      R24 R24 K63  ; R25 := R24; R24 := R24[0x20b98db3]
422 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
423 [-]: LOADK     R27 K64      ; R27 := ".Title.text"
424 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
425 [-]: LOADK     R27 K65      ; R27 := "/Lotus/Language/Syndicates/Syndicate_WorldStateLockedTitle"
426 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
427 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
428 [-]: SELF      R24 R24 K63  ; R25 := R24; R24 := R24[0x20b98db3]
429 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
430 [-]: LOADK     R27 K66      ; R27 := ".Desc.text"
431 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
432 [-]: LOADK     R27 K67      ; R27 := "/Lotus/Language/Syndicates/Syndicate_WorldStateLockedHint"
433 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
434 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
435 [-]: SELF      R24 R24 K63  ; R25 := R24; R24 := R24[0x20b98db3]
436 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
437 [-]: LOADK     R27 K68      ; R27 := ".Reward.text"
438 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
439 [-]: LOADK     R27 K69      ; R27 := ""
440 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
441 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
442 [-]: SELF      R24 R24 K18  ; R25 := R24; R24 := R24[0xc0a3774b]
443 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
444 [-]: LOADK     R27 K70      ; R27 := "Progress"
445 [-]: CONST     R28 11       ; R28 := 11.000000
446 [-]: LOADKB    R29 0 0      ; R29 := false
447 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
448 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
449 [-]: SELF      R24 R24 K18  ; R25 := R24; R24 := R24[0xc0a3774b]
450 [-]: GETTABLE  R26 R0 K4    ; R26 := R0["mClipName"]
451 [-]: LOADK     R27 K17      ; R27 := "Timer"
452 [-]: CONST     R28 11       ; R28 := 11.000000
453 [-]: LOADKB    R29 0 0      ; R29 := false
454 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
455 [-]: RETURN    R0 1         ; return 
456 [-]: GETUPVAL  R24 U4       ; R24 := U4
457 [-]: GETTABLE  R24 R24 K14  ; R24 := R24[0x06d055f9]
458 [-]: GETGLOBAL R25 K1       ; R25 := 0x7b998233
459 [-]: GETTABLE  R26 R0 K15   ; R26 := R0["DailyTask"]
460 [-]: CALL      R25 2 2      ; R25 := R25(R26)
461 [-]: NOT       R25 R25      ; R25 :=  R25
462 [-]: CONST     R26 102      ; R26 := 102.000000
463 [-]: CONST     R27 67       ; R27 := 67.000000
464 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
465 [-]: GETUPVAL  R25 U4       ; R25 := U4
466 [-]: GETTABLE  R25 R25 K14  ; R25 := R25[0x06d055f9]
467 [-]: GETGLOBAL R26 K1       ; R26 := 0x7b998233
468 [-]: GETTABLE  R27 R0 K15   ; R27 := R0["DailyTask"]
469 [-]: CALL      R26 2 2      ; R26 := R26(R27)
470 [-]: NOT       R26 R26      ; R26 :=  R26
471 [-]: CONST     R27 10       ; R27 := 10.000000
472 [-]: CONST     R28 0        ; R28 := 0.000000
473 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
474 [-]: SUB       R25 K71 R25  ; R25 := 536.000000 - R25
475 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
476 [-]: SELF      R26 R26 K8   ; R27 := R26; R26 := R26[0xf64b7262]
477 [-]: GETTABLE  R28 R0 K4    ; R28 := R0["mClipName"]
478 [-]: LOADK     R29 K32      ; R29 := "FactionIcon"
479 [-]: CONST     R30 12       ; R30 := 12.000000
480 [-]: MOVE      R31 R24      ; R31 := R24
481 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
482 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
483 [-]: SELF      R26 R26 K8   ; R27 := R26; R26 := R26[0xf64b7262]
484 [-]: GETTABLE  R28 R0 K4    ; R28 := R0["mClipName"]
485 [-]: LOADK     R29 K32      ; R29 := "FactionIcon"
486 [-]: CONST     R30 13       ; R30 := 13.000000
487 [-]: MOVE      R31 R24      ; R31 := R24
488 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
489 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
490 [-]: SELF      R26 R26 K8   ; R27 := R26; R26 := R26[0xf64b7262]
491 [-]: GETTABLE  R28 R0 K4    ; R28 := R0["mClipName"]
492 [-]: LOADK     R29 K32      ; R29 := "FactionIcon"
493 [-]: CONST     R30 0        ; R30 := 0.000000
494 [-]: MOVE      R31 R25      ; R31 := R25
495 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
496 [-]: GETGLOBAL R26 K1       ; R26 := 0x7b998233
497 [-]: GETTABLE  R27 R0 K15   ; R27 := R0["DailyTask"]
498 [-]: CALL      R26 2 2      ; R26 := R26(R27)
499 [-]: TEST      R26 1        ; if R26 then PC := 597
500 [-]: JMP       597          ; PC := 597
501 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
502 [-]: SELF      R26 R26 K63  ; R27 := R26; R26 := R26[0x20b98db3]
503 [-]: GETTABLE  R28 R0 K4    ; R28 := R0["mClipName"]
504 [-]: LOADK     R29 K64      ; R29 := ".Title.text"
505 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
506 [-]: LOADK     R29 K72      ; R29 := "/Lotus/Language/Syndicates/DailySimarisTaskTitle"
507 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
508 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
509 [-]: SELF      R26 R26 K73  ; R27 := R26; R26 := R26[0x42b04007]
510 [-]: LOADK     R28 K74      ; R28 := "/Lotus/Language/Syndicates/DailySimarisTaskProgress"
511 [-]: LOADKB    R29 0 0      ; R29 := false
512 [-]: NEWTABLE  R30 0 2      ; R30 := {}
513 [-]: GETGLOBAL R31 K76      ; R31 := 0x64fb1586
514 [-]: GETTABLE  R32 R0 K15   ; R32 := R0["DailyTask"]
515 [-]: GETTABLE  R32 R32 K77  ; R32 := R32["mScans"]
516 [-]: CALL      R31 2 2      ; R31 := R31(R32)
517 [-]: SETTABLE  R30 K75 R31  ; R30["CURR"] := R31
518 [-]: GETGLOBAL R31 K76      ; R31 := 0x64fb1586
519 [-]: GETTABLE  R32 R0 K15   ; R32 := R0["DailyTask"]
520 [-]: GETTABLE  R32 R32 K79  ; R32 := R32["mScansRequired"]
521 [-]: CALL      R31 2 2      ; R31 := R31(R32)
522 [-]: SETTABLE  R30 K78 R31  ; R30["TOTAL"] := R31
523 [-]: CALL      R26 5 2      ; R26 := R26(R27,R28,R29,R30)
524 [-]: LOADK     R27 K80      ; R27 := "\r\n"
525 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
526 [-]: GETTABLE  R27 R0 K15   ; R27 := R0["DailyTask"]
527 [-]: GETTABLE  R27 R27 K79  ; R27 := R27["mScansRequired"]
528 [-]: GETTABLE  R28 R0 K15   ; R28 := R0["DailyTask"]
529 [-]: GETTABLE  R28 R28 K77  ; R28 := R28["mScans"]
530 [-]: LE        0 R27 R28    ; if R27 > R28 then PC := 540
531 [-]: JMP       540          ; PC := 540
532 [-]: MOVE      R27 R26      ; R27 := R26
533 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
534 [-]: SELF      R28 R28 K73  ; R29 := R28; R28 := R28[0x42b04007]
535 [-]: LOADK     R30 K81      ; R30 := "/Lotus/Language/Syndicates/DailySimarisTaskDoneDesc"
536 [-]: LOADKB    R31 0 0      ; R31 := false
537 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
538 [-]: CONCAT    R26 R27 R28  ; R26 := R27 .. R28
539 [-]: JMP       550          ; PC := 550
540 [-]: MOVE      R27 R26      ; R27 := R26
541 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
542 [-]: SELF      R28 R28 K73  ; R29 := R28; R28 := R28[0x42b04007]
543 [-]: GETTABLE  R30 R0 K15   ; R30 := R0["DailyTask"]
544 [-]: GETTABLE  R30 R30 K82  ; R30 := R30["mEnemyLocTag"]
545 [-]: SELF      R30 R30 K83  ; R31 := R30; R30 := R30[0x6d604ba7]
546 [-]: CALL      R30 2 2      ; R30 := R30(R31)
547 [-]: LOADKB    R31 0 0      ; R31 := false
548 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
549 [-]: CONCAT    R26 R27 R28  ; R26 := R27 .. R28
550 [-]: GETGLOBAL R27 K2       ; R27 := 0xae91e43b
551 [-]: SELF      R27 R27 K84  ; R28 := R27; R27 := R27[0xe261aa96]
552 [-]: GETTABLE  R29 R0 K4    ; R29 := R0["mClipName"]
553 [-]: LOADK     R30 K11      ; R30 := "Desc"
554 [-]: CONST     R31 29       ; R31 := 29.000000
555 [-]: MOVE      R32 R26      ; R32 := R26
556 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
557 [-]: GETTABLE  R27 R0 K15   ; R27 := R0["DailyTask"]
558 [-]: GETTABLE  R27 R27 K77  ; R27 := R27["mScans"]
559 [-]: GETTABLE  R28 R0 K15   ; R28 := R0["DailyTask"]
560 [-]: GETTABLE  R28 R28 K79  ; R28 := R28["mScansRequired"]
561 [-]: DIV       R27 R27 R28  ; R27 := R27 / R28
562 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
563 [-]: SELF      R28 R28 K8   ; R29 := R28; R28 := R28[0xf64b7262]
564 [-]: GETTABLE  R30 R0 K4    ; R30 := R0["mClipName"]
565 [-]: LOADK     R31 K30      ; R31 := "Progress.Fill"
566 [-]: CONST     R32 12       ; R32 := 12.000000
567 [-]: GETGLOBAL R33 K85      ; R33 := 0x42dcc9f5
568 [-]: MUL       R34 R10 R27  ; R34 := R10 * R27
569 [-]: LOADK     R35 K86      ; R35 := 0.001000
570 [-]: MOVE      R36 R10      ; R36 := R10
571 [-]: CALL      R33 4 0      ; R33,... := R33(R34,R35,R36)
572 [-]: CALL      R28 0 1      ; R28(R29,...)
573 [-]: GETTABLE  R28 R0 K87   ; R28 := R0["EnemyIcon"]
574 [-]: EQ        1 R28 K88    ; if R28 == nil then PC := 586
575 [-]: JMP       586          ; PC := 586
576 [-]: GETGLOBAL R28 K2       ; R28 := 0xae91e43b
577 [-]: SELF      R28 R28 K53  ; R29 := R28; R28 := R28[0x1cb415c1]
578 [-]: GETTABLE  R30 R0 K4    ; R30 := R0["mClipName"]
579 [-]: LOADK     R31 K89      ; R31 := ".FactionIcon"
580 [-]: CONCAT    R30 R30 R31  ; R30 := R30 .. R31
581 [-]: GETGLOBAL R31 K90      ; R31 := 0xb009bbc6
582 [-]: GETTABLE  R32 R0 K87   ; R32 := R0["EnemyIcon"]
583 [-]: CALL      R31 2 0      ; R31,... := R31(R32)
584 [-]: CALL      R28 0 1      ; R28(R29,...)
585 [-]: JMP       595          ; PC := 595
586 [-]: GETUPVAL  R28 U5       ; R28 := U5
587 [-]: SELF      R28 R28 K91  ; R29 := R28; R28 := R28[0x39f637e6]
588 [-]: GETTABLE  R30 R0 K15   ; R30 := R0["DailyTask"]
589 [-]: GETTABLE  R30 R30 K92  ; R30 := R30["mEnemyIcon"]
590 [-]: SELF      R30 R30 K93  ; R31 := R30; R30 := R30[0xed4e0128]
591 [-]: CALL      R30 2 2      ; R30 := R30(R31)
592 [-]: CLOSURE   R31 0        ; R31 := closure(Function #30.1)
593 [-]: MOVE      R0 R0        ; R0 := R0
594 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
595 [-]: RETURN    R0 1         ; return 
596 [-]: JMP       712          ; PC := 712
597 [-]: TEST      R7 0         ; if not R7 then PC := 712
598 [-]: JMP       712          ; PC := 712
599 [-]: GETTABLE  R28 R0 K42   ; R28 := R0["challengeInstance"]
600 [-]: SELF      R28 R28 K94  ; R29 := R28; R28 := R28[0xbd8c4ee7]
601 [-]: GETGLOBAL R30 K76      ; R30 := 0x64fb1586
602 [-]: GETTABLE  R31 R0 K95   ; R31 := R0["mTitleName"]
603 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
604 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
605 [-]: GETGLOBAL R29 K2       ; R29 := 0xae91e43b
606 [-]: SELF      R29 R29 K84  ; R30 := R29; R29 := R29[0xe261aa96]
607 [-]: GETTABLE  R31 R0 K4    ; R31 := R0["mClipName"]
608 [-]: LOADK     R32 K9       ; R32 := "Title"
609 [-]: CONST     R33 29       ; R33 := 29.000000
610 [-]: MOVE      R34 R28      ; R34 := R28
611 [-]: CALL      R29 6 1      ; R29(R30,R31,R32,R33,R34)
612 [-]: GETTABLE  R29 R0 K42   ; R29 := R0["challengeInstance"]
613 [-]: SELF      R29 R29 K94  ; R30 := R29; R29 := R29[0xbd8c4ee7]
614 [-]: GETGLOBAL R31 K76      ; R31 := 0x64fb1586
615 [-]: GETTABLE  R32 R0 K96   ; R32 := R0["challengeType"]
616 [-]: GETTABLE  R32 R32 K97  ; R32 := R32["mLocDescription"]
617 [-]: CALL      R31 2 0      ; R31,... := R31(R32)
618 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
619 [-]: GETTABLE  R30 R0 K98   ; R30 := R0["sectionID"]
620 [-]: GETUPVAL  R31 U6       ; R31 := U6
621 [-]: GETTABLE  R31 R31 K99  ; R31 := R31["PVPCHALLENGES_WEEKLY"]
622 [-]: EQ        1 R30 R31    ; if R30 == R31 then PC := 643
623 [-]: JMP       643          ; PC := 643
624 [-]: GETTABLE  R30 R0 K42   ; R30 := R0["challengeInstance"]
625 [-]: SELF      R30 R30 K100 ; R31 := R30; R30 := R30[0xad30423b]
626 [-]: GETTABLE  R32 R0 K96   ; R32 := R0["challengeType"]
627 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
628 [-]: MOVE      R31 R29      ; R31 := R29
629 [-]: LOADK     R32 K80      ; R32 := "\r\n"
630 [-]: GETGLOBAL R33 K101     ; R33 := 0x603636ad
631 [-]: LOADK     R34 K102     ; R34 := "/Lotus/Language/Menu/WorldStatePanel_AlertReward"
632 [-]: NEWTABLE  R35 0 1      ; R35 := {}
633 [-]: GETGLOBAL R36 K2       ; R36 := 0xae91e43b
634 [-]: SELF      R36 R36 K73  ; R37 := R36; R36 := R36[0x42b04007]
635 [-]: LOADK     R38 K104     ; R38 := "/Lotus/Language/Menu/Syndicates_Reputation"
636 [-]: LOADKB    R39 1 0      ; R39 := true
637 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
638 [-]: MOVE      R37 R30      ; R37 := R30
639 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
640 [-]: SETTABLE  R35 K103 R36 ; R35["REWARD"] := R36
641 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
642 [-]: CONCAT    R29 R31 R33  ; R29 := R31 .. R32 .. R33
643 [-]: GETGLOBAL R31 K2       ; R31 := 0xae91e43b
644 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31[0xe261aa96]
645 [-]: GETTABLE  R33 R0 K4    ; R33 := R0["mClipName"]
646 [-]: LOADK     R34 K11      ; R34 := "Desc"
647 [-]: CONST     R35 29       ; R35 := 29.000000
648 [-]: MOVE      R36 R29      ; R36 := R29
649 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
650 [-]: CONST     R31 0        ; R31 := 0.000000
651 [-]: GETTABLE  R32 R0 K105  ; R32 := R0["challengeState"]
652 [-]: TEST      R32 0        ; if not R32 then PC := 662
653 [-]: JMP       662          ; PC := 662
654 [-]: GETTABLE  R32 R0 K96   ; R32 := R0["challengeType"]
655 [-]: GETTABLE  R32 R32 K106 ; R32 := R32["mDuringSingleMatch"]
656 [-]: TEST      R32 1        ; if R32 then PC := 662
657 [-]: JMP       662          ; PC := 662
658 [-]: GETTABLE  R32 R0 K105  ; R32 := R0["challengeState"]
659 [-]: SELF      R32 R32 K107 ; R33 := R32; R32 := R32[0x958b6075]
660 [-]: CALL      R32 2 2      ; R32 := R32(R33)
661 [-]: MOVE      R31 R32      ; R31 := R32
662 [-]: GETGLOBAL R32 K85      ; R32 := 0x42dcc9f5
663 [-]: MOVE      R33 R31      ; R33 := R31
664 [-]: CONST     R34 0        ; R34 := 0.000000
665 [-]: CONST     R35 1        ; R35 := 1.000000
666 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
667 [-]: MOVE      R31 R32      ; R31 := R32
668 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
669 [-]: SELF      R32 R32 K8   ; R33 := R32; R32 := R32[0xf64b7262]
670 [-]: GETTABLE  R34 R0 K4    ; R34 := R0["mClipName"]
671 [-]: LOADK     R35 K30      ; R35 := "Progress.Fill"
672 [-]: CONST     R36 12       ; R36 := 12.000000
673 [-]: GETGLOBAL R37 K85      ; R37 := 0x42dcc9f5
674 [-]: MUL       R38 R10 R31  ; R38 := R10 * R31
675 [-]: LOADK     R39 K86      ; R39 := 0.001000
676 [-]: MOVE      R40 R10      ; R40 := R10
677 [-]: CALL      R37 4 0      ; R37,... := R37(R38,R39,R40)
678 [-]: CALL      R32 0 1      ; R32(R33,...)
679 [-]: GETUPVAL  R32 U7       ; R32 := U7
680 [-]: GETTABLE  R33 R0 K4    ; R33 := R0["mClipName"]
681 [-]: LOADK     R34 K108     ; R34 := ".Timer"
682 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
683 [-]: MOVE      R34 R0       ; R34 := R0
684 [-]: LOADNIL   R35 R35      ; R35 := nil
685 [-]: LOADKB    R36 1 0      ; R36 := true
686 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
687 [-]: SETTABLE  R0 K109 K110 ; R0["updateTimerText"] := true
688 [-]: GETTABLE  R32 R0 K42   ; R32 := R0["challengeInstance"]
689 [-]: GETTABLE  R32 R32 K43  ; R32 := R32["mCategory"]
690 [-]: EQ        0 R32 K45    ; if R32 ~= 1.000000 then PC := 711
691 [-]: JMP       711          ; PC := 711
692 [-]: GETUPVAL  R32 U8       ; R32 := U8
693 [-]: GETTABLE  R33 R0 K42   ; R33 := R0["challengeInstance"]
694 [-]: GETTABLE  R34 R0 K105  ; R34 := R0["challengeState"]
695 [-]: LOADKB    R35 1 0      ; R35 := true
696 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
697 [-]: TEST      R32 1        ; if R32 then PC := 711
698 [-]: JMP       711          ; PC := 711
699 [-]: SETTABLE  R0 K109 K111 ; R0["updateTimerText"] := false
700 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
701 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32[0xe261aa96]
702 [-]: GETTABLE  R34 R0 K4    ; R34 := R0["mClipName"]
703 [-]: LOADK     R35 K17      ; R35 := "Timer"
704 [-]: CONST     R36 29       ; R36 := 29.000000
705 [-]: GETGLOBAL R37 K2       ; R37 := 0xae91e43b
706 [-]: SELF      R37 R37 K73  ; R38 := R37; R37 := R37[0x42b04007]
707 [-]: LOADK     R39 K112     ; R39 := "/Lotus/Language/Actions/CompleteXP"
708 [-]: LOADKB    R40 0 0      ; R40 := false
709 [-]: CALL      R37 4 0      ; R37,... := R37(R38,R39,R40)
710 [-]: CALL      R32 0 1      ; R32(R33,...)
711 [-]: RETURN    R0 1         ; return 
712 [-]: GETTABLE  R32 R0 K113  ; R32 := R0["mMissionInfo"]
713 [-]: GETTABLE  R32 R32 K114 ; R32 := R32["missionType"]
714 [-]: EQ        1 R32 K115   ; if R32 == 30.000000 then PC := 717
715 [-]: JMP       717          ; PC := 717
716 [-]: LOADKB    R32 0 1      ; R32 := false; PC := 717
717 [-]: LOADKB    R32 1 0      ; R32 := true
718 [-]: SELF      R33 R2 K116  ; R34 := R2; R33 := R2[0x3ad9ed31]
719 [-]: GETTABLE  R35 R0 K113  ; R35 := R0["mMissionInfo"]
720 [-]: GETTABLE  R35 R35 K117 ; R35 := R35["location"]
721 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
722 [-]: GETGLOBAL R34 K101     ; R34 := 0x603636ad
723 [-]: GETTABLE  R35 R33 K118 ; R35 := R33["locTag"]
724 [-]: SELF      R35 R35 K83  ; R36 := R35; R35 := R35[0x6d604ba7]
725 [-]: CALL      R35 2 2      ; R35 := R35(R36)
726 [-]: LOADNIL   R36 R36      ; R36 := nil
727 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
728 [-]: GETUPVAL  R35 U4       ; R35 := U4
729 [-]: GETTABLE  R35 R35 K14  ; R35 := R35[0x06d055f9]
730 [-]: MOVE      R36 R32      ; R36 := R32
731 [-]: LOADK     R37 K69      ; R37 := ""
732 [-]: LOADK     R38 K119     ; R38 := " ("
733 [-]: GETGLOBAL R39 K101     ; R39 := 0x603636ad
734 [-]: SELF      R40 R2 K120  ; R41 := R2; R40 := R2[0xc1dee03f]
735 [-]: CALL      R40 2 2      ; R40 := R40(R41)
736 [-]: GETTABLE  R41 R33 K121 ; R41 := R33["region"]
737 [-]: ADD       R41 R41 K45  ; R41 := R41 + 1.000000
738 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
739 [-]: GETTABLE  R40 R40 K122 ; R40 := R40["name"]
740 [-]: LOADNIL   R41 R41      ; R41 := nil
741 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
742 [-]: LOADK     R40 K123     ; R40 := ")"
743 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
744 [-]: LOADNIL   R39 R39      ; R39 := nil
745 [-]: CALL      R35 5 2      ; R35 := R35(R36,R37,R38,R39)
746 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
747 [-]: LOADK     R35 K124     ; R35 := "("
748 [-]: GETUPVAL  R36 U4       ; R36 := U4
749 [-]: GETTABLE  R36 R36 K125 ; R36 := R36[0x1142c7a8]
750 [-]: GETTABLE  R37 R0 K113  ; R37 := R0["mMissionInfo"]
751 [-]: GETTABLE  R37 R37 K126 ; R37 := R37["minEnemyLevel"]
752 [-]: CALL      R36 2 2      ; R36 := R36(R37)
753 [-]: LOADK     R37 K127     ; R37 := "-"
754 [-]: GETUPVAL  R38 U4       ; R38 := U4
755 [-]: GETTABLE  R38 R38 K125 ; R38 := R38[0x1142c7a8]
756 [-]: GETTABLE  R39 R0 K113  ; R39 := R0["mMissionInfo"]
757 [-]: GETTABLE  R39 R39 K128 ; R39 := R39["maxEnemyLevel"]
758 [-]: CALL      R38 2 2      ; R38 := R38(R39)
759 [-]: LOADK     R39 K123     ; R39 := ")"
760 [-]: CONCAT    R35 R35 R39  ; R35 := R35 .. R36 .. R37 .. R38 .. R39
761 [-]: LOADK     R36 K69      ; R36 := ""
762 [-]: GETTABLE  R37 R0 K129  ; R37 := R0["mUnlocked"]
763 [-]: TEST      R37 1        ; if R37 then PC := 773
764 [-]: JMP       773          ; PC := 773
765 [-]: LOADK     R37 K119     ; R37 := " ("
766 [-]: GETGLOBAL R38 K2       ; R38 := 0xae91e43b
767 [-]: SELF      R38 R38 K73  ; R39 := R38; R38 := R38[0x42b04007]
768 [-]: LOADK     R40 K130     ; R40 := "/Lotus/Language/Menu/MissionLocked"
769 [-]: LOADKB    R41 0 0      ; R41 := false
770 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
771 [-]: LOADK     R39 K123     ; R39 := ")"
772 [-]: CONCAT    R36 R37 R39  ; R36 := R37 .. R38 .. R39
773 [-]: GETUPVAL  R37 U0       ; R37 := U0
774 [-]: GETTABLE  R37 R37 K131 ; R37 := R37[0x8a389d5f]
775 [-]: GETTABLE  R38 R0 K113  ; R38 := R0["mMissionInfo"]
776 [-]: CALL      R37 2 2      ; R37 := R37(R38)
777 [-]: LOADK     R38 K69      ; R38 := ""
778 [-]: TEST      R32 0        ; if not R32 then PC := 789
779 [-]: JMP       789          ; PC := 789
780 [-]: GETGLOBAL R39 K101     ; R39 := 0x603636ad
781 [-]: GETGLOBAL R40 K76      ; R40 := 0x64fb1586
782 [-]: GETTABLE  R41 R0 K113  ; R41 := R0["mMissionInfo"]
783 [-]: GETTABLE  R41 R41 K132 ; R41 := R41["descText"]
784 [-]: CALL      R40 2 2      ; R40 := R40(R41)
785 [-]: LOADKB    R41 0 0      ; R41 := false
786 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
787 [-]: MOVE      R38 R39      ; R38 := R39
788 [-]: JMP       817          ; PC := 817
789 [-]: GETTABLE  R39 R0 K95   ; R39 := R0["mTitleName"]
790 [-]: TEST      R39 0        ; if not R39 then PC := 810
791 [-]: JMP       810          ; PC := 810
792 [-]: GETGLOBAL R39 K101     ; R39 := 0x603636ad
793 [-]: LOADK     R40 K133     ; R40 := "/Lotus/Language/Syndicates/WorldStateSyndicateMissionNoTitle"
794 [-]: NEWTABLE  R41 0 2      ; R41 := {}
795 [-]: GETGLOBAL R42 K101     ; R42 := 0x603636ad
796 [-]: GETTABLE  R43 R0 K95   ; R43 := R0["mTitleName"]
797 [-]: LOADKB    R44 0 0      ; R44 := false
798 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
799 [-]: SETTABLE  R41 K134 R42 ; R41["TITLE"] := R42
800 [-]: GETGLOBAL R42 K101     ; R42 := 0x603636ad
801 [-]: LOADK     R43 K136     ; R43 := "/Lotus/Language/Missions/MissionName_"
802 [-]: MOVE      R44 R37      ; R44 := R37
803 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
804 [-]: LOADKB    R44 0 0      ; R44 := false
805 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
806 [-]: SETTABLE  R41 K135 R42 ; R41["MISSION_TYPE"] := R42
807 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
808 [-]: MOVE      R38 R39      ; R38 := R39
809 [-]: JMP       817          ; PC := 817
810 [-]: GETGLOBAL R39 K101     ; R39 := 0x603636ad
811 [-]: LOADK     R40 K136     ; R40 := "/Lotus/Language/Missions/MissionName_"
812 [-]: MOVE      R41 R37      ; R41 := R37
813 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
814 [-]: LOADKB    R41 0 0      ; R41 := false
815 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
816 [-]: MOVE      R38 R39      ; R38 := R39
817 [-]: GETUPVAL  R39 U4       ; R39 := U4
818 [-]: GETTABLE  R39 R39 K14  ; R39 := R39[0x06d055f9]
819 [-]: MOVE      R40 R32      ; R40 := R32
820 [-]: GETGLOBAL R41 K137     ; R41 := 0x7f5022cf
821 [-]: GETTABLE  R41 R41 K138 ; R41 := R41[0x3f3e4d12]
822 [-]: MOVE      R42 R34      ; R42 := R34
823 [-]: CALL      R41 2 2      ; R41 := R41(R42)
824 [-]: GETGLOBAL R42 K137     ; R42 := 0x7f5022cf
825 [-]: GETTABLE  R42 R42 K138 ; R42 := R42[0x3f3e4d12]
826 [-]: MOVE      R43 R38      ; R43 := R38
827 [-]: CALL      R42 2 0      ; R42,... := R42(R43)
828 [-]: CALL      R39 0 2      ; R39 := R39(R40,...)
829 [-]: LOADK     R40 K139     ; R40 := " "
830 [-]: MOVE      R41 R35      ; R41 := R35
831 [-]: MOVE      R42 R36      ; R42 := R36
832 [-]: CONCAT    R39 R39 R42  ; R39 := R39 .. R40 .. R41 .. R42
833 [-]: GETGLOBAL R40 K2       ; R40 := 0xae91e43b
834 [-]: SELF      R40 R40 K84  ; R41 := R40; R40 := R40[0xe261aa96]
835 [-]: GETTABLE  R42 R0 K4    ; R42 := R0["mClipName"]
836 [-]: LOADK     R43 K9       ; R43 := "Title"
837 [-]: CONST     R44 29       ; R44 := 29.000000
838 [-]: MOVE      R45 R39      ; R45 := R39
839 [-]: CALL      R40 6 1      ; R40(R41,R42,R43,R44,R45)
840 [-]: MOVE      R40 R38      ; R40 := R38
841 [-]: TEST      R32 1        ; if R32 then PC := 894
842 [-]: JMP       894          ; PC := 894
843 [-]: GETUPVAL  R41 U4       ; R41 := U4
844 [-]: GETTABLE  R41 R41 K140 ; R41 := R41[0x9f57dd7d]
845 [-]: GETUPVAL  R42 U3       ; R42 := U3
846 [-]: GETTABLE  R42 R42 K12  ; R42 := R42["Content"]
847 [-]: CALL      R41 2 2      ; R41 := R41(R42)
848 [-]: GETUPVAL  R42 U4       ; R42 := U4
849 [-]: GETTABLE  R42 R42 K140 ; R42 := R42[0x9f57dd7d]
850 [-]: GETUPVAL  R43 U3       ; R43 := U3
851 [-]: GETTABLE  R43 R43 K10  ; R43 := R43["FloatingContent"]
852 [-]: CALL      R42 2 2      ; R42 := R42(R43)
853 [-]: LOADK     R43 K141     ; R43 := "<p><font color=\""
854 [-]: MOVE      R44 R41      ; R44 := R41
855 [-]: LOADK     R45 K142     ; R45 := "\">"
856 [-]: CONCAT    R40 R43 R45  ; R40 := R43 .. R44 .. R45
857 [-]: GETTABLE  R43 R0 K113  ; R43 := R0["mMissionInfo"]
858 [-]: GETTABLE  R43 R43 K143 ; R43 := R43["syndicateXP"]
859 [-]: LT        0 K144 R43   ; if 0.000000 >= R43 then PC := 875
860 [-]: JMP       875          ; PC := 875
861 [-]: MOVE      R43 R40      ; R43 := R40
862 [-]: GETGLOBAL R44 K2       ; R44 := 0xae91e43b
863 [-]: SELF      R44 R44 K73  ; R45 := R44; R44 := R44[0x42b04007]
864 [-]: LOADK     R46 K104     ; R46 := "/Lotus/Language/Menu/Syndicates_Reputation"
865 [-]: LOADKB    R47 1 0      ; R47 := true
866 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
867 [-]: LOADK     R45 K139     ; R45 := " "
868 [-]: GETUPVAL  R46 U4       ; R46 := U4
869 [-]: GETTABLE  R46 R46 K125 ; R46 := R46[0x1142c7a8]
870 [-]: GETTABLE  R47 R0 K113  ; R47 := R0["mMissionInfo"]
871 [-]: GETTABLE  R47 R47 K143 ; R47 := R47["syndicateXP"]
872 [-]: CALL      R46 2 2      ; R46 := R46(R47)
873 [-]: LOADK     R47 K145     ; R47 := "<br>"
874 [-]: CONCAT    R40 R43 R47  ; R40 := R43 .. R44 .. R45 .. R46 .. R47
875 [-]: MOVE      R43 R40      ; R43 := R40
876 [-]: MOVE      R44 R34      ; R44 := R34
877 [-]: LOADK     R45 K145     ; R45 := "<br>"
878 [-]: CONCAT    R40 R43 R45  ; R40 := R43 .. R44 .. R45
879 [-]: GETTABLE  R43 R0 K95   ; R43 := R0["mTitleName"]
880 [-]: TEST      R43 0        ; if not R43 then PC := 891
881 [-]: JMP       891          ; PC := 891
882 [-]: MOVE      R43 R40      ; R43 := R40
883 [-]: LOADK     R44 K146     ; R44 := "</font><font color=\""
884 [-]: MOVE      R45 R42      ; R45 := R42
885 [-]: LOADK     R46 K142     ; R46 := "\">"
886 [-]: GETGLOBAL R47 K101     ; R47 := 0x603636ad
887 [-]: GETTABLE  R48 R0 K95   ; R48 := R0["mTitleName"]
888 [-]: LOADKB    R49 0 0      ; R49 := false
889 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
890 [-]: CONCAT    R40 R43 R47  ; R40 := R43 .. R44 .. R45 .. R46 .. R47
891 [-]: MOVE      R43 R40      ; R43 := R40
892 [-]: LOADK     R44 K147     ; R44 := "</font></p>"
893 [-]: CONCAT    R40 R43 R44  ; R40 := R43 .. R44
894 [-]: GETGLOBAL R43 K2       ; R43 := 0xae91e43b
895 [-]: SELF      R43 R43 K84  ; R44 := R43; R43 := R43[0xe261aa96]
896 [-]: GETTABLE  R45 R0 K4    ; R45 := R0["mClipName"]
897 [-]: LOADK     R46 K11      ; R46 := "Desc"
898 [-]: CONST     R47 29       ; R47 := 29.000000
899 [-]: MOVE      R48 R40      ; R48 := R40
900 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
901 [-]: GETTABLE  R43 R0 K113  ; R43 := R0["mMissionInfo"]
902 [-]: GETTABLE  R43 R43 K148 ; R43 := R43["faction"]
903 [-]: ADD       R43 R43 K45  ; R43 := R43 + 1.000000
904 [-]: LOADNIL   R44 R44      ; R44 := nil
905 [-]: TEST      R32 0        ; if not R32 then PC := 909
906 [-]: JMP       909          ; PC := 909
907 [-]: LOADNIL   R44 R44      ; R44 := nil
908 [-]: JMP       920          ; PC := 920
909 [-]: GETTABLE  R45 R0 K129  ; R45 := R0["mUnlocked"]
910 [-]: TEST      R45 1        ; if R45 then PC := 915
911 [-]: JMP       915          ; PC := 915
912 [-]: GETGLOBAL R45 K40      ; R45 := 0x0032441c
913 [-]: GETTABLE  R44 R45 K149 ; R44 := R45["UITexture_Locked"]
914 [-]: JMP       920          ; PC := 920
915 [-]: LE        0 R43 K150   ; if R43 > 4.000000 then PC := 920
916 [-]: JMP       920          ; PC := 920
917 [-]: GETGLOBAL R45 K40      ; R45 := 0x0032441c
918 [-]: GETTABLE  R45 R45 K151 ; R45 := R45["UITextures_FactionInvasion"]
919 [-]: GETTABLE  R44 R45 R43  ; R44 := R45[R43]
920 [-]: GETGLOBAL R45 K2       ; R45 := 0xae91e43b
921 [-]: SELF      R45 R45 K18  ; R46 := R45; R45 := R45[0xc0a3774b]
922 [-]: GETTABLE  R47 R0 K4    ; R47 := R0["mClipName"]
923 [-]: LOADK     R48 K32      ; R48 := "FactionIcon"
924 [-]: CONST     R49 11       ; R49 := 11.000000
925 [-]: EQ        0 R44 K88    ; if R44 ~= nil then PC := 928
926 [-]: JMP       928          ; PC := 928
927 [-]: LOADKB    R50 0 1      ; R50 := false; PC := 928
928 [-]: LOADKB    R50 1 0      ; R50 := true
929 [-]: CALL      R45 6 1      ; R45(R46,R47,R48,R49,R50)
930 [-]: EQ        1 R44 K88    ; if R44 == nil then PC := 939
931 [-]: JMP       939          ; PC := 939
932 [-]: GETGLOBAL R45 K2       ; R45 := 0xae91e43b
933 [-]: SELF      R45 R45 K53  ; R46 := R45; R45 := R45[0x1cb415c1]
934 [-]: GETTABLE  R47 R0 K4    ; R47 := R0["mClipName"]
935 [-]: LOADK     R48 K89      ; R48 := ".FactionIcon"
936 [-]: CONCAT    R47 R47 R48  ; R47 := R47 .. R48
937 [-]: MOVE      R48 R44      ; R48 := R44
938 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
939 [-]: GETGLOBAL R45 K2       ; R45 := 0xae91e43b
940 [-]: SELF      R45 R45 K18  ; R46 := R45; R45 := R45[0xc0a3774b]
941 [-]: GETTABLE  R47 R0 K4    ; R47 := R0["mClipName"]
942 [-]: LOADK     R48 K70      ; R48 := "Progress"
943 [-]: CONST     R49 11       ; R49 := 11.000000
944 [-]: LOADKB    R50 0 0      ; R50 := false
945 [-]: CALL      R45 6 1      ; R45(R46,R47,R48,R49,R50)
946 [-]: RETURN    R0 1         ; return 


; Function #30.1:
;
; Name:            
; Defined at line: 2075
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 31
  5 [-]: JMP       31           ; PC := 31
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SETTABLE  R1 K1 R0     ; R1["EnemyIcon"] := R0
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mClipName"]
 10 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 31
 11 [-]: JMP       31           ; PC := 31
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 13 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xc0a3774b]
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mClipName"]
 16 [-]: LOADK     R4 K6        ; R4 := "FactionIcon"
 17 [-]: CONST     R5 11        ; R5 := 11.000000
 18 [-]: LOADKB    R6 1 0       ; R6 := true
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x1cb415c1]
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mClipName"]
 24 [-]: LOADK     R4 K8        ; R4 := ".FactionIcon"
 25 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 26 [-]: GETGLOBAL R4 K9        ; R4 := 0xb009bbc6
 27 [-]: GETUPVAL  R5 U0        ; R5 := U0
 28 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["EnemyIcon"]
 29 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 30 [-]: CALL      R1 0 1       ; R1(R2,...)
 31 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 2172
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mMissionNumber"]
  2 [-]: LT        1 K1 R2      ; if 1.000000 < R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 5
  5 [-]: LOADKB    R2 1 0       ; R2 := true
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  7 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xc0a3774b]
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: LOADK     R6 K4        ; R6 := "StepLine"
 10 [-]: CONST     R7 11        ; R7 := 11.000000
 11 [-]: MOVE      R8 R2        ; R8 := R2
 12 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 89
 14 [-]: JMP       89           ; PC := 89
 15 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["EntryId"]
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["LITE_SORTIE"]
 18 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 21
 21 [-]: LOADKB    R3 1 0       ; R3 := true
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x5465f8f3]
 24 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["mIndex"]
 25 [-]: SUB       R6 R6 K1     ; R6 := R6 - 1.000000
 26 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 27 [-]: GETGLOBAL R5 K9        ; R5 := 0x7b998233
 28 [-]: MOVE      R6 R4        ; R6 := R4
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: TEST      R5 1         ; if R5 then PC := 89
 31 [-]: JMP       89           ; PC := 89
 32 [-]: GETTABLE  R5 R4 K10    ; R5 := R4["TotalHeight"]
 33 [-]: EQ        1 R5 K11     ; if R5 == nil then PC := 89
 34 [-]: JMP       89           ; PC := 89
 35 [-]: GETTABLE  R5 R4 K10    ; R5 := R4["TotalHeight"]
 36 [-]: GETUPVAL  R6 U2        ; R6 := U2
 37 [-]: GETTABLE  R6 R6 K12    ; R6 := R6[0x06d055f9]
 38 [-]: MOVE      R7 R3        ; R7 := R3
 39 [-]: CONST     R8 67        ; R8 := 67.000000
 40 [-]: CONST     R9 108       ; R9 := 108.000000
 41 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 42 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 43 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 44 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xf64b7262]
 45 [-]: MOVE      R8 R1        ; R8 := R1
 46 [-]: LOADK     R9 K14       ; R9 := "StepLine.Fill"
 47 [-]: CONST     R10 13       ; R10 := 13.000000
 48 [-]: MOVE      R11 R5       ; R11 := R5
 49 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 50 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 51 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xf64b7262]
 52 [-]: MOVE      R8 R1        ; R8 := R1
 53 [-]: LOADK     R9 K14       ; R9 := "StepLine.Fill"
 54 [-]: CONST     R10 1        ; R10 := 1.000000
 55 [-]: GETUPVAL  R11 U2       ; R11 := U2
 56 [-]: GETTABLE  R11 R11 K12  ; R11 := R11[0x06d055f9]
 57 [-]: MOVE      R12 R3       ; R12 := R3
 58 [-]: CONST     R13 20       ; R13 := 20.000000
 59 [-]: CONST     R14 0        ; R14 := 0.000000
 60 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 61 [-]: ADD       R11 K15 R11  ; R11 := -32.000000 + R11
 62 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 63 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 64 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xf64b7262]
 65 [-]: MOVE      R8 R1        ; R8 := R1
 66 [-]: LOADK     R9 K16       ; R9 := "StepLine.TopCap"
 67 [-]: CONST     R10 1        ; R10 := 1.000000
 68 [-]: GETUPVAL  R11 U2       ; R11 := U2
 69 [-]: GETTABLE  R11 R11 K12  ; R11 := R11[0x06d055f9]
 70 [-]: MOVE      R12 R3       ; R12 := R3
 71 [-]: CONST     R13 12       ; R13 := 12.000000
 72 [-]: CONST     R14 32       ; R14 := 32.000000
 73 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 74 [-]: ADD       R11 R5 R11   ; R11 := R5 + R11
 75 [-]: SUB       R11 K15 R11  ; R11 := -32.000000 - R11
 76 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 77 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 78 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xf64b7262]
 79 [-]: MOVE      R8 R1        ; R8 := R1
 80 [-]: LOADK     R9 K17       ; R9 := "StepLine.BottomCap"
 81 [-]: CONST     R10 1        ; R10 := 1.000000
 82 [-]: GETUPVAL  R11 U2       ; R11 := U2
 83 [-]: GETTABLE  R11 R11 K12  ; R11 := R11[0x06d055f9]
 84 [-]: MOVE      R12 R3       ; R12 := R3
 85 [-]: CONST     R13 20       ; R13 := 20.000000
 86 [-]: CONST     R14 0        ; R14 := 0.000000
 87 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 88 [-]: CALL      R6 0 1       ; R6(R7,...)
 89 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 2188
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EntryId"]
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["LITE_SORTIE"]
  8 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 11
 11 [-]: LOADKB    R2 1 0       ; R2 := true
 12 [-]: GETGLOBAL R3 K2        ; R3 := 0x0f1530fa
 13 [-]: GETUPVAL  R4 U2        ; R4 := U2
 14 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0x06d055f9]
 15 [-]: MOVE      R5 R2        ; R5 := R2
 16 [-]: CONST     R6 3         ; R6 := 3.000000
 17 [-]: CONST     R7 1         ; R7 := 1.000000
 18 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 19 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 20 [-]: GETGLOBAL R4 K2        ; R4 := 0x0f1530fa
 21 [-]: GETUPVAL  R5 U2        ; R5 := U2
 22 [-]: GETTABLE  R5 R5 K3     ; R5 := R5[0x06d055f9]
 23 [-]: MOVE      R6 R2        ; R6 := R2
 24 [-]: CONST     R7 4         ; R7 := 4.000000
 25 [-]: CONST     R8 2         ; R8 := 2.000000
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 28 [-]: GETGLOBAL R5 K4        ; R5 := 0x64fb1586
 29 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mMissionNumber"]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mUnlocked"]
 32 [-]: TEST      R6 1         ; if R6 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 35 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x42b04007]
 36 [-]: LOADK     R8 K9        ; R8 := "<LOCKED>"
 37 [-]: LOADKB    R9 1 0       ; R9 := true
 38 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 39 [-]: MOVE      R5 R6        ; R5 := R6
 40 [-]: JMP       45           ; PC := 45
 41 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mCompleted"]
 42 [-]: TEST      R6 0         ; if not R6 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: LOADK     R5 K11       ; R5 := ""
 45 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 46 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0xc0a3774b]
 47 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 48 [-]: LOADK     R9 K14       ; R9 := "StepCompleted"
 49 [-]: CONST     R10 11       ; R10 := 11.000000
 50 [-]: GETTABLE  R11 R0 K10   ; R11 := R0["mCompleted"]
 51 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 52 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 53 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x1cb415c1]
 54 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 55 [-]: LOADK     R9 K16       ; R9 := ".StepCompleted"
 56 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 57 [-]: GETGLOBAL R9 K17       ; R9 := 0x74c1fed6
 58 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 59 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 60 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0xf64b7262]
 61 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 62 [-]: LOADK     R9 K14       ; R9 := "StepCompleted"
 63 [-]: CONST     R10 9        ; R10 := 9.000000
 64 [-]: GETUPVAL  R11 U3       ; R11 := U3
 65 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["FloatingContent"]
 66 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 67 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 68 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0xe261aa96]
 69 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 70 [-]: LOADK     R9 K21       ; R9 := "StepNum"
 71 [-]: CONST     R10 29       ; R10 := 29.000000
 72 [-]: MOVE      R11 R5       ; R11 := R5
 73 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 74 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 75 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0xf64b7262]
 76 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 77 [-]: LOADK     R9 K21       ; R9 := "StepNum"
 78 [-]: CONST     R10 36       ; R10 := 36.000000
 79 [-]: GETUPVAL  R11 U3       ; R11 := U3
 80 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["FloatingContent"]
 81 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 82 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 83 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x1cb415c1]
 84 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 85 [-]: LOADK     R9 K22       ; R9 := ".StepLine.TopCap"
 86 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 87 [-]: MOVE      R9 R3        ; R9 := R3
 88 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 89 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 90 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x1cb415c1]
 91 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 92 [-]: LOADK     R9 K23       ; R9 := ".StepLine.BottomCap"
 93 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 94 [-]: MOVE      R9 R3        ; R9 := R3
 95 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 96 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 97 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x1cb415c1]
 98 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
 99 [-]: LOADK     R9 K24       ; R9 := ".StepLine.Fill"
100 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
101 [-]: MOVE      R9 R4        ; R9 := R4
102 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
103 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
104 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0xf64b7262]
105 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
106 [-]: LOADK     R9 K25       ; R9 := "StepLine.TopCap"
107 [-]: CONST     R10 9        ; R10 := 9.000000
108 [-]: GETUPVAL  R11 U3       ; R11 := U3
109 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["FloatingContent"]
110 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
111 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
112 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0xf64b7262]
113 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
114 [-]: LOADK     R9 K26       ; R9 := "StepLine.Fill"
115 [-]: CONST     R10 9        ; R10 := 9.000000
116 [-]: GETUPVAL  R11 U3       ; R11 := U3
117 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["FloatingContent"]
118 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
119 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
120 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0xf64b7262]
121 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipName"]
122 [-]: LOADK     R9 K27       ; R9 := "StepLine.BottomCap"
123 [-]: CONST     R10 9        ; R10 := 9.000000
124 [-]: GETUPVAL  R11 U3       ; R11 := U3
125 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["FloatingContent"]
126 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
127 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 2213
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SETTABLE  R0 K0 K1     ; R0["TotalHeight"] := 108.000000
  2 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  3 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xf64b7262]
  4 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
  5 [-]: LOADK     R5 K5        ; R5 := "Progress.Image"
  6 [-]: CONST     R6 12        ; R6 := 12.000000
  7 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["TotalHeight"]
  8 [-]: SUB       R7 R7 K6     ; R7 := R7 - 40.000000
  9 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 11 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xf64b7262]
 12 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
 13 [-]: LOADK     R5 K5        ; R5 := "Progress.Image"
 14 [-]: CONST     R6 13        ; R6 := 13.000000
 15 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["TotalHeight"]
 16 [-]: SUB       R7 R7 K6     ; R7 := R7 - 40.000000
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: LOADNIL   R2 R2        ; R2 := nil
 19 [-]: GETGLOBAL R3 K7        ; R3 := _T
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["CachedSortieMissionsExist"]
 21 [-]: TEST      R3 0         ; if not R3 then PC := 38
 22 [-]: JMP       38           ; PC := 38
 23 [-]: LOADK     R3 K9        ; R3 := "/Lotus/Language/Sorties/SOWorldStateLockedHint"
 24 [-]: TEST      R1 0         ; if not R1 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADK     R3 K10       ; R3 := "/Lotus/Language/WorldStateWindow/LiteSortieWorldStateLockedHint"
 27 [-]: GETGLOBAL R4 K11       ; R4 := 0x603636ad
 28 [-]: MOVE      R5 R3        ; R5 := R3
 29 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 30 [-]: GETGLOBAL R7 K13       ; R7 := 0xa94df70b
 31 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7[0x757f0100]
 32 [-]: GETGLOBAL R9 K15       ; R9 := gPowerSuitType
 33 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 34 [-]: SETTABLE  R6 K12 R7    ; R6["SUIT_RANK"] := R7
 35 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 36 [-]: MOVE      R2 R4        ; R2 := R4
 37 [-]: JMP       43           ; PC := 43
 38 [-]: GETGLOBAL R4 K11       ; R4 := 0x603636ad
 39 [-]: LOADK     R5 K16       ; R5 := "/Lotus/Language/Sorties/SOWorldStateNoSortiesHint"
 40 [-]: LOADNIL   R6 R6        ; R6 := nil
 41 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 42 [-]: MOVE      R2 R4        ; R2 := R4
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K17    ; R4 := R4[0x06d055f9]
 45 [-]: MOVE      R5 R1        ; R5 := R1
 46 [-]: LOADK     R6 K18       ; R6 := "/Lotus/Language/WorldStateWindow/LiteSortieLockedTitle"
 47 [-]: LOADK     R7 K19       ; R7 := "/Lotus/Language/Sorties/SOWorldStateLockedTitle"
 48 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 49 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 50 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x20b98db3]
 51 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 52 [-]: LOADK     R8 K21       ; R8 := ".Details.Title.text"
 53 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 54 [-]: MOVE      R8 R4        ; R8 := R4
 55 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 56 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 57 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x20b98db3]
 58 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 59 [-]: LOADK     R8 K22       ; R8 := ".Details.Description.text"
 60 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 61 [-]: MOVE      R8 R2        ; R8 := R2
 62 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 63 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 64 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0xe261aa96]
 65 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 66 [-]: LOADK     R8 K24       ; R8 := "StepNum"
 67 [-]: CONST     R9 29        ; R9 := 29.000000
 68 [-]: LOADK     R10 K25      ; R10 := ""
 69 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 70 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 71 [-]: SELF      R5 R5 K26    ; R6 := R5; R5 := R5[0xc0a3774b]
 72 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 73 [-]: LOADK     R8 K27       ; R8 := "StepCompleted"
 74 [-]: CONST     R9 11        ; R9 := 11.000000
 75 [-]: LOADKB    R10 0 0      ; R10 := false
 76 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 77 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 78 [-]: SELF      R5 R5 K28    ; R6 := R5; R5 := R5[0xef99134f]
 79 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 80 [-]: LOADK     R8 K29       ; R8 := ".Progress.Image"
 81 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 82 [-]: GETGLOBAL R8 K30       ; R8 := 0x0032441c
 83 [-]: GETTABLE  R8 R8 K31    ; R8 := R8["UITexture_Locked"]
 84 [-]: GETGLOBAL R9 K32       ; R9 := 0x3f56a9a5
 85 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 86 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 87 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0xf64b7262]
 88 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 89 [-]: LOADK     R8 K33       ; R8 := "Progress"
 90 [-]: CONST     R9 1         ; R9 := 1.000000
 91 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["TotalHeight"]
 92 [-]: DIV       R10 R10 K34  ; R10 := R10 / 2.000000
 93 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 94 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 95 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0xf64b7262]
 96 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 97 [-]: LOADK     R8 K35       ; R8 := "Outline"
 98 [-]: CONST     R9 13        ; R9 := 13.000000
 99 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["TotalHeight"]
100 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
101 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
102 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0xf64b7262]
103 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
104 [-]: LOADK     R8 K36       ; R8 := "Btn"
105 [-]: CONST     R9 13        ; R9 := 13.000000
106 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["TotalHeight"]
107 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
108 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
109 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0xf64b7262]
110 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
111 [-]: LOADK     R8 K37       ; R8 := "Highlight"
112 [-]: CONST     R9 1         ; R9 := 1.000000
113 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["TotalHeight"]
114 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
115 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 2245
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xc0a3774b]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "Progress"
  5 [-]: CONST     R5 11        ; R5 := 11.000000
  6 [-]: LOADKB    R6 0 0       ; R6 := false
  7 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  8 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  9 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xc0a3774b]
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 K4        ; R4 := "Details"
 12 [-]: CONST     R5 11        ; R5 := 11.000000
 13 [-]: LOADKB    R6 0 0       ; R6 := false
 14 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 16 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xe261aa96]
 17 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 18 [-]: LOADK     R4 K6        ; R4 := "StepNum"
 19 [-]: CONST     R5 29        ; R5 := 29.000000
 20 [-]: LOADK     R6 K7        ; R6 := ""
 21 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 22 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 23 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xc0a3774b]
 24 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 25 [-]: LOADK     R4 K8        ; R4 := "StepCompleted"
 26 [-]: CONST     R5 11        ; R5 := 11.000000
 27 [-]: LOADKB    R6 0 0       ; R6 := false
 28 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 29 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mClipName"]
 30 [-]: LOADK     R2 K9        ; R2 := ".ModifiersInfo"
 31 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 32 [-]: CONST     R2 1         ; R2 := 1.000000
 33 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mBossIndex"]
 34 [-]: EQ        0 R3 K12     ; if R3 ~= 17.000000 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: CONST     R2 2         ; R2 := 2.000000
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mBossIndex"]
 39 [-]: EQ        0 R3 K13     ; if R3 ~= 18.000000 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: CONST     R2 3         ; R2 := 3.000000
 42 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 43 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x1cb415c1]
 44 [-]: MOVE      R5 R1        ; R5 := R1
 45 [-]: LOADK     R6 K15       ; R6 := ".Banner"
 46 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 47 [-]: GETGLOBAL R6 K16       ; R6 := 0x5528766b
 48 [-]: GETTABLE  R6 R6 R2     ; R6 := R6[R2]
 49 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 50 [-]: GETGLOBAL R3 K17       ; R3 := 0x7f5022cf
 51 [-]: GETTABLE  R3 R3 K18    ; R3 := R3[0x3f3e4d12]
 52 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 53 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4[0x42b04007]
 54 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["mBossInfo"]
 55 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["LocTag"]
 56 [-]: LOADKB    R7 0 0       ; R7 := false
 57 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 58 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 59 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 60 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x20b98db3]
 61 [-]: MOVE      R6 R1        ; R6 := R1
 62 [-]: LOADK     R7 K23       ; R7 := ".Title.text"
 63 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 64 [-]: LOADK     R7 K24       ; R7 := "/Lotus/Language/WorldStateWindow/LiteSortieModifiersTitle"
 65 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 66 [-]: SETTABLE  R8 K25 R3    ; R8["BOSS_NAME"] := R3
 67 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 68 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 69 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4[0xf64b7262]
 70 [-]: MOVE      R6 R1        ; R6 := R1
 71 [-]: LOADK     R7 K27       ; R7 := "Title"
 72 [-]: CONST     R8 9         ; R8 := 9.000000
 73 [-]: GETUPVAL  R9 U0        ; R9 := U0
 74 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["FloatingContentHighlight"]
 75 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 76 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 77 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x20b98db3]
 78 [-]: MOVE      R6 R1        ; R6 := R1
 79 [-]: LOADK     R7 K29       ; R7 := ".BuffsHeader.text"
 80 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 81 [-]: LOADK     R7 K30       ; R7 := "/Lotus/Language/WorldStateWindow/LiteSortieBuffsHeader"
 82 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 83 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 84 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4[0xf64b7262]
 85 [-]: MOVE      R6 R1        ; R6 := R1
 86 [-]: LOADK     R7 K31       ; R7 := "BuffsHeader"
 87 [-]: CONST     R8 9         ; R8 := 9.000000
 88 [-]: GETUPVAL  R9 U0        ; R9 := U0
 89 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["FloatingContent"]
 90 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 91 [-]: GETUPVAL  R4 U1        ; R4 := U1
 92 [-]: GETTABLE  R4 R4 K33    ; R4 := R4[0x06d055f9]
 93 [-]: GETUPVAL  R5 U2        ; R5 := U2
 94 [-]: GETTABLE  R5 R5 K34    ; R5 := R5["EarnedReward"]
 95 [-]: LOADK     R6 K35       ; R6 := "/Lotus/Language/WorldStateWindow/LiteSortieRewardClaimed"
 96 [-]: LOADK     R7 K36       ; R7 := "/Lotus/Language/Menu/AlertPopup_Rewards"
 97 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 98 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 99 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0x20b98db3]
100 [-]: MOVE      R7 R1        ; R7 := R1
101 [-]: LOADK     R8 K37       ; R8 := ".RewardsHeader.text"
102 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
103 [-]: MOVE      R8 R4        ; R8 := R4
104 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
105 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
106 [-]: SELF      R5 R5 K26    ; R6 := R5; R5 := R5[0xf64b7262]
107 [-]: MOVE      R7 R1        ; R7 := R1
108 [-]: LOADK     R8 K38       ; R8 := "RewardsHeader"
109 [-]: CONST     R9 9         ; R9 := 9.000000
110 [-]: GETUPVAL  R10 U0       ; R10 := U0
111 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["FloatingContent"]
112 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
113 [-]: GETGLOBAL R5 K39       ; R5 := 0x603636ad
114 [-]: LOADK     R6 K40       ; R6 := "/Lotus/Language/WorldStateWindow/LiteSortieRewardPoolHeader"
115 [-]: NEWTABLE  R7 0 0       ; R7 := {}
116 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
117 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
118 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0xe261aa96]
119 [-]: MOVE      R8 R1        ; R8 := R1
120 [-]: LOADK     R9 K41       ; R9 := "RewardInfo.RewardPool.RewardPoolCntd"
121 [-]: CONST     R10 29       ; R10 := 29.000000
122 [-]: LOADK     R11 K42      ; R11 := "+"
123 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
124 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
125 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xf64b7262]
126 [-]: MOVE      R8 R1        ; R8 := R1
127 [-]: LOADK     R9 K41       ; R9 := "RewardInfo.RewardPool.RewardPoolCntd"
128 [-]: CONST     R10 9        ; R10 := 9.000000
129 [-]: GETUPVAL  R11 U0       ; R11 := U0
130 [-]: GETTABLE  R11 R11 K43  ; R11 := R11["Content"]
131 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
132 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
133 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xf64b7262]
134 [-]: MOVE      R8 R1        ; R8 := R1
135 [-]: LOADK     R9 K44       ; R9 := "RewardBtn"
136 [-]: CONST     R10 85       ; R10 := 85.000000
137 [-]: CONST     R11 1        ; R11 := 1.000000
138 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
139 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
140 [-]: SELF      R6 R6 K45    ; R7 := R6; R6 := R6[0x1e5b5cfe]
141 [-]: MOVE      R8 R1        ; R8 := R1
142 [-]: LOADK     R9 K46       ; R9 := ".RewardBtn"
143 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
144 [-]: LOADK     R9 K47       ; R9 := "LiteSortieRewardFocused"
145 [-]: LOADK     R10 K48      ; R10 := "LiteSortieRewardUnfocused"
146 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
147 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
148 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
149 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x1cb415c1]
150 [-]: MOVE      R8 R1        ; R8 := R1
151 [-]: LOADK     R9 K49       ; R9 := ".CrystalCheck"
152 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
153 [-]: GETGLOBAL R9 K50       ; R9 := 0x74c1fed6
154 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
155 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
156 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xf64b7262]
157 [-]: MOVE      R8 R1        ; R8 := R1
158 [-]: LOADK     R9 K51       ; R9 := "CrystalCheck"
159 [-]: CONST     R10 9        ; R10 := 9.000000
160 [-]: GETUPVAL  R11 U0       ; R11 := U0
161 [-]: GETTABLE  R11 R11 K43  ; R11 := R11["Content"]
162 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
163 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
164 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6[0xc0a3774b]
165 [-]: MOVE      R8 R1        ; R8 := R1
166 [-]: LOADK     R9 K51       ; R9 := "CrystalCheck"
167 [-]: CONST     R10 11       ; R10 := 11.000000
168 [-]: GETUPVAL  R11 U2       ; R11 := U2
169 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["EarnedReward"]
170 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
171 [-]: GETUPVAL  R6 U2        ; R6 := U2
172 [-]: GETTABLE  R6 R6 K52    ; R6 := R6["CrystalStoreItem"]
173 [-]: GETGLOBAL R7 K53       ; R7 := 0x7b998233
174 [-]: MOVE      R8 R6        ; R8 := R6
175 [-]: CALL      R7 2 2       ; R7 := R7(R8)
176 [-]: TEST      R7 1         ; if R7 then PC := 261
177 [-]: JMP       261          ; PC := 261
178 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
179 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0xf64b7262]
180 [-]: MOVE      R9 R1        ; R9 := R1
181 [-]: LOADK     R10 K54      ; R10 := "CrystalIcon.Icon"
182 [-]: CONST     R11 12       ; R11 := 12.000000
183 [-]: CONST     R12 86       ; R12 := 86.000000
184 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
185 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
186 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0xf64b7262]
187 [-]: MOVE      R9 R1        ; R9 := R1
188 [-]: LOADK     R10 K54      ; R10 := "CrystalIcon.Icon"
189 [-]: CONST     R11 13       ; R11 := 13.000000
190 [-]: CONST     R12 86       ; R12 := 86.000000
191 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
192 [-]: GETUPVAL  R7 U3        ; R7 := U3
193 [-]: GETTABLE  R7 R7 K55    ; R7 := R7[0x5a474c5a]
194 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
195 [-]: MOVE      R9 R1        ; R9 := R1
196 [-]: LOADK     R10 K56      ; R10 := ".CrystalIcon.Icon"
197 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
198 [-]: SELF      R10 R6 K57   ; R11 := R6; R10 := R6[0x056dcf06]
199 [-]: CALL      R10 2 2      ; R10 := R10(R11)
200 [-]: CONST     R11 0        ; R11 := 0.000000
201 [-]: LOADKB    R12 1 0      ; R12 := true
202 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
203 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
204 [-]: SELF      R7 R7 K58    ; R8 := R7; R7 := R7[0xef99134f]
205 [-]: MOVE      R9 R1        ; R9 := R1
206 [-]: LOADK     R10 K59      ; R10 := ".CrystalIcon.Bg"
207 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
208 [-]: GETGLOBAL R10 K60      ; R10 := 0x1ad325c3
209 [-]: GETGLOBAL R11 K61      ; R11 := 0x63904931
210 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
211 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
212 [-]: SELF      R7 R7 K62    ; R8 := R7; R7 := R7[0x91e13703]
213 [-]: MOVE      R9 R1        ; R9 := R1
214 [-]: LOADK     R10 K59      ; R10 := ".CrystalIcon.Bg"
215 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
216 [-]: LOADK     R10 K63      ; R10 := "TintColor"
217 [-]: GETUPVAL  R11 U0       ; R11 := U0
218 [-]: GETTABLE  R11 R11 K64  ; R11 := R11["FloatingContentHighlightObject"]
219 [-]: GETTABLE  R11 R11 K65  ; R11 := R11["r"]
220 [-]: GETUPVAL  R12 U0       ; R12 := U0
221 [-]: GETTABLE  R12 R12 K64  ; R12 := R12["FloatingContentHighlightObject"]
222 [-]: GETTABLE  R12 R12 K66  ; R12 := R12["g"]
223 [-]: GETUPVAL  R13 U0       ; R13 := U0
224 [-]: GETTABLE  R13 R13 K64  ; R13 := R13["FloatingContentHighlightObject"]
225 [-]: GETTABLE  R13 R13 K67  ; R13 := R13["b"]
226 [-]: CONST     R14 1        ; R14 := 1.000000
227 [-]: CALL      R7 8 1       ; R7(R8,R9,R10,R11,R12,R13,R14)
228 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
229 [-]: SELF      R7 R7 K62    ; R8 := R7; R7 := R7[0x91e13703]
230 [-]: MOVE      R9 R1        ; R9 := R1
231 [-]: LOADK     R10 K59      ; R10 := ".CrystalIcon.Bg"
232 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
233 [-]: LOADK     R10 K68      ; R10 := "DetailMapTint"
234 [-]: GETUPVAL  R11 U0       ; R11 := U0
235 [-]: GETTABLE  R11 R11 K69  ; R11 := R11["FloatingContentObject"]
236 [-]: GETTABLE  R11 R11 K65  ; R11 := R11["r"]
237 [-]: GETUPVAL  R12 U0       ; R12 := U0
238 [-]: GETTABLE  R12 R12 K69  ; R12 := R12["FloatingContentObject"]
239 [-]: GETTABLE  R12 R12 K66  ; R12 := R12["g"]
240 [-]: GETUPVAL  R13 U0       ; R13 := U0
241 [-]: GETTABLE  R13 R13 K69  ; R13 := R13["FloatingContentObject"]
242 [-]: GETTABLE  R13 R13 K67  ; R13 := R13["b"]
243 [-]: CONST     R14 1        ; R14 := 1.000000
244 [-]: CALL      R7 8 1       ; R7(R8,R9,R10,R11,R12,R13,R14)
245 [-]: LOADK     R7 K70       ; R7 := "<font color=\""
246 [-]: GETUPVAL  R8 U0        ; R8 := U0
247 [-]: GETTABLE  R8 R8 K71    ; R8 := R8["FloatingContentHighlightHex"]
248 [-]: LOADK     R9 K72       ; R9 := "\">"
249 [-]: GETGLOBAL R10 K39      ; R10 := 0x603636ad
250 [-]: SELF      R11 R6 K73   ; R12 := R6; R11 := R6[0xd3a9d01f]
251 [-]: CALL      R11 2 2      ; R11 := R11(R12)
252 [-]: SELF      R11 R11 K74  ; R12 := R11; R11 := R11[0x6d604ba7]
253 [-]: CALL      R11 2 2      ; R11 := R11(R12)
254 [-]: LOADK     R12 K75      ; R12 := "NoIcon"
255 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
256 [-]: NEWTABLE  R12 0 0      ; R12 := {}
257 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
258 [-]: LOADK     R11 K76      ; R11 := "</font><br>"
259 [-]: MOVE      R12 R5       ; R12 := R5
260 [-]: CONCAT    R5 R7 R12    ; R5 := R7 .. R8 .. R9 .. R10 .. R11 .. R12
261 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
262 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7[0xe261aa96]
263 [-]: MOVE      R9 R1        ; R9 := R1
264 [-]: LOADK     R10 K77      ; R10 := "RewardInfo.CrystalName"
265 [-]: CONST     R11 29       ; R11 := 29.000000
266 [-]: LOADK     R12 K78      ; R12 := "<p><font color=\""
267 [-]: GETUPVAL  R13 U0       ; R13 := U0
268 [-]: GETTABLE  R13 R13 K79  ; R13 := R13["ContentHex"]
269 [-]: LOADK     R14 K72      ; R14 := "\">"
270 [-]: MOVE      R15 R5       ; R15 := R5
271 [-]: LOADK     R16 K80      ; R16 := "</font></p>"
272 [-]: CONCAT    R12 R12 R16  ; R12 := R12 .. R13 .. R14 .. R15 .. R16
273 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
274 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
275 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0xf64b7262]
276 [-]: MOVE      R9 R1        ; R9 := R1
277 [-]: LOADK     R10 K77      ; R10 := "RewardInfo.CrystalName"
278 [-]: CONST     R11 36       ; R11 := 36.000000
279 [-]: GETUPVAL  R12 U0       ; R12 := U0
280 [-]: GETTABLE  R12 R12 K28  ; R12 := R12["FloatingContentHighlight"]
281 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
282 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
283 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0xf64b7262]
284 [-]: MOVE      R9 R1        ; R9 := R1
285 [-]: LOADK     R10 K81      ; R10 := "RewardInfo.RewardPool"
286 [-]: CONST     R11 1        ; R11 := 1.000000
287 [-]: GETGLOBAL R12 K82      ; R12 := 0x5bced4c4
288 [-]: GETTABLE  R12 R12 K83  ; R12 := R12[0xb62ecfe0]
289 [-]: CONST     R13 52       ; R13 := 52.000000
290 [-]: GETGLOBAL R14 K0       ; R14 := 0xae91e43b
291 [-]: SELF      R14 R14 K84  ; R15 := R14; R14 := R14[0x2ce15376]
292 [-]: MOVE      R16 R1       ; R16 := R1
293 [-]: LOADK     R17 K77      ; R17 := "RewardInfo.CrystalName"
294 [-]: CONST     R18 34       ; R18 := 34.000000
295 [-]: CALL      R14 5 0      ; R14,... := R14(R15,R16,R17,R18)
296 [-]: CALL      R12 0 0      ; R12,... := R12(R13,...)
297 [-]: CALL      R7 0 1       ; R7(R8,...)
298 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
299 [-]: SELF      R7 R7 K84    ; R8 := R7; R7 := R7[0x2ce15376]
300 [-]: MOVE      R9 R1        ; R9 := R1
301 [-]: LOADK     R10 K85      ; R10 := "RewardInfo"
302 [-]: CONST     R11 13       ; R11 := 13.000000
303 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
304 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
305 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
306 [-]: MOVE      R10 R1       ; R10 := R1
307 [-]: LOADK     R11 K86      ; R11 := "CrystalIcon"
308 [-]: CONST     R12 1        ; R12 := 1.000000
309 [-]: DIV       R13 R7 K87   ; R13 := R7 / 2.000000
310 [-]: SUB       R13 R13 K88  ; R13 := R13 - 43.000000
311 [-]: ADD       R13 R13 K89  ; R13 := R13 + 190.000000
312 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
313 [-]: ADD       R7 R7 K90    ; R7 := R7 + 194.000000
314 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
315 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
316 [-]: MOVE      R10 R1       ; R10 := R1
317 [-]: LOADK     R11 K31      ; R11 := "BuffsHeader"
318 [-]: CONST     R12 1        ; R12 := 1.000000
319 [-]: MOVE      R13 R7       ; R13 := R7
320 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
321 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
322 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
323 [-]: MOVE      R10 R1       ; R10 := R1
324 [-]: LOADK     R11 K91      ; R11 := "SuitBuffIcon"
325 [-]: CONST     R12 1        ; R12 := 1.000000
326 [-]: ADD       R13 R7 K92   ; R13 := R7 + 30.000000
327 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
328 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
329 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
330 [-]: MOVE      R10 R1       ; R10 := R1
331 [-]: LOADK     R11 K93      ; R11 := "WeaponBuffIcon"
332 [-]: CONST     R12 1        ; R12 := 1.000000
333 [-]: ADD       R13 R7 K92   ; R13 := R7 + 30.000000
334 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
335 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
336 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
337 [-]: MOVE      R10 R1       ; R10 := R1
338 [-]: LOADK     R11 K94      ; R11 := "SuitInfo"
339 [-]: CONST     R12 1        ; R12 := 1.000000
340 [-]: ADD       R13 R7 K95   ; R13 := R7 + 27.000000
341 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
342 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
343 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
344 [-]: MOVE      R10 R1       ; R10 := R1
345 [-]: LOADK     R11 K96      ; R11 := "WeaponInfo"
346 [-]: CONST     R12 1        ; R12 := 1.000000
347 [-]: ADD       R13 R7 K95   ; R13 := R7 + 27.000000
348 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
349 [-]: ADD       R8 R7 K92    ; R8 := R7 + 30.000000
350 [-]: ADD       R8 R8 K98    ; R8 := R8 + 86.000000
351 [-]: ADD       R8 R8 K99    ; R8 := R8 + 12.000000
352 [-]: SETTABLE  R0 K97 R8    ; R0["TotalHeight"] := R8
353 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
354 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
355 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
356 [-]: LOADK     R11 K100     ; R11 := "Outline"
357 [-]: CONST     R12 13       ; R12 := 13.000000
358 [-]: GETTABLE  R13 R0 K97   ; R13 := R0["TotalHeight"]
359 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
360 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
361 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
362 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
363 [-]: LOADK     R11 K101     ; R11 := "Btn"
364 [-]: CONST     R12 13       ; R12 := 13.000000
365 [-]: GETTABLE  R13 R0 K97   ; R13 := R0["TotalHeight"]
366 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
367 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
368 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
369 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
370 [-]: LOADK     R11 K102     ; R11 := "Highlight"
371 [-]: CONST     R12 1        ; R12 := 1.000000
372 [-]: GETTABLE  R13 R0 K97   ; R13 := R0["TotalHeight"]
373 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
374 [-]: CONST     R8 1         ; R8 := 1.000000
375 [-]: CONST     R9 4         ; R9 := 4.000000
376 [-]: CONST     R10 1        ; R10 := 1.000000
377 [-]: FORPREP   R8 396       ; R8 -= R10; PC := 396
378 [-]: GETUPVAL  R12 U2       ; R12 := U2
379 [-]: GETTABLE  R12 R12 K103 ; R12 := R12["RewardTable"]
380 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
381 [-]: EQ        1 R12 K104   ; if R12 == nil then PC := 396
382 [-]: JMP       396          ; PC := 396
383 [-]: GETGLOBAL R13 K0       ; R13 := 0xae91e43b
384 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13[0x1cb415c1]
385 [-]: MOVE      R15 R1       ; R15 := R1
386 [-]: LOADK     R16 K105     ; R16 := ".RewardInfo.RewardPool.RewardPool"
387 [-]: GETGLOBAL R17 K106     ; R17 := 0x64fb1586
388 [-]: MOVE      R18 R11      ; R18 := R11
389 [-]: CALL      R17 2 2      ; R17 := R17(R18)
390 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
391 [-]: GETTABLE  R16 R12 K107 ; R16 := R12["Reward"]
392 [-]: GETTABLE  R16 R16 K108 ; R16 := R16["mStoreItem"]
393 [-]: SELF      R16 R16 K57  ; R17 := R16; R16 := R16[0x056dcf06]
394 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
395 [-]: CALL      R13 0 1      ; R13(R14,...)
396 [-]: FORLOOP   R8 378       ; R8 += R10; if R8 <= R9 then begin PC := 378; R11 := R8 end
397 [-]: GETGLOBAL R13 K109     ; R13 := 0xb009bbc6
398 [-]: GETTABLE  R14 R0 K110  ; R14 := R0["mBuffInfo"]
399 [-]: GETTABLE  R14 R14 K111 ; R14 := R14["mSuitStoreItem"]
400 [-]: CALL      R13 2 2      ; R13 := R13(R14)
401 [-]: GETUPVAL  R14 U4       ; R14 := U4
402 [-]: MOVE      R15 R1       ; R15 := R1
403 [-]: LOADK     R16 K112     ; R16 := ".SuitBuffIcon"
404 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
405 [-]: MOVE      R16 R13      ; R16 := R13
406 [-]: CALL      R14 3 1      ; R14(R15,R16)
407 [-]: GETUPVAL  R14 U4       ; R14 := U4
408 [-]: MOVE      R15 R1       ; R15 := R1
409 [-]: LOADK     R16 K113     ; R16 := ".WeaponBuffIcon"
410 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
411 [-]: GETGLOBAL R16 K109     ; R16 := 0xb009bbc6
412 [-]: GETTABLE  R17 R0 K110  ; R17 := R0["mBuffInfo"]
413 [-]: GETTABLE  R17 R17 K114 ; R17 := R17["mWeaponStoreItems"]
414 [-]: GETUPVAL  R18 U5       ; R18 := U5
415 [-]: GETTABLE  R18 R18 K115 ; R18 := R18["mBuffIconIndex"]
416 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
417 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
418 [-]: CALL      R14 0 1      ; R14(R15,...)
419 [-]: GETUPVAL  R14 U6       ; R14 := U6
420 [-]: MOVE      R15 R1       ; R15 := R1
421 [-]: GETTABLE  R16 R0 K110  ; R16 := R0["mBuffInfo"]
422 [-]: CALL      R14 3 1      ; R14(R15,R16)
423 [-]: CLOSURE   R14 0        ; R14 := closure(Function #34.1)
424 [-]: GETUPVAL  R0 U0        ; R0 := U0
425 [-]: MOVE      R15 R14      ; R15 := R14
426 [-]: MOVE      R16 R1       ; R16 := R1
427 [-]: LOADK     R17 K116     ; R17 := ".RespawnNerf"
428 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
429 [-]: GETGLOBAL R17 K117     ; R17 := 0xd5d380e1
430 [-]: GETTABLE  R17 R17 K118 ; R17 := R17[1.000000]
431 [-]: LOADK     R18 K119     ; R18 := "/Lotus/Language/WorldStateWindow/LiteSortieNerfRespawn"
432 [-]: CONST     R19 1        ; R19 := 1.000000
433 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
434 [-]: MOVE      R15 R14      ; R15 := R14
435 [-]: MOVE      R16 R1       ; R16 := R1
436 [-]: LOADK     R17 K120     ; R17 := ".ConsumablesNerf"
437 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
438 [-]: GETGLOBAL R17 K117     ; R17 := 0xd5d380e1
439 [-]: GETTABLE  R17 R17 K87  ; R17 := R17[2.000000]
440 [-]: LOADK     R18 K121     ; R18 := "/Lotus/Language/WorldStateWindow/LiteSortieNerfConsumables"
441 [-]: CONST     R19 2        ; R19 := 2.000000
442 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
443 [-]: MOVE      R15 R14      ; R15 := R14
444 [-]: MOVE      R16 R1       ; R16 := R1
445 [-]: LOADK     R17 K122     ; R17 := ".EnemiesNerf"
446 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
447 [-]: GETGLOBAL R17 K117     ; R17 := 0xd5d380e1
448 [-]: GETTABLE  R17 R17 K123 ; R17 := R17[3.000000]
449 [-]: LOADK     R18 K124     ; R18 := "/Lotus/Language/WorldStateWindow/LiteSortieNerfEnemies"
450 [-]: CONST     R19 3        ; R19 := 3.000000
451 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
452 [-]: RETURN    R0 1         ; return 


; Function #34.1:
;
; Name:            
; Defined at line: 2320
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
  2 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0xf64b7262]
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: LOADK     R7 K2        ; R7 := "Btn"
  5 [-]: CONST     R8 85        ; R8 := 85.000000
  6 [-]: MOVE      R9 R3        ; R9 := R3
  7 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
  9 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x1cb415c1]
 10 [-]: MOVE      R6 R0        ; R6 := R0
 11 [-]: LOADK     R7 K4        ; R7 := ".Icon"
 12 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 13 [-]: MOVE      R7 R1        ; R7 := R1
 14 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 15 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 16 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xe261aa96]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K6        ; R7 := "Label"
 19 [-]: CONST     R8 38        ; R8 := 38.000000
 20 [-]: LOADK     R9 K7        ; R9 := "center"
 21 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 22 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 23 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x20b98db3]
 24 [-]: MOVE      R6 R0        ; R6 := R0
 25 [-]: LOADK     R7 K9        ; R7 := ".Label.text"
 26 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 27 [-]: MOVE      R7 R2        ; R7 := R2
 28 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 29 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 30 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0xf64b7262]
 31 [-]: MOVE      R6 R0        ; R6 := R0
 32 [-]: LOADK     R7 K10       ; R7 := "Icon"
 33 [-]: CONST     R8 9         ; R8 := 9.000000
 34 [-]: GETUPVAL  R9 U0        ; R9 := U0
 35 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["FloatingContent"]
 36 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 37 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 38 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0xf64b7262]
 39 [-]: MOVE      R6 R0        ; R6 := R0
 40 [-]: LOADK     R7 K6        ; R7 := "Label"
 41 [-]: CONST     R8 36        ; R8 := 36.000000
 42 [-]: GETUPVAL  R9 U0        ; R9 := U0
 43 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["Content"]
 44 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 45 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 46 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x1e5b5cfe]
 47 [-]: MOVE      R6 R0        ; R6 := R0
 48 [-]: LOADK     R7 K14       ; R7 := ".Btn"
 49 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 50 [-]: LOADK     R7 K15       ; R7 := "LiteSortieNerfFocused"
 51 [-]: LOADK     R8 K16       ; R8 := "LiteSortieNerfUnfocused"
 52 [-]: LOADNIL   R9 R10       ; R9 := R10 := nil
 53 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 54 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 55 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4[0x2ce15376]
 56 [-]: MOVE      R6 R0        ; R6 := R0
 57 [-]: LOADK     R7 K6        ; R7 := "Label"
 58 [-]: CONST     R8 33        ; R8 := 33.000000
 59 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 60 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 61 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0xf64b7262]
 62 [-]: MOVE      R7 R0        ; R7 := R0
 63 [-]: LOADK     R8 K2        ; R8 := "Btn"
 64 [-]: CONST     R9 12        ; R9 := 12.000000
 65 [-]: ADD       R10 K18 R4   ; R10 := 60.000000 + R4
 66 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 67 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 2339
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0x06d055f9]
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mRewardClipName"]
  4 [-]: EQ        0 R4 K2      ; if R4 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 7
  7 [-]: LOADKB    R4 1 0       ; R4 := true
  8 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mRewardClipName"]
  9 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mClipName"]
 10 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0x73a7fd40]
 13 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["Reward"]
 14 [-]: LOADKB    R6 1 0       ; R6 := true
 15 [-]: CALL      R4 3 6       ; R4,R5,R6,R7,R8 := R4(R5,R6)
 16 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 17 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9[0xc0a3774b]
 18 [-]: MOVE      R11 R3       ; R11 := R3
 19 [-]: LOADK     R12 K8       ; R12 := "Image"
 20 [-]: CONST     R13 11       ; R13 := 11.000000
 21 [-]: EQ        0 R4 K2      ; if R4 ~= nil then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADKB    R14 0 1      ; R14 := false; PC := 24
 24 [-]: LOADKB    R14 1 0      ; R14 := true
 25 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 26 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 27 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9[0xc0a3774b]
 28 [-]: MOVE      R11 R3       ; R11 := R3
 29 [-]: LOADK     R12 K9       ; R12 := "ProgressBar"
 30 [-]: CONST     R13 11       ; R13 := 11.000000
 31 [-]: LOADKB    R14 0 0      ; R14 := false
 32 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 33 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 34 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9[0xc0a3774b]
 35 [-]: MOVE      R11 R3       ; R11 := R3
 36 [-]: LOADK     R12 K10      ; R12 := "BlueprintBg"
 37 [-]: CONST     R13 11       ; R13 := 11.000000
 38 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: MOVE      R14 R5       ; R14 := R5
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADKB    R14 0 1      ; R14 := false; PC := 43
 43 [-]: LOADKB    R14 1 0      ; R14 := true
 44 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 45 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 46 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0x1cb415c1]
 47 [-]: MOVE      R11 R3       ; R11 := R3
 48 [-]: LOADK     R12 K12      ; R12 := ".BlueprintBg"
 49 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 50 [-]: GETGLOBAL R12 K13      ; R12 := 0x0032441c
 51 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["UITexture_Blueprint"]
 52 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 53 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 54 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0xf64b7262]
 55 [-]: MOVE      R11 R3       ; R11 := R3
 56 [-]: LOADK     R12 K16      ; R12 := "Progress"
 57 [-]: CONST     R13 36       ; R13 := 36.000000
 58 [-]: GETUPVAL  R14 U2       ; R14 := U2
 59 [-]: GETTABLE  R14 R14 K17  ; R14 := R14["Content"]
 60 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 61 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 62 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9[0xd5181643]
 63 [-]: MOVE      R11 R3       ; R11 := R3
 64 [-]: LOADK     R12 K19      ; R12 := ".Bg"
 65 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 66 [-]: GETGLOBAL R12 K20      ; R12 := 0xe3d94630
 67 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 68 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 69 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9[0x91e13703]
 70 [-]: MOVE      R11 R3       ; R11 := R3
 71 [-]: LOADK     R12 K19      ; R12 := ".Bg"
 72 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 73 [-]: LOADK     R12 K22      ; R12 := "RectEdgeColor"
 74 [-]: GETUPVAL  R13 U2       ; R13 := U2
 75 [-]: GETTABLE  R13 R13 K23  ; R13 := R13["FloatingContentObject"]
 76 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["r"]
 77 [-]: GETUPVAL  R14 U2       ; R14 := U2
 78 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["FloatingContentObject"]
 79 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["g"]
 80 [-]: GETUPVAL  R15 U2       ; R15 := U2
 81 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["FloatingContentObject"]
 82 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["b"]
 83 [-]: LOADK     R16 K27      ; R16 := 0.400000
 84 [-]: CALL      R9 8 1       ; R9(R10,R11,R12,R13,R14,R15,R16)
 85 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 86 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9[0x91e13703]
 87 [-]: MOVE      R11 R3       ; R11 := R3
 88 [-]: LOADK     R12 K19      ; R12 := ".Bg"
 89 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 90 [-]: LOADK     R12 K28      ; R12 := "RectInnerColor"
 91 [-]: GETUPVAL  R13 U2       ; R13 := U2
 92 [-]: GETTABLE  R13 R13 K29  ; R13 := R13["Background1Object"]
 93 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["r"]
 94 [-]: GETUPVAL  R14 U2       ; R14 := U2
 95 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["Background1Object"]
 96 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["g"]
 97 [-]: GETUPVAL  R15 U2       ; R15 := U2
 98 [-]: GETTABLE  R15 R15 K29  ; R15 := R15["Background1Object"]
 99 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["b"]
100 [-]: LOADK     R16 K30      ; R16 := 0.900000
101 [-]: CALL      R9 8 1       ; R9(R10,R11,R12,R13,R14,R15,R16)
102 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 187
103 [-]: JMP       187          ; PC := 187
104 [-]: GETGLOBAL R9 K31       ; R9 := 0x7b998233
105 [-]: MOVE      R10 R6       ; R10 := R6
106 [-]: CALL      R9 2 2       ; R9 := R9(R10)
107 [-]: TEST      R9 1         ; if R9 then PC := 113
108 [-]: JMP       113          ; PC := 113
109 [-]: SELF      R9 R6 K32    ; R10 := R6; R9 := R6[0xf2deaf69]
110 [-]: GETGLOBAL R11 K33      ; R11 := gLotusSigilType
111 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
112 [-]: JMP       115          ; PC := 115
113 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 114
114 [-]: LOADKB    R9 1 0       ; R9 := true
115 [-]: GETGLOBAL R10 K31      ; R10 := 0x7b998233
116 [-]: MOVE      R11 R6       ; R11 := R6
117 [-]: CALL      R10 2 2      ; R10 := R10(R11)
118 [-]: TEST      R10 1        ; if R10 then PC := 124
119 [-]: JMP       124          ; PC := 124
120 [-]: SELF      R10 R6 K32   ; R11 := R6; R10 := R6[0xf2deaf69]
121 [-]: GETGLOBAL R12 K34      ; R12 := gAvatarImageItemType
122 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
123 [-]: JMP       126          ; PC := 126
124 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 125
125 [-]: LOADKB    R10 1 0      ; R10 := true
126 [-]: GETGLOBAL R11 K13      ; R11 := 0x0032441c
127 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["UITexture_CreditsIcon"]
128 [-]: EQ        1 R4 R11     ; if R4 == R11 then PC := 137
129 [-]: JMP       137          ; PC := 137
130 [-]: TESTSET   R11 R9 1     ; if R9 then PC := 138 else R11 := R9
131 [-]: JMP       138          ; PC := 138
132 [-]: TESTSET   R11 R10 1    ; if R10 then PC := 138 else R11 := R10
133 [-]: JMP       138          ; PC := 138
134 [-]: MOVE      R11 R7       ; R11 := R7
135 [-]: JMP       138          ; PC := 138
136 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 137
137 [-]: LOADKB    R11 1 0      ; R11 := true
138 [-]: GETGLOBAL R12 K6       ; R12 := 0xae91e43b
139 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12[0xf64b7262]
140 [-]: MOVE      R14 R3       ; R14 := R3
141 [-]: LOADK     R15 K8       ; R15 := "Image"
142 [-]: CONST     R16 12       ; R16 := 12.000000
143 [-]: CONST     R17 76       ; R17 := 76.000000
144 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
145 [-]: GETGLOBAL R12 K6       ; R12 := 0xae91e43b
146 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12[0xf64b7262]
147 [-]: MOVE      R14 R3       ; R14 := R3
148 [-]: LOADK     R15 K8       ; R15 := "Image"
149 [-]: CONST     R16 13       ; R16 := 13.000000
150 [-]: GETUPVAL  R17 U0       ; R17 := U0
151 [-]: GETTABLE  R17 R17 K0   ; R17 := R17[0x06d055f9]
152 [-]: MOVE      R18 R11      ; R18 := R11
153 [-]: CONST     R19 76       ; R19 := 76.000000
154 [-]: CONST     R20 50       ; R20 := 50.000000
155 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
156 [-]: CALL      R12 0 1      ; R12(R13,...)
157 [-]: TEST      R2 0         ; if not R2 then PC := 166
158 [-]: JMP       166          ; PC := 166
159 [-]: GETGLOBAL R12 K6       ; R12 := 0xae91e43b
160 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12[0xf64b7262]
161 [-]: MOVE      R14 R3       ; R14 := R3
162 [-]: LOADK     R15 K8       ; R15 := "Image"
163 [-]: CONST     R16 1        ; R16 := 1.000000
164 [-]: GETTABLE  R17 R2 K36   ; R17 := R2["mInitImageY"]
165 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
166 [-]: GETGLOBAL R12 K6       ; R12 := 0xae91e43b
167 [-]: SELF      R12 R12 K11  ; R13 := R12; R12 := R12[0x1cb415c1]
168 [-]: MOVE      R14 R3       ; R14 := R3
169 [-]: LOADK     R15 K37      ; R15 := ".Image"
170 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
171 [-]: MOVE      R15 R4       ; R15 := R4
172 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
173 [-]: GETGLOBAL R12 K6       ; R12 := 0xae91e43b
174 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12[0xf64b7262]
175 [-]: MOVE      R14 R3       ; R14 := R3
176 [-]: LOADK     R15 K8       ; R15 := "Image"
177 [-]: CONST     R16 9        ; R16 := 9.000000
178 [-]: GETUPVAL  R17 U0       ; R17 := U0
179 [-]: GETTABLE  R17 R17 K0   ; R17 := R17[0x06d055f9]
180 [-]: MOVE      R18 R8       ; R18 := R8
181 [-]: GETUPVAL  R19 U2       ; R19 := U2
182 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["Content"]
183 [-]: GETGLOBAL R20 K13      ; R20 := 0x0032441c
184 [-]: GETTABLE  R20 R20 K38  ; R20 := R20["UIColor_White"]
185 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
186 [-]: CALL      R12 0 1      ; R12(R13,...)
187 [-]: LOADK     R12 K39      ; R12 := "<p><font color=\""
188 [-]: GETUPVAL  R13 U2       ; R13 := U2
189 [-]: GETTABLE  R13 R13 K40  ; R13 := R13["FloatingContentHex"]
190 [-]: LOADK     R14 K41      ; R14 := "\">"
191 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
192 [-]: GETTABLE  R13 R0 K42   ; R13 := R0["NamePrefix"]
193 [-]: EQ        1 R13 K2     ; if R13 == nil then PC := 198
194 [-]: JMP       198          ; PC := 198
195 [-]: MOVE      R13 R12      ; R13 := R12
196 [-]: GETTABLE  R14 R0 K42   ; R14 := R0["NamePrefix"]
197 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
198 [-]: MOVE      R13 R12      ; R13 := R12
199 [-]: GETGLOBAL R14 K43      ; R14 := 0x5f0788c4
200 [-]: GETUPVAL  R15 U1       ; R15 := U1
201 [-]: GETTABLE  R15 R15 K44  ; R15 := R15[0xfbe41490]
202 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
203 [-]: GETTABLE  R17 R0 K5    ; R17 := R0["Reward"]
204 [-]: CALL      R15 3 0      ; R15,... := R15(R16,R17)
205 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
206 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
207 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 215
208 [-]: JMP       215          ; PC := 215
209 [-]: MOVE      R13 R12      ; R13 := R12
210 [-]: LOADK     R14 K45      ; R14 := " @ "
211 [-]: GETGLOBAL R15 K46      ; R15 := 0x64fb1586
212 [-]: MOVE      R16 R1       ; R16 := R1
213 [-]: CALL      R15 2 2      ; R15 := R15(R16)
214 [-]: CONCAT    R12 R13 R15  ; R12 := R13 .. R14 .. R15
215 [-]: MOVE      R13 R12      ; R13 := R12
216 [-]: LOADK     R14 K47      ; R14 := "</font></p>"
217 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
218 [-]: GETTABLE  R13 R0 K48   ; R13 := R0["Goal"]
219 [-]: EQ        1 R13 K49    ; if R13 == 900.000000 then PC := 222
220 [-]: JMP       222          ; PC := 222
221 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 222
222 [-]: LOADKB    R13 1 0      ; R13 := true
223 [-]: TEST      R13 0        ; if not R13 then PC := 233
224 [-]: JMP       233          ; PC := 233
225 [-]: GETGLOBAL R14 K6       ; R14 := 0xae91e43b
226 [-]: SELF      R14 R14 K15  ; R15 := R14; R14 := R14[0xf64b7262]
227 [-]: MOVE      R16 R3       ; R16 := R3
228 [-]: LOADK     R17 K50      ; R17 := "Name"
229 [-]: CONST     R18 12       ; R18 := 12.000000
230 [-]: CONST     R19 250      ; R19 := 250.000000
231 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
232 [-]: JMP       295          ; PC := 295
233 [-]: GETGLOBAL R14 K6       ; R14 := 0xae91e43b
234 [-]: SELF      R14 R14 K51  ; R15 := R14; R14 := R14[0xa7ec3e8a]
235 [-]: GETTABLE  R16 R0 K3    ; R16 := R0["mClipName"]
236 [-]: LOADK     R17 K52      ; R17 := ".Outline"
237 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
238 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
239 [-]: TEST      R14 0        ; if not R14 then PC := 281
240 [-]: JMP       281          ; PC := 281
241 [-]: GETGLOBAL R14 K6       ; R14 := 0xae91e43b
242 [-]: SELF      R14 R14 K51  ; R15 := R14; R14 := R14[0xa7ec3e8a]
243 [-]: MOVE      R16 R3       ; R16 := R3
244 [-]: LOADK     R17 K53      ; R17 := ".Name"
245 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
246 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
247 [-]: TEST      R14 0        ; if not R14 then PC := 281
248 [-]: JMP       281          ; PC := 281
249 [-]: GETGLOBAL R14 K6       ; R14 := 0xae91e43b
250 [-]: SELF      R14 R14 K54  ; R15 := R14; R14 := R14[0x91a24e4b]
251 [-]: GETTABLE  R16 R0 K3    ; R16 := R0["mClipName"]
252 [-]: LOADK     R17 K52      ; R17 := ".Outline"
253 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
254 [-]: CONST     R17 12       ; R17 := 12.000000
255 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
256 [-]: GETGLOBAL R15 K6       ; R15 := 0xae91e43b
257 [-]: SELF      R15 R15 K54  ; R16 := R15; R15 := R15[0x91a24e4b]
258 [-]: MOVE      R17 R3       ; R17 := R3
259 [-]: LOADK     R18 K53      ; R18 := ".Name"
260 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
261 [-]: CONST     R18 2        ; R18 := 2.000000
262 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
263 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
264 [-]: SELF      R16 R16 K54  ; R17 := R16; R16 := R16[0x91a24e4b]
265 [-]: GETTABLE  R18 R0 K3    ; R18 := R0["mClipName"]
266 [-]: LOADK     R19 K52      ; R19 := ".Outline"
267 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
268 [-]: CONST     R19 2        ; R19 := 2.000000
269 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
270 [-]: SUB       R15 R15 R16  ; R15 := R15 - R16
271 [-]: SUB       R16 R14 R15  ; R16 := R14 - R15
272 [-]: SUB       R14 R16 K55  ; R14 := R16 - 10.000000
273 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
274 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16[0xf64b7262]
275 [-]: MOVE      R18 R3       ; R18 := R3
276 [-]: LOADK     R19 K50      ; R19 := "Name"
277 [-]: CONST     R20 12       ; R20 := 12.000000
278 [-]: MOVE      R21 R14      ; R21 := R14
279 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
280 [-]: JMP       295          ; PC := 295
281 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
282 [-]: SELF      R16 R16 K56  ; R17 := R16; R16 := R16[0xe261aa96]
283 [-]: MOVE      R18 R3       ; R18 := R3
284 [-]: LOADK     R19 K50      ; R19 := "Name"
285 [-]: CONST     R20 38       ; R20 := 38.000000
286 [-]: LOADK     R21 K57      ; R21 := "bottom"
287 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
288 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
289 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16[0xf64b7262]
290 [-]: MOVE      R18 R3       ; R18 := R3
291 [-]: LOADK     R19 K50      ; R19 := "Name"
292 [-]: CONST     R20 12       ; R20 := 12.000000
293 [-]: CONST     R21 315      ; R21 := 315.000000
294 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
295 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
296 [-]: SELF      R16 R16 K56  ; R17 := R16; R16 := R16[0xe261aa96]
297 [-]: MOVE      R18 R3       ; R18 := R3
298 [-]: LOADK     R19 K50      ; R19 := "Name"
299 [-]: CONST     R20 29       ; R20 := 29.000000
300 [-]: MOVE      R21 R12      ; R21 := R12
301 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
302 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
303 [-]: SELF      R16 R16 K58  ; R17 := R16; R16 := R16[0x42b04007]
304 [-]: GETUPVAL  R18 U0       ; R18 := U0
305 [-]: GETTABLE  R18 R18 K0   ; R18 := R18[0x06d055f9]
306 [-]: GETTABLE  R19 R0 K59   ; R19 := R0["Count"]
307 [-]: GETTABLE  R20 R0 K48   ; R20 := R0["Goal"]
308 [-]: LE        1 R20 R19    ; if R20 <= R19 then PC := 311
309 [-]: JMP       311          ; PC := 311
310 [-]: LOADKB    R19 0 1      ; R19 := false; PC := 311
311 [-]: LOADKB    R19 1 0      ; R19 := true
312 [-]: LOADK     R20 K60      ; R20 := "<CHECKMARK>"
313 [-]: LOADK     R21 K61      ; R21 := "<CHECKMARK_OUTLINE>"
314 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
315 [-]: LOADKB    R19 1 0      ; R19 := true
316 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
317 [-]: LOADK     R17 K45      ; R17 := " @ "
318 [-]: GETTABLE  R18 R0 K48   ; R18 := R0["Goal"]
319 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
320 [-]: GETTABLE  R17 R0 K62   ; R17 := R0["CustomProgress"]
321 [-]: EQ        1 R17 K2     ; if R17 == nil then PC := 324
322 [-]: JMP       324          ; PC := 324
323 [-]: GETTABLE  R16 R0 K62   ; R16 := R0["CustomProgress"]
324 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
325 [-]: SELF      R17 R17 K56  ; R18 := R17; R17 := R17[0xe261aa96]
326 [-]: MOVE      R19 R3       ; R19 := R3
327 [-]: LOADK     R20 K16      ; R20 := "Progress"
328 [-]: CONST     R21 29       ; R21 := 29.000000
329 [-]: MOVE      R22 R16      ; R22 := R16
330 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
331 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
332 [-]: SELF      R17 R17 K56  ; R18 := R17; R17 := R17[0xe261aa96]
333 [-]: MOVE      R19 R3       ; R19 := R3
334 [-]: LOADK     R20 K16      ; R20 := "Progress"
335 [-]: CONST     R21 37       ; R21 := 37.000000
336 [-]: LOADK     R22 K63      ; R22 := "left"
337 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
338 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
339 [-]: SELF      R17 R17 K7   ; R18 := R17; R17 := R17[0xc0a3774b]
340 [-]: MOVE      R19 R3       ; R19 := R3
341 [-]: LOADK     R20 K16      ; R20 := "Progress"
342 [-]: CONST     R21 11       ; R21 := 11.000000
343 [-]: GETTABLE  R22 R0 K64   ; R22 := R0["IsLinearEvent"]
344 [-]: NOT       R22 R22      ; R22 :=  R22
345 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
346 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
347 [-]: SELF      R17 R17 K65  ; R18 := R17; R17 := R17[0x2ce15376]
348 [-]: MOVE      R19 R3       ; R19 := R3
349 [-]: LOADK     R20 K50      ; R20 := "Name"
350 [-]: CONST     R21 34       ; R21 := 34.000000
351 [-]: CALL      R17 5 2      ; R17 := R17(R18,R19,R20,R21)
352 [-]: GETGLOBAL R18 K6       ; R18 := 0xae91e43b
353 [-]: SELF      R18 R18 K65  ; R19 := R18; R18 := R18[0x2ce15376]
354 [-]: MOVE      R20 R3       ; R20 := R3
355 [-]: LOADK     R21 K16      ; R21 := "Progress"
356 [-]: CONST     R22 34       ; R22 := 34.000000
357 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
358 [-]: ADD       R19 R17 R18  ; R19 := R17 + R18
359 [-]: ADD       R19 R19 K66  ; R19 := R19 + 15.000000
360 [-]: SUB       R19 K67 R19  ; R19 := 80.000000 - R19
361 [-]: DIV       R19 R19 K68  ; R19 := R19 / 2.000000
362 [-]: GETGLOBAL R20 K6       ; R20 := 0xae91e43b
363 [-]: SELF      R20 R20 K15  ; R21 := R20; R20 := R20[0xf64b7262]
364 [-]: MOVE      R22 R3       ; R22 := R3
365 [-]: LOADK     R23 K50      ; R23 := "Name"
366 [-]: CONST     R24 1        ; R24 := 1.000000
367 [-]: MOVE      R25 R19      ; R25 := R19
368 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
369 [-]: GETGLOBAL R20 K6       ; R20 := 0xae91e43b
370 [-]: SELF      R20 R20 K15  ; R21 := R20; R20 := R20[0xf64b7262]
371 [-]: MOVE      R22 R3       ; R22 := R3
372 [-]: LOADK     R23 K16      ; R23 := "Progress"
373 [-]: CONST     R24 1        ; R24 := 1.000000
374 [-]: ADD       R25 R19 R17  ; R25 := R19 + R17
375 [-]: ADD       R25 R25 K69  ; R25 := R25 + 4.000000
376 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
377 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 2406
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x06d055f9]
  3 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mHealthPct"]
  4 [-]: LE        1 K2 R2      ; if 0.000000 <= R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 7
  7 [-]: LOADKB    R2 1 0       ; R2 := true
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mHealthPct"]
  9 [-]: CONST     R4 0         ; R4 := 0.000000
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: LT        0 K2 R1      ; if 0.000000 >= R1 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LT        0 R1 K3      ; if R1 >= 0.001000 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADK     R1 K3        ; R1 := 0.001000
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x7f5022cf
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe8072ded]
 18 [-]: LOADK     R3 K6        ; R3 := "%1.1f"
 19 [-]: MUL       R4 R1 K7     ; R4 := R1 * 100.000000
 20 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0x06d055f9]
 23 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mFaction"]
 24 [-]: EQ        1 R4 K2      ; if R4 == 0.000000 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 27
 27 [-]: LOADKB    R4 1 0       ; R4 := true
 28 [-]: LOADK     R5 K10       ; R5 := "/Lotus/Language/Menu/FomorianHealth"
 29 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/RazorbackArmadaHealth"
 30 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 31 [-]: GETGLOBAL R4 K12       ; R4 := 0x603636ad
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: LOADNIL   R6 R6        ; R6 := nil
 34 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 35 [-]: LOADK     R5 K13       ; R5 := ": "
 36 [-]: MOVE      R6 R2        ; R6 := R2
 37 [-]: LOADK     R7 K14       ; R7 := "%"
 38 [-]: CONCAT    R4 R4 R7     ; R4 := R4 .. R5 .. R6 .. R7
 39 [-]: RETURN    R4 2         ; return R4
 40 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 2418
; #Upvalues:       10
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  48

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x5e35d4d6]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0x06d055f9]
 13 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["IsLinearEvent"]
 14 [-]: LOADK     R6 K5        ; R6 := ".LinearEvent"
 15 [-]: LOADK     R7 K6        ; R7 := ""
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 18 [-]: CONST     R4 1         ; R4 := 1.000000
 19 [-]: GETUPVAL  R5 U2        ; R5 := U2
 20 [-]: LEN       R5 R5        ; R5 := # R5
 21 [-]: CONST     R6 1         ; R6 := 1.000000
 22 [-]: FORPREP   R4 31        ; R4 -= R6; PC := 31
 23 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 24 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0xd5181643]
 25 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
 26 [-]: GETUPVAL  R11 U2       ; R11 := U2
 27 [-]: GETTABLE  R11 R11 R7   ; R11 := R11[R7]
 28 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 29 [-]: GETGLOBAL R11 K9       ; R11 := 0x3f56a9a5
 30 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 31 [-]: FORLOOP   R4 23        ; R4 += R6; if R4 <= R5 then begin PC := 23; R7 := R4 end
 32 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 33 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 34 [-]: MOVE      R10 R3       ; R10 := R3
 35 [-]: LOADK     R11 K11      ; R11 := "Details.Title"
 36 [-]: CONST     R12 36       ; R12 := 36.000000
 37 [-]: GETUPVAL  R13 U3       ; R13 := U3
 38 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["FloatingContent"]
 39 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 40 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 41 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 42 [-]: MOVE      R10 R3       ; R10 := R3
 43 [-]: LOADK     R11 K13      ; R11 := "Details.Description"
 44 [-]: CONST     R12 36       ; R12 := 36.000000
 45 [-]: GETUPVAL  R13 U3       ; R13 := U3
 46 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["Content"]
 47 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 48 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 49 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0xc0a3774b]
 50 [-]: MOVE      R10 R3       ; R10 := R3
 51 [-]: LOADK     R11 K16      ; R11 := "ModifiersInfo"
 52 [-]: CONST     R12 11       ; R12 := 11.000000
 53 [-]: LOADKB    R13 0 0      ; R13 := false
 54 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 55 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 56 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0xc0a3774b]
 57 [-]: MOVE      R10 R3       ; R10 := R3
 58 [-]: LOADK     R11 K17      ; R11 := "StepLine"
 59 [-]: CONST     R12 11       ; R12 := 11.000000
 60 [-]: GETTABLE  R13 R0 K18   ; R13 := R0["mIsUnlockHint"]
 61 [-]: NOT       R13 R13      ; R13 :=  R13
 62 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 63 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 64 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 65 [-]: MOVE      R10 R3       ; R10 := R3
 66 [-]: LOADK     R11 K19      ; R11 := "Progress.Image"
 67 [-]: CONST     R12 9        ; R12 := 9.000000
 68 [-]: GETUPVAL  R13 U1       ; R13 := U1
 69 [-]: GETTABLE  R13 R13 K3   ; R13 := R13[0x06d055f9]
 70 [-]: GETTABLE  R14 R0 K18   ; R14 := R0["mIsUnlockHint"]
 71 [-]: GETUPVAL  R15 U3       ; R15 := U3
 72 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["FloatingContent"]
 73 [-]: GETGLOBAL R16 K20      ; R16 := 0x0032441c
 74 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["UIColor_White"]
 75 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 76 [-]: CALL      R8 0 1       ; R8(R9,...)
 77 [-]: GETTABLE  R8 R0 K18    ; R8 := R0["mIsUnlockHint"]
 78 [-]: TEST      R8 0         ; if not R8 then PC := 84
 79 [-]: JMP       84           ; PC := 84
 80 [-]: GETUPVAL  R8 U4        ; R8 := U4
 81 [-]: MOVE      R9 R0        ; R9 := R0
 82 [-]: CALL      R8 2 1       ; R8(R9)
 83 [-]: RETURN    R0 1         ; return 
 84 [-]: GETUPVAL  R8 U1        ; R8 := U1
 85 [-]: GETTABLE  R8 R8 K3     ; R8 := R8[0x06d055f9]
 86 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["mNodeTag"]
 87 [-]: EQ        0 R9 K23     ; if R9 ~= nil then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 90
 90 [-]: LOADKB    R9 1 0       ; R9 := true
 91 [-]: GETTABLE  R10 R0 K22   ; R10 := R0["mNodeTag"]
 92 [-]: GETTABLE  R11 R0 K24   ; R11 := R0["mMissionInfo"]
 93 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["location"]
 94 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 95 [-]: SELF      R9 R2 K26    ; R10 := R2; R9 := R2[0x3ad9ed31]
 96 [-]: MOVE      R11 R8       ; R11 := R8
 97 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 98 [-]: GETGLOBAL R10 K27      ; R10 := 0x603636ad
 99 [-]: GETTABLE  R11 R9 K28   ; R11 := R9["locTag"]
100 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0x6d604ba7]
101 [-]: CALL      R11 2 2      ; R11 := R11(R12)
102 [-]: LOADNIL   R12 R12      ; R12 := nil
103 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
104 [-]: GETTABLE  R11 R0 K4    ; R11 := R0["IsLinearEvent"]
105 [-]: TEST      R11 0        ; if not R11 then PC := 114
106 [-]: JMP       114          ; PC := 114
107 [-]: GETGLOBAL R11 K27      ; R11 := 0x603636ad
108 [-]: GETGLOBAL R12 K30      ; R12 := 0x64fb1586
109 [-]: GETTABLE  R13 R0 K31   ; R13 := R0["mDesc"]
110 [-]: CALL      R12 2 2      ; R12 := R12(R13)
111 [-]: LOADNIL   R13 R13      ; R13 := nil
112 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
113 [-]: MOVE      R10 R11      ; R10 := R11
114 [-]: GETGLOBAL R11 K27      ; R11 := 0x603636ad
115 [-]: SELF      R12 R2 K32   ; R13 := R2; R12 := R2[0xc1dee03f]
116 [-]: CALL      R12 2 2      ; R12 := R12(R13)
117 [-]: GETTABLE  R13 R9 K33   ; R13 := R9["region"]
118 [-]: ADD       R13 R13 K34  ; R13 := R13 + 1.000000
119 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
120 [-]: GETTABLE  R12 R12 K35  ; R12 := R12["name"]
121 [-]: LOADNIL   R13 R13      ; R13 := nil
122 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
123 [-]: GETGLOBAL R12 K27      ; R12 := 0x603636ad
124 [-]: LOADK     R13 K36      ; R13 := "/Lotus/Language/Menu/WorldStatePanel_AlertLevelInfo"
125 [-]: NEWTABLE  R14 0 2      ; R14 := {}
126 [-]: GETTABLE  R15 R0 K24   ; R15 := R0["mMissionInfo"]
127 [-]: GETTABLE  R15 R15 K38  ; R15 := R15["minEnemyLevel"]
128 [-]: SETTABLE  R14 K37 R15  ; R14["MIN"] := R15
129 [-]: GETTABLE  R15 R0 K24   ; R15 := R0["mMissionInfo"]
130 [-]: GETTABLE  R15 R15 K40  ; R15 := R15["maxEnemyLevel"]
131 [-]: SETTABLE  R14 K39 R15  ; R14["MAX"] := R15
132 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
133 [-]: LOADK     R13 K6       ; R13 := ""
134 [-]: GETTABLE  R14 R0 K41   ; R14 := R0["mUnlocked"]
135 [-]: TEST      R14 1        ; if R14 then PC := 146
136 [-]: JMP       146          ; PC := 146
137 [-]: LOADK     R14 K42      ; R14 := " <font color=\"#808080\">("
138 [-]: GETGLOBAL R15 K7       ; R15 := 0xae91e43b
139 [-]: SELF      R15 R15 K43  ; R16 := R15; R15 := R15[0x42b04007]
140 [-]: LOADK     R17 K44      ; R17 := "/Lotus/Language/Menu/MissionLocked"
141 [-]: LOADKB    R18 0 0      ; R18 := false
142 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
143 [-]: LOADK     R16 K45      ; R16 := ")</font>"
144 [-]: CONCAT    R13 R14 R16  ; R13 := R14 .. R15 .. R16
145 [-]: JMP       157          ; PC := 157
146 [-]: GETTABLE  R14 R0 K46   ; R14 := R0["mCompleted"]
147 [-]: TEST      R14 0        ; if not R14 then PC := 157
148 [-]: JMP       157          ; PC := 157
149 [-]: LOADK     R14 K47      ; R14 := " <font color=\"#33FF33\">("
150 [-]: GETGLOBAL R15 K7       ; R15 := 0xae91e43b
151 [-]: SELF      R15 R15 K43  ; R16 := R15; R15 := R15[0x42b04007]
152 [-]: LOADK     R17 K48      ; R17 := "/Lotus/Language/Menu/CompletedPersonal"
153 [-]: LOADKB    R18 0 0      ; R18 := false
154 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
155 [-]: LOADK     R16 K45      ; R16 := ")</font>"
156 [-]: CONCAT    R13 R14 R16  ; R13 := R14 .. R15 .. R16
157 [-]: LOADK     R14 K49      ; R14 := "<p><font face=\"Noto Sans\"><b>"
158 [-]: MOVE      R15 R10      ; R15 := R10
159 [-]: LOADK     R16 K50      ; R16 := " ("
160 [-]: MOVE      R17 R11      ; R17 := R11
161 [-]: LOADK     R18 K51      ; R18 := ")"
162 [-]: LOADK     R19 K52      ; R19 := "</b>"
163 [-]: LOADK     R20 K53      ; R20 := "  "
164 [-]: MOVE      R21 R12      ; R21 := R12
165 [-]: MOVE      R22 R13      ; R22 := R13
166 [-]: LOADK     R23 K54      ; R23 := "</font>"
167 [-]: CONCAT    R14 R14 R23  ; R14 := R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21 .. R22 .. R23
168 [-]: GETUPVAL  R15 U0       ; R15 := U0
169 [-]: GETTABLE  R15 R15 K55  ; R15 := R15[0x8a389d5f]
170 [-]: GETTABLE  R16 R0 K24   ; R16 := R0["mMissionInfo"]
171 [-]: CALL      R15 2 2      ; R15 := R15(R16)
172 [-]: GETGLOBAL R16 K27      ; R16 := 0x603636ad
173 [-]: LOADK     R17 K56      ; R17 := "/Lotus/Language/Missions/MissionName_"
174 [-]: MOVE      R18 R15      ; R18 := R15
175 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
176 [-]: LOADKB    R18 0 0      ; R18 := false
177 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
178 [-]: GETTABLE  R17 R0 K57   ; R17 := R0["mMissionName"]
179 [-]: EQ        1 R17 K23    ; if R17 == nil then PC := 182
180 [-]: JMP       182          ; PC := 182
181 [-]: GETTABLE  R16 R0 K57   ; R16 := R0["mMissionName"]
182 [-]: LOADNIL   R17 R17      ; R17 := nil
183 [-]: GETTABLE  R18 R0 K58   ; R18 := R0["EventInfo"]
184 [-]: TEST      R18 0        ; if not R18 then PC := 195
185 [-]: JMP       195          ; PC := 195
186 [-]: GETTABLE  R18 R0 K58   ; R18 := R0["EventInfo"]
187 [-]: GETTABLE  R18 R18 K59  ; R18 := R18["mFomorian"]
188 [-]: TEST      R18 0        ; if not R18 then PC := 195
189 [-]: JMP       195          ; PC := 195
190 [-]: GETUPVAL  R18 U5       ; R18 := U5
191 [-]: GETTABLE  R19 R0 K58   ; R19 := R0["EventInfo"]
192 [-]: CALL      R18 2 2      ; R18 := R18(R19)
193 [-]: MOVE      R17 R18      ; R17 := R18
194 [-]: JMP       201          ; PC := 201
195 [-]: GETGLOBAL R18 K27      ; R18 := 0x603636ad
196 [-]: LOADK     R19 K60      ; R19 := "/Lotus/Language/Menu/MissionBoard_Mission"
197 [-]: NEWTABLE  R20 0 1      ; R20 := {}
198 [-]: SETTABLE  R20 K61 R16  ; R20["MISSION"] := R16
199 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
200 [-]: MOVE      R17 R18      ; R17 := R18
201 [-]: GETGLOBAL R18 K30      ; R18 := 0x64fb1586
202 [-]: MOVE      R19 R8       ; R19 := R8
203 [-]: CALL      R18 2 2      ; R18 := R18(R19)
204 [-]: EQ        0 R18 K6     ; if R18 ~= "" then PC := 214
205 [-]: JMP       214          ; PC := 214
206 [-]: LOADK     R18 K49      ; R18 := "<p><font face=\"Noto Sans\"><b>"
207 [-]: MOVE      R19 R10      ; R19 := R10
208 [-]: LOADK     R20 K52      ; R20 := "</b>"
209 [-]: LOADK     R21 K62      ; R21 := " "
210 [-]: MOVE      R22 R13      ; R22 := R13
211 [-]: LOADK     R23 K54      ; R23 := "</font>"
212 [-]: CONCAT    R14 R18 R23  ; R14 := R18 .. R19 .. R20 .. R21 .. R22 .. R23
213 [-]: JMP       225          ; PC := 225
214 [-]: MOVE      R18 R14      ; R18 := R14
215 [-]: LOADK     R19 K63      ; R19 := "<font color=\"#FFFFFF\"><br>"
216 [-]: GETGLOBAL R20 K27      ; R20 := 0x603636ad
217 [-]: GETTABLE  R21 R0 K64   ; R21 := R0["mTitleName"]
218 [-]: LOADKB    R22 0 0      ; R22 := false
219 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
220 [-]: MOVE      R21 R17      ; R21 := R17
221 [-]: LOADK     R22 K65      ; R22 := "<br>"
222 [-]: GETTABLE  R23 R0 K66   ; R23 := R0["mModifierAuraDesc"]
223 [-]: LOADK     R24 K67      ; R24 := "</font></p>"
224 [-]: CONCAT    R14 R18 R24  ; R14 := R18 .. R19 .. R20 .. R21 .. R22 .. R23 .. R24
225 [-]: GETTABLE  R18 R0 K41   ; R18 := R0["mUnlocked"]
226 [-]: TEST      R18 0        ; if not R18 then PC := 230
227 [-]: JMP       230          ; PC := 230
228 [-]: GETTABLE  R18 R0 K46   ; R18 := R0["mCompleted"]
229 [-]: NOT       R18 R18      ; R18 :=  R18
230 [-]: MOVE      R19 R16      ; R19 := R16
231 [-]: LOADK     R20 K50      ; R20 := " ("
232 [-]: GETTABLE  R21 R0 K24   ; R21 := R0["mMissionInfo"]
233 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["minEnemyLevel"]
234 [-]: LOADK     R22 K68      ; R22 := "-"
235 [-]: GETTABLE  R23 R0 K24   ; R23 := R0["mMissionInfo"]
236 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["maxEnemyLevel"]
237 [-]: LOADK     R24 K51      ; R24 := ")"
238 [-]: CONCAT    R19 R19 R24  ; R19 := R19 .. R20 .. R21 .. R22 .. R23 .. R24
239 [-]: GETGLOBAL R20 K7       ; R20 := 0xae91e43b
240 [-]: SELF      R20 R20 K69  ; R21 := R20; R20 := R20[0xe261aa96]
241 [-]: MOVE      R22 R3       ; R22 := R3
242 [-]: LOADK     R23 K11      ; R23 := "Details.Title"
243 [-]: CONST     R24 29       ; R24 := 29.000000
244 [-]: MOVE      R25 R19      ; R25 := R19
245 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
246 [-]: GETGLOBAL R20 K7       ; R20 := 0xae91e43b
247 [-]: SELF      R20 R20 K70  ; R21 := R20; R20 := R20[0x2ce15376]
248 [-]: MOVE      R22 R3       ; R22 := R3
249 [-]: LOADK     R23 K11      ; R23 := "Details.Title"
250 [-]: CONST     R24 34       ; R24 := 34.000000
251 [-]: CALL      R20 5 2      ; R20 := R20(R21,R22,R23,R24)
252 [-]: GETUPVAL  R21 U1       ; R21 := U1
253 [-]: GETTABLE  R21 R21 K71  ; R21 := R21[0x9f57dd7d]
254 [-]: GETUPVAL  R22 U3       ; R22 := U3
255 [-]: GETTABLE  R22 R22 K14  ; R22 := R22["Content"]
256 [-]: CALL      R21 2 2      ; R21 := R21(R22)
257 [-]: GETUPVAL  R22 U1       ; R22 := U1
258 [-]: GETTABLE  R22 R22 K71  ; R22 := R22[0x9f57dd7d]
259 [-]: GETUPVAL  R23 U3       ; R23 := U3
260 [-]: GETTABLE  R23 R23 K12  ; R23 := R23["FloatingContent"]
261 [-]: CALL      R22 2 2      ; R22 := R22(R23)
262 [-]: LOADK     R23 K72      ; R23 := "<p><font color=\""
263 [-]: MOVE      R24 R21      ; R24 := R21
264 [-]: LOADK     R25 K73      ; R25 := "\">"
265 [-]: MOVE      R26 R10      ; R26 := R10
266 [-]: LOADK     R27 K50      ; R27 := " ("
267 [-]: MOVE      R28 R11      ; R28 := R11
268 [-]: LOADK     R29 K74      ; R29 := ")<br></font>"
269 [-]: CONCAT    R23 R23 R29  ; R23 := R23 .. R24 .. R25 .. R26 .. R27 .. R28 .. R29
270 [-]: MOVE      R24 R23      ; R24 := R23
271 [-]: LOADK     R25 K75      ; R25 := "<font color=\""
272 [-]: MOVE      R26 R22      ; R26 := R22
273 [-]: LOADK     R27 K73      ; R27 := "\">"
274 [-]: GETTABLE  R28 R0 K66   ; R28 := R0["mModifierAuraDesc"]
275 [-]: LOADK     R29 K54      ; R29 := "</font>"
276 [-]: CONCAT    R23 R24 R29  ; R23 := R24 .. R25 .. R26 .. R27 .. R28 .. R29
277 [-]: TEST      R18 0        ; if not R18 then PC := 286
278 [-]: JMP       286          ; PC := 286
279 [-]: MOVE      R24 R23      ; R24 := R23
280 [-]: LOADK     R25 K75      ; R25 := "<font color=\""
281 [-]: MOVE      R26 R21      ; R26 := R21
282 [-]: LOADK     R27 K76      ; R27 := "\"><br>"
283 [-]: GETTABLE  R28 R0 K77   ; R28 := R0["mMissionDesc"]
284 [-]: LOADK     R29 K54      ; R29 := "</font>"
285 [-]: CONCAT    R23 R24 R29  ; R23 := R24 .. R25 .. R26 .. R27 .. R28 .. R29
286 [-]: MOVE      R24 R23      ; R24 := R23
287 [-]: LOADK     R25 K78      ; R25 := "</p>"
288 [-]: CONCAT    R23 R24 R25  ; R23 := R24 .. R25
289 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
290 [-]: SELF      R24 R24 K10  ; R25 := R24; R24 := R24[0xf64b7262]
291 [-]: MOVE      R26 R3       ; R26 := R3
292 [-]: LOADK     R27 K13      ; R27 := "Details.Description"
293 [-]: CONST     R28 1        ; R28 := 1.000000
294 [-]: GETGLOBAL R29 K7       ; R29 := 0xae91e43b
295 [-]: SELF      R29 R29 K70  ; R30 := R29; R29 := R29[0x2ce15376]
296 [-]: MOVE      R31 R3       ; R31 := R3
297 [-]: LOADK     R32 K11      ; R32 := "Details.Title"
298 [-]: CONST     R33 1        ; R33 := 1.000000
299 [-]: CALL      R29 5 2      ; R29 := R29(R30,R31,R32,R33)
300 [-]: ADD       R29 R29 R20  ; R29 := R29 + R20
301 [-]: ADD       R29 R29 K79  ; R29 := R29 + 7.000000
302 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
303 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
304 [-]: SELF      R24 R24 K69  ; R25 := R24; R24 := R24[0xe261aa96]
305 [-]: MOVE      R26 R3       ; R26 := R3
306 [-]: LOADK     R27 K13      ; R27 := "Details.Description"
307 [-]: CONST     R28 29       ; R28 := 29.000000
308 [-]: MOVE      R29 R23      ; R29 := R23
309 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
310 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
311 [-]: SELF      R24 R24 K70  ; R25 := R24; R24 := R24[0x2ce15376]
312 [-]: MOVE      R26 R3       ; R26 := R3
313 [-]: LOADK     R27 K13      ; R27 := "Details.Description"
314 [-]: CONST     R28 34       ; R28 := 34.000000
315 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
316 [-]: GETTABLE  R25 R0 K80   ; R25 := R0["Reward"]
317 [-]: TEST      R25 0        ; if not R25 then PC := 572
318 [-]: JMP       572          ; PC := 572
319 [-]: LOADNIL   R25 R25      ; R25 := nil
320 [-]: GETTABLE  R26 R0 K58   ; R26 := R0["EventInfo"]
321 [-]: TEST      R26 0        ; if not R26 then PC := 329
322 [-]: JMP       329          ; PC := 329
323 [-]: GETTABLE  R26 R0 K58   ; R26 := R0["EventInfo"]
324 [-]: GETTABLE  R26 R26 K81  ; R26 := R26["mBest"]
325 [-]: TEST      R26 0        ; if not R26 then PC := 329
326 [-]: JMP       329          ; PC := 329
327 [-]: GETTABLE  R26 R0 K58   ; R26 := R0["EventInfo"]
328 [-]: GETTABLE  R25 R26 K82  ; R25 := R26["mGoal"]
329 [-]: CONST     R26 60       ; R26 := 60.000000
330 [-]: MOVE      R27 R3       ; R27 := R3
331 [-]: LOADK     R28 K84      ; R28 := ".Reward"
332 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
333 [-]: SETTABLE  R0 K83 R27   ; R0["mRewardClipName"] := R27
334 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
335 [-]: SELF      R27 R27 K85  ; R28 := R27; R27 := R27[0x91a24e4b]
336 [-]: MOVE      R29 R3       ; R29 := R3
337 [-]: LOADK     R30 K86      ; R30 := ".Details"
338 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
339 [-]: CONST     R30 1        ; R30 := 1.000000
340 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
341 [-]: GETGLOBAL R28 K7       ; R28 := 0xae91e43b
342 [-]: SELF      R28 R28 K87  ; R29 := R28; R28 := R28[0x67bc869f]
343 [-]: GETTABLE  R30 R0 K83   ; R30 := R0["mRewardClipName"]
344 [-]: CONST     R31 1        ; R31 := 1.000000
345 [-]: ADD       R32 R27 R26  ; R32 := R27 + R26
346 [-]: SUB       R32 R32 K88  ; R32 := R32 - 50.000000
347 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
348 [-]: GETUPVAL  R28 U6       ; R28 := U6
349 [-]: MOVE      R29 R0       ; R29 := R0
350 [-]: MOVE      R30 R25      ; R30 := R25
351 [-]: CALL      R28 3 1      ; R28(R29,R30)
352 [-]: LOADKB    R28 0 0      ; R28 := false
353 [-]: GETTABLE  R29 R0 K4    ; R29 := R0["IsLinearEvent"]
354 [-]: TEST      R29 0        ; if not R29 then PC := 550
355 [-]: JMP       550          ; PC := 550
356 [-]: GETTABLE  R29 R0 K58   ; R29 := R0["EventInfo"]
357 [-]: GETTABLE  R29 R29 K82  ; R29 := R29["mGoal"]
358 [-]: GETTABLE  R30 R0 K58   ; R30 := R0["EventInfo"]
359 [-]: GETTABLE  R30 R30 K89  ; R30 := R30["mConcurrentMissionKeyNames"]
360 [-]: LEN       R30 R30      ; R30 := # R30
361 [-]: ADD       R30 R30 K34  ; R30 := R30 + 1.000000
362 [-]: LT        0 R30 R29    ; if R30 >= R29 then PC := 550
363 [-]: JMP       550          ; PC := 550
364 [-]: GETTABLE  R29 R0 K41   ; R29 := R0["mUnlocked"]
365 [-]: TESTSET   R28 R29 0    ; if not R29 then PC := 374 else R28 := R29
366 [-]: JMP       374          ; PC := 374
367 [-]: GETTABLE  R29 R0 K46   ; R29 := R0["mCompleted"]
368 [-]: TEST      R29 0        ; if not R29 then PC := 373
369 [-]: JMP       373          ; PC := 373
370 [-]: GETTABLE  R28 R0 K90   ; R28 := R0["mIsFinalMission"]
371 [-]: JMP       374          ; PC := 374
372 [-]: LOADKB    R28 0 1      ; R28 := false; PC := 373
373 [-]: LOADKB    R28 1 0      ; R28 := true
374 [-]: TEST      R28 0        ; if not R28 then PC := 534
375 [-]: JMP       534          ; PC := 534
376 [-]: LOADK     R29 K6       ; R29 := ""
377 [-]: CONST     R30 0        ; R30 := 0.000000
378 [-]: GETTABLE  R31 R0 K58   ; R31 := R0["EventInfo"]
379 [-]: GETTABLE  R31 R31 K81  ; R31 := R31["mBest"]
380 [-]: TEST      R31 0        ; if not R31 then PC := 397
381 [-]: JMP       397          ; PC := 397
382 [-]: GETGLOBAL R31 K7       ; R31 := 0xae91e43b
383 [-]: SELF      R31 R31 K15  ; R32 := R31; R31 := R31[0xc0a3774b]
384 [-]: MOVE      R33 R3       ; R33 := R3
385 [-]: LOADK     R34 K91      ; R34 := "LinearEventProgress.Bg"
386 [-]: CONST     R35 11       ; R35 := 11.000000
387 [-]: LOADKB    R36 0 0      ; R36 := false
388 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
389 [-]: GETGLOBAL R31 K7       ; R31 := 0xae91e43b
390 [-]: SELF      R31 R31 K15  ; R32 := R31; R31 := R31[0xc0a3774b]
391 [-]: MOVE      R33 R3       ; R33 := R3
392 [-]: LOADK     R34 K92      ; R34 := "LinearEventProgress.Fill"
393 [-]: CONST     R35 11       ; R35 := 11.000000
394 [-]: LOADKB    R36 0 0      ; R36 := false
395 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
396 [-]: JMP       401          ; PC := 401
397 [-]: GETTABLE  R31 R0 K93   ; R31 := R0["Count"]
398 [-]: LOADK     R32 K94      ; R32 := " / "
399 [-]: GETTABLE  R33 R0 K95   ; R33 := R0["Goal"]
400 [-]: CONCAT    R29 R31 R33  ; R29 := R31 .. R32 .. R33
401 [-]: GETTABLE  R31 R0 K58   ; R31 := R0["EventInfo"]
402 [-]: GETTABLE  R31 R31 K96  ; R31 := R31["mScoreLocTag"]
403 [-]: EQ        1 R31 K6     ; if R31 == "" then PC := 450
404 [-]: JMP       450          ; PC := 450
405 [-]: GETTABLE  R31 R0 K58   ; R31 := R0["EventInfo"]
406 [-]: GETTABLE  R31 R31 K97  ; R31 := R31["mClanGoal"]
407 [-]: LEN       R31 R31      ; R31 := # R31
408 [-]: LT        0 K98 R31    ; if 0.000000 >= R31 then PC := 434
409 [-]: JMP       434          ; PC := 434
410 [-]: GETUPVAL  R31 U7       ; R31 := U7
411 [-]: SELF      R31 R31 K99  ; R32 := R31; R31 := R31[0x713ce380]
412 [-]: CALL      R31 2 2      ; R31 := R31(R32)
413 [-]: EQ        1 R31 K6     ; if R31 == "" then PC := 434
414 [-]: JMP       434          ; PC := 434
415 [-]: MOVE      R31 R29      ; R31 := R29
416 [-]: LOADK     R32 K62      ; R32 := " "
417 [-]: GETGLOBAL R33 K27      ; R33 := 0x603636ad
418 [-]: GETTABLE  R34 R0 K58   ; R34 := R0["EventInfo"]
419 [-]: GETTABLE  R34 R34 K96  ; R34 := R34["mScoreLocTag"]
420 [-]: LOADKB    R35 0 0      ; R35 := false
421 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
422 [-]: LOADK     R34 K62      ; R34 := " "
423 [-]: GETGLOBAL R35 K27      ; R35 := 0x603636ad
424 [-]: LOADK     R36 K100     ; R36 := "/Lotus/Language/Menu/WorldStateClanEventProgress"
425 [-]: NEWTABLE  R37 0 1      ; R37 := {}
426 [-]: GETUPVAL  R38 U7       ; R38 := U7
427 [-]: SELF      R38 R38 K102 ; R39 := R38; R38 := R38[0x6da6e186]
428 [-]: CALL      R38 2 2      ; R38 := R38(R39)
429 [-]: SETTABLE  R37 K101 R38 ; R37["CLAN_NAME"] := R38
430 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
431 [-]: CONCAT    R29 R31 R35  ; R29 := R31 .. R32 .. R33 .. R34 .. R35
432 [-]: CONST     R30 15       ; R30 := 15.000000
433 [-]: JMP       450          ; PC := 450
434 [-]: MOVE      R31 R29      ; R31 := R29
435 [-]: LOADK     R32 K62      ; R32 := " "
436 [-]: GETGLOBAL R33 K27      ; R33 := 0x603636ad
437 [-]: GETTABLE  R34 R0 K58   ; R34 := R0["EventInfo"]
438 [-]: GETTABLE  R34 R34 K96  ; R34 := R34["mScoreLocTag"]
439 [-]: GETUPVAL  R35 U1       ; R35 := U1
440 [-]: GETTABLE  R35 R35 K3   ; R35 := R35[0x06d055f9]
441 [-]: GETTABLE  R36 R0 K58   ; R36 := R0["EventInfo"]
442 [-]: GETTABLE  R36 R36 K81  ; R36 := R36["mBest"]
443 [-]: NEWTABLE  R37 0 1      ; R37 := {}
444 [-]: GETTABLE  R38 R0 K104  ; R38 := R0["Best"]
445 [-]: SETTABLE  R37 K103 R38 ; R37["VALUE"] := R38
446 [-]: LOADNIL   R38 R38      ; R38 := nil
447 [-]: CALL      R35 4 0      ; R35,... := R35(R36,R37,R38)
448 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
449 [-]: CONCAT    R29 R31 R33  ; R29 := R31 .. R32 .. R33
450 [-]: GETTABLE  R31 R0 K90   ; R31 := R0["mIsFinalMission"]
451 [-]: TEST      R31 0        ; if not R31 then PC := 468
452 [-]: JMP       468          ; PC := 468
453 [-]: GETTABLE  R31 R0 K58   ; R31 := R0["EventInfo"]
454 [-]: GETTABLE  R31 R31 K105 ; R31 := R31["mScoreMaxNode"]
455 [-]: SELF      R31 R31 K106 ; R32 := R31; R31 := R31[0x56c01834]
456 [-]: CALL      R31 2 2      ; R31 := R31(R32)
457 [-]: TEST      R31 0        ; if not R31 then PC := 468
458 [-]: JMP       468          ; PC := 468
459 [-]: MOVE      R31 R29      ; R31 := R29
460 [-]: LOADK     R32 K107     ; R32 := " | "
461 [-]: GETGLOBAL R33 K27      ; R33 := 0x603636ad
462 [-]: LOADK     R34 K108     ; R34 := "/Lotus/Language/Menu/WorldStateBest"
463 [-]: NEWTABLE  R35 0 1      ; R35 := {}
464 [-]: GETTABLE  R36 R0 K104  ; R36 := R0["Best"]
465 [-]: SETTABLE  R35 K103 R36 ; R35["VALUE"] := R36
466 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
467 [-]: CONCAT    R29 R31 R33  ; R29 := R31 .. R32 .. R33
468 [-]: GETGLOBAL R31 K7       ; R31 := 0xae91e43b
469 [-]: SELF      R31 R31 K10  ; R32 := R31; R31 := R31[0xf64b7262]
470 [-]: MOVE      R33 R3       ; R33 := R3
471 [-]: LOADK     R34 K109     ; R34 := "LinearEventScore"
472 [-]: CONST     R35 1        ; R35 := 1.000000
473 [-]: ADD       R36 R27 R26  ; R36 := R27 + R26
474 [-]: ADD       R36 R36 K110 ; R36 := R36 + 15.000000
475 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
476 [-]: GETGLOBAL R31 K7       ; R31 := 0xae91e43b
477 [-]: SELF      R31 R31 K69  ; R32 := R31; R31 := R31[0xe261aa96]
478 [-]: MOVE      R33 R3       ; R33 := R3
479 [-]: LOADK     R34 K109     ; R34 := "LinearEventScore"
480 [-]: CONST     R35 29       ; R35 := 29.000000
481 [-]: MOVE      R36 R29      ; R36 := R29
482 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
483 [-]: ADD       R26 R26 K111 ; R26 := R26 + 25.000000
484 [-]: LT        0 K98 R30    ; if 0.000000 >= R30 then PC := 500
485 [-]: JMP       500          ; PC := 500
486 [-]: GETGLOBAL R31 K7       ; R31 := 0xae91e43b
487 [-]: SELF      R31 R31 K10  ; R32 := R31; R31 := R31[0xf64b7262]
488 [-]: MOVE      R33 R3       ; R33 := R3
489 [-]: LOADK     R34 K92      ; R34 := "LinearEventProgress.Fill"
490 [-]: CONST     R35 1        ; R35 := 1.000000
491 [-]: ADD       R36 R27 R30  ; R36 := R27 + R30
492 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
493 [-]: GETGLOBAL R31 K7       ; R31 := 0xae91e43b
494 [-]: SELF      R31 R31 K10  ; R32 := R31; R31 := R31[0xf64b7262]
495 [-]: MOVE      R33 R3       ; R33 := R3
496 [-]: LOADK     R34 K91      ; R34 := "LinearEventProgress.Bg"
497 [-]: CONST     R35 1        ; R35 := 1.000000
498 [-]: ADD       R36 R27 R30  ; R36 := R27 + R30
499 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
500 [-]: GETGLOBAL R31 K112     ; R31 := 0x42dcc9f5
501 [-]: GETTABLE  R32 R0 K93   ; R32 := R0["Count"]
502 [-]: GETTABLE  R33 R0 K95   ; R33 := R0["Goal"]
503 [-]: DIV       R32 R32 R33  ; R32 := R32 / R33
504 [-]: CONST     R33 0        ; R33 := 0.000000
505 [-]: CONST     R34 1        ; R34 := 1.000000
506 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
507 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
508 [-]: SELF      R32 R32 K85  ; R33 := R32; R32 := R32[0x91a24e4b]
509 [-]: MOVE      R34 R3       ; R34 := R3
510 [-]: LOADK     R35 K113     ; R35 := ".LinearEventProgress.Bg"
511 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
512 [-]: CONST     R35 12       ; R35 := 12.000000
513 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
514 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
515 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
516 [-]: MOVE      R35 R3       ; R35 := R3
517 [-]: LOADK     R36 K92      ; R36 := "LinearEventProgress.Fill"
518 [-]: CONST     R37 12       ; R37 := 12.000000
519 [-]: GETGLOBAL R38 K114     ; R38 := 0x5bced4c4
520 [-]: GETTABLE  R38 R38 K115 ; R38 := R38[0xb62ecfe0]
521 [-]: MUL       R39 R31 R32  ; R39 := R31 * R32
522 [-]: LOADK     R40 K116     ; R40 := 0.001000
523 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
524 [-]: CALL      R33 0 1      ; R33(R34,...)
525 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
526 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
527 [-]: MOVE      R35 R3       ; R35 := R3
528 [-]: LOADK     R36 K117     ; R36 := "LinearEventProgress"
529 [-]: CONST     R37 1        ; R37 := 1.000000
530 [-]: ADD       R38 R27 R26  ; R38 := R27 + R26
531 [-]: ADD       R38 R38 K110 ; R38 := R38 + 15.000000
532 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
533 [-]: ADD       R26 R26 K118 ; R26 := R26 + 5.000000
534 [-]: GETTABLE  R33 R0 K58   ; R33 := R0["EventInfo"]
535 [-]: GETTABLE  R33 R33 K89  ; R33 := R33["mConcurrentMissionKeyNames"]
536 [-]: LEN       R33 R33      ; R33 := # R33
537 [-]: EQ        1 R33 K98    ; if R33 == 0.000000 then PC := 543
538 [-]: JMP       543          ; PC := 543
539 [-]: GETTABLE  R33 R0 K58   ; R33 := R0["EventInfo"]
540 [-]: GETTABLE  R33 R33 K81  ; R33 := R33["mBest"]
541 [-]: TEST      R33 0        ; if not R33 then PC := 550
542 [-]: JMP       550          ; PC := 550
543 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
544 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33[0xc0a3774b]
545 [-]: MOVE      R35 R3       ; R35 := R3
546 [-]: LOADK     R36 K119     ; R36 := "Progress.Step"
547 [-]: CONST     R37 11       ; R37 := 11.000000
548 [-]: LOADKB    R38 0 0      ; R38 := false
549 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
550 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
551 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33[0xc0a3774b]
552 [-]: MOVE      R35 R3       ; R35 := R3
553 [-]: LOADK     R36 K109     ; R36 := "LinearEventScore"
554 [-]: CONST     R37 11       ; R37 := 11.000000
555 [-]: MOVE      R38 R28      ; R38 := R28
556 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
557 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
558 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33[0xc0a3774b]
559 [-]: MOVE      R35 R3       ; R35 := R3
560 [-]: LOADK     R36 K117     ; R36 := "LinearEventProgress"
561 [-]: CONST     R37 11       ; R37 := 11.000000
562 [-]: MOVE      R38 R28      ; R38 := R28
563 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
564 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
565 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33[0xc0a3774b]
566 [-]: MOVE      R35 R3       ; R35 := R3
567 [-]: LOADK     R36 K119     ; R36 := "Progress.Step"
568 [-]: CONST     R37 11       ; R37 := 11.000000
569 [-]: LOADKB    R38 1 0      ; R38 := true
570 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
571 [-]: JMP       593          ; PC := 593
572 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
573 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33[0xc0a3774b]
574 [-]: MOVE      R35 R3       ; R35 := R3
575 [-]: LOADK     R36 K80      ; R36 := "Reward"
576 [-]: CONST     R37 11       ; R37 := 11.000000
577 [-]: LOADKB    R38 0 0      ; R38 := false
578 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
579 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
580 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33[0xc0a3774b]
581 [-]: MOVE      R35 R3       ; R35 := R3
582 [-]: LOADK     R36 K91      ; R36 := "LinearEventProgress.Bg"
583 [-]: CONST     R37 11       ; R37 := 11.000000
584 [-]: LOADKB    R38 0 0      ; R38 := false
585 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
586 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
587 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33[0xc0a3774b]
588 [-]: MOVE      R35 R3       ; R35 := R3
589 [-]: LOADK     R36 K92      ; R36 := "LinearEventProgress.Fill"
590 [-]: CONST     R37 11       ; R37 := 11.000000
591 [-]: LOADKB    R38 0 0      ; R38 := false
592 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
593 [-]: GETGLOBAL R33 K114     ; R33 := 0x5bced4c4
594 [-]: GETTABLE  R33 R33 K115 ; R33 := R33[0xb62ecfe0]
595 [-]: CONST     R34 108      ; R34 := 108.000000
596 [-]: ADD       R35 K121 R20 ; R35 := 35.000000 + R20
597 [-]: ADD       R35 R35 R24  ; R35 := R35 + R24
598 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
599 [-]: SETTABLE  R0 K120 R33  ; R0["TotalHeight"] := R33
600 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
601 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
602 [-]: GETTABLE  R35 R0 K2    ; R35 := R0["mClipName"]
603 [-]: LOADK     R36 K122     ; R36 := "Outline"
604 [-]: CONST     R37 13       ; R37 := 13.000000
605 [-]: GETTABLE  R38 R0 K120  ; R38 := R0["TotalHeight"]
606 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
607 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
608 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
609 [-]: GETTABLE  R35 R0 K2    ; R35 := R0["mClipName"]
610 [-]: LOADK     R36 K123     ; R36 := "Btn"
611 [-]: CONST     R37 13       ; R37 := 13.000000
612 [-]: GETTABLE  R38 R0 K120  ; R38 := R0["TotalHeight"]
613 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
614 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
615 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
616 [-]: GETTABLE  R35 R0 K2    ; R35 := R0["mClipName"]
617 [-]: LOADK     R36 K124     ; R36 := "Highlight"
618 [-]: CONST     R37 1        ; R37 := 1.000000
619 [-]: GETTABLE  R38 R0 K120  ; R38 := R0["TotalHeight"]
620 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
621 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
622 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
623 [-]: MOVE      R35 R3       ; R35 := R3
624 [-]: LOADK     R36 K125     ; R36 := "Progress"
625 [-]: CONST     R37 1        ; R37 := 1.000000
626 [-]: GETTABLE  R38 R0 K120  ; R38 := R0["TotalHeight"]
627 [-]: DIV       R38 R38 K126 ; R38 := R38 / 2.000000
628 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
629 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
630 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
631 [-]: MOVE      R35 R3       ; R35 := R3
632 [-]: LOADK     R36 K127     ; R36 := "Details"
633 [-]: CONST     R37 1        ; R37 := 1.000000
634 [-]: GETTABLE  R38 R0 K120  ; R38 := R0["TotalHeight"]
635 [-]: DIV       R38 R38 K126 ; R38 := R38 / 2.000000
636 [-]: ADD       R39 R20 R24  ; R39 := R20 + R24
637 [-]: ADD       R39 R39 K128 ; R39 := R39 + 12.000000
638 [-]: DIV       R39 R39 K126 ; R39 := R39 / 2.000000
639 [-]: SUB       R38 R38 R39  ; R38 := R38 - R39
640 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
641 [-]: GETGLOBAL R33 K114     ; R33 := 0x5bced4c4
642 [-]: GETTABLE  R33 R33 K115 ; R33 := R33[0xb62ecfe0]
643 [-]: GETTABLE  R34 R0 K120  ; R34 := R0["TotalHeight"]
644 [-]: SUB       R34 R34 K126 ; R34 := R34 - 2.000000
645 [-]: GETUPVAL  R35 U8       ; R35 := U8
646 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
647 [-]: GETGLOBAL R34 K7       ; R34 := 0xae91e43b
648 [-]: SELF      R34 R34 K10  ; R35 := R34; R34 := R34[0xf64b7262]
649 [-]: MOVE      R36 R3       ; R36 := R3
650 [-]: LOADK     R37 K19      ; R37 := "Progress.Image"
651 [-]: CONST     R38 12       ; R38 := 12.000000
652 [-]: MOVE      R39 R33      ; R39 := R33
653 [-]: CALL      R34 6 1      ; R34(R35,R36,R37,R38,R39)
654 [-]: GETGLOBAL R34 K7       ; R34 := 0xae91e43b
655 [-]: SELF      R34 R34 K10  ; R35 := R34; R34 := R34[0xf64b7262]
656 [-]: MOVE      R36 R3       ; R36 := R3
657 [-]: LOADK     R37 K19      ; R37 := "Progress.Image"
658 [-]: CONST     R38 13       ; R38 := 13.000000
659 [-]: MOVE      R39 R33      ; R39 := R33
660 [-]: CALL      R34 6 1      ; R34(R35,R36,R37,R38,R39)
661 [-]: GETUPVAL  R34 U9       ; R34 := U9
662 [-]: MOVE      R35 R0       ; R35 := R0
663 [-]: MOVE      R36 R3       ; R36 := R3
664 [-]: CALL      R34 3 1      ; R34(R35,R36)
665 [-]: GETGLOBAL R34 K7       ; R34 := 0xae91e43b
666 [-]: SELF      R34 R34 K129 ; R35 := R34; R34 := R34[0xef99134f]
667 [-]: MOVE      R36 R3       ; R36 := R3
668 [-]: LOADK     R37 K130     ; R37 := ".Progress.Image"
669 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
670 [-]: GETTABLE  R37 R0 K131  ; R37 := R0["mLocationTexture"]
671 [-]: GETGLOBAL R38 K132     ; R38 := 0x1a1539ea
672 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
673 [-]: GETTABLE  R34 R0 K120  ; R34 := R0["TotalHeight"]
674 [-]: SUB       R34 R34 K133 ; R34 := R34 - 8.000000
675 [-]: MUL       R34 R34 K134 ; R34 := R34 * 1.070000
676 [-]: DIV       R35 R34 R33  ; R35 := R34 / R33
677 [-]: DIV       R35 K34 R35  ; R35 := 1.000000 / R35
678 [-]: SUB       R36 R35 K34  ; R36 := R35 - 1.000000
679 [-]: DIV       R36 R36 K126 ; R36 := R36 / 2.000000
680 [-]: UNM       R36 R36      ; R36 :=  R36
681 [-]: GETUPVAL  R37 U8       ; R37 := U8
682 [-]: MUL       R37 R37 K134 ; R37 := R37 * 1.070000
683 [-]: DIV       R38 R37 R33  ; R38 := R37 / R33
684 [-]: DIV       R38 K34 R38  ; R38 := 1.000000 / R38
685 [-]: SUB       R39 R38 K34  ; R39 := R38 - 1.000000
686 [-]: DIV       R39 R39 K126 ; R39 := R39 / 2.000000
687 [-]: UNM       R39 R39      ; R39 :=  R39
688 [-]: GETGLOBAL R40 K7       ; R40 := 0xae91e43b
689 [-]: SELF      R40 R40 K135 ; R41 := R40; R40 := R40[0x91e13703]
690 [-]: MOVE      R42 R3       ; R42 := R3
691 [-]: LOADK     R43 K130     ; R43 := ".Progress.Image"
692 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
693 [-]: LOADK     R43 K136     ; R43 := "MaskScale"
694 [-]: MOVE      R44 R38      ; R44 := R38
695 [-]: MOVE      R45 R35      ; R45 := R35
696 [-]: CONST     R46 0        ; R46 := 0.000000
697 [-]: CONST     R47 0        ; R47 := 0.000000
698 [-]: CALL      R40 8 1      ; R40(R41,R42,R43,R44,R45,R46,R47)
699 [-]: GETGLOBAL R40 K7       ; R40 := 0xae91e43b
700 [-]: SELF      R40 R40 K135 ; R41 := R40; R40 := R40[0x91e13703]
701 [-]: MOVE      R42 R3       ; R42 := R3
702 [-]: LOADK     R43 K130     ; R43 := ".Progress.Image"
703 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
704 [-]: LOADK     R43 K137     ; R43 := "MaskOffset"
705 [-]: MOVE      R44 R39      ; R44 := R39
706 [-]: MOVE      R45 R36      ; R45 := R36
707 [-]: CONST     R46 0        ; R46 := 0.000000
708 [-]: CONST     R47 0        ; R47 := 0.000000
709 [-]: CALL      R40 8 1      ; R40(R41,R42,R43,R44,R45,R46,R47)
710 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 2587
; #Upvalues:       10
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x5e35d4d6]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0x06d055f9]
 13 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["IsLinearEvent"]
 14 [-]: LOADK     R6 K5        ; R6 := ".LinearEvent"
 15 [-]: LOADK     R7 K6        ; R7 := ""
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 18 [-]: CONST     R4 1         ; R4 := 1.000000
 19 [-]: GETUPVAL  R5 U2        ; R5 := U2
 20 [-]: LEN       R5 R5        ; R5 := # R5
 21 [-]: CONST     R6 1         ; R6 := 1.000000
 22 [-]: FORPREP   R4 31        ; R4 -= R6; PC := 31
 23 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 24 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0xd5181643]
 25 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
 26 [-]: GETUPVAL  R11 U2       ; R11 := U2
 27 [-]: GETTABLE  R11 R11 R7   ; R11 := R11[R7]
 28 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 29 [-]: GETGLOBAL R11 K9       ; R11 := 0x3f56a9a5
 30 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 31 [-]: FORLOOP   R4 23        ; R4 += R6; if R4 <= R5 then begin PC := 23; R7 := R4 end
 32 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 33 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 34 [-]: MOVE      R10 R3       ; R10 := R3
 35 [-]: LOADK     R11 K11      ; R11 := "Details.Title"
 36 [-]: CONST     R12 36       ; R12 := 36.000000
 37 [-]: GETUPVAL  R13 U3       ; R13 := U3
 38 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["FloatingContent"]
 39 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 40 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 41 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 42 [-]: MOVE      R10 R3       ; R10 := R3
 43 [-]: LOADK     R11 K13      ; R11 := "Details.Description"
 44 [-]: CONST     R12 36       ; R12 := 36.000000
 45 [-]: GETUPVAL  R13 U3       ; R13 := U3
 46 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["Content"]
 47 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 48 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 49 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0xc0a3774b]
 50 [-]: MOVE      R10 R3       ; R10 := R3
 51 [-]: LOADK     R11 K16      ; R11 := "ModifiersInfo"
 52 [-]: CONST     R12 11       ; R12 := 11.000000
 53 [-]: GETTABLE  R13 R0 K17   ; R13 := R0["mIsModifiersHint"]
 54 [-]: EQ        1 R13 K18    ; if R13 == nil then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: GETTABLE  R13 R0 K17   ; R13 := R0["mIsModifiersHint"]
 57 [-]: JMP       60           ; PC := 60
 58 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 59
 59 [-]: LOADKB    R13 1 0      ; R13 := true
 60 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 61 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 62 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0xc0a3774b]
 63 [-]: MOVE      R10 R3       ; R10 := R3
 64 [-]: LOADK     R11 K19      ; R11 := "StepLine"
 65 [-]: CONST     R12 11       ; R12 := 11.000000
 66 [-]: GETTABLE  R13 R0 K20   ; R13 := R0["mIsUnlockHint"]
 67 [-]: TEST      R13 1        ; if R13 then PC := 72
 68 [-]: JMP       72           ; PC := 72
 69 [-]: GETTABLE  R13 R0 K17   ; R13 := R0["mIsModifiersHint"]
 70 [-]: NOT       R13 R13      ; R13 :=  R13
 71 [-]: JMP       74           ; PC := 74
 72 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 73
 73 [-]: LOADKB    R13 1 0      ; R13 := true
 74 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 75 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 76 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xf64b7262]
 77 [-]: MOVE      R10 R3       ; R10 := R3
 78 [-]: LOADK     R11 K21      ; R11 := "Progress.Image"
 79 [-]: CONST     R12 9        ; R12 := 9.000000
 80 [-]: GETUPVAL  R13 U1       ; R13 := U1
 81 [-]: GETTABLE  R13 R13 K3   ; R13 := R13[0x06d055f9]
 82 [-]: GETTABLE  R14 R0 K20   ; R14 := R0["mIsUnlockHint"]
 83 [-]: GETUPVAL  R15 U3       ; R15 := U3
 84 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["FloatingContent"]
 85 [-]: GETGLOBAL R16 K22      ; R16 := 0x0032441c
 86 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["UIColor_White"]
 87 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 88 [-]: CALL      R8 0 1       ; R8(R9,...)
 89 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["mIsUnlockHint"]
 90 [-]: TEST      R8 0         ; if not R8 then PC := 98
 91 [-]: JMP       98           ; PC := 98
 92 [-]: GETUPVAL  R8 U4        ; R8 := U4
 93 [-]: MOVE      R9 R0        ; R9 := R0
 94 [-]: LOADKB    R10 1 0      ; R10 := true
 95 [-]: CALL      R8 3 1       ; R8(R9,R10)
 96 [-]: RETURN    R0 1         ; return 
 97 [-]: JMP       105          ; PC := 105
 98 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mIsModifiersHint"]
 99 [-]: TEST      R8 0         ; if not R8 then PC := 105
100 [-]: JMP       105          ; PC := 105
101 [-]: GETUPVAL  R8 U5        ; R8 := U5
102 [-]: MOVE      R9 R0        ; R9 := R0
103 [-]: CALL      R8 2 1       ; R8(R9)
104 [-]: RETURN    R0 1         ; return 
105 [-]: GETUPVAL  R8 U1        ; R8 := U1
106 [-]: GETTABLE  R8 R8 K3     ; R8 := R8[0x06d055f9]
107 [-]: GETTABLE  R9 R0 K24    ; R9 := R0["mNodeTag"]
108 [-]: EQ        0 R9 K18     ; if R9 ~= nil then PC := 111
109 [-]: JMP       111          ; PC := 111
110 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 111
111 [-]: LOADKB    R9 1 0       ; R9 := true
112 [-]: GETTABLE  R10 R0 K24   ; R10 := R0["mNodeTag"]
113 [-]: GETTABLE  R11 R0 K25   ; R11 := R0["mMissionInfo"]
114 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["location"]
115 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
116 [-]: SELF      R9 R2 K27    ; R10 := R2; R9 := R2[0x3ad9ed31]
117 [-]: MOVE      R11 R8       ; R11 := R8
118 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
119 [-]: GETGLOBAL R10 K28      ; R10 := 0x603636ad
120 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["locTag"]
121 [-]: SELF      R11 R11 K30  ; R12 := R11; R11 := R11[0x6d604ba7]
122 [-]: CALL      R11 2 2      ; R11 := R11(R12)
123 [-]: LOADNIL   R12 R12      ; R12 := nil
124 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
125 [-]: GETTABLE  R11 R0 K4    ; R11 := R0["IsLinearEvent"]
126 [-]: TEST      R11 0        ; if not R11 then PC := 135
127 [-]: JMP       135          ; PC := 135
128 [-]: GETGLOBAL R11 K28      ; R11 := 0x603636ad
129 [-]: GETGLOBAL R12 K31      ; R12 := 0x64fb1586
130 [-]: GETTABLE  R13 R0 K32   ; R13 := R0["mDesc"]
131 [-]: CALL      R12 2 2      ; R12 := R12(R13)
132 [-]: LOADNIL   R13 R13      ; R13 := nil
133 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
134 [-]: MOVE      R10 R11      ; R10 := R11
135 [-]: GETGLOBAL R11 K28      ; R11 := 0x603636ad
136 [-]: SELF      R12 R2 K33   ; R13 := R2; R12 := R2[0xc1dee03f]
137 [-]: CALL      R12 2 2      ; R12 := R12(R13)
138 [-]: GETTABLE  R13 R9 K34   ; R13 := R9["region"]
139 [-]: ADD       R13 R13 K35  ; R13 := R13 + 1.000000
140 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
141 [-]: GETTABLE  R12 R12 K36  ; R12 := R12["name"]
142 [-]: LOADNIL   R13 R13      ; R13 := nil
143 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
144 [-]: GETGLOBAL R12 K28      ; R12 := 0x603636ad
145 [-]: LOADK     R13 K37      ; R13 := "/Lotus/Language/Menu/WorldStatePanel_AlertLevelInfo"
146 [-]: NEWTABLE  R14 0 2      ; R14 := {}
147 [-]: GETTABLE  R15 R0 K25   ; R15 := R0["mMissionInfo"]
148 [-]: GETTABLE  R15 R15 K39  ; R15 := R15["minEnemyLevel"]
149 [-]: SETTABLE  R14 K38 R15  ; R14["MIN"] := R15
150 [-]: GETTABLE  R15 R0 K25   ; R15 := R0["mMissionInfo"]
151 [-]: GETTABLE  R15 R15 K41  ; R15 := R15["maxEnemyLevel"]
152 [-]: SETTABLE  R14 K40 R15  ; R14["MAX"] := R15
153 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
154 [-]: LOADK     R13 K6       ; R13 := ""
155 [-]: GETTABLE  R14 R0 K42   ; R14 := R0["mUnlocked"]
156 [-]: TEST      R14 1        ; if R14 then PC := 167
157 [-]: JMP       167          ; PC := 167
158 [-]: LOADK     R14 K43      ; R14 := " <font color=\"#808080\">("
159 [-]: GETGLOBAL R15 K7       ; R15 := 0xae91e43b
160 [-]: SELF      R15 R15 K44  ; R16 := R15; R15 := R15[0x42b04007]
161 [-]: LOADK     R17 K45      ; R17 := "/Lotus/Language/Menu/MissionLocked"
162 [-]: LOADKB    R18 0 0      ; R18 := false
163 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
164 [-]: LOADK     R16 K46      ; R16 := ")</font>"
165 [-]: CONCAT    R13 R14 R16  ; R13 := R14 .. R15 .. R16
166 [-]: JMP       178          ; PC := 178
167 [-]: GETTABLE  R14 R0 K47   ; R14 := R0["mCompleted"]
168 [-]: TEST      R14 0        ; if not R14 then PC := 178
169 [-]: JMP       178          ; PC := 178
170 [-]: LOADK     R14 K48      ; R14 := " <font color=\"#33FF33\">("
171 [-]: GETGLOBAL R15 K7       ; R15 := 0xae91e43b
172 [-]: SELF      R15 R15 K44  ; R16 := R15; R15 := R15[0x42b04007]
173 [-]: LOADK     R17 K49      ; R17 := "/Lotus/Language/Menu/CompletedPersonal"
174 [-]: LOADKB    R18 0 0      ; R18 := false
175 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
176 [-]: LOADK     R16 K46      ; R16 := ")</font>"
177 [-]: CONCAT    R13 R14 R16  ; R13 := R14 .. R15 .. R16
178 [-]: GETUPVAL  R14 U0       ; R14 := U0
179 [-]: GETTABLE  R14 R14 K50  ; R14 := R14[0x8a389d5f]
180 [-]: GETTABLE  R15 R0 K25   ; R15 := R0["mMissionInfo"]
181 [-]: CALL      R14 2 2      ; R14 := R14(R15)
182 [-]: GETGLOBAL R15 K28      ; R15 := 0x603636ad
183 [-]: LOADK     R16 K51      ; R16 := "/Lotus/Language/Missions/MissionName_"
184 [-]: MOVE      R17 R14      ; R17 := R14
185 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
186 [-]: LOADKB    R17 0 0      ; R17 := false
187 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
188 [-]: GETTABLE  R16 R0 K52   ; R16 := R0["mMissionName"]
189 [-]: EQ        1 R16 K18    ; if R16 == nil then PC := 192
190 [-]: JMP       192          ; PC := 192
191 [-]: GETTABLE  R15 R0 K52   ; R15 := R0["mMissionName"]
192 [-]: GETGLOBAL R16 K28      ; R16 := 0x603636ad
193 [-]: LOADK     R17 K53      ; R17 := "/Lotus/Language/Menu/MissionBoard_Mission"
194 [-]: NEWTABLE  R18 0 1      ; R18 := {}
195 [-]: SETTABLE  R18 K54 R15  ; R18["MISSION"] := R15
196 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
197 [-]: GETTABLE  R17 R0 K42   ; R17 := R0["mUnlocked"]
198 [-]: TEST      R17 0        ; if not R17 then PC := 202
199 [-]: JMP       202          ; PC := 202
200 [-]: GETTABLE  R17 R0 K47   ; R17 := R0["mCompleted"]
201 [-]: NOT       R17 R17      ; R17 :=  R17
202 [-]: MOVE      R18 R15      ; R18 := R15
203 [-]: LOADK     R19 K55      ; R19 := " ("
204 [-]: GETTABLE  R20 R0 K25   ; R20 := R0["mMissionInfo"]
205 [-]: GETTABLE  R20 R20 K39  ; R20 := R20["minEnemyLevel"]
206 [-]: LOADK     R21 K56      ; R21 := "-"
207 [-]: GETTABLE  R22 R0 K25   ; R22 := R0["mMissionInfo"]
208 [-]: GETTABLE  R22 R22 K41  ; R22 := R22["maxEnemyLevel"]
209 [-]: LOADK     R23 K57      ; R23 := ")"
210 [-]: CONCAT    R18 R18 R23  ; R18 := R18 .. R19 .. R20 .. R21 .. R22 .. R23
211 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
212 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0xe261aa96]
213 [-]: MOVE      R21 R3       ; R21 := R3
214 [-]: LOADK     R22 K11      ; R22 := "Details.Title"
215 [-]: CONST     R23 29       ; R23 := 29.000000
216 [-]: MOVE      R24 R18      ; R24 := R18
217 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
218 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
219 [-]: SELF      R19 R19 K59  ; R20 := R19; R19 := R19[0x2ce15376]
220 [-]: MOVE      R21 R3       ; R21 := R3
221 [-]: LOADK     R22 K11      ; R22 := "Details.Title"
222 [-]: CONST     R23 34       ; R23 := 34.000000
223 [-]: CALL      R19 5 2      ; R19 := R19(R20,R21,R22,R23)
224 [-]: GETUPVAL  R20 U1       ; R20 := U1
225 [-]: GETTABLE  R20 R20 K60  ; R20 := R20[0x9f57dd7d]
226 [-]: GETUPVAL  R21 U3       ; R21 := U3
227 [-]: GETTABLE  R21 R21 K14  ; R21 := R21["Content"]
228 [-]: CALL      R20 2 2      ; R20 := R20(R21)
229 [-]: GETUPVAL  R21 U1       ; R21 := U1
230 [-]: GETTABLE  R21 R21 K60  ; R21 := R21[0x9f57dd7d]
231 [-]: GETUPVAL  R22 U3       ; R22 := U3
232 [-]: GETTABLE  R22 R22 K12  ; R22 := R22["FloatingContent"]
233 [-]: CALL      R21 2 2      ; R21 := R21(R22)
234 [-]: LOADK     R22 K61      ; R22 := "<p><font color=\""
235 [-]: MOVE      R23 R20      ; R23 := R20
236 [-]: LOADK     R24 K62      ; R24 := "\">"
237 [-]: MOVE      R25 R10      ; R25 := R10
238 [-]: LOADK     R26 K55      ; R26 := " ("
239 [-]: MOVE      R27 R11      ; R27 := R11
240 [-]: LOADK     R28 K63      ; R28 := ")<br>"
241 [-]: CONCAT    R22 R22 R28  ; R22 := R22 .. R23 .. R24 .. R25 .. R26 .. R27 .. R28
242 [-]: MOVE      R23 R22      ; R23 := R22
243 [-]: LOADK     R24 K64      ; R24 := "<font color=\""
244 [-]: MOVE      R25 R21      ; R25 := R21
245 [-]: LOADK     R26 K65      ; R26 := "\"></font>"
246 [-]: CONCAT    R22 R23 R26  ; R22 := R23 .. R24 .. R25 .. R26
247 [-]: TEST      R17 0        ; if not R17 then PC := 256
248 [-]: JMP       256          ; PC := 256
249 [-]: MOVE      R23 R22      ; R23 := R22
250 [-]: LOADK     R24 K64      ; R24 := "<font color=\""
251 [-]: MOVE      R25 R20      ; R25 := R20
252 [-]: LOADK     R26 K66      ; R26 := "\"><br>"
253 [-]: GETTABLE  R27 R0 K67   ; R27 := R0["mMissionDesc"]
254 [-]: LOADK     R28 K68      ; R28 := "</font>"
255 [-]: CONCAT    R22 R23 R28  ; R22 := R23 .. R24 .. R25 .. R26 .. R27 .. R28
256 [-]: MOVE      R23 R22      ; R23 := R22
257 [-]: LOADK     R24 K69      ; R24 := "</font></p>"
258 [-]: CONCAT    R22 R23 R24  ; R22 := R23 .. R24
259 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
260 [-]: SELF      R23 R23 K10  ; R24 := R23; R23 := R23[0xf64b7262]
261 [-]: MOVE      R25 R3       ; R25 := R3
262 [-]: LOADK     R26 K13      ; R26 := "Details.Description"
263 [-]: CONST     R27 1        ; R27 := 1.000000
264 [-]: GETGLOBAL R28 K7       ; R28 := 0xae91e43b
265 [-]: SELF      R28 R28 K59  ; R29 := R28; R28 := R28[0x2ce15376]
266 [-]: MOVE      R30 R3       ; R30 := R3
267 [-]: LOADK     R31 K11      ; R31 := "Details.Title"
268 [-]: CONST     R32 1        ; R32 := 1.000000
269 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
270 [-]: ADD       R28 R28 R19  ; R28 := R28 + R19
271 [-]: ADD       R28 R28 K70  ; R28 := R28 + 7.000000
272 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
273 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
274 [-]: SELF      R23 R23 K58  ; R24 := R23; R23 := R23[0xe261aa96]
275 [-]: MOVE      R25 R3       ; R25 := R3
276 [-]: LOADK     R26 K13      ; R26 := "Details.Description"
277 [-]: CONST     R27 29       ; R27 := 29.000000
278 [-]: MOVE      R28 R22      ; R28 := R22
279 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
280 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
281 [-]: SELF      R23 R23 K59  ; R24 := R23; R23 := R23[0x2ce15376]
282 [-]: MOVE      R25 R3       ; R25 := R3
283 [-]: LOADK     R26 K13      ; R26 := "Details.Description"
284 [-]: CONST     R27 34       ; R27 := 34.000000
285 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
286 [-]: GETTABLE  R24 R0 K71   ; R24 := R0["Reward"]
287 [-]: TEST      R24 0        ; if not R24 then PC := 542
288 [-]: JMP       542          ; PC := 542
289 [-]: LOADNIL   R24 R24      ; R24 := nil
290 [-]: GETTABLE  R25 R0 K72   ; R25 := R0["EventInfo"]
291 [-]: TEST      R25 0        ; if not R25 then PC := 299
292 [-]: JMP       299          ; PC := 299
293 [-]: GETTABLE  R25 R0 K72   ; R25 := R0["EventInfo"]
294 [-]: GETTABLE  R25 R25 K73  ; R25 := R25["mBest"]
295 [-]: TEST      R25 0        ; if not R25 then PC := 299
296 [-]: JMP       299          ; PC := 299
297 [-]: GETTABLE  R25 R0 K72   ; R25 := R0["EventInfo"]
298 [-]: GETTABLE  R24 R25 K74  ; R24 := R25["mGoal"]
299 [-]: CONST     R25 60       ; R25 := 60.000000
300 [-]: MOVE      R26 R3       ; R26 := R3
301 [-]: LOADK     R27 K76      ; R27 := ".Reward"
302 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
303 [-]: SETTABLE  R0 K75 R26   ; R0["mRewardClipName"] := R26
304 [-]: GETGLOBAL R26 K7       ; R26 := 0xae91e43b
305 [-]: SELF      R26 R26 K77  ; R27 := R26; R26 := R26[0x91a24e4b]
306 [-]: MOVE      R28 R3       ; R28 := R3
307 [-]: LOADK     R29 K78      ; R29 := ".Details"
308 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
309 [-]: CONST     R29 1        ; R29 := 1.000000
310 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
311 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
312 [-]: SELF      R27 R27 K79  ; R28 := R27; R27 := R27[0x67bc869f]
313 [-]: GETTABLE  R29 R0 K75   ; R29 := R0["mRewardClipName"]
314 [-]: CONST     R30 1        ; R30 := 1.000000
315 [-]: ADD       R31 R26 R25  ; R31 := R26 + R25
316 [-]: SUB       R31 R31 K80  ; R31 := R31 - 50.000000
317 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
318 [-]: GETUPVAL  R27 U6       ; R27 := U6
319 [-]: MOVE      R28 R0       ; R28 := R0
320 [-]: MOVE      R29 R24      ; R29 := R24
321 [-]: CALL      R27 3 1      ; R27(R28,R29)
322 [-]: LOADKB    R27 0 0      ; R27 := false
323 [-]: GETTABLE  R28 R0 K4    ; R28 := R0["IsLinearEvent"]
324 [-]: TEST      R28 0        ; if not R28 then PC := 520
325 [-]: JMP       520          ; PC := 520
326 [-]: GETTABLE  R28 R0 K72   ; R28 := R0["EventInfo"]
327 [-]: GETTABLE  R28 R28 K74  ; R28 := R28["mGoal"]
328 [-]: GETTABLE  R29 R0 K72   ; R29 := R0["EventInfo"]
329 [-]: GETTABLE  R29 R29 K81  ; R29 := R29["mConcurrentMissionKeyNames"]
330 [-]: LEN       R29 R29      ; R29 := # R29
331 [-]: ADD       R29 R29 K35  ; R29 := R29 + 1.000000
332 [-]: LT        0 R29 R28    ; if R29 >= R28 then PC := 520
333 [-]: JMP       520          ; PC := 520
334 [-]: GETTABLE  R28 R0 K42   ; R28 := R0["mUnlocked"]
335 [-]: TESTSET   R27 R28 0    ; if not R28 then PC := 344 else R27 := R28
336 [-]: JMP       344          ; PC := 344
337 [-]: GETTABLE  R28 R0 K47   ; R28 := R0["mCompleted"]
338 [-]: TEST      R28 0        ; if not R28 then PC := 343
339 [-]: JMP       343          ; PC := 343
340 [-]: GETTABLE  R27 R0 K82   ; R27 := R0["mIsFinalMission"]
341 [-]: JMP       344          ; PC := 344
342 [-]: LOADKB    R27 0 1      ; R27 := false; PC := 343
343 [-]: LOADKB    R27 1 0      ; R27 := true
344 [-]: TEST      R27 0        ; if not R27 then PC := 504
345 [-]: JMP       504          ; PC := 504
346 [-]: LOADK     R28 K6       ; R28 := ""
347 [-]: CONST     R29 0        ; R29 := 0.000000
348 [-]: GETTABLE  R30 R0 K72   ; R30 := R0["EventInfo"]
349 [-]: GETTABLE  R30 R30 K73  ; R30 := R30["mBest"]
350 [-]: TEST      R30 0        ; if not R30 then PC := 367
351 [-]: JMP       367          ; PC := 367
352 [-]: GETGLOBAL R30 K7       ; R30 := 0xae91e43b
353 [-]: SELF      R30 R30 K15  ; R31 := R30; R30 := R30[0xc0a3774b]
354 [-]: MOVE      R32 R3       ; R32 := R3
355 [-]: LOADK     R33 K83      ; R33 := "LinearEventProgress.Bg"
356 [-]: CONST     R34 11       ; R34 := 11.000000
357 [-]: LOADKB    R35 0 0      ; R35 := false
358 [-]: CALL      R30 6 1      ; R30(R31,R32,R33,R34,R35)
359 [-]: GETGLOBAL R30 K7       ; R30 := 0xae91e43b
360 [-]: SELF      R30 R30 K15  ; R31 := R30; R30 := R30[0xc0a3774b]
361 [-]: MOVE      R32 R3       ; R32 := R3
362 [-]: LOADK     R33 K84      ; R33 := "LinearEventProgress.Fill"
363 [-]: CONST     R34 11       ; R34 := 11.000000
364 [-]: LOADKB    R35 0 0      ; R35 := false
365 [-]: CALL      R30 6 1      ; R30(R31,R32,R33,R34,R35)
366 [-]: JMP       371          ; PC := 371
367 [-]: GETTABLE  R30 R0 K85   ; R30 := R0["Count"]
368 [-]: LOADK     R31 K86      ; R31 := " / "
369 [-]: GETTABLE  R32 R0 K87   ; R32 := R0["Goal"]
370 [-]: CONCAT    R28 R30 R32  ; R28 := R30 .. R31 .. R32
371 [-]: GETTABLE  R30 R0 K72   ; R30 := R0["EventInfo"]
372 [-]: GETTABLE  R30 R30 K88  ; R30 := R30["mScoreLocTag"]
373 [-]: EQ        1 R30 K6     ; if R30 == "" then PC := 420
374 [-]: JMP       420          ; PC := 420
375 [-]: GETTABLE  R30 R0 K72   ; R30 := R0["EventInfo"]
376 [-]: GETTABLE  R30 R30 K89  ; R30 := R30["mClanGoal"]
377 [-]: LEN       R30 R30      ; R30 := # R30
378 [-]: LT        0 K90 R30    ; if 0.000000 >= R30 then PC := 404
379 [-]: JMP       404          ; PC := 404
380 [-]: GETUPVAL  R30 U7       ; R30 := U7
381 [-]: SELF      R30 R30 K91  ; R31 := R30; R30 := R30[0x713ce380]
382 [-]: CALL      R30 2 2      ; R30 := R30(R31)
383 [-]: EQ        1 R30 K6     ; if R30 == "" then PC := 404
384 [-]: JMP       404          ; PC := 404
385 [-]: MOVE      R30 R28      ; R30 := R28
386 [-]: LOADK     R31 K92      ; R31 := " "
387 [-]: GETGLOBAL R32 K28      ; R32 := 0x603636ad
388 [-]: GETTABLE  R33 R0 K72   ; R33 := R0["EventInfo"]
389 [-]: GETTABLE  R33 R33 K88  ; R33 := R33["mScoreLocTag"]
390 [-]: LOADKB    R34 0 0      ; R34 := false
391 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
392 [-]: LOADK     R33 K92      ; R33 := " "
393 [-]: GETGLOBAL R34 K28      ; R34 := 0x603636ad
394 [-]: LOADK     R35 K93      ; R35 := "/Lotus/Language/Menu/WorldStateClanEventProgress"
395 [-]: NEWTABLE  R36 0 1      ; R36 := {}
396 [-]: GETUPVAL  R37 U7       ; R37 := U7
397 [-]: SELF      R37 R37 K95  ; R38 := R37; R37 := R37[0x6da6e186]
398 [-]: CALL      R37 2 2      ; R37 := R37(R38)
399 [-]: SETTABLE  R36 K94 R37  ; R36["CLAN_NAME"] := R37
400 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
401 [-]: CONCAT    R28 R30 R34  ; R28 := R30 .. R31 .. R32 .. R33 .. R34
402 [-]: CONST     R29 15       ; R29 := 15.000000
403 [-]: JMP       420          ; PC := 420
404 [-]: MOVE      R30 R28      ; R30 := R28
405 [-]: LOADK     R31 K92      ; R31 := " "
406 [-]: GETGLOBAL R32 K28      ; R32 := 0x603636ad
407 [-]: GETTABLE  R33 R0 K72   ; R33 := R0["EventInfo"]
408 [-]: GETTABLE  R33 R33 K88  ; R33 := R33["mScoreLocTag"]
409 [-]: GETUPVAL  R34 U1       ; R34 := U1
410 [-]: GETTABLE  R34 R34 K3   ; R34 := R34[0x06d055f9]
411 [-]: GETTABLE  R35 R0 K72   ; R35 := R0["EventInfo"]
412 [-]: GETTABLE  R35 R35 K73  ; R35 := R35["mBest"]
413 [-]: NEWTABLE  R36 0 1      ; R36 := {}
414 [-]: GETTABLE  R37 R0 K97   ; R37 := R0["Best"]
415 [-]: SETTABLE  R36 K96 R37  ; R36["VALUE"] := R37
416 [-]: LOADNIL   R37 R37      ; R37 := nil
417 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
418 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
419 [-]: CONCAT    R28 R30 R32  ; R28 := R30 .. R31 .. R32
420 [-]: GETTABLE  R30 R0 K82   ; R30 := R0["mIsFinalMission"]
421 [-]: TEST      R30 0        ; if not R30 then PC := 438
422 [-]: JMP       438          ; PC := 438
423 [-]: GETTABLE  R30 R0 K72   ; R30 := R0["EventInfo"]
424 [-]: GETTABLE  R30 R30 K98  ; R30 := R30["mScoreMaxNode"]
425 [-]: SELF      R30 R30 K99  ; R31 := R30; R30 := R30[0x56c01834]
426 [-]: CALL      R30 2 2      ; R30 := R30(R31)
427 [-]: TEST      R30 0        ; if not R30 then PC := 438
428 [-]: JMP       438          ; PC := 438
429 [-]: MOVE      R30 R28      ; R30 := R28
430 [-]: LOADK     R31 K100     ; R31 := " | "
431 [-]: GETGLOBAL R32 K28      ; R32 := 0x603636ad
432 [-]: LOADK     R33 K101     ; R33 := "/Lotus/Language/Menu/WorldStateBest"
433 [-]: NEWTABLE  R34 0 1      ; R34 := {}
434 [-]: GETTABLE  R35 R0 K97   ; R35 := R0["Best"]
435 [-]: SETTABLE  R34 K96 R35  ; R34["VALUE"] := R35
436 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
437 [-]: CONCAT    R28 R30 R32  ; R28 := R30 .. R31 .. R32
438 [-]: GETGLOBAL R30 K7       ; R30 := 0xae91e43b
439 [-]: SELF      R30 R30 K10  ; R31 := R30; R30 := R30[0xf64b7262]
440 [-]: MOVE      R32 R3       ; R32 := R3
441 [-]: LOADK     R33 K102     ; R33 := "LinearEventScore"
442 [-]: CONST     R34 1        ; R34 := 1.000000
443 [-]: ADD       R35 R26 R25  ; R35 := R26 + R25
444 [-]: ADD       R35 R35 K103 ; R35 := R35 + 15.000000
445 [-]: CALL      R30 6 1      ; R30(R31,R32,R33,R34,R35)
446 [-]: GETGLOBAL R30 K7       ; R30 := 0xae91e43b
447 [-]: SELF      R30 R30 K58  ; R31 := R30; R30 := R30[0xe261aa96]
448 [-]: MOVE      R32 R3       ; R32 := R3
449 [-]: LOADK     R33 K102     ; R33 := "LinearEventScore"
450 [-]: CONST     R34 29       ; R34 := 29.000000
451 [-]: MOVE      R35 R28      ; R35 := R28
452 [-]: CALL      R30 6 1      ; R30(R31,R32,R33,R34,R35)
453 [-]: ADD       R25 R25 K104 ; R25 := R25 + 25.000000
454 [-]: LT        0 K90 R29    ; if 0.000000 >= R29 then PC := 470
455 [-]: JMP       470          ; PC := 470
456 [-]: GETGLOBAL R30 K7       ; R30 := 0xae91e43b
457 [-]: SELF      R30 R30 K10  ; R31 := R30; R30 := R30[0xf64b7262]
458 [-]: MOVE      R32 R3       ; R32 := R3
459 [-]: LOADK     R33 K84      ; R33 := "LinearEventProgress.Fill"
460 [-]: CONST     R34 1        ; R34 := 1.000000
461 [-]: ADD       R35 R26 R29  ; R35 := R26 + R29
462 [-]: CALL      R30 6 1      ; R30(R31,R32,R33,R34,R35)
463 [-]: GETGLOBAL R30 K7       ; R30 := 0xae91e43b
464 [-]: SELF      R30 R30 K10  ; R31 := R30; R30 := R30[0xf64b7262]
465 [-]: MOVE      R32 R3       ; R32 := R3
466 [-]: LOADK     R33 K83      ; R33 := "LinearEventProgress.Bg"
467 [-]: CONST     R34 1        ; R34 := 1.000000
468 [-]: ADD       R35 R26 R29  ; R35 := R26 + R29
469 [-]: CALL      R30 6 1      ; R30(R31,R32,R33,R34,R35)
470 [-]: GETGLOBAL R30 K105     ; R30 := 0x42dcc9f5
471 [-]: GETTABLE  R31 R0 K85   ; R31 := R0["Count"]
472 [-]: GETTABLE  R32 R0 K87   ; R32 := R0["Goal"]
473 [-]: DIV       R31 R31 R32  ; R31 := R31 / R32
474 [-]: CONST     R32 0        ; R32 := 0.000000
475 [-]: CONST     R33 1        ; R33 := 1.000000
476 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
477 [-]: GETGLOBAL R31 K7       ; R31 := 0xae91e43b
478 [-]: SELF      R31 R31 K77  ; R32 := R31; R31 := R31[0x91a24e4b]
479 [-]: MOVE      R33 R3       ; R33 := R3
480 [-]: LOADK     R34 K106     ; R34 := ".LinearEventProgress.Bg"
481 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
482 [-]: CONST     R34 12       ; R34 := 12.000000
483 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
484 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
485 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xf64b7262]
486 [-]: MOVE      R34 R3       ; R34 := R3
487 [-]: LOADK     R35 K84      ; R35 := "LinearEventProgress.Fill"
488 [-]: CONST     R36 12       ; R36 := 12.000000
489 [-]: GETGLOBAL R37 K107     ; R37 := 0x5bced4c4
490 [-]: GETTABLE  R37 R37 K108 ; R37 := R37[0xb62ecfe0]
491 [-]: MUL       R38 R30 R31  ; R38 := R30 * R31
492 [-]: LOADK     R39 K109     ; R39 := 0.001000
493 [-]: CALL      R37 3 0      ; R37,... := R37(R38,R39)
494 [-]: CALL      R32 0 1      ; R32(R33,...)
495 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
496 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xf64b7262]
497 [-]: MOVE      R34 R3       ; R34 := R3
498 [-]: LOADK     R35 K110     ; R35 := "LinearEventProgress"
499 [-]: CONST     R36 1        ; R36 := 1.000000
500 [-]: ADD       R37 R26 R25  ; R37 := R26 + R25
501 [-]: ADD       R37 R37 K103 ; R37 := R37 + 15.000000
502 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
503 [-]: ADD       R25 R25 K111 ; R25 := R25 + 5.000000
504 [-]: GETTABLE  R32 R0 K72   ; R32 := R0["EventInfo"]
505 [-]: GETTABLE  R32 R32 K81  ; R32 := R32["mConcurrentMissionKeyNames"]
506 [-]: LEN       R32 R32      ; R32 := # R32
507 [-]: EQ        1 R32 K90    ; if R32 == 0.000000 then PC := 513
508 [-]: JMP       513          ; PC := 513
509 [-]: GETTABLE  R32 R0 K72   ; R32 := R0["EventInfo"]
510 [-]: GETTABLE  R32 R32 K73  ; R32 := R32["mBest"]
511 [-]: TEST      R32 0        ; if not R32 then PC := 520
512 [-]: JMP       520          ; PC := 520
513 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
514 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32[0xc0a3774b]
515 [-]: MOVE      R34 R3       ; R34 := R3
516 [-]: LOADK     R35 K112     ; R35 := "Progress.Step"
517 [-]: CONST     R36 11       ; R36 := 11.000000
518 [-]: LOADKB    R37 0 0      ; R37 := false
519 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
520 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
521 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32[0xc0a3774b]
522 [-]: MOVE      R34 R3       ; R34 := R3
523 [-]: LOADK     R35 K102     ; R35 := "LinearEventScore"
524 [-]: CONST     R36 11       ; R36 := 11.000000
525 [-]: MOVE      R37 R27      ; R37 := R27
526 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
527 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
528 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32[0xc0a3774b]
529 [-]: MOVE      R34 R3       ; R34 := R3
530 [-]: LOADK     R35 K110     ; R35 := "LinearEventProgress"
531 [-]: CONST     R36 11       ; R36 := 11.000000
532 [-]: MOVE      R37 R27      ; R37 := R27
533 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
534 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
535 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32[0xc0a3774b]
536 [-]: MOVE      R34 R3       ; R34 := R3
537 [-]: LOADK     R35 K112     ; R35 := "Progress.Step"
538 [-]: CONST     R36 11       ; R36 := 11.000000
539 [-]: LOADKB    R37 1 0      ; R37 := true
540 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
541 [-]: JMP       563          ; PC := 563
542 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
543 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32[0xc0a3774b]
544 [-]: MOVE      R34 R3       ; R34 := R3
545 [-]: LOADK     R35 K71      ; R35 := "Reward"
546 [-]: CONST     R36 11       ; R36 := 11.000000
547 [-]: LOADKB    R37 0 0      ; R37 := false
548 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
549 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
550 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32[0xc0a3774b]
551 [-]: MOVE      R34 R3       ; R34 := R3
552 [-]: LOADK     R35 K83      ; R35 := "LinearEventProgress.Bg"
553 [-]: CONST     R36 11       ; R36 := 11.000000
554 [-]: LOADKB    R37 0 0      ; R37 := false
555 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
556 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
557 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32[0xc0a3774b]
558 [-]: MOVE      R34 R3       ; R34 := R3
559 [-]: LOADK     R35 K84      ; R35 := "LinearEventProgress.Fill"
560 [-]: CONST     R36 11       ; R36 := 11.000000
561 [-]: LOADKB    R37 0 0      ; R37 := false
562 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
563 [-]: GETGLOBAL R32 K107     ; R32 := 0x5bced4c4
564 [-]: GETTABLE  R32 R32 K108 ; R32 := R32[0xb62ecfe0]
565 [-]: CONST     R33 108      ; R33 := 108.000000
566 [-]: ADD       R34 K114 R19 ; R34 := 35.000000 + R19
567 [-]: ADD       R34 R34 R23  ; R34 := R34 + R23
568 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
569 [-]: SETTABLE  R0 K113 R32  ; R0["TotalHeight"] := R32
570 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
571 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xf64b7262]
572 [-]: GETTABLE  R34 R0 K2    ; R34 := R0["mClipName"]
573 [-]: LOADK     R35 K115     ; R35 := "Outline"
574 [-]: CONST     R36 13       ; R36 := 13.000000
575 [-]: GETTABLE  R37 R0 K113  ; R37 := R0["TotalHeight"]
576 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
577 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
578 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xf64b7262]
579 [-]: GETTABLE  R34 R0 K2    ; R34 := R0["mClipName"]
580 [-]: LOADK     R35 K116     ; R35 := "Btn"
581 [-]: CONST     R36 13       ; R36 := 13.000000
582 [-]: GETTABLE  R37 R0 K113  ; R37 := R0["TotalHeight"]
583 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
584 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
585 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xf64b7262]
586 [-]: GETTABLE  R34 R0 K2    ; R34 := R0["mClipName"]
587 [-]: LOADK     R35 K117     ; R35 := "Highlight"
588 [-]: CONST     R36 1        ; R36 := 1.000000
589 [-]: GETTABLE  R37 R0 K113  ; R37 := R0["TotalHeight"]
590 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
591 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
592 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xf64b7262]
593 [-]: MOVE      R34 R3       ; R34 := R3
594 [-]: LOADK     R35 K118     ; R35 := "Progress"
595 [-]: CONST     R36 1        ; R36 := 1.000000
596 [-]: GETTABLE  R37 R0 K113  ; R37 := R0["TotalHeight"]
597 [-]: DIV       R37 R37 K119 ; R37 := R37 / 2.000000
598 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
599 [-]: GETGLOBAL R32 K7       ; R32 := 0xae91e43b
600 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xf64b7262]
601 [-]: MOVE      R34 R3       ; R34 := R3
602 [-]: LOADK     R35 K120     ; R35 := "Details"
603 [-]: CONST     R36 1        ; R36 := 1.000000
604 [-]: GETTABLE  R37 R0 K113  ; R37 := R0["TotalHeight"]
605 [-]: DIV       R37 R37 K119 ; R37 := R37 / 2.000000
606 [-]: ADD       R38 R19 R23  ; R38 := R19 + R23
607 [-]: ADD       R38 R38 K121 ; R38 := R38 + 12.000000
608 [-]: DIV       R38 R38 K119 ; R38 := R38 / 2.000000
609 [-]: SUB       R37 R37 R38  ; R37 := R37 - R38
610 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
611 [-]: GETGLOBAL R32 K107     ; R32 := 0x5bced4c4
612 [-]: GETTABLE  R32 R32 K108 ; R32 := R32[0xb62ecfe0]
613 [-]: GETTABLE  R33 R0 K113  ; R33 := R0["TotalHeight"]
614 [-]: SUB       R33 R33 K119 ; R33 := R33 - 2.000000
615 [-]: GETUPVAL  R34 U8       ; R34 := U8
616 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
617 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
618 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
619 [-]: MOVE      R35 R3       ; R35 := R3
620 [-]: LOADK     R36 K21      ; R36 := "Progress.Image"
621 [-]: CONST     R37 12       ; R37 := 12.000000
622 [-]: MOVE      R38 R32      ; R38 := R32
623 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
624 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
625 [-]: SELF      R33 R33 K10  ; R34 := R33; R33 := R33[0xf64b7262]
626 [-]: MOVE      R35 R3       ; R35 := R3
627 [-]: LOADK     R36 K21      ; R36 := "Progress.Image"
628 [-]: CONST     R37 13       ; R37 := 13.000000
629 [-]: MOVE      R38 R32      ; R38 := R32
630 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
631 [-]: GETUPVAL  R33 U9       ; R33 := U9
632 [-]: MOVE      R34 R0       ; R34 := R0
633 [-]: MOVE      R35 R3       ; R35 := R3
634 [-]: CALL      R33 3 1      ; R33(R34,R35)
635 [-]: GETGLOBAL R33 K7       ; R33 := 0xae91e43b
636 [-]: SELF      R33 R33 K122 ; R34 := R33; R33 := R33[0xef99134f]
637 [-]: MOVE      R35 R3       ; R35 := R3
638 [-]: LOADK     R36 K123     ; R36 := ".Progress.Image"
639 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
640 [-]: GETTABLE  R36 R0 K124  ; R36 := R0["mLocationTexture"]
641 [-]: GETGLOBAL R37 K125     ; R37 := 0x1a1539ea
642 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
643 [-]: GETTABLE  R33 R0 K113  ; R33 := R0["TotalHeight"]
644 [-]: SUB       R33 R33 K126 ; R33 := R33 - 8.000000
645 [-]: MUL       R33 R33 K127 ; R33 := R33 * 1.070000
646 [-]: DIV       R34 R33 R32  ; R34 := R33 / R32
647 [-]: DIV       R34 K35 R34  ; R34 := 1.000000 / R34
648 [-]: SUB       R35 R34 K35  ; R35 := R34 - 1.000000
649 [-]: DIV       R35 R35 K119 ; R35 := R35 / 2.000000
650 [-]: UNM       R35 R35      ; R35 :=  R35
651 [-]: GETUPVAL  R36 U8       ; R36 := U8
652 [-]: MUL       R36 R36 K127 ; R36 := R36 * 1.070000
653 [-]: DIV       R37 R36 R32  ; R37 := R36 / R32
654 [-]: DIV       R37 K35 R37  ; R37 := 1.000000 / R37
655 [-]: SUB       R38 R37 K35  ; R38 := R37 - 1.000000
656 [-]: DIV       R38 R38 K119 ; R38 := R38 / 2.000000
657 [-]: UNM       R38 R38      ; R38 :=  R38
658 [-]: GETGLOBAL R39 K7       ; R39 := 0xae91e43b
659 [-]: SELF      R39 R39 K128 ; R40 := R39; R39 := R39[0x91e13703]
660 [-]: MOVE      R41 R3       ; R41 := R3
661 [-]: LOADK     R42 K123     ; R42 := ".Progress.Image"
662 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
663 [-]: LOADK     R42 K129     ; R42 := "MaskScale"
664 [-]: MOVE      R43 R37      ; R43 := R37
665 [-]: MOVE      R44 R34      ; R44 := R34
666 [-]: CONST     R45 0        ; R45 := 0.000000
667 [-]: CONST     R46 0        ; R46 := 0.000000
668 [-]: CALL      R39 8 1      ; R39(R40,R41,R42,R43,R44,R45,R46)
669 [-]: GETGLOBAL R39 K7       ; R39 := 0xae91e43b
670 [-]: SELF      R39 R39 K128 ; R40 := R39; R39 := R39[0x91e13703]
671 [-]: MOVE      R41 R3       ; R41 := R3
672 [-]: LOADK     R42 K123     ; R42 := ".Progress.Image"
673 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
674 [-]: LOADK     R42 K130     ; R42 := "MaskOffset"
675 [-]: MOVE      R43 R38      ; R43 := R38
676 [-]: MOVE      R44 R35      ; R44 := R35
677 [-]: CONST     R45 0        ; R45 := 0.000000
678 [-]: CONST     R46 0        ; R46 := 0.000000
679 [-]: CALL      R39 8 1      ; R39(R40,R41,R42,R43,R44,R45,R46)
680 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 2750
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x5e35d4d6]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: CONST     R3 1         ; R3 := 1.000000
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: LEN       R4 R4        ; R4 := # R4
 13 [-]: CONST     R5 1         ; R5 := 1.000000
 14 [-]: FORPREP   R3 23        ; R3 -= R5; PC := 23
 15 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 16 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7[0xd5181643]
 17 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 18 [-]: GETUPVAL  R10 U1       ; R10 := U1
 19 [-]: GETTABLE  R10 R10 R6   ; R10 := R10[R6]
 20 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 21 [-]: GETGLOBAL R10 K5       ; R10 := 0x3f56a9a5
 22 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 23 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 24 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 25 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 26 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 27 [-]: LOADK     R10 K7       ; R10 := "TextImage"
 28 [-]: CONST     R11 11       ; R11 := 11.000000
 29 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 30 [-]: NOT       R12 R12      ; R12 :=  R12
 31 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 32 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 33 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 34 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 35 [-]: LOADK     R10 K9       ; R10 := "Arrow"
 36 [-]: CONST     R11 11       ; R11 := 11.000000
 37 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 38 [-]: NOT       R12 R12      ; R12 :=  R12
 39 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 40 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 41 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 42 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 43 [-]: LOADK     R10 K10      ; R10 := "Text"
 44 [-]: CONST     R11 11       ; R11 := 11.000000
 45 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 46 [-]: NOT       R12 R12      ; R12 :=  R12
 47 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 48 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 49 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 50 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 51 [-]: LOADK     R10 K11      ; R10 := "Outline"
 52 [-]: CONST     R11 11       ; R11 := 11.000000
 53 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 54 [-]: NOT       R12 R12      ; R12 :=  R12
 55 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 56 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 57 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 58 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 59 [-]: LOADK     R10 K12      ; R10 := "FactionIcon"
 60 [-]: CONST     R11 11       ; R11 := 11.000000
 61 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["IsHeader"]
 62 [-]: NOT       R12 R12      ; R12 :=  R12
 63 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 64 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 65 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 66 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 67 [-]: LOADK     R10 K13      ; R10 := "Image"
 68 [-]: CONST     R11 11       ; R11 := 11.000000
 69 [-]: LOADKB    R12 0 0      ; R12 := false
 70 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 71 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 72 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 73 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 74 [-]: LOADK     R10 K14      ; R10 := "BlueprintBg"
 75 [-]: CONST     R11 11       ; R11 := 11.000000
 76 [-]: LOADKB    R12 0 0      ; R12 := false
 77 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 78 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 79 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 80 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 81 [-]: LOADK     R10 K15      ; R10 := "Text.SuitBuffIcon"
 82 [-]: CONST     R11 11       ; R11 := 11.000000
 83 [-]: LOADKB    R12 0 0      ; R12 := false
 84 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 85 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 86 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 87 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 88 [-]: LOADK     R10 K16      ; R10 := "Text.SuitInfo"
 89 [-]: CONST     R11 11       ; R11 := 11.000000
 90 [-]: LOADKB    R12 0 0      ; R12 := false
 91 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 92 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 93 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
 94 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
 95 [-]: LOADK     R10 K17      ; R10 := "Text.WeaponBuffIcon"
 96 [-]: CONST     R11 11       ; R11 := 11.000000
 97 [-]: LOADKB    R12 0 0      ; R12 := false
 98 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 99 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
100 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xc0a3774b]
101 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
102 [-]: LOADK     R10 K18      ; R10 := "Text.WeaponInfo"
103 [-]: CONST     R11 11       ; R11 := 11.000000
104 [-]: LOADKB    R12 0 0      ; R12 := false
105 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
106 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["IsHeader"]
107 [-]: TEST      R7 0         ; if not R7 then PC := 126
108 [-]: JMP       126          ; PC := 126
109 [-]: SETTABLE  R0 K19 K20   ; R0["TotalHeight"] := 15.000000
110 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
111 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0xe261aa96]
112 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
113 [-]: LOADK     R10 K22      ; R10 := "Header.Title"
114 [-]: CONST     R11 29       ; R11 := 29.000000
115 [-]: GETTABLE  R12 R0 K23   ; R12 := R0["Title"]
116 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
117 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
118 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7[0xf64b7262]
119 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["mClipName"]
120 [-]: LOADK     R10 K22      ; R10 := "Header.Title"
121 [-]: CONST     R11 36       ; R11 := 36.000000
122 [-]: GETUPVAL  R12 U2       ; R12 := U2
123 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["FloatingContent"]
124 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
125 [-]: RETURN    R0 1         ; return 
126 [-]: SELF      R7 R2 K26    ; R8 := R2; R7 := R2[0x3ad9ed31]
127 [-]: GETTABLE  R9 R0 K27    ; R9 := R0["mMissionInfo"]
128 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["location"]
129 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
130 [-]: GETGLOBAL R8 K29       ; R8 := 0x603636ad
131 [-]: GETTABLE  R9 R7 K30    ; R9 := R7["locTag"]
132 [-]: SELF      R9 R9 K31    ; R10 := R9; R9 := R9[0x6d604ba7]
133 [-]: CALL      R9 2 2       ; R9 := R9(R10)
134 [-]: LOADNIL   R10 R10      ; R10 := nil
135 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
136 [-]: GETGLOBAL R9 K29       ; R9 := 0x603636ad
137 [-]: SELF      R10 R2 K32   ; R11 := R2; R10 := R2[0xc1dee03f]
138 [-]: CALL      R10 2 2      ; R10 := R10(R11)
139 [-]: GETTABLE  R11 R7 K33   ; R11 := R7["region"]
140 [-]: ADD       R11 R11 K34  ; R11 := R11 + 1.000000
141 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
142 [-]: GETTABLE  R10 R10 K35  ; R10 := R10["name"]
143 [-]: LOADNIL   R11 R11      ; R11 := nil
144 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
145 [-]: LOADK     R10 K36      ; R10 := ""
146 [-]: GETTABLE  R11 R0 K37   ; R11 := R0["mUnlocked"]
147 [-]: TEST      R11 1        ; if R11 then PC := 157
148 [-]: JMP       157          ; PC := 157
149 [-]: LOADK     R11 K38      ; R11 := " ("
150 [-]: GETGLOBAL R12 K2       ; R12 := 0xae91e43b
151 [-]: SELF      R12 R12 K39  ; R13 := R12; R12 := R12[0x42b04007]
152 [-]: LOADK     R14 K40      ; R14 := "/Lotus/Language/Menu/MissionLocked"
153 [-]: LOADKB    R15 0 0      ; R15 := false
154 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
155 [-]: LOADK     R13 K41      ; R13 := ")"
156 [-]: CONCAT    R10 R11 R13  ; R10 := R11 .. R12 .. R13
157 [-]: GETUPVAL  R11 U0       ; R11 := U0
158 [-]: GETTABLE  R11 R11 K42  ; R11 := R11[0x8a389d5f]
159 [-]: GETTABLE  R12 R0 K27   ; R12 := R0["mMissionInfo"]
160 [-]: CALL      R11 2 2      ; R11 := R11(R12)
161 [-]: GETUPVAL  R12 U3       ; R12 := U3
162 [-]: GETTABLE  R13 R0 K27   ; R13 := R0["mMissionInfo"]
163 [-]: GETTABLE  R13 R13 K43  ; R13 := R13["faction"]
164 [-]: ADD       R13 R13 K34  ; R13 := R13 + 1.000000
165 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
166 [-]: GETGLOBAL R13 K29      ; R13 := 0x603636ad
167 [-]: LOADK     R14 K44      ; R14 := "/Lotus/Language/Missions/MissionName_"
168 [-]: MOVE      R15 R11      ; R15 := R11
169 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
170 [-]: LOADKB    R15 0 0      ; R15 := false
171 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
172 [-]: LOADK     R14 K38      ; R14 := " ("
173 [-]: GETTABLE  R15 R0 K27   ; R15 := R0["mMissionInfo"]
174 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["minEnemyLevel"]
175 [-]: LOADK     R16 K46      ; R16 := "-"
176 [-]: GETTABLE  R17 R0 K27   ; R17 := R0["mMissionInfo"]
177 [-]: GETTABLE  R17 R17 K47  ; R17 := R17["maxEnemyLevel"]
178 [-]: LOADK     R18 K48      ; R18 := ") - "
179 [-]: GETGLOBAL R19 K29      ; R19 := 0x603636ad
180 [-]: MOVE      R20 R12      ; R20 := R12
181 [-]: LOADKB    R21 0 0      ; R21 := false
182 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
183 [-]: MOVE      R20 R10      ; R20 := R10
184 [-]: CONCAT    R13 R13 R20  ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20
185 [-]: GETGLOBAL R14 K2       ; R14 := 0xae91e43b
186 [-]: SELF      R14 R14 K21  ; R15 := R14; R14 := R14[0xe261aa96]
187 [-]: GETTABLE  R16 R0 K4    ; R16 := R0["mClipName"]
188 [-]: LOADK     R17 K49      ; R17 := "Text.Title"
189 [-]: CONST     R18 29       ; R18 := 29.000000
190 [-]: MOVE      R19 R13      ; R19 := R13
191 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
192 [-]: GETGLOBAL R14 K2       ; R14 := 0xae91e43b
193 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14[0xf64b7262]
194 [-]: GETTABLE  R16 R0 K4    ; R16 := R0["mClipName"]
195 [-]: LOADK     R17 K49      ; R17 := "Text.Title"
196 [-]: CONST     R18 36       ; R18 := 36.000000
197 [-]: GETUPVAL  R19 U2       ; R19 := U2
198 [-]: GETTABLE  R19 R19 K25  ; R19 := R19["FloatingContent"]
199 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
200 [-]: LOADK     R14 K50      ; R14 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc1"
201 [-]: LOADK     R15 K51      ; R15 := "<PROJECTION_T1>"
202 [-]: MOVE      R16 R15      ; R16 := R15
203 [-]: GETTABLE  R17 R0 K27   ; R17 := R0["mMissionInfo"]
204 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["activeMissionTag"]
205 [-]: GETGLOBAL R18 K53      ; R18 := 0x0469f296
206 [-]: LOADK     R19 K54      ; R19 := "VoidT2"
207 [-]: CALL      R18 2 2      ; R18 := R18(R19)
208 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: LOADK     R14 K55      ; R14 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc2"
211 [-]: LOADK     R15 K56      ; R15 := "<PROJECTION_T2>"
212 [-]: JMP       242          ; PC := 242
213 [-]: GETTABLE  R17 R0 K27   ; R17 := R0["mMissionInfo"]
214 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["activeMissionTag"]
215 [-]: GETGLOBAL R18 K53      ; R18 := 0x0469f296
216 [-]: LOADK     R19 K57      ; R19 := "VoidT3"
217 [-]: CALL      R18 2 2      ; R18 := R18(R19)
218 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 223
219 [-]: JMP       223          ; PC := 223
220 [-]: LOADK     R14 K58      ; R14 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc3"
221 [-]: LOADK     R15 K59      ; R15 := "<PROJECTION_T3>"
222 [-]: JMP       242          ; PC := 242
223 [-]: GETTABLE  R17 R0 K27   ; R17 := R0["mMissionInfo"]
224 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["activeMissionTag"]
225 [-]: GETGLOBAL R18 K53      ; R18 := 0x0469f296
226 [-]: LOADK     R19 K60      ; R19 := "VoidT4"
227 [-]: CALL      R18 2 2      ; R18 := R18(R19)
228 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 233
229 [-]: JMP       233          ; PC := 233
230 [-]: LOADK     R14 K61      ; R14 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc4"
231 [-]: LOADK     R15 K62      ; R15 := "<PROJECTION_T4>"
232 [-]: JMP       242          ; PC := 242
233 [-]: GETTABLE  R17 R0 K27   ; R17 := R0["mMissionInfo"]
234 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["activeMissionTag"]
235 [-]: GETGLOBAL R18 K53      ; R18 := 0x0469f296
236 [-]: LOADK     R19 K63      ; R19 := "VoidT5"
237 [-]: CALL      R18 2 2      ; R18 := R18(R19)
238 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 242
239 [-]: JMP       242          ; PC := 242
240 [-]: LOADK     R14 K64      ; R14 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc5"
241 [-]: LOADK     R15 K65      ; R15 := "<PROJECTION_IMMORTAL>"
242 [-]: GETGLOBAL R17 K2       ; R17 := 0xae91e43b
243 [-]: SELF      R17 R17 K39  ; R18 := R17; R17 := R17[0x42b04007]
244 [-]: MOVE      R19 R14      ; R19 := R14
245 [-]: LOADKB    R20 0 0      ; R20 := false
246 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
247 [-]: MOVE      R14 R17      ; R14 := R17
248 [-]: GETGLOBAL R17 K2       ; R17 := 0xae91e43b
249 [-]: SELF      R17 R17 K39  ; R18 := R17; R17 := R17[0x42b04007]
250 [-]: MOVE      R19 R15      ; R19 := R15
251 [-]: LOADKB    R20 1 0      ; R20 := true
252 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
253 [-]: MOVE      R16 R17      ; R16 := R17
254 [-]: LOADK     R17 K66      ; R17 := "<p><font color=\""
255 [-]: GETUPVAL  R18 U2       ; R18 := U2
256 [-]: GETTABLE  R18 R18 K67  ; R18 := R18["ContentHex"]
257 [-]: LOADK     R19 K68      ; R19 := "\"><b>"
258 [-]: GETGLOBAL R20 K69      ; R20 := 0x5f0788c4
259 [-]: GETGLOBAL R21 K2       ; R21 := 0xae91e43b
260 [-]: SELF      R21 R21 K39  ; R22 := R21; R21 := R21[0x42b04007]
261 [-]: LOADK     R23 K70      ; R23 := "/Lotus/Language/Menu/VoidTearMissionName"
262 [-]: LOADKB    R24 0 0      ; R24 := false
263 [-]: NEWTABLE  R25 0 1      ; R25 := {}
264 [-]: GETGLOBAL R26 K2       ; R26 := 0xae91e43b
265 [-]: SELF      R26 R26 K39  ; R27 := R26; R26 := R26[0x42b04007]
266 [-]: MOVE      R28 R14      ; R28 := R14
267 [-]: LOADKB    R29 0 0      ; R29 := false
268 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
269 [-]: SETTABLE  R25 K71 R26  ; R25["TIER"] := R26
270 [-]: CALL      R21 5 0      ; R21,... := R21(R22,R23,R24,R25)
271 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
272 [-]: LOADK     R21 K72      ; R21 := "</b><br>"
273 [-]: CONCAT    R17 R17 R21  ; R17 := R17 .. R18 .. R19 .. R20 .. R21
274 [-]: MOVE      R18 R17      ; R18 := R17
275 [-]: MOVE      R19 R8       ; R19 := R8
276 [-]: LOADK     R20 K38      ; R20 := " ("
277 [-]: MOVE      R21 R9       ; R21 := R9
278 [-]: LOADK     R22 K73      ; R22 := ")</font></p>"
279 [-]: CONCAT    R17 R18 R22  ; R17 := R18 .. R19 .. R20 .. R21 .. R22
280 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
281 [-]: SELF      R18 R18 K21  ; R19 := R18; R18 := R18[0xe261aa96]
282 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
283 [-]: LOADK     R21 K74      ; R21 := "Text.Description"
284 [-]: CONST     R22 29       ; R22 := 29.000000
285 [-]: MOVE      R23 R17      ; R23 := R17
286 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
287 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
288 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18[0xf64b7262]
289 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
290 [-]: LOADK     R21 K75      ; R21 := "Text.Timer"
291 [-]: CONST     R22 36       ; R22 := 36.000000
292 [-]: GETUPVAL  R23 U2       ; R23 := U2
293 [-]: GETTABLE  R23 R23 K76  ; R23 := R23["FloatingContentHighlight"]
294 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
295 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
296 [-]: SELF      R18 R18 K77  ; R19 := R18; R18 := R18[0x20b98db3]
297 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
298 [-]: LOADK     R21 K78      ; R21 := ".TextImage.text"
299 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
300 [-]: MOVE      R21 R16      ; R21 := R16
301 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
302 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
303 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18[0xf64b7262]
304 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
305 [-]: LOADK     R21 K7       ; R21 := "TextImage"
306 [-]: CONST     R22 36       ; R22 := 36.000000
307 [-]: GETUPVAL  R23 U2       ; R23 := U2
308 [-]: GETTABLE  R23 R23 K79  ; R23 := R23["Content"]
309 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
310 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
311 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18[0xf64b7262]
312 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
313 [-]: LOADK     R21 K7       ; R21 := "TextImage"
314 [-]: CONST     R22 0        ; R22 := 0.000000
315 [-]: CONST     R23 -35      ; R23 := -35.000000
316 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
317 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
318 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18[0xf64b7262]
319 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
320 [-]: LOADK     R21 K7       ; R21 := "TextImage"
321 [-]: CONST     R22 1        ; R22 := 1.000000
322 [-]: CONST     R23 10       ; R23 := 10.000000
323 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
324 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
325 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18[0xf64b7262]
326 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
327 [-]: LOADK     R21 K7       ; R21 := "TextImage"
328 [-]: CONST     R22 5        ; R22 := 5.000000
329 [-]: CONST     R23 200      ; R23 := 200.000000
330 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
331 [-]: GETGLOBAL R18 K2       ; R18 := 0xae91e43b
332 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18[0xf64b7262]
333 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mClipName"]
334 [-]: LOADK     R21 K7       ; R21 := "TextImage"
335 [-]: CONST     R22 6        ; R22 := 6.000000
336 [-]: CONST     R23 200      ; R23 := 200.000000
337 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
338 [-]: GETTABLE  R18 R0 K27   ; R18 := R0["mMissionInfo"]
339 [-]: GETTABLE  R18 R18 K43  ; R18 := R18["faction"]
340 [-]: ADD       R18 R18 K34  ; R18 := R18 + 1.000000
341 [-]: LOADNIL   R19 R19      ; R19 := nil
342 [-]: GETTABLE  R20 R0 K37   ; R20 := R0["mUnlocked"]
343 [-]: TEST      R20 1        ; if R20 then PC := 348
344 [-]: JMP       348          ; PC := 348
345 [-]: GETGLOBAL R20 K80      ; R20 := 0x0032441c
346 [-]: GETTABLE  R19 R20 K81  ; R19 := R20["UITexture_Locked"]
347 [-]: JMP       353          ; PC := 353
348 [-]: LE        0 R18 K82    ; if R18 > 4.000000 then PC := 353
349 [-]: JMP       353          ; PC := 353
350 [-]: GETGLOBAL R20 K80      ; R20 := 0x0032441c
351 [-]: GETTABLE  R20 R20 K83  ; R20 := R20["UITextures_FactionInvasion"]
352 [-]: GETTABLE  R19 R20 R18  ; R19 := R20[R18]
353 [-]: GETGLOBAL R20 K2       ; R20 := 0xae91e43b
354 [-]: SELF      R20 R20 K6   ; R21 := R20; R20 := R20[0xc0a3774b]
355 [-]: GETTABLE  R22 R0 K4    ; R22 := R0["mClipName"]
356 [-]: LOADK     R23 K12      ; R23 := "FactionIcon"
357 [-]: CONST     R24 11       ; R24 := 11.000000
358 [-]: EQ        0 R19 K84    ; if R19 ~= nil then PC := 361
359 [-]: JMP       361          ; PC := 361
360 [-]: LOADKB    R25 0 1      ; R25 := false; PC := 361
361 [-]: LOADKB    R25 1 0      ; R25 := true
362 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
363 [-]: EQ        1 R19 K84    ; if R19 == nil then PC := 372
364 [-]: JMP       372          ; PC := 372
365 [-]: GETGLOBAL R20 K2       ; R20 := 0xae91e43b
366 [-]: SELF      R20 R20 K85  ; R21 := R20; R20 := R20[0x1cb415c1]
367 [-]: GETTABLE  R22 R0 K4    ; R22 := R0["mClipName"]
368 [-]: LOADK     R23 K86      ; R23 := ".FactionIcon"
369 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
370 [-]: MOVE      R23 R19      ; R23 := R19
371 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
372 [-]: GETUPVAL  R20 U4       ; R20 := U4
373 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mClipName"]
374 [-]: LOADK     R22 K87      ; R22 := ".Text.Timer"
375 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
376 [-]: MOVE      R22 R0       ; R22 := R0
377 [-]: CALL      R20 3 1      ; R20(R21,R22)
378 [-]: GETUPVAL  R20 U5       ; R20 := U5
379 [-]: MOVE      R21 R0       ; R21 := R0
380 [-]: CALL      R20 2 1      ; R20(R21)
381 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 2844
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: DIV       R3 R1 R2     ; R3 := R1 / R2
  2 [-]: MUL       R3 R3 K0     ; R3 := R3 * 50.000000
  3 [-]: ADD       R3 K0 R3     ; R3 := 50.000000 + R3
  4 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["AttackerFaction"]
  5 [-]: EQ        0 R4 K3      ; if R4 ~= 2.000000 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: DIV       R4 R1 R2     ; R4 := R1 / R2
  8 [-]: MUL       R4 R4 K4     ; R4 := R4 * 100.000000
  9 [-]: ADD       R3 K4 R4     ; R3 := 100.000000 + R4
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["DefenderFaction"]
 12 [-]: EQ        0 R4 K3      ; if R4 ~= 2.000000 then PC := 14
 13 [-]: JMP       14           ; PC := 14
 14 [-]: RETURN    R3 2         ; return R3
 15 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 2856
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CONST     R3 0         ; R3 := 0.000000
  5 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 1         ; if R4 then PC := 27
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mFactionProjectPct"]
 11 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETGLOBAL R4 K3        ; R4 := 0x42dcc9f5
 14 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mFactionProjectPct"]
 15 [-]: GETTABLE  R5 R5 K4     ; R5 := R5[1.000000]
 16 [-]: CONST     R6 0         ; R6 := 0.000000
 17 [-]: CONST     R7 100       ; R7 := 100.000000
 18 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 19 [-]: MOVE      R2 R4        ; R2 := R4
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x42dcc9f5
 21 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mFactionProjectPct"]
 22 [-]: GETTABLE  R5 R5 K5     ; R5 := R5[2.000000]
 23 [-]: CONST     R6 0         ; R6 := 0.000000
 24 [-]: CONST     R7 100       ; R7 := 100.000000
 25 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 26 [-]: MOVE      R3 R4        ; R3 := R4
 27 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 28 [-]: LOADK     R5 K7        ; R5 := ".ConstructionProgressA"
 29 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 30 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 31 [-]: LOADK     R6 K8        ; R6 := ".ConstructionProgressB"
 32 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 33 [-]: LOADK     R6 K9        ; R6 := "<p><font size=\"19\"><b>"
 34 [-]: GETGLOBAL R7 K10       ; R7 := 0x7f5022cf
 35 [-]: GETTABLE  R7 R7 K11    ; R7 := R7[0x3f3e4d12]
 36 [-]: GETGLOBAL R8 K12       ; R8 := 0x603636ad
 37 [-]: LOADK     R9 K13       ; R9 := "/Lotus/Language/Menu/ConstructionStatus"
 38 [-]: LOADNIL   R10 R10      ; R10 := nil
 39 [-]: CALL      R8 3 0       ; R8,... := R8(R9,R10)
 40 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 41 [-]: LOADK     R8 K14       ; R8 := "</b></font</p>"
 42 [-]: CONCAT    R6 R6 R8     ; R6 := R6 .. R7 .. R8
 43 [-]: GETGLOBAL R7 K15       ; R7 := 0xae91e43b
 44 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0x42b04007]
 45 [-]: LOADK     R9 K17       ; R9 := "<GRINEER>"
 46 [-]: LOADKB    R10 1 0      ; R10 := true
 47 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 48 [-]: GETGLOBAL R8 K18       ; R8 := 0x5f0788c4
 49 [-]: GETGLOBAL R9 K12       ; R9 := 0x603636ad
 50 [-]: GETUPVAL  R10 U1       ; R10 := U1
 51 [-]: GETTABLE  R10 R10 K4   ; R10 := R10[1.000000]
 52 [-]: LOADNIL   R11 R11      ; R11 := nil
 53 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
 54 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 55 [-]: LOADK     R9 K20       ; R9 := " ("
 56 [-]: GETGLOBAL R10 K12      ; R10 := 0x603636ad
 57 [-]: LOADK     R11 K21      ; R11 := "/Lotus/Language/Menu/GrineerFomorianProject"
 58 [-]: LOADKB    R12 0 0      ; R12 := false
 59 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 60 [-]: LOADK     R11 K22      ; R11 := ")"
 61 [-]: CONCAT    R7 R7 R11    ; R7 := R7 .. R8 .. R9 .. R10 .. R11
 62 [-]: GETGLOBAL R8 K15       ; R8 := 0xae91e43b
 63 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x42b04007]
 64 [-]: LOADK     R10 K23      ; R10 := "<CORPUS>"
 65 [-]: LOADKB    R11 1 0      ; R11 := true
 66 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 67 [-]: GETGLOBAL R9 K18       ; R9 := 0x5f0788c4
 68 [-]: GETGLOBAL R10 K12      ; R10 := 0x603636ad
 69 [-]: GETUPVAL  R11 U1       ; R11 := U1
 70 [-]: GETTABLE  R11 R11 K5   ; R11 := R11[2.000000]
 71 [-]: LOADNIL   R12 R12      ; R12 := nil
 72 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 73 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 74 [-]: LOADK     R10 K20      ; R10 := " ("
 75 [-]: GETGLOBAL R11 K12      ; R11 := 0x603636ad
 76 [-]: LOADK     R12 K24      ; R12 := "/Lotus/Language/Menu/CorpusRazorbackProject"
 77 [-]: LOADKB    R13 0 0      ; R13 := false
 78 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 79 [-]: LOADK     R12 K22      ; R12 := ")"
 80 [-]: CONCAT    R8 R8 R12    ; R8 := R8 .. R9 .. R10 .. R11 .. R12
 81 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
 82 [-]: SELF      R9 R9 K25    ; R10 := R9; R9 := R9[0xaade900e]
 83 [-]: MOVE      R11 R4       ; R11 := R4
 84 [-]: CONST     R12 11       ; R12 := 11.000000
 85 [-]: LOADKB    R13 1 0      ; R13 := true
 86 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 87 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
 88 [-]: SELF      R9 R9 K25    ; R10 := R9; R9 := R9[0xaade900e]
 89 [-]: MOVE      R11 R5       ; R11 := R5
 90 [-]: CONST     R12 11       ; R12 := 11.000000
 91 [-]: LOADKB    R13 1 0      ; R13 := true
 92 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 93 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
 94 [-]: SELF      R9 R9 K26    ; R10 := R9; R9 := R9[0xe261aa96]
 95 [-]: GETTABLE  R11 R0 K6    ; R11 := R0["mClipName"]
 96 [-]: LOADK     R12 K27      ; R12 := "Title"
 97 [-]: CONST     R13 29       ; R13 := 29.000000
 98 [-]: MOVE      R14 R6       ; R14 := R6
 99 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
100 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
101 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0x2ce15376]
102 [-]: GETTABLE  R11 R0 K6    ; R11 := R0["mClipName"]
103 [-]: LOADK     R12 K27      ; R12 := "Title"
104 [-]: CONST     R13 33       ; R13 := 33.000000
105 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
106 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
107 [-]: SELF      R10 R10 K29  ; R11 := R10; R10 := R10[0xf64b7262]
108 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["mClipName"]
109 [-]: LOADK     R13 K27      ; R13 := "Title"
110 [-]: CONST     R14 0        ; R14 := 0.000000
111 [-]: DIV       R15 R9 K5    ; R15 := R9 / 2.000000
112 [-]: SUB       R15 K30 R15  ; R15 := 290.000000 - R15
113 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
114 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
115 [-]: SELF      R10 R10 K31  ; R11 := R10; R10 := R10[0x1cb415c1]
116 [-]: MOVE      R12 R4       ; R12 := R4
117 [-]: LOADK     R13 K32      ; R13 := ".ProfileImage"
118 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
119 [-]: GETGLOBAL R13 K33      ; R13 := 0x59792637
120 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
121 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
122 [-]: SELF      R10 R10 K31  ; R11 := R10; R10 := R10[0x1cb415c1]
123 [-]: MOVE      R12 R5       ; R12 := R5
124 [-]: LOADK     R13 K32      ; R13 := ".ProfileImage"
125 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
126 [-]: GETGLOBAL R13 K34      ; R13 := 0x7ada1a85
127 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
128 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
129 [-]: SELF      R10 R10 K29  ; R11 := R10; R10 := R10[0xf64b7262]
130 [-]: MOVE      R12 R4       ; R12 := R4
131 [-]: LOADK     R13 K35      ; R13 := "Progress"
132 [-]: CONST     R14 9        ; R14 := 9.000000
133 [-]: GETUPVAL  R15 U2       ; R15 := U2
134 [-]: GETTABLE  R15 R15 K4   ; R15 := R15[1.000000]
135 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
136 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
137 [-]: SELF      R10 R10 K29  ; R11 := R10; R10 := R10[0xf64b7262]
138 [-]: MOVE      R12 R5       ; R12 := R5
139 [-]: LOADK     R13 K35      ; R13 := "Progress"
140 [-]: CONST     R14 9        ; R14 := 9.000000
141 [-]: GETUPVAL  R15 U2       ; R15 := U2
142 [-]: GETTABLE  R15 R15 K5   ; R15 := R15[2.000000]
143 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
144 [-]: GETUPVAL  R10 U3       ; R10 := U3
145 [-]: GETTABLE  R10 R10 K36  ; R10 := R10[0x06d055f9]
146 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 149
147 [-]: JMP       149          ; PC := 149
148 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 149
149 [-]: LOADKB    R11 1 0      ; R11 := true
150 [-]: GETUPVAL  R12 U4       ; R12 := U4
151 [-]: GETTABLE  R12 R12 K37  ; R12 := R12["FloatingContentHighlight"]
152 [-]: GETUPVAL  R13 U4       ; R13 := U4
153 [-]: GETTABLE  R13 R13 K38  ; R13 := R13["FloatingContent"]
154 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
155 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
156 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0xf64b7262]
157 [-]: MOVE      R13 R4       ; R13 := R4
158 [-]: LOADK     R14 K39      ; R14 := "ProgressBacker"
159 [-]: CONST     R15 9        ; R15 := 9.000000
160 [-]: GETUPVAL  R16 U4       ; R16 := U4
161 [-]: GETTABLE  R16 R16 K38  ; R16 := R16["FloatingContent"]
162 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
163 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
164 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0xf64b7262]
165 [-]: MOVE      R13 R4       ; R13 := R4
166 [-]: LOADK     R14 K39      ; R14 := "ProgressBacker"
167 [-]: CONST     R15 10       ; R15 := 10.000000
168 [-]: CONST     R16 40       ; R16 := 40.000000
169 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
170 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
171 [-]: SELF      R11 R11 K40  ; R12 := R11; R11 := R11[0xd5181643]
172 [-]: MOVE      R13 R4       ; R13 := R4
173 [-]: LOADK     R14 K41      ; R14 := ".Progress"
174 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
175 [-]: GETGLOBAL R14 K42      ; R14 := 0xecb0b641
176 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
177 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
178 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0xf64b7262]
179 [-]: MOVE      R13 R4       ; R13 := R4
180 [-]: LOADK     R14 K35      ; R14 := "Progress"
181 [-]: CONST     R15 9        ; R15 := 9.000000
182 [-]: MOVE      R16 R10      ; R16 := R10
183 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
184 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
185 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0x91e13703]
186 [-]: MOVE      R13 R4       ; R13 := R4
187 [-]: LOADK     R14 K41      ; R14 := ".Progress"
188 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
189 [-]: LOADK     R14 K44      ; R14 := "AlphaTestThreshold"
190 [-]: DIV       R15 R2 K45   ; R15 := R2 / 100.000000
191 [-]: CONST     R16 0        ; R16 := 0.000000
192 [-]: CONST     R17 0        ; R17 := 0.000000
193 [-]: CONST     R18 0        ; R18 := 0.000000
194 [-]: CALL      R11 8 1      ; R11(R12,R13,R14,R15,R16,R17,R18)
195 [-]: GETUPVAL  R11 U3       ; R11 := U3
196 [-]: GETTABLE  R11 R11 K36  ; R11 := R11[0x06d055f9]
197 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 200
198 [-]: JMP       200          ; PC := 200
199 [-]: LOADKB    R12 0 1      ; R12 := false; PC := 200
200 [-]: LOADKB    R12 1 0      ; R12 := true
201 [-]: GETUPVAL  R13 U4       ; R13 := U4
202 [-]: GETTABLE  R13 R13 K37  ; R13 := R13["FloatingContentHighlight"]
203 [-]: GETUPVAL  R14 U4       ; R14 := U4
204 [-]: GETTABLE  R14 R14 K38  ; R14 := R14["FloatingContent"]
205 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
206 [-]: MOVE      R10 R11      ; R10 := R11
207 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
208 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0xf64b7262]
209 [-]: MOVE      R13 R5       ; R13 := R5
210 [-]: LOADK     R14 K39      ; R14 := "ProgressBacker"
211 [-]: CONST     R15 9        ; R15 := 9.000000
212 [-]: GETUPVAL  R16 U4       ; R16 := U4
213 [-]: GETTABLE  R16 R16 K38  ; R16 := R16["FloatingContent"]
214 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
215 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
216 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0xf64b7262]
217 [-]: MOVE      R13 R5       ; R13 := R5
218 [-]: LOADK     R14 K39      ; R14 := "ProgressBacker"
219 [-]: CONST     R15 10       ; R15 := 10.000000
220 [-]: CONST     R16 20       ; R16 := 20.000000
221 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
222 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
223 [-]: SELF      R11 R11 K40  ; R12 := R11; R11 := R11[0xd5181643]
224 [-]: MOVE      R13 R5       ; R13 := R5
225 [-]: LOADK     R14 K41      ; R14 := ".Progress"
226 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
227 [-]: GETGLOBAL R14 K42      ; R14 := 0xecb0b641
228 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
229 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
230 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0xf64b7262]
231 [-]: MOVE      R13 R5       ; R13 := R5
232 [-]: LOADK     R14 K35      ; R14 := "Progress"
233 [-]: CONST     R15 9        ; R15 := 9.000000
234 [-]: MOVE      R16 R10      ; R16 := R10
235 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
236 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
237 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0x91e13703]
238 [-]: MOVE      R13 R5       ; R13 := R5
239 [-]: LOADK     R14 K41      ; R14 := ".Progress"
240 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
241 [-]: LOADK     R14 K44      ; R14 := "AlphaTestThreshold"
242 [-]: DIV       R15 R3 K45   ; R15 := R3 / 100.000000
243 [-]: CONST     R16 0        ; R16 := 0.000000
244 [-]: CONST     R17 0        ; R17 := 0.000000
245 [-]: CONST     R18 0        ; R18 := 0.000000
246 [-]: CALL      R11 8 1      ; R11(R12,R13,R14,R15,R16,R17,R18)
247 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
248 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11[0x1cb415c1]
249 [-]: GETTABLE  R13 R0 K6    ; R13 := R0["mClipName"]
250 [-]: LOADK     R14 K46      ; R14 := ".AttackerIcon"
251 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
252 [-]: GETGLOBAL R14 K47      ; R14 := 0x0032441c
253 [-]: GETTABLE  R14 R14 K48  ; R14 := R14["UITextures_FactionInvasion"]
254 [-]: GETTABLE  R14 R14 K4   ; R14 := R14[1.000000]
255 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
256 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
257 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11[0x1cb415c1]
258 [-]: GETTABLE  R13 R0 K6    ; R13 := R0["mClipName"]
259 [-]: LOADK     R14 K49      ; R14 := ".DefenderIcon"
260 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
261 [-]: GETGLOBAL R14 K47      ; R14 := 0x0032441c
262 [-]: GETTABLE  R14 R14 K48  ; R14 := R14["UITextures_FactionInvasion"]
263 [-]: GETTABLE  R14 R14 K5   ; R14 := R14[2.000000]
264 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
265 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
266 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11[0xe261aa96]
267 [-]: GETTABLE  R13 R0 K6    ; R13 := R0["mClipName"]
268 [-]: LOADK     R14 K50      ; R14 := "AttackerLabel"
269 [-]: CONST     R15 29       ; R15 := 29.000000
270 [-]: MOVE      R16 R7       ; R16 := R7
271 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
272 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
273 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11[0xe261aa96]
274 [-]: GETTABLE  R13 R0 K6    ; R13 := R0["mClipName"]
275 [-]: LOADK     R14 K51      ; R14 := "DefenderLabel"
276 [-]: CONST     R15 29       ; R15 := 29.000000
277 [-]: MOVE      R16 R8       ; R16 := R8
278 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
279 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
280 [-]: SELF      R11 R11 K28  ; R12 := R11; R11 := R11[0x2ce15376]
281 [-]: GETTABLE  R13 R0 K6    ; R13 := R0["mClipName"]
282 [-]: LOADK     R14 K50      ; R14 := "AttackerLabel"
283 [-]: CONST     R15 33       ; R15 := 33.000000
284 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
285 [-]: GETGLOBAL R12 K15      ; R12 := 0xae91e43b
286 [-]: SELF      R12 R12 K28  ; R13 := R12; R12 := R12[0x2ce15376]
287 [-]: GETTABLE  R14 R0 K6    ; R14 := R0["mClipName"]
288 [-]: LOADK     R15 K51      ; R15 := "DefenderLabel"
289 [-]: CONST     R16 33       ; R16 := 33.000000
290 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
291 [-]: GETGLOBAL R13 K15      ; R13 := 0xae91e43b
292 [-]: SELF      R13 R13 K29  ; R14 := R13; R13 := R13[0xf64b7262]
293 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mClipName"]
294 [-]: LOADK     R16 K50      ; R16 := "AttackerLabel"
295 [-]: CONST     R17 0        ; R17 := 0.000000
296 [-]: DIV       R18 R11 K5   ; R18 := R11 / 2.000000
297 [-]: SUB       R18 K30 R18  ; R18 := 290.000000 - R18
298 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
299 [-]: GETGLOBAL R13 K15      ; R13 := 0xae91e43b
300 [-]: SELF      R13 R13 K29  ; R14 := R13; R13 := R13[0xf64b7262]
301 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mClipName"]
302 [-]: LOADK     R16 K51      ; R16 := "DefenderLabel"
303 [-]: CONST     R17 0        ; R17 := 0.000000
304 [-]: DIV       R18 R12 K5   ; R18 := R12 / 2.000000
305 [-]: SUB       R18 K30 R18  ; R18 := 290.000000 - R18
306 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
307 [-]: GETGLOBAL R13 K15      ; R13 := 0xae91e43b
308 [-]: SELF      R13 R13 K26  ; R14 := R13; R13 := R13[0xe261aa96]
309 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mClipName"]
310 [-]: LOADK     R16 K51      ; R16 := "DefenderLabel"
311 [-]: CONST     R17 37       ; R17 := 37.000000
312 [-]: LOADK     R18 K52      ; R18 := "left"
313 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
314 [-]: GETGLOBAL R13 K15      ; R13 := 0xae91e43b
315 [-]: SELF      R13 R13 K53  ; R14 := R13; R13 := R13[0xc0a3774b]
316 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mClipName"]
317 [-]: LOADK     R16 K54      ; R16 := "SubInvasions"
318 [-]: CONST     R17 11       ; R17 := 11.000000
319 [-]: LOADKB    R18 0 0      ; R18 := false
320 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
321 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 2912
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
  3 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := "ArrowLeft"
  5 [-]: CONST     R6 9         ; R6 := 9.000000
  6 [-]: GETUPVAL  R7 U0        ; R7 := U0
  7 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FloatingContent"]
  8 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 11 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 12 [-]: LOADK     R5 K3        ; R5 := "ArrowLeft"
 13 [-]: CONST     R6 10        ; R6 := 10.000000
 14 [-]: CONST     R7 10        ; R7 := 10.000000
 15 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 16 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xc0a3774b]
 18 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 19 [-]: LOADK     R5 K6        ; R5 := "Progress"
 20 [-]: CONST     R6 11        ; R6 := 11.000000
 21 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["IsConstructionEntry"]
 22 [-]: NOT       R7 R7        ; R7 :=  R7
 23 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 24 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 25 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 26 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 27 [-]: LOADK     R5 K8        ; R5 := "Btn"
 28 [-]: CONST     R6 13        ; R6 := 13.000000
 29 [-]: CONST     R7 108       ; R7 := 108.000000
 30 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 31 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 32 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 33 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 34 [-]: LOADK     R5 K9        ; R5 := "Outline"
 35 [-]: CONST     R6 13        ; R6 := 13.000000
 36 [-]: CONST     R7 108       ; R7 := 108.000000
 37 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 38 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 39 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 40 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 41 [-]: LOADK     R5 K10       ; R5 := "Title"
 42 [-]: CONST     R6 36        ; R6 := 36.000000
 43 [-]: GETUPVAL  R7 U0        ; R7 := U0
 44 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FloatingContent"]
 45 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 46 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 47 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 48 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 49 [-]: LOADK     R5 K10       ; R5 := "Title"
 50 [-]: CONST     R6 0         ; R6 := 0.000000
 51 [-]: CONST     R7 57        ; R7 := 57.000000
 52 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 53 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 54 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 55 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 56 [-]: LOADK     R5 K11       ; R5 := "AttackerLabel"
 57 [-]: CONST     R6 36        ; R6 := 36.000000
 58 [-]: GETUPVAL  R7 U0        ; R7 := U0
 59 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["Content"]
 60 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 61 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 62 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 63 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 64 [-]: LOADK     R5 K11       ; R5 := "AttackerLabel"
 65 [-]: CONST     R6 1         ; R6 := 1.000000
 66 [-]: GETUPVAL  R7 U1        ; R7 := U1
 67 [-]: GETTABLE  R7 R7 K13    ; R7 := R7[0x06d055f9]
 68 [-]: GETTABLE  R8 R0 K7     ; R8 := R0["IsConstructionEntry"]
 69 [-]: CONST     R9 45        ; R9 := 45.000000
 70 [-]: CONST     R10 65       ; R10 := 65.000000
 71 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 72 [-]: CALL      R2 0 1       ; R2(R3,...)
 73 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 74 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 75 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 76 [-]: LOADK     R5 K14       ; R5 := "DefenderLabel"
 77 [-]: CONST     R6 36        ; R6 := 36.000000
 78 [-]: GETUPVAL  R7 U0        ; R7 := U0
 79 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["Content"]
 80 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 81 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 82 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf64b7262]
 83 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 84 [-]: LOADK     R5 K14       ; R5 := "DefenderLabel"
 85 [-]: CONST     R6 1         ; R6 := 1.000000
 86 [-]: CONST     R7 65        ; R7 := 65.000000
 87 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 88 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["IsConstructionEntry"]
 89 [-]: TEST      R2 0         ; if not R2 then PC := 95
 90 [-]: JMP       95           ; PC := 95
 91 [-]: GETUPVAL  R2 U2        ; R2 := U2
 92 [-]: MOVE      R3 R0        ; R3 := R0
 93 [-]: CALL      R2 2 1       ; R2(R3)
 94 [-]: RETURN    R0 1         ; return 
 95 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 96 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xc0a3774b]
 97 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 98 [-]: LOADK     R5 K15       ; R5 := "ConstructionProgressA"
 99 [-]: CONST     R6 11        ; R6 := 11.000000
100 [-]: LOADKB    R7 0 0       ; R7 := false
101 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
102 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
103 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xc0a3774b]
104 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
105 [-]: LOADK     R5 K16       ; R5 := "ConstructionProgressB"
106 [-]: CONST     R6 11        ; R6 := 11.000000
107 [-]: LOADKB    R7 0 0       ; R7 := false
108 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
109 [-]: CONST     R2 1         ; R2 := 1.000000
110 [-]: GETUPVAL  R3 U3        ; R3 := U3
111 [-]: LEN       R3 R3        ; R3 := # R3
112 [-]: CONST     R4 1         ; R4 := 1.000000
113 [-]: FORPREP   R2 122       ; R2 -= R4; PC := 122
114 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
115 [-]: SELF      R6 R6 K17    ; R7 := R6; R6 := R6[0xd5181643]
116 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mClipName"]
117 [-]: GETUPVAL  R9 U3        ; R9 := U3
118 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
119 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
120 [-]: GETGLOBAL R9 K18       ; R9 := 0x3f56a9a5
121 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
122 [-]: FORLOOP   R2 114       ; R2 += R4; if R2 <= R3 then begin PC := 114; R5 := R2 end
123 [-]: GETUPVAL  R6 U1        ; R6 := U1
124 [-]: GETTABLE  R6 R6 K13    ; R6 := R6[0x06d055f9]
125 [-]: GETTABLE  R7 R0 K19    ; R7 := R0["LocTag"]
126 [-]: TEST      R7 0         ; if not R7 then PC := 133
127 [-]: JMP       133          ; PC := 133
128 [-]: GETTABLE  R7 R0 K19    ; R7 := R0["LocTag"]
129 [-]: GETGLOBAL R8 K20       ; R8 := EMPTY_SYMBOL
130 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 133
131 [-]: JMP       133          ; PC := 133
132 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 133
133 [-]: LOADKB    R7 1 0       ; R7 := true
134 [-]: GETUPVAL  R8 U4        ; R8 := U4
135 [-]: GETTABLE  R9 R0 K21    ; R9 := R0["AttackerFaction"]
136 [-]: ADD       R9 R9 K22    ; R9 := R9 + 1.000000
137 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
138 [-]: GETGLOBAL R9 K23       ; R9 := 0x64fb1586
139 [-]: GETTABLE  R10 R0 K19   ; R10 := R0["LocTag"]
140 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
141 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
142 [-]: LOADK     R7 K24       ; R7 := "<p><font size=\"19\"><b>"
143 [-]: GETGLOBAL R8 K25       ; R8 := 0x7f5022cf
144 [-]: GETTABLE  R8 R8 K26    ; R8 := R8[0x3f3e4d12]
145 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
146 [-]: SELF      R9 R9 K27    ; R10 := R9; R9 := R9[0x42b04007]
147 [-]: GETTABLE  R11 R0 K28   ; R11 := R0["Region"]
148 [-]: LOADKB    R12 0 0      ; R12 := false
149 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
150 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
151 [-]: LOADK     R9 K29       ; R9 := "</b> ("
152 [-]: GETGLOBAL R10 K30      ; R10 := 0x5f0788c4
153 [-]: GETGLOBAL R11 K0       ; R11 := 0xae91e43b
154 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11[0x42b04007]
155 [-]: MOVE      R13 R6       ; R13 := R6
156 [-]: LOADKB    R14 0 0      ; R14 := false
157 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
158 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
159 [-]: LOADK     R11 K31      ; R11 := ")</font></p>"
160 [-]: CONCAT    R7 R7 R11    ; R7 := R7 .. R8 .. R9 .. R10 .. R11
161 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
162 [-]: SELF      R8 R8 K32    ; R9 := R8; R8 := R8[0xe261aa96]
163 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
164 [-]: LOADK     R11 K10      ; R11 := "Title"
165 [-]: CONST     R12 29       ; R12 := 29.000000
166 [-]: MOVE      R13 R7       ; R13 := R7
167 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
168 [-]: CONST     R8 0         ; R8 := 0.000000
169 [-]: CONST     R9 0         ; R9 := 0.000000
170 [-]: CONST     R10 1        ; R10 := 1.000000
171 [-]: GETTABLE  R11 R0 K33   ; R11 := R0["SubInvasions"]
172 [-]: LEN       R11 R11      ; R11 := # R11
173 [-]: CONST     R12 1        ; R12 := 1.000000
174 [-]: FORPREP   R10 183      ; R10 -= R12; PC := 183
175 [-]: GETTABLE  R14 R0 K33   ; R14 := R0["SubInvasions"]
176 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
177 [-]: GETTABLE  R14 R14 K34  ; R14 := R14["Count"]
178 [-]: ADD       R8 R8 R14    ; R8 := R8 + R14
179 [-]: GETTABLE  R14 R0 K33   ; R14 := R0["SubInvasions"]
180 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
181 [-]: GETTABLE  R14 R14 K35  ; R14 := R14["Goal"]
182 [-]: ADD       R9 R9 R14    ; R9 := R9 + R14
183 [-]: FORLOOP   R10 175      ; R10 += R12; if R10 <= R11 then begin PC := 175; R13 := R10 end
184 [-]: GETUPVAL  R14 U5       ; R14 := U5
185 [-]: MOVE      R15 R0       ; R15 := R0
186 [-]: MOVE      R16 R8       ; R16 := R8
187 [-]: MOVE      R17 R9       ; R17 := R9
188 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
189 [-]: CONST     R15 466      ; R15 := 466.000000
190 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
191 [-]: SELF      R16 R16 K17  ; R17 := R16; R16 := R16[0xd5181643]
192 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
193 [-]: LOADK     R19 K36      ; R19 := ".Progress.LeftFill"
194 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
195 [-]: GETGLOBAL R19 K37      ; R19 := 0xe3d94630
196 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
197 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
198 [-]: SELF      R16 R16 K17  ; R17 := R16; R16 := R16[0xd5181643]
199 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
200 [-]: LOADK     R19 K38      ; R19 := ".Progress.RightFill"
201 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
202 [-]: GETGLOBAL R19 K37      ; R19 := 0xe3d94630
203 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
204 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
205 [-]: SELF      R16 R16 K17  ; R17 := R16; R16 := R16[0xd5181643]
206 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
207 [-]: LOADK     R19 K39      ; R19 := ".Progress.Bg"
208 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
209 [-]: GETGLOBAL R19 K37      ; R19 := 0xe3d94630
210 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
211 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
212 [-]: SELF      R16 R16 K40  ; R17 := R16; R16 := R16[0x91e13703]
213 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
214 [-]: LOADK     R19 K36      ; R19 := ".Progress.LeftFill"
215 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
216 [-]: LOADK     R19 K41      ; R19 := "RectInnerColor"
217 [-]: GETUPVAL  R20 U0       ; R20 := U0
218 [-]: GETTABLE  R20 R20 K42  ; R20 := R20["FloatingContentObject"]
219 [-]: GETTABLE  R20 R20 K43  ; R20 := R20["r"]
220 [-]: GETUPVAL  R21 U0       ; R21 := U0
221 [-]: GETTABLE  R21 R21 K42  ; R21 := R21["FloatingContentObject"]
222 [-]: GETTABLE  R21 R21 K44  ; R21 := R21["g"]
223 [-]: GETUPVAL  R22 U0       ; R22 := U0
224 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["FloatingContentObject"]
225 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["b"]
226 [-]: LOADK     R23 K46      ; R23 := 0.400000
227 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
228 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
229 [-]: SELF      R16 R16 K40  ; R17 := R16; R16 := R16[0x91e13703]
230 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
231 [-]: LOADK     R19 K36      ; R19 := ".Progress.LeftFill"
232 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
233 [-]: LOADK     R19 K47      ; R19 := "RectEdgeColor"
234 [-]: CONST     R20 0        ; R20 := 0.000000
235 [-]: CONST     R21 0        ; R21 := 0.000000
236 [-]: CONST     R22 0        ; R22 := 0.000000
237 [-]: CONST     R23 0        ; R23 := 0.000000
238 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
239 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
240 [-]: SELF      R16 R16 K40  ; R17 := R16; R16 := R16[0x91e13703]
241 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
242 [-]: LOADK     R19 K38      ; R19 := ".Progress.RightFill"
243 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
244 [-]: LOADK     R19 K41      ; R19 := "RectInnerColor"
245 [-]: GETUPVAL  R20 U0       ; R20 := U0
246 [-]: GETTABLE  R20 R20 K42  ; R20 := R20["FloatingContentObject"]
247 [-]: GETTABLE  R20 R20 K43  ; R20 := R20["r"]
248 [-]: GETUPVAL  R21 U0       ; R21 := U0
249 [-]: GETTABLE  R21 R21 K42  ; R21 := R21["FloatingContentObject"]
250 [-]: GETTABLE  R21 R21 K44  ; R21 := R21["g"]
251 [-]: GETUPVAL  R22 U0       ; R22 := U0
252 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["FloatingContentObject"]
253 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["b"]
254 [-]: CONST     R23 1        ; R23 := 1.000000
255 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
256 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
257 [-]: SELF      R16 R16 K40  ; R17 := R16; R16 := R16[0x91e13703]
258 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
259 [-]: LOADK     R19 K38      ; R19 := ".Progress.RightFill"
260 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
261 [-]: LOADK     R19 K47      ; R19 := "RectEdgeColor"
262 [-]: CONST     R20 0        ; R20 := 0.000000
263 [-]: CONST     R21 0        ; R21 := 0.000000
264 [-]: CONST     R22 0        ; R22 := 0.000000
265 [-]: CONST     R23 0        ; R23 := 0.000000
266 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
267 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
268 [-]: SELF      R16 R16 K40  ; R17 := R16; R16 := R16[0x91e13703]
269 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
270 [-]: LOADK     R19 K39      ; R19 := ".Progress.Bg"
271 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
272 [-]: LOADK     R19 K41      ; R19 := "RectInnerColor"
273 [-]: GETUPVAL  R20 U0       ; R20 := U0
274 [-]: GETTABLE  R20 R20 K48  ; R20 := R20["Background1Object"]
275 [-]: GETTABLE  R20 R20 K43  ; R20 := R20["r"]
276 [-]: GETUPVAL  R21 U0       ; R21 := U0
277 [-]: GETTABLE  R21 R21 K48  ; R21 := R21["Background1Object"]
278 [-]: GETTABLE  R21 R21 K44  ; R21 := R21["g"]
279 [-]: GETUPVAL  R22 U0       ; R22 := U0
280 [-]: GETTABLE  R22 R22 K48  ; R22 := R22["Background1Object"]
281 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["b"]
282 [-]: CONST     R23 1        ; R23 := 1.000000
283 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
284 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
285 [-]: SELF      R16 R16 K40  ; R17 := R16; R16 := R16[0x91e13703]
286 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
287 [-]: LOADK     R19 K39      ; R19 := ".Progress.Bg"
288 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
289 [-]: LOADK     R19 K47      ; R19 := "RectEdgeColor"
290 [-]: GETUPVAL  R20 U0       ; R20 := U0
291 [-]: GETTABLE  R20 R20 K42  ; R20 := R20["FloatingContentObject"]
292 [-]: GETTABLE  R20 R20 K43  ; R20 := R20["r"]
293 [-]: GETUPVAL  R21 U0       ; R21 := U0
294 [-]: GETTABLE  R21 R21 K42  ; R21 := R21["FloatingContentObject"]
295 [-]: GETTABLE  R21 R21 K44  ; R21 := R21["g"]
296 [-]: GETUPVAL  R22 U0       ; R22 := U0
297 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["FloatingContentObject"]
298 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["b"]
299 [-]: CONST     R23 1        ; R23 := 1.000000
300 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
301 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
302 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0xf64b7262]
303 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
304 [-]: LOADK     R19 K49      ; R19 := "Progress.Bg"
305 [-]: CONST     R20 12       ; R20 := 12.000000
306 [-]: MOVE      R21 R15      ; R21 := R15
307 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
308 [-]: DIV       R16 R14 K50  ; R16 := R14 / 100.000000
309 [-]: MUL       R16 R15 R16  ; R16 := R15 * R16
310 [-]: GETGLOBAL R17 K0       ; R17 := 0xae91e43b
311 [-]: SELF      R17 R17 K1   ; R18 := R17; R17 := R17[0xf64b7262]
312 [-]: GETTABLE  R19 R0 K2    ; R19 := R0["mClipName"]
313 [-]: LOADK     R20 K51      ; R20 := "Progress.LeftFill"
314 [-]: CONST     R21 12       ; R21 := 12.000000
315 [-]: GETGLOBAL R22 K52      ; R22 := 0x42dcc9f5
316 [-]: ADD       R23 R16 K53  ; R23 := R16 + 2.000000
317 [-]: LOADK     R24 K54      ; R24 := 0.001000
318 [-]: MOVE      R25 R15      ; R25 := R15
319 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
320 [-]: CALL      R17 0 1      ; R17(R18,...)
321 [-]: GETGLOBAL R17 K0       ; R17 := 0xae91e43b
322 [-]: SELF      R17 R17 K1   ; R18 := R17; R17 := R17[0xf64b7262]
323 [-]: GETTABLE  R19 R0 K2    ; R19 := R0["mClipName"]
324 [-]: LOADK     R20 K55      ; R20 := "Progress.RightFill"
325 [-]: CONST     R21 12       ; R21 := 12.000000
326 [-]: GETGLOBAL R22 K52      ; R22 := 0x42dcc9f5
327 [-]: SUB       R23 R15 R16  ; R23 := R15 - R16
328 [-]: ADD       R23 R23 K53  ; R23 := R23 + 2.000000
329 [-]: LOADK     R24 K54      ; R24 := 0.001000
330 [-]: MOVE      R25 R15      ; R25 := R15
331 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
332 [-]: CALL      R17 0 1      ; R17(R18,...)
333 [-]: GETGLOBAL R17 K0       ; R17 := 0xae91e43b
334 [-]: SELF      R17 R17 K1   ; R18 := R17; R17 := R17[0xf64b7262]
335 [-]: GETTABLE  R19 R0 K2    ; R19 := R0["mClipName"]
336 [-]: LOADK     R20 K55      ; R20 := "Progress.RightFill"
337 [-]: CONST     R21 0        ; R21 := 0.000000
338 [-]: MOVE      R22 R15      ; R22 := R15
339 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
340 [-]: GETUPVAL  R17 U1       ; R17 := U1
341 [-]: GETTABLE  R17 R17 K56  ; R17 := R17[0x74a11ec6]
342 [-]: MOVE      R18 R14      ; R18 := R14
343 [-]: CONST     R19 1        ; R19 := 1.000000
344 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
345 [-]: GETUPVAL  R18 U1       ; R18 := U1
346 [-]: GETTABLE  R18 R18 K56  ; R18 := R18[0x74a11ec6]
347 [-]: SUB       R19 K50 R14  ; R19 := 100.000000 - R14
348 [-]: CONST     R20 1        ; R20 := 1.000000
349 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
350 [-]: GETTABLE  R19 R0 K57   ; R19 := R0["Completed"]
351 [-]: TEST      R19 1        ; if R19 then PC := 365
352 [-]: JMP       365          ; PC := 365
353 [-]: GETGLOBAL R19 K52      ; R19 := 0x42dcc9f5
354 [-]: MOVE      R20 R17      ; R20 := R17
355 [-]: LOADK     R21 K58      ; R21 := 0.100000
356 [-]: LOADK     R22 K59      ; R22 := 99.900002
357 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
358 [-]: MOVE      R17 R19      ; R17 := R19
359 [-]: GETGLOBAL R19 K52      ; R19 := 0x42dcc9f5
360 [-]: MOVE      R20 R18      ; R20 := R18
361 [-]: LOADK     R21 K58      ; R21 := 0.100000
362 [-]: LOADK     R22 K59      ; R22 := 99.900002
363 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
364 [-]: MOVE      R18 R19      ; R18 := R19
365 [-]: GETUPVAL  R19 U1       ; R19 := U1
366 [-]: GETTABLE  R19 R19 K13  ; R19 := R19[0x06d055f9]
367 [-]: GETTABLE  R20 R0 K60   ; R20 := R0["AttackerName"]
368 [-]: TEST      R20 0        ; if not R20 then PC := 375
369 [-]: JMP       375          ; PC := 375
370 [-]: GETTABLE  R20 R0 K60   ; R20 := R0["AttackerName"]
371 [-]: GETGLOBAL R21 K20      ; R21 := EMPTY_SYMBOL
372 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 375
373 [-]: JMP       375          ; PC := 375
374 [-]: LOADKB    R20 0 1      ; R20 := false; PC := 375
375 [-]: LOADKB    R20 1 0      ; R20 := true
376 [-]: GETUPVAL  R21 U6       ; R21 := U6
377 [-]: GETTABLE  R22 R0 K21   ; R22 := R0["AttackerFaction"]
378 [-]: ADD       R22 R22 K22  ; R22 := R22 + 1.000000
379 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
380 [-]: GETGLOBAL R22 K23      ; R22 := 0x64fb1586
381 [-]: GETTABLE  R23 R0 K60   ; R23 := R0["AttackerName"]
382 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
383 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
384 [-]: GETGLOBAL R20 K61      ; R20 := 0x603636ad
385 [-]: MOVE      R21 R19      ; R21 := R19
386 [-]: LOADNIL   R22 R22      ; R22 := nil
387 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
388 [-]: LOADK     R21 K62      ; R21 := " "
389 [-]: GETUPVAL  R22 U1       ; R22 := U1
390 [-]: GETTABLE  R22 R22 K63  ; R22 := R22[0x1142c7a8]
391 [-]: MOVE      R23 R17      ; R23 := R17
392 [-]: CONST     R24 1        ; R24 := 1.000000
393 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
394 [-]: LOADK     R23 K64      ; R23 := "%"
395 [-]: CONCAT    R20 R20 R23  ; R20 := R20 .. R21 .. R22 .. R23
396 [-]: GETUPVAL  R21 U1       ; R21 := U1
397 [-]: GETTABLE  R21 R21 K13  ; R21 := R21[0x06d055f9]
398 [-]: GETTABLE  R22 R0 K65   ; R22 := R0["DefenderName"]
399 [-]: TEST      R22 0        ; if not R22 then PC := 406
400 [-]: JMP       406          ; PC := 406
401 [-]: GETTABLE  R22 R0 K65   ; R22 := R0["DefenderName"]
402 [-]: GETGLOBAL R23 K20      ; R23 := EMPTY_SYMBOL
403 [-]: EQ        1 R22 R23    ; if R22 == R23 then PC := 406
404 [-]: JMP       406          ; PC := 406
405 [-]: LOADKB    R22 0 1      ; R22 := false; PC := 406
406 [-]: LOADKB    R22 1 0      ; R22 := true
407 [-]: GETUPVAL  R23 U6       ; R23 := U6
408 [-]: GETTABLE  R24 R0 K66   ; R24 := R0["DefenderFaction"]
409 [-]: ADD       R24 R24 K22  ; R24 := R24 + 1.000000
410 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
411 [-]: GETGLOBAL R24 K23      ; R24 := 0x64fb1586
412 [-]: GETTABLE  R25 R0 K65   ; R25 := R0["DefenderName"]
413 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
414 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
415 [-]: GETUPVAL  R22 U1       ; R22 := U1
416 [-]: GETTABLE  R22 R22 K63  ; R22 := R22[0x1142c7a8]
417 [-]: MOVE      R23 R18      ; R23 := R18
418 [-]: CONST     R24 1        ; R24 := 1.000000
419 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
420 [-]: LOADK     R23 K67      ; R23 := "% "
421 [-]: GETGLOBAL R24 K61      ; R24 := 0x603636ad
422 [-]: MOVE      R25 R21      ; R25 := R21
423 [-]: LOADNIL   R26 R26      ; R26 := nil
424 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
425 [-]: CONCAT    R22 R22 R24  ; R22 := R22 .. R23 .. R24
426 [-]: GETGLOBAL R23 K0       ; R23 := 0xae91e43b
427 [-]: SELF      R23 R23 K68  ; R24 := R23; R23 := R23[0x1cb415c1]
428 [-]: GETTABLE  R25 R0 K2    ; R25 := R0["mClipName"]
429 [-]: LOADK     R26 K69      ; R26 := ".AttackerIcon"
430 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
431 [-]: GETGLOBAL R26 K70      ; R26 := 0x0032441c
432 [-]: GETTABLE  R26 R26 K71  ; R26 := R26["UITextures_FactionInvasion"]
433 [-]: GETTABLE  R27 R0 K21   ; R27 := R0["AttackerFaction"]
434 [-]: ADD       R27 R27 K22  ; R27 := R27 + 1.000000
435 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
436 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
437 [-]: GETGLOBAL R23 K0       ; R23 := 0xae91e43b
438 [-]: SELF      R23 R23 K68  ; R24 := R23; R23 := R23[0x1cb415c1]
439 [-]: GETTABLE  R25 R0 K2    ; R25 := R0["mClipName"]
440 [-]: LOADK     R26 K72      ; R26 := ".DefenderIcon"
441 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
442 [-]: GETGLOBAL R26 K70      ; R26 := 0x0032441c
443 [-]: GETTABLE  R26 R26 K71  ; R26 := R26["UITextures_FactionInvasion"]
444 [-]: GETTABLE  R27 R0 K66   ; R27 := R0["DefenderFaction"]
445 [-]: ADD       R27 R27 K22  ; R27 := R27 + 1.000000
446 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
447 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
448 [-]: GETGLOBAL R23 K0       ; R23 := 0xae91e43b
449 [-]: SELF      R23 R23 K32  ; R24 := R23; R23 := R23[0xe261aa96]
450 [-]: GETTABLE  R25 R0 K2    ; R25 := R0["mClipName"]
451 [-]: LOADK     R26 K11      ; R26 := "AttackerLabel"
452 [-]: CONST     R27 29       ; R27 := 29.000000
453 [-]: MOVE      R28 R20      ; R28 := R20
454 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
455 [-]: GETGLOBAL R23 K0       ; R23 := 0xae91e43b
456 [-]: SELF      R23 R23 K32  ; R24 := R23; R23 := R23[0xe261aa96]
457 [-]: GETTABLE  R25 R0 K2    ; R25 := R0["mClipName"]
458 [-]: LOADK     R26 K14      ; R26 := "DefenderLabel"
459 [-]: CONST     R27 29       ; R27 := 29.000000
460 [-]: MOVE      R28 R22      ; R28 := R22
461 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
462 [-]: GETGLOBAL R23 K0       ; R23 := 0xae91e43b
463 [-]: SELF      R23 R23 K32  ; R24 := R23; R23 := R23[0xe261aa96]
464 [-]: GETTABLE  R25 R0 K2    ; R25 := R0["mClipName"]
465 [-]: LOADK     R26 K14      ; R26 := "DefenderLabel"
466 [-]: CONST     R27 37       ; R27 := 37.000000
467 [-]: LOADK     R28 K73      ; R28 := "right"
468 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
469 [-]: CONST     R23 108      ; R23 := 108.000000
470 [-]: GETGLOBAL R24 K0       ; R24 := 0xae91e43b
471 [-]: SELF      R24 R24 K1   ; R25 := R24; R24 := R24[0xf64b7262]
472 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["mClipName"]
473 [-]: LOADK     R27 K8       ; R27 := "Btn"
474 [-]: CONST     R28 13       ; R28 := 13.000000
475 [-]: MOVE      R29 R23      ; R29 := R23
476 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
477 [-]: GETGLOBAL R24 K0       ; R24 := 0xae91e43b
478 [-]: SELF      R24 R24 K1   ; R25 := R24; R24 := R24[0xf64b7262]
479 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["mClipName"]
480 [-]: LOADK     R27 K9       ; R27 := "Outline"
481 [-]: CONST     R28 13       ; R28 := 13.000000
482 [-]: MOVE      R29 R23      ; R29 := R23
483 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
484 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 2993
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  34

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x38f10e85
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  3 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := ".gotoAndStop"
  5 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: GETTABLE  R5 R5 K4     ; R5 := R5[0x06d055f9]
  8 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["IsBanner"]
  9 [-]: CONST     R7 2         ; R7 := 2.000000
 10 [-]: CONST     R8 1         ; R8 := 1.000000
 11 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 12 [-]: CALL      R2 0 1       ; R2(R3,...)
 13 [-]: CONST     R2 1         ; R2 := 1.000000
 14 [-]: GETUPVAL  R3 U1        ; R3 := U1
 15 [-]: LEN       R3 R3        ; R3 := # R3
 16 [-]: CONST     R4 1         ; R4 := 1.000000
 17 [-]: FORPREP   R2 26        ; R2 -= R4; PC := 26
 18 [-]: GETGLOBAL R6 K1        ; R6 := 0xae91e43b
 19 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xd5181643]
 20 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mClipName"]
 21 [-]: GETUPVAL  R9 U1        ; R9 := U1
 22 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 23 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 24 [-]: GETGLOBAL R9 K7        ; R9 := 0x3f56a9a5
 25 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 26 [-]: FORLOOP   R2 18        ; R2 += R4; if R2 <= R3 then begin PC := 18; R5 := R2 end
 27 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["IsBanner"]
 28 [-]: TEST      R6 0         ; if not R6 then PC := 54
 29 [-]: JMP       54           ; PC := 54
 30 [-]: GETGLOBAL R6 K1        ; R6 := 0xae91e43b
 31 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x42b04007]
 32 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["Label"]
 33 [-]: LOADKB    R9 0 0       ; R9 := false
 34 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 35 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
 36 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xf64b7262]
 37 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 38 [-]: LOADK     R10 K11      ; R10 := "Title"
 39 [-]: CONST     R11 9        ; R11 := 9.000000
 40 [-]: GETUPVAL  R12 U2       ; R12 := U2
 41 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["FloatingContent"]
 42 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 43 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
 44 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe261aa96]
 45 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 46 [-]: LOADK     R10 K11      ; R10 := "Title"
 47 [-]: CONST     R11 29       ; R11 := 29.000000
 48 [-]: GETGLOBAL R12 K14      ; R12 := 0x7f5022cf
 49 [-]: GETTABLE  R12 R12 K15  ; R12 := R12[0x3f3e4d12]
 50 [-]: MOVE      R13 R6       ; R13 := R6
 51 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 52 [-]: CALL      R7 0 1       ; R7(R8,...)
 53 [-]: RETURN    R0 1         ; return 
 54 [-]: GETUPVAL  R7 U3        ; R7 := U3
 55 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["QuestIndex"]
 56 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 57 [-]: EQ        0 R7 K17     ; if R7 ~= nil then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: RETURN    R0 1         ; return 
 60 [-]: GETUPVAL  R8 U0        ; R8 := U0
 61 [-]: GETTABLE  R8 R8 K4     ; R8 := R8[0x06d055f9]
 62 [-]: GETTABLE  R9 R7 K18    ; R9 := R7["IsLoaded"]
 63 [-]: GETTABLE  R10 R7 K11   ; R10 := R7["Title"]
 64 [-]: GETGLOBAL R11 K19      ; R11 := 0x603636ad
 65 [-]: LOADK     R12 K20      ; R12 := "/Lotus/Language/Menu/Badlands_InitializingButton"
 66 [-]: LOADKB    R13 0 0      ; R13 := false
 67 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
 68 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 69 [-]: GETUPVAL  R9 U0        ; R9 := U0
 70 [-]: GETTABLE  R9 R9 K4     ; R9 := R9[0x06d055f9]
 71 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["IsLoaded"]
 72 [-]: GETGLOBAL R11 K19      ; R11 := 0x603636ad
 73 [-]: GETGLOBAL R12 K21      ; R12 := 0x64fb1586
 74 [-]: GETTABLE  R13 R7 K22   ; R13 := R7["Text"]
 75 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 76 [-]: LOADKB    R13 0 0      ; R13 := false
 77 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 78 [-]: LOADK     R12 K23      ; R12 := ""
 79 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 80 [-]: GETUPVAL  R10 U0       ; R10 := U0
 81 [-]: GETTABLE  R10 R10 K4   ; R10 := R10[0x06d055f9]
 82 [-]: GETTABLE  R11 R7 K18   ; R11 := R7["IsLoaded"]
 83 [-]: GETTABLE  R12 R7 K24   ; R12 := R7["Icon"]
 84 [-]: LOADNIL   R13 R13      ; R13 := nil
 85 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 86 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
 87 [-]: SELF      R11 R11 K25  ; R12 := R11; R11 := R11[0x20b98db3]
 88 [-]: GETTABLE  R13 R0 K2    ; R13 := R0["mClipName"]
 89 [-]: LOADK     R14 K26      ; R14 := ".Text.Desc.text"
 90 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 91 [-]: MOVE      R14 R9       ; R14 := R9
 92 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 93 [-]: GETUPVAL  R11 U0       ; R11 := U0
 94 [-]: GETTABLE  R11 R11 K4   ; R11 := R11[0x06d055f9]
 95 [-]: GETTABLE  R12 R0 K27   ; R12 := R0["Themed"]
 96 [-]: CONST     R13 1        ; R13 := 1.000000
 97 [-]: LOADK     R14 K28      ; R14 := 1.600000
 98 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 99 [-]: MUL       R11 K29 R11  ; R11 := 102.000000 * R11
100 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
101 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
102 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
103 [-]: LOADK     R15 K30      ; R15 := "Image"
104 [-]: CONST     R16 12       ; R16 := 12.000000
105 [-]: MOVE      R17 R11      ; R17 := R11
106 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
107 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
108 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
109 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
110 [-]: LOADK     R15 K22      ; R15 := "Text"
111 [-]: CONST     R16 0        ; R16 := 0.000000
112 [-]: ADD       R17 R11 K31  ; R17 := R11 + 15.000000
113 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
114 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
115 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
116 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
117 [-]: LOADK     R15 K32      ; R15 := "Text.Title"
118 [-]: CONST     R16 12       ; R16 := 12.000000
119 [-]: ADD       R17 R11 K33  ; R17 := R11 + 50.000000
120 [-]: SUB       R17 K34 R17  ; R17 := 580.000000 - R17
121 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
122 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
123 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
124 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
125 [-]: LOADK     R15 K32      ; R15 := "Text.Title"
126 [-]: CONST     R16 36       ; R16 := 36.000000
127 [-]: GETUPVAL  R17 U2       ; R17 := U2
128 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["FloatingContent"]
129 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
130 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
131 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
132 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
133 [-]: LOADK     R15 K35      ; R15 := "Text.Desc"
134 [-]: CONST     R16 12       ; R16 := 12.000000
135 [-]: ADD       R17 R11 K33  ; R17 := R11 + 50.000000
136 [-]: SUB       R17 K34 R17  ; R17 := 580.000000 - R17
137 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
138 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
139 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
140 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
141 [-]: LOADK     R15 K35      ; R15 := "Text.Desc"
142 [-]: CONST     R16 36       ; R16 := 36.000000
143 [-]: GETUPVAL  R17 U2       ; R17 := U2
144 [-]: GETTABLE  R17 R17 K36  ; R17 := R17["Content"]
145 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
146 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
147 [-]: SELF      R12 R12 K37  ; R13 := R12; R12 := R12[0x1cb415c1]
148 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
149 [-]: LOADK     R15 K38      ; R15 := ".ActiveIcon"
150 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
151 [-]: GETGLOBAL R15 K39      ; R15 := 0x649a746b
152 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15[0x628bc0ab]
153 [-]: LOADK     R17 K41      ; R17 := "quest"
154 [-]: CONST     R18 0        ; R18 := 0.000000
155 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
156 [-]: CALL      R12 0 1      ; R12(R13,...)
157 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
158 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
159 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
160 [-]: LOADK     R15 K42      ; R15 := "ActiveIcon"
161 [-]: CONST     R16 10       ; R16 := 10.000000
162 [-]: CONST     R17 80       ; R17 := 80.000000
163 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
164 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
165 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12[0xf64b7262]
166 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
167 [-]: LOADK     R15 K42      ; R15 := "ActiveIcon"
168 [-]: CONST     R16 9        ; R16 := 9.000000
169 [-]: GETUPVAL  R17 U2       ; R17 := U2
170 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["FloatingContent"]
171 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
172 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
173 [-]: SELF      R12 R12 K43  ; R13 := R12; R12 := R12[0xc0a3774b]
174 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mClipName"]
175 [-]: LOADK     R15 K42      ; R15 := "ActiveIcon"
176 [-]: CONST     R16 11       ; R16 := 11.000000
177 [-]: GETTABLE  R17 R7 K44   ; R17 := R7["IsActive"]
178 [-]: EQ        1 R17 K17    ; if R17 == nil then PC := 182
179 [-]: JMP       182          ; PC := 182
180 [-]: GETTABLE  R17 R7 K44   ; R17 := R7["IsActive"]
181 [-]: JMP       184          ; PC := 184
182 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 183
183 [-]: LOADKB    R17 1 0      ; R17 := true
184 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
185 [-]: GETTABLE  R12 R7 K45   ; R12 := R7["Node"]
186 [-]: GETTABLE  R13 R0 K46   ; R13 := R0["NodeIndex"]
187 [-]: EQ        1 R13 K17    ; if R13 == nil then PC := 195
188 [-]: JMP       195          ; PC := 195
189 [-]: GETTABLE  R13 R7 K47   ; R13 := R7["Nodes"]
190 [-]: EQ        1 R13 K17    ; if R13 == nil then PC := 195
191 [-]: JMP       195          ; PC := 195
192 [-]: GETTABLE  R13 R7 K47   ; R13 := R7["Nodes"]
193 [-]: GETTABLE  R14 R0 K46   ; R14 := R0["NodeIndex"]
194 [-]: GETTABLE  R12 R13 R14  ; R12 := R13[R14]
195 [-]: TEST      R12 1        ; if R12 then PC := 200
196 [-]: JMP       200          ; PC := 200
197 [-]: GETTABLE  R13 R7 K48   ; R13 := R7["MissionInfo"]
198 [-]: TEST      R13 0        ; if not R13 then PC := 380
199 [-]: JMP       380          ; PC := 380
200 [-]: GETTABLE  R13 R7 K44   ; R13 := R7["IsActive"]
201 [-]: TEST      R13 0        ; if not R13 then PC := 380
202 [-]: JMP       380          ; PC := 380
203 [-]: GETUPVAL  R13 U4       ; R13 := U4
204 [-]: GETTABLE  R13 R13 K49  ; R13 := R13[0x5e35d4d6]
205 [-]: CALL      R13 1 2      ; R13 := R13()
206 [-]: GETGLOBAL R14 K50      ; R14 := 0x7b998233
207 [-]: MOVE      R15 R13      ; R15 := R13
208 [-]: CALL      R14 2 2      ; R14 := R14(R15)
209 [-]: TEST      R14 0        ; if not R14 then PC := 212
210 [-]: JMP       212          ; PC := 212
211 [-]: RETURN    R0 1         ; return 
212 [-]: LOADK     R14 K23      ; R14 := ""
213 [-]: LOADK     R15 K23      ; R15 := ""
214 [-]: GETUPVAL  R16 U5       ; R16 := U5
215 [-]: EQ        0 R12 R16    ; if R12 ~= R16 then PC := 223
216 [-]: JMP       223          ; PC := 223
217 [-]: GETGLOBAL R16 K19      ; R16 := 0x603636ad
218 [-]: LOADK     R17 K51      ; R17 := "/Lotus/Language/Clan/Clan_DOJO"
219 [-]: NEWTABLE  R18 0 0      ; R18 := {}
220 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
221 [-]: MOVE      R14 R16      ; R14 := R16
222 [-]: JMP       308          ; PC := 308
223 [-]: SELF      R16 R13 K52  ; R17 := R13; R16 := R13[0x3ad9ed31]
224 [-]: MOVE      R18 R12      ; R18 := R12
225 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
226 [-]: GETGLOBAL R17 K50      ; R17 := 0x7b998233
227 [-]: MOVE      R18 R16      ; R18 := R16
228 [-]: CALL      R17 2 2      ; R17 := R17(R18)
229 [-]: TEST      R17 1        ; if R17 then PC := 308
230 [-]: JMP       308          ; PC := 308
231 [-]: GETTABLE  R17 R16 K53  ; R17 := R16["mission"]
232 [-]: GETTABLE  R18 R16 K54  ; R18 := R16["locTag"]
233 [-]: GETGLOBAL R19 K55      ; R19 := _T
234 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["CustomStarChartNodeFilter"]
235 [-]: TEST      R19 0        ; if not R19 then PC := 264
236 [-]: JMP       264          ; PC := 264
237 [-]: GETGLOBAL R19 K55      ; R19 := _T
238 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["CustomStarChartNodeFilter"]
239 [-]: GETTABLE  R19 R19 K57  ; R19 := R19["Keys"]
240 [-]: TEST      R19 0        ; if not R19 then PC := 264
241 [-]: JMP       264          ; PC := 264
242 [-]: GETGLOBAL R19 K58      ; R19 := 0xcfc01047
243 [-]: GETGLOBAL R20 K55      ; R20 := _T
244 [-]: GETTABLE  R20 R20 K56  ; R20 := R20["CustomStarChartNodeFilter"]
245 [-]: GETTABLE  R20 R20 K57  ; R20 := R20["Keys"]
246 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
247 [-]: JMP       262          ; PC := 262
248 [-]: GETGLOBAL R24 K59      ; R24 := 0xb009bbc6
249 [-]: MOVE      R25 R23      ; R25 := R23
250 [-]: CALL      R24 2 2      ; R24 := R24(R25)
251 [-]: SELF      R25 R24 K60  ; R26 := R24; R25 := R24[0x92608d86]
252 [-]: CALL      R25 2 2      ; R25 := R25(R26)
253 [-]: EQ        0 R25 R12    ; if R25 ~= R12 then PC := 262
254 [-]: JMP       262          ; PC := 262
255 [-]: SELF      R25 R24 K61  ; R26 := R24; R25 := R24[0xef893aec]
256 [-]: CALL      R25 2 2      ; R25 := R25(R26)
257 [-]: MOVE      R17 R25      ; R17 := R25
258 [-]: SELF      R25 R24 K62  ; R26 := R24; R25 := R24[0xd3a9d01f]
259 [-]: CALL      R25 2 2      ; R25 := R25(R26)
260 [-]: MOVE      R18 R25      ; R18 := R25
261 [-]: JMP       264          ; PC := 264
262 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 248; R21 := R22 end
263 [-]: JMP       248          ; PC := 248
264 [-]: GETTABLE  R25 R0 K46   ; R25 := R0["NodeIndex"]
265 [-]: EQ        1 R25 K17    ; if R25 == nil then PC := 279
266 [-]: JMP       279          ; PC := 279
267 [-]: LOADK     R9 K23       ; R9 := ""
268 [-]: GETUPVAL  R25 U4       ; R25 := U4
269 [-]: GETTABLE  R25 R25 K63  ; R25 := R25[0x8a389d5f]
270 [-]: MOVE      R26 R17      ; R26 := R17
271 [-]: CALL      R25 2 2      ; R25 := R25(R26)
272 [-]: GETGLOBAL R26 K19      ; R26 := 0x603636ad
273 [-]: LOADK     R27 K64      ; R27 := "/Lotus/Language/Missions/MissionName_"
274 [-]: MOVE      R28 R25      ; R28 := R25
275 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
276 [-]: LOADKB    R28 0 0      ; R28 := false
277 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
278 [-]: MOVE      R8 R26       ; R8 := R26
279 [-]: GETGLOBAL R26 K50      ; R26 := 0x7b998233
280 [-]: MOVE      R27 R10      ; R27 := R10
281 [-]: CALL      R26 2 2      ; R26 := R26(R27)
282 [-]: TEST      R26 1        ; if R26 then PC := 287
283 [-]: JMP       287          ; PC := 287
284 [-]: GETTABLE  R26 R0 K46   ; R26 := R0["NodeIndex"]
285 [-]: EQ        1 R26 K17    ; if R26 == nil then PC := 292
286 [-]: JMP       292          ; PC := 292
287 [-]: GETUPVAL  R26 U4       ; R26 := U4
288 [-]: GETTABLE  R26 R26 K65  ; R26 := R26[0xc63cb7e8]
289 [-]: MOVE      R27 R17      ; R27 := R17
290 [-]: CALL      R26 2 2      ; R26 := R26(R27)
291 [-]: MOVE      R10 R26      ; R10 := R26
292 [-]: GETGLOBAL R26 K19      ; R26 := 0x603636ad
293 [-]: SELF      R27 R18 K66  ; R28 := R18; R27 := R18[0x6d604ba7]
294 [-]: CALL      R27 2 2      ; R27 := R27(R28)
295 [-]: LOADNIL   R28 R28      ; R28 := nil
296 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
297 [-]: MOVE      R14 R26      ; R14 := R26
298 [-]: GETGLOBAL R26 K19      ; R26 := 0x603636ad
299 [-]: SELF      R27 R13 K67  ; R28 := R13; R27 := R13[0xc1dee03f]
300 [-]: CALL      R27 2 2      ; R27 := R27(R28)
301 [-]: GETTABLE  R28 R16 K68  ; R28 := R16["region"]
302 [-]: ADD       R28 R28 K69  ; R28 := R28 + 1.000000
303 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
304 [-]: GETTABLE  R27 R27 K70  ; R27 := R27["name"]
305 [-]: LOADNIL   R28 R28      ; R28 := nil
306 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
307 [-]: MOVE      R15 R26      ; R15 := R26
308 [-]: GETGLOBAL R26 K14      ; R26 := 0x7f5022cf
309 [-]: GETTABLE  R26 R26 K71  ; R26 := R26[0x04981ab3]
310 [-]: MOVE      R27 R9       ; R27 := R9
311 [-]: CALL      R26 2 2      ; R26 := R26(R27)
312 [-]: GETGLOBAL R27 K14      ; R27 := 0x7f5022cf
313 [-]: GETTABLE  R27 R27 K71  ; R27 := R27[0x04981ab3]
314 [-]: MOVE      R28 R14      ; R28 := R14
315 [-]: CALL      R27 2 2      ; R27 := R27(R28)
316 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 319
317 [-]: JMP       319          ; PC := 319
318 [-]: LOADK     R14 K23      ; R14 := ""
319 [-]: MOVE      R26 R9       ; R26 := R9
320 [-]: GETUPVAL  R27 U0       ; R27 := U0
321 [-]: GETTABLE  R27 R27 K4   ; R27 := R27[0x06d055f9]
322 [-]: EQ        1 R9 K23     ; if R9 == "" then PC := 325
323 [-]: JMP       325          ; PC := 325
324 [-]: LOADKB    R28 0 1      ; R28 := false; PC := 325
325 [-]: LOADKB    R28 1 0      ; R28 := true
326 [-]: LOADK     R29 K23      ; R29 := ""
327 [-]: LOADK     R30 K72      ; R30 := "\r\n"
328 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
329 [-]: MOVE      R28 R14      ; R28 := R14
330 [-]: CONCAT    R9 R26 R28   ; R9 := R26 .. R27 .. R28
331 [-]: TEST      R15 0        ; if not R15 then PC := 353
332 [-]: JMP       353          ; PC := 353
333 [-]: LEN       R26 R14      ; R26 := # R14
334 [-]: LT        0 K73 R26    ; if 0.000000 >= R26 then PC := 348
335 [-]: JMP       348          ; PC := 348
336 [-]: MOVE      R26 R9       ; R26 := R9
337 [-]: GETUPVAL  R27 U0       ; R27 := U0
338 [-]: GETTABLE  R27 R27 K4   ; R27 := R27[0x06d055f9]
339 [-]: GETTABLE  R28 R0 K46   ; R28 := R0["NodeIndex"]
340 [-]: EQ        0 R28 K17    ; if R28 ~= nil then PC := 343
341 [-]: JMP       343          ; PC := 343
342 [-]: LOADKB    R28 0 1      ; R28 := false; PC := 343
343 [-]: LOADKB    R28 1 0      ; R28 := true
344 [-]: LOADK     R29 K72      ; R29 := "\r\n"
345 [-]: LOADK     R30 K74      ; R30 := " "
346 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
347 [-]: CONCAT    R9 R26 R27   ; R9 := R26 .. R27
348 [-]: MOVE      R26 R9       ; R26 := R9
349 [-]: LOADK     R27 K75      ; R27 := "("
350 [-]: MOVE      R28 R15      ; R28 := R15
351 [-]: LOADK     R29 K76      ; R29 := ")"
352 [-]: CONCAT    R9 R26 R29   ; R9 := R26 .. R27 .. R28 .. R29
353 [-]: GETTABLE  R26 R7 K48   ; R26 := R7["MissionInfo"]
354 [-]: TEST      R26 0        ; if not R26 then PC := 373
355 [-]: JMP       373          ; PC := 373
356 [-]: GETUPVAL  R26 U6       ; R26 := U6
357 [-]: TEST      R26 1        ; if R26 then PC := 373
358 [-]: JMP       373          ; PC := 373
359 [-]: GETGLOBAL R26 K19      ; R26 := 0x603636ad
360 [-]: LOADK     R27 K77      ; R27 := "/Lotus/Language/Menu/WorldStatePanel_AlertLevelInfo"
361 [-]: NEWTABLE  R28 0 2      ; R28 := {}
362 [-]: GETTABLE  R29 R7 K48   ; R29 := R7["MissionInfo"]
363 [-]: GETTABLE  R29 R29 K79  ; R29 := R29["minEnemyLevel"]
364 [-]: SETTABLE  R28 K78 R29  ; R28["MIN"] := R29
365 [-]: GETTABLE  R29 R7 K48   ; R29 := R7["MissionInfo"]
366 [-]: GETTABLE  R29 R29 K81  ; R29 := R29["maxEnemyLevel"]
367 [-]: SETTABLE  R28 K80 R29  ; R28["MAX"] := R29
368 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
369 [-]: MOVE      R27 R9       ; R27 := R9
370 [-]: LOADK     R28 K82      ; R28 := "  "
371 [-]: MOVE      R29 R26      ; R29 := R26
372 [-]: CONCAT    R9 R27 R29   ; R9 := R27 .. R28 .. R29
373 [-]: GETGLOBAL R27 K1       ; R27 := 0xae91e43b
374 [-]: SELF      R27 R27 K13  ; R28 := R27; R27 := R27[0xe261aa96]
375 [-]: GETTABLE  R29 R0 K2    ; R29 := R0["mClipName"]
376 [-]: LOADK     R30 K35      ; R30 := "Text.Desc"
377 [-]: CONST     R31 29       ; R31 := 29.000000
378 [-]: MOVE      R32 R9       ; R32 := R9
379 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
380 [-]: GETGLOBAL R27 K1       ; R27 := 0xae91e43b
381 [-]: SELF      R27 R27 K13  ; R28 := R27; R27 := R27[0xe261aa96]
382 [-]: GETTABLE  R29 R0 K2    ; R29 := R0["mClipName"]
383 [-]: LOADK     R30 K32      ; R30 := "Text.Title"
384 [-]: CONST     R31 29       ; R31 := 29.000000
385 [-]: MOVE      R32 R8       ; R32 := R8
386 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
387 [-]: GETGLOBAL R27 K1       ; R27 := 0xae91e43b
388 [-]: SELF      R27 R27 K37  ; R28 := R27; R27 := R27[0x1cb415c1]
389 [-]: GETTABLE  R29 R0 K2    ; R29 := R0["mClipName"]
390 [-]: LOADK     R30 K83      ; R30 := ".Image"
391 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
392 [-]: MOVE      R30 R10      ; R30 := R10
393 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
394 [-]: GETGLOBAL R27 K1       ; R27 := 0xae91e43b
395 [-]: SELF      R27 R27 K84  ; R28 := R27; R27 := R27[0x2ce15376]
396 [-]: GETTABLE  R29 R0 K2    ; R29 := R0["mClipName"]
397 [-]: LOADK     R30 K32      ; R30 := "Text.Title"
398 [-]: CONST     R31 34       ; R31 := 34.000000
399 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
400 [-]: GETGLOBAL R28 K1       ; R28 := 0xae91e43b
401 [-]: SELF      R28 R28 K84  ; R29 := R28; R28 := R28[0x2ce15376]
402 [-]: GETTABLE  R30 R0 K2    ; R30 := R0["mClipName"]
403 [-]: LOADK     R31 K35      ; R31 := "Text.Desc"
404 [-]: CONST     R32 34       ; R32 := 34.000000
405 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
406 [-]: ADD       R27 R27 R28  ; R27 := R27 + R28
407 [-]: ADD       R27 R27 K31  ; R27 := R27 + 15.000000
408 [-]: GETGLOBAL R28 K1       ; R28 := 0xae91e43b
409 [-]: SELF      R28 R28 K10  ; R29 := R28; R28 := R28[0xf64b7262]
410 [-]: GETTABLE  R30 R0 K2    ; R30 := R0["mClipName"]
411 [-]: LOADK     R31 K22      ; R31 := "Text"
412 [-]: CONST     R32 1        ; R32 := 1.000000
413 [-]: DIV       R33 R27 K85  ; R33 := R27 / 2.000000
414 [-]: SUB       R33 K86 R33  ; R33 := 54.000000 - R33
415 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
416 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 3103
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: CALL      R1 1 1       ; R1()
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xfeaa8f18]
 14 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 15 [-]: SELF      R4 R0 K2     ; R5 := R0; R4 := R0[0xed4e0128]
 16 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 17 [-]: SETLIST   R3 0 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 0
 18 [-]: LOADKB    R4 0 0       ; R4 := false
 19 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 20 [-]: LOADKB    R1 1 0       ; R1 := true
 21 [-]: SETUPVAL  R1 U3        ; U82 := R3
 22 [-]: GETGLOBAL R1 K3        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["BackgroundMovie"]
 24 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xe4162eed]
 25 [-]: LOADK     R3 K6        ; R3 := "ShowBlockingMessage"
 26 [-]: LOADK     R4 K7        ; R4 := "2"
 27 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 28 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 3117
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2[0xca30dfb6]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x03f57322
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  6 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 1         ; if R3 then PC := 26
 11 [-]: JMP       26           ; PC := 26
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 13 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0xf64b7262]
 14 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["mClipName"]
 15 [-]: LOADK     R6 K6        ; R6 := "RelayReconstructionEvent.ProjectName"
 16 [-]: CONST     R7 36        ; R7 := 36.000000
 17 [-]: GETUPVAL  R8 U1        ; R8 := U1
 18 [-]: GETTABLE  R8 R8 K7     ; R8 := R8[0x06d055f9]
 19 [-]: MOVE      R9 R1        ; R9 := R1
 20 [-]: GETGLOBAL R10 K8       ; R10 := 0x0032441c
 21 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["UIColor_Yellow"]
 22 [-]: GETGLOBAL R11 K8       ; R11 := 0x0032441c
 23 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["UIColor_White"]
 24 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 25 [-]: CALL      R3 0 1       ; R3(R4,...)
 26 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 3124
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADKB    R3 1 0       ; R3 := true
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 3128
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADKB    R3 0 0       ; R3 := false
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 3132
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xca30dfb6]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x03f57322
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0xe30b4949
 14 [-]: CALL      R2 2 1       ; R2(R3)
 15 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 3139
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xfcf7cf66
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 13 [-]: GETUPVAL  R2 U1        ; R2 := U1
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x32302b4a]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xca30dfb6]
 22 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 25 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: TEST      R2 1         ; if R2 then PC := 43
 30 [-]: JMP       43           ; PC := 43
 31 [-]: GETGLOBAL R2 K5        ; R2 := _T
 32 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 33 [-]: GETGLOBAL R4 K8        ; R4 := 0x97a871a8
 34 [-]: SETTABLE  R3 K7 R4     ; R3["Banner"] := R4
 35 [-]: GETGLOBAL R4 K10       ; R4 := 0x201f8d45
 36 [-]: SETTABLE  R3 K9 R4     ; R3["ProjectName"] := R4
 37 [-]: SETTABLE  R2 K6 R3     ; R2["RelayReconPhaseInfo"] := R3
 38 [-]: GETGLOBAL R2 K11       ; R2 := 0xae91e43b
 39 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0x1fd6abd0]
 40 [-]: GETGLOBAL R4 K1        ; R4 := 0xfcf7cf66
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: SETUPVAL  R2 U1        ; U82 := R1
 43 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 3160
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: CONST     R1 1         ; R1 := 1.000000
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: LEN       R2 R2        ; R2 := # R2
  6 [-]: CONST     R3 1         ; R3 := 1.000000
  7 [-]: FORPREP   R1 39        ; R1 -= R3; PC := 39
  8 [-]: GETUPVAL  R5 U1        ; R5 := U1
  9 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 10 [-]: GETTABLE  R6 R5 K0     ; R6 := R5["EventInfo"]
 11 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["mRelayReconstruction"]
 12 [-]: TEST      R6 0         ; if not R6 then PC := 39
 13 [-]: JMP       39           ; PC := 39
 14 [-]: GETUPVAL  R6 U2        ; R6 := U2
 15 [-]: GETTABLE  R6 R6 K2     ; R6 := R6[0x29f54de9]
 16 [-]: CALL      R6 1 1       ; R6()
 17 [-]: GETGLOBAL R6 K3        ; R6 := 0x64fb1586
 18 [-]: GETTABLE  R7 R5 K0     ; R7 := R5["EventInfo"]
 19 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["mConcurrentMissionKeyNames"]
 20 [-]: GETTABLE  R7 R7 R0     ; R7 := R7[R0]
 21 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7[0xed4e0128]
 22 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 23 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 24 [-]: GETUPVAL  R7 U3        ; R7 := U3
 25 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["KEY_TAG"]
 26 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 27 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 28 [-]: SETTABLE  R7 K7 R6     ; R7["name"] := R6
 29 [-]: SETTABLE  R7 K8 K9     ; R7["difficulty"] := 1.000000
 30 [-]: GETGLOBAL R8 K10       ; R8 := cjson
 31 [-]: GETTABLE  R8 R8 K11    ; R8 := R8[0xb139d7bc]
 32 [-]: MOVE      R9 R7        ; R9 := R7
 33 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 34 [-]: GETGLOBAL R9 K12       ; R9 := 0xe7f2b02f
 35 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0xd8f4f9d0]
 36 [-]: MOVE      R11 R8       ; R11 := R8
 37 [-]: CALL      R9 3 1       ; R9(R10,R11)
 38 [-]: JMP       40           ; PC := 40
 39 [-]: FORLOOP   R1 8         ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
 40 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 3178
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CONST     R1 1         ; R1 := 1.000000
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 3182
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CONST     R1 2         ; R1 := 2.000000
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 3186
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x070daa5a]
 14 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
 15 [-]: MOVE      R4 R0        ; R4 := R0
 16 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 17 [-]: CALL      R1 0 1       ; R1(R2,...)
 18 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 3194
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: CONST     R1 312       ; R1 := 312.000000
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mClipName"]
  3 [-]: LOADK     R3 K1        ; R3 := ".RelayReconstructionEvent"
  4 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  6 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x0c33ebb2]
  7 [-]: MOVE      R5 R2        ; R5 := R2
  8 [-]: LOADK     R6 K4        ; R6 := "Id"
  9 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["Id"]
 10 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 11 [-]: CONST     R3 1         ; R3 := 1.000000
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: LEN       R4 R4        ; R4 := # R4
 14 [-]: CONST     R5 1         ; R5 := 1.000000
 15 [-]: FORPREP   R3 24        ; R3 -= R5; PC := 24
 16 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 17 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7[0xd5181643]
 18 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["mClipName"]
 19 [-]: GETUPVAL  R10 U0       ; R10 := U0
 20 [-]: GETTABLE  R10 R10 R6   ; R10 := R10[R6]
 21 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 22 [-]: GETGLOBAL R10 K6       ; R10 := 0x3f56a9a5
 23 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 24 [-]: FORLOOP   R3 16        ; R3 += R5; if R3 <= R4 then begin PC := 16; R6 := R3 end
 25 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 26 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0xc0a3774b]
 27 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["mClipName"]
 28 [-]: LOADK     R10 K8       ; R10 := "Btn"
 29 [-]: CONST     R11 11       ; R11 := 11.000000
 30 [-]: LOADKB    R12 0 0      ; R12 := false
 31 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 32 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 33 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0x1cb415c1]
 34 [-]: MOVE      R9 R2        ; R9 := R2
 35 [-]: LOADK     R10 K10      ; R10 := ".Banner"
 36 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 37 [-]: GETGLOBAL R10 K11      ; R10 := 0x97a871a8
 38 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 39 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 40 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0xe261aa96]
 41 [-]: MOVE      R9 R2        ; R9 := R2
 42 [-]: LOADK     R10 K13      ; R10 := "ProjectName"
 43 [-]: CONST     R11 38       ; R11 := 38.000000
 44 [-]: LOADK     R12 K14      ; R12 := "bottom"
 45 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 46 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 47 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7[0x20b98db3]
 48 [-]: MOVE      R9 R2        ; R9 := R2
 49 [-]: LOADK     R10 K16      ; R10 := ".ProjectName.text"
 50 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 51 [-]: LOADK     R10 K17      ; R10 := ""
 52 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 53 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 54 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7[0x20b98db3]
 55 [-]: MOVE      R9 R2        ; R9 := R2
 56 [-]: LOADK     R10 K18      ; R10 := ".Preview.Hint.text"
 57 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 58 [-]: LOADK     R10 K19      ; R10 := "/Lotus/Language/RelayReconstruction/PreviewHint"
 59 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 60 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 61 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7[0x91a24e4b]
 62 [-]: MOVE      R9 R2        ; R9 := R2
 63 [-]: LOADK     R10 K21      ; R10 := ".Preview.Hint"
 64 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 65 [-]: CONST     R10 33       ; R10 := 33.000000
 66 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 67 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 68 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0xf64b7262]
 69 [-]: MOVE      R10 R2       ; R10 := R2
 70 [-]: LOADK     R11 K23      ; R11 := "Preview.HintBg"
 71 [-]: CONST     R12 9        ; R12 := 9.000000
 72 [-]: GETGLOBAL R13 K24      ; R13 := 0x0032441c
 73 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["UIColor_Black"]
 74 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 75 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 76 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0xf64b7262]
 77 [-]: MOVE      R10 R2       ; R10 := R2
 78 [-]: LOADK     R11 K23      ; R11 := "Preview.HintBg"
 79 [-]: CONST     R12 10       ; R12 := 10.000000
 80 [-]: CONST     R13 60       ; R13 := 60.000000
 81 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 82 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 83 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0xf64b7262]
 84 [-]: MOVE      R10 R2       ; R10 := R2
 85 [-]: LOADK     R11 K23      ; R11 := "Preview.HintBg"
 86 [-]: CONST     R12 12       ; R12 := 12.000000
 87 [-]: ADD       R13 R7 K26   ; R13 := R7 + 20.000000
 88 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 89 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 90 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0xf64b7262]
 91 [-]: MOVE      R10 R2       ; R10 := R2
 92 [-]: LOADK     R11 K27      ; R11 := "ProgressCircle"
 93 [-]: CONST     R12 9        ; R12 := 9.000000
 94 [-]: LOADK     R13 K28      ; R13 := 4558271.000000
 95 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 96 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 97 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8[0xd5181643]
 98 [-]: MOVE      R10 R2       ; R10 := R2
 99 [-]: LOADK     R11 K29      ; R11 := ".ProgressCircle.Fill"
100 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
101 [-]: GETGLOBAL R11 K30      ; R11 := 0xecb0b641
102 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
103 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
104 [-]: SELF      R8 R8 K31    ; R9 := R8; R8 := R8[0x91e13703]
105 [-]: MOVE      R10 R2       ; R10 := R2
106 [-]: LOADK     R11 K29      ; R11 := ".ProgressCircle.Fill"
107 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
108 [-]: LOADK     R11 K32      ; R11 := "AlphaTestThreshold"
109 [-]: GETTABLE  R12 R0 K33   ; R12 := R0["PersonalCount"]
110 [-]: GETTABLE  R13 R0 K34   ; R13 := R0["ReqCount"]
111 [-]: DIV       R12 R12 R13  ; R12 := R12 / R13
112 [-]: CONST     R13 0        ; R13 := 0.000000
113 [-]: CONST     R14 0        ; R14 := 0.000000
114 [-]: CONST     R15 0        ; R15 := 0.000000
115 [-]: CALL      R8 8 1       ; R8(R9,R10,R11,R12,R13,R14,R15)
116 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
117 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0xc0a3774b]
118 [-]: MOVE      R10 R2       ; R10 := R2
119 [-]: LOADK     R11 K35      ; R11 := "ProgressCircle.Label"
120 [-]: CONST     R12 11       ; R12 := 11.000000
121 [-]: LOADKB    R13 0 0      ; R13 := false
122 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
123 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
124 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0xc0a3774b]
125 [-]: MOVE      R10 R2       ; R10 := R2
126 [-]: LOADK     R11 K36      ; R11 := "ProgressBacker.Label"
127 [-]: CONST     R12 11       ; R12 := 11.000000
128 [-]: LOADKB    R13 0 0      ; R13 := false
129 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
130 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
131 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0xe261aa96]
132 [-]: MOVE      R10 R2       ; R10 := R2
133 [-]: LOADK     R11 K37      ; R11 := "ProgressAmnt"
134 [-]: CONST     R12 29       ; R12 := 29.000000
135 [-]: GETUPVAL  R13 U1       ; R13 := U1
136 [-]: GETTABLE  R13 R13 K38  ; R13 := R13[0x1142c7a8]
137 [-]: GETTABLE  R14 R0 K33   ; R14 := R0["PersonalCount"]
138 [-]: CALL      R13 2 2      ; R13 := R13(R14)
139 [-]: LOADK     R14 K39      ; R14 := "/"
140 [-]: GETUPVAL  R15 U1       ; R15 := U1
141 [-]: GETTABLE  R15 R15 K38  ; R15 := R15[0x1142c7a8]
142 [-]: GETTABLE  R16 R0 K34   ; R16 := R0["ReqCount"]
143 [-]: CALL      R15 2 2      ; R15 := R15(R16)
144 [-]: CONCAT    R13 R13 R15  ; R13 := R13 .. R14 .. R15
145 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
146 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
147 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0x20b98db3]
148 [-]: MOVE      R10 R2       ; R10 := R2
149 [-]: LOADK     R11 K40      ; R11 := ".ProgressTitle.text"
150 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
151 [-]: LOADK     R11 K41      ; R11 := "/Lotus/Language/RelayReconstruction/ContributorTitle"
152 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
153 [-]: LOADK     R8 K17       ; R8 := ""
154 [-]: GETTABLE  R9 R0 K33    ; R9 := R0["PersonalCount"]
155 [-]: GETTABLE  R10 R0 K34   ; R10 := R0["ReqCount"]
156 [-]: LT        0 R9 R10     ; if R9 >= R10 then PC := 171
157 [-]: JMP       171          ; PC := 171
158 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
159 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9[0x42b04007]
160 [-]: LOADK     R11 K43      ; R11 := "/Lotus/Language/RelayReconstruction/ContributorDescInProgress"
161 [-]: LOADKB    R12 0 0      ; R12 := false
162 [-]: NEWTABLE  R13 0 1      ; R13 := {}
163 [-]: GETUPVAL  R14 U1       ; R14 := U1
164 [-]: GETTABLE  R14 R14 K38  ; R14 := R14[0x1142c7a8]
165 [-]: GETTABLE  R15 R0 K34   ; R15 := R0["ReqCount"]
166 [-]: CALL      R14 2 2      ; R14 := R14(R15)
167 [-]: SETTABLE  R13 K44 R14  ; R13[0x55f27c30] := R14
168 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
169 [-]: MOVE      R8 R9        ; R8 := R9
170 [-]: JMP       177          ; PC := 177
171 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
172 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9[0x42b04007]
173 [-]: LOADK     R11 K45      ; R11 := "/Lotus/Language/RelayReconstruction/ContributorDescComplete"
174 [-]: LOADKB    R12 0 0      ; R12 := false
175 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
176 [-]: MOVE      R8 R9        ; R8 := R9
177 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
178 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xe261aa96]
179 [-]: MOVE      R11 R2       ; R11 := R2
180 [-]: LOADK     R12 K46      ; R12 := "ProgressDesc"
181 [-]: CONST     R13 29       ; R13 := 29.000000
182 [-]: MOVE      R14 R8       ; R14 := R8
183 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
184 [-]: GETGLOBAL R9 K47       ; R9 := 0x2d0fad09
185 [-]: LOADK     R10 K48      ; R10 := "Lotus.Interface.Components.Button"
186 [-]: CALL      R9 2 2       ; R9 := R9(R10)
187 [-]: GETTABLE  R10 R9 K50   ; R10 := R9[0x4675a542]
188 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
189 [-]: MOVE      R12 R2       ; R12 := R2
190 [-]: LOADK     R13 K51      ; R13 := ".CollectBtn"
191 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
192 [-]: LOADK     R13 K52      ; R13 := "/Lotus/Language/RelayReconstruction/CollectBtn"
193 [-]: LOADK     R14 K53      ; R14 := "CollectEssence"
194 [-]: LOADK     R15 K17      ; R15 := ""
195 [-]: LOADNIL   R16 R17      ; R16 := R17 := nil
196 [-]: LOADKB    R18 1 0      ; R18 := true
197 [-]: CALL      R10 9 2      ; R10 := R10(R11,R12,R13,R14,R15,R16,R17,R18)
198 [-]: SETTABLE  R0 K49 R10   ; R0[0xe261aa96] := R10
199 [-]: GETTABLE  R10 R0 K49   ; R10 := R0["CollectBtn"]
200 [-]: SELF      R10 R10 K54  ; R11 := R10; R10 := R10[0x1403231b]
201 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["Id"]
202 [-]: CALL      R10 3 1      ; R10(R11,R12)
203 [-]: GETTABLE  R10 R0 K49   ; R10 := R0["CollectBtn"]
204 [-]: SETTABLE  R10 K55 K56  ; R10["mWidth"] := 558.000000
205 [-]: GETTABLE  R10 R0 K49   ; R10 := R0["CollectBtn"]
206 [-]: SETTABLE  R10 K57 K58  ; R10["mAlignment"] := "center"
207 [-]: GETTABLE  R10 R0 K49   ; R10 := R0["CollectBtn"]
208 [-]: SELF      R10 R10 K59  ; R11 := R10; R10 := R10[0x71e9ac81]
209 [-]: CALL      R10 2 1      ; R10(R11)
210 [-]: GETTABLE  R10 R9 K50   ; R10 := R9[0x4675a542]
211 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
212 [-]: MOVE      R12 R2       ; R12 := R2
213 [-]: LOADK     R13 K61      ; R13 := ".DepositBtn"
214 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
215 [-]: LOADK     R13 K62      ; R13 := "/Lotus/Language/RelayReconstruction/GoToRelayBtn"
216 [-]: LOADK     R14 K63      ; R14 := "DepositEssence"
217 [-]: LOADK     R15 K17      ; R15 := ""
218 [-]: LOADNIL   R16 R17      ; R16 := R17 := nil
219 [-]: LOADKB    R18 1 0      ; R18 := true
220 [-]: CALL      R10 9 2      ; R10 := R10(R11,R12,R13,R14,R15,R16,R17,R18)
221 [-]: SETTABLE  R0 K60 R10   ; R0["DepositBtn"] := R10
222 [-]: GETTABLE  R10 R0 K60   ; R10 := R0["DepositBtn"]
223 [-]: SELF      R10 R10 K54  ; R11 := R10; R10 := R10[0x1403231b]
224 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["Id"]
225 [-]: CALL      R10 3 1      ; R10(R11,R12)
226 [-]: GETTABLE  R10 R0 K60   ; R10 := R0["DepositBtn"]
227 [-]: SETTABLE  R10 K55 K56  ; R10["mWidth"] := 558.000000
228 [-]: GETTABLE  R10 R0 K60   ; R10 := R0["DepositBtn"]
229 [-]: SETTABLE  R10 K57 K58  ; R10["mAlignment"] := "center"
230 [-]: GETTABLE  R10 R0 K60   ; R10 := R0["DepositBtn"]
231 [-]: SELF      R10 R10 K59  ; R11 := R10; R10 := R10[0x71e9ac81]
232 [-]: CALL      R10 2 1      ; R10(R11)
233 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
234 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0xf64b7262]
235 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["mClipName"]
236 [-]: LOADK     R13 K64      ; R13 := "Outline"
237 [-]: CONST     R14 13       ; R14 := 13.000000
238 [-]: MOVE      R15 R1       ; R15 := R1
239 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
240 [-]: SETTABLE  R0 K65 R1    ; R0[0x74a11ec6] := R1
241 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 3250
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf64b7262]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "Name"
  5 [-]: CONST     R5 1         ; R5 := 1.000000
  6 [-]: CONST     R6 10        ; R6 := 10.000000
  7 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  8 [-]: GETGLOBAL R1 K4        ; R1 := 0x5bced4c4
  9 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0x55f27c30]
 10 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["Progress"]
 11 [-]: MUL       R2 R2 K7     ; R2 := R2 * 100.000000
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["Count"]
 14 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["Goal"]
 15 [-]: LE        1 R3 R2      ; if R3 <= R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 18
 18 [-]: LOADKB    R2 1 0       ; R2 := true
 19 [-]: TEST      R2 1         ; if R2 then PC := 47
 20 [-]: JMP       47           ; PC := 47
 21 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 22 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xe261aa96]
 23 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 24 [-]: LOADK     R6 K3        ; R6 := "Name"
 25 [-]: CONST     R7 29        ; R7 := 29.000000
 26 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 27 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0x42b04007]
 28 [-]: LOADK     R10 K12      ; R10 := "/Lotus/Language/Menu/Codex_Undiscovered"
 29 [-]: LOADKB    R11 0 0      ; R11 := false
 30 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 31 [-]: CALL      R3 0 1       ; R3(R4,...)
 32 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 33 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0xc0a3774b]
 34 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 35 [-]: LOADK     R6 K6        ; R6 := "Progress"
 36 [-]: CONST     R7 11        ; R7 := 11.000000
 37 [-]: LOADKB    R8 0 0       ; R8 := false
 38 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 39 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 40 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0xc0a3774b]
 41 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 42 [-]: LOADK     R6 K14       ; R6 := "ProgressBar"
 43 [-]: CONST     R7 11        ; R7 := 11.000000
 44 [-]: LOADKB    R8 0 0       ; R8 := false
 45 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 46 [-]: JMP       81           ; PC := 81
 47 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 48 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xe261aa96]
 49 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 50 [-]: LOADK     R6 K3        ; R6 := "Name"
 51 [-]: CONST     R7 29        ; R7 := 29.000000
 52 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 53 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0x42b04007]
 54 [-]: LOADK     R10 K15      ; R10 := "/Lotus/Language/Menu/Scanned"
 55 [-]: LOADKB    R11 0 0      ; R11 := false
 56 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 57 [-]: CALL      R3 0 1       ; R3(R4,...)
 58 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 59 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x42b04007]
 60 [-]: LOADK     R5 K16       ; R5 := "/Lotus/Language/Menu/Collector_CommunityGoal"
 61 [-]: LOADKB    R6 0 0       ; R6 := false
 62 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 63 [-]: LOADK     R4 K17       ; R4 := ": "
 64 [-]: MOVE      R5 R1        ; R5 := R1
 65 [-]: LOADK     R6 K18       ; R6 := "%"
 66 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 67 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 68 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0xf64b7262]
 69 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mClipName"]
 70 [-]: LOADK     R7 K6        ; R7 := "Progress"
 71 [-]: CONST     R8 1         ; R8 := 1.000000
 72 [-]: CONST     R9 44        ; R9 := 44.000000
 73 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 74 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 75 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xe261aa96]
 76 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mClipName"]
 77 [-]: LOADK     R7 K6        ; R7 := "Progress"
 78 [-]: CONST     R8 29        ; R8 := 29.000000
 79 [-]: MOVE      R9 R3        ; R9 := R3
 80 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 81 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 82 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0xf64b7262]
 83 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mClipName"]
 84 [-]: LOADK     R7 K19       ; R7 := "Image"
 85 [-]: CONST     R8 12        ; R8 := 12.000000
 86 [-]: CONST     R9 71        ; R9 := 71.000000
 87 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 88 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 89 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0xef99134f]
 90 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mClipName"]
 91 [-]: LOADK     R7 K21       ; R7 := ".Image"
 92 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 93 [-]: GETGLOBAL R7 K22       ; R7 := 0x252d63ac
 94 [-]: GETGLOBAL R8 K23       ; R8 := 0x1691ef99
 95 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 96 [-]: CONST     R4 400       ; R4 := 400.000000
 97 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 98 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0xf64b7262]
 99 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
100 [-]: LOADK     R8 K24       ; R8 := "ProgressBar.Fill"
101 [-]: CONST     R9 12        ; R9 := 12.000000
102 [-]: GETGLOBAL R10 K25      ; R10 := 0x42dcc9f5
103 [-]: GETUPVAL  R11 U0       ; R11 := U0
104 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0x74a11ec6]
105 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["Progress"]
106 [-]: MUL       R12 R4 R12   ; R12 := R4 * R12
107 [-]: CALL      R11 2 2      ; R11 := R11(R12)
108 [-]: LOADK     R12 K27      ; R12 := 0.010000
109 [-]: MOVE      R13 R4       ; R13 := R4
110 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
111 [-]: CALL      R5 0 1       ; R5(R6,...)
112 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
113 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0xf64b7262]
114 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
115 [-]: LOADK     R8 K28       ; R8 := "ProgressBar.Bg"
116 [-]: CONST     R9 12        ; R9 := 12.000000
117 [-]: MOVE      R10 R4       ; R10 := R4
118 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
119 [-]: GETTABLE  R5 R0 K29    ; R5 := R0["IconIndex"]
120 [-]: SUB       R5 R5 K30    ; R5 := R5 - 1.000000
121 [-]: MOD       R6 R5 K31    ; R6 := R5 % 4.000000
122 [-]: GETGLOBAL R7 K4        ; R7 := 0x5bced4c4
123 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x55f27c30]
124 [-]: DIV       R8 R5 K31    ; R8 := R5 / 4.000000
125 [-]: CALL      R7 2 2       ; R7 := R7(R8)
126 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["Progress"]
127 [-]: SETTABLE  R0 K32 R8    ; R0["PixelateBias"] := R8
128 [-]: GETTABLE  R8 R0 K33    ; R8 := R0["PixelateScroll"]
129 [-]: EQ        0 R8 K34     ; if R8 ~= nil then PC := 132
130 [-]: JMP       132          ; PC := 132
131 [-]: SETTABLE  R0 K33 K35   ; R0["PixelateScroll"] := 0.000000
132 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
133 [-]: SELF      R8 R8 K36    ; R9 := R8; R8 := R8[0x91e13703]
134 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
135 [-]: LOADK     R11 K21      ; R11 := ".Image"
136 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
137 [-]: LOADK     R11 K37      ; R11 := "UVZoom"
138 [-]: CONST     R12 0        ; R12 := 0.250000
139 [-]: CONST     R13 0        ; R13 := 0.125000
140 [-]: MUL       R14 K38 R6   ; R14 := 0.333000 * R6
141 [-]: MUL       R15 K39 R7   ; R15 := 0.144000 * R7
142 [-]: CALL      R8 8 1       ; R8(R9,R10,R11,R12,R13,R14,R15)
143 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
144 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0xc0a3774b]
145 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
146 [-]: LOADK     R11 K40      ; R11 := "BlueprintBg"
147 [-]: CONST     R12 11       ; R12 := 11.000000
148 [-]: LOADKB    R13 0 0      ; R13 := false
149 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
150 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 3287
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: LOADK     R2 K1        ; R2 := ".Event"
  3 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  4 [-]: CONST     R2 1         ; R2 := 1.000000
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: LEN       R3 R3        ; R3 := # R3
  7 [-]: CONST     R4 1         ; R4 := 1.000000
  8 [-]: FORPREP   R2 17        ; R2 -= R4; PC := 17
  9 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 10 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0xd5181643]
 11 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mClipName"]
 12 [-]: GETUPVAL  R9 U0        ; R9 := U0
 13 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 14 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 15 [-]: GETGLOBAL R9 K4        ; R9 := 0x3f56a9a5
 16 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 17 [-]: FORLOOP   R2 9         ; R2 += R4; if R2 <= R3 then begin PC := 9; R5 := R2 end
 18 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 19 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0xc0a3774b]
 20 [-]: MOVE      R8 R1        ; R8 := R1
 21 [-]: LOADK     R9 K6        ; R9 := "Best"
 22 [-]: CONST     R10 11       ; R10 := 11.000000
 23 [-]: LOADKB    R11 0 0      ; R11 := false
 24 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 25 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 26 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0xc0a3774b]
 27 [-]: MOVE      R8 R1        ; R8 := R1
 28 [-]: LOADK     R9 K7        ; R9 := "Expiry"
 29 [-]: CONST     R10 11       ; R10 := 11.000000
 30 [-]: LOADKB    R11 0 0      ; R11 := false
 31 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 32 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 33 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0xc0a3774b]
 34 [-]: MOVE      R8 R1        ; R8 := R1
 35 [-]: LOADK     R9 K8        ; R9 := "RewardPrefix"
 36 [-]: CONST     R10 11       ; R10 := 11.000000
 37 [-]: LOADKB    R11 0 0      ; R11 := false
 38 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 39 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 40 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0xc0a3774b]
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: LOADK     R9 K9        ; R9 := "Progress"
 43 [-]: CONST     R10 11       ; R10 := 11.000000
 44 [-]: LOADKB    R11 0 0      ; R11 := false
 45 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 46 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["EventInfo"]
 47 [-]: GETTABLE  R7 R6 K11    ; R7 := R6["mDesc"]
 48 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
 49 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0xe261aa96]
 50 [-]: MOVE      R10 R1       ; R10 := R1
 51 [-]: LOADK     R11 K13      ; R11 := "Title"
 52 [-]: CONST     R12 29       ; R12 := 29.000000
 53 [-]: GETGLOBAL R13 K14      ; R13 := 0x603636ad
 54 [-]: MOVE      R14 R7       ; R14 := R7
 55 [-]: LOADNIL   R15 R15      ; R15 := nil
 56 [-]: CALL      R13 3 0      ; R13,... := R13(R14,R15)
 57 [-]: CALL      R8 0 1       ; R8(R9,...)
 58 [-]: GETGLOBAL R8 K14       ; R8 := 0x603636ad
 59 [-]: GETTABLE  R9 R6 K15    ; R9 := R6["mToolTip"]
 60 [-]: LOADNIL   R10 R10      ; R10 := nil
 61 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 62 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
 63 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xe261aa96]
 64 [-]: MOVE      R11 R1       ; R11 := R1
 65 [-]: LOADK     R12 K16      ; R12 := "Desc"
 66 [-]: CONST     R13 29       ; R13 := 29.000000
 67 [-]: MOVE      R14 R8       ; R14 := R8
 68 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 69 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
 70 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9[0x91a24e4b]
 71 [-]: MOVE      R11 R1       ; R11 := R1
 72 [-]: LOADK     R12 K18      ; R12 := ".Desc"
 73 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 74 [-]: CONST     R12 1        ; R12 := 1.000000
 75 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 76 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
 77 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0x91a24e4b]
 78 [-]: MOVE      R12 R1       ; R12 := R1
 79 [-]: LOADK     R13 K18      ; R13 := ".Desc"
 80 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 81 [-]: CONST     R13 34       ; R13 := 34.000000
 82 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 83 [-]: ADD       R11 R9 R10   ; R11 := R9 + R10
 84 [-]: SUB       R11 R11 K19  ; R11 := R11 - 10.000000
 85 [-]: GETUPVAL  R12 U1       ; R12 := U1
 86 [-]: MOVE      R13 R0       ; R13 := R0
 87 [-]: GETUPVAL  R14 U2       ; R14 := U2
 88 [-]: MOVE      R15 R11      ; R15 := R11
 89 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 90 [-]: GETTABLE  R12 R0 K20   ; R12 := R0["mRewardList"]
 91 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12[0x7c09c373]
 92 [-]: LOADKB    R14 1 0      ; R14 := true
 93 [-]: LOADKB    R15 1 0      ; R15 := true
 94 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 95 [-]: GETTABLE  R12 R0 K10   ; R12 := R0["EventInfo"]
 96 [-]: GETTABLE  R12 R12 K22  ; R12 := R12["mMultiProgress"]
 97 [-]: NEWTABLE  R13 0 0      ; R13 := {}
 98 [-]: NEWTABLE  R14 16 0     ; R14 := {}
 99 [-]: CONST     R15 1        ; R15 := 1.000000
100 [-]: CONST     R16 1        ; R16 := 1.000000
101 [-]: CONST     R17 2        ; R17 := 2.000000
102 [-]: CONST     R18 4        ; R18 := 4.000000
103 [-]: CONST     R19 4        ; R19 := 4.000000
104 [-]: CONST     R20 4        ; R20 := 4.000000
105 [-]: CONST     R21 5        ; R21 := 5.000000
106 [-]: CONST     R22 5        ; R22 := 5.000000
107 [-]: CONST     R23 5        ; R23 := 5.000000
108 [-]: CONST     R24 5        ; R24 := 5.000000
109 [-]: CONST     R25 8        ; R25 := 8.000000
110 [-]: CONST     R26 8        ; R26 := 8.000000
111 [-]: CONST     R27 18       ; R27 := 18.000000
112 [-]: CONST     R28 19       ; R28 := 19.000000
113 [-]: CONST     R29 19       ; R29 := 19.000000
114 [-]: CONST     R30 21       ; R30 := 21.000000
115 [-]: SETLIST   R14 16 1     ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 16
116 [-]: GETGLOBAL R15 K23      ; R15 := 0x76ea806b
117 [-]: SELF      R15 R15 K24  ; R16 := R15; R15 := R15[0x3f3ae64c]
118 [-]: CONST     R17 0        ; R17 := 0.000000
119 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
120 [-]: LOADNIL   R16 R16      ; R16 := nil
121 [-]: GETGLOBAL R17 K25      ; R17 := 0x7b998233
122 [-]: MOVE      R18 R15      ; R18 := R15
123 [-]: CALL      R17 2 2      ; R17 := R17(R18)
124 [-]: TEST      R17 1        ; if R17 then PC := 129
125 [-]: JMP       129          ; PC := 129
126 [-]: SELF      R17 R15 K26  ; R18 := R15; R17 := R15[0x537ac148]
127 [-]: CALL      R17 2 2      ; R17 := R17(R18)
128 [-]: MOVE      R16 R17      ; R16 := R17
129 [-]: CONST     R17 1        ; R17 := 1.000000
130 [-]: LEN       R18 R12      ; R18 := # R12
131 [-]: CONST     R19 1        ; R19 := 1.000000
132 [-]: FORPREP   R17 148      ; R17 -= R19; PC := 148
133 [-]: CONST     R21 0        ; R21 := 0.000000
134 [-]: TEST      R16 0        ; if not R16 then PC := 137
135 [-]: JMP       137          ; PC := 137
136 [-]: LOADK     R21 K27      ; R21 := 10000000.000000
137 [-]: GETGLOBAL R22 K28      ; R22 := 0x33bdd652
138 [-]: GETTABLE  R22 R22 K29  ; R22 := R22[0x23d5322f]
139 [-]: MOVE      R23 R13      ; R23 := R13
140 [-]: NEWTABLE  R24 0 4      ; R24 := {}
141 [-]: GETTABLE  R25 R12 R20  ; R25 := R12[R20]
142 [-]: SETTABLE  R24 K9 R25   ; R24["Progress"] := R25
143 [-]: GETTABLE  R25 R14 R20  ; R25 := R14[R20]
144 [-]: SETTABLE  R24 K30 R25  ; R24["IconIndex"] := R25
145 [-]: SETTABLE  R24 K31 R21  ; R24["Count"] := R21
146 [-]: SETTABLE  R24 K32 K33  ; R24["Goal"] := 1.000000
147 [-]: CALL      R22 3 1      ; R22(R23,R24)
148 [-]: FORLOOP   R17 133      ; R17 += R19; if R17 <= R18 then begin PC := 133; R20 := R17 end
149 [-]: GETGLOBAL R22 K28      ; R22 := 0x33bdd652
150 [-]: GETTABLE  R22 R22 K34  ; R22 := R22[0xf21b1d8e]
151 [-]: MOVE      R23 R13      ; R23 := R13
152 [-]: CLOSURE   R24 0        ; R24 := closure(Function #56.1)
153 [-]: CALL      R22 3 1      ; R22(R23,R24)
154 [-]: CONST     R22 1        ; R22 := 1.000000
155 [-]: LEN       R23 R13      ; R23 := # R13
156 [-]: CONST     R24 1        ; R24 := 1.000000
157 [-]: FORPREP   R22 163      ; R22 -= R24; PC := 163
158 [-]: GETTABLE  R26 R0 K20   ; R26 := R0["mRewardList"]
159 [-]: SELF      R26 R26 K35  ; R27 := R26; R26 := R26[0xbad4316f]
160 [-]: GETTABLE  R28 R13 R25  ; R28 := R13[R25]
161 [-]: LOADKB    R29 1 0      ; R29 := true
162 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
163 [-]: FORLOOP   R22 158      ; R22 += R24; if R22 <= R23 then begin PC := 158; R25 := R22 end
164 [-]: GETTABLE  R26 R0 K20   ; R26 := R0["mRewardList"]
165 [-]: SELF      R26 R26 K36  ; R27 := R26; R26 := R26[0x71e9ac81]
166 [-]: CALL      R26 2 1      ; R26(R27)
167 [-]: GETTABLE  R26 R0 K20   ; R26 := R0["mRewardList"]
168 [-]: SELF      R26 R26 K37  ; R27 := R26; R26 := R26[0x5fbddc1a]
169 [-]: CALL      R26 2 2      ; R26 := R26(R27)
170 [-]: GETTABLE  R27 R0 K20   ; R27 := R0["mRewardList"]
171 [-]: GETTABLE  R27 R27 K38  ; R27 := R27["mForcedVerticalSeparation"]
172 [-]: MUL       R26 R26 R27  ; R26 := R26 * R27
173 [-]: ADD       R26 R11 R26  ; R26 := R11 + R26
174 [-]: ADD       R26 R26 K39  ; R26 := R26 + 30.000000
175 [-]: GETGLOBAL R27 K2       ; R27 := 0xae91e43b
176 [-]: SELF      R27 R27 K40  ; R28 := R27; R27 := R27[0xf64b7262]
177 [-]: GETTABLE  R29 R0 K0    ; R29 := R0["mClipName"]
178 [-]: LOADK     R30 K41      ; R30 := "Outline"
179 [-]: CONST     R31 13       ; R31 := 13.000000
180 [-]: MOVE      R32 R26      ; R32 := R26
181 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
182 [-]: SETTABLE  R0 K42 R26   ; R0["TotalHeight"] := R26
183 [-]: SETTABLE  R0 K43 K44   ; R0["SkipScroll"] := true
184 [-]: RETURN    R0 1         ; return 


; Function #56.1:
;
; Name:            
; Defined at line: 3331
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Progress"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Progress"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADKB    R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 3345
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x2d0fad09
  2 [-]: LOADK     R4 K1        ; R4 := "EE.Interface.Components.List"
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETTABLE  R4 R3 K3     ; R4 := R3[0x9383bc56]
  5 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
  6 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mClipName"]
  7 [-]: LOADK     R7 K6        ; R7 := ".Event.Reward"
  8 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
  9 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 10 [-]: SETTABLE  R0 K2 R4     ; R0["mRewardList"] := R4
 11 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mRewardList"]
 12 [-]: ADD       R5 R2 K8     ; R5 := R2 + 26.000000
 13 [-]: SETTABLE  R4 K7 R5     ; R4["mInitialY"] := R5
 14 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mRewardList"]
 15 [-]: SETTABLE  R4 K9 K10    ; R4["mForcedVerticalSeparation"] := 75.000000
 16 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mRewardList"]
 17 [-]: SETTABLE  R4 K11 K12   ; R4["mTransitionInDeltaY"] := 0.000000
 18 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mRewardList"]
 19 [-]: SETTABLE  R4 K13 K12   ; R4["mTransitionOutDeltaY"] := 0.000000
 20 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mRewardList"]
 21 [-]: SETTABLE  R4 K14 K15   ; R4["mWrapAroundNavigation"] := false
 22 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mRewardList"]
 23 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 24 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5[0x91a24e4b]
 25 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipName"]
 26 [-]: LOADK     R8 K18       ; R8 := ".Event.Reward.Image"
 27 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 28 [-]: CONST     R8 1         ; R8 := 1.000000
 29 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 30 [-]: SETTABLE  R4 K16 R5    ; R4["mInitImageY"] := R5
 31 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mRewardList"]
 32 [-]: CLOSURE   R5 0         ; R5 := closure(Function #57.1)
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: MOVE      R0 R1        ; R0 := R1
 36 [-]: SETTABLE  R4 K19 R5    ; R4["mElementDrawCallback"] := R5
 37 [-]: RETURN    R0 1         ; return 


; Function #57.1:
;
; Name:            
; Defined at line: 3355
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: CONST     R1 1         ; R1 := 1.000000
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: CONST     R3 1         ; R3 := 1.000000
  5 [-]: FORPREP   R1 15        ; R1 -= R3; PC := 15
  6 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
  7 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0xd5181643]
  8 [-]: GETUPVAL  R7 U1        ; R7 := U1
  9 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mClipName"]
 10 [-]: GETUPVAL  R8 U0        ; R8 := U0
 11 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 12 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 13 [-]: GETGLOBAL R8 K3        ; R8 := 0x3f56a9a5
 14 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 15 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 16 [-]: GETUPVAL  R5 U2        ; R5 := U2
 17 [-]: EQ        1 R5 K4      ; if R5 == nil then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETUPVAL  R5 U2        ; R5 := U2
 20 [-]: MOVE      R6 R0        ; R6 := R0
 21 [-]: LOADNIL   R7 R7        ; R7 := nil
 22 [-]: GETUPVAL  R8 U1        ; R8 := U1
 23 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["mRewardList"]
 24 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 25 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 3366
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x6d604ba7]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: MOVE      R0 R1        ; R0 := R1
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7f5022cf
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xa5c556b9]
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: LOADK     R3 K3        ; R3 := "Anniversary"
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R0 K3        ; R0 := "Anniversary"
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 3375
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  93

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["IsLinearEvent"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mMissionNumber"]
  5 [-]: EQ        1 R1 K3      ; if R1 == 1.000000 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 8
  8 [-]: LOADKB    R1 1 0       ; R1 := true
  9 [-]: SETTABLE  R0 K1 R1     ; R0["IsBannerEvent"] := R1
 10 [-]: JMP       12           ; PC := 12
 11 [-]: SETTABLE  R0 K1 K4     ; R0["IsBannerEvent"] := true
 12 [-]: SETTABLE  R0 K5 K6     ; R0["TotalHeight"] := 0.000000
 13 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xc0a3774b]
 15 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 16 [-]: LOADK     R4 K10       ; R4 := "EventHeader"
 17 [-]: CONST     R5 11        ; R5 := 11.000000
 18 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["IsBannerEvent"]
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xf64b7262]
 22 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 23 [-]: LOADK     R4 K12       ; R4 := "EventHeader.Timer"
 24 [-]: CONST     R5 36        ; R5 := 36.000000
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["FloatingContentHighlight"]
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 29 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xf64b7262]
 30 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 31 [-]: LOADK     R4 K14       ; R4 := "EventHeader.Title"
 32 [-]: CONST     R5 36        ; R5 := 36.000000
 33 [-]: GETUPVAL  R6 U0        ; R6 := U0
 34 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["FloatingContentHighlight"]
 35 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 36 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 37 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xf64b7262]
 38 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 39 [-]: LOADK     R4 K15       ; R4 := "EventHeader.Separator"
 40 [-]: CONST     R5 9         ; R5 := 9.000000
 41 [-]: GETUPVAL  R6 U0        ; R6 := U0
 42 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["FloatingContent"]
 43 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 44 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 45 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xf64b7262]
 46 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 47 [-]: LOADK     R4 K15       ; R4 := "EventHeader.Separator"
 48 [-]: CONST     R5 10        ; R5 := 10.000000
 49 [-]: CONST     R6 10        ; R6 := 10.000000
 50 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 51 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 52 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xc0a3774b]
 53 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 54 [-]: LOADK     R4 K17       ; R4 := "Event"
 55 [-]: CONST     R5 11        ; R5 := 11.000000
 56 [-]: LOADKB    R6 1 0       ; R6 := true
 57 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 58 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 59 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xc0a3774b]
 60 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 61 [-]: LOADK     R4 K18       ; R4 := "Event.Best"
 62 [-]: CONST     R5 11        ; R5 := 11.000000
 63 [-]: LOADKB    R6 0 0       ; R6 := false
 64 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 65 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 66 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xc0a3774b]
 67 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 68 [-]: LOADK     R4 K19       ; R4 := "Event.Expiry"
 69 [-]: CONST     R5 11        ; R5 := 11.000000
 70 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["IsBannerEvent"]
 71 [-]: TEST      R6 1         ; if R6 then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["IsLinearEvent"]
 74 [-]: NOT       R6 R6        ; R6 :=  R6
 75 [-]: JMP       78           ; PC := 78
 76 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 77
 77 [-]: LOADKB    R6 1 0       ; R6 := true
 78 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 79 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 80 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xc0a3774b]
 81 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 82 [-]: LOADK     R4 K20       ; R4 := "Event.Reward"
 83 [-]: CONST     R5 11        ; R5 := 11.000000
 84 [-]: GETTABLE  R6 R0 K21    ; R6 := R0["Reward"]
 85 [-]: EQ        0 R6 K22     ; if R6 ~= nil then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 88
 88 [-]: LOADKB    R6 1 0       ; R6 := true
 89 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 90 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 91 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xc0a3774b]
 92 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 93 [-]: LOADK     R4 K23       ; R4 := "Event.Icon"
 94 [-]: CONST     R5 11        ; R5 := 11.000000
 95 [-]: LOADKB    R6 1 0       ; R6 := true
 96 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 97 [-]: GETTABLE  R1 R0 K24    ; R1 := R0["EventInfo"]
 98 [-]: GETUPVAL  R2 U1        ; R2 := U1
 99 [-]: GETTABLE  R3 R1 K25    ; R3 := R1["mTag"]
100 [-]: CALL      R2 2 2       ; R2 := R2(R3)
101 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["IsBannerEvent"]
102 [-]: TEST      R3 0         ; if not R3 then PC := 111
103 [-]: JMP       111          ; PC := 111
104 [-]: GETUPVAL  R3 U2        ; R3 := U2
105 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mClipName"]
106 [-]: LOADK     R5 K26       ; R5 := ".EventHeader.Timer"
107 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
108 [-]: MOVE      R5 R1        ; R5 := R1
109 [-]: CALL      R3 3 1       ; R3(R4,R5)
110 [-]: JMP       120          ; PC := 120
111 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["IsLinearEvent"]
112 [-]: TEST      R3 1         ; if R3 then PC := 120
113 [-]: JMP       120          ; PC := 120
114 [-]: GETUPVAL  R3 U2        ; R3 := U2
115 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mClipName"]
116 [-]: LOADK     R5 K27       ; R5 := ".Event.Expiry.Timer"
117 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
118 [-]: MOVE      R5 R1        ; R5 := R1
119 [-]: CALL      R3 3 1       ; R3(R4,R5)
120 [-]: GETGLOBAL R3 K28       ; R3 := 0xe3c75599
121 [-]: GETTABLE  R4 R2 K29    ; R4 := R2["BannerIndex"]
122 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
123 [-]: GETGLOBAL R4 K30       ; R4 := 0x7b998233
124 [-]: GETTABLE  R5 R2 K31    ; R5 := R2["ChinaBanner"]
125 [-]: CALL      R4 2 2       ; R4 := R4(R5)
126 [-]: TEST      R4 1         ; if R4 then PC := 139
127 [-]: JMP       139          ; PC := 139
128 [-]: GETGLOBAL R4 K32       ; R4 := 0xeb8fddd7
129 [-]: CALL      R4 1 2       ; R4 := R4()
130 [-]: TEST      R4 1         ; if R4 then PC := 138
131 [-]: JMP       138          ; PC := 138
132 [-]: GETGLOBAL R4 K33       ; R4 := 0x9ba7909f
133 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4[0xbf9494fc]
134 [-]: LOADK     R6 K35       ; R6 := "Graphics.UseWeGameCensoring"
135 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
136 [-]: TEST      R4 0         ; if not R4 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: GETTABLE  R3 R2 K31    ; R3 := R2["ChinaBanner"]
139 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
140 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4[0x1cb415c1]
141 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["mClipName"]
142 [-]: LOADK     R7 K37       ; R7 := ".EventHeader.Banner"
143 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
144 [-]: MOVE      R7 R3        ; R7 := R3
145 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
146 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
147 [-]: SELF      R4 R4 K38    ; R5 := R4; R4 := R4[0xe261aa96]
148 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["mClipName"]
149 [-]: LOADK     R7 K14       ; R7 := "EventHeader.Title"
150 [-]: CONST     R8 29        ; R8 := 29.000000
151 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
152 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9[0x42b04007]
153 [-]: GETTABLE  R11 R1 K40   ; R11 := R1["mDesc"]
154 [-]: LOADKB    R12 0 0      ; R12 := false
155 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
156 [-]: CALL      R4 0 1       ; R4(R5,...)
157 [-]: LOADK     R4 K41       ; R4 := "<p><font color=\""
158 [-]: GETUPVAL  R5 U0        ; R5 := U0
159 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["ContentHex"]
160 [-]: LOADK     R6 K43       ; R6 := "\">"
161 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
162 [-]: LOADK     R5 K44       ; R5 := ""
163 [-]: GETTABLE  R6 R2 K45    ; R6 := R2["BannerDesc"]
164 [-]: EQ        1 R6 K22     ; if R6 == nil then PC := 173
165 [-]: JMP       173          ; PC := 173
166 [-]: MOVE      R6 R5        ; R6 := R5
167 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
168 [-]: SELF      R7 R7 K39    ; R8 := R7; R7 := R7[0x42b04007]
169 [-]: GETTABLE  R9 R2 K45    ; R9 := R2["BannerDesc"]
170 [-]: LOADKB    R10 0 0      ; R10 := false
171 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
172 [-]: CONCAT    R5 R6 R7     ; R5 := R6 .. R7
173 [-]: GETTABLE  R6 R0 K46    ; R6 := R0["mMissionDesc"]
174 [-]: EQ        1 R6 K22     ; if R6 == nil then PC := 179
175 [-]: JMP       179          ; PC := 179
176 [-]: MOVE      R6 R5        ; R6 := R5
177 [-]: GETTABLE  R7 R0 K46    ; R7 := R0["mMissionDesc"]
178 [-]: CONCAT    R5 R6 R7     ; R5 := R6 .. R7
179 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
180 [-]: SELF      R6 R6 K38    ; R7 := R6; R6 := R6[0xe261aa96]
181 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["mClipName"]
182 [-]: LOADK     R9 K47       ; R9 := "EventHeader.Desc"
183 [-]: CONST     R10 29       ; R10 := 29.000000
184 [-]: MOVE      R11 R4       ; R11 := R4
185 [-]: MOVE      R12 R5       ; R12 := R5
186 [-]: LOADK     R13 K48      ; R13 := "</font></p>"
187 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
188 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
189 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
190 [-]: SELF      R6 R6 K49    ; R7 := R6; R6 := R6[0x2ce15376]
191 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["mClipName"]
192 [-]: LOADK     R9 K14       ; R9 := "EventHeader.Title"
193 [-]: CONST     R10 1        ; R10 := 1.000000
194 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
195 [-]: ADD       R6 R6 K50    ; R6 := R6 + 50.000000
196 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
197 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0xf64b7262]
198 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["mClipName"]
199 [-]: LOADK     R10 K47      ; R10 := "EventHeader.Desc"
200 [-]: CONST     R11 1        ; R11 := 1.000000
201 [-]: MOVE      R12 R6       ; R12 := R6
202 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
203 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
204 [-]: SELF      R7 R7 K49    ; R8 := R7; R7 := R7[0x2ce15376]
205 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["mClipName"]
206 [-]: LOADK     R10 K47      ; R10 := "EventHeader.Desc"
207 [-]: CONST     R11 34       ; R11 := 34.000000
208 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
209 [-]: GETUPVAL  R8 U3        ; R8 := U3
210 [-]: GETTABLE  R8 R8 K51    ; R8 := R8[0x06d055f9]
211 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["IsBannerEvent"]
212 [-]: ADD       R10 R6 R7    ; R10 := R6 + R7
213 [-]: ADD       R10 R10 K52  ; R10 := R10 + 15.000000
214 [-]: CONST     R11 0        ; R11 := 0.000000
215 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
216 [-]: SETTABLE  R0 K5 R8     ; R0["TotalHeight"] := R8
217 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
218 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0xf64b7262]
219 [-]: GETTABLE  R10 R0 K9    ; R10 := R0["mClipName"]
220 [-]: LOADK     R11 K15      ; R11 := "EventHeader.Separator"
221 [-]: CONST     R12 1        ; R12 := 1.000000
222 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["TotalHeight"]
223 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
224 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
225 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0xf64b7262]
226 [-]: GETTABLE  R10 R0 K9    ; R10 := R0["mClipName"]
227 [-]: LOADK     R11 K17      ; R11 := "Event"
228 [-]: CONST     R12 1        ; R12 := 1.000000
229 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["TotalHeight"]
230 [-]: ADD       R13 R13 K53  ; R13 := R13 + 5.000000
231 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
232 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
233 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0xf64b7262]
234 [-]: GETTABLE  R10 R0 K9    ; R10 := R0["mClipName"]
235 [-]: LOADK     R11 K54      ; R11 := "Arrow"
236 [-]: CONST     R12 1        ; R12 := 1.000000
237 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["TotalHeight"]
238 [-]: ADD       R13 R13 K53  ; R13 := R13 + 5.000000
239 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
240 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
241 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0xf64b7262]
242 [-]: GETTABLE  R10 R0 K9    ; R10 := R0["mClipName"]
243 [-]: LOADK     R11 K55      ; R11 := "ArrowCircle"
244 [-]: CONST     R12 1        ; R12 := 1.000000
245 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["TotalHeight"]
246 [-]: ADD       R13 R13 K53  ; R13 := R13 + 5.000000
247 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
248 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
249 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0xf64b7262]
250 [-]: GETTABLE  R10 R0 K9    ; R10 := R0["mClipName"]
251 [-]: LOADK     R11 K56      ; R11 := "FactionIcon"
252 [-]: CONST     R12 1        ; R12 := 1.000000
253 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["TotalHeight"]
254 [-]: ADD       R13 R13 K57  ; R13 := R13 + 56.000000
255 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
256 [-]: LOADNIL   R8 R8        ; R8 := nil
257 [-]: GETTABLE  R9 R2 K58    ; R9 := R2["FactionOverride"]
258 [-]: EQ        1 R9 K22     ; if R9 == nil then PC := 266
259 [-]: JMP       266          ; PC := 266
260 [-]: GETGLOBAL R9 K59       ; R9 := 0x0032441c
261 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["UITextures_FactionInvasion"]
262 [-]: GETTABLE  R10 R2 K58   ; R10 := R2["FactionOverride"]
263 [-]: ADD       R10 R10 K3   ; R10 := R10 + 1.000000
264 [-]: GETTABLE  R8 R9 R10    ; R8 := R9[R10]
265 [-]: JMP       284          ; PC := 284
266 [-]: GETTABLE  R9 R0 K61    ; R9 := R0["mMissionInfo"]
267 [-]: EQ        1 R9 K22     ; if R9 == nil then PC := 276
268 [-]: JMP       276          ; PC := 276
269 [-]: GETGLOBAL R9 K59       ; R9 := 0x0032441c
270 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["UITextures_FactionInvasion"]
271 [-]: GETTABLE  R10 R0 K61   ; R10 := R0["mMissionInfo"]
272 [-]: GETTABLE  R10 R10 K62  ; R10 := R10["faction"]
273 [-]: ADD       R10 R10 K3   ; R10 := R10 + 1.000000
274 [-]: GETTABLE  R8 R9 R10    ; R8 := R9[R10]
275 [-]: JMP       284          ; PC := 284
276 [-]: GETTABLE  R9 R1 K63    ; R9 := R1["mFaction"]
277 [-]: LE        0 R9 K64     ; if R9 > 4.000000 then PC := 284
278 [-]: JMP       284          ; PC := 284
279 [-]: GETGLOBAL R9 K59       ; R9 := 0x0032441c
280 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["UITextures_FactionInvasion"]
281 [-]: GETTABLE  R10 R1 K63   ; R10 := R1["mFaction"]
282 [-]: ADD       R10 R10 K3   ; R10 := R10 + 1.000000
283 [-]: GETTABLE  R8 R9 R10    ; R8 := R9[R10]
284 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
285 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9[0x1cb415c1]
286 [-]: GETTABLE  R11 R0 K9    ; R11 := R0["mClipName"]
287 [-]: LOADK     R12 K65      ; R12 := ".FactionIcon"
288 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
289 [-]: MOVE      R12 R8       ; R12 := R8
290 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
291 [-]: GETTABLE  R9 R1 K66    ; R9 := R1["mIcon"]
292 [-]: GETTABLE  R10 R2 K67   ; R10 := R2["ImageIndex"]
293 [-]: EQ        1 R10 K22    ; if R10 == nil then PC := 306
294 [-]: JMP       306          ; PC := 306
295 [-]: GETGLOBAL R10 K30      ; R10 := 0x7b998233
296 [-]: GETGLOBAL R11 K68      ; R11 := 0xabf34684
297 [-]: GETTABLE  R12 R2 K67   ; R12 := R2["ImageIndex"]
298 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
299 [-]: CALL      R10 2 2      ; R10 := R10(R11)
300 [-]: TEST      R10 1        ; if R10 then PC := 306
301 [-]: JMP       306          ; PC := 306
302 [-]: GETGLOBAL R10 K68      ; R10 := 0xabf34684
303 [-]: GETTABLE  R11 R2 K67   ; R11 := R2["ImageIndex"]
304 [-]: GETTABLE  R9 R10 R11   ; R9 := R10[R11]
305 [-]: JMP       312          ; PC := 312
306 [-]: GETGLOBAL R10 K30      ; R10 := 0x7b998233
307 [-]: GETTABLE  R11 R0 K69   ; R11 := R0["mLocationTexture"]
308 [-]: CALL      R10 2 2      ; R10 := R10(R11)
309 [-]: TEST      R10 1        ; if R10 then PC := 312
310 [-]: JMP       312          ; PC := 312
311 [-]: GETTABLE  R9 R0 K69    ; R9 := R0["mLocationTexture"]
312 [-]: LOADKB    R10 0 0      ; R10 := false
313 [-]: GETGLOBAL R11 K30      ; R11 := 0x7b998233
314 [-]: MOVE      R12 R9       ; R12 := R9
315 [-]: CALL      R11 2 2      ; R11 := R11(R12)
316 [-]: TEST      R11 1        ; if R11 then PC := 323
317 [-]: JMP       323          ; PC := 323
318 [-]: GETUPVAL  R11 U4       ; R11 := U4
319 [-]: GETTABLE  R11 R11 K70  ; R11 := R11[0x3972b419]
320 [-]: MOVE      R12 R9       ; R12 := R9
321 [-]: CALL      R11 2 2      ; R11 := R11(R12)
322 [-]: MOVE      R10 R11      ; R10 := R11
323 [-]: GETGLOBAL R11 K7       ; R11 := 0xae91e43b
324 [-]: SELF      R11 R11 K71  ; R12 := R11; R11 := R11[0xef99134f]
325 [-]: GETTABLE  R13 R0 K9    ; R13 := R0["mClipName"]
326 [-]: LOADK     R14 K72      ; R14 := ".Event.Icon"
327 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
328 [-]: MOVE      R14 R9       ; R14 := R9
329 [-]: GETGLOBAL R15 K73      ; R15 := 0x1e64747e
330 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
331 [-]: GETGLOBAL R11 K7       ; R11 := 0xae91e43b
332 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11[0xf64b7262]
333 [-]: GETTABLE  R13 R0 K9    ; R13 := R0["mClipName"]
334 [-]: LOADK     R14 K23      ; R14 := "Event.Icon"
335 [-]: CONST     R15 9        ; R15 := 9.000000
336 [-]: GETUPVAL  R16 U3       ; R16 := U3
337 [-]: GETTABLE  R16 R16 K51  ; R16 := R16[0x06d055f9]
338 [-]: MOVE      R17 R10      ; R17 := R10
339 [-]: GETUPVAL  R18 U0       ; R18 := U0
340 [-]: GETTABLE  R18 R18 K74  ; R18 := R18["Content"]
341 [-]: GETGLOBAL R19 K59      ; R19 := 0x0032441c
342 [-]: GETTABLE  R19 R19 K75  ; R19 := R19["UIColor_White"]
343 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
344 [-]: CALL      R11 0 1      ; R11(R12,...)
345 [-]: GETUPVAL  R11 U5       ; R11 := U5
346 [-]: GETTABLE  R11 R11 K76  ; R11 := R11[0x5e35d4d6]
347 [-]: CALL      R11 1 2      ; R11 := R11()
348 [-]: LOADK     R12 K44      ; R12 := ""
349 [-]: LOADK     R13 K44      ; R13 := ""
350 [-]: GETGLOBAL R14 K30      ; R14 := 0x7b998233
351 [-]: MOVE      R15 R11      ; R15 := R11
352 [-]: CALL      R14 2 2      ; R14 := R14(R15)
353 [-]: TEST      R14 1        ; if R14 then PC := 433
354 [-]: JMP       433          ; PC := 433
355 [-]: GETGLOBAL R14 K77      ; R14 := 0x0469f296
356 [-]: GETTABLE  R15 R1 K78   ; R15 := R1["mNode"]
357 [-]: CALL      R14 2 2      ; R14 := R14(R15)
358 [-]: GETTABLE  R15 R2 K79   ; R15 := R2["NodeOverride"]
359 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 363
360 [-]: JMP       363          ; PC := 363
361 [-]: GETTABLE  R14 R2 K79   ; R14 := R2["NodeOverride"]
362 [-]: JMP       374          ; PC := 374
363 [-]: GETTABLE  R15 R1 K80   ; R15 := R1["mVictimNode"]
364 [-]: GETGLOBAL R16 K81      ; R16 := EMPTY_SYMBOL
365 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 369
366 [-]: JMP       369          ; PC := 369
367 [-]: GETTABLE  R14 R1 K80   ; R14 := R1["mVictimNode"]
368 [-]: JMP       374          ; PC := 374
369 [-]: GETTABLE  R15 R0 K61   ; R15 := R0["mMissionInfo"]
370 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 374
371 [-]: JMP       374          ; PC := 374
372 [-]: GETTABLE  R15 R0 K61   ; R15 := R0["mMissionInfo"]
373 [-]: GETTABLE  R14 R15 K82  ; R14 := R15["location"]
374 [-]: GETGLOBAL R15 K81      ; R15 := EMPTY_SYMBOL
375 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 404
376 [-]: JMP       404          ; PC := 404
377 [-]: SELF      R15 R11 K83  ; R16 := R11; R15 := R11[0x3ad9ed31]
378 [-]: MOVE      R17 R14      ; R17 := R14
379 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
380 [-]: GETGLOBAL R16 K30      ; R16 := 0x7b998233
381 [-]: MOVE      R17 R15      ; R17 := R15
382 [-]: CALL      R16 2 2      ; R16 := R16(R17)
383 [-]: TEST      R16 1        ; if R16 then PC := 404
384 [-]: JMP       404          ; PC := 404
385 [-]: GETGLOBAL R16 K7       ; R16 := 0xae91e43b
386 [-]: SELF      R16 R16 K39  ; R17 := R16; R16 := R16[0x42b04007]
387 [-]: GETTABLE  R18 R15 K84  ; R18 := R15["locTag"]
388 [-]: SELF      R18 R18 K85  ; R19 := R18; R18 := R18[0x6d604ba7]
389 [-]: CALL      R18 2 2      ; R18 := R18(R19)
390 [-]: LOADKB    R19 0 0      ; R19 := false
391 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
392 [-]: MOVE      R13 R16      ; R13 := R16
393 [-]: GETGLOBAL R16 K7       ; R16 := 0xae91e43b
394 [-]: SELF      R16 R16 K39  ; R17 := R16; R16 := R16[0x42b04007]
395 [-]: SELF      R18 R11 K86  ; R19 := R11; R18 := R11[0xc1dee03f]
396 [-]: CALL      R18 2 2      ; R18 := R18(R19)
397 [-]: GETTABLE  R19 R15 K87  ; R19 := R15["region"]
398 [-]: ADD       R19 R19 K3   ; R19 := R19 + 1.000000
399 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
400 [-]: GETTABLE  R18 R18 K88  ; R18 := R18["name"]
401 [-]: LOADKB    R19 0 0      ; R19 := false
402 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
403 [-]: MOVE      R12 R16      ; R12 := R16
404 [-]: GETTABLE  R16 R0 K61   ; R16 := R0["mMissionInfo"]
405 [-]: EQ        1 R16 K22    ; if R16 == nil then PC := 433
406 [-]: JMP       433          ; PC := 433
407 [-]: GETUPVAL  R16 U5       ; R16 := U5
408 [-]: GETTABLE  R16 R16 K89  ; R16 := R16[0x8a389d5f]
409 [-]: GETTABLE  R17 R0 K61   ; R17 := R0["mMissionInfo"]
410 [-]: CALL      R16 2 2      ; R16 := R16(R17)
411 [-]: GETGLOBAL R17 K90      ; R17 := 0x603636ad
412 [-]: LOADK     R18 K91      ; R18 := "/Lotus/Language/Missions/MissionName_"
413 [-]: MOVE      R19 R16      ; R19 := R16
414 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
415 [-]: LOADKB    R19 0 0      ; R19 := false
416 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
417 [-]: MOVE      R13 R12      ; R13 := R12
418 [-]: MOVE      R18 R17      ; R18 := R17
419 [-]: LOADK     R19 K92      ; R19 := " ("
420 [-]: GETUPVAL  R20 U3       ; R20 := U3
421 [-]: GETTABLE  R20 R20 K93  ; R20 := R20[0x1142c7a8]
422 [-]: GETTABLE  R21 R0 K61   ; R21 := R0["mMissionInfo"]
423 [-]: GETTABLE  R21 R21 K94  ; R21 := R21["minEnemyLevel"]
424 [-]: CALL      R20 2 2      ; R20 := R20(R21)
425 [-]: LOADK     R21 K95      ; R21 := "-"
426 [-]: GETUPVAL  R22 U3       ; R22 := U3
427 [-]: GETTABLE  R22 R22 K93  ; R22 := R22[0x1142c7a8]
428 [-]: GETTABLE  R23 R0 K61   ; R23 := R0["mMissionInfo"]
429 [-]: GETTABLE  R23 R23 K96  ; R23 := R23["maxEnemyLevel"]
430 [-]: CALL      R22 2 2      ; R22 := R22(R23)
431 [-]: LOADK     R23 K97      ; R23 := ")"
432 [-]: CONCAT    R12 R18 R23  ; R12 := R18 .. R19 .. R20 .. R21 .. R22 .. R23
433 [-]: GETGLOBAL R18 K98      ; R18 := 0x7f5022cf
434 [-]: GETTABLE  R18 R18 K99  ; R18 := R18[0x3f3e4d12]
435 [-]: MOVE      R19 R12      ; R19 := R12
436 [-]: CALL      R18 2 2      ; R18 := R18(R19)
437 [-]: MOVE      R12 R18      ; R12 := R18
438 [-]: GETTABLE  R18 R0 K0    ; R18 := R0["IsLinearEvent"]
439 [-]: TEST      R18 0        ; if not R18 then PC := 474
440 [-]: JMP       474          ; PC := 474
441 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mMissionNumber"]
442 [-]: EQ        1 R18 K22    ; if R18 == nil then PC := 474
443 [-]: JMP       474          ; PC := 474
444 [-]: GETGLOBAL R18 K98      ; R18 := 0x7f5022cf
445 [-]: GETTABLE  R18 R18 K99  ; R18 := R18[0x3f3e4d12]
446 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
447 [-]: SELF      R19 R19 K39  ; R20 := R19; R19 := R19[0x42b04007]
448 [-]: LOADK     R21 K100     ; R21 := "/Lotus/Language/Menu/Lobby_Mission"
449 [-]: LOADKB    R22 0 0      ; R22 := false
450 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
451 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
452 [-]: LOADK     R19 K101     ; R19 := " "
453 [-]: GETGLOBAL R20 K102     ; R20 := 0x64fb1586
454 [-]: GETTABLE  R21 R0 K2    ; R21 := R0["mMissionNumber"]
455 [-]: CALL      R20 2 2      ; R20 := R20(R21)
456 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
457 [-]: GETTABLE  R19 R0 K103  ; R19 := R0["mUnlocked"]
458 [-]: TEST      R19 1        ; if R19 then PC := 469
459 [-]: JMP       469          ; PC := 469
460 [-]: MOVE      R19 R18      ; R19 := R18
461 [-]: LOADK     R20 K92      ; R20 := " ("
462 [-]: GETGLOBAL R21 K7       ; R21 := 0xae91e43b
463 [-]: SELF      R21 R21 K39  ; R22 := R21; R21 := R21[0x42b04007]
464 [-]: LOADK     R23 K104     ; R23 := "/Lotus/Language/Menu/MissionLocked"
465 [-]: LOADKB    R24 0 0      ; R24 := false
466 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
467 [-]: LOADK     R22 K97      ; R22 := ")"
468 [-]: CONCAT    R18 R19 R22  ; R18 := R19 .. R20 .. R21 .. R22
469 [-]: MOVE      R19 R18      ; R19 := R18
470 [-]: LOADK     R20 K105     ; R20 := "\r\n"
471 [-]: MOVE      R21 R12      ; R21 := R12
472 [-]: CONCAT    R12 R19 R21  ; R12 := R19 .. R20 .. R21
473 [-]: JMP       494          ; PC := 494
474 [-]: GETTABLE  R19 R0 K1    ; R19 := R0["IsBannerEvent"]
475 [-]: TEST      R19 1        ; if R19 then PC := 494
476 [-]: JMP       494          ; PC := 494
477 [-]: GETTABLE  R19 R0 K0    ; R19 := R0["IsLinearEvent"]
478 [-]: TEST      R19 1        ; if R19 then PC := 494
479 [-]: JMP       494          ; PC := 494
480 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
481 [-]: SELF      R19 R19 K39  ; R20 := R19; R19 := R19[0x42b04007]
482 [-]: GETTABLE  R21 R1 K40   ; R21 := R1["mDesc"]
483 [-]: LOADKB    R22 0 0      ; R22 := false
484 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
485 [-]: LOADK     R20 K105     ; R20 := "\r\n"
486 [-]: MOVE      R21 R12      ; R21 := R12
487 [-]: CONCAT    R12 R19 R21  ; R12 := R19 .. R20 .. R21
488 [-]: MOVE      R19 R4       ; R19 := R4
489 [-]: MOVE      R20 R13      ; R20 := R13
490 [-]: LOADK     R21 K106     ; R21 := "<br><br>"
491 [-]: MOVE      R22 R5       ; R22 := R5
492 [-]: LOADK     R23 K48      ; R23 := "</font></p>"
493 [-]: CONCAT    R13 R19 R23  ; R13 := R19 .. R20 .. R21 .. R22 .. R23
494 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
495 [-]: SELF      R19 R19 K38  ; R20 := R19; R19 := R19[0xe261aa96]
496 [-]: GETTABLE  R21 R0 K9    ; R21 := R0["mClipName"]
497 [-]: LOADK     R22 K107     ; R22 := "Event.Title"
498 [-]: CONST     R23 29       ; R23 := 29.000000
499 [-]: MOVE      R24 R12      ; R24 := R12
500 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
501 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
502 [-]: SELF      R19 R19 K11  ; R20 := R19; R19 := R19[0xf64b7262]
503 [-]: GETTABLE  R21 R0 K9    ; R21 := R0["mClipName"]
504 [-]: LOADK     R22 K107     ; R22 := "Event.Title"
505 [-]: CONST     R23 0        ; R23 := 0.000000
506 [-]: CONST     R24 120      ; R24 := 120.000000
507 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
508 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
509 [-]: SELF      R19 R19 K49  ; R20 := R19; R19 := R19[0x2ce15376]
510 [-]: GETTABLE  R21 R0 K9    ; R21 := R0["mClipName"]
511 [-]: LOADK     R22 K107     ; R22 := "Event.Title"
512 [-]: CONST     R23 34       ; R23 := 34.000000
513 [-]: CALL      R19 5 2      ; R19 := R19(R20,R21,R22,R23)
514 [-]: SUB       R19 R19 K3   ; R19 := R19 - 1.000000
515 [-]: GETGLOBAL R20 K7       ; R20 := 0xae91e43b
516 [-]: SELF      R20 R20 K11  ; R21 := R20; R20 := R20[0xf64b7262]
517 [-]: GETTABLE  R22 R0 K9    ; R22 := R0["mClipName"]
518 [-]: LOADK     R23 K108     ; R23 := "Event.Desc"
519 [-]: CONST     R24 12       ; R24 := 12.000000
520 [-]: CONST     R25 420      ; R25 := 420.000000
521 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
522 [-]: GETGLOBAL R20 K7       ; R20 := 0xae91e43b
523 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0xe261aa96]
524 [-]: GETTABLE  R22 R0 K9    ; R22 := R0["mClipName"]
525 [-]: LOADK     R23 K108     ; R23 := "Event.Desc"
526 [-]: CONST     R24 29       ; R24 := 29.000000
527 [-]: MOVE      R25 R13      ; R25 := R13
528 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
529 [-]: GETGLOBAL R20 K7       ; R20 := 0xae91e43b
530 [-]: SELF      R20 R20 K11  ; R21 := R20; R20 := R20[0xf64b7262]
531 [-]: GETTABLE  R22 R0 K9    ; R22 := R0["mClipName"]
532 [-]: LOADK     R23 K108     ; R23 := "Event.Desc"
533 [-]: CONST     R24 0        ; R24 := 0.000000
534 [-]: CONST     R25 120      ; R25 := 120.000000
535 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
536 [-]: GETUPVAL  R20 U3       ; R20 := U3
537 [-]: GETTABLE  R20 R20 K51  ; R20 := R20[0x06d055f9]
538 [-]: EQ        1 R13 K44    ; if R13 == "" then PC := 541
539 [-]: JMP       541          ; PC := 541
540 [-]: LOADKB    R21 0 1      ; R21 := false; PC := 541
541 [-]: LOADKB    R21 1 0      ; R21 := true
542 [-]: CONST     R22 0        ; R22 := 0.000000
543 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
544 [-]: SELF      R23 R23 K49  ; R24 := R23; R23 := R23[0x2ce15376]
545 [-]: GETTABLE  R25 R0 K9    ; R25 := R0["mClipName"]
546 [-]: LOADK     R26 K108     ; R26 := "Event.Desc"
547 [-]: CONST     R27 34       ; R27 := 34.000000
548 [-]: CALL      R23 5 0      ; R23,... := R23(R24,R25,R26,R27)
549 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
550 [-]: LOADK     R21 K44      ; R21 := ""
551 [-]: GETTABLE  R22 R2 K109  ; R22 := R2["ShowProgress"]
552 [-]: EQ        1 R22 K22    ; if R22 == nil then PC := 556
553 [-]: JMP       556          ; PC := 556
554 [-]: GETTABLE  R22 R2 K109  ; R22 := R2["ShowProgress"]
555 [-]: JMP       558          ; PC := 558
556 [-]: LOADKB    R22 0 1      ; R22 := false; PC := 557
557 [-]: LOADKB    R22 1 0      ; R22 := true
558 [-]: GETTABLE  R23 R0 K0    ; R23 := R0["IsLinearEvent"]
559 [-]: TEST      R23 0        ; if not R23 then PC := 568
560 [-]: JMP       568          ; PC := 568
561 [-]: TEST      R22 0        ; if not R22 then PC := 568
562 [-]: JMP       568          ; PC := 568
563 [-]: GETTABLE  R23 R0 K103  ; R23 := R0["mUnlocked"]
564 [-]: TESTSET   R22 R23 0    ; if not R23 then PC := 568 else R22 := R23
565 [-]: JMP       568          ; PC := 568
566 [-]: GETTABLE  R23 R0 K110  ; R23 := R0["mCompleted"]
567 [-]: NOT       R22 R23      ; R22 :=  R23
568 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
569 [-]: SELF      R23 R23 K8   ; R24 := R23; R23 := R23[0xc0a3774b]
570 [-]: GETTABLE  R25 R0 K9    ; R25 := R0["mClipName"]
571 [-]: LOADK     R26 K111     ; R26 := "Event.Progress"
572 [-]: CONST     R27 11       ; R27 := 11.000000
573 [-]: MOVE      R28 R22      ; R28 := R22
574 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
575 [-]: TEST      R22 0        ; if not R22 then PC := 751
576 [-]: JMP       751          ; PC := 751
577 [-]: CONST     R23 320      ; R23 := 320.000000
578 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
579 [-]: SELF      R24 R24 K11  ; R25 := R24; R24 := R24[0xf64b7262]
580 [-]: GETTABLE  R26 R0 K9    ; R26 := R0["mClipName"]
581 [-]: LOADK     R27 K111     ; R27 := "Event.Progress"
582 [-]: CONST     R28 0        ; R28 := 0.000000
583 [-]: CONST     R29 118      ; R29 := 118.000000
584 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
585 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
586 [-]: SELF      R24 R24 K11  ; R25 := R24; R24 := R24[0xf64b7262]
587 [-]: GETTABLE  R26 R0 K9    ; R26 := R0["mClipName"]
588 [-]: LOADK     R27 K112     ; R27 := "Event.Progress.Bg"
589 [-]: CONST     R28 12       ; R28 := 12.000000
590 [-]: MOVE      R29 R23      ; R29 := R23
591 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
592 [-]: GETTABLE  R24 R1 K113  ; R24 := R1["mHealthPct"]
593 [-]: EQ        0 R24 K114   ; if R24 ~= -1.000000 then PC := 607
594 [-]: JMP       607          ; PC := 607
595 [-]: GETTABLE  R25 R0 K0    ; R25 := R0["IsLinearEvent"]
596 [-]: TEST      R25 0        ; if not R25 then PC := 607
597 [-]: JMP       607          ; PC := 607
598 [-]: GETGLOBAL R25 K115     ; R25 := 0x42dcc9f5
599 [-]: GETTABLE  R26 R0 K116  ; R26 := R0["Count"]
600 [-]: GETTABLE  R27 R0 K117  ; R27 := R0["Goal"]
601 [-]: DIV       R26 R26 R27  ; R26 := R26 / R27
602 [-]: LOADK     R27 K118     ; R27 := 0.001000
603 [-]: CONST     R28 100      ; R28 := 100.000000
604 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
605 [-]: MOVE      R24 R25      ; R24 := R25
606 [-]: JMP       612          ; PC := 612
607 [-]: LT        0 K6 R24     ; if 0.000000 >= R24 then PC := 612
608 [-]: JMP       612          ; PC := 612
609 [-]: LT        0 R24 K118   ; if R24 >= 0.001000 then PC := 612
610 [-]: JMP       612          ; PC := 612
611 [-]: LOADK     R24 K118     ; R24 := 0.001000
612 [-]: GETTABLE  R25 R0 K0    ; R25 := R0["IsLinearEvent"]
613 [-]: TEST      R25 0        ; if not R25 then PC := 626
614 [-]: JMP       626          ; PC := 626
615 [-]: GETUPVAL  R25 U3       ; R25 := U3
616 [-]: GETTABLE  R25 R25 K93  ; R25 := R25[0x1142c7a8]
617 [-]: GETTABLE  R26 R0 K116  ; R26 := R0["Count"]
618 [-]: CALL      R25 2 2      ; R25 := R25(R26)
619 [-]: LOADK     R26 K119     ; R26 := "/"
620 [-]: GETUPVAL  R27 U3       ; R27 := U3
621 [-]: GETTABLE  R27 R27 K93  ; R27 := R27[0x1142c7a8]
622 [-]: GETTABLE  R28 R0 K117  ; R28 := R0["Goal"]
623 [-]: CALL      R27 2 2      ; R27 := R27(R28)
624 [-]: CONCAT    R21 R25 R27  ; R21 := R25 .. R26 .. R27
625 [-]: JMP       740          ; PC := 740
626 [-]: GETTABLE  R25 R0 K120  ; R25 := R0["IsGhoulEvent"]
627 [-]: TEST      R25 0        ; if not R25 then PC := 656
628 [-]: JMP       656          ; PC := 656
629 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
630 [-]: SELF      R25 R25 K39  ; R26 := R25; R25 := R25[0x42b04007]
631 [-]: LOADK     R27 K121     ; R27 := "/Lotus/Language/Menu/GhoulPopulation"
632 [-]: LOADKB    R28 0 0      ; R28 := false
633 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
634 [-]: MOVE      R21 R25      ; R21 := R25
635 [-]: GETTABLE  R25 R1 K113  ; R25 := R1["mHealthPct"]
636 [-]: LT        1 K6 R25     ; if 0.000000 < R25 then PC := 639
637 [-]: JMP       639          ; PC := 639
638 [-]: LOADKB    R25 0 1      ; R25 := false; PC := 639
639 [-]: LOADKB    R25 1 0      ; R25 := true
640 [-]: TEST      R25 0        ; if not R25 then PC := 653
641 [-]: JMP       653          ; PC := 653
642 [-]: GETGLOBAL R26 K98      ; R26 := 0x7f5022cf
643 [-]: GETTABLE  R26 R26 K122 ; R26 := R26[0xe8072ded]
644 [-]: LOADK     R27 K123     ; R27 := "%1.1f"
645 [-]: MUL       R28 R24 K124 ; R28 := R24 * 100.000000
646 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
647 [-]: MOVE      R27 R21      ; R27 := R21
648 [-]: LOADK     R28 K101     ; R28 := " "
649 [-]: MOVE      R29 R26      ; R29 := R26
650 [-]: LOADK     R30 K125     ; R30 := "%"
651 [-]: CONCAT    R21 R27 R30  ; R21 := R27 .. R28 .. R29 .. R30
652 [-]: JMP       740          ; PC := 740
653 [-]: CONST     R24 0        ; R24 := 0.000000
654 [-]: LOADK     R24 K44      ; R24 := ""
655 [-]: JMP       740          ; PC := 740
656 [-]: GETTABLE  R27 R1 K126  ; R27 := R1["mFomorian"]
657 [-]: TEST      R27 0        ; if not R27 then PC := 684
658 [-]: JMP       684          ; PC := 684
659 [-]: GETGLOBAL R27 K98      ; R27 := 0x7f5022cf
660 [-]: GETTABLE  R27 R27 K122 ; R27 := R27[0xe8072ded]
661 [-]: LOADK     R28 K123     ; R28 := "%1.1f"
662 [-]: MUL       R29 R24 K124 ; R29 := R24 * 100.000000
663 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
664 [-]: GETUPVAL  R28 U3       ; R28 := U3
665 [-]: GETTABLE  R28 R28 K51  ; R28 := R28[0x06d055f9]
666 [-]: GETTABLE  R29 R1 K63   ; R29 := R1["mFaction"]
667 [-]: EQ        1 R29 K6     ; if R29 == 0.000000 then PC := 670
668 [-]: JMP       670          ; PC := 670
669 [-]: LOADKB    R29 0 1      ; R29 := false; PC := 670
670 [-]: LOADKB    R29 1 0      ; R29 := true
671 [-]: LOADK     R30 K128     ; R30 := "/Lotus/Language/Menu/FomorianHealth"
672 [-]: LOADK     R31 K129     ; R31 := "/Lotus/Language/Menu/RazorbackArmadaHealth"
673 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
674 [-]: GETGLOBAL R29 K7       ; R29 := 0xae91e43b
675 [-]: SELF      R29 R29 K39  ; R30 := R29; R29 := R29[0x42b04007]
676 [-]: MOVE      R31 R28      ; R31 := R28
677 [-]: LOADKB    R32 0 0      ; R32 := false
678 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
679 [-]: LOADK     R30 K130     ; R30 := ": "
680 [-]: MOVE      R31 R27      ; R31 := R27
681 [-]: LOADK     R32 K125     ; R32 := "%"
682 [-]: CONCAT    R21 R29 R32  ; R21 := R29 .. R30 .. R31 .. R32
683 [-]: JMP       740          ; PC := 740
684 [-]: LOADK     R29 K44      ; R29 := ""
685 [-]: LE        0 K131 R24   ; if 0.700000 > R24 then PC := 689
686 [-]: JMP       689          ; PC := 689
687 [-]: LOADK     R29 K132     ; R29 := "/Lotus/Language/G1Quests/HeatFissuresGoodProgress"
688 [-]: JMP       694          ; PC := 694
689 [-]: LE        0 K133 R24   ; if 0.350000 > R24 then PC := 693
690 [-]: JMP       693          ; PC := 693
691 [-]: LOADK     R29 K134     ; R29 := "/Lotus/Language/G1Quests/HeatFissuresMediumProgress"
692 [-]: JMP       694          ; PC := 694
693 [-]: LOADK     R29 K135     ; R29 := "/Lotus/Language/G1Quests/HeatFissuresBadProgress"
694 [-]: GETGLOBAL R30 K7       ; R30 := 0xae91e43b
695 [-]: SELF      R30 R30 K39  ; R31 := R30; R30 := R30[0x42b04007]
696 [-]: MOVE      R32 R29      ; R32 := R29
697 [-]: LOADKB    R33 0 0      ; R33 := false
698 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
699 [-]: MOVE      R21 R30      ; R21 := R30
700 [-]: CONST     R30 0        ; R30 := 0.000000
701 [-]: GETTABLE  R31 R1 K136  ; R31 := R1["mGlobalUpgrades"]
702 [-]: CONST     R32 1        ; R32 := 1.000000
703 [-]: LEN       R33 R31      ; R33 := # R31
704 [-]: CONST     R34 1        ; R34 := 1.000000
705 [-]: FORPREP   R32 722      ; R32 -= R34; PC := 722
706 [-]: GETTABLE  R36 R31 R35  ; R36 := R31[R35]
707 [-]: CONST     R37 1        ; R37 := 1.000000
708 [-]: GETGLOBAL R38 K137     ; R38 := _T
709 [-]: GETTABLE  R38 R38 K138 ; R38 := R38["CachedGlobalUpgrades"]
710 [-]: LEN       R38 R38      ; R38 := # R38
711 [-]: CONST     R39 1        ; R39 := 1.000000
712 [-]: FORPREP   R37 721      ; R37 -= R39; PC := 721
713 [-]: GETGLOBAL R41 K137     ; R41 := _T
714 [-]: GETTABLE  R41 R41 K138 ; R41 := R41["CachedGlobalUpgrades"]
715 [-]: GETTABLE  R41 R41 R40  ; R41 := R41[R40]
716 [-]: GETTABLE  R42 R41 K139 ; R42 := R41["mId"]
717 [-]: EQ        0 R42 R36    ; if R42 ~= R36 then PC := 721
718 [-]: JMP       721          ; PC := 721
719 [-]: ADD       R30 R30 K3   ; R30 := R30 + 1.000000
720 [-]: JMP       722          ; PC := 722
721 [-]: FORLOOP   R37 713      ; R37 += R39; if R37 <= R38 then begin PC := 713; R40 := R37 end
722 [-]: FORLOOP   R32 706      ; R32 += R34; if R32 <= R33 then begin PC := 706; R35 := R32 end
723 [-]: EQ        0 R30 K140   ; if R30 ~= 2.000000 then PC := 727
724 [-]: JMP       727          ; PC := 727
725 [-]: LOADK     R29 K141     ; R29 := "/Lotus/Language/G1Quests/HeatFissuresGoodProgressDesc"
726 [-]: JMP       732          ; PC := 732
727 [-]: EQ        0 R30 K3     ; if R30 ~= 1.000000 then PC := 731
728 [-]: JMP       731          ; PC := 731
729 [-]: LOADK     R29 K142     ; R29 := "/Lotus/Language/G1Quests/HeatFissuresMediumProgressDesc"
730 [-]: JMP       732          ; PC := 732
731 [-]: LOADK     R29 K143     ; R29 := "/Lotus/Language/G1Quests/HeatFissuresBadProgressDesc"
732 [-]: MOVE      R42 R21      ; R42 := R21
733 [-]: LOADK     R43 K105     ; R43 := "\r\n"
734 [-]: GETGLOBAL R44 K7       ; R44 := 0xae91e43b
735 [-]: SELF      R44 R44 K39  ; R45 := R44; R44 := R44[0x42b04007]
736 [-]: MOVE      R46 R29      ; R46 := R29
737 [-]: LOADKB    R47 0 0      ; R47 := false
738 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
739 [-]: CONCAT    R21 R42 R44  ; R21 := R42 .. R43 .. R44
740 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
741 [-]: SELF      R42 R42 K11  ; R43 := R42; R42 := R42[0xf64b7262]
742 [-]: GETTABLE  R44 R0 K9    ; R44 := R0["mClipName"]
743 [-]: LOADK     R45 K144     ; R45 := "Event.Progress.Fill"
744 [-]: CONST     R46 12       ; R46 := 12.000000
745 [-]: GETGLOBAL R47 K115     ; R47 := 0x42dcc9f5
746 [-]: MUL       R48 R24 R23  ; R48 := R24 * R23
747 [-]: LOADK     R49 K118     ; R49 := 0.001000
748 [-]: MOVE      R50 R23      ; R50 := R23
749 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
750 [-]: CALL      R42 0 1      ; R42(R43,...)
751 [-]: GETTABLE  R42 R2 K145  ; R42 := R2["Hint"]
752 [-]: EQ        1 R42 K22    ; if R42 == nil then PC := 766
753 [-]: JMP       766          ; PC := 766
754 [-]: EQ        1 R21 K44    ; if R21 == "" then PC := 759
755 [-]: JMP       759          ; PC := 759
756 [-]: MOVE      R42 R21      ; R42 := R21
757 [-]: LOADK     R43 K105     ; R43 := "\r\n"
758 [-]: CONCAT    R21 R42 R43  ; R21 := R42 .. R43
759 [-]: MOVE      R42 R21      ; R42 := R21
760 [-]: GETGLOBAL R43 K7       ; R43 := 0xae91e43b
761 [-]: SELF      R43 R43 K39  ; R44 := R43; R43 := R43[0x42b04007]
762 [-]: GETTABLE  R45 R2 K145  ; R45 := R2["Hint"]
763 [-]: LOADKB    R46 0 0      ; R46 := false
764 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
765 [-]: CONCAT    R21 R42 R43  ; R21 := R42 .. R43
766 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
767 [-]: SELF      R42 R42 K38  ; R43 := R42; R42 := R42[0xe261aa96]
768 [-]: GETTABLE  R44 R0 K9    ; R44 := R0["mClipName"]
769 [-]: LOADK     R45 K146     ; R45 := "Event.RewardPrefix"
770 [-]: CONST     R46 29       ; R46 := 29.000000
771 [-]: MOVE      R47 R21      ; R47 := R21
772 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
773 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
774 [-]: SELF      R42 R42 K11  ; R43 := R42; R42 := R42[0xf64b7262]
775 [-]: GETTABLE  R44 R0 K9    ; R44 := R0["mClipName"]
776 [-]: LOADK     R45 K146     ; R45 := "Event.RewardPrefix"
777 [-]: CONST     R46 0        ; R46 := 0.000000
778 [-]: CONST     R47 120      ; R47 := 120.000000
779 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
780 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
781 [-]: SELF      R42 R42 K11  ; R43 := R42; R42 := R42[0xf64b7262]
782 [-]: GETTABLE  R44 R0 K9    ; R44 := R0["mClipName"]
783 [-]: LOADK     R45 K146     ; R45 := "Event.RewardPrefix"
784 [-]: CONST     R46 12       ; R46 := 12.000000
785 [-]: CONST     R47 438      ; R47 := 438.000000
786 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
787 [-]: GETUPVAL  R42 U3       ; R42 := U3
788 [-]: GETTABLE  R42 R42 K51  ; R42 := R42[0x06d055f9]
789 [-]: EQ        1 R21 K44    ; if R21 == "" then PC := 792
790 [-]: JMP       792          ; PC := 792
791 [-]: LOADKB    R43 0 1      ; R43 := false; PC := 792
792 [-]: LOADKB    R43 1 0      ; R43 := true
793 [-]: CONST     R44 0        ; R44 := 0.000000
794 [-]: GETGLOBAL R45 K7       ; R45 := 0xae91e43b
795 [-]: SELF      R45 R45 K49  ; R46 := R45; R45 := R45[0x2ce15376]
796 [-]: GETTABLE  R47 R0 K9    ; R47 := R0["mClipName"]
797 [-]: LOADK     R48 K146     ; R48 := "Event.RewardPrefix"
798 [-]: CONST     R49 34       ; R49 := 34.000000
799 [-]: CALL      R45 5 0      ; R45,... := R45(R46,R47,R48,R49)
800 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
801 [-]: ADD       R43 R19 R20  ; R43 := R19 + R20
802 [-]: ADD       R43 R43 R42  ; R43 := R43 + R42
803 [-]: ADD       R43 R43 K147 ; R43 := R43 + 23.000000
804 [-]: TEST      R22 0        ; if not R22 then PC := 807
805 [-]: JMP       807          ; PC := 807
806 [-]: ADD       R43 R43 K148 ; R43 := R43 + 20.000000
807 [-]: LOADKB    R44 0 0      ; R44 := false
808 [-]: GETTABLE  R45 R0 K21   ; R45 := R0["Reward"]
809 [-]: EQ        1 R45 K22    ; if R45 == nil then PC := 881
810 [-]: JMP       881          ; PC := 881
811 [-]: GETGLOBAL R45 K7       ; R45 := 0xae91e43b
812 [-]: SELF      R45 R45 K11  ; R46 := R45; R45 := R45[0xf64b7262]
813 [-]: GETTABLE  R47 R0 K9    ; R47 := R0["mClipName"]
814 [-]: LOADK     R48 K20      ; R48 := "Event.Reward"
815 [-]: CONST     R49 0        ; R49 := 0.000000
816 [-]: CONST     R50 117      ; R50 := 117.000000
817 [-]: CALL      R45 6 1      ; R45(R46,R47,R48,R49,R50)
818 [-]: GETTABLE  R45 R0 K149  ; R45 := R0["mRewardList"]
819 [-]: EQ        0 R45 K22    ; if R45 ~= nil then PC := 826
820 [-]: JMP       826          ; PC := 826
821 [-]: GETUPVAL  R45 U6       ; R45 := U6
822 [-]: MOVE      R46 R0       ; R46 := R0
823 [-]: GETUPVAL  R47 U7       ; R47 := U7
824 [-]: MOVE      R48 R43      ; R48 := R43
825 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
826 [-]: GETTABLE  R45 R0 K149  ; R45 := R0["mRewardList"]
827 [-]: SELF      R45 R45 K150 ; R46 := R45; R45 := R45[0x7c09c373]
828 [-]: LOADKB    R47 1 0      ; R47 := true
829 [-]: LOADKB    R48 1 0      ; R48 := true
830 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
831 [-]: LOADNIL   R45 R46      ; R45 := R46 := nil
832 [-]: GETTABLE  R47 R0 K117  ; R47 := R0["Goal"]
833 [-]: EQ        0 R47 K3     ; if R47 ~= 1.000000 then PC := 864
834 [-]: JMP       864          ; PC := 864
835 [-]: LOADK     R47 K151     ; R47 := "<LOCKED>"
836 [-]: GETTABLE  R48 R0 K116  ; R48 := R0["Count"]
837 [-]: LE        0 K3 R48     ; if 1.000000 > R48 then PC := 852
838 [-]: JMP       852          ; PC := 852
839 [-]: LOADK     R48 K152     ; R48 := "<font color=\""
840 [-]: GETUPVAL  R49 U0       ; R49 := U0
841 [-]: GETTABLE  R49 R49 K153 ; R49 := R49["FloatingContentHighlightHex"]
842 [-]: LOADK     R50 K43      ; R50 := "\">"
843 [-]: GETGLOBAL R51 K7       ; R51 := 0xae91e43b
844 [-]: SELF      R51 R51 K39  ; R52 := R51; R51 := R51[0x42b04007]
845 [-]: LOADK     R53 K154     ; R53 := "/Lotus/Language/Menu/MissionComplete"
846 [-]: LOADKB    R54 0 0      ; R54 := false
847 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
848 [-]: LOADK     R52 K155     ; R52 := "<br></font>"
849 [-]: CONCAT    R46 R48 R52  ; R46 := R48 .. R49 .. R50 .. R51 .. R52
850 [-]: LOADK     R47 K156     ; R47 := "<CHECKMARK_SPECIAL>"
851 [-]: LOADKB    R44 1 0      ; R44 := true
852 [-]: GETGLOBAL R48 K7       ; R48 := 0xae91e43b
853 [-]: SELF      R48 R48 K39  ; R49 := R48; R48 := R48[0x42b04007]
854 [-]: MOVE      R50 R47      ; R50 := R47
855 [-]: LOADKB    R51 1 0      ; R51 := true
856 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
857 [-]: LOADK     R49 K101     ; R49 := " "
858 [-]: GETGLOBAL R50 K7       ; R50 := 0xae91e43b
859 [-]: SELF      R50 R50 K39  ; R51 := R50; R50 := R50[0x42b04007]
860 [-]: LOADK     R52 K157     ; R52 := "/Lotus/Language/WorldStateWindow/EventRewardOneTime"
861 [-]: LOADKB    R53 1 0      ; R53 := true
862 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
863 [-]: CONCAT    R45 R48 R50  ; R45 := R48 .. R49 .. R50
864 [-]: GETTABLE  R48 R0 K149  ; R48 := R0["mRewardList"]
865 [-]: SELF      R48 R48 K158 ; R49 := R48; R48 := R48[0xbad4316f]
866 [-]: NEWTABLE  R50 0 5      ; R50 := {}
867 [-]: SETTABLE  R50 K159 R46 ; R50["NamePrefix"] := R46
868 [-]: SETTABLE  R50 K160 R45 ; R50["CustomProgress"] := R45
869 [-]: GETTABLE  R51 R0 K116  ; R51 := R0["Count"]
870 [-]: SETTABLE  R50 K116 R51 ; R50["Count"] := R51
871 [-]: GETTABLE  R51 R0 K117  ; R51 := R0["Goal"]
872 [-]: SETTABLE  R50 K117 R51 ; R50["Goal"] := R51
873 [-]: GETTABLE  R51 R0 K21   ; R51 := R0["Reward"]
874 [-]: SETTABLE  R50 K21 R51  ; R50["Reward"] := R51
875 [-]: LOADKB    R51 1 0      ; R51 := true
876 [-]: CALL      R48 4 1      ; R48(R49,R50,R51)
877 [-]: GETTABLE  R48 R0 K149  ; R48 := R0["mRewardList"]
878 [-]: GETTABLE  R48 R48 K161 ; R48 := R48["mForcedVerticalSeparation"]
879 [-]: ADD       R48 R43 R48  ; R48 := R43 + R48
880 [-]: ADD       R43 R48 K140 ; R43 := R48 + 2.000000
881 [-]: GETGLOBAL R48 K7       ; R48 := 0xae91e43b
882 [-]: SELF      R48 R48 K8   ; R49 := R48; R48 := R48[0xc0a3774b]
883 [-]: GETTABLE  R50 R0 K9    ; R50 := R0["mClipName"]
884 [-]: LOADK     R51 K54      ; R51 := "Arrow"
885 [-]: CONST     R52 11       ; R52 := 11.000000
886 [-]: NOT       R53 R44      ; R53 :=  R44
887 [-]: CALL      R48 6 1      ; R48(R49,R50,R51,R52,R53)
888 [-]: GETGLOBAL R48 K7       ; R48 := 0xae91e43b
889 [-]: SELF      R48 R48 K8   ; R49 := R48; R48 := R48[0xc0a3774b]
890 [-]: GETTABLE  R50 R0 K9    ; R50 := R0["mClipName"]
891 [-]: LOADK     R51 K55      ; R51 := "ArrowCircle"
892 [-]: CONST     R52 11       ; R52 := 11.000000
893 [-]: MOVE      R53 R44      ; R53 := R44
894 [-]: CALL      R48 6 1      ; R48(R49,R50,R51,R52,R53)
895 [-]: GETGLOBAL R48 K7       ; R48 := 0xae91e43b
896 [-]: SELF      R48 R48 K8   ; R49 := R48; R48 := R48[0xc0a3774b]
897 [-]: GETTABLE  R50 R0 K9    ; R50 := R0["mClipName"]
898 [-]: LOADK     R51 K56      ; R51 := "FactionIcon"
899 [-]: CONST     R52 11       ; R52 := 11.000000
900 [-]: TEST      R44 1        ; if R44 then PC := 907
901 [-]: JMP       907          ; PC := 907
902 [-]: EQ        1 R8 K22     ; if R8 == nil then PC := 907
903 [-]: JMP       907          ; PC := 907
904 [-]: GETTABLE  R53 R2 K162  ; R53 := R2["HideFaction"]
905 [-]: NOT       R53 R53      ; R53 :=  R53
906 [-]: JMP       909          ; PC := 909
907 [-]: LOADKB    R53 0 1      ; R53 := false; PC := 908
908 [-]: LOADKB    R53 1 0      ; R53 := true
909 [-]: CALL      R48 6 1      ; R48(R49,R50,R51,R52,R53)
910 [-]: GETGLOBAL R48 K163     ; R48 := 0x5bced4c4
911 [-]: GETTABLE  R48 R48 K164 ; R48 := R48[0xb62ecfe0]
912 [-]: CONST     R49 113      ; R49 := 113.000000
913 [-]: MOVE      R50 R43      ; R50 := R43
914 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
915 [-]: SUB       R49 R48 K165 ; R49 := R48 - 8.000000
916 [-]: GETGLOBAL R50 K7       ; R50 := 0xae91e43b
917 [-]: SELF      R50 R50 K11  ; R51 := R50; R50 := R50[0xf64b7262]
918 [-]: GETTABLE  R52 R0 K9    ; R52 := R0["mClipName"]
919 [-]: LOADK     R53 K23      ; R53 := "Event.Icon"
920 [-]: CONST     R54 12       ; R54 := 12.000000
921 [-]: MOVE      R55 R49      ; R55 := R49
922 [-]: CALL      R50 6 1      ; R50(R51,R52,R53,R54,R55)
923 [-]: GETGLOBAL R50 K7       ; R50 := 0xae91e43b
924 [-]: SELF      R50 R50 K11  ; R51 := R50; R50 := R50[0xf64b7262]
925 [-]: GETTABLE  R52 R0 K9    ; R52 := R0["mClipName"]
926 [-]: LOADK     R53 K23      ; R53 := "Event.Icon"
927 [-]: CONST     R54 13       ; R54 := 13.000000
928 [-]: MOVE      R55 R49      ; R55 := R49
929 [-]: CALL      R50 6 1      ; R50(R51,R52,R53,R54,R55)
930 [-]: GETGLOBAL R50 K7       ; R50 := 0xae91e43b
931 [-]: SELF      R50 R50 K11  ; R51 := R50; R50 := R50[0xf64b7262]
932 [-]: GETTABLE  R52 R0 K9    ; R52 := R0["mClipName"]
933 [-]: LOADK     R53 K23      ; R53 := "Event.Icon"
934 [-]: CONST     R54 0        ; R54 := 0.000000
935 [-]: SUB       R55 R49 K166 ; R55 := R49 - 102.000000
936 [-]: DIV       R55 R55 K140 ; R55 := R55 / 2.000000
937 [-]: SUB       R55 K167 R55 ; R55 := 3.000000 - R55
938 [-]: CALL      R50 6 1      ; R50(R51,R52,R53,R54,R55)
939 [-]: GETGLOBAL R50 K7       ; R50 := 0xae91e43b
940 [-]: SELF      R50 R50 K11  ; R51 := R50; R50 := R50[0xf64b7262]
941 [-]: GETTABLE  R52 R0 K9    ; R52 := R0["mClipName"]
942 [-]: LOADK     R53 K23      ; R53 := "Event.Icon"
943 [-]: CONST     R54 1        ; R54 := 1.000000
944 [-]: CONST     R55 0        ; R55 := 0.000000
945 [-]: CALL      R50 6 1      ; R50(R51,R52,R53,R54,R55)
946 [-]: CONST     R50 1        ; R50 := 1.000000
947 [-]: CONST     R51 0        ; R51 := 0.000000
948 [-]: MUL       R52 R49 K168 ; R52 := R49 * 1.070000
949 [-]: DIV       R53 R52 R49  ; R53 := R52 / R49
950 [-]: DIV       R50 K3 R53   ; R50 := 1.000000 / R53
951 [-]: SUB       R53 R50 K3   ; R53 := R50 - 1.000000
952 [-]: DIV       R53 R53 K140 ; R53 := R53 / 2.000000
953 [-]: UNM       R51 R53      ; R51 :=  R53
954 [-]: LOADK     R53 K169     ; R53 := 109.140007
955 [-]: DIV       R54 R53 R49  ; R54 := R53 / R49
956 [-]: DIV       R54 K3 R54   ; R54 := 1.000000 / R54
957 [-]: SUB       R55 R54 K3   ; R55 := R54 - 1.000000
958 [-]: DIV       R55 R55 K140 ; R55 := R55 / 2.000000
959 [-]: UNM       R55 R55      ; R55 :=  R55
960 [-]: GETGLOBAL R56 K7       ; R56 := 0xae91e43b
961 [-]: SELF      R56 R56 K170 ; R57 := R56; R56 := R56[0x91e13703]
962 [-]: GETTABLE  R58 R0 K9    ; R58 := R0["mClipName"]
963 [-]: LOADK     R59 K72      ; R59 := ".Event.Icon"
964 [-]: CONCAT    R58 R58 R59  ; R58 := R58 .. R59
965 [-]: LOADK     R59 K171     ; R59 := "MaskScale"
966 [-]: MOVE      R60 R54      ; R60 := R54
967 [-]: MOVE      R61 R50      ; R61 := R50
968 [-]: CONST     R62 0        ; R62 := 0.000000
969 [-]: CONST     R63 0        ; R63 := 0.000000
970 [-]: CALL      R56 8 1      ; R56(R57,R58,R59,R60,R61,R62,R63)
971 [-]: GETGLOBAL R56 K7       ; R56 := 0xae91e43b
972 [-]: SELF      R56 R56 K170 ; R57 := R56; R56 := R56[0x91e13703]
973 [-]: GETTABLE  R58 R0 K9    ; R58 := R0["mClipName"]
974 [-]: LOADK     R59 K72      ; R59 := ".Event.Icon"
975 [-]: CONCAT    R58 R58 R59  ; R58 := R58 .. R59
976 [-]: LOADK     R59 K172     ; R59 := "MaskOffset"
977 [-]: MOVE      R60 R55      ; R60 := R55
978 [-]: MOVE      R61 R51      ; R61 := R51
979 [-]: CONST     R62 0        ; R62 := 0.000000
980 [-]: CONST     R63 0        ; R63 := 0.000000
981 [-]: CALL      R56 8 1      ; R56(R57,R58,R59,R60,R61,R62,R63)
982 [-]: DIV       R56 R48 K140 ; R56 := R48 / 2.000000
983 [-]: DIV       R57 R43 K140 ; R57 := R43 / 2.000000
984 [-]: SUB       R56 R56 R57  ; R56 := R56 - R57
985 [-]: ADD       R56 R56 K167 ; R56 := R56 + 3.000000
986 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
987 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
988 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
989 [-]: LOADK     R60 K107     ; R60 := "Event.Title"
990 [-]: CONST     R61 1        ; R61 := 1.000000
991 [-]: MOVE      R62 R56      ; R62 := R56
992 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
993 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
994 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
995 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
996 [-]: LOADK     R60 K108     ; R60 := "Event.Desc"
997 [-]: CONST     R61 1        ; R61 := 1.000000
998 [-]: ADD       R62 R56 R19  ; R62 := R56 + R19
999 [-]: ADD       R62 R62 K53  ; R62 := R62 + 5.000000
1000 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1001 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
1002 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
1003 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
1004 [-]: LOADK     R60 K111     ; R60 := "Event.Progress"
1005 [-]: CONST     R61 1        ; R61 := 1.000000
1006 [-]: ADD       R62 R56 R19  ; R62 := R56 + R19
1007 [-]: ADD       R62 R62 R20  ; R62 := R62 + R20
1008 [-]: ADD       R62 R62 K173 ; R62 := R62 + 10.000000
1009 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1010 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
1011 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
1012 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
1013 [-]: LOADK     R60 K146     ; R60 := "Event.RewardPrefix"
1014 [-]: CONST     R61 1        ; R61 := 1.000000
1015 [-]: ADD       R62 R56 R19  ; R62 := R56 + R19
1016 [-]: ADD       R62 R62 R20  ; R62 := R62 + R20
1017 [-]: GETUPVAL  R63 U3       ; R63 := U3
1018 [-]: GETTABLE  R63 R63 K51  ; R63 := R63[0x06d055f9]
1019 [-]: MOVE      R64 R22      ; R64 := R22
1020 [-]: CONST     R65 25       ; R65 := 25.000000
1021 [-]: CONST     R66 10       ; R66 := 10.000000
1022 [-]: CALL      R63 4 2      ; R63 := R63(R64,R65,R66)
1023 [-]: ADD       R62 R62 R63  ; R62 := R62 + R63
1024 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1025 [-]: GETTABLE  R57 R0 K149  ; R57 := R0["mRewardList"]
1026 [-]: EQ        1 R57 K22    ; if R57 == nil then PC := 1046
1027 [-]: JMP       1046         ; PC := 1046
1028 [-]: GETTABLE  R57 R0 K149  ; R57 := R0["mRewardList"]
1029 [-]: ADD       R58 R56 R19  ; R58 := R56 + R19
1030 [-]: ADD       R58 R58 R20  ; R58 := R58 + R20
1031 [-]: GETUPVAL  R59 U3       ; R59 := U3
1032 [-]: GETTABLE  R59 R59 K51  ; R59 := R59[0x06d055f9]
1033 [-]: MOVE      R60 R22      ; R60 := R22
1034 [-]: CONST     R61 25       ; R61 := 25.000000
1035 [-]: CONST     R62 10       ; R62 := 10.000000
1036 [-]: CALL      R59 4 2      ; R59 := R59(R60,R61,R62)
1037 [-]: ADD       R58 R58 R59  ; R58 := R58 + R59
1038 [-]: ADD       R58 R58 K140 ; R58 := R58 + 2.000000
1039 [-]: SETTABLE  R57 K174 R58 ; R57["mInitialY"] := R58
1040 [-]: GETTABLE  R57 R0 K149  ; R57 := R0["mRewardList"]
1041 [-]: SELF      R57 R57 K175 ; R58 := R57; R57 := R57[0x71e9ac81]
1042 [-]: LOADNIL   R59 R59      ; R59 := nil
1043 [-]: LOADKB    R60 1 0      ; R60 := true
1044 [-]: LOADKB    R61 1 0      ; R61 := true
1045 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
1046 [-]: GETTABLE  R57 R0 K5    ; R57 := R0["TotalHeight"]
1047 [-]: ADD       R57 R57 R48  ; R57 := R57 + R48
1048 [-]: SETTABLE  R0 K5 R57    ; R0["TotalHeight"] := R57
1049 [-]: GETTABLE  R57 R0 K1    ; R57 := R0["IsBannerEvent"]
1050 [-]: TEST      R57 1        ; if R57 then PC := 1066
1051 [-]: JMP       1066         ; PC := 1066
1052 [-]: GETTABLE  R57 R0 K0    ; R57 := R0["IsLinearEvent"]
1053 [-]: TEST      R57 1        ; if R57 then PC := 1066
1054 [-]: JMP       1066         ; PC := 1066
1055 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
1056 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
1057 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
1058 [-]: LOADK     R60 K19      ; R60 := "Event.Expiry"
1059 [-]: CONST     R61 1        ; R61 := 1.000000
1060 [-]: GETTABLE  R62 R0 K5    ; R62 := R0["TotalHeight"]
1061 [-]: SUB       R62 R62 K176 ; R62 := R62 - 7.000000
1062 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1063 [-]: GETTABLE  R57 R0 K5    ; R57 := R0["TotalHeight"]
1064 [-]: ADD       R57 R57 K177 ; R57 := R57 + 30.000000
1065 [-]: SETTABLE  R0 K5 R57    ; R0["TotalHeight"] := R57
1066 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
1067 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
1068 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
1069 [-]: LOADK     R60 K178     ; R60 := "Btn"
1070 [-]: CONST     R61 13       ; R61 := 13.000000
1071 [-]: GETTABLE  R62 R0 K5    ; R62 := R0["TotalHeight"]
1072 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1073 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
1074 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
1075 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
1076 [-]: LOADK     R60 K179     ; R60 := "Outline"
1077 [-]: CONST     R61 13       ; R61 := 13.000000
1078 [-]: GETTABLE  R62 R0 K5    ; R62 := R0["TotalHeight"]
1079 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1080 [-]: GETGLOBAL R57 K7       ; R57 := 0xae91e43b
1081 [-]: SELF      R57 R57 K11  ; R58 := R57; R57 := R57[0xf64b7262]
1082 [-]: GETTABLE  R59 R0 K9    ; R59 := R0["mClipName"]
1083 [-]: LOADK     R60 K180     ; R60 := "Highlight"
1084 [-]: CONST     R61 1        ; R61 := 1.000000
1085 [-]: GETTABLE  R62 R0 K5    ; R62 := R0["TotalHeight"]
1086 [-]: SUB       R62 R62 K140 ; R62 := R62 - 2.000000
1087 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1088 [-]: GETTABLE  R57 R0 K181  ; R57 := R0["mIsFinalMission"]
1089 [-]: TEST      R57 0        ; if not R57 then PC := 1128
1090 [-]: JMP       1128         ; PC := 1128
1091 [-]: GETTABLE  R57 R0 K5    ; R57 := R0["TotalHeight"]
1092 [-]: GETUPVAL  R58 U8       ; R58 := U8
1093 [-]: GETTABLE  R58 R58 K161 ; R58 := R58["mForcedVerticalSeparation"]
1094 [-]: GETTABLE  R59 R0 K2    ; R59 := R0["mMissionNumber"]
1095 [-]: SUB       R59 R59 K3   ; R59 := R59 - 1.000000
1096 [-]: MUL       R58 R58 R59  ; R58 := R58 * R59
1097 [-]: ADD       R57 R57 R58  ; R57 := R57 + R58
1098 [-]: GETTABLE  R58 R0 K182  ; R58 := R0["mIndex"]
1099 [-]: SUB       R58 R58 K3   ; R58 := R58 - 1.000000
1100 [-]: GETTABLE  R59 R0 K182  ; R59 := R0["mIndex"]
1101 [-]: GETTABLE  R60 R0 K2    ; R60 := R0["mMissionNumber"]
1102 [-]: SUB       R59 R59 R60  ; R59 := R59 - R60
1103 [-]: ADD       R59 R59 K3   ; R59 := R59 + 1.000000
1104 [-]: CONST     R60 -1       ; R60 := -1.000000
1105 [-]: FORPREP   R58 1127     ; R58 -= R60; PC := 1127
1106 [-]: GETUPVAL  R62 U8       ; R62 := U8
1107 [-]: SELF      R62 R62 K183 ; R63 := R62; R62 := R62[0x5465f8f3]
1108 [-]: MOVE      R64 R61      ; R64 := R61
1109 [-]: CALL      R62 3 2      ; R62 := R62(R63,R64)
1110 [-]: GETGLOBAL R63 K30      ; R63 := 0x7b998233
1111 [-]: MOVE      R64 R62      ; R64 := R62
1112 [-]: CALL      R63 2 2      ; R63 := R63(R64)
1113 [-]: TEST      R63 1        ; if R63 then PC := 1127
1114 [-]: JMP       1127         ; PC := 1127
1115 [-]: GETTABLE  R63 R62 K5   ; R63 := R62["TotalHeight"]
1116 [-]: ADD       R57 R57 R63  ; R57 := R57 + R63
1117 [-]: GETTABLE  R63 R62 K2   ; R63 := R62["mMissionNumber"]
1118 [-]: EQ        0 R63 K3     ; if R63 ~= 1.000000 then PC := 1127
1119 [-]: JMP       1127         ; PC := 1127
1120 [-]: GETGLOBAL R63 K7       ; R63 := 0xae91e43b
1121 [-]: SELF      R63 R63 K11  ; R64 := R63; R63 := R63[0xf64b7262]
1122 [-]: GETTABLE  R65 R62 K9   ; R65 := R62["mClipName"]
1123 [-]: LOADK     R66 K179     ; R66 := "Outline"
1124 [-]: CONST     R67 13       ; R67 := 13.000000
1125 [-]: MOVE      R68 R57      ; R68 := R57
1126 [-]: CALL      R63 6 1      ; R63(R64,R65,R66,R67,R68)
1127 [-]: FORLOOP   R58 1106     ; R58 += R60; if R58 <= R59 then begin PC := 1106; R61 := R58 end
1128 [-]: GETTABLE  R63 R0 K184  ; R63 := R0["IsHeatFissureEvent"]
1129 [-]: TEST      R63 1        ; if R63 then PC := 1134
1130 [-]: JMP       1134         ; PC := 1134
1131 [-]: GETTABLE  R63 R1 K126  ; R63 := R1["mFomorian"]
1132 [-]: TEST      R63 0        ; if not R63 then PC := 1311
1133 [-]: JMP       1311         ; PC := 1311
1134 [-]: NEWTABLE  R63 0 0      ; R63 := {}
1135 [-]: SETTABLE  R0 K185 R63  ; R0["IngredientOverride"] := R63
1136 [-]: GETTABLE  R63 R1 K186  ; R63 := R1["mInterimGoals"]
1137 [-]: LEN       R64 R63      ; R64 := # R63
1138 [-]: NEWTABLE  R65 0 0      ; R65 := {}
1139 [-]: GETTABLE  R66 R1 K187  ; R66 := R1["mInterimRewards"]
1140 [-]: CONST     R67 1        ; R67 := 1.000000
1141 [-]: GETGLOBAL R68 K163     ; R68 := 0x5bced4c4
1142 [-]: GETTABLE  R68 R68 K188 ; R68 := R68[0xac1b386a]
1143 [-]: MOVE      R69 R64      ; R69 := R64
1144 [-]: LEN       R70 R66      ; R70 := # R66
1145 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
1146 [-]: CONST     R69 1        ; R69 := 1.000000
1147 [-]: FORPREP   R67 1157     ; R67 -= R69; PC := 1157
1148 [-]: GETGLOBAL R71 K189     ; R71 := 0x33bdd652
1149 [-]: GETTABLE  R71 R71 K190 ; R71 := R71[0x23d5322f]
1150 [-]: MOVE      R72 R65      ; R72 := R65
1151 [-]: NEWTABLE  R73 0 2      ; R73 := {}
1152 [-]: GETTABLE  R74 R63 R70  ; R74 := R63[R70]
1153 [-]: SETTABLE  R73 K117 R74 ; R73["Goal"] := R74
1154 [-]: GETTABLE  R74 R66 R70  ; R74 := R66[R70]
1155 [-]: SETTABLE  R73 K21 R74  ; R73["Reward"] := R74
1156 [-]: CALL      R71 3 1      ; R71(R72,R73)
1157 [-]: FORLOOP   R67 1148     ; R67 += R69; if R67 <= R68 then begin PC := 1148; R70 := R67 end
1158 [-]: GETGLOBAL R71 K189     ; R71 := 0x33bdd652
1159 [-]: GETTABLE  R71 R71 K190 ; R71 := R71[0x23d5322f]
1160 [-]: MOVE      R72 R65      ; R72 := R65
1161 [-]: NEWTABLE  R73 0 2      ; R73 := {}
1162 [-]: GETTABLE  R74 R1 K191  ; R74 := R1["mGoal"]
1163 [-]: SETTABLE  R73 K117 R74 ; R73["Goal"] := R74
1164 [-]: GETTABLE  R74 R1 K192  ; R74 := R1["mReward"]
1165 [-]: SETTABLE  R73 K21 R74  ; R73["Reward"] := R74
1166 [-]: CALL      R71 3 1      ; R71(R72,R73)
1167 [-]: GETTABLE  R71 R0 K116  ; R71 := R0["Count"]
1168 [-]: GETTABLE  R72 R1 K191  ; R72 := R1["mGoal"]
1169 [-]: LE        0 R72 R71    ; if R72 > R71 then PC := 1185
1170 [-]: JMP       1185         ; PC := 1185
1171 [-]: GETGLOBAL R71 K30      ; R71 := 0x7b998233
1172 [-]: GETTABLE  R72 R1 K193  ; R72 := R1["mBonusReward"]
1173 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1174 [-]: TEST      R71 1        ; if R71 then PC := 1185
1175 [-]: JMP       1185         ; PC := 1185
1176 [-]: GETGLOBAL R71 K189     ; R71 := 0x33bdd652
1177 [-]: GETTABLE  R71 R71 K190 ; R71 := R71[0x23d5322f]
1178 [-]: MOVE      R72 R65      ; R72 := R65
1179 [-]: NEWTABLE  R73 0 2      ; R73 := {}
1180 [-]: GETTABLE  R74 R1 K194  ; R74 := R1["mBonusGoal"]
1181 [-]: SETTABLE  R73 K117 R74 ; R73["Goal"] := R74
1182 [-]: GETTABLE  R74 R1 K193  ; R74 := R1["mBonusReward"]
1183 [-]: SETTABLE  R73 K21 R74  ; R73["Reward"] := R74
1184 [-]: CALL      R71 3 1      ; R71(R72,R73)
1185 [-]: CONST     R71 1        ; R71 := 1.000000
1186 [-]: LEN       R72 R65      ; R72 := # R65
1187 [-]: CONST     R73 1        ; R73 := 1.000000
1188 [-]: FORPREP   R71 1310     ; R71 -= R73; PC := 1310
1189 [-]: GETTABLE  R75 R65 R74  ; R75 := R65[R74]
1190 [-]: GETTABLE  R75 R75 K21  ; R75 := R75["Reward"]
1191 [-]: GETTABLE  R75 R75 K195 ; R75 := R75["items"]
1192 [-]: LEN       R75 R75      ; R75 := # R75
1193 [-]: LT        1 K6 R75     ; if 0.000000 < R75 then PC := 1213
1194 [-]: JMP       1213         ; PC := 1213
1195 [-]: GETTABLE  R75 R65 R74  ; R75 := R65[R74]
1196 [-]: GETTABLE  R75 R75 K21  ; R75 := R75["Reward"]
1197 [-]: GETTABLE  R75 R75 K196 ; R75 := R75["countedItems"]
1198 [-]: LEN       R75 R75      ; R75 := # R75
1199 [-]: LT        1 K6 R75     ; if 0.000000 < R75 then PC := 1213
1200 [-]: JMP       1213         ; PC := 1213
1201 [-]: GETTABLE  R75 R65 R74  ; R75 := R65[R74]
1202 [-]: GETTABLE  R75 R75 K21  ; R75 := R75["Reward"]
1203 [-]: GETTABLE  R75 R75 K197 ; R75 := R75["countedStoreItems"]
1204 [-]: LEN       R75 R75      ; R75 := # R75
1205 [-]: LT        1 K6 R75     ; if 0.000000 < R75 then PC := 1213
1206 [-]: JMP       1213         ; PC := 1213
1207 [-]: GETTABLE  R75 R65 R74  ; R75 := R65[R74]
1208 [-]: GETTABLE  R75 R75 K21  ; R75 := R75["Reward"]
1209 [-]: GETTABLE  R75 R75 K198 ; R75 := R75["credits"]
1210 [-]: LT        1 K6 R75     ; if 0.000000 < R75 then PC := 1213
1211 [-]: JMP       1213         ; PC := 1213
1212 [-]: LOADKB    R75 0 1      ; R75 := false; PC := 1213
1213 [-]: LOADKB    R75 1 0      ; R75 := true
1214 [-]: GETTABLE  R76 R65 R74  ; R76 := R65[R74]
1215 [-]: GETTABLE  R76 R76 K117 ; R76 := R76["Goal"]
1216 [-]: LT        0 K6 R76     ; if 0.000000 >= R76 then PC := 1310
1217 [-]: JMP       1310         ; PC := 1310
1218 [-]: TEST      R75 0        ; if not R75 then PC := 1310
1219 [-]: JMP       1310         ; PC := 1310
1220 [-]: GETUPVAL  R76 U5       ; R76 := U5
1221 [-]: GETTABLE  R76 R76 K199 ; R76 := R76[0x73a7fd40]
1222 [-]: GETTABLE  R77 R65 R74  ; R77 := R65[R74]
1223 [-]: GETTABLE  R77 R77 K21  ; R77 := R77["Reward"]
1224 [-]: LOADKB    R78 1 0      ; R78 := true
1225 [-]: CALL      R76 3 6      ; R76,R77,R78,R79,R80 := R76(R77,R78)
1226 [-]: GETUPVAL  R81 U5       ; R81 := U5
1227 [-]: GETTABLE  R81 R81 K200 ; R81 := R81[0xfbe41490]
1228 [-]: GETGLOBAL R82 K7       ; R82 := 0xae91e43b
1229 [-]: GETTABLE  R83 R65 R74  ; R83 := R65[R74]
1230 [-]: GETTABLE  R83 R83 K21  ; R83 := R83["Reward"]
1231 [-]: CALL      R81 3 2      ; R81 := R81(R82,R83)
1232 [-]: GETGLOBAL R82 K30      ; R82 := 0x7b998233
1233 [-]: MOVE      R83 R78      ; R83 := R78
1234 [-]: CALL      R82 2 2      ; R82 := R82(R83)
1235 [-]: TEST      R82 1        ; if R82 then PC := 1241
1236 [-]: JMP       1241         ; PC := 1241
1237 [-]: SELF      R82 R78 K201 ; R83 := R78; R82 := R78[0xf2deaf69]
1238 [-]: GETGLOBAL R84 K202     ; R84 := gLotusSigilType
1239 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
1240 [-]: JMP       1243         ; PC := 1243
1241 [-]: LOADKB    R82 0 1      ; R82 := false; PC := 1242
1242 [-]: LOADKB    R82 1 0      ; R82 := true
1243 [-]: GETGLOBAL R83 K30      ; R83 := 0x7b998233
1244 [-]: MOVE      R84 R78      ; R84 := R78
1245 [-]: CALL      R83 2 2      ; R83 := R83(R84)
1246 [-]: TEST      R83 1        ; if R83 then PC := 1252
1247 [-]: JMP       1252         ; PC := 1252
1248 [-]: SELF      R83 R78 K201 ; R84 := R78; R83 := R78[0xf2deaf69]
1249 [-]: GETGLOBAL R85 K203     ; R85 := gAvatarImageItemType
1250 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
1251 [-]: JMP       1254         ; PC := 1254
1252 [-]: LOADKB    R83 0 1      ; R83 := false; PC := 1253
1253 [-]: LOADKB    R83 1 0      ; R83 := true
1254 [-]: TEST      R79 1        ; if R79 then PC := 1266
1255 [-]: JMP       1266         ; PC := 1266
1256 [-]: GETGLOBAL R84 K59      ; R84 := 0x0032441c
1257 [-]: GETTABLE  R84 R84 K204 ; R84 := R84["UITexture_CreditsIcon"]
1258 [-]: EQ        1 R76 R84    ; if R76 == R84 then PC := 1265
1259 [-]: JMP       1265         ; PC := 1265
1260 [-]: TESTSET   R79 R82 1    ; if R82 then PC := 1266 else R79 := R82
1261 [-]: JMP       1266         ; PC := 1266
1262 [-]: MOVE      R79 R83      ; R79 := R83
1263 [-]: JMP       1266         ; PC := 1266
1264 [-]: LOADKB    R79 0 1      ; R79 := false; PC := 1265
1265 [-]: LOADKB    R79 1 0      ; R79 := true
1266 [-]: GETGLOBAL R84 K163     ; R84 := 0x5bced4c4
1267 [-]: GETTABLE  R84 R84 K205 ; R84 := R84[0xe4a5b3ca]
1268 [-]: GETTABLE  R85 R0 K116  ; R85 := R0["Count"]
1269 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1270 [-]: GETTABLE  R85 R65 R74  ; R85 := R65[R74]
1271 [-]: GETTABLE  R85 R85 K117 ; R85 := R85["Goal"]
1272 [-]: LE        1 R85 R84    ; if R85 <= R84 then PC := 1275
1273 [-]: JMP       1275         ; PC := 1275
1274 [-]: LOADKB    R84 0 1      ; R84 := false; PC := 1275
1275 [-]: LOADKB    R84 1 0      ; R84 := true
1276 [-]: GETGLOBAL R85 K7       ; R85 := 0xae91e43b
1277 [-]: SELF      R85 R85 K39  ; R86 := R85; R85 := R85[0x42b04007]
1278 [-]: GETUPVAL  R87 U3       ; R87 := U3
1279 [-]: GETTABLE  R87 R87 K51  ; R87 := R87[0x06d055f9]
1280 [-]: MOVE      R88 R84      ; R88 := R84
1281 [-]: LOADK     R89 K206     ; R89 := "<CHECKMARK>"
1282 [-]: LOADK     R90 K207     ; R90 := "<CHECKMARK_OUTLINE>"
1283 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1284 [-]: LOADKB    R88 1 0      ; R88 := true
1285 [-]: CALL      R85 4 2      ; R85 := R85(R86,R87,R88)
1286 [-]: LOADK     R86 K208     ; R86 := " @ "
1287 [-]: GETTABLE  R87 R65 R74  ; R87 := R65[R74]
1288 [-]: GETTABLE  R87 R87 K117 ; R87 := R87["Goal"]
1289 [-]: CONCAT    R85 R85 R87  ; R85 := R85 .. R86 .. R87
1290 [-]: GETGLOBAL R86 K189     ; R86 := 0x33bdd652
1291 [-]: GETTABLE  R86 R86 K190 ; R86 := R86[0x23d5322f]
1292 [-]: GETTABLE  R87 R0 K185  ; R87 := R0["IngredientOverride"]
1293 [-]: NEWTABLE  R88 0 7      ; R88 := {}
1294 [-]: SETTABLE  R88 K209 K4  ; R88["mHasResources"] := true
1295 [-]: NOT       R89 R84      ; R89 :=  R84
1296 [-]: SETTABLE  R88 K210 R89 ; R88["mIncomplete"] := R89
1297 [-]: SETTABLE  R88 K211 R81 ; R88["Name"] := R81
1298 [-]: SETTABLE  R88 K212 R85 ; R88["SubText"] := R85
1299 [-]: SETTABLE  R88 K213 R76 ; R88["Icon"] := R76
1300 [-]: SETTABLE  R88 K214 R79 ; R88["Themed"] := R79
1301 [-]: GETUPVAL  R89 U3       ; R89 := U3
1302 [-]: GETTABLE  R89 R89 K51  ; R89 := R89[0x06d055f9]
1303 [-]: MOVE      R90 R80      ; R90 := R80
1304 [-]: GETUPVAL  R91 U0       ; R91 := U0
1305 [-]: GETTABLE  R91 R91 K74  ; R91 := R91["Content"]
1306 [-]: LOADNIL   R92 R92      ; R92 := nil
1307 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
1308 [-]: SETTABLE  R88 K215 R89 ; R88["TintIconColor"] := R89
1309 [-]: CALL      R86 3 1      ; R86(R87,R88)
1310 [-]: FORLOOP   R71 1189     ; R71 += R73; if R71 <= R72 then begin PC := 1189; R74 := R71 end
1311 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 3721
; #Upvalues:       15
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  76

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
  3 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := "EventHeader"
  5 [-]: CONST     R6 11        ; R6 := 11.000000
  6 [-]: LOADKB    R7 0 0       ; R7 := false
  7 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  9 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
 10 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 11 [-]: LOADK     R5 K4        ; R5 := "LinearEvent"
 12 [-]: CONST     R6 11        ; R6 := 11.000000
 13 [-]: LOADKB    R7 0 0       ; R7 := false
 14 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 15 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 16 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
 17 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 18 [-]: LOADK     R5 K5        ; R5 := "RelayReconstructionEvent"
 19 [-]: CONST     R6 11        ; R6 := 11.000000
 20 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["IsRelayEvent"]
 21 [-]: EQ        1 R7 K7      ; if R7 == true then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 24
 24 [-]: LOADKB    R7 1 0       ; R7 := true
 25 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 27 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
 28 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 29 [-]: LOADK     R5 K8        ; R5 := "Event"
 30 [-]: CONST     R6 11        ; R6 := 11.000000
 31 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["IsLinearEvent"]
 32 [-]: TEST      R7 1         ; if R7 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["IsHeader"]
 35 [-]: TEST      R7 1         ; if R7 then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["IsRelayEvent"]
 38 [-]: NOT       R7 R7        ; R7 :=  R7
 39 [-]: JMP       42           ; PC := 42
 40 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 41
 41 [-]: LOADKB    R7 1 0       ; R7 := true
 42 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 43 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 44 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
 45 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 46 [-]: LOADK     R5 K11       ; R5 := "Outline"
 47 [-]: CONST     R6 11        ; R6 := 11.000000
 48 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["IsHeader"]
 49 [-]: TEST      R7 1         ; if R7 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["IsLinearEvent"]
 52 [-]: TEST      R7 0         ; if not R7 then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["mMissionNumber"]
 55 [-]: EQ        1 R7 K13     ; if R7 == 1.000000 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 58
 58 [-]: LOADKB    R7 1 0       ; R7 := true
 59 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 60 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 61 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
 62 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 63 [-]: LOADK     R5 K15       ; R5 := "Event.Best"
 64 [-]: CONST     R6 1         ; R6 := 1.000000
 65 [-]: CONST     R7 54        ; R7 := 54.000000
 66 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 67 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 68 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
 69 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 70 [-]: LOADK     R5 K16       ; R5 := "Event.Reward"
 71 [-]: CONST     R6 0         ; R6 := 0.000000
 72 [-]: CONST     R7 7         ; R7 := 7.000000
 73 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 74 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 75 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
 76 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 77 [-]: LOADK     R5 K17       ; R5 := "Event.Icon"
 78 [-]: CONST     R6 11        ; R6 := 11.000000
 79 [-]: LOADKB    R7 0 0       ; R7 := false
 80 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 81 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 82 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
 83 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 84 [-]: LOADK     R5 K18       ; R5 := "FactionIcon"
 85 [-]: CONST     R6 11        ; R6 := 11.000000
 86 [-]: LOADKB    R7 0 0       ; R7 := false
 87 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 88 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 89 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xd5181643]
 90 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 91 [-]: LOADK     R5 K20       ; R5 := ".Event.Progress.Bg"
 92 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 93 [-]: GETGLOBAL R5 K21       ; R5 := 0xe3d94630
 94 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 95 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 96 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0x91e13703]
 97 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 98 [-]: LOADK     R5 K20       ; R5 := ".Event.Progress.Bg"
 99 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
100 [-]: LOADK     R5 K23       ; R5 := "RectInnerColor"
101 [-]: GETUPVAL  R6 U0        ; R6 := U0
102 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["Background1Object"]
103 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["r"]
104 [-]: GETUPVAL  R7 U0        ; R7 := U0
105 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["Background1Object"]
106 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["g"]
107 [-]: GETUPVAL  R8 U0        ; R8 := U0
108 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["Background1Object"]
109 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["b"]
110 [-]: LOADK     R9 K28       ; R9 := 0.900000
111 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
112 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
113 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0x91e13703]
114 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
115 [-]: LOADK     R5 K20       ; R5 := ".Event.Progress.Bg"
116 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
117 [-]: LOADK     R5 K29       ; R5 := "RectEdgeColor"
118 [-]: GETUPVAL  R6 U0        ; R6 := U0
119 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["FloatingContentObject"]
120 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["r"]
121 [-]: GETUPVAL  R7 U0        ; R7 := U0
122 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["FloatingContentObject"]
123 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["g"]
124 [-]: GETUPVAL  R8 U0        ; R8 := U0
125 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["FloatingContentObject"]
126 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["b"]
127 [-]: CONST     R9 1         ; R9 := 1.000000
128 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
129 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
130 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xd5181643]
131 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
132 [-]: LOADK     R5 K31       ; R5 := ".Event.Progress.Fill"
133 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
134 [-]: GETGLOBAL R5 K21       ; R5 := 0xe3d94630
135 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
136 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
137 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0x91e13703]
138 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
139 [-]: LOADK     R5 K31       ; R5 := ".Event.Progress.Fill"
140 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
141 [-]: LOADK     R5 K23       ; R5 := "RectInnerColor"
142 [-]: GETUPVAL  R6 U0        ; R6 := U0
143 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["FloatingContentObject"]
144 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["r"]
145 [-]: GETUPVAL  R7 U0        ; R7 := U0
146 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["FloatingContentObject"]
147 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["g"]
148 [-]: GETUPVAL  R8 U0        ; R8 := U0
149 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["FloatingContentObject"]
150 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["b"]
151 [-]: CONST     R9 1         ; R9 := 1.000000
152 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
153 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
154 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0x91e13703]
155 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
156 [-]: LOADK     R5 K31       ; R5 := ".Event.Progress.Fill"
157 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
158 [-]: LOADK     R5 K29       ; R5 := "RectEdgeColor"
159 [-]: CONST     R6 0         ; R6 := 0.000000
160 [-]: CONST     R7 0         ; R7 := 0.000000
161 [-]: CONST     R8 0         ; R8 := 0.000000
162 [-]: CONST     R9 0         ; R9 := 0.000000
163 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
164 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
165 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
166 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
167 [-]: LOADK     R5 K32       ; R5 := "Event.Title"
168 [-]: CONST     R6 36        ; R6 := 36.000000
169 [-]: GETUPVAL  R7 U0        ; R7 := U0
170 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["FloatingContent"]
171 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
172 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
173 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
174 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
175 [-]: LOADK     R5 K34       ; R5 := "Event.Desc"
176 [-]: CONST     R6 36        ; R6 := 36.000000
177 [-]: GETUPVAL  R7 U0        ; R7 := U0
178 [-]: GETTABLE  R7 R7 K35    ; R7 := R7["Content"]
179 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
180 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
181 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
182 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
183 [-]: LOADK     R5 K15       ; R5 := "Event.Best"
184 [-]: CONST     R6 36        ; R6 := 36.000000
185 [-]: GETUPVAL  R7 U0        ; R7 := U0
186 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["FloatingContent"]
187 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
188 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
189 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
190 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
191 [-]: LOADK     R5 K36       ; R5 := "Event.RewardPrefix"
192 [-]: CONST     R6 36        ; R6 := 36.000000
193 [-]: GETUPVAL  R7 U0        ; R7 := U0
194 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["FloatingContent"]
195 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
196 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
197 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
198 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
199 [-]: LOADK     R5 K37       ; R5 := "Event.Expiry.Timer"
200 [-]: CONST     R6 36        ; R6 := 36.000000
201 [-]: GETUPVAL  R7 U0        ; R7 := U0
202 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["FloatingContentHighlight"]
203 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
204 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
205 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xf64b7262]
206 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
207 [-]: LOADK     R5 K39       ; R5 := "Event.Expiry.Separator"
208 [-]: CONST     R6 9         ; R6 := 9.000000
209 [-]: GETUPVAL  R7 U0        ; R7 := U0
210 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["FloatingContent"]
211 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
212 [-]: GETUPVAL  R2 U1        ; R2 := U1
213 [-]: GETTABLE  R2 R2 K40    ; R2 := R2[0x5e35d4d6]
214 [-]: CALL      R2 1 2       ; R2 := R2()
215 [-]: GETTABLE  R3 R0 K41    ; R3 := R0["EventInfo"]
216 [-]: GETTABLE  R4 R3 K42    ; R4 := R3["mFomorian"]
217 [-]: TEST      R4 0         ; if not R4 then PC := 229
218 [-]: JMP       229          ; PC := 229
219 [-]: SELF      R4 R2 K43    ; R5 := R2; R4 := R2[0x3ad9ed31]
220 [-]: GETTABLE  R6 R3 K44    ; R6 := R3["mVictimNode"]
221 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
222 [-]: GETGLOBAL R5 K46       ; R5 := 0x603636ad
223 [-]: GETGLOBAL R6 K47       ; R6 := 0x64fb1586
224 [-]: GETTABLE  R7 R4 K48    ; R7 := R4["locTag"]
225 [-]: CALL      R6 2 2       ; R6 := R6(R7)
226 [-]: LOADKB    R7 0 0       ; R7 := false
227 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
228 [-]: SETTABLE  R0 K45 R5    ; R0["VictimNodeName"] := R5
229 [-]: CONST     R5 1         ; R5 := 1.000000
230 [-]: GETUPVAL  R6 U2        ; R6 := U2
231 [-]: LEN       R6 R6        ; R6 := # R6
232 [-]: CONST     R7 1         ; R7 := 1.000000
233 [-]: FORPREP   R5 242       ; R5 -= R7; PC := 242
234 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
235 [-]: SELF      R9 R9 K19    ; R10 := R9; R9 := R9[0xd5181643]
236 [-]: GETTABLE  R11 R0 K2    ; R11 := R0["mClipName"]
237 [-]: GETUPVAL  R12 U2       ; R12 := U2
238 [-]: GETTABLE  R12 R12 R8   ; R12 := R12[R8]
239 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
240 [-]: GETGLOBAL R12 K49      ; R12 := 0x3f56a9a5
241 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
242 [-]: FORLOOP   R5 234       ; R5 += R7; if R5 <= R6 then begin PC := 234; R8 := R5 end
243 [-]: GETGLOBAL R9 K50       ; R9 := 0x7b998233
244 [-]: GETUPVAL  R10 U3       ; R10 := U3
245 [-]: GETTABLE  R11 R0 K41   ; R11 := R0["EventInfo"]
246 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["mTag"]
247 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
248 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
249 [-]: TEST      R9 1         ; if R9 then PC := 256
250 [-]: JMP       256          ; PC := 256
251 [-]: GETUPVAL  R9 U4        ; R9 := U4
252 [-]: MOVE      R10 R0       ; R10 := R0
253 [-]: CALL      R9 2 1       ; R9(R10)
254 [-]: RETURN    R0 1         ; return 
255 [-]: JMP       320          ; PC := 320
256 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["IsLinearEvent"]
257 [-]: TEST      R9 0         ; if not R9 then PC := 305
258 [-]: JMP       305          ; PC := 305
259 [-]: GETUPVAL  R9 U5        ; R9 := U5
260 [-]: MOVE      R10 R0       ; R10 := R0
261 [-]: LOADKB    R11 0 0      ; R11 := false
262 [-]: CALL      R9 3 1       ; R9(R10,R11)
263 [-]: GETTABLE  R9 R0 K52    ; R9 := R0["mIsFinalMission"]
264 [-]: TEST      R9 0         ; if not R9 then PC := 303
265 [-]: JMP       303          ; PC := 303
266 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["TotalHeight"]
267 [-]: GETUPVAL  R10 U6       ; R10 := U6
268 [-]: GETTABLE  R10 R10 K54  ; R10 := R10["mForcedVerticalSeparation"]
269 [-]: GETTABLE  R11 R0 K12   ; R11 := R0["mMissionNumber"]
270 [-]: SUB       R11 R11 K13  ; R11 := R11 - 1.000000
271 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
272 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
273 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mIndex"]
274 [-]: SUB       R10 R10 K13  ; R10 := R10 - 1.000000
275 [-]: GETTABLE  R11 R0 K55   ; R11 := R0["mIndex"]
276 [-]: GETTABLE  R12 R0 K12   ; R12 := R0["mMissionNumber"]
277 [-]: SUB       R11 R11 R12  ; R11 := R11 - R12
278 [-]: ADD       R11 R11 K13  ; R11 := R11 + 1.000000
279 [-]: CONST     R12 -1       ; R12 := -1.000000
280 [-]: FORPREP   R10 302      ; R10 -= R12; PC := 302
281 [-]: GETUPVAL  R14 U6       ; R14 := U6
282 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14[0x5465f8f3]
283 [-]: MOVE      R16 R13      ; R16 := R13
284 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
285 [-]: GETGLOBAL R15 K50      ; R15 := 0x7b998233
286 [-]: MOVE      R16 R14      ; R16 := R14
287 [-]: CALL      R15 2 2      ; R15 := R15(R16)
288 [-]: TEST      R15 1        ; if R15 then PC := 302
289 [-]: JMP       302          ; PC := 302
290 [-]: GETTABLE  R15 R14 K53  ; R15 := R14["TotalHeight"]
291 [-]: ADD       R9 R9 R15    ; R9 := R9 + R15
292 [-]: GETTABLE  R15 R14 K12  ; R15 := R14["mMissionNumber"]
293 [-]: EQ        0 R15 K13    ; if R15 ~= 1.000000 then PC := 302
294 [-]: JMP       302          ; PC := 302
295 [-]: GETGLOBAL R15 K0       ; R15 := 0xae91e43b
296 [-]: SELF      R15 R15 K14  ; R16 := R15; R15 := R15[0xf64b7262]
297 [-]: GETTABLE  R17 R14 K2   ; R17 := R14["mClipName"]
298 [-]: LOADK     R18 K11      ; R18 := "Outline"
299 [-]: CONST     R19 13       ; R19 := 13.000000
300 [-]: MOVE      R20 R9       ; R20 := R9
301 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
302 [-]: FORLOOP   R10 281      ; R10 += R12; if R10 <= R11 then begin PC := 281; R13 := R10 end
303 [-]: RETURN    R0 1         ; return 
304 [-]: JMP       320          ; PC := 320
305 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["IsRelayEvent"]
306 [-]: TEST      R15 0        ; if not R15 then PC := 313
307 [-]: JMP       313          ; PC := 313
308 [-]: GETUPVAL  R15 U7       ; R15 := U7
309 [-]: MOVE      R16 R0       ; R16 := R0
310 [-]: CALL      R15 2 1      ; R15(R16)
311 [-]: RETURN    R0 1         ; return 
312 [-]: JMP       320          ; PC := 320
313 [-]: GETTABLE  R15 R0 K57   ; R15 := R0["IsMultiProgressEvent"]
314 [-]: TEST      R15 0        ; if not R15 then PC := 320
315 [-]: JMP       320          ; PC := 320
316 [-]: GETUPVAL  R15 U8       ; R15 := U8
317 [-]: MOVE      R16 R0       ; R16 := R0
318 [-]: CALL      R15 2 1      ; R15(R16)
319 [-]: RETURN    R0 1         ; return 
320 [-]: GETTABLE  R15 R0 K2    ; R15 := R0["mClipName"]
321 [-]: LOADK     R16 K58      ; R16 := ".Event"
322 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
323 [-]: LOADK     R16 K59      ; R16 := ""
324 [-]: GETTABLE  R17 R3 K60   ; R17 := R3["mDesc"]
325 [-]: GETGLOBAL R18 K47      ; R18 := 0x64fb1586
326 [-]: GETTABLE  R19 R3 K61   ; R19 := R3["mNode"]
327 [-]: CALL      R18 2 2      ; R18 := R18(R19)
328 [-]: GETTABLE  R19 R3 K62   ; R19 := R3["mTypes"]
329 [-]: LEN       R19 R19      ; R19 := # R19
330 [-]: LT        1 K63 R19    ; if 0.000000 < R19 then PC := 340
331 [-]: JMP       340          ; PC := 340
332 [-]: GETGLOBAL R19 K50      ; R19 := 0x7b998233
333 [-]: GETTABLE  R20 R3 K64   ; R20 := R3["mItemType"]
334 [-]: CALL      R19 2 2      ; R19 := R19(R20)
335 [-]: TEST      R19 0        ; if not R19 then PC := 340
336 [-]: JMP       340          ; PC := 340
337 [-]: GETTABLE  R19 R3 K65   ; R19 := R3["mBounty"]
338 [-]: TEST      R19 0        ; if not R19 then PC := 358
339 [-]: JMP       358          ; PC := 358
340 [-]: GETTABLE  R19 R3 K65   ; R19 := R3["mBounty"]
341 [-]: TEST      R19 1        ; if R19 then PC := 346
342 [-]: JMP       346          ; PC := 346
343 [-]: GETTABLE  R19 R3 K66   ; R19 := R3["mMaxConclave"]
344 [-]: LT        0 K63 R19    ; if 0.000000 >= R19 then PC := 373
345 [-]: JMP       373          ; PC := 373
346 [-]: GETUPVAL  R19 U9       ; R19 := U9
347 [-]: GETTABLE  R19 R19 K67  ; R19 := R19[0x06d055f9]
348 [-]: GETGLOBAL R20 K68      ; R20 := 0x7f5022cf
349 [-]: GETTABLE  R20 R20 K69  ; R20 := R20[0xa5c556b9]
350 [-]: MOVE      R21 R18      ; R21 := R18
351 [-]: LOADK     R22 K70      ; R22 := "Pvp"
352 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
353 [-]: LOADK     R21 K71      ; R21 := "/Lotus/Language/Menu/Notification_Conclave"
354 [-]: LOADK     R22 K72      ; R22 := "/Lotus/Language/Menu/Notification_Bounty"
355 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
356 [-]: MOVE      R16 R19      ; R16 := R19
357 [-]: JMP       373          ; PC := 373
358 [-]: GETTABLE  R19 R3 K42   ; R19 := R3["mFomorian"]
359 [-]: TEST      R19 0        ; if not R19 then PC := 373
360 [-]: JMP       373          ; PC := 373
361 [-]: GETUPVAL  R19 U9       ; R19 := U9
362 [-]: GETTABLE  R19 R19 K67  ; R19 := R19[0x06d055f9]
363 [-]: GETTABLE  R20 R3 K73   ; R20 := R3["mFaction"]
364 [-]: EQ        1 R20 K63    ; if R20 == 0.000000 then PC := 367
365 [-]: JMP       367          ; PC := 367
366 [-]: LOADKB    R20 0 1      ; R20 := false; PC := 367
367 [-]: LOADKB    R20 1 0      ; R20 := true
368 [-]: LOADK     R21 K75      ; R21 := "/Lotus/Language/Menu/Notification_Fomorian"
369 [-]: LOADK     R22 K76      ; R22 := "/Lotus/Language/Menu/CorpusRazorbackProject"
370 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
371 [-]: MOVE      R16 R19      ; R16 := R19
372 [-]: GETTABLE  R17 R0 K45   ; R17 := R0["VictimNodeName"]
373 [-]: EQ        1 R16 K59    ; if R16 == "" then PC := 381
374 [-]: JMP       381          ; PC := 381
375 [-]: GETGLOBAL R19 K46      ; R19 := 0x603636ad
376 [-]: MOVE      R20 R16      ; R20 := R16
377 [-]: LOADKB    R21 0 0      ; R21 := false
378 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
379 [-]: LOADK     R20 K77      ; R20 := ": "
380 [-]: CONCAT    R16 R19 R20  ; R16 := R19 .. R20
381 [-]: GETTABLE  R19 R0 K78   ; R19 := R0["Locked"]
382 [-]: EQ        1 R19 K79    ; if R19 == nil then PC := 392
383 [-]: JMP       392          ; PC := 392
384 [-]: GETGLOBAL R19 K0       ; R19 := 0xae91e43b
385 [-]: SELF      R19 R19 K80  ; R20 := R19; R19 := R19[0x42b04007]
386 [-]: LOADK     R21 K81      ; R21 := "<LOCKED>"
387 [-]: LOADKB    R22 1 0      ; R22 := true
388 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
389 [-]: LOADK     R20 K82      ; R20 := " "
390 [-]: MOVE      R21 R16      ; R21 := R16
391 [-]: CONCAT    R16 R19 R21  ; R16 := R19 .. R20 .. R21
392 [-]: GETGLOBAL R19 K0       ; R19 := 0xae91e43b
393 [-]: SELF      R19 R19 K1   ; R20 := R19; R19 := R19[0xc0a3774b]
394 [-]: MOVE      R21 R15      ; R21 := R15
395 [-]: LOADK     R22 K83      ; R22 := "Title"
396 [-]: CONST     R23 44       ; R23 := 44.000000
397 [-]: LOADKB    R24 1 0      ; R24 := true
398 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
399 [-]: GETGLOBAL R19 K0       ; R19 := 0xae91e43b
400 [-]: SELF      R19 R19 K84  ; R20 := R19; R19 := R19[0xe261aa96]
401 [-]: MOVE      R21 R15      ; R21 := R15
402 [-]: LOADK     R22 K83      ; R22 := "Title"
403 [-]: CONST     R23 29       ; R23 := 29.000000
404 [-]: GETGLOBAL R24 K46      ; R24 := 0x603636ad
405 [-]: MOVE      R25 R16      ; R25 := R16
406 [-]: LOADNIL   R26 R26      ; R26 := nil
407 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
408 [-]: GETGLOBAL R25 K46      ; R25 := 0x603636ad
409 [-]: MOVE      R26 R17      ; R26 := R17
410 [-]: LOADNIL   R27 R27      ; R27 := nil
411 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
412 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
413 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
414 [-]: GETTABLE  R19 R3 K85   ; R19 := R3["mInvasionNode"]
415 [-]: GETGLOBAL R20 K86      ; R20 := EMPTY_SYMBOL
416 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 422
417 [-]: JMP       422          ; PC := 422
418 [-]: GETGLOBAL R19 K47      ; R19 := 0x64fb1586
419 [-]: GETTABLE  R20 R3 K85   ; R20 := R3["mInvasionNode"]
420 [-]: CALL      R19 2 2      ; R19 := R19(R20)
421 [-]: MOVE      R18 R19      ; R18 := R19
422 [-]: LOADK     R19 K59      ; R19 := ""
423 [-]: GETGLOBAL R20 K50      ; R20 := 0x7b998233
424 [-]: MOVE      R21 R2       ; R21 := R2
425 [-]: CALL      R20 2 2      ; R20 := R20(R21)
426 [-]: TEST      R20 1        ; if R20 then PC := 453
427 [-]: JMP       453          ; PC := 453
428 [-]: SELF      R20 R2 K87   ; R21 := R2; R20 := R2[0x5484bf3c]
429 [-]: GETGLOBAL R22 K88      ; R22 := 0x0469f296
430 [-]: MOVE      R23 R18      ; R23 := R18
431 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
432 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
433 [-]: GETTABLE  R21 R20 K89  ; R21 := R20["name"]
434 [-]: EQ        1 R21 K59    ; if R21 == "" then PC := 453
435 [-]: JMP       453          ; PC := 453
436 [-]: GETUPVAL  R21 U9       ; R21 := U9
437 [-]: GETTABLE  R21 R21 K67  ; R21 := R21[0x06d055f9]
438 [-]: GETGLOBAL R22 K68      ; R22 := 0x7f5022cf
439 [-]: GETTABLE  R22 R22 K69  ; R22 := R22[0xa5c556b9]
440 [-]: MOVE      R23 R18      ; R23 := R18
441 [-]: LOADK     R24 K70      ; R24 := "Pvp"
442 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
443 [-]: GETTABLE  R23 R3 K90   ; R23 := R3["mToolTip"]
444 [-]: GETGLOBAL R24 K47      ; R24 := 0x64fb1586
445 [-]: GETTABLE  R25 R20 K89  ; R25 := R20["name"]
446 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
447 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
448 [-]: GETGLOBAL R22 K46      ; R22 := 0x603636ad
449 [-]: MOVE      R23 R21      ; R23 := R21
450 [-]: LOADNIL   R24 R24      ; R24 := nil
451 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
452 [-]: MOVE      R19 R22      ; R19 := R22
453 [-]: GETTABLE  R22 R3 K66   ; R22 := R3["mMaxConclave"]
454 [-]: EQ        1 R22 K79    ; if R22 == nil then PC := 482
455 [-]: JMP       482          ; PC := 482
456 [-]: GETTABLE  R22 R3 K66   ; R22 := R3["mMaxConclave"]
457 [-]: EQ        1 R22 K63    ; if R22 == 0.000000 then PC := 482
458 [-]: JMP       482          ; PC := 482
459 [-]: GETTABLE  R22 R3 K66   ; R22 := R3["mMaxConclave"]
460 [-]: GETTABLE  R23 R0 K91   ; R23 := R0["Count"]
461 [-]: GETTABLE  R24 R3 K92   ; R24 := R3["mGoal"]
462 [-]: LE        0 R24 R23    ; if R24 > R23 then PC := 471
463 [-]: JMP       471          ; PC := 471
464 [-]: GETTABLE  R23 R3 K93   ; R23 := R3["mBonusMaxConclave"]
465 [-]: EQ        1 R23 K79    ; if R23 == nil then PC := 471
466 [-]: JMP       471          ; PC := 471
467 [-]: GETTABLE  R23 R3 K93   ; R23 := R3["mBonusMaxConclave"]
468 [-]: EQ        1 R23 K63    ; if R23 == 0.000000 then PC := 471
469 [-]: JMP       471          ; PC := 471
470 [-]: GETTABLE  R22 R3 K93   ; R22 := R3["mBonusMaxConclave"]
471 [-]: MOVE      R23 R19      ; R23 := R19
472 [-]: LOADK     R24 K82      ; R24 := " "
473 [-]: GETGLOBAL R25 K0       ; R25 := 0xae91e43b
474 [-]: SELF      R25 R25 K80  ; R26 := R25; R25 := R25[0x42b04007]
475 [-]: LOADK     R27 K94      ; R27 := "<CONCLAVE>"
476 [-]: LOADKB    R28 1 0      ; R28 := true
477 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
478 [-]: GETGLOBAL R26 K47      ; R26 := 0x64fb1586
479 [-]: MOVE      R27 R22      ; R27 := R22
480 [-]: CALL      R26 2 2      ; R26 := R26(R27)
481 [-]: CONCAT    R19 R23 R26  ; R19 := R23 .. R24 .. R25 .. R26
482 [-]: GETTABLE  R23 R3 K85   ; R23 := R3["mInvasionNode"]
483 [-]: TEST      R23 0        ; if not R23 then PC := 542
484 [-]: JMP       542          ; PC := 542
485 [-]: GETGLOBAL R23 K95      ; R23 := _T
486 [-]: GETTABLE  R23 R23 K96  ; R23 := R23["CachedInvasionInfo"]
487 [-]: GETGLOBAL R24 K47      ; R24 := 0x64fb1586
488 [-]: GETTABLE  R25 R3 K85   ; R25 := R3["mInvasionNode"]
489 [-]: CALL      R24 2 2      ; R24 := R24(R25)
490 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
491 [-]: TEST      R23 0        ; if not R23 then PC := 542
492 [-]: JMP       542          ; PC := 542
493 [-]: SELF      R23 R2 K43   ; R24 := R2; R23 := R2[0x3ad9ed31]
494 [-]: GETTABLE  R25 R3 K85   ; R25 := R3["mInvasionNode"]
495 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
496 [-]: GETGLOBAL R24 K95      ; R24 := _T
497 [-]: GETTABLE  R24 R24 K96  ; R24 := R24["CachedInvasionInfo"]
498 [-]: GETGLOBAL R25 K47      ; R25 := 0x64fb1586
499 [-]: GETTABLE  R26 R3 K85   ; R26 := R3["mInvasionNode"]
500 [-]: CALL      R25 2 2      ; R25 := R25(R26)
501 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
502 [-]: GETTABLE  R25 R24 K97  ; R25 := R24["mCount"]
503 [-]: GETTABLE  R26 R24 K92  ; R26 := R24["mGoal"]
504 [-]: DIV       R25 R25 R26  ; R25 := R25 / R26
505 [-]: MUL       R25 R25 K98  ; R25 := R25 * 50.000000
506 [-]: ADD       R25 K98 R25  ; R25 := 50.000000 + R25
507 [-]: GETTABLE  R26 R24 K97  ; R26 := R24["mCount"]
508 [-]: GETTABLE  R27 R24 K92  ; R27 := R24["mGoal"]
509 [-]: DIV       R26 R26 R27  ; R26 := R26 / R27
510 [-]: MUL       R26 R26 K98  ; R26 := R26 * 50.000000
511 [-]: SUB       R26 K98 R26  ; R26 := 50.000000 - R26
512 [-]: GETUPVAL  R27 U1       ; R27 := U1
513 [-]: GETTABLE  R27 R27 K99  ; R27 := R27[0x001f2b0e]
514 [-]: MOVE      R28 R25      ; R28 := R25
515 [-]: CALL      R27 2 2      ; R27 := R27(R28)
516 [-]: GETUPVAL  R28 U1       ; R28 := U1
517 [-]: GETTABLE  R28 R28 K99  ; R28 := R28[0x001f2b0e]
518 [-]: MOVE      R29 R26      ; R29 := R26
519 [-]: CALL      R28 2 2      ; R28 := R28(R29)
520 [-]: GETGLOBAL R29 K68      ; R29 := 0x7f5022cf
521 [-]: GETTABLE  R29 R29 K100 ; R29 := R29[0x3f3e4d12]
522 [-]: GETGLOBAL R30 K46      ; R30 := 0x603636ad
523 [-]: SELF      R31 R2 K101  ; R32 := R2; R31 := R2[0xc1dee03f]
524 [-]: CALL      R31 2 2      ; R31 := R31(R32)
525 [-]: GETTABLE  R32 R23 K102 ; R32 := R23["region"]
526 [-]: ADD       R32 R32 K13  ; R32 := R32 + 1.000000
527 [-]: GETTABLE  R31 R31 R32  ; R31 := R31[R32]
528 [-]: GETTABLE  R31 R31 K89  ; R31 := R31["name"]
529 [-]: LOADNIL   R32 R32      ; R32 := nil
530 [-]: CALL      R30 3 0      ; R30,... := R30(R31,R32)
531 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
532 [-]: LOADK     R30 K103     ; R30 := " | "
533 [-]: GETGLOBAL R31 K46      ; R31 := 0x603636ad
534 [-]: LOADK     R32 K104     ; R32 := "/Lotus/Language/Menu/DilemmaActiveProgress"
535 [-]: NEWTABLE  R33 0 4      ; R33 := {}
536 [-]: SETTABLE  R33 K105 K106; R33["OPTION_ONE"] := "Nef Anyo"
537 [-]: SETTABLE  R33 K107 K108; R33["OPTION_TWO"] := "Alad V"
538 [-]: SETTABLE  R33 K109 R27 ; R33["VALUE_ONE"] := R27
539 [-]: SETTABLE  R33 K110 R28 ; R33["VALUE_TWO"] := R28
540 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
541 [-]: CONCAT    R19 R29 R31  ; R19 := R29 .. R30 .. R31
542 [-]: LOADNIL   R29 R29      ; R29 := nil
543 [-]: GETGLOBAL R30 K47      ; R30 := 0x64fb1586
544 [-]: GETUPVAL  R31 U1       ; R31 := U1
545 [-]: GETTABLE  R31 R31 K111 ; R31 := R31["OROKIN_TOWER_NODE_TAG"]
546 [-]: CALL      R30 2 2      ; R30 := R30(R31)
547 [-]: EQ        0 R18 R30    ; if R18 ~= R30 then PC := 554
548 [-]: JMP       554          ; PC := 554
549 [-]: GETGLOBAL R30 K112     ; R30 := 0x7ed0a956
550 [-]: LOADK     R31 K113     ; R31 := "/Lotus/Types/Keys/InfestedMicroplanetQuest/InfestedMicroplanetQuestKeyChain"
551 [-]: CALL      R30 2 2      ; R30 := R30(R31)
552 [-]: MOVE      R29 R30      ; R29 := R30
553 [-]: JMP       561          ; PC := 561
554 [-]: SELF      R30 R2 K43   ; R31 := R2; R30 := R2[0x3ad9ed31]
555 [-]: GETGLOBAL R32 K88      ; R32 := 0x0469f296
556 [-]: MOVE      R33 R18      ; R33 := R18
557 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
558 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
559 [-]: GETTABLE  R30 R30 K114 ; R30 := R30["mission"]
560 [-]: GETTABLE  R29 R30 K115 ; R29 := R30["questReq"]
561 [-]: GETGLOBAL R30 K50      ; R30 := 0x7b998233
562 [-]: MOVE      R31 R29      ; R31 := R29
563 [-]: CALL      R30 2 2      ; R30 := R30(R31)
564 [-]: TEST      R30 1        ; if R30 then PC := 598
565 [-]: JMP       598          ; PC := 598
566 [-]: GETUPVAL  R30 U1       ; R30 := U1
567 [-]: GETTABLE  R30 R30 K116 ; R30 := R30[0x52fb05b3]
568 [-]: MOVE      R31 R29      ; R31 := R29
569 [-]: CALL      R30 2 2      ; R30 := R30(R31)
570 [-]: TEST      R30 1        ; if R30 then PC := 598
571 [-]: JMP       598          ; PC := 598
572 [-]: GETUPVAL  R30 U1       ; R30 := U1
573 [-]: GETTABLE  R30 R30 K117 ; R30 := R30[0xffa3e7d4]
574 [-]: MOVE      R31 R29      ; R31 := R29
575 [-]: CALL      R30 2 2      ; R30 := R30(R31)
576 [-]: MOVE      R31 R19      ; R31 := R19
577 [-]: LOADK     R32 K118     ; R32 := "\r\n\r\n"
578 [-]: GETGLOBAL R33 K0       ; R33 := 0xae91e43b
579 [-]: SELF      R33 R33 K80  ; R34 := R33; R33 := R33[0x42b04007]
580 [-]: LOADK     R35 K81      ; R35 := "<LOCKED>"
581 [-]: LOADKB    R36 1 0      ; R36 := true
582 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
583 [-]: LOADK     R34 K82      ; R34 := " "
584 [-]: GETGLOBAL R35 K0       ; R35 := 0xae91e43b
585 [-]: SELF      R35 R35 K80  ; R36 := R35; R35 := R35[0x42b04007]
586 [-]: LOADK     R37 K119     ; R37 := "/Lotus/Language/Menu/MissionLocked"
587 [-]: LOADKB    R38 0 0      ; R38 := false
588 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
589 [-]: LOADK     R36 K77      ; R36 := ": "
590 [-]: GETGLOBAL R37 K0       ; R37 := 0xae91e43b
591 [-]: SELF      R37 R37 K80  ; R38 := R37; R37 := R37[0x42b04007]
592 [-]: LOADK     R39 K120     ; R39 := "/Lotus/Language/Game/MissionNodeQuestRequired"
593 [-]: LOADKB    R40 0 0      ; R40 := false
594 [-]: NEWTABLE  R41 0 1      ; R41 := {}
595 [-]: SETTABLE  R41 K121 R30 ; R41["QUESTNAME"] := R30
596 [-]: CALL      R37 5 2      ; R37 := R37(R38,R39,R40,R41)
597 [-]: CONCAT    R19 R31 R37  ; R19 := R31 .. R32 .. R33 .. R34 .. R35 .. R36 .. R37
598 [-]: EQ        0 R19 K59    ; if R19 ~= "" then PC := 608
599 [-]: JMP       608          ; PC := 608
600 [-]: GETTABLE  R31 R3 K90   ; R31 := R3["mToolTip"]
601 [-]: EQ        1 R31 K59    ; if R31 == "" then PC := 608
602 [-]: JMP       608          ; PC := 608
603 [-]: GETGLOBAL R31 K46      ; R31 := 0x603636ad
604 [-]: GETTABLE  R32 R3 K90   ; R32 := R3["mToolTip"]
605 [-]: LOADNIL   R33 R33      ; R33 := nil
606 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
607 [-]: MOVE      R19 R31      ; R19 := R31
608 [-]: LOADNIL   R31 R31      ; R31 := nil
609 [-]: CONST     R32 0        ; R32 := 0.000000
610 [-]: CONST     R33 0        ; R33 := 0.000000
611 [-]: GETTABLE  R34 R3 K122  ; R34 := R3["mBest"]
612 [-]: TEST      R34 0        ; if not R34 then PC := 683
613 [-]: JMP       683          ; PC := 683
614 [-]: GETGLOBAL R34 K95      ; R34 := _T
615 [-]: GETTABLE  R34 R34 K123 ; R34 := R34["CachedGoalKeys"]
616 [-]: TEST      R34 0        ; if not R34 then PC := 634
617 [-]: JMP       634          ; PC := 634
618 [-]: GETGLOBAL R34 K50      ; R34 := 0x7b998233
619 [-]: GETGLOBAL R35 K95      ; R35 := _T
620 [-]: GETTABLE  R35 R35 K123 ; R35 := R35["CachedGoalKeys"]
621 [-]: GETTABLE  R35 R35 R18  ; R35 := R35[R18]
622 [-]: CALL      R34 2 2      ; R34 := R34(R35)
623 [-]: TEST      R34 1        ; if R34 then PC := 634
624 [-]: JMP       634          ; PC := 634
625 [-]: GETGLOBAL R34 K50      ; R34 := 0x7b998233
626 [-]: GETGLOBAL R35 K95      ; R35 := _T
627 [-]: GETTABLE  R35 R35 K123 ; R35 := R35["CachedGoalKeys"]
628 [-]: GETTABLE  R35 R35 R18  ; R35 := R35[R18]
629 [-]: SELF      R35 R35 K124 ; R36 := R35; R35 := R35[0x056dcf06]
630 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
631 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
632 [-]: TEST      R34 0        ; if not R34 then PC := 642
633 [-]: JMP       642          ; PC := 642
634 [-]: GETTABLE  R34 R0 K78   ; R34 := R0["Locked"]
635 [-]: EQ        1 R34 K79    ; if R34 == nil then PC := 683
636 [-]: JMP       683          ; PC := 683
637 [-]: GETGLOBAL R34 K95      ; R34 := _T
638 [-]: GETTABLE  R34 R34 K125 ; R34 := R34["LockedGoalList"]
639 [-]: GETTABLE  R34 R34 R18  ; R34 := R34[R18]
640 [-]: TEST      R34 0        ; if not R34 then PC := 683
641 [-]: JMP       683          ; PC := 683
642 [-]: GETGLOBAL R34 K95      ; R34 := _T
643 [-]: GETTABLE  R34 R34 K123 ; R34 := R34["CachedGoalKeys"]
644 [-]: TEST      R34 0        ; if not R34 then PC := 658
645 [-]: JMP       658          ; PC := 658
646 [-]: GETGLOBAL R34 K95      ; R34 := _T
647 [-]: GETTABLE  R34 R34 K123 ; R34 := R34["CachedGoalKeys"]
648 [-]: GETTABLE  R34 R34 R18  ; R34 := R34[R18]
649 [-]: TEST      R34 0        ; if not R34 then PC := 658
650 [-]: JMP       658          ; PC := 658
651 [-]: GETGLOBAL R34 K95      ; R34 := _T
652 [-]: GETTABLE  R34 R34 K123 ; R34 := R34["CachedGoalKeys"]
653 [-]: GETTABLE  R34 R34 R18  ; R34 := R34[R18]
654 [-]: SELF      R34 R34 K124 ; R35 := R34; R34 := R34[0x056dcf06]
655 [-]: CALL      R34 2 2      ; R34 := R34(R35)
656 [-]: MOVE      R31 R34      ; R31 := R34
657 [-]: JMP       680          ; PC := 680
658 [-]: GETGLOBAL R34 K95      ; R34 := _T
659 [-]: GETTABLE  R34 R34 K125 ; R34 := R34["LockedGoalList"]
660 [-]: GETTABLE  R34 R34 R18  ; R34 := R34[R18]
661 [-]: TEST      R34 0        ; if not R34 then PC := 680
662 [-]: JMP       680          ; PC := 680
663 [-]: GETGLOBAL R34 K50      ; R34 := 0x7b998233
664 [-]: GETGLOBAL R35 K95      ; R35 := _T
665 [-]: GETTABLE  R35 R35 K125 ; R35 := R35["LockedGoalList"]
666 [-]: GETTABLE  R35 R35 R18  ; R35 := R35[R18]
667 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["mMissionKeyName"]
668 [-]: CALL      R34 2 2      ; R34 := R34(R35)
669 [-]: TEST      R34 1        ; if R34 then PC := 680
670 [-]: JMP       680          ; PC := 680
671 [-]: GETGLOBAL R34 K127     ; R34 := 0xb009bbc6
672 [-]: GETGLOBAL R35 K95      ; R35 := _T
673 [-]: GETTABLE  R35 R35 K125 ; R35 := R35["LockedGoalList"]
674 [-]: GETTABLE  R35 R35 R18  ; R35 := R35[R18]
675 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["mMissionKeyName"]
676 [-]: CALL      R34 2 2      ; R34 := R34(R35)
677 [-]: SELF      R34 R34 K124 ; R35 := R34; R34 := R34[0x056dcf06]
678 [-]: CALL      R34 2 2      ; R34 := R34(R35)
679 [-]: MOVE      R31 R34      ; R31 := R34
680 [-]: CONST     R32 222      ; R32 := 222.000000
681 [-]: CONST     R33 200      ; R33 := 200.000000
682 [-]: JMP       706          ; PC := 706
683 [-]: GETGLOBAL R34 K128     ; R34 := 0x0032441c
684 [-]: GETTABLE  R34 R34 K129 ; R34 := R34["CachedGoalInfo"]
685 [-]: TEST      R34 0        ; if not R34 then PC := 706
686 [-]: JMP       706          ; PC := 706
687 [-]: GETGLOBAL R34 K128     ; R34 := 0x0032441c
688 [-]: GETTABLE  R34 R34 K129 ; R34 := R34["CachedGoalInfo"]
689 [-]: GETTABLE  R34 R34 R18  ; R34 := R34[R18]
690 [-]: TEST      R34 0        ; if not R34 then PC := 706
691 [-]: JMP       706          ; PC := 706
692 [-]: GETGLOBAL R34 K50      ; R34 := 0x7b998233
693 [-]: GETGLOBAL R35 K128     ; R35 := 0x0032441c
694 [-]: GETTABLE  R35 R35 K129 ; R35 := R35["CachedGoalInfo"]
695 [-]: GETTABLE  R35 R35 R18  ; R35 := R35[R18]
696 [-]: GETTABLE  R35 R35 K130 ; R35 := R35["mIcon"]
697 [-]: CALL      R34 2 2      ; R34 := R34(R35)
698 [-]: TEST      R34 1        ; if R34 then PC := 706
699 [-]: JMP       706          ; PC := 706
700 [-]: GETGLOBAL R34 K128     ; R34 := 0x0032441c
701 [-]: GETTABLE  R34 R34 K129 ; R34 := R34["CachedGoalInfo"]
702 [-]: GETTABLE  R34 R34 R18  ; R34 := R34[R18]
703 [-]: GETTABLE  R31 R34 K130 ; R31 := R34["mIcon"]
704 [-]: CONST     R32 96       ; R32 := 96.000000
705 [-]: CONST     R33 96       ; R33 := 96.000000
706 [-]: CONST     R34 510      ; R34 := 510.000000
707 [-]: EQ        1 R32 K63    ; if R32 == 0.000000 then PC := 711
708 [-]: JMP       711          ; PC := 711
709 [-]: ADD       R35 R32 K131 ; R35 := R32 + 20.000000
710 [-]: SUB       R34 R34 R35  ; R34 := R34 - R35
711 [-]: GETGLOBAL R35 K0       ; R35 := 0xae91e43b
712 [-]: SELF      R35 R35 K14  ; R36 := R35; R35 := R35[0xf64b7262]
713 [-]: MOVE      R37 R15      ; R37 := R15
714 [-]: LOADK     R38 K132     ; R38 := "Desc"
715 [-]: CONST     R39 12       ; R39 := 12.000000
716 [-]: MOVE      R40 R34      ; R40 := R34
717 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
718 [-]: GETGLOBAL R35 K0       ; R35 := 0xae91e43b
719 [-]: SELF      R35 R35 K1   ; R36 := R35; R35 := R35[0xc0a3774b]
720 [-]: MOVE      R37 R15      ; R37 := R15
721 [-]: LOADK     R38 K132     ; R38 := "Desc"
722 [-]: CONST     R39 44       ; R39 := 44.000000
723 [-]: LOADKB    R40 1 0      ; R40 := true
724 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
725 [-]: GETGLOBAL R35 K0       ; R35 := 0xae91e43b
726 [-]: SELF      R35 R35 K84  ; R36 := R35; R35 := R35[0xe261aa96]
727 [-]: MOVE      R37 R15      ; R37 := R15
728 [-]: LOADK     R38 K132     ; R38 := "Desc"
729 [-]: CONST     R39 29       ; R39 := 29.000000
730 [-]: MOVE      R40 R19      ; R40 := R19
731 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
732 [-]: GETGLOBAL R35 K0       ; R35 := 0xae91e43b
733 [-]: SELF      R35 R35 K133 ; R36 := R35; R35 := R35[0x91a24e4b]
734 [-]: MOVE      R37 R15      ; R37 := R15
735 [-]: LOADK     R38 K134     ; R38 := ".Desc"
736 [-]: CONCAT    R37 R37 R38  ; R37 := R37 .. R38
737 [-]: CONST     R38 1        ; R38 := 1.000000
738 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
739 [-]: GETGLOBAL R36 K0       ; R36 := 0xae91e43b
740 [-]: SELF      R36 R36 K133 ; R37 := R36; R36 := R36[0x91a24e4b]
741 [-]: MOVE      R38 R15      ; R38 := R15
742 [-]: LOADK     R39 K134     ; R39 := ".Desc"
743 [-]: CONCAT    R38 R38 R39  ; R38 := R38 .. R39
744 [-]: CONST     R39 34       ; R39 := 34.000000
745 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
746 [-]: ADD       R37 R35 R36  ; R37 := R35 + R36
747 [-]: ADD       R37 R37 K135 ; R37 := R37 + 10.000000
748 [-]: GETGLOBAL R38 K0       ; R38 := 0xae91e43b
749 [-]: SELF      R38 R38 K14  ; R39 := R38; R38 := R38[0xf64b7262]
750 [-]: MOVE      R40 R15      ; R40 := R15
751 [-]: LOADK     R41 K136     ; R41 := "RewardPrefix"
752 [-]: CONST     R42 1        ; R42 := 1.000000
753 [-]: MOVE      R43 R37      ; R43 := R37
754 [-]: CALL      R38 6 1      ; R38(R39,R40,R41,R42,R43)
755 [-]: GETTABLE  R38 R0 K137  ; R38 := R0["mRewardList"]
756 [-]: EQ        0 R38 K79    ; if R38 ~= nil then PC := 763
757 [-]: JMP       763          ; PC := 763
758 [-]: GETUPVAL  R38 U10      ; R38 := U10
759 [-]: MOVE      R39 R0       ; R39 := R0
760 [-]: GETUPVAL  R40 U11      ; R40 := U11
761 [-]: MOVE      R41 R37      ; R41 := R37
762 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
763 [-]: GETTABLE  R38 R0 K137  ; R38 := R0["mRewardList"]
764 [-]: SELF      R38 R38 K138 ; R39 := R38; R38 := R38[0x7c09c373]
765 [-]: LOADKB    R40 1 0      ; R40 := true
766 [-]: LOADKB    R41 1 0      ; R41 := true
767 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
768 [-]: GETTABLE  R38 R3 K92   ; R38 := R3["mGoal"]
769 [-]: EQ        0 R38 K63    ; if R38 ~= 0.000000 then PC := 772
770 [-]: JMP       772          ; PC := 772
771 [-]: LOADKB    R38 0 1      ; R38 := false; PC := 772
772 [-]: LOADKB    R38 1 0      ; R38 := true
773 [-]: GETGLOBAL R39 K0       ; R39 := 0xae91e43b
774 [-]: SELF      R39 R39 K1   ; R40 := R39; R39 := R39[0xc0a3774b]
775 [-]: MOVE      R41 R15      ; R41 := R15
776 [-]: LOADK     R42 K136     ; R42 := "RewardPrefix"
777 [-]: CONST     R43 11       ; R43 := 11.000000
778 [-]: MOVE      R44 R38      ; R44 := R38
779 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
780 [-]: GETGLOBAL R39 K0       ; R39 := 0xae91e43b
781 [-]: SELF      R39 R39 K1   ; R40 := R39; R39 := R39[0xc0a3774b]
782 [-]: MOVE      R41 R15      ; R41 := R15
783 [-]: LOADK     R42 K139     ; R42 := "Progress"
784 [-]: CONST     R43 11       ; R43 := 11.000000
785 [-]: TESTSET   R44 R38 0    ; if not R38 then PC := 789 else R44 := R38
786 [-]: JMP       789          ; PC := 789
787 [-]: GETTABLE  R44 R3 K122  ; R44 := R3["mBest"]
788 [-]: NOT       R44 R44      ; R44 :=  R44
789 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
790 [-]: GETTABLE  R39 R3 K92   ; R39 := R3["mGoal"]
791 [-]: EQ        1 R39 K63    ; if R39 == 0.000000 then PC := 1125
792 [-]: JMP       1125         ; PC := 1125
793 [-]: GETGLOBAL R39 K46      ; R39 := 0x603636ad
794 [-]: LOADK     R40 K140     ; R40 := "/Lotus/Language/Menu/AlertPopup_Rewards"
795 [-]: LOADKB    R41 0 0      ; R41 := false
796 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
797 [-]: LOADK     R40 K141     ; R40 := ":"
798 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
799 [-]: GETTABLE  R40 R3 K142  ; R40 := R3["mInterimGoals"]
800 [-]: LEN       R41 R40      ; R41 := # R40
801 [-]: GETTABLE  R42 R3 K42   ; R42 := R3["mFomorian"]
802 [-]: TEST      R42 0        ; if not R42 then PC := 809
803 [-]: JMP       809          ; PC := 809
804 [-]: GETUPVAL  R42 U12      ; R42 := U12
805 [-]: MOVE      R43 R3       ; R43 := R3
806 [-]: CALL      R42 2 2      ; R42 := R42(R43)
807 [-]: MOVE      R39 R42      ; R39 := R42
808 [-]: JMP       820          ; PC := 820
809 [-]: GETTABLE  R42 R3 K143  ; R42 := R3["mBonusGoal"]
810 [-]: EQ        0 R42 K63    ; if R42 ~= 0.000000 then PC := 820
811 [-]: JMP       820          ; PC := 820
812 [-]: EQ        0 R41 K63    ; if R41 ~= 0.000000 then PC := 820
813 [-]: JMP       820          ; PC := 820
814 [-]: GETGLOBAL R42 K46      ; R42 := 0x603636ad
815 [-]: LOADK     R43 K144     ; R43 := "/Lotus/Language/Menu/SingleReward"
816 [-]: LOADKB    R44 0 0      ; R44 := false
817 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
818 [-]: LOADK     R43 K141     ; R43 := ":"
819 [-]: CONCAT    R39 R42 R43  ; R39 := R42 .. R43
820 [-]: GETGLOBAL R42 K0       ; R42 := 0xae91e43b
821 [-]: SELF      R42 R42 K84  ; R43 := R42; R42 := R42[0xe261aa96]
822 [-]: MOVE      R44 R15      ; R44 := R15
823 [-]: LOADK     R45 K136     ; R45 := "RewardPrefix"
824 [-]: CONST     R46 29       ; R46 := 29.000000
825 [-]: MOVE      R47 R39      ; R47 := R39
826 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
827 [-]: NEWTABLE  R42 0 0      ; R42 := {}
828 [-]: GETTABLE  R43 R3 K145  ; R43 := R3["mInterimRewards"]
829 [-]: CONST     R44 1        ; R44 := 1.000000
830 [-]: GETGLOBAL R45 K146     ; R45 := 0x5bced4c4
831 [-]: GETTABLE  R45 R45 K147 ; R45 := R45[0xac1b386a]
832 [-]: MOVE      R46 R41      ; R46 := R41
833 [-]: LEN       R47 R43      ; R47 := # R43
834 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
835 [-]: CONST     R46 1        ; R46 := 1.000000
836 [-]: FORPREP   R44 846      ; R44 -= R46; PC := 846
837 [-]: GETGLOBAL R48 K148     ; R48 := 0x33bdd652
838 [-]: GETTABLE  R48 R48 K149 ; R48 := R48[0x23d5322f]
839 [-]: MOVE      R49 R42      ; R49 := R42
840 [-]: NEWTABLE  R50 0 2      ; R50 := {}
841 [-]: GETTABLE  R51 R40 R47  ; R51 := R40[R47]
842 [-]: SETTABLE  R50 K150 R51 ; R50["Goal"] := R51
843 [-]: GETTABLE  R51 R43 R47  ; R51 := R43[R47]
844 [-]: SETTABLE  R50 K151 R51 ; R50["Reward"] := R51
845 [-]: CALL      R48 3 1      ; R48(R49,R50)
846 [-]: FORLOOP   R44 837      ; R44 += R46; if R44 <= R45 then begin PC := 837; R47 := R44 end
847 [-]: GETGLOBAL R48 K148     ; R48 := 0x33bdd652
848 [-]: GETTABLE  R48 R48 K149 ; R48 := R48[0x23d5322f]
849 [-]: MOVE      R49 R42      ; R49 := R42
850 [-]: NEWTABLE  R50 0 2      ; R50 := {}
851 [-]: GETTABLE  R51 R3 K92   ; R51 := R3["mGoal"]
852 [-]: SETTABLE  R50 K150 R51 ; R50["Goal"] := R51
853 [-]: GETTABLE  R51 R3 K152  ; R51 := R3["mReward"]
854 [-]: SETTABLE  R50 K151 R51 ; R50["Reward"] := R51
855 [-]: CALL      R48 3 1      ; R48(R49,R50)
856 [-]: GETTABLE  R48 R0 K91   ; R48 := R0["Count"]
857 [-]: GETTABLE  R49 R3 K92   ; R49 := R3["mGoal"]
858 [-]: LE        0 R49 R48    ; if R49 > R48 then PC := 869
859 [-]: JMP       869          ; PC := 869
860 [-]: GETGLOBAL R48 K148     ; R48 := 0x33bdd652
861 [-]: GETTABLE  R48 R48 K149 ; R48 := R48[0x23d5322f]
862 [-]: MOVE      R49 R42      ; R49 := R42
863 [-]: NEWTABLE  R50 0 2      ; R50 := {}
864 [-]: GETTABLE  R51 R3 K143  ; R51 := R3["mBonusGoal"]
865 [-]: SETTABLE  R50 K150 R51 ; R50["Goal"] := R51
866 [-]: GETTABLE  R51 R3 K153  ; R51 := R3["mBonusReward"]
867 [-]: SETTABLE  R50 K151 R51 ; R50["Reward"] := R51
868 [-]: CALL      R48 3 1      ; R48(R49,R50)
869 [-]: CONST     R48 1        ; R48 := 1.000000
870 [-]: LEN       R49 R42      ; R49 := # R42
871 [-]: CONST     R50 1        ; R50 := 1.000000
872 [-]: FORPREP   R48 922      ; R48 -= R50; PC := 922
873 [-]: GETTABLE  R52 R42 R51  ; R52 := R42[R51]
874 [-]: GETTABLE  R52 R52 K151 ; R52 := R52["Reward"]
875 [-]: GETTABLE  R52 R52 K154 ; R52 := R52["items"]
876 [-]: LEN       R52 R52      ; R52 := # R52
877 [-]: LT        1 K63 R52    ; if 0.000000 < R52 then PC := 897
878 [-]: JMP       897          ; PC := 897
879 [-]: GETTABLE  R52 R42 R51  ; R52 := R42[R51]
880 [-]: GETTABLE  R52 R52 K151 ; R52 := R52["Reward"]
881 [-]: GETTABLE  R52 R52 K155 ; R52 := R52["countedItems"]
882 [-]: LEN       R52 R52      ; R52 := # R52
883 [-]: LT        1 K63 R52    ; if 0.000000 < R52 then PC := 897
884 [-]: JMP       897          ; PC := 897
885 [-]: GETTABLE  R52 R42 R51  ; R52 := R42[R51]
886 [-]: GETTABLE  R52 R52 K151 ; R52 := R52["Reward"]
887 [-]: GETTABLE  R52 R52 K156 ; R52 := R52["countedStoreItems"]
888 [-]: LEN       R52 R52      ; R52 := # R52
889 [-]: LT        1 K63 R52    ; if 0.000000 < R52 then PC := 897
890 [-]: JMP       897          ; PC := 897
891 [-]: GETTABLE  R52 R42 R51  ; R52 := R42[R51]
892 [-]: GETTABLE  R52 R52 K151 ; R52 := R52["Reward"]
893 [-]: GETTABLE  R52 R52 K157 ; R52 := R52["credits"]
894 [-]: LT        1 K63 R52    ; if 0.000000 < R52 then PC := 897
895 [-]: JMP       897          ; PC := 897
896 [-]: LOADKB    R52 0 1      ; R52 := false; PC := 897
897 [-]: LOADKB    R52 1 0      ; R52 := true
898 [-]: GETTABLE  R53 R42 R51  ; R53 := R42[R51]
899 [-]: GETTABLE  R53 R53 K150 ; R53 := R53["Goal"]
900 [-]: LT        0 K63 R53    ; if 0.000000 >= R53 then PC := 922
901 [-]: JMP       922          ; PC := 922
902 [-]: TEST      R52 0        ; if not R52 then PC := 922
903 [-]: JMP       922          ; PC := 922
904 [-]: GETTABLE  R53 R0 K137  ; R53 := R0["mRewardList"]
905 [-]: SELF      R53 R53 K158 ; R54 := R53; R53 := R53[0xbad4316f]
906 [-]: NEWTABLE  R55 0 4      ; R55 := {}
907 [-]: GETGLOBAL R56 K146     ; R56 := 0x5bced4c4
908 [-]: GETTABLE  R56 R56 K159 ; R56 := R56[0xe4a5b3ca]
909 [-]: GETTABLE  R57 R0 K91   ; R57 := R0["Count"]
910 [-]: CALL      R56 2 2      ; R56 := R56(R57)
911 [-]: SETTABLE  R55 K91 R56  ; R55["Count"] := R56
912 [-]: GETTABLE  R56 R42 R51  ; R56 := R42[R51]
913 [-]: GETTABLE  R56 R56 K150 ; R56 := R56["Goal"]
914 [-]: SETTABLE  R55 K150 R56 ; R55["Goal"] := R56
915 [-]: GETTABLE  R56 R42 R51  ; R56 := R42[R51]
916 [-]: GETTABLE  R56 R56 K151 ; R56 := R56["Reward"]
917 [-]: SETTABLE  R55 K151 R56 ; R55["Reward"] := R56
918 [-]: GETTABLE  R56 R3 K122  ; R56 := R3["mBest"]
919 [-]: SETTABLE  R55 K160 R56 ; R55["Best"] := R56
920 [-]: LOADKB    R56 1 0      ; R56 := true
921 [-]: CALL      R53 4 1      ; R53(R54,R55,R56)
922 [-]: FORLOOP   R48 873      ; R48 += R50; if R48 <= R49 then begin PC := 873; R51 := R48 end
923 [-]: GETTABLE  R53 R0 K137  ; R53 := R0["mRewardList"]
924 [-]: SELF      R53 R53 K161 ; R54 := R53; R53 := R53[0x71e9ac81]
925 [-]: LOADNIL   R55 R55      ; R55 := nil
926 [-]: LOADKB    R56 1 0      ; R56 := true
927 [-]: LOADKB    R57 1 0      ; R57 := true
928 [-]: CALL      R53 5 1      ; R53(R54,R55,R56,R57)
929 [-]: GETTABLE  R53 R3 K122  ; R53 := R3["mBest"]
930 [-]: TEST      R53 0        ; if not R53 then PC := 966
931 [-]: JMP       966          ; PC := 966
932 [-]: LOADNIL   R53 R53      ; R53 := nil
933 [-]: GETTABLE  R54 R0 K78   ; R54 := R0["Locked"]
934 [-]: EQ        1 R54 K79    ; if R54 == nil then PC := 948
935 [-]: JMP       948          ; PC := 948
936 [-]: LOADK     R54 K162     ; R54 := "<p><font face=\"Roboto Condensed\">"
937 [-]: GETGLOBAL R55 K0       ; R55 := 0xae91e43b
938 [-]: SELF      R55 R55 K80  ; R56 := R55; R55 := R55[0x42b04007]
939 [-]: LOADK     R57 K163     ; R57 := "/Lotus/Language/Menu/NeedToUnlockEventPrereqs"
940 [-]: LOADKB    R58 1 0      ; R58 := true
941 [-]: NEWTABLE  R59 0 1      ; R59 := {}
942 [-]: GETTABLE  R60 R0 K78   ; R60 := R0["Locked"]
943 [-]: SETTABLE  R59 K164 R60 ; R59["PREREQ"] := R60
944 [-]: CALL      R55 5 2      ; R55 := R55(R56,R57,R58,R59)
945 [-]: LOADK     R56 K165     ; R56 := "</font></p>"
946 [-]: CONCAT    R53 R54 R56  ; R53 := R54 .. R55 .. R56
947 [-]: JMP       958          ; PC := 958
948 [-]: GETGLOBAL R54 K68      ; R54 := 0x7f5022cf
949 [-]: GETTABLE  R54 R54 K100 ; R54 := R54[0x3f3e4d12]
950 [-]: GETGLOBAL R55 K46      ; R55 := 0x603636ad
951 [-]: LOADK     R56 K166     ; R56 := "/Lotus/Language/Menu/WorldStateBest"
952 [-]: NEWTABLE  R57 0 1      ; R57 := {}
953 [-]: GETTABLE  R58 R0 K91   ; R58 := R0["Count"]
954 [-]: SETTABLE  R57 K167 R58 ; R57["VALUE"] := R58
955 [-]: CALL      R55 3 0      ; R55,... := R55(R56,R57)
956 [-]: CALL      R54 0 2      ; R54 := R54(R55,...)
957 [-]: MOVE      R53 R54      ; R53 := R54
958 [-]: GETGLOBAL R54 K0       ; R54 := 0xae91e43b
959 [-]: SELF      R54 R54 K84  ; R55 := R54; R54 := R54[0xe261aa96]
960 [-]: MOVE      R56 R15      ; R56 := R15
961 [-]: LOADK     R57 K160     ; R57 := "Best"
962 [-]: CONST     R58 29       ; R58 := 29.000000
963 [-]: MOVE      R59 R53      ; R59 := R53
964 [-]: CALL      R54 6 1      ; R54(R55,R56,R57,R58,R59)
965 [-]: JMP       1125         ; PC := 1125
966 [-]: GETTABLE  R54 R3 K92   ; R54 := R3["mGoal"]
967 [-]: GETTABLE  R55 R3 K168  ; R55 := R3["mBonusActive"]
968 [-]: TEST      R55 0        ; if not R55 then PC := 971
969 [-]: JMP       971          ; PC := 971
970 [-]: GETTABLE  R54 R3 K143  ; R54 := R3["mBonusGoal"]
971 [-]: GETTABLE  R55 R0 K91   ; R55 := R0["Count"]
972 [-]: GETTABLE  R56 R3 K169  ; R56 := R3["mInvasion"]
973 [-]: TEST      R56 0        ; if not R56 then PC := 1005
974 [-]: JMP       1005         ; PC := 1005
975 [-]: LT        0 K63 R55    ; if 0.000000 >= R55 then PC := 988
976 [-]: JMP       988          ; PC := 988
977 [-]: MOVE      R56 R54      ; R56 := R54
978 [-]: LOADK     R57 K82      ; R57 := " "
979 [-]: GETGLOBAL R58 K68      ; R58 := 0x7f5022cf
980 [-]: GETTABLE  R58 R58 K100 ; R58 := R58[0x3f3e4d12]
981 [-]: GETGLOBAL R59 K46      ; R59 := 0x603636ad
982 [-]: LOADK     R60 K170     ; R60 := "/Lotus/Language/Bosses/NefAnyoName"
983 [-]: LOADKB    R61 0 0      ; R61 := false
984 [-]: CALL      R59 3 0      ; R59,... := R59(R60,R61)
985 [-]: CALL      R58 0 2      ; R58 := R58(R59,...)
986 [-]: CONCAT    R54 R56 R58  ; R54 := R56 .. R57 .. R58
987 [-]: JMP       1000         ; PC := 1000
988 [-]: LT        0 R55 K63    ; if R55 >= 0.000000 then PC := 1000
989 [-]: JMP       1000         ; PC := 1000
990 [-]: MOVE      R56 R54      ; R56 := R54
991 [-]: LOADK     R57 K82      ; R57 := " "
992 [-]: GETGLOBAL R58 K68      ; R58 := 0x7f5022cf
993 [-]: GETTABLE  R58 R58 K100 ; R58 := R58[0x3f3e4d12]
994 [-]: GETGLOBAL R59 K46      ; R59 := 0x603636ad
995 [-]: LOADK     R60 K171     ; R60 := "/Lotus/Language/Bosses/BossAladV"
996 [-]: LOADKB    R61 0 0      ; R61 := false
997 [-]: CALL      R59 3 0      ; R59,... := R59(R60,R61)
998 [-]: CALL      R58 0 2      ; R58 := R58(R59,...)
999 [-]: CONCAT    R54 R56 R58  ; R54 := R56 .. R57 .. R58
1000 [-]: GETGLOBAL R56 K146     ; R56 := 0x5bced4c4
1001 [-]: GETTABLE  R56 R56 K159 ; R56 := R56[0xe4a5b3ca]
1002 [-]: MOVE      R57 R55      ; R57 := R55
1003 [-]: CALL      R56 2 2      ; R56 := R56(R57)
1004 [-]: MOVE      R55 R56      ; R55 := R56
1005 [-]: EQ        0 R55 R54    ; if R55 ~= R54 then PC := 1028
1006 [-]: JMP       1028         ; PC := 1028
1007 [-]: GETTABLE  R56 R3 K172  ; R56 := R3["mCommunityReqDesc"]
1008 [-]: EQ        1 R56 K59    ; if R56 == "" then PC := 1028
1009 [-]: JMP       1028         ; PC := 1028
1010 [-]: GETGLOBAL R56 K0       ; R56 := 0xae91e43b
1011 [-]: SELF      R56 R56 K84  ; R57 := R56; R56 := R56[0xe261aa96]
1012 [-]: MOVE      R58 R15      ; R58 := R15
1013 [-]: LOADK     R59 K160     ; R59 := "Best"
1014 [-]: CONST     R60 29       ; R60 := 29.000000
1015 [-]: GETGLOBAL R61 K46      ; R61 := 0x603636ad
1016 [-]: GETTABLE  R62 R3 K172  ; R62 := R3["mCommunityReqDesc"]
1017 [-]: LOADNIL   R63 R63      ; R63 := nil
1018 [-]: CALL      R61 3 0      ; R61,... := R61(R62,R63)
1019 [-]: CALL      R56 0 1      ; R56(R57,...)
1020 [-]: GETGLOBAL R56 K0       ; R56 := 0xae91e43b
1021 [-]: SELF      R56 R56 K1   ; R57 := R56; R56 := R56[0xc0a3774b]
1022 [-]: MOVE      R58 R15      ; R58 := R15
1023 [-]: LOADK     R59 K139     ; R59 := "Progress"
1024 [-]: CONST     R60 11       ; R60 := 11.000000
1025 [-]: LOADKB    R61 0 0      ; R61 := false
1026 [-]: CALL      R56 6 1      ; R56(R57,R58,R59,R60,R61)
1027 [-]: JMP       1084         ; PC := 1084
1028 [-]: GETTABLE  R56 R3 K173  ; R56 := R3["mScoreLocTag"]
1029 [-]: EQ        1 R56 K59    ; if R56 == "" then PC := 1074
1030 [-]: JMP       1074         ; PC := 1074
1031 [-]: GETGLOBAL R56 K68      ; R56 := 0x7f5022cf
1032 [-]: GETTABLE  R56 R56 K100 ; R56 := R56[0x3f3e4d12]
1033 [-]: GETGLOBAL R57 K46      ; R57 := 0x603636ad
1034 [-]: GETTABLE  R58 R3 K173  ; R58 := R3["mScoreLocTag"]
1035 [-]: LOADKB    R59 0 0      ; R59 := false
1036 [-]: CALL      R57 3 0      ; R57,... := R57(R58,R59)
1037 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
1038 [-]: GETTABLE  R57 R3 K174  ; R57 := R3["mClanGoal"]
1039 [-]: LEN       R57 R57      ; R57 := # R57
1040 [-]: LT        0 K63 R57    ; if 0.000000 >= R57 then PC := 1061
1041 [-]: JMP       1061         ; PC := 1061
1042 [-]: GETUPVAL  R57 U13      ; R57 := U13
1043 [-]: SELF      R57 R57 K175 ; R58 := R57; R57 := R57[0x713ce380]
1044 [-]: CALL      R57 2 2      ; R57 := R57(R58)
1045 [-]: EQ        1 R57 K59    ; if R57 == "" then PC := 1061
1046 [-]: JMP       1061         ; PC := 1061
1047 [-]: MOVE      R57 R56      ; R57 := R56
1048 [-]: LOADK     R58 K82      ; R58 := " "
1049 [-]: GETGLOBAL R59 K68      ; R59 := 0x7f5022cf
1050 [-]: GETTABLE  R59 R59 K100 ; R59 := R59[0x3f3e4d12]
1051 [-]: GETGLOBAL R60 K46      ; R60 := 0x603636ad
1052 [-]: LOADK     R61 K176     ; R61 := "/Lotus/Language/Menu/WorldStateClanEventProgress"
1053 [-]: NEWTABLE  R62 0 1      ; R62 := {}
1054 [-]: GETUPVAL  R63 U13      ; R63 := U13
1055 [-]: SELF      R63 R63 K178 ; R64 := R63; R63 := R63[0x6da6e186]
1056 [-]: CALL      R63 2 2      ; R63 := R63(R64)
1057 [-]: SETTABLE  R62 K177 R63 ; R62["CLAN_NAME"] := R63
1058 [-]: CALL      R60 3 0      ; R60,... := R60(R61,R62)
1059 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
1060 [-]: CONCAT    R56 R57 R59  ; R56 := R57 .. R58 .. R59
1061 [-]: GETGLOBAL R57 K0       ; R57 := 0xae91e43b
1062 [-]: SELF      R57 R57 K84  ; R58 := R57; R57 := R57[0xe261aa96]
1063 [-]: MOVE      R59 R15      ; R59 := R15
1064 [-]: LOADK     R60 K160     ; R60 := "Best"
1065 [-]: CONST     R61 29       ; R61 := 29.000000
1066 [-]: MOVE      R62 R55      ; R62 := R55
1067 [-]: LOADK     R63 K179     ; R63 := " / "
1068 [-]: MOVE      R64 R54      ; R64 := R54
1069 [-]: LOADK     R65 K82      ; R65 := " "
1070 [-]: MOVE      R66 R56      ; R66 := R56
1071 [-]: CONCAT    R62 R62 R66  ; R62 := R62 .. R63 .. R64 .. R65 .. R66
1072 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1073 [-]: JMP       1084         ; PC := 1084
1074 [-]: GETGLOBAL R57 K0       ; R57 := 0xae91e43b
1075 [-]: SELF      R57 R57 K84  ; R58 := R57; R57 := R57[0xe261aa96]
1076 [-]: MOVE      R59 R15      ; R59 := R15
1077 [-]: LOADK     R60 K160     ; R60 := "Best"
1078 [-]: CONST     R61 29       ; R61 := 29.000000
1079 [-]: MOVE      R62 R55      ; R62 := R55
1080 [-]: LOADK     R63 K179     ; R63 := " / "
1081 [-]: MOVE      R64 R54      ; R64 := R54
1082 [-]: CONCAT    R62 R62 R64  ; R62 := R62 .. R63 .. R64
1083 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1084 [-]: EQ        0 R54 K13    ; if R54 ~= 1.000000 then PC := 1101
1085 [-]: JMP       1101         ; PC := 1101
1086 [-]: GETGLOBAL R57 K0       ; R57 := 0xae91e43b
1087 [-]: SELF      R57 R57 K1   ; R58 := R57; R57 := R57[0xc0a3774b]
1088 [-]: MOVE      R59 R15      ; R59 := R15
1089 [-]: LOADK     R60 K139     ; R60 := "Progress"
1090 [-]: CONST     R61 11       ; R61 := 11.000000
1091 [-]: LOADKB    R62 0 0      ; R62 := false
1092 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1093 [-]: GETGLOBAL R57 K0       ; R57 := 0xae91e43b
1094 [-]: SELF      R57 R57 K84  ; R58 := R57; R57 := R57[0xe261aa96]
1095 [-]: MOVE      R59 R15      ; R59 := R15
1096 [-]: LOADK     R60 K160     ; R60 := "Best"
1097 [-]: CONST     R61 29       ; R61 := 29.000000
1098 [-]: LOADK     R62 K59      ; R62 := ""
1099 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
1100 [-]: JMP       1125         ; PC := 1125
1101 [-]: GETGLOBAL R57 K180     ; R57 := 0x42dcc9f5
1102 [-]: GETTABLE  R58 R0 K150  ; R58 := R0["Goal"]
1103 [-]: DIV       R58 R55 R58  ; R58 := R55 / R58
1104 [-]: CONST     R59 -1       ; R59 := -1.000000
1105 [-]: CONST     R60 1        ; R60 := 1.000000
1106 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
1107 [-]: GETGLOBAL R58 K0       ; R58 := 0xae91e43b
1108 [-]: SELF      R58 R58 K133 ; R59 := R58; R58 := R58[0x91a24e4b]
1109 [-]: MOVE      R60 R15      ; R60 := R15
1110 [-]: LOADK     R61 K181     ; R61 := ".Progress.Bg"
1111 [-]: CONCAT    R60 R60 R61  ; R60 := R60 .. R61
1112 [-]: CONST     R61 12       ; R61 := 12.000000
1113 [-]: CALL      R58 4 2      ; R58 := R58(R59,R60,R61)
1114 [-]: GETGLOBAL R59 K0       ; R59 := 0xae91e43b
1115 [-]: SELF      R59 R59 K14  ; R60 := R59; R59 := R59[0xf64b7262]
1116 [-]: MOVE      R61 R15      ; R61 := R15
1117 [-]: LOADK     R62 K182     ; R62 := "Progress.Fill"
1118 [-]: CONST     R63 12       ; R63 := 12.000000
1119 [-]: GETGLOBAL R64 K146     ; R64 := 0x5bced4c4
1120 [-]: GETTABLE  R64 R64 K183 ; R64 := R64[0xb62ecfe0]
1121 [-]: MUL       R65 R57 R58  ; R65 := R57 * R58
1122 [-]: LOADK     R66 K184     ; R66 := 0.001000
1123 [-]: CALL      R64 3 0      ; R64,... := R64(R65,R66)
1124 [-]: CALL      R59 0 1      ; R59(R60,...)
1125 [-]: GETTABLE  R59 R0 K185  ; R59 := R0["CurrNode"]
1126 [-]: EQ        0 R59 K79    ; if R59 ~= nil then PC := 1129
1127 [-]: JMP       1129         ; PC := 1129
1128 [-]: SETTABLE  R0 K185 R18  ; R0["CurrNode"] := R18
1129 [-]: GETGLOBAL R59 K146     ; R59 := 0x5bced4c4
1130 [-]: GETTABLE  R59 R59 K183 ; R59 := R59[0xb62ecfe0]
1131 [-]: MOVE      R60 R37      ; R60 := R37
1132 [-]: ADD       R61 R35 R33  ; R61 := R35 + R33
1133 [-]: ADD       R61 R61 K135 ; R61 := R61 + 10.000000
1134 [-]: CALL      R59 3 2      ; R59 := R59(R60,R61)
1135 [-]: MOVE      R60 R59      ; R60 := R59
1136 [-]: MOVE      R61 R59      ; R61 := R59
1137 [-]: TEST      R38 0        ; if not R38 then PC := 1314
1138 [-]: JMP       1314         ; PC := 1314
1139 [-]: GETGLOBAL R62 K0       ; R62 := 0xae91e43b
1140 [-]: SELF      R62 R62 K133 ; R63 := R62; R62 := R62[0x91a24e4b]
1141 [-]: MOVE      R64 R15      ; R64 := R15
1142 [-]: LOADK     R65 K186     ; R65 := ".RewardPrefix"
1143 [-]: CONCAT    R64 R64 R65  ; R64 := R64 .. R65
1144 [-]: CONST     R65 34       ; R65 := 34.000000
1145 [-]: CALL      R62 4 2      ; R62 := R62(R63,R64,R65)
1146 [-]: GETGLOBAL R63 K146     ; R63 := 0x5bced4c4
1147 [-]: GETTABLE  R63 R63 K183 ; R63 := R63[0xb62ecfe0]
1148 [-]: MOVE      R64 R59      ; R64 := R59
1149 [-]: ADD       R65 R37 R62  ; R65 := R37 + R62
1150 [-]: GETTABLE  R66 R0 K137  ; R66 := R0["mRewardList"]
1151 [-]: GETTABLE  R66 R66 K187 ; R66 := R66["mElements"]
1152 [-]: LEN       R66 R66      ; R66 := # R66
1153 [-]: GETTABLE  R67 R0 K137  ; R67 := R0["mRewardList"]
1154 [-]: GETTABLE  R67 R67 K54  ; R67 := R67["mForcedVerticalSeparation"]
1155 [-]: MUL       R66 R66 R67  ; R66 := R66 * R67
1156 [-]: ADD       R65 R65 R66  ; R65 := R65 + R66
1157 [-]: ADD       R65 R65 K135 ; R65 := R65 + 10.000000
1158 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
1159 [-]: MOVE      R59 R63      ; R59 := R63
1160 [-]: MOVE      R61 R59      ; R61 := R59
1161 [-]: GETGLOBAL R63 K0       ; R63 := 0xae91e43b
1162 [-]: SELF      R63 R63 K133 ; R64 := R63; R63 := R63[0x91a24e4b]
1163 [-]: MOVE      R65 R15      ; R65 := R15
1164 [-]: LOADK     R66 K188     ; R66 := ".Best"
1165 [-]: CONCAT    R65 R65 R66  ; R65 := R65 .. R66
1166 [-]: CONST     R66 34       ; R66 := 34.000000
1167 [-]: CALL      R63 4 2      ; R63 := R63(R64,R65,R66)
1168 [-]: ADD       R64 R61 R63  ; R64 := R61 + R63
1169 [-]: ADD       R61 R64 K189 ; R61 := R64 + 5.000000
1170 [-]: GETTABLE  R64 R3 K122  ; R64 := R3["mBest"]
1171 [-]: TEST      R64 1        ; if R64 then PC := 1175
1172 [-]: JMP       1175         ; PC := 1175
1173 [-]: ADD       R60 R59 K190 ; R60 := R59 + 30.000000
1174 [-]: ADD       R61 R61 K131 ; R61 := R61 + 20.000000
1175 [-]: GETTABLE  R64 R0 K41   ; R64 := R0["EventInfo"]
1176 [-]: GETTABLE  R64 R64 K191 ; R64 := R64["mPersonal"]
1177 [-]: TEST      R64 1        ; if R64 then PC := 1314
1178 [-]: JMP       1314         ; PC := 1314
1179 [-]: GETUPVAL  R64 U9       ; R64 := U9
1180 [-]: GETTABLE  R64 R64 K192 ; R64 := R64[0x1142c7a8]
1181 [-]: GETTABLE  R65 R0 K91   ; R65 := R0["Count"]
1182 [-]: CALL      R64 2 2      ; R64 := R64(R65)
1183 [-]: GETUPVAL  R65 U9       ; R65 := U9
1184 [-]: GETTABLE  R65 R65 K192 ; R65 := R65[0x1142c7a8]
1185 [-]: GETTABLE  R66 R3 K92   ; R66 := R3["mGoal"]
1186 [-]: CALL      R65 2 2      ; R65 := R65(R66)
1187 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1188 [-]: SELF      R66 R66 K1   ; R67 := R66; R66 := R66[0xc0a3774b]
1189 [-]: MOVE      R68 R15      ; R68 := R15
1190 [-]: LOADK     R69 K139     ; R69 := "Progress"
1191 [-]: CONST     R70 11       ; R70 := 11.000000
1192 [-]: LOADKB    R71 0 0      ; R71 := false
1193 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1194 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1195 [-]: SELF      R66 R66 K84  ; R67 := R66; R66 := R66[0xe261aa96]
1196 [-]: MOVE      R68 R15      ; R68 := R15
1197 [-]: LOADK     R69 K160     ; R69 := "Best"
1198 [-]: CONST     R70 29       ; R70 := 29.000000
1199 [-]: LOADK     R71 K59      ; R71 := ""
1200 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1201 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1202 [-]: SELF      R66 R66 K84  ; R67 := R66; R66 := R66[0xe261aa96]
1203 [-]: MOVE      R68 R15      ; R68 := R15
1204 [-]: LOADK     R69 K136     ; R69 := "RewardPrefix"
1205 [-]: CONST     R70 29       ; R70 := 29.000000
1206 [-]: LOADK     R71 K59      ; R71 := ""
1207 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1208 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1209 [-]: SELF      R66 R66 K193 ; R67 := R66; R66 := R66[0x1cb415c1]
1210 [-]: MOVE      R68 R15      ; R68 := R15
1211 [-]: LOADK     R69 K194     ; R69 := ".Reward.Image"
1212 [-]: CONCAT    R68 R68 R69  ; R68 := R68 .. R69
1213 [-]: GETTABLE  R69 R0 K41   ; R69 := R0["EventInfo"]
1214 [-]: GETTABLE  R69 R69 K130 ; R69 := R69["mIcon"]
1215 [-]: CALL      R66 4 1      ; R66(R67,R68,R69)
1216 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1217 [-]: SELF      R66 R66 K1   ; R67 := R66; R66 := R66[0xc0a3774b]
1218 [-]: MOVE      R68 R15      ; R68 := R15
1219 [-]: LOADK     R69 K151     ; R69 := "Reward"
1220 [-]: CONST     R70 11       ; R70 := 11.000000
1221 [-]: LOADKB    R71 1 0      ; R71 := true
1222 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1223 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1224 [-]: SELF      R66 R66 K14  ; R67 := R66; R66 := R66[0xf64b7262]
1225 [-]: MOVE      R68 R15      ; R68 := R15
1226 [-]: LOADK     R69 K151     ; R69 := "Reward"
1227 [-]: CONST     R70 10       ; R70 := 10.000000
1228 [-]: CONST     R71 100      ; R71 := 100.000000
1229 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1230 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1231 [-]: SELF      R66 R66 K1   ; R67 := R66; R66 := R66[0xc0a3774b]
1232 [-]: MOVE      R68 R15      ; R68 := R15
1233 [-]: LOADK     R69 K195     ; R69 := "Reward.Name"
1234 [-]: CONST     R70 11       ; R70 := 11.000000
1235 [-]: LOADKB    R71 0 0      ; R71 := false
1236 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1237 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1238 [-]: SELF      R66 R66 K1   ; R67 := R66; R66 := R66[0xc0a3774b]
1239 [-]: MOVE      R68 R15      ; R68 := R15
1240 [-]: LOADK     R69 K196     ; R69 := "Reward.BlueprintBg"
1241 [-]: CONST     R70 11       ; R70 := 11.000000
1242 [-]: LOADKB    R71 0 0      ; R71 := false
1243 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1244 [-]: GETTABLE  R66 R3 K92   ; R66 := R3["mGoal"]
1245 [-]: EQ        0 R66 K197   ; if R66 ~= 100.000000 then PC := 1257
1246 [-]: JMP       1257         ; PC := 1257
1247 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1248 [-]: SELF      R66 R66 K84  ; R67 := R66; R66 := R66[0xe261aa96]
1249 [-]: MOVE      R68 R15      ; R68 := R15
1250 [-]: LOADK     R69 K198     ; R69 := "Reward.Progress"
1251 [-]: CONST     R70 29       ; R70 := 29.000000
1252 [-]: MOVE      R71 R64      ; R71 := R64
1253 [-]: LOADK     R72 K199     ; R72 := "%"
1254 [-]: CONCAT    R71 R71 R72  ; R71 := R71 .. R72
1255 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1256 [-]: JMP       1267         ; PC := 1267
1257 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1258 [-]: SELF      R66 R66 K84  ; R67 := R66; R66 := R66[0xe261aa96]
1259 [-]: MOVE      R68 R15      ; R68 := R15
1260 [-]: LOADK     R69 K198     ; R69 := "Reward.Progress"
1261 [-]: CONST     R70 29       ; R70 := 29.000000
1262 [-]: MOVE      R71 R64      ; R71 := R64
1263 [-]: LOADK     R72 K179     ; R72 := " / "
1264 [-]: MOVE      R73 R65      ; R73 := R65
1265 [-]: CONCAT    R71 R71 R73  ; R71 := R71 .. R72 .. R73
1266 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1267 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1268 [-]: SELF      R66 R66 K14  ; R67 := R66; R66 := R66[0xf64b7262]
1269 [-]: MOVE      R68 R15      ; R68 := R15
1270 [-]: LOADK     R69 K200     ; R69 := "Reward.Image"
1271 [-]: CONST     R70 12       ; R70 := 12.000000
1272 [-]: CONST     R71 80       ; R71 := 80.000000
1273 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1274 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1275 [-]: SELF      R66 R66 K14  ; R67 := R66; R66 := R66[0xf64b7262]
1276 [-]: MOVE      R68 R15      ; R68 := R15
1277 [-]: LOADK     R69 K200     ; R69 := "Reward.Image"
1278 [-]: CONST     R70 13       ; R70 := 13.000000
1279 [-]: CONST     R71 80       ; R71 := 80.000000
1280 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1281 [-]: GETGLOBAL R66 K0       ; R66 := 0xae91e43b
1282 [-]: SELF      R66 R66 K14  ; R67 := R66; R66 := R66[0xf64b7262]
1283 [-]: MOVE      R68 R15      ; R68 := R15
1284 [-]: LOADK     R69 K200     ; R69 := "Reward.Image"
1285 [-]: CONST     R70 1        ; R70 := 1.000000
1286 [-]: CONST     R71 40       ; R71 := 40.000000
1287 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
1288 [-]: GETGLOBAL R66 K180     ; R66 := 0x42dcc9f5
1289 [-]: GETTABLE  R67 R0 K91   ; R67 := R0["Count"]
1290 [-]: GETTABLE  R68 R3 K92   ; R68 := R3["mGoal"]
1291 [-]: DIV       R67 R67 R68  ; R67 := R67 / R68
1292 [-]: CONST     R68 0        ; R68 := 0.000000
1293 [-]: CONST     R69 1        ; R69 := 1.000000
1294 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
1295 [-]: CONST     R67 400      ; R67 := 400.000000
1296 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1297 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1298 [-]: MOVE      R70 R15      ; R70 := R15
1299 [-]: LOADK     R71 K201     ; R71 := "Reward.ProgressBar.Fill"
1300 [-]: CONST     R72 12       ; R72 := 12.000000
1301 [-]: GETGLOBAL R73 K146     ; R73 := 0x5bced4c4
1302 [-]: GETTABLE  R73 R73 K183 ; R73 := R73[0xb62ecfe0]
1303 [-]: MUL       R74 R66 R67  ; R74 := R66 * R67
1304 [-]: LOADK     R75 K184     ; R75 := 0.001000
1305 [-]: CALL      R73 3 0      ; R73,... := R73(R74,R75)
1306 [-]: CALL      R68 0 1      ; R68(R69,...)
1307 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1308 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1309 [-]: MOVE      R70 R15      ; R70 := R15
1310 [-]: LOADK     R71 K202     ; R71 := "Reward.ProgressBar.Bg"
1311 [-]: CONST     R72 12       ; R72 := 12.000000
1312 [-]: MOVE      R73 R67      ; R73 := R67
1313 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1314 [-]: GETTABLE  R68 R3 K85   ; R68 := R3["mInvasionNode"]
1315 [-]: GETGLOBAL R69 K86      ; R69 := EMPTY_SYMBOL
1316 [-]: EQ        1 R68 R69    ; if R68 == R69 then PC := 1319
1317 [-]: JMP       1319         ; PC := 1319
1318 [-]: ADD       R61 R61 K131 ; R61 := R61 + 20.000000
1319 [-]: GETGLOBAL R68 K50      ; R68 := 0x7b998233
1320 [-]: MOVE      R69 R31      ; R69 := R31
1321 [-]: CALL      R68 2 2      ; R68 := R68(R69)
1322 [-]: TEST      R68 1        ; if R68 then PC := 1391
1323 [-]: JMP       1391         ; PC := 1391
1324 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1325 [-]: SELF      R68 R68 K193 ; R69 := R68; R68 := R68[0x1cb415c1]
1326 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1327 [-]: LOADK     R71 K203     ; R71 := ".Event.Icon"
1328 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1329 [-]: MOVE      R71 R31      ; R71 := R31
1330 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
1331 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1332 [-]: SELF      R68 R68 K1   ; R69 := R68; R68 := R68[0xc0a3774b]
1333 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1334 [-]: LOADK     R71 K17      ; R71 := "Event.Icon"
1335 [-]: CONST     R72 11       ; R72 := 11.000000
1336 [-]: LOADKB    R73 1 0      ; R73 := true
1337 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1338 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1339 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1340 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1341 [-]: LOADK     R71 K17      ; R71 := "Event.Icon"
1342 [-]: CONST     R72 0        ; R72 := 0.000000
1343 [-]: CONST     R73 9        ; R73 := 9.000000
1344 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1345 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1346 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1347 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1348 [-]: LOADK     R71 K17      ; R71 := "Event.Icon"
1349 [-]: CONST     R72 1        ; R72 := 1.000000
1350 [-]: CONST     R73 36       ; R73 := 36.000000
1351 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1352 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1353 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1354 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1355 [-]: LOADK     R71 K17      ; R71 := "Event.Icon"
1356 [-]: CONST     R72 12       ; R72 := 12.000000
1357 [-]: MOVE      R73 R32      ; R73 := R32
1358 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1359 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1360 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1361 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1362 [-]: LOADK     R71 K17      ; R71 := "Event.Icon"
1363 [-]: CONST     R72 13       ; R72 := 13.000000
1364 [-]: MOVE      R73 R33      ; R73 := R33
1365 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1366 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1367 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1368 [-]: MOVE      R70 R15      ; R70 := R15
1369 [-]: LOADK     R71 K132     ; R71 := "Desc"
1370 [-]: CONST     R72 0        ; R72 := 0.000000
1371 [-]: ADD       R73 R32 K131 ; R73 := R32 + 20.000000
1372 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1373 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1374 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1375 [-]: MOVE      R70 R15      ; R70 := R15
1376 [-]: LOADK     R71 K136     ; R71 := "RewardPrefix"
1377 [-]: CONST     R72 0        ; R72 := 0.000000
1378 [-]: ADD       R73 R32 K131 ; R73 := R32 + 20.000000
1379 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1380 [-]: GETTABLE  R68 R0 K137  ; R68 := R0["mRewardList"]
1381 [-]: CLOSURE   R69 0        ; R69 := closure(Function #60.1)
1382 [-]: MOVE      R0 R0        ; R0 := R0
1383 [-]: MOVE      R0 R32       ; R0 := R32
1384 [-]: SETTABLE  R68 K204 R69 ; R68["CalculateX"] := R69
1385 [-]: GETTABLE  R68 R0 K137  ; R68 := R0["mRewardList"]
1386 [-]: SELF      R68 R68 K161 ; R69 := R68; R68 := R68[0x71e9ac81]
1387 [-]: LOADNIL   R70 R70      ; R70 := nil
1388 [-]: LOADKB    R71 1 0      ; R71 := true
1389 [-]: LOADKB    R72 1 0      ; R72 := true
1390 [-]: CALL      R68 5 1      ; R68(R69,R70,R71,R72)
1391 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1392 [-]: SELF      R68 R68 K1   ; R69 := R68; R68 := R68[0xc0a3774b]
1393 [-]: MOVE      R70 R15      ; R70 := R15
1394 [-]: LOADK     R71 K160     ; R71 := "Best"
1395 [-]: CONST     R72 11       ; R72 := 11.000000
1396 [-]: MOVE      R73 R38      ; R73 := R38
1397 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1398 [-]: TEST      R38 0        ; if not R38 then PC := 1414
1399 [-]: JMP       1414         ; PC := 1414
1400 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1401 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1402 [-]: MOVE      R70 R15      ; R70 := R15
1403 [-]: LOADK     R71 K160     ; R71 := "Best"
1404 [-]: CONST     R72 1        ; R72 := 1.000000
1405 [-]: MOVE      R73 R59      ; R73 := R59
1406 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1407 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1408 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1409 [-]: MOVE      R70 R15      ; R70 := R15
1410 [-]: LOADK     R71 K139     ; R71 := "Progress"
1411 [-]: CONST     R72 1        ; R72 := 1.000000
1412 [-]: MOVE      R73 R60      ; R73 := R60
1413 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1414 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1415 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1416 [-]: MOVE      R70 R15      ; R70 := R15
1417 [-]: LOADK     R71 K205     ; R71 := "Expiry"
1418 [-]: CONST     R72 1        ; R72 := 1.000000
1419 [-]: MOVE      R73 R61      ; R73 := R61
1420 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1421 [-]: GETUPVAL  R68 U14      ; R68 := U14
1422 [-]: MOVE      R69 R15      ; R69 := R15
1423 [-]: LOADK     R70 K206     ; R70 := ".Expiry.Timer"
1424 [-]: CONCAT    R69 R69 R70  ; R69 := R69 .. R70
1425 [-]: MOVE      R70 R3       ; R70 := R3
1426 [-]: GETTABLE  R71 R0 K45   ; R71 := R0["VictimNodeName"]
1427 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
1428 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1429 [-]: SELF      R68 R68 K133 ; R69 := R68; R68 := R68[0x91a24e4b]
1430 [-]: MOVE      R70 R15      ; R70 := R15
1431 [-]: LOADK     R71 K207     ; R71 := ".Expiry"
1432 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1433 [-]: CONST     R71 13       ; R71 := 13.000000
1434 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
1435 [-]: ADD       R68 R61 R68  ; R68 := R61 + R68
1436 [-]: ADD       R68 R68 K189 ; R68 := R68 + 5.000000
1437 [-]: SETTABLE  R0 K53 R68   ; R0["TotalHeight"] := R68
1438 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1439 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1440 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1441 [-]: LOADK     R71 K208     ; R71 := "Btn"
1442 [-]: CONST     R72 13       ; R72 := 13.000000
1443 [-]: GETTABLE  R73 R0 K53   ; R73 := R0["TotalHeight"]
1444 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1445 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1446 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1447 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1448 [-]: LOADK     R71 K11      ; R71 := "Outline"
1449 [-]: CONST     R72 13       ; R72 := 13.000000
1450 [-]: GETTABLE  R73 R0 K53   ; R73 := R0["TotalHeight"]
1451 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1452 [-]: GETGLOBAL R68 K0       ; R68 := 0xae91e43b
1453 [-]: SELF      R68 R68 K14  ; R69 := R68; R68 := R68[0xf64b7262]
1454 [-]: GETTABLE  R70 R0 K2    ; R70 := R0["mClipName"]
1455 [-]: LOADK     R71 K209     ; R71 := "Highlight"
1456 [-]: CONST     R72 1        ; R72 := 1.000000
1457 [-]: GETTABLE  R73 R0 K53   ; R73 := R0["TotalHeight"]
1458 [-]: SUB       R73 R73 K210 ; R73 := R73 - 2.000000
1459 [-]: CALL      R68 6 1      ; R68(R69,R70,R71,R72,R73)
1460 [-]: RETURN    R0 1         ; return 


; Function #60.1:
;
; Name:            
; Defined at line: 4052
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mOffsetX"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x91a24e4b]
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mClipName"]
 10 [-]: LOADK     R5 K5        ; R5 := ".Event.Icon"
 11 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 12 [-]: CONST     R5 0         ; R5 := 0.000000
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: GETUPVAL  R3 U1        ; R3 := U1
 15 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 16 [-]: ADD       R2 R2 K6     ; R2 := R2 + 10.000000
 17 [-]: SETTABLE  R1 K1 R2     ; R1["mOffsetX"] := R2
 18 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mOffsetX"]
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 4076
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 0         ; if not R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  5 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
  6 [-]: LOADK     R4 K3        ; R4 := "CheckQuests"
  7 [-]: LOADK     R5 K4        ; R5 := ""
  8 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 12 [-]: LOADK     R3 K6        ; R3 := "/Lotus/Language/Menu/SetActiveQuestFailed"
 13 [-]: CALL      R2 2 1       ; R2(R3)
 14 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 4084
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R0 0         ; if not R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: GETUPVAL  R4 U1        ; R4 := U1
  6 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
  7 [-]: LOADNIL   R4 R4        ; R4 := nil
  8 [-]: SETUPVAL  R4 U1        ; U82 := R1
  9 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 42
 10 [-]: JMP       42           ; PC := 42
 11 [-]: GETGLOBAL R4 K1        ; R4 := 0xb009bbc6
 12 [-]: GETTABLE  R5 R3 K2     ; R5 := R3["Type"]
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: GETGLOBAL R5 K3        ; R5 := 0x7f5022cf
 15 [-]: GETTABLE  R5 R5 K4     ; R5 := R5[0x04981ab3]
 16 [-]: TESTSET   R6 R2 1      ; if R2 then PC := 25 else R6 := R2
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETGLOBAL R6 K5        ; R6 := 0x603636ad
 19 [-]: GETGLOBAL R7 K6        ; R7 := 0x64fb1586
 20 [-]: SELF      R8 R4 K7     ; R9 := R4; R8 := R4[0xf8eabce5]
 21 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 22 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 23 [-]: LOADKB    R8 1 0       ; R8 := true
 24 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 25 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 26 [-]: GETGLOBAL R6 K3        ; R6 := 0x7f5022cf
 27 [-]: GETTABLE  R6 R6 K4     ; R6 := R6[0x04981ab3]
 28 [-]: MOVE      R7 R1        ; R7 := R1
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: EQ        1 R6 R5      ; if R6 == R5 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETUPVAL  R6 U2        ; R6 := U2
 33 [-]: GETTABLE  R6 R6 K8     ; R6 := R6[0xa53f5e12]
 34 [-]: LOADK     R7 K9        ; R7 := "/Lotus/Language/Dojo/VaultContributionDecoIncorrectConfirmWord"
 35 [-]: CALL      R6 2 1       ; R6(R7)
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETUPVAL  R6 U3        ; R6 := U3
 38 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x49cfdc52]
 39 [-]: GETTABLE  R8 R3 K2     ; R8 := R3["Type"]
 40 [-]: LOADK     R9 K11       ; R9 := "OnActiveQuestSet"
 41 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 42 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 4106
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETGLOBAL R4 K0        ; R4 := 0x03f57322
  3 [-]: MOVE      R5 R2        ; R5 := R2
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: EQ        0 R4 K2      ; if R4 ~= 4.000000 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 8
  8 [-]: LOADKB    R4 1 0       ; R4 := true
  9 [-]: MOVE      R5 R0        ; R5 := R0
 10 [-]: CALL      R3 3 1       ; R3(R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 4110
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 4114
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 12 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x49cfdc52]
 16 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["Type"]
 17 [-]: LOADK     R5 K6        ; R5 := "OnActiveQuestSet"
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: LOADNIL   R2 R2        ; R2 := nil
 20 [-]: SETUPVAL  R2 U0        ; U82 := R0
 21 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 4125
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 37
  5 [-]: JMP       37           ; PC := 37
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 37
  8 [-]: JMP       37           ; PC := 37
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0xa9882367]
 11 [-]: LOADK     R2 K5        ; R2 := "Codex"
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 16 [-]: GETGLOBAL R3 K6        ; R3 := 0x7b998233
 17 [-]: MOVE      R4 R1        ; R4 := R1
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 37
 20 [-]: JMP       37           ; PC := 37
 21 [-]: GETGLOBAL R3 K6        ; R3 := 0x7b998233
 22 [-]: MOVE      R4 R2        ; R4 := R2
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 37
 25 [-]: JMP       37           ; PC := 37
 26 [-]: GETGLOBAL R3 K7        ; R3 := _T
 27 [-]: SETTABLE  R3 K8 K5     ; R3["triggeredConsoleTag"] := "Codex"
 28 [-]: GETGLOBAL R3 K7        ; R3 := _T
 29 [-]: GETTABLE  R4 R2 K10    ; R4 := R2["Type"]
 30 [-]: SETTABLE  R3 K9 R4     ; R3["QuickSelectQuestType"] := R4
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0xa9882367]
 33 [-]: LOADK     R4 K11       ; R4 := "ConsoleTeleportAndActivate"
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xd91e1179]
 36 [-]: CALL      R3 2 1       ; R3(R4)
 37 [-]: LOADNIL   R3 R3        ; R3 := nil
 38 [-]: SETUPVAL  R3 U0        ; U82 := R0
 39 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 4139
; #Upvalues:       43
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0[0x9383bc56]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K4        ; R3 := "InfoPanel.InfoMenu.AlertElement"
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: SETUPVAL  R1 U0        ; U82 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SETTABLE  R1 K5 K6     ; R1["mForcedVerticalSeparation"] := 10.000000
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: SETTABLE  R1 K7 K8     ; R1["mTransitionInDeltaY"] := 0.000000
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: SETTABLE  R1 K9 K8     ; R1["mTransitionOutDeltaY"] := 0.000000
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: SETTABLE  R1 K10 K11   ; R1["mWrapAroundNavigation"] := false
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 19 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x91a24e4b]
 20 [-]: LOADK     R4 K14       ; R4 := "InfoPanel.InfoMenu"
 21 [-]: CONST     R5 1         ; R5 := 1.000000
 22 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 23 [-]: SETTABLE  R1 K12 R2    ; R1["mOriginalYPos"] := R2
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: GETUPVAL  R2 U0        ; R2 := U0
 26 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mOriginalYPos"]
 27 [-]: SETTABLE  R1 K15 R2    ; R1["mCurrYPos"] := R2
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 30 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x91a24e4b]
 31 [-]: LOADK     R4 K17       ; R4 := "InfoPanel.InfoMenu.AlertElement.Separator"
 32 [-]: CONST     R5 1         ; R5 := 1.000000
 33 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 34 [-]: SETTABLE  R1 K16 R2    ; R1["mOrigAlertSepYPos"] := R2
 35 [-]: GETUPVAL  R1 U0        ; R1 := U0
 36 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 37 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x91a24e4b]
 38 [-]: LOADK     R4 K19       ; R4 := "InfoPanel.InfoMenu.AlertElement.Timer"
 39 [-]: CONST     R5 1         ; R5 := 1.000000
 40 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 41 [-]: SETTABLE  R1 K18 R2    ; R1["mOrigAlertTimerYPos"] := R2
 42 [-]: GETUPVAL  R1 U0        ; R1 := U0
 43 [-]: SETTABLE  R1 K20 K21   ; R1["mQueueReposition"] := nil
 44 [-]: GETUPVAL  R1 U0        ; R1 := U0
 45 [-]: SETTABLE  R1 K22 K21   ; R1["mBuffIconTimer"] := nil
 46 [-]: GETUPVAL  R1 U0        ; R1 := U0
 47 [-]: SETTABLE  R1 K23 K24   ; R1["mBuffIconIndex"] := 1.000000
 48 [-]: GETUPVAL  R1 U0        ; R1 := U0
 49 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 50 [-]: LOADK     R3 K26       ; R3 := "InfoMenuItemPressed"
 51 [-]: LOADK     R4 K27       ; R4 := "InfoMenuItemFocused"
 52 [-]: LOADK     R5 K28       ; R5 := "InfoMenuItemUnfocused"
 53 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 54 [-]: GETUPVAL  R1 U0        ; R1 := U0
 55 [-]: CLOSURE   R2 0         ; R2 := closure(Function #67.1)
 56 [-]: GETUPVAL  R0 U1        ; R0 := U1
 57 [-]: SETTABLE  R1 K29 R2    ; R1["CanFocus"] := R2
 58 [-]: GETUPVAL  R1 U0        ; R1 := U0
 59 [-]: CLOSURE   R2 1         ; R2 := closure(Function #67.2)
 60 [-]: SETTABLE  R1 K30 R2    ; R1["OnDraw"] := R2
 61 [-]: GETUPVAL  R1 U0        ; R1 := U0
 62 [-]: CLOSURE   R2 2         ; R2 := closure(Function #67.3)
 63 [-]: GETUPVAL  R0 U0        ; R0 := U0
 64 [-]: GETUPVAL  R0 U2        ; R0 := U2
 65 [-]: GETUPVAL  R0 U3        ; R0 := U3
 66 [-]: SETTABLE  R1 K31 R2    ; R1["RepositionButton"] := R2
 67 [-]: GETUPVAL  R1 U0        ; R1 := U0
 68 [-]: CLOSURE   R2 3         ; R2 := closure(Function #67.4)
 69 [-]: GETUPVAL  R0 U4        ; R0 := U4
 70 [-]: GETUPVAL  R0 U5        ; R0 := U5
 71 [-]: GETUPVAL  R0 U3        ; R0 := U3
 72 [-]: GETUPVAL  R0 U2        ; R0 := U2
 73 [-]: GETUPVAL  R0 U6        ; R0 := U6
 74 [-]: GETUPVAL  R0 U7        ; R0 := U7
 75 [-]: GETUPVAL  R0 U8        ; R0 := U8
 76 [-]: GETUPVAL  R0 U9        ; R0 := U9
 77 [-]: GETUPVAL  R0 U10       ; R0 := U10
 78 [-]: GETUPVAL  R0 U11       ; R0 := U11
 79 [-]: GETUPVAL  R0 U12       ; R0 := U12
 80 [-]: GETUPVAL  R0 U13       ; R0 := U13
 81 [-]: GETUPVAL  R0 U14       ; R0 := U14
 82 [-]: GETUPVAL  R0 U15       ; R0 := U15
 83 [-]: GETUPVAL  R0 U16       ; R0 := U16
 84 [-]: GETUPVAL  R0 U0        ; R0 := U0
 85 [-]: SETTABLE  R1 K32 R2    ; R1["mOnFocusedCallback"] := R2
 86 [-]: GETUPVAL  R1 U0        ; R1 := U0
 87 [-]: CLOSURE   R2 4         ; R2 := closure(Function #67.5)
 88 [-]: GETUPVAL  R0 U6        ; R0 := U6
 89 [-]: GETUPVAL  R0 U2        ; R0 := U2
 90 [-]: SETTABLE  R1 K33 R2    ; R1["mOnUnfocusedCallback"] := R2
 91 [-]: GETUPVAL  R1 U0        ; R1 := U0
 92 [-]: CLOSURE   R2 5         ; R2 := closure(Function #67.6)
 93 [-]: GETUPVAL  R0 U3        ; R0 := U3
 94 [-]: GETUPVAL  R0 U2        ; R0 := U2
 95 [-]: GETUPVAL  R0 U14       ; R0 := U14
 96 [-]: GETUPVAL  R0 U17       ; R0 := U17
 97 [-]: GETUPVAL  R0 U18       ; R0 := U18
 98 [-]: GETUPVAL  R0 U19       ; R0 := U19
 99 [-]: GETUPVAL  R0 U20       ; R0 := U20
100 [-]: GETUPVAL  R0 U21       ; R0 := U21
101 [-]: GETUPVAL  R0 U22       ; R0 := U22
102 [-]: GETUPVAL  R0 U23       ; R0 := U23
103 [-]: GETUPVAL  R0 U24       ; R0 := U24
104 [-]: GETUPVAL  R0 U25       ; R0 := U25
105 [-]: GETUPVAL  R0 U26       ; R0 := U26
106 [-]: GETUPVAL  R0 U27       ; R0 := U27
107 [-]: GETUPVAL  R0 U28       ; R0 := U28
108 [-]: GETUPVAL  R0 U29       ; R0 := U29
109 [-]: GETUPVAL  R0 U15       ; R0 := U15
110 [-]: GETUPVAL  R0 U30       ; R0 := U30
111 [-]: GETUPVAL  R0 U31       ; R0 := U31
112 [-]: SETTABLE  R1 K34 R2    ; R1["mOnSelectedCallback"] := R2
113 [-]: GETUPVAL  R1 U0        ; R1 := U0
114 [-]: CLOSURE   R2 6         ; R2 := closure(Function #67.7)
115 [-]: GETUPVAL  R0 U0        ; R0 := U0
116 [-]: GETUPVAL  R0 U6        ; R0 := U6
117 [-]: GETUPVAL  R0 U3        ; R0 := U3
118 [-]: GETUPVAL  R0 U2        ; R0 := U2
119 [-]: GETUPVAL  R0 U32       ; R0 := U32
120 [-]: GETUPVAL  R0 U33       ; R0 := U33
121 [-]: GETUPVAL  R0 U34       ; R0 := U34
122 [-]: GETUPVAL  R0 U35       ; R0 := U35
123 [-]: GETUPVAL  R0 U36       ; R0 := U36
124 [-]: GETUPVAL  R0 U37       ; R0 := U37
125 [-]: GETUPVAL  R0 U38       ; R0 := U38
126 [-]: GETUPVAL  R0 U39       ; R0 := U39
127 [-]: GETUPVAL  R0 U18       ; R0 := U18
128 [-]: GETUPVAL  R0 U40       ; R0 := U40
129 [-]: GETUPVAL  R0 U41       ; R0 := U41
130 [-]: SETTABLE  R1 K35 R2    ; R1["mElementDrawCallback"] := R2
131 [-]: GETUPVAL  R1 U0        ; R1 := U0
132 [-]: CLOSURE   R2 7         ; R2 := closure(Function #67.8)
133 [-]: GETUPVAL  R0 U2        ; R0 := U2
134 [-]: GETUPVAL  R0 U3        ; R0 := U3
135 [-]: SETTABLE  R1 K36 R2    ; R1["CalculateHeight"] := R2
136 [-]: GETUPVAL  R1 U0        ; R1 := U0
137 [-]: CLOSURE   R2 8         ; R2 := closure(Function #67.9)
138 [-]: SETTABLE  R1 K37 R2    ; R1["CalculateY"] := R2
139 [-]: GETUPVAL  R1 U0        ; R1 := U0
140 [-]: CLOSURE   R2 9         ; R2 := closure(Function #67.10)
141 [-]: GETUPVAL  R0 U4        ; R0 := U4
142 [-]: GETUPVAL  R0 U0        ; R0 := U0
143 [-]: GETUPVAL  R0 U42       ; R0 := U42
144 [-]: SETTABLE  R1 K38 R2    ; R1["RepositionElements"] := R2
145 [-]: RETURN    R0 1         ; return 


; Function #67.1:
;
; Name:            
; Defined at line: 4155
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADKB    R3 1 0       ; R3 := true
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["SYND_MISSIONS"]
  4 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  7 [-]: GETTABLE  R5 R2 K2     ; R5 := R2["DailyTask"]
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: TEST      R4 1         ; if R4 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADKB    R3 0 0       ; R3 := false
 12 [-]: JMP       30           ; PC := 30
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["QUESTS"]
 15 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETTABLE  R4 R2 K4     ; R4 := R2["IsBanner"]
 18 [-]: TEST      R4 0         ; if not R4 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADKB    R3 0 0       ; R3 := false
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["EVENTS"]
 24 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETTABLE  R4 R2 K6     ; R4 := R2["IsHeader"]
 27 [-]: TEST      R4 0         ; if not R4 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: LOADKB    R3 0 0       ; R3 := false
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #67.2:
;
; Name:            
; Defined at line: 4169
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0xbe07f4f4]
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R3 3 1       ; R3(R4,R5)
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mElementDrawCallback"]
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: TEST      R2 0         ; if not R2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETTABLE  R3 R0 K3     ; R3 := R0[0xb15e6aca]
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R3 2 1       ; R3(R4)
 14 [-]: RETURN    R0 1         ; return 


; Function #67.3:
;
; Name:            
; Defined at line: 4177
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x5b0290d2]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: CONST     R5 59        ; R5 := 59.000000
  5 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  6 [-]: TEST      R2 1         ; if R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x91a24e4b]
 11 [-]: LOADK     R4 K4        ; R4 := "InfoPanel.InfoMenu"
 12 [-]: CONST     R5 1         ; R5 := 1.000000
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x91a24e4b]
 16 [-]: LOADK     R5 K5        ; R5 := "InfoPanel.InfoMenuMask"
 17 [-]: CONST     R6 13        ; R6 := 13.000000
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 20 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x91a24e4b]
 21 [-]: LOADK     R6 K5        ; R6 := "InfoPanel.InfoMenuMask"
 22 [-]: CONST     R7 1         ; R7 := 1.000000
 23 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 24 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 25 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0x91a24e4b]
 26 [-]: GETTABLE  R7 R1 K2     ; R7 := R1["mClipName"]
 27 [-]: CONST     R8 1         ; R8 := 1.000000
 28 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 29 [-]: ADD       R5 R2 R5     ; R5 := R2 + R5
 30 [-]: GETUPVAL  R6 U0        ; R6 := U0
 31 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x2721d8ad]
 32 [-]: MOVE      R8 R1        ; R8 := R1
 33 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 34 [-]: GETTABLE  R7 R1 K7     ; R7 := R1["EntryId"]
 35 [-]: GETUPVAL  R8 U1        ; R8 := U1
 36 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["ALERT"]
 37 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 60
 38 [-]: JMP       60           ; PC := 60
 39 [-]: GETTABLE  R7 R1 K7     ; R7 := R1["EntryId"]
 40 [-]: GETUPVAL  R8 U1        ; R8 := U1
 41 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["VOID_TEAR_MISSION"]
 42 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 60
 43 [-]: JMP       60           ; PC := 60
 44 [-]: GETTABLE  R7 R1 K7     ; R7 := R1["EntryId"]
 45 [-]: GETUPVAL  R8 U1        ; R8 := U1
 46 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["PVPCHALLENGES"]
 47 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 60
 48 [-]: JMP       60           ; PC := 60
 49 [-]: GETTABLE  R7 R1 K7     ; R7 := R1["EntryId"]
 50 [-]: GETUPVAL  R8 U1        ; R8 := U1
 51 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["SYND_MISSION"]
 52 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 60
 53 [-]: JMP       60           ; PC := 60
 54 [-]: GETTABLE  R7 R1 K7     ; R7 := R1["EntryId"]
 55 [-]: GETUPVAL  R8 U1        ; R8 := U1
 56 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["QUEST"]
 57 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 60
 60 [-]: LOADKB    R7 1 0       ; R7 := true
 61 [-]: ADD       R8 R5 R6     ; R8 := R5 + R6
 62 [-]: LE        1 R8 R4      ; if R8 <= R4 then PC := 67
 63 [-]: JMP       67           ; PC := 67
 64 [-]: ADD       R8 R4 R3     ; R8 := R4 + R3
 65 [-]: LE        0 R8 R5      ; if R8 > R5 then PC := 75
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 68 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0xc0a3774b]
 69 [-]: GETTABLE  R10 R1 K2    ; R10 := R1["mClipName"]
 70 [-]: LOADK     R11 K14      ; R11 := "Btn"
 71 [-]: CONST     R12 59       ; R12 := 59.000000
 72 [-]: LOADKB    R13 0 0      ; R13 := false
 73 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 74 [-]: JMP       159          ; PC := 159
 75 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 76 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0xc0a3774b]
 77 [-]: GETTABLE  R10 R1 K2    ; R10 := R1["mClipName"]
 78 [-]: LOADK     R11 K14      ; R11 := "Btn"
 79 [-]: CONST     R12 59       ; R12 := 59.000000
 80 [-]: LOADKB    R13 1 0      ; R13 := true
 81 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 82 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 110
 83 [-]: JMP       110          ; PC := 110
 84 [-]: SUB       R8 R4 R5     ; R8 := R4 - R5
 85 [-]: SUB       R8 R6 R8     ; R8 := R6 - R8
 86 [-]: GETUPVAL  R9 U2        ; R9 := U2
 87 [-]: GETTABLE  R9 R9 K15    ; R9 := R9[0x06d055f9]
 88 [-]: MOVE      R10 R7       ; R10 := R7
 89 [-]: DIV       R11 R6 K16   ; R11 := R6 / 2.000000
 90 [-]: SUB       R12 R6 R8    ; R12 := R6 - R8
 91 [-]: DIV       R12 R12 K16  ; R12 := R12 / 2.000000
 92 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
 93 [-]: SUB       R12 R6 R8    ; R12 := R6 - R8
 94 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 95 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
 96 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0xf64b7262]
 97 [-]: GETTABLE  R12 R1 K2    ; R12 := R1["mClipName"]
 98 [-]: LOADK     R13 K14      ; R13 := "Btn"
 99 [-]: CONST     R14 13       ; R14 := 13.000000
100 [-]: MOVE      R15 R8       ; R15 := R8
101 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
102 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
103 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0xf64b7262]
104 [-]: GETTABLE  R12 R1 K2    ; R12 := R1["mClipName"]
105 [-]: LOADK     R13 K14      ; R13 := "Btn"
106 [-]: CONST     R14 1        ; R14 := 1.000000
107 [-]: MOVE      R15 R9       ; R15 := R9
108 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
109 [-]: JMP       159          ; PC := 159
110 [-]: ADD       R10 R5 R6    ; R10 := R5 + R6
111 [-]: ADD       R11 R4 R3    ; R11 := R4 + R3
112 [-]: LT        0 R11 R10    ; if R11 >= R10 then PC := 140
113 [-]: JMP       140          ; PC := 140
114 [-]: ADD       R10 R4 R3    ; R10 := R4 + R3
115 [-]: SUB       R10 R10 R5   ; R10 := R10 - R5
116 [-]: GETUPVAL  R11 U2       ; R11 := U2
117 [-]: GETTABLE  R11 R11 K15  ; R11 := R11[0x06d055f9]
118 [-]: MOVE      R12 R7       ; R12 := R7
119 [-]: DIV       R13 R6 K16   ; R13 := R6 / 2.000000
120 [-]: SUB       R14 R6 R10   ; R14 := R6 - R10
121 [-]: DIV       R14 R14 K16  ; R14 := R14 / 2.000000
122 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
123 [-]: CONST     R14 0        ; R14 := 0.000000
124 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
125 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
126 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0xf64b7262]
127 [-]: GETTABLE  R14 R1 K2    ; R14 := R1["mClipName"]
128 [-]: LOADK     R15 K14      ; R15 := "Btn"
129 [-]: CONST     R16 13       ; R16 := 13.000000
130 [-]: MOVE      R17 R10      ; R17 := R10
131 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
132 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
133 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0xf64b7262]
134 [-]: GETTABLE  R14 R1 K2    ; R14 := R1["mClipName"]
135 [-]: LOADK     R15 K14      ; R15 := "Btn"
136 [-]: CONST     R16 1        ; R16 := 1.000000
137 [-]: MOVE      R17 R11      ; R17 := R11
138 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
139 [-]: JMP       159          ; PC := 159
140 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
141 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0xf64b7262]
142 [-]: GETTABLE  R14 R1 K2    ; R14 := R1["mClipName"]
143 [-]: LOADK     R15 K14      ; R15 := "Btn"
144 [-]: CONST     R16 13       ; R16 := 13.000000
145 [-]: MOVE      R17 R6       ; R17 := R6
146 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
147 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
148 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0xf64b7262]
149 [-]: GETTABLE  R14 R1 K2    ; R14 := R1["mClipName"]
150 [-]: LOADK     R15 K14      ; R15 := "Btn"
151 [-]: CONST     R16 1        ; R16 := 1.000000
152 [-]: GETUPVAL  R17 U2       ; R17 := U2
153 [-]: GETTABLE  R17 R17 K15  ; R17 := R17[0x06d055f9]
154 [-]: MOVE      R18 R7       ; R18 := R7
155 [-]: DIV       R19 R6 K16   ; R19 := R6 / 2.000000
156 [-]: CONST     R20 0        ; R20 := 0.000000
157 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
158 [-]: CALL      R12 0 1      ; R12(R13,...)
159 [-]: RETURN    R0 1         ; return 


; Function #67.4:
;
; Name:            
; Defined at line: 4224
; #Upvalues:       16
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  56

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: TEST      R1 1         ; if R1 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: TEST      R1 0         ; if not R1 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0x659d451f]
 15 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UISound_Focus"]
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["EntryId"]
 19 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xaade900e]
 21 [-]: LOADK     R4 K8        ; R4 := "InfoPanel.ConstructionProgressA"
 22 [-]: CONST     R5 11        ; R5 := 11.000000
 23 [-]: GETUPVAL  R6 U3        ; R6 := U3
 24 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["INVASION"]
 25 [-]: EQ        1 R1 R6      ; if R1 == R6 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 28
 28 [-]: LOADKB    R6 1 0       ; R6 := true
 29 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 30 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 31 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xaade900e]
 32 [-]: LOADK     R4 K10       ; R4 := "InfoPanel.ConstructionProgressB"
 33 [-]: CONST     R5 11        ; R5 := 11.000000
 34 [-]: GETUPVAL  R6 U3        ; R6 := U3
 35 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["INVASION"]
 36 [-]: EQ        1 R1 R6      ; if R1 == R6 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 39
 39 [-]: LOADKB    R6 1 0       ; R6 := true
 40 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 41 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mIsModifiersHint"]
 42 [-]: TEST      R2 1         ; if R2 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: GETGLOBAL R2 K12       ; R2 := 0x25312c9b
 45 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 46 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 47 [-]: LOADK     R5 K13       ; R5 := ".Highlight"
 48 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 49 [-]: CONST     R5 8         ; R5 := 8.000000
 50 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 51 [-]: CONST     R7 13        ; R7 := 13.000000
 52 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 53 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 54 [-]: CONST     R8 40        ; R8 := 40.000000
 55 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 56 [-]: CONST     R8 0         ; R8 := 0.250000
 57 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 58 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 59 [-]: LOADKB    R3 0 0       ; R3 := false
 60 [-]: GETUPVAL  R4 U3        ; R4 := U3
 61 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["SYND_MISSION"]
 62 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 98
 63 [-]: JMP       98           ; PC := 98
 64 [-]: GETGLOBAL R4 K16       ; R4 := 0x7b998233
 65 [-]: GETTABLE  R5 R0 K17    ; R5 := R0["DailyTask"]
 66 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 67 [-]: TEST      R4 1         ; if R4 then PC := 98
 68 [-]: JMP       98           ; PC := 98
 69 [-]: GETGLOBAL R4 K16       ; R4 := 0x7b998233
 70 [-]: GETTABLE  R5 R0 K18    ; R5 := R0["CodexEntry"]
 71 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 72 [-]: TEST      R4 1         ; if R4 then PC := 98
 73 [-]: JMP       98           ; PC := 98
 74 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 75 [-]: SETTABLE  R4 K19 K20   ; R4["CustomEntry"] := true
 76 [-]: GETGLOBAL R5 K6        ; R5 := 0xae91e43b
 77 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0x42b04007]
 78 [-]: LOADK     R7 K23       ; R7 := "/Lotus/Language/Syndicates/DailySimarisTaskTitle"
 79 [-]: LOADKB    R8 0 0       ; R8 := false
 80 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 81 [-]: SETTABLE  R4 K21 R5    ; R4["Name"] := R5
 82 [-]: GETGLOBAL R5 K6        ; R5 := 0xae91e43b
 83 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0x42b04007]
 84 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["CodexEntry"]
 85 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["locName"]
 86 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0x6d604ba7]
 87 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 88 [-]: LOADKB    R8 0 0       ; R8 := false
 89 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 90 [-]: LOADK     R6 K27       ; R6 := "<br><br>"
 91 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 92 [-]: SETTABLE  R4 K24 R5    ; R4["LocalizedDesc"] := R5
 93 [-]: GETTABLE  R5 R0 K18    ; R5 := R0["CodexEntry"]
 94 [-]: SETTABLE  R4 K18 R5    ; R4["CodexEntry"] := R5
 95 [-]: MOVE      R2 R4        ; R2 := R4
 96 [-]: LOADKB    R3 1 0       ; R3 := true
 97 [-]: JMP       696          ; PC := 696
 98 [-]: GETUPVAL  R4 U3        ; R4 := U3
 99 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["SORTIE"]
100 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 106
101 [-]: JMP       106          ; PC := 106
102 [-]: GETUPVAL  R4 U3        ; R4 := U3
103 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["LITE_SORTIE"]
104 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 412
105 [-]: JMP       412          ; PC := 412
106 [-]: GETTABLE  R4 R0 K30    ; R4 := R0["mIsUnlockHint"]
107 [-]: TEST      R4 1         ; if R4 then PC := 412
108 [-]: JMP       412          ; PC := 412
109 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["mIsModifiersHint"]
110 [-]: TEST      R4 0         ; if not R4 then PC := 118
111 [-]: JMP       118          ; PC := 118
112 [-]: GETTABLE  R4 R0 K31    ; R4 := R0["FocusedNerf"]
113 [-]: EQ        0 R4 K0      ; if R4 ~= nil then PC := 118
114 [-]: JMP       118          ; PC := 118
115 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["FocusedReward"]
116 [-]: TEST      R4 0         ; if not R4 then PC := 412
117 [-]: JMP       412          ; PC := 412
118 [-]: GETTABLE  R4 R0 K31    ; R4 := R0["FocusedNerf"]
119 [-]: TEST      R4 0         ; if not R4 then PC := 178
120 [-]: JMP       178          ; PC := 178
121 [-]: NEWTABLE  R4 0 1       ; R4 := {}
122 [-]: SETTABLE  R4 K19 K20   ; R4["CustomEntry"] := true
123 [-]: MOVE      R2 R4        ; R2 := R4
124 [-]: LOADK     R4 K33       ; R4 := ""
125 [-]: LOADK     R5 K33       ; R5 := ""
126 [-]: GETTABLE  R6 R0 K31    ; R6 := R0["FocusedNerf"]
127 [-]: EQ        0 R6 K34     ; if R6 ~= 1.000000 then PC := 132
128 [-]: JMP       132          ; PC := 132
129 [-]: LOADK     R4 K35       ; R4 := "/Lotus/Language/WorldStateWindow/NerfRespawnPopupTitle"
130 [-]: LOADK     R5 K36       ; R5 := "/Lotus/Language/WorldStateWindow/NerfRespawnPopupDesc"
131 [-]: JMP       140          ; PC := 140
132 [-]: GETTABLE  R6 R0 K31    ; R6 := R0["FocusedNerf"]
133 [-]: EQ        0 R6 K37     ; if R6 ~= 2.000000 then PC := 138
134 [-]: JMP       138          ; PC := 138
135 [-]: LOADK     R4 K38       ; R4 := "/Lotus/Language/WorldStateWindow/NerfConsumablesPopupTitle"
136 [-]: LOADK     R5 K39       ; R5 := "/Lotus/Language/WorldStateWindow/NerfConsumablesPopupDesc"
137 [-]: JMP       140          ; PC := 140
138 [-]: LOADK     R4 K40       ; R4 := "/Lotus/Language/WorldStateWindow/NerfEnemiesPopupTitle"
139 [-]: LOADK     R5 K41       ; R5 := "/Lotus/Language/WorldStateWindow/NerfEnemiesPopupDesc"
140 [-]: GETGLOBAL R6 K6        ; R6 := 0xae91e43b
141 [-]: SELF      R6 R6 K22    ; R7 := R6; R6 := R6[0x42b04007]
142 [-]: MOVE      R8 R4        ; R8 := R4
143 [-]: LOADKB    R9 0 0       ; R9 := false
144 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
145 [-]: SETTABLE  R2 K21 R6    ; R2["Name"] := R6
146 [-]: LOADK     R6 K42       ; R6 := "<font color=\""
147 [-]: GETUPVAL  R7 U4        ; R7 := U4
148 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["FloatingContentHex"]
149 [-]: LOADK     R8 K44       ; R8 := "\">"
150 [-]: CONCAT    R6 R6 R8     ; R6 := R6 .. R7 .. R8
151 [-]: LOADK     R7 K42       ; R7 := "<font color=\""
152 [-]: GETUPVAL  R8 U4        ; R8 := U4
153 [-]: GETTABLE  R8 R8 K45    ; R8 := R8["FloatingContentHighlightHex"]
154 [-]: LOADK     R9 K44       ; R9 := "\">"
155 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
156 [-]: LOADK     R8 K46       ; R8 := "</font>"
157 [-]: NEWTABLE  R9 0 3       ; R9 := {}
158 [-]: SETTABLE  R9 K47 R6    ; R9["OPEN_COLOR1"] := R6
159 [-]: SETTABLE  R9 K48 R7    ; R9["OPEN_COLOR2"] := R7
160 [-]: SETTABLE  R9 K49 R8    ; R9["CLOSE_COLOR"] := R8
161 [-]: GETTABLE  R10 R0 K31   ; R10 := R0["FocusedNerf"]
162 [-]: EQ        0 R10 K34    ; if R10 ~= 1.000000 then PC := 170
163 [-]: JMP       170          ; PC := 170
164 [-]: GETGLOBAL R10 K51      ; R10 := _T
165 [-]: GETTABLE  R10 R10 K52  ; R10 := R10["LiteSortieSecondChanceTimerReduction"]
166 [-]: TEST      R10 1        ; if R10 then PC := 169
167 [-]: JMP       169          ; PC := 169
168 [-]: CONST     R10 2        ; R10 := 2.000000
169 [-]: SETTABLE  R9 K50 R10   ; R9["VALUE"] := R10
170 [-]: GETGLOBAL R10 K6       ; R10 := 0xae91e43b
171 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0x42b04007]
172 [-]: MOVE      R12 R5       ; R12 := R5
173 [-]: LOADKB    R13 0 0      ; R13 := false
174 [-]: MOVE      R14 R9       ; R14 := R9
175 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
176 [-]: SETTABLE  R2 K24 R10   ; R2["LocalizedDesc"] := R10
177 [-]: JMP       410          ; PC := 410
178 [-]: GETUPVAL  R10 U2       ; R10 := U2
179 [-]: GETTABLE  R10 R10 K53  ; R10 := R10[0x06d055f9]
180 [-]: GETUPVAL  R11 U3       ; R11 := U3
181 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["SORTIE"]
182 [-]: EQ        1 R1 R11     ; if R1 == R11 then PC := 185
183 [-]: JMP       185          ; PC := 185
184 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 185
185 [-]: LOADKB    R11 1 0      ; R11 := true
186 [-]: GETUPVAL  R12 U5       ; R12 := U5
187 [-]: GETUPVAL  R13 U6       ; R13 := U6
188 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
189 [-]: NEWTABLE  R11 0 2      ; R11 := {}
190 [-]: SETTABLE  R11 K19 K20  ; R11["CustomEntry"] := true
191 [-]: GETUPVAL  R12 U7       ; R12 := U7
192 [-]: GETTABLE  R12 R12 K54  ; R12 := R12[0x66a0dabf]
193 [-]: GETGLOBAL R13 K6       ; R13 := 0xae91e43b
194 [-]: GETTABLE  R14 R10 K55  ; R14 := R10["RewardTable"]
195 [-]: LOADKB    R15 1 0      ; R15 := true
196 [-]: CONST     R16 15       ; R16 := 15.000000
197 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
198 [-]: SETTABLE  R11 K24 R12  ; R11["LocalizedDesc"] := R12
199 [-]: MOVE      R2 R11       ; R2 := R11
200 [-]: LOADK     R11 K56      ; R11 := "/Lotus/Language/Menu/AlertPopup_Rewards"
201 [-]: GETUPVAL  R12 U2       ; R12 := U2
202 [-]: GETTABLE  R12 R12 K53  ; R12 := R12[0x06d055f9]
203 [-]: GETUPVAL  R13 U3       ; R13 := U3
204 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["SORTIE"]
205 [-]: EQ        1 R1 R13     ; if R1 == R13 then PC := 208
206 [-]: JMP       208          ; PC := 208
207 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 208
208 [-]: LOADKB    R13 1 0      ; R13 := true
209 [-]: GETGLOBAL R14 K51      ; R14 := _T
210 [-]: GETTABLE  R14 R14 K57  ; R14 := R14["CachedSortieRewardManifest"]
211 [-]: GETGLOBAL R15 K51      ; R15 := _T
212 [-]: GETTABLE  R15 R15 K58  ; R15 := R15["CachedLiteSortieRewardManifest"]
213 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
214 [-]: GETGLOBAL R13 K16      ; R13 := 0x7b998233
215 [-]: MOVE      R14 R12      ; R14 := R12
216 [-]: CALL      R13 2 2      ; R13 := R13(R14)
217 [-]: TEST      R13 1        ; if R13 then PC := 224
218 [-]: JMP       224          ; PC := 224
219 [-]: SELF      R13 R12 K59  ; R14 := R12; R13 := R12[0xaf8359c4]
220 [-]: CALL      R13 2 2      ; R13 := R13(R14)
221 [-]: SELF      R13 R13 K26  ; R14 := R13; R13 := R13[0x6d604ba7]
222 [-]: CALL      R13 2 2      ; R13 := R13(R14)
223 [-]: MOVE      R11 R13      ; R11 := R13
224 [-]: GETGLOBAL R13 K6       ; R13 := 0xae91e43b
225 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x42b04007]
226 [-]: MOVE      R15 R11      ; R15 := R11
227 [-]: LOADKB    R16 0 0      ; R16 := false
228 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
229 [-]: SETTABLE  R2 K21 R13   ; R2["Name"] := R13
230 [-]: GETUPVAL  R13 U8       ; R13 := U8
231 [-]: CALL      R13 1 2      ; R13 := R13()
232 [-]: LOADNIL   R14 R14      ; R14 := nil
233 [-]: GETGLOBAL R15 K16      ; R15 := 0x7b998233
234 [-]: MOVE      R16 R13      ; R16 := R13
235 [-]: CALL      R15 2 2      ; R15 := R15(R16)
236 [-]: TEST      R15 1        ; if R15 then PC := 273
237 [-]: JMP       273          ; PC := 273
238 [-]: GETUPVAL  R15 U2       ; R15 := U2
239 [-]: GETTABLE  R15 R15 K53  ; R15 := R15[0x06d055f9]
240 [-]: GETUPVAL  R16 U3       ; R16 := U3
241 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["SORTIE"]
242 [-]: EQ        1 R1 R16     ; if R1 == R16 then PC := 245
243 [-]: JMP       245          ; PC := 245
244 [-]: LOADKB    R16 0 1      ; R16 := false; PC := 245
245 [-]: LOADKB    R16 1 0      ; R16 := true
246 [-]: SELF      R17 R13 K60  ; R18 := R13; R17 := R13[0xbb836e07]
247 [-]: CALL      R17 2 2      ; R17 := R17(R18)
248 [-]: SELF      R18 R13 K61  ; R19 := R13; R18 := R13[0xfa96a013]
249 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
250 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
251 [-]: MOVE      R14 R15      ; R14 := R15
252 [-]: GETGLOBAL R15 K16      ; R15 := 0x7b998233
253 [-]: MOVE      R16 R14      ; R16 := R14
254 [-]: CALL      R15 2 2      ; R15 := R15(R16)
255 [-]: TEST      R15 1        ; if R15 then PC := 272
256 [-]: JMP       272          ; PC := 272
257 [-]: LEN       R15 R14      ; R15 := # R14
258 [-]: EQ        1 R15 K62    ; if R15 == 0.000000 then PC := 272
259 [-]: JMP       272          ; PC := 272
260 [-]: GETGLOBAL R15 K16      ; R15 := 0x7b998233
261 [-]: MOVE      R16 R12      ; R16 := R12
262 [-]: CALL      R15 2 2      ; R15 := R15(R16)
263 [-]: TEST      R15 1        ; if R15 then PC := 272
264 [-]: JMP       272          ; PC := 272
265 [-]: SELF      R15 R12 K63  ; R16 := R12; R15 := R12[0xf2deaf69]
266 [-]: LEN       R17 R14      ; R17 := # R14
267 [-]: GETTABLE  R17 R14 R17  ; R17 := R14[R17]
268 [-]: GETTABLE  R17 R17 K64  ; R17 := R17["mManifest"]
269 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
270 [-]: TEST      R15 1        ; if R15 then PC := 273
271 [-]: JMP       273          ; PC := 273
272 [-]: LOADNIL   R14 R14      ; R14 := nil
273 [-]: GETUPVAL  R15 U2       ; R15 := U2
274 [-]: GETTABLE  R15 R15 K53  ; R15 := R15[0x06d055f9]
275 [-]: GETUPVAL  R16 U3       ; R16 := U3
276 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["SORTIE"]
277 [-]: EQ        1 R1 R16     ; if R1 == R16 then PC := 280
278 [-]: JMP       280          ; PC := 280
279 [-]: LOADKB    R16 0 1      ; R16 := false; PC := 280
280 [-]: LOADKB    R16 1 0      ; R16 := true
281 [-]: LOADK     R17 K65      ; R17 := "/Lotus/Language/Sorties/SortieSeasonRewardsHint"
282 [-]: LOADK     R18 K66      ; R18 := "/Lotus/Language/WorldStateWindow/LiteSortieSeasonRewardsHint"
283 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
284 [-]: LOADKB    R16 0 0      ; R16 := false
285 [-]: GETGLOBAL R17 K16      ; R17 := 0x7b998233
286 [-]: MOVE      R18 R14      ; R18 := R14
287 [-]: CALL      R17 2 2      ; R17 := R17(R18)
288 [-]: TEST      R17 1        ; if R17 then PC := 316
289 [-]: JMP       316          ; PC := 316
290 [-]: GETGLOBAL R17 K67      ; R17 := 0xcfc01047
291 [-]: MOVE      R18 R14      ; R18 := R14
292 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
293 [-]: JMP       314          ; PC := 314
294 [-]: GETTABLE  R22 R21 K68  ; R22 := R21["mSortieId"]
295 [-]: GETTABLE  R22 R22 K69  ; R22 := R22["mId"]
296 [-]: GETUPVAL  R23 U2       ; R23 := U2
297 [-]: GETTABLE  R23 R23 K53  ; R23 := R23[0x06d055f9]
298 [-]: GETUPVAL  R24 U3       ; R24 := U3
299 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["SORTIE"]
300 [-]: EQ        1 R1 R24     ; if R1 == R24 then PC := 303
301 [-]: JMP       303          ; PC := 303
302 [-]: LOADKB    R24 0 1      ; R24 := false; PC := 303
303 [-]: LOADKB    R24 1 0      ; R24 := true
304 [-]: GETGLOBAL R25 K51      ; R25 := _T
305 [-]: GETTABLE  R25 R25 K70  ; R25 := R25["CachedSortieId"]
306 [-]: GETGLOBAL R26 K51      ; R26 := _T
307 [-]: GETTABLE  R26 R26 K71  ; R26 := R26["CachedLiteSortieId"]
308 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
309 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 314
310 [-]: JMP       314          ; PC := 314
311 [-]: LOADK     R15 K72      ; R15 := "/Lotus/Language/Sorties/SortieSeasonRewardsCompletedHint"
312 [-]: LOADKB    R16 1 0      ; R16 := true
313 [-]: JMP       316          ; PC := 316
314 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 294; R19 := R20 end
315 [-]: JMP       294          ; PC := 294
316 [-]: LOADK     R22 K33      ; R22 := ""
317 [-]: LOADK     R23 K33      ; R23 := ""
318 [-]: GETGLOBAL R24 K16      ; R24 := 0x7b998233
319 [-]: GETTABLE  R25 R10 K73  ; R25 := R10["CrystalStoreItem"]
320 [-]: CALL      R24 2 2      ; R24 := R24(R25)
321 [-]: TEST      R24 1        ; if R24 then PC := 368
322 [-]: JMP       368          ; PC := 368
323 [-]: GETGLOBAL R24 K6       ; R24 := 0xae91e43b
324 [-]: SELF      R24 R24 K22  ; R25 := R24; R24 := R24[0x42b04007]
325 [-]: GETTABLE  R26 R10 K73  ; R26 := R10["CrystalStoreItem"]
326 [-]: SELF      R26 R26 K74  ; R27 := R26; R26 := R26[0xd3a9d01f]
327 [-]: CALL      R26 2 2      ; R26 := R26(R27)
328 [-]: SELF      R26 R26 K26  ; R27 := R26; R26 := R26[0x6d604ba7]
329 [-]: CALL      R26 2 2      ; R26 := R26(R27)
330 [-]: LOADKB    R27 1 0      ; R27 := true
331 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
332 [-]: MOVE      R22 R24      ; R22 := R24
333 [-]: GETUPVAL  R24 U2       ; R24 := U2
334 [-]: GETTABLE  R24 R24 K75  ; R24 := R24[0x1142c7a8]
335 [-]: GETTABLE  R25 R10 K76  ; R25 := R10["CrystalMythicProb"]
336 [-]: MUL       R25 R25 K77  ; R25 := R25 * 100.000000
337 [-]: CALL      R24 2 2      ; R24 := R24(R25)
338 [-]: LOADK     R25 K78      ; R25 := "%"
339 [-]: CONCAT    R23 R24 R25  ; R23 := R24 .. R25
340 [-]: LOADK     R24 K79      ; R24 := "<br><br><font color=\""
341 [-]: GETUPVAL  R25 U4       ; R25 := U4
342 [-]: GETTABLE  R25 R25 K45  ; R25 := R25["FloatingContentHighlightHex"]
343 [-]: LOADK     R26 K44      ; R26 := "\">"
344 [-]: GETGLOBAL R27 K6       ; R27 := 0xae91e43b
345 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27[0x42b04007]
346 [-]: LOADK     R29 K80      ; R29 := "/Lotus/Language/WorldStateWindow/LiteSortieFixedRewardHeader"
347 [-]: LOADKB    R30 0 0      ; R30 := false
348 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
349 [-]: LOADK     R28 K81      ; R28 := "</font><br>    "
350 [-]: CONCAT    R24 R24 R28  ; R24 := R24 .. R25 .. R26 .. R27 .. R28
351 [-]: TEST      R16 0        ; if not R16 then PC := 361
352 [-]: JMP       361          ; PC := 361
353 [-]: GETGLOBAL R25 K6       ; R25 := 0xae91e43b
354 [-]: SELF      R25 R25 K22  ; R26 := R25; R25 := R25[0x42b04007]
355 [-]: LOADK     R27 K82      ; R27 := "<CHECKMARK_NO_BORDER>"
356 [-]: LOADKB    R28 1 0      ; R28 := true
357 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
358 [-]: MOVE      R26 R24      ; R26 := R24
359 [-]: MOVE      R27 R25      ; R27 := R25
360 [-]: CONCAT    R24 R26 R27  ; R24 := R26 .. R27
361 [-]: MOVE      R26 R24      ; R26 := R24
362 [-]: MOVE      R27 R22      ; R27 := R22
363 [-]: CONCAT    R24 R26 R27  ; R24 := R26 .. R27
364 [-]: GETTABLE  R26 R2 K24   ; R26 := R2["LocalizedDesc"]
365 [-]: MOVE      R27 R24      ; R27 := R24
366 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
367 [-]: SETTABLE  R2 K24 R26   ; R2["LocalizedDesc"] := R26
368 [-]: GETGLOBAL R26 K6       ; R26 := 0xae91e43b
369 [-]: SELF      R26 R26 K22  ; R27 := R26; R26 := R26[0x42b04007]
370 [-]: MOVE      R28 R15      ; R28 := R15
371 [-]: LOADKB    R29 0 0      ; R29 := false
372 [-]: NEWTABLE  R30 0 2      ; R30 := {}
373 [-]: SETTABLE  R30 K83 R22  ; R30["CRYSTAL"] := R22
374 [-]: SETTABLE  R30 K84 R23  ; R30["PERCENT"] := R23
375 [-]: CALL      R26 5 2      ; R26 := R26(R27,R28,R29,R30)
376 [-]: GETTABLE  R27 R2 K24   ; R27 := R2["LocalizedDesc"]
377 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
378 [-]: SETTABLE  R2 K24 R26   ; R2["LocalizedDesc"] := R26
379 [-]: NEWTABLE  R26 0 0      ; R26 := {}
380 [-]: GETGLOBAL R27 K6       ; R27 := 0xae91e43b
381 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27[0x42b04007]
382 [-]: LOADK     R29 K85      ; R29 := "/Lotus/Language/UiElements/SortieSeasonRewardsCompleteCount"
383 [-]: LOADKB    R30 0 0      ; R30 := false
384 [-]: NEWTABLE  R31 0 2      ; R31 := {}
385 [-]: GETUPVAL  R32 U2       ; R32 := U2
386 [-]: GETTABLE  R32 R32 K75  ; R32 := R32[0x1142c7a8]
387 [-]: GETTABLE  R33 R10 K87  ; R33 := R10["NumCompleted"]
388 [-]: CALL      R32 2 2      ; R32 := R32(R33)
389 [-]: SETTABLE  R31 K86 R32  ; R31["COMPLETE"] := R32
390 [-]: GETUPVAL  R32 U2       ; R32 := U2
391 [-]: GETTABLE  R32 R32 K75  ; R32 := R32[0x1142c7a8]
392 [-]: GETTABLE  R33 R10 K89  ; R33 := R10["NumMissions"]
393 [-]: CALL      R32 2 2      ; R32 := R32(R33)
394 [-]: SETTABLE  R31 K88 R32  ; R31["TOTAL"] := R32
395 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
396 [-]: GETUPVAL  R28 U9       ; R28 := U9
397 [-]: GETTABLE  R28 R28 K90  ; R28 := R28[0x0f164e09]
398 [-]: GETUPVAL  R29 U9       ; R29 := U9
399 [-]: GETTABLE  R29 R29 K91  ; R29 := R29["LABEL_TYPE_UNIQUE_TEXT"]
400 [-]: MOVE      R30 R27      ; R30 := R27
401 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
402 [-]: GETGLOBAL R29 K92      ; R29 := 0x33bdd652
403 [-]: GETTABLE  R29 R29 K93  ; R29 := R29[0x23d5322f]
404 [-]: MOVE      R30 R26      ; R30 := R26
405 [-]: MOVE      R31 R28      ; R31 := R28
406 [-]: CALL      R29 3 1      ; R29(R30,R31)
407 [-]: NEWTABLE  R29 0 1      ; R29 := {}
408 [-]: SETTABLE  R29 K95 R26  ; R29["CustomTags"] := R26
409 [-]: SETTABLE  R2 K94 R29   ; R2["MetaData"] := R29
410 [-]: LOADKB    R3 1 0       ; R3 := true
411 [-]: JMP       696          ; PC := 696
412 [-]: GETUPVAL  R29 U3       ; R29 := U3
413 [-]: GETTABLE  R29 R29 K96  ; R29 := R29["ALERT"]
414 [-]: EQ        0 R1 R29     ; if R1 ~= R29 then PC := 484
415 [-]: JMP       484          ; PC := 484
416 [-]: LOADNIL   R29 R29      ; R29 := nil
417 [-]: GETGLOBAL R30 K16      ; R30 := 0x7b998233
418 [-]: GETTABLE  R31 R0 K97   ; R31 := R0["mAlertInfo"]
419 [-]: CALL      R30 2 2      ; R30 := R30(R31)
420 [-]: TEST      R30 1        ; if R30 then PC := 450
421 [-]: JMP       450          ; PC := 450
422 [-]: GETTABLE  R30 R0 K97   ; R30 := R0["mAlertInfo"]
423 [-]: GETTABLE  R30 R30 K98  ; R30 := R30["mMissionInfo"]
424 [-]: GETTABLE  R30 R30 K99  ; R30 := R30["missionReward"]
425 [-]: GETTABLE  R31 R30 K100 ; R31 := R30["items"]
426 [-]: LEN       R31 R31      ; R31 := # R31
427 [-]: LT        0 K62 R31    ; if 0.000000 >= R31 then PC := 432
428 [-]: JMP       432          ; PC := 432
429 [-]: GETTABLE  R31 R30 K100 ; R31 := R30["items"]
430 [-]: GETTABLE  R29 R31 K34  ; R29 := R31[1.000000]
431 [-]: JMP       450          ; PC := 450
432 [-]: GETTABLE  R31 R30 K101 ; R31 := R30["countedItems"]
433 [-]: LEN       R31 R31      ; R31 := # R31
434 [-]: LT        0 K62 R31    ; if 0.000000 >= R31 then PC := 450
435 [-]: JMP       450          ; PC := 450
436 [-]: GETGLOBAL R31 K102     ; R31 := 0xbe190284
437 [-]: SELF      R31 R31 K103 ; R32 := R31; R31 := R31[0xa1c390fe]
438 [-]: CALL      R31 2 2      ; R31 := R31(R32)
439 [-]: GETGLOBAL R32 K16      ; R32 := 0x7b998233
440 [-]: MOVE      R33 R31      ; R33 := R31
441 [-]: CALL      R32 2 2      ; R32 := R32(R33)
442 [-]: TEST      R32 1        ; if R32 then PC := 450
443 [-]: JMP       450          ; PC := 450
444 [-]: SELF      R32 R31 K104 ; R33 := R31; R32 := R31[0x105074fb]
445 [-]: GETTABLE  R34 R30 K101 ; R34 := R30["countedItems"]
446 [-]: GETTABLE  R34 R34 K34  ; R34 := R34[1.000000]
447 [-]: GETTABLE  R34 R34 K105 ; R34 := R34["mItemType"]
448 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
449 [-]: MOVE      R29 R32      ; R29 := R32
450 [-]: GETGLOBAL R32 K16      ; R32 := 0x7b998233
451 [-]: MOVE      R33 R29      ; R33 := R29
452 [-]: CALL      R32 2 2      ; R32 := R32(R33)
453 [-]: TEST      R32 1        ; if R32 then PC := 696
454 [-]: JMP       696          ; PC := 696
455 [-]: GETUPVAL  R32 U7       ; R32 := U7
456 [-]: GETTABLE  R32 R32 K106 ; R32 := R32[0x08681f50]
457 [-]: GETGLOBAL R33 K6       ; R33 := 0xae91e43b
458 [-]: MOVE      R34 R29      ; R34 := R29
459 [-]: LOADNIL   R35 R37      ; R35 := R36 := R37 := nil
460 [-]: LOADKB    R38 1 0      ; R38 := true
461 [-]: CALL      R32 7 2      ; R32 := R32(R33,R34,R35,R36,R37,R38)
462 [-]: MOVE      R2 R32       ; R2 := R32
463 [-]: GETGLOBAL R32 K16      ; R32 := 0x7b998233
464 [-]: SELF      R33 R29 K107 ; R34 := R29; R33 := R29[0xf278f8a1]
465 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
466 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
467 [-]: TEST      R32 1        ; if R32 then PC := 482
468 [-]: JMP       482          ; PC := 482
469 [-]: SELF      R32 R29 K107 ; R33 := R29; R32 := R29[0xf278f8a1]
470 [-]: CALL      R32 2 2      ; R32 := R32(R33)
471 [-]: SELF      R32 R32 K63  ; R33 := R32; R32 := R32[0xf2deaf69]
472 [-]: GETUPVAL  R34 U10      ; R34 := U10
473 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
474 [-]: TEST      R32 0        ; if not R32 then PC := 482
475 [-]: JMP       482          ; PC := 482
476 [-]: GETGLOBAL R32 K6       ; R32 := 0xae91e43b
477 [-]: SELF      R32 R32 K22  ; R33 := R32; R32 := R32[0x42b04007]
478 [-]: LOADK     R34 K109     ; R34 := "/Lotus/Language/Items/OmegaModGenericDesc"
479 [-]: LOADKB    R35 0 0      ; R35 := false
480 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
481 [-]: SETTABLE  R2 K108 R32  ; R2["mModDescOverride"] := R32
482 [-]: LOADKB    R3 1 0       ; R3 := true
483 [-]: JMP       696          ; PC := 696
484 [-]: GETUPVAL  R32 U3       ; R32 := U3
485 [-]: GETTABLE  R32 R32 K9   ; R32 := R32["INVASION"]
486 [-]: EQ        0 R1 R32     ; if R1 ~= R32 then PC := 496
487 [-]: JMP       496          ; PC := 496
488 [-]: GETUPVAL  R32 U11      ; R32 := U11
489 [-]: GETTABLE  R32 R32 K110 ; R32 := R32[0xc4c98930]
490 [-]: GETGLOBAL R33 K6       ; R33 := 0xae91e43b
491 [-]: MOVE      R34 R0       ; R34 := R0
492 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
493 [-]: MOVE      R2 R32       ; R2 := R32
494 [-]: LOADKB    R3 1 0       ; R3 := true
495 [-]: JMP       696          ; PC := 696
496 [-]: GETUPVAL  R32 U3       ; R32 := U3
497 [-]: GETTABLE  R32 R32 K111 ; R32 := R32["QUEST"]
498 [-]: EQ        0 R1 R32     ; if R1 ~= R32 then PC := 585
499 [-]: JMP       585          ; PC := 585
500 [-]: GETUPVAL  R32 U12      ; R32 := U12
501 [-]: GETTABLE  R33 R0 K112  ; R33 := R0["QuestIndex"]
502 [-]: GETTABLE  R32 R32 R33  ; R32 := R32[R33]
503 [-]: GETGLOBAL R33 K16      ; R33 := 0x7b998233
504 [-]: MOVE      R34 R32      ; R34 := R32
505 [-]: CALL      R33 2 2      ; R33 := R33(R34)
506 [-]: TEST      R33 1        ; if R33 then PC := 696
507 [-]: JMP       696          ; PC := 696
508 [-]: GETTABLE  R33 R32 K113 ; R33 := R32["IsLoaded"]
509 [-]: TEST      R33 0        ; if not R33 then PC := 696
510 [-]: JMP       696          ; PC := 696
511 [-]: GETTABLE  R33 R32 K114 ; R33 := R32["IsJunctionOverride"]
512 [-]: TEST      R33 1        ; if R33 then PC := 696
513 [-]: JMP       696          ; PC := 696
514 [-]: GETTABLE  R33 R32 K115 ; R33 := R32["Quest"]
515 [-]: GETTABLE  R34 R0 K116  ; R34 := R0["NodeIndex"]
516 [-]: EQ        1 R34 K0     ; if R34 == nil then PC := 548
517 [-]: JMP       548          ; PC := 548
518 [-]: GETGLOBAL R34 K51      ; R34 := _T
519 [-]: GETTABLE  R34 R34 K117 ; R34 := R34["CustomStarChartNodeFilter"]
520 [-]: TEST      R34 0        ; if not R34 then PC := 548
521 [-]: JMP       548          ; PC := 548
522 [-]: GETGLOBAL R34 K51      ; R34 := _T
523 [-]: GETTABLE  R34 R34 K117 ; R34 := R34["CustomStarChartNodeFilter"]
524 [-]: GETTABLE  R34 R34 K118 ; R34 := R34["Keys"]
525 [-]: TEST      R34 0        ; if not R34 then PC := 548
526 [-]: JMP       548          ; PC := 548
527 [-]: GETTABLE  R34 R32 K119 ; R34 := R32["Nodes"]
528 [-]: GETTABLE  R35 R0 K116  ; R35 := R0["NodeIndex"]
529 [-]: GETTABLE  R34 R34 R35  ; R34 := R34[R35]
530 [-]: GETGLOBAL R35 K67      ; R35 := 0xcfc01047
531 [-]: GETGLOBAL R36 K51      ; R36 := _T
532 [-]: GETTABLE  R36 R36 K117 ; R36 := R36["CustomStarChartNodeFilter"]
533 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["Keys"]
534 [-]: CALL      R35 2 4      ; R35,R36,R37 := R35(R36)
535 [-]: JMP       546          ; PC := 546
536 [-]: GETGLOBAL R40 K120     ; R40 := 0xb009bbc6
537 [-]: MOVE      R41 R39      ; R41 := R39
538 [-]: CALL      R40 2 2      ; R40 := R40(R41)
539 [-]: MOVE      R39 R40      ; R39 := R40
540 [-]: SELF      R40 R39 K121 ; R41 := R39; R40 := R39[0x92608d86]
541 [-]: CALL      R40 2 2      ; R40 := R40(R41)
542 [-]: EQ        0 R40 R34    ; if R40 ~= R34 then PC := 546
543 [-]: JMP       546          ; PC := 546
544 [-]: MOVE      R33 R39      ; R33 := R39
545 [-]: JMP       548          ; PC := 548
546 [-]: TFORLOOP  R35 2        ; R38,R39 :=  R35(R36,R37); if R38 ~= nil then begin PC = 536; R37 := R38 end
547 [-]: JMP       536          ; PC := 536
548 [-]: GETGLOBAL R40 K16      ; R40 := 0x7b998233
549 [-]: MOVE      R41 R33      ; R41 := R33
550 [-]: CALL      R40 2 2      ; R40 := R40(R41)
551 [-]: TEST      R40 1        ; if R40 then PC := 696
552 [-]: JMP       696          ; PC := 696
553 [-]: GETGLOBAL R40 K6       ; R40 := 0xae91e43b
554 [-]: SELF      R40 R40 K22  ; R41 := R40; R40 := R40[0x42b04007]
555 [-]: SELF      R42 R33 K122 ; R43 := R33; R42 := R33[0x5ba460ac]
556 [-]: CALL      R42 2 2      ; R42 := R42(R43)
557 [-]: SELF      R42 R42 K26  ; R43 := R42; R42 := R42[0x6d604ba7]
558 [-]: CALL      R42 2 2      ; R42 := R42(R43)
559 [-]: LOADKB    R43 0 0      ; R43 := false
560 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
561 [-]: LEN       R41 R40      ; R41 := # R40
562 [-]: LT        0 K62 R41    ; if 0.000000 >= R41 then PC := 696
563 [-]: JMP       696          ; PC := 696
564 [-]: NEWTABLE  R41 0 3      ; R41 := {}
565 [-]: SETTABLE  R41 K19 K20  ; R41["CustomEntry"] := true
566 [-]: GETGLOBAL R42 K6       ; R42 := 0xae91e43b
567 [-]: SELF      R42 R42 K22  ; R43 := R42; R42 := R42[0x42b04007]
568 [-]: GETTABLE  R44 R32 K115 ; R44 := R32["Quest"]
569 [-]: SELF      R44 R44 K74  ; R45 := R44; R44 := R44[0xd3a9d01f]
570 [-]: CALL      R44 2 2      ; R44 := R44(R45)
571 [-]: SELF      R44 R44 K26  ; R45 := R44; R44 := R44[0x6d604ba7]
572 [-]: CALL      R44 2 2      ; R44 := R44(R45)
573 [-]: LOADKB    R45 0 0      ; R45 := false
574 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
575 [-]: SETTABLE  R41 K21 R42  ; R41["Name"] := R42
576 [-]: GETGLOBAL R42 K6       ; R42 := 0xae91e43b
577 [-]: SELF      R42 R42 K22  ; R43 := R42; R42 := R42[0x42b04007]
578 [-]: MOVE      R44 R40      ; R44 := R40
579 [-]: LOADKB    R45 0 0      ; R45 := false
580 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
581 [-]: SETTABLE  R41 K24 R42  ; R41["LocalizedDesc"] := R42
582 [-]: MOVE      R2 R41       ; R2 := R41
583 [-]: LOADKB    R3 1 0       ; R3 := true
584 [-]: JMP       696          ; PC := 696
585 [-]: GETUPVAL  R41 U3       ; R41 := U3
586 [-]: GETTABLE  R41 R41 K123 ; R41 := R41["EVENT"]
587 [-]: EQ        0 R1 R41     ; if R1 ~= R41 then PC := 696
588 [-]: JMP       696          ; PC := 696
589 [-]: GETTABLE  R41 R0 K124  ; R41 := R0["IsHeatFissureEvent"]
590 [-]: TEST      R41 0        ; if not R41 then PC := 617
591 [-]: JMP       617          ; PC := 617
592 [-]: NEWTABLE  R41 0 4      ; R41 := {}
593 [-]: SETTABLE  R41 K19 K20  ; R41["CustomEntry"] := true
594 [-]: GETGLOBAL R42 K6       ; R42 := 0xae91e43b
595 [-]: SELF      R42 R42 K22  ; R43 := R42; R42 := R42[0x42b04007]
596 [-]: GETTABLE  R44 R0 K125  ; R44 := R0["EventInfo"]
597 [-]: GETTABLE  R44 R44 K126 ; R44 := R44["mDesc"]
598 [-]: LOADKB    R45 0 0      ; R45 := false
599 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
600 [-]: SETTABLE  R41 K21 R42  ; R41["Name"] := R42
601 [-]: GETGLOBAL R42 K6       ; R42 := 0xae91e43b
602 [-]: SELF      R42 R42 K22  ; R43 := R42; R42 := R42[0x42b04007]
603 [-]: LOADK     R44 K127     ; R44 := "/Lotus/Language/Menu/MiniGameScore"
604 [-]: LOADKB    R45 0 0      ; R45 := false
605 [-]: NEWTABLE  R46 0 1      ; R46 := {}
606 [-]: GETGLOBAL R47 K129     ; R47 := 0x64fb1586
607 [-]: GETTABLE  R48 R0 K130  ; R48 := R0["Count"]
608 [-]: CALL      R47 2 2      ; R47 := R47(R48)
609 [-]: SETTABLE  R46 K128 R47 ; R46["SCORE"] := R47
610 [-]: CALL      R42 5 2      ; R42 := R42(R43,R44,R45,R46)
611 [-]: SETTABLE  R41 K24 R42  ; R41["LocalizedDesc"] := R42
612 [-]: GETTABLE  R42 R0 K131  ; R42 := R0["IngredientOverride"]
613 [-]: SETTABLE  R41 K131 R42 ; R41["IngredientOverride"] := R42
614 [-]: MOVE      R2 R41       ; R2 := R41
615 [-]: LOADKB    R3 1 0       ; R3 := true
616 [-]: JMP       696          ; PC := 696
617 [-]: GETTABLE  R41 R0 K125  ; R41 := R0["EventInfo"]
618 [-]: GETTABLE  R41 R41 K132 ; R41 := R41["mFomorian"]
619 [-]: TEST      R41 0        ; if not R41 then PC := 696
620 [-]: JMP       696          ; PC := 696
621 [-]: GETTABLE  R41 R0 K131  ; R41 := R0["IngredientOverride"]
622 [-]: LEN       R41 R41      ; R41 := # R41
623 [-]: LT        0 K62 R41    ; if 0.000000 >= R41 then PC := 696
624 [-]: JMP       696          ; PC := 696
625 [-]: NEWTABLE  R41 0 3      ; R41 := {}
626 [-]: SETTABLE  R41 K19 K20  ; R41["CustomEntry"] := true
627 [-]: GETGLOBAL R42 K6       ; R42 := 0xae91e43b
628 [-]: SELF      R42 R42 K22  ; R43 := R42; R42 := R42[0x42b04007]
629 [-]: GETTABLE  R44 R0 K125  ; R44 := R0["EventInfo"]
630 [-]: GETTABLE  R44 R44 K126 ; R44 := R44["mDesc"]
631 [-]: LOADKB    R45 0 0      ; R45 := false
632 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
633 [-]: SETTABLE  R41 K21 R42  ; R41["Name"] := R42
634 [-]: GETTABLE  R42 R0 K131  ; R42 := R0["IngredientOverride"]
635 [-]: SETTABLE  R41 K131 R42 ; R41["IngredientOverride"] := R42
636 [-]: MOVE      R2 R41       ; R2 := R41
637 [-]: LOADK     R41 K33      ; R41 := ""
638 [-]: GETTABLE  R42 R0 K125  ; R42 := R0["EventInfo"]
639 [-]: GETTABLE  R42 R42 K133 ; R42 := R42["mBest"]
640 [-]: TEST      R42 1        ; if R42 then PC := 646
641 [-]: JMP       646          ; PC := 646
642 [-]: GETTABLE  R42 R0 K130  ; R42 := R0["Count"]
643 [-]: LOADK     R43 K134     ; R43 := " / "
644 [-]: GETTABLE  R44 R0 K135  ; R44 := R0["Goal"]
645 [-]: CONCAT    R41 R42 R44  ; R41 := R42 .. R43 .. R44
646 [-]: GETTABLE  R42 R0 K125  ; R42 := R0["EventInfo"]
647 [-]: GETTABLE  R42 R42 K136 ; R42 := R42["mScoreLocTag"]
648 [-]: EQ        1 R42 K33    ; if R42 == "" then PC := 694
649 [-]: JMP       694          ; PC := 694
650 [-]: GETTABLE  R42 R0 K125  ; R42 := R0["EventInfo"]
651 [-]: GETTABLE  R42 R42 K137 ; R42 := R42["mClanGoal"]
652 [-]: LEN       R42 R42      ; R42 := # R42
653 [-]: LT        0 K62 R42    ; if 0.000000 >= R42 then PC := 678
654 [-]: JMP       678          ; PC := 678
655 [-]: GETUPVAL  R42 U13      ; R42 := U13
656 [-]: SELF      R42 R42 K138 ; R43 := R42; R42 := R42[0x713ce380]
657 [-]: CALL      R42 2 2      ; R42 := R42(R43)
658 [-]: EQ        1 R42 K33    ; if R42 == "" then PC := 678
659 [-]: JMP       678          ; PC := 678
660 [-]: MOVE      R42 R41      ; R42 := R41
661 [-]: LOADK     R43 K139     ; R43 := " "
662 [-]: GETGLOBAL R44 K140     ; R44 := 0x603636ad
663 [-]: GETTABLE  R45 R0 K125  ; R45 := R0["EventInfo"]
664 [-]: GETTABLE  R45 R45 K136 ; R45 := R45["mScoreLocTag"]
665 [-]: LOADKB    R46 0 0      ; R46 := false
666 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
667 [-]: LOADK     R45 K139     ; R45 := " "
668 [-]: GETGLOBAL R46 K140     ; R46 := 0x603636ad
669 [-]: LOADK     R47 K141     ; R47 := "/Lotus/Language/Menu/WorldStateClanEventProgress"
670 [-]: NEWTABLE  R48 0 1      ; R48 := {}
671 [-]: GETUPVAL  R49 U13      ; R49 := U13
672 [-]: SELF      R49 R49 K143 ; R50 := R49; R49 := R49[0x6da6e186]
673 [-]: CALL      R49 2 2      ; R49 := R49(R50)
674 [-]: SETTABLE  R48 K142 R49 ; R48["CLAN_NAME"] := R49
675 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
676 [-]: CONCAT    R41 R42 R46  ; R41 := R42 .. R43 .. R44 .. R45 .. R46
677 [-]: JMP       694          ; PC := 694
678 [-]: MOVE      R42 R41      ; R42 := R41
679 [-]: LOADK     R43 K139     ; R43 := " "
680 [-]: GETGLOBAL R44 K140     ; R44 := 0x603636ad
681 [-]: GETTABLE  R45 R0 K125  ; R45 := R0["EventInfo"]
682 [-]: GETTABLE  R45 R45 K136 ; R45 := R45["mScoreLocTag"]
683 [-]: GETUPVAL  R46 U2       ; R46 := U2
684 [-]: GETTABLE  R46 R46 K53  ; R46 := R46[0x06d055f9]
685 [-]: GETTABLE  R47 R0 K125  ; R47 := R0["EventInfo"]
686 [-]: GETTABLE  R47 R47 K133 ; R47 := R47["mBest"]
687 [-]: NEWTABLE  R48 0 1      ; R48 := {}
688 [-]: GETTABLE  R49 R0 K130  ; R49 := R0["Count"]
689 [-]: SETTABLE  R48 K50 R49  ; R48["VALUE"] := R49
690 [-]: LOADNIL   R49 R49      ; R49 := nil
691 [-]: CALL      R46 4 0      ; R46,... := R46(R47,R48,R49)
692 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
693 [-]: CONCAT    R41 R42 R44  ; R41 := R42 .. R43 .. R44
694 [-]: SETTABLE  R2 K24 R41   ; R2["LocalizedDesc"] := R41
695 [-]: LOADKB    R3 1 0       ; R3 := true
696 [-]: TEST      R3 0         ; if not R3 then PC := 718
697 [-]: JMP       718          ; PC := 718
698 [-]: GETUPVAL  R42 U9       ; R42 := U9
699 [-]: GETTABLE  R42 R42 K144 ; R42 := R42[0xfc3fed1f]
700 [-]: GETGLOBAL R43 K6       ; R43 := 0xae91e43b
701 [-]: MOVE      R44 R2       ; R44 := R2
702 [-]: GETGLOBAL R45 K6       ; R45 := 0xae91e43b
703 [-]: SELF      R45 R45 K145 ; R46 := R45; R45 := R45[0x91a24e4b]
704 [-]: GETTABLE  R47 R0 K1    ; R47 := R0["mClipName"]
705 [-]: CONST     R48 2        ; R48 := 2.000000
706 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
707 [-]: SUB       R45 R45 K146 ; R45 := R45 - 375.000000
708 [-]: GETGLOBAL R46 K6       ; R46 := 0xae91e43b
709 [-]: SELF      R46 R46 K145 ; R47 := R46; R46 := R46[0x91a24e4b]
710 [-]: GETTABLE  R48 R0 K1    ; R48 := R0["mClipName"]
711 [-]: CONST     R49 3        ; R49 := 3.000000
712 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
713 [-]: CONST     R47 0        ; R47 := 0.000000
714 [-]: CONST     R48 0        ; R48 := 0.000000
715 [-]: CALL      R42 7 1      ; R42(R43,R44,R45,R46,R47,R48)
716 [-]: GETGLOBAL R42 K51      ; R42 := _T
717 [-]: SETTABLE  R42 K147 R2  ; R42["InfoPopup_Data"] := R2
718 [-]: GETTABLE  R42 R0 K11   ; R42 := R0["mIsModifiersHint"]
719 [-]: TEST      R42 1        ; if R42 then PC := 738
720 [-]: JMP       738          ; PC := 738
721 [-]: GETGLOBAL R42 K6       ; R42 := 0xae91e43b
722 [-]: SELF      R42 R42 K148 ; R43 := R42; R42 := R42[0x91e13703]
723 [-]: GETTABLE  R44 R0 K1    ; R44 := R0["mClipName"]
724 [-]: LOADK     R45 K149     ; R45 := ".Outline"
725 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
726 [-]: LOADK     R45 K150     ; R45 := "RectEdgeColor"
727 [-]: GETUPVAL  R46 U4       ; R46 := U4
728 [-]: GETTABLE  R46 R46 K151 ; R46 := R46["FloatingContentHighlightObject"]
729 [-]: GETTABLE  R46 R46 K152 ; R46 := R46["r"]
730 [-]: GETUPVAL  R47 U4       ; R47 := U4
731 [-]: GETTABLE  R47 R47 K151 ; R47 := R47["FloatingContentHighlightObject"]
732 [-]: GETTABLE  R47 R47 K153 ; R47 := R47["g"]
733 [-]: GETUPVAL  R48 U4       ; R48 := U4
734 [-]: GETTABLE  R48 R48 K151 ; R48 := R48["FloatingContentHighlightObject"]
735 [-]: GETTABLE  R48 R48 K154 ; R48 := R48["b"]
736 [-]: LOADK     R49 K155     ; R49 := 0.600000
737 [-]: CALL      R42 8 1      ; R42(R43,R44,R45,R46,R47,R48,R49)
738 [-]: GETUPVAL  R42 U3       ; R42 := U3
739 [-]: GETTABLE  R42 R42 K123 ; R42 := R42["EVENT"]
740 [-]: EQ        0 R1 R42     ; if R1 ~= R42 then PC := 762
741 [-]: JMP       762          ; PC := 762
742 [-]: GETTABLE  R42 R0 K156  ; R42 := R0["IsLinearEvent"]
743 [-]: TEST      R42 0        ; if not R42 then PC := 762
744 [-]: JMP       762          ; PC := 762
745 [-]: GETGLOBAL R42 K6       ; R42 := 0xae91e43b
746 [-]: SELF      R42 R42 K148 ; R43 := R42; R42 := R42[0x91e13703]
747 [-]: GETTABLE  R44 R0 K1    ; R44 := R0["mClipName"]
748 [-]: LOADK     R45 K157     ; R45 := ".LinearEvent.Progress.Bg"
749 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
750 [-]: LOADK     R45 K150     ; R45 := "RectEdgeColor"
751 [-]: GETGLOBAL R46 K3       ; R46 := 0x0032441c
752 [-]: GETTABLE  R46 R46 K158 ; R46 := R46["UIColorObject_Yellow"]
753 [-]: GETTABLE  R46 R46 K152 ; R46 := R46["r"]
754 [-]: GETGLOBAL R47 K3       ; R47 := 0x0032441c
755 [-]: GETTABLE  R47 R47 K158 ; R47 := R47["UIColorObject_Yellow"]
756 [-]: GETTABLE  R47 R47 K153 ; R47 := R47["g"]
757 [-]: GETGLOBAL R48 K3       ; R48 := 0x0032441c
758 [-]: GETTABLE  R48 R48 K158 ; R48 := R48["UIColorObject_Yellow"]
759 [-]: GETTABLE  R48 R48 K154 ; R48 := R48["b"]
760 [-]: CONST     R49 1        ; R49 := 1.000000
761 [-]: CALL      R42 8 1      ; R42(R43,R44,R45,R46,R47,R48,R49)
762 [-]: CONST     R42 0        ; R42 := 0.000000
763 [-]: CONST     R43 0        ; R43 := 0.000000
764 [-]: GETUPVAL  R44 U14      ; R44 := U14
765 [-]: EQ        1 R44 K0     ; if R44 == nil then PC := 783
766 [-]: JMP       783          ; PC := 783
767 [-]: GETUPVAL  R44 U2       ; R44 := U2
768 [-]: GETTABLE  R44 R44 K159 ; R44 := R44[0x74a11ec6]
769 [-]: GETUPVAL  R45 U14      ; R45 := U14
770 [-]: SELF      R45 R45 K160 ; R46 := R45; R45 := R45[0xb55952db]
771 [-]: CALL      R45 2 2      ; R45 := R45(R46)
772 [-]: CONST     R46 4        ; R46 := 4.000000
773 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
774 [-]: MOVE      R42 R44      ; R42 := R44
775 [-]: GETUPVAL  R44 U2       ; R44 := U2
776 [-]: GETTABLE  R44 R44 K159 ; R44 := R44[0x74a11ec6]
777 [-]: GETUPVAL  R45 U14      ; R45 := U14
778 [-]: SELF      R45 R45 K161 ; R46 := R45; R45 := R45[0x70fc2d50]
779 [-]: CALL      R45 2 2      ; R45 := R45(R46)
780 [-]: CONST     R46 4        ; R46 := 4.000000
781 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
782 [-]: MOVE      R43 R44      ; R43 := R44
783 [-]: GETTABLE  R44 R0 K162  ; R44 := R0["SkipScroll"]
784 [-]: TEST      R44 1        ; if R44 then PC := 860
785 [-]: JMP       860          ; PC := 860
786 [-]: GETUPVAL  R44 U14      ; R44 := U14
787 [-]: EQ        1 R44 K0     ; if R44 == nil then PC := 860
788 [-]: JMP       860          ; PC := 860
789 [-]: GETUPVAL  R44 U14      ; R44 := U14
790 [-]: GETTABLE  R44 R44 K163 ; R44 := R44["GetMenuYAtScroll"]
791 [-]: EQ        1 R44 K0     ; if R44 == nil then PC := 860
792 [-]: JMP       860          ; PC := 860
793 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 860
794 [-]: JMP       860          ; PC := 860
795 [-]: GETGLOBAL R44 K6       ; R44 := 0xae91e43b
796 [-]: SELF      R44 R44 K164 ; R45 := R44; R44 := R44[0x5b0290d2]
797 [-]: LOADK     R46 K165     ; R46 := "InfoPanel.ScrollBar.Scrub"
798 [-]: CONST     R47 11       ; R47 := 11.000000
799 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
800 [-]: TEST      R44 0        ; if not R44 then PC := 860
801 [-]: JMP       860          ; PC := 860
802 [-]: GETUPVAL  R44 U14      ; R44 := U14
803 [-]: SELF      R44 R44 K160 ; R45 := R44; R44 := R44[0xb55952db]
804 [-]: CALL      R44 2 2      ; R44 := R44(R45)
805 [-]: GETUPVAL  R45 U14      ; R45 := U14
806 [-]: SELF      R45 R45 K166 ; R46 := R45; R45 := R45[0x430251e8]
807 [-]: MOVE      R47 R44      ; R47 := R44
808 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
809 [-]: GETGLOBAL R46 K6       ; R46 := 0xae91e43b
810 [-]: SELF      R46 R46 K145 ; R47 := R46; R46 := R46[0x91a24e4b]
811 [-]: GETTABLE  R48 R0 K1    ; R48 := R0["mClipName"]
812 [-]: CONST     R49 1        ; R49 := 1.000000
813 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
814 [-]: EQ        1 R45 K0     ; if R45 == nil then PC := 822
815 [-]: JMP       822          ; PC := 822
816 [-]: GETUPVAL  R47 U15      ; R47 := U15
817 [-]: GETTABLE  R47 R47 K167 ; R47 := R47["mCurrYPos"]
818 [-]: EQ        1 R47 K0     ; if R47 == nil then PC := 822
819 [-]: JMP       822          ; PC := 822
820 [-]: EQ        0 R46 K0     ; if R46 ~= nil then PC := 823
821 [-]: JMP       823          ; PC := 823
822 [-]: RETURN    R0 1         ; return 
823 [-]: GETUPVAL  R47 U15      ; R47 := U15
824 [-]: GETTABLE  R47 R47 K167 ; R47 := R47["mCurrYPos"]
825 [-]: SUB       R47 R45 R47  ; R47 := R45 - R47
826 [-]: ADD       R47 R47 R46  ; R47 := R47 + R46
827 [-]: GETUPVAL  R48 U15      ; R48 := U15
828 [-]: SELF      R48 R48 K168 ; R49 := R48; R48 := R48[0x2721d8ad]
829 [-]: MOVE      R50 R0       ; R50 := R0
830 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
831 [-]: GETGLOBAL R49 K6       ; R49 := 0xae91e43b
832 [-]: SELF      R49 R49 K145 ; R50 := R49; R49 := R49[0x91a24e4b]
833 [-]: LOADK     R51 K169     ; R51 := "InfoPanel.InfoMenuMask"
834 [-]: CONST     R52 13       ; R52 := 13.000000
835 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
836 [-]: CONST     R50 0        ; R50 := 0.000000
837 [-]: ADD       R51 R47 R48  ; R51 := R47 + R48
838 [-]: LT        0 R49 R51    ; if R49 >= R51 then PC := 843
839 [-]: JMP       843          ; PC := 843
840 [-]: SUB       R51 R49 R47  ; R51 := R49 - R47
841 [-]: SUB       R50 R48 R51  ; R50 := R48 - R51
842 [-]: JMP       846          ; PC := 846
843 [-]: LT        0 R47 K62    ; if R47 >= 0.000000 then PC := 846
844 [-]: JMP       846          ; PC := 846
845 [-]: MOVE      R50 R47      ; R50 := R47
846 [-]: EQ        1 R50 K62    ; if R50 == 0.000000 then PC := 860
847 [-]: JMP       860          ; PC := 860
848 [-]: GETUPVAL  R51 U14      ; R51 := U14
849 [-]: GETTABLE  R51 R51 K170 ; R51 := R51["mTotalHeight"]
850 [-]: GETUPVAL  R52 U14      ; R52 := U14
851 [-]: GETTABLE  R52 R52 K171 ; R52 := R52["mVisibleProp"]
852 [-]: SUB       R52 K34 R52  ; R52 := 1.000000 - R52
853 [-]: MUL       R51 R51 R52  ; R51 := R51 * R52
854 [-]: DIV       R52 R50 R51  ; R52 := R50 / R51
855 [-]: MUL       R52 R52 K172 ; R52 := R52 * 1.050000
856 [-]: GETUPVAL  R53 U14      ; R53 := U14
857 [-]: SELF      R53 R53 K173 ; R54 := R53; R53 := R53[0xd2c6305a]
858 [-]: MOVE      R55 R52      ; R55 := R52
859 [-]: CALL      R53 3 1      ; R53(R54,R55)
860 [-]: RETURN    R0 1         ; return 


; Function #67.5:
;
; Name:            
; Defined at line: 4487
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: SETTABLE  R1 K3 K0     ; R1["InfoPopup_Data"] := nil
  9 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["EntryId"]
 10 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 11 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x91e13703]
 12 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 13 [-]: LOADK     R5 K7        ; R5 := ".Outline"
 14 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 15 [-]: LOADK     R5 K8        ; R5 := "RectEdgeColor"
 16 [-]: GETUPVAL  R6 U0        ; R6 := U0
 17 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["FloatingContentObject"]
 18 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["r"]
 19 [-]: GETUPVAL  R7 U0        ; R7 := U0
 20 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["FloatingContentObject"]
 21 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["g"]
 22 [-]: GETUPVAL  R8 U0        ; R8 := U0
 23 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["FloatingContentObject"]
 24 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["b"]
 25 [-]: LOADK     R9 K13       ; R9 := 0.400000
 26 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 27 [-]: GETGLOBAL R2 K14       ; R2 := 0x25312c9b
 28 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 29 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 30 [-]: LOADK     R5 K15       ; R5 := ".Highlight"
 31 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 32 [-]: CONST     R5 8         ; R5 := 8.000000
 33 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 34 [-]: CONST     R7 13        ; R7 := 13.000000
 35 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 36 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 37 [-]: LOADK     R8 K17       ; R8 := 0.100000
 38 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 39 [-]: CONST     R8 0         ; R8 := 0.250000
 40 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["EVENT"]
 43 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 65
 44 [-]: JMP       65           ; PC := 65
 45 [-]: GETTABLE  R2 R0 K19    ; R2 := R0["IsLinearEvent"]
 46 [-]: TEST      R2 0         ; if not R2 then PC := 65
 47 [-]: JMP       65           ; PC := 65
 48 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 49 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x91e13703]
 50 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 51 [-]: LOADK     R5 K20       ; R5 := ".LinearEvent.Progress.Bg"
 52 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 53 [-]: LOADK     R5 K8        ; R5 := "RectEdgeColor"
 54 [-]: GETGLOBAL R6 K21       ; R6 := 0x0032441c
 55 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["UIColorObject_White"]
 56 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["r"]
 57 [-]: GETGLOBAL R7 K21       ; R7 := 0x0032441c
 58 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["UIColorObject_White"]
 59 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["g"]
 60 [-]: GETGLOBAL R8 K21       ; R8 := 0x0032441c
 61 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["UIColorObject_White"]
 62 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["b"]
 63 [-]: LOADK     R9 K23       ; R9 := 0.200000
 64 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 65 [-]: RETURN    R0 1         ; return 


; Function #67.6:
;
; Name:            
; Defined at line: 4503
; #Upvalues:       19
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  59

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["EntryId"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0xa94df70b
  3 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xf87f9433]
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
  8 [-]: GETGLOBAL R4 K4        ; R4 := _T
  9 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["BackgroundMovie"]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K6     ; R3 := R3[0xe0cba3ca]
 15 [-]: LOADK     R4 K7        ; R4 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: JMP       35           ; PC := 35
 19 [-]: GETGLOBAL R3 K1        ; R3 := 0xa94df70b
 20 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x751e7461]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 0         ; if not R3 then PC := 35
 23 [-]: JMP       35           ; PC := 35
 24 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 25 [-]: GETGLOBAL R4 K4        ; R4 := _T
 26 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["BackgroundMovie"]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: TEST      R3 1         ; if R3 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K6     ; R3 := R3[0xe0cba3ca]
 32 [-]: LOADK     R4 K9        ; R4 := "/Lotus/Language/Menu/MainMenu_BugReportMissionsBlocked"
 33 [-]: CALL      R3 2 1       ; R3(R4)
 34 [-]: RETURN    R0 1         ; return 
 35 [-]: GETGLOBAL R3 K10       ; R3 := 0xe7f2b02f
 36 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xebe2f513]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: LT        0 K12 R3     ; if 1.000000 >= R3 then PC := 51
 39 [-]: JMP       51           ; PC := 51
 40 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 41 [-]: GETGLOBAL R4 K4        ; R4 := _T
 42 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["gPendingMission"]
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETUPVAL  R3 U0        ; R3 := U0
 47 [-]: GETTABLE  R3 R3 K6     ; R3 := R3[0xe0cba3ca]
 48 [-]: LOADK     R4 K14       ; R4 := "/Lotus/Language/Menu/VoteInProgress"
 49 [-]: CALL      R3 2 1       ; R3(R4)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETUPVAL  R3 U1        ; R3 := U1
 52 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["SYND_MISSION"]
 53 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 64
 54 [-]: JMP       64           ; PC := 64
 55 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 56 [-]: GETTABLE  R4 R0 K16    ; R4 := R0["DailyTask"]
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: TEST      R3 1         ; if R3 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mUnlocked"]
 61 [-]: TEST      R3 1         ; if R3 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: RETURN    R0 1         ; return 
 64 [-]: GETUPVAL  R3 U1        ; R3 := U1
 65 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["QUEST"]
 66 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 342
 67 [-]: JMP       342          ; PC := 342
 68 [-]: GETUPVAL  R3 U2        ; R3 := U2
 69 [-]: GETTABLE  R4 R0 K19    ; R4 := R0["QuestIndex"]
 70 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 71 [-]: EQ        1 R3 K20     ; if R3 == nil then PC := 1075
 72 [-]: JMP       1075         ; PC := 1075
 73 [-]: GETTABLE  R4 R3 K21    ; R4 := R3["IsLoaded"]
 74 [-]: TEST      R4 0         ; if not R4 then PC := 1075
 75 [-]: JMP       1075         ; PC := 1075
 76 [-]: GETTABLE  R4 R3 K22    ; R4 := R3["IsPrereq"]
 77 [-]: TEST      R4 0         ; if not R4 then PC := 88
 78 [-]: JMP       88           ; PC := 88
 79 [-]: GETTABLE  R4 R3 K23    ; R4 := R3["CanActivate"]
 80 [-]: TEST      R4 1         ; if R4 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETGLOBAL R4 K4        ; R4 := _T
 83 [-]: GETGLOBAL R5 K25       ; R5 := 0x64fb1586
 84 [-]: GETTABLE  R6 R3 K26    ; R6 := R3["Node"]
 85 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 86 [-]: SETTABLE  R4 K24 R5    ; R4["DesiredGoToNode"] := R5
 87 [-]: JMP       1075         ; PC := 1075
 88 [-]: GETTABLE  R4 R3 K27    ; R4 := R3["IsActive"]
 89 [-]: TEST      R4 1         ; if R4 then PC := 271
 90 [-]: JMP       271          ; PC := 271
 91 [-]: GETTABLE  R4 R0 K19    ; R4 := R0["QuestIndex"]
 92 [-]: SETUPVAL  R4 U3        ; U82 := R3
 93 [-]: GETTABLE  R4 R3 K28    ; R4 := R3["CanStart"]
 94 [-]: TEST      R4 0         ; if not R4 then PC := 219
 95 [-]: JMP       219          ; PC := 219
 96 [-]: GETTABLE  R4 R3 K29    ; R4 := R3["Quest"]
 97 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4[0xd6b70595]
 98 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 99 [-]: TEST      R4 1         ; if R4 then PC := 102
100 [-]: JMP       102          ; PC := 102
101 [-]: RETURN    R0 1         ; return 
102 [-]: GETTABLE  R4 R3 K31    ; R4 := R3["CommitmentTag"]
103 [-]: TEST      R4 0         ; if not R4 then PC := 191
104 [-]: JMP       191          ; PC := 191
105 [-]: GETGLOBAL R4 K32       ; R4 := 0x603636ad
106 [-]: GETGLOBAL R5 K25       ; R5 := 0x64fb1586
107 [-]: GETTABLE  R6 R3 K31    ; R6 := R3["CommitmentTag"]
108 [-]: CALL      R5 2 2       ; R5 := R5(R6)
109 [-]: LOADKB    R6 1 0       ; R6 := true
110 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
111 [-]: GETGLOBAL R5 K32       ; R5 := 0x603636ad
112 [-]: LOADK     R6 K33       ; R6 := "/Lotus/Language/G1Quests/QuestCommitmentTitle"
113 [-]: NEWTABLE  R7 0 1       ; R7 := {}
114 [-]: GETTABLE  R8 R3 K34    ; R8 := R3["Title"]
115 [-]: SETTABLE  R7 K18 R8    ; R7["QUEST"] := R8
116 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
117 [-]: GETGLOBAL R6 K32       ; R6 := 0x603636ad
118 [-]: LOADK     R7 K35       ; R7 := "/Lotus/Language/G1Quests/QuestCommitmentDesc"
119 [-]: NEWTABLE  R8 0 1       ; R8 := {}
120 [-]: GETTABLE  R9 R3 K34    ; R9 := R3["Title"]
121 [-]: SETTABLE  R8 K18 R9    ; R8["QUEST"] := R9
122 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
123 [-]: GETGLOBAL R7 K32       ; R7 := 0x603636ad
124 [-]: LOADK     R8 K36       ; R8 := "/Lotus/Language/G1Quests/QuestCommitmentConfirm"
125 [-]: NEWTABLE  R9 0 1       ; R9 := {}
126 [-]: GETGLOBAL R10 K38      ; R10 := 0x7f5022cf
127 [-]: GETTABLE  R10 R10 K39  ; R10 := R10[0x3f3e4d12]
128 [-]: MOVE      R11 R4       ; R11 := R4
129 [-]: CALL      R10 2 2      ; R10 := R10(R11)
130 [-]: SETTABLE  R9 K37 R10   ; R9["WORD"] := R10
131 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
132 [-]: GETGLOBAL R8 K40       ; R8 := 0x34291f5c
133 [-]: GETTABLE  R8 R8 K41    ; R8 := R8[0xe6b41adb]
134 [-]: CALL      R8 1 2       ; R8 := R8()
135 [-]: TEST      R8 1         ; if R8 then PC := 147
136 [-]: JMP       147          ; PC := 147
137 [-]: GETGLOBAL R8 K40       ; R8 := 0x34291f5c
138 [-]: GETTABLE  R8 R8 K42    ; R8 := R8[0x1467d5f4]
139 [-]: CALL      R8 1 2       ; R8 := R8()
140 [-]: TEST      R8 1         ; if R8 then PC := 147
141 [-]: JMP       147          ; PC := 147
142 [-]: GETGLOBAL R8 K40       ; R8 := 0x34291f5c
143 [-]: GETTABLE  R8 R8 K43    ; R8 := R8[0x399826a5]
144 [-]: CALL      R8 1 2       ; R8 := R8()
145 [-]: TEST      R8 0         ; if not R8 then PC := 163
146 [-]: JMP       163          ; PC := 163
147 [-]: GETGLOBAL R8 K40       ; R8 := 0x34291f5c
148 [-]: GETTABLE  R8 R8 K44    ; R8 := R8[0x94617168]
149 [-]: CALL      R8 1 2       ; R8 := R8()
150 [-]: TEST      R8 0         ; if not R8 then PC := 163
151 [-]: JMP       163          ; PC := 163
152 [-]: CLOSURE   R8 0         ; R8 := closure(Function #67.6.1)
153 [-]: GETUPVAL  R0 U4        ; R0 := U4
154 [-]: MOVE      R0 R5        ; R0 := R5
155 [-]: MOVE      R0 R7        ; R0 := R7
156 [-]: MOVE      R0 R4        ; R0 := R4
157 [-]: GETUPVAL  R9 U0        ; R9 := U0
158 [-]: GETTABLE  R9 R9 K6     ; R9 := R9[0xe0cba3ca]
159 [-]: MOVE      R10 R6       ; R10 := R6
160 [-]: MOVE      R11 R8       ; R11 := R8
161 [-]: CALL      R9 3 1       ; R9(R10,R11)
162 [-]: JMP       189          ; PC := 189
163 [-]: MOVE      R9 R6        ; R9 := R6
164 [-]: LOADK     R10 K45      ; R10 := "\r\n\r\n"
165 [-]: MOVE      R11 R7       ; R11 := R7
166 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
167 [-]: GETUPVAL  R10 U4       ; R10 := U4
168 [-]: GETTABLE  R10 R10 K46  ; R10 := R10[0xef3e3165]
169 [-]: GETGLOBAL R11 K47      ; R11 := 0xae91e43b
170 [-]: MOVE      R12 R5       ; R12 := R5
171 [-]: LOADK     R13 K48      ; R13 := ""
172 [-]: CONST     R14 40       ; R14 := 40.000000
173 [-]: LOADK     R15 K49      ; R15 := "ConfirmQuestCommitment"
174 [-]: LOADK     R16 K48      ; R16 := ""
175 [-]: NEWTABLE  R17 0 1      ; R17 := {}
176 [-]: SETTABLE  R17 K50 R9   ; R17["desc"] := R9
177 [-]: CALL      R10 8 3      ; R10,R11 := R10(R11,R12,R13,R14,R15,R16,R17)
178 [-]: TEST      R10 0        ; if not R10 then PC := 189
179 [-]: JMP       189          ; PC := 189
180 [-]: GETGLOBAL R12 K3       ; R12 := 0x7b998233
181 [-]: MOVE      R13 R11      ; R13 := R11
182 [-]: CALL      R12 2 2      ; R12 := R12(R13)
183 [-]: TEST      R12 1        ; if R12 then PC := 189
184 [-]: JMP       189          ; PC := 189
185 [-]: SELF      R12 R11 K51  ; R13 := R11; R12 := R11[0xe4162eed]
186 [-]: LOADK     R14 K52      ; R14 := "SetConditionalWord"
187 [-]: MOVE      R15 R4       ; R15 := R4
188 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
189 [-]: CLOSE     R4           ; SAVE R4,...
190 [-]: JMP       1075         ; PC := 1075
191 [-]: GETGLOBAL R4 K53       ; R4 := 0x7ed0a956
192 [-]: GETTABLE  R5 R3 K29    ; R5 := R3["Quest"]
193 [-]: CALL      R4 2 2       ; R4 := R4(R5)
194 [-]: GETUPVAL  R5 U5        ; R5 := U5
195 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 207
196 [-]: JMP       207          ; PC := 207
197 [-]: GETUPVAL  R4 U4        ; R4 := U4
198 [-]: GETTABLE  R4 R4 K54    ; R4 := R4[0x6301378a]
199 [-]: GETTABLE  R5 R3 K29    ; R5 := R3["Quest"]
200 [-]: GETGLOBAL R6 K55       ; R6 := 0xcb00102d
201 [-]: GETUPVAL  R7 U6        ; R7 := U6
202 [-]: GETUPVAL  R8 U7        ; R8 := U7
203 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
204 [-]: TEST      R4 0         ; if not R4 then PC := 207
205 [-]: JMP       207          ; PC := 207
206 [-]: JMP       1075         ; PC := 1075
207 [-]: GETGLOBAL R4 K32       ; R4 := 0x603636ad
208 [-]: LOADK     R5 K56       ; R5 := "/Lotus/Language/Menu/WorldStatePanel_SetActiveQuestConfirm"
209 [-]: NEWTABLE  R6 0 1       ; R6 := {}
210 [-]: GETTABLE  R7 R3 K34    ; R7 := R3["Title"]
211 [-]: SETTABLE  R6 K18 R7    ; R6["QUEST"] := R7
212 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
213 [-]: GETUPVAL  R5 U0        ; R5 := U0
214 [-]: GETTABLE  R5 R5 K57    ; R5 := R5[0xdedfded7]
215 [-]: MOVE      R6 R4        ; R6 := R4
216 [-]: LOADK     R7 K58       ; R7 := "OnConfirmSetActiveQuest"
217 [-]: CALL      R5 3 1       ; R5(R6,R7)
218 [-]: JMP       1075         ; PC := 1075
219 [-]: GETTABLE  R5 R3 K59    ; R5 := R3["PrereqQuestCompleted"]
220 [-]: TEST      R5 1         ; if R5 then PC := 256
221 [-]: JMP       256          ; PC := 256
222 [-]: GETUPVAL  R5 U8        ; R5 := U8
223 [-]: SELF      R5 R5 K60    ; R6 := R5; R5 := R5[0x82d6b899]
224 [-]: GETTABLE  R7 R3 K61    ; R7 := R3["PrereqQuest"]
225 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
226 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
227 [-]: MOVE      R7 R5        ; R7 := R5
228 [-]: CALL      R6 2 2       ; R6 := R6(R7)
229 [-]: TEST      R6 1         ; if R6 then PC := 248
230 [-]: JMP       248          ; PC := 248
231 [-]: GETUPVAL  R6 U0        ; R6 := U0
232 [-]: GETTABLE  R6 R6 K6     ; R6 := R6[0xe0cba3ca]
233 [-]: GETGLOBAL R7 K32       ; R7 := 0x603636ad
234 [-]: LOADK     R8 K62       ; R8 := "/Lotus/Language/Quests/QuestLockedByPrereq"
235 [-]: NEWTABLE  R9 0 1       ; R9 := {}
236 [-]: GETGLOBAL R10 K32      ; R10 := 0x603636ad
237 [-]: GETGLOBAL R11 K25      ; R11 := 0x64fb1586
238 [-]: GETTABLE  R12 R5 K63   ; R12 := R5["locName"]
239 [-]: SELF      R12 R12 K64  ; R13 := R12; R12 := R12[0x6d604ba7]
240 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
241 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
242 [-]: NEWTABLE  R12 0 0      ; R12 := {}
243 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
244 [-]: SETTABLE  R9 K18 R10   ; R9["QUEST"] := R10
245 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
246 [-]: CALL      R6 0 1       ; R6(R7,...)
247 [-]: JMP       1075         ; PC := 1075
248 [-]: GETGLOBAL R6 K65       ; R6 := 0x3d106989
249 [-]: LOADK     R7 K66       ; R7 := "Couldn't find quest codex entry for Prereq quest: "
250 [-]: GETTABLE  R8 R3 K61    ; R8 := R3["PrereqQuest"]
251 [-]: SELF      R8 R8 K67    ; R9 := R8; R8 := R8[0xed4e0128]
252 [-]: CALL      R8 2 2       ; R8 := R8(R9)
253 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
254 [-]: CALL      R6 2 1       ; R6(R7)
255 [-]: JMP       1075         ; PC := 1075
256 [-]: GETTABLE  R6 R3 K68    ; R6 := R3["HasIntroCinematic"]
257 [-]: TEST      R6 0         ; if not R6 then PC := 265
258 [-]: JMP       265          ; PC := 265
259 [-]: GETUPVAL  R6 U0        ; R6 := U0
260 [-]: GETTABLE  R6 R6 K57    ; R6 := R6[0xdedfded7]
261 [-]: LOADK     R7 K69       ; R7 := "/Lotus/Language/Menu/WorldStatePanel_SetActiveQuestFromCodexError"
262 [-]: LOADK     R8 K70       ; R8 := "OnConfirmGotoQuestInCodex"
263 [-]: CALL      R6 3 1       ; R6(R7,R8)
264 [-]: JMP       1075         ; PC := 1075
265 [-]: GETUPVAL  R6 U0        ; R6 := U0
266 [-]: GETTABLE  R6 R6 K57    ; R6 := R6[0xdedfded7]
267 [-]: LOADK     R7 K69       ; R7 := "/Lotus/Language/Menu/WorldStatePanel_SetActiveQuestFromCodexError"
268 [-]: LOADK     R8 K70       ; R8 := "OnConfirmGotoQuestInCodex"
269 [-]: CALL      R6 3 1       ; R6(R7,R8)
270 [-]: JMP       1075         ; PC := 1075
271 [-]: GETTABLE  R6 R3 K26    ; R6 := R3["Node"]
272 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 280
273 [-]: JMP       280          ; PC := 280
274 [-]: GETTABLE  R6 R3 K71    ; R6 := R3["Nodes"]
275 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 1075
276 [-]: JMP       1075         ; PC := 1075
277 [-]: GETTABLE  R6 R0 K72    ; R6 := R0["NodeIndex"]
278 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 1075
279 [-]: JMP       1075         ; PC := 1075
280 [-]: GETTABLE  R6 R3 K26    ; R6 := R3["Node"]
281 [-]: GETTABLE  R7 R3 K71    ; R7 := R3["Nodes"]
282 [-]: EQ        1 R7 K20     ; if R7 == nil then PC := 290
283 [-]: JMP       290          ; PC := 290
284 [-]: GETTABLE  R7 R0 K72    ; R7 := R0["NodeIndex"]
285 [-]: EQ        1 R7 K20     ; if R7 == nil then PC := 290
286 [-]: JMP       290          ; PC := 290
287 [-]: GETTABLE  R7 R3 K71    ; R7 := R3["Nodes"]
288 [-]: GETTABLE  R8 R0 K72    ; R8 := R0["NodeIndex"]
289 [-]: GETTABLE  R6 R7 R8     ; R6 := R7[R8]
290 [-]: GETUPVAL  R7 U9        ; R7 := U9
291 [-]: GETTABLE  R7 R7 K73    ; R7 := R7[0x29f54de9]
292 [-]: CALL      R7 1 1       ; R7()
293 [-]: GETUPVAL  R7 U10       ; R7 := U10
294 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 301
295 [-]: JMP       301          ; PC := 301
296 [-]: GETGLOBAL R7 K4        ; R7 := _T
297 [-]: GETUPVAL  R8 U4        ; R8 := U4
298 [-]: GETTABLE  R8 R8 K75    ; R8 := R8["REGION_ID_DOJO"]
299 [-]: SETTABLE  R7 K74 R8    ; R7["DesiredGoToRegion"] := R8
300 [-]: JMP       306          ; PC := 306
301 [-]: GETGLOBAL R7 K4        ; R7 := _T
302 [-]: GETGLOBAL R8 K25       ; R8 := 0x64fb1586
303 [-]: MOVE      R9 R6        ; R9 := R6
304 [-]: CALL      R8 2 2       ; R8 := R8(R9)
305 [-]: SETTABLE  R7 K24 R8    ; R7["DesiredGoToNode"] := R8
306 [-]: GETGLOBAL R7 K4        ; R7 := _T
307 [-]: GETUPVAL  R8 U0        ; R8 := U0
308 [-]: GETTABLE  R8 R8 K77    ; R8 := R8[0x06d055f9]
309 [-]: GETTABLE  R9 R3 K78    ; R9 := R3["KeyName"]
310 [-]: GETGLOBAL R10 K25      ; R10 := 0x64fb1586
311 [-]: GETTABLE  R11 R3 K78   ; R11 := R3["KeyName"]
312 [-]: CALL      R10 2 2      ; R10 := R10(R11)
313 [-]: LOADNIL   R11 R11      ; R11 := nil
314 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
315 [-]: SETTABLE  R7 K76 R8    ; R7["DesiredGoToKey"] := R8
316 [-]: GETGLOBAL R7 K4        ; R7 := _T
317 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["DesiredGoToNode"]
318 [-]: TEST      R7 0         ; if not R7 then PC := 324
319 [-]: JMP       324          ; PC := 324
320 [-]: GETGLOBAL R7 K4        ; R7 := _T
321 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["DesiredGoToNode"]
322 [-]: EQ        0 R7 K48     ; if R7 ~= "" then PC := 336
323 [-]: JMP       336          ; PC := 336
324 [-]: GETGLOBAL R7 K4        ; R7 := _T
325 [-]: GETTABLE  R7 R7 K76    ; R7 := R7["DesiredGoToKey"]
326 [-]: TEST      R7 0         ; if not R7 then PC := 336
327 [-]: JMP       336          ; PC := 336
328 [-]: GETGLOBAL R7 K4        ; R7 := _T
329 [-]: GETTABLE  R7 R7 K76    ; R7 := R7["DesiredGoToKey"]
330 [-]: EQ        1 R7 K48     ; if R7 == "" then PC := 336
331 [-]: JMP       336          ; PC := 336
332 [-]: GETGLOBAL R7 K4        ; R7 := _T
333 [-]: GETGLOBAL R8 K4        ; R8 := _T
334 [-]: GETTABLE  R8 R8 K76    ; R8 := R8["DesiredGoToKey"]
335 [-]: SETTABLE  R7 K24 R8    ; R7["DesiredGoToNode"] := R8
336 [-]: GETGLOBAL R7 K4        ; R7 := _T
337 [-]: GETTABLE  R8 R3 K80    ; R8 := R3["Type"]
338 [-]: SELF      R8 R8 K67    ; R9 := R8; R8 := R8[0xed4e0128]
339 [-]: CALL      R8 2 2       ; R8 := R8(R9)
340 [-]: SETTABLE  R7 K79 R8    ; R7["DesiredGoToQuest"] := R8
341 [-]: JMP       1075         ; PC := 1075
342 [-]: GETUPVAL  R7 U1        ; R7 := U1
343 [-]: GETTABLE  R7 R7 K81    ; R7 := R7["ALERT"]
344 [-]: EQ        0 R2 R7      ; if R2 ~= R7 then PC := 537
345 [-]: JMP       537          ; PC := 537
346 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
347 [-]: GETTABLE  R8 R0 K82    ; R8 := R0["mAlertInfo"]
348 [-]: CALL      R7 2 2       ; R7 := R7(R8)
349 [-]: TEST      R7 1         ; if R7 then PC := 537
350 [-]: JMP       537          ; PC := 537
351 [-]: GETTABLE  R7 R0 K83    ; R7 := R0["mVisible"]
352 [-]: TEST      R7 0         ; if not R7 then PC := 537
353 [-]: JMP       537          ; PC := 537
354 [-]: GETTABLE  R7 R0 K82    ; R7 := R0["mAlertInfo"]
355 [-]: GETTABLE  R7 R7 K84    ; R7 := R7["mMissionInfo"]
356 [-]: GETTABLE  R7 R7 K85    ; R7 := R7["periodicMissionTag"]
357 [-]: GETUPVAL  R8 U4        ; R8 := U4
358 [-]: GETTABLE  R8 R8 K86    ; R8 := R8["ELITE_ALERT_PERIODIC_MISSION_TAG"]
359 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 369
360 [-]: JMP       369          ; PC := 369
361 [-]: GETTABLE  R7 R0 K82    ; R7 := R0["mAlertInfo"]
362 [-]: GETTABLE  R7 R7 K84    ; R7 := R7["mMissionInfo"]
363 [-]: GETTABLE  R7 R7 K85    ; R7 := R7["periodicMissionTag"]
364 [-]: GETUPVAL  R8 U4        ; R8 := U4
365 [-]: GETTABLE  R8 R8 K87    ; R8 := R8["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
366 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 369
367 [-]: JMP       369          ; PC := 369
368 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 369
369 [-]: LOADKB    R7 1 0       ; R7 := true
370 [-]: GETGLOBAL R8 K38       ; R8 := 0x7f5022cf
371 [-]: GETTABLE  R8 R8 K88    ; R8 := R8[0xa5c556b9]
372 [-]: GETGLOBAL R9 K25       ; R9 := 0x64fb1586
373 [-]: GETTABLE  R10 R0 K82   ; R10 := R0["mAlertInfo"]
374 [-]: GETTABLE  R10 R10 K84  ; R10 := R10["mMissionInfo"]
375 [-]: GETTABLE  R10 R10 K85  ; R10 := R10["periodicMissionTag"]
376 [-]: CALL      R9 2 2       ; R9 := R9(R10)
377 [-]: LOADK     R10 K89      ; R10 := "HardDaily"
378 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
379 [-]: EQ        1 R8 K12     ; if R8 == 1.000000 then PC := 382
380 [-]: JMP       382          ; PC := 382
381 [-]: LOADKB    R8 0 1       ; R8 := false; PC := 382
382 [-]: LOADKB    R8 1 0       ; R8 := true
383 [-]: LOADNIL   R9 R9        ; R9 := nil
384 [-]: TEST      R7 0         ; if not R7 then PC := 389
385 [-]: JMP       389          ; PC := 389
386 [-]: GETUPVAL  R10 U4       ; R10 := U4
387 [-]: GETTABLE  R9 R10 K90   ; R9 := R10["ELITE_ALERT_TAG"]
388 [-]: JMP       408          ; PC := 408
389 [-]: TEST      R8 0         ; if not R8 then PC := 394
390 [-]: JMP       394          ; PC := 394
391 [-]: GETUPVAL  R10 U4       ; R10 := U4
392 [-]: GETTABLE  R9 R10 K91   ; R9 := R10["HARD_DAILY_TAG"]
393 [-]: JMP       408          ; PC := 408
394 [-]: GETTABLE  R10 R0 K92   ; R10 := R0["mGhostTower"]
395 [-]: TEST      R10 0        ; if not R10 then PC := 400
396 [-]: JMP       400          ; PC := 400
397 [-]: GETUPVAL  R10 U4       ; R10 := U4
398 [-]: GETTABLE  R9 R10 K93   ; R9 := R10["KUVA_TOWER_MISSION_TAG"]
399 [-]: JMP       408          ; PC := 408
400 [-]: GETTABLE  R10 R0 K94   ; R10 := R0["mModifiers"]
401 [-]: EQ        1 R10 K20    ; if R10 == nil then PC := 406
402 [-]: JMP       406          ; PC := 406
403 [-]: GETUPVAL  R10 U4       ; R10 := U4
404 [-]: GETTABLE  R9 R10 K95   ; R9 := R10["NIGHTMARE_TAG"]
405 [-]: JMP       408          ; PC := 408
406 [-]: GETUPVAL  R10 U4       ; R10 := U4
407 [-]: GETTABLE  R9 R10 K96   ; R9 := R10["ALERT_TAG"]
408 [-]: GETTABLE  R10 R0 K97   ; R10 := R0["mRegionUnlocked"]
409 [-]: TEST      R10 0        ; if not R10 then PC := 1075
410 [-]: JMP       1075         ; PC := 1075
411 [-]: TEST      R7 0         ; if not R7 then PC := 498
412 [-]: JMP       498          ; PC := 498
413 [-]: GETTABLE  R10 R0 K17   ; R10 := R0["mUnlocked"]
414 [-]: TEST      R10 1        ; if R10 then PC := 498
415 [-]: JMP       498          ; PC := 498
416 [-]: GETUPVAL  R10 U4       ; R10 := U4
417 [-]: GETTABLE  R10 R10 K98  ; R10 := R10[0x5e35d4d6]
418 [-]: CALL      R10 1 2      ; R10 := R10()
419 [-]: GETUPVAL  R11 U4       ; R11 := U4
420 [-]: GETTABLE  R11 R11 K99  ; R11 := R11[0x7fa20839]
421 [-]: CALL      R11 1 4      ; R11,R12,R13 := R11()
422 [-]: NEWTABLE  R14 0 0      ; R14 := {}
423 [-]: CONST     R15 1        ; R15 := 1.000000
424 [-]: LEN       R16 R13      ; R16 := # R13
425 [-]: CONST     R17 1        ; R17 := 1.000000
426 [-]: FORPREP   R15 452      ; R15 -= R17; PC := 452
427 [-]: SELF      R19 R10 K100 ; R20 := R10; R19 := R10[0x5484bf3c]
428 [-]: GETTABLE  R21 R13 R18  ; R21 := R13[R18]
429 [-]: GETTABLE  R21 R21 K101 ; R21 := R21["name"]
430 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
431 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
432 [-]: MOVE      R21 R19      ; R21 := R19
433 [-]: CALL      R20 2 2      ; R20 := R20(R21)
434 [-]: TEST      R20 1        ; if R20 then PC := 452
435 [-]: JMP       452          ; PC := 452
436 [-]: GETTABLE  R20 R19 K101 ; R20 := R19["name"]
437 [-]: GETTABLE  R20 R14 R20  ; R20 := R14[R20]
438 [-]: TEST      R20 1        ; if R20 then PC := 443
439 [-]: JMP       443          ; PC := 443
440 [-]: GETTABLE  R20 R19 K101 ; R20 := R19["name"]
441 [-]: NEWTABLE  R21 0 0      ; R21 := {}
442 [-]: SETTABLE  R14 R20 R21  ; R14[R20] := R21
443 [-]: GETGLOBAL R20 K102     ; R20 := 0x33bdd652
444 [-]: GETTABLE  R20 R20 K103 ; R20 := R20[0x23d5322f]
445 [-]: GETTABLE  R21 R19 K101 ; R21 := R19["name"]
446 [-]: GETTABLE  R21 R14 R21  ; R21 := R14[R21]
447 [-]: GETGLOBAL R22 K25      ; R22 := 0x64fb1586
448 [-]: GETTABLE  R23 R13 R18  ; R23 := R13[R18]
449 [-]: GETTABLE  R23 R23 K104 ; R23 := R23["locTag"]
450 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
451 [-]: CALL      R20 0 1      ; R20(R21,...)
452 [-]: FORLOOP   R15 427      ; R15 += R17; if R15 <= R16 then begin PC := 427; R18 := R15 end
453 [-]: LOADK     R20 K48      ; R20 := ""
454 [-]: GETGLOBAL R21 K105     ; R21 := 0xcfc01047
455 [-]: MOVE      R22 R14      ; R22 := R14
456 [-]: CALL      R21 2 4      ; R21,R22,R23 := R21(R22)
457 [-]: JMP       491          ; PC := 491
458 [-]: MOVE      R26 R20      ; R26 := R20
459 [-]: GETGLOBAL R27 K38      ; R27 := 0x7f5022cf
460 [-]: GETTABLE  R27 R27 K39  ; R27 := R27[0x3f3e4d12]
461 [-]: GETGLOBAL R28 K32      ; R28 := 0x603636ad
462 [-]: MOVE      R29 R24      ; R29 := R24
463 [-]: LOADKB    R30 0 0      ; R30 := false
464 [-]: CALL      R28 3 0      ; R28,... := R28(R29,R30)
465 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
466 [-]: LOADK     R28 K106     ; R28 := ": "
467 [-]: CONCAT    R20 R26 R28  ; R20 := R26 .. R27 .. R28
468 [-]: CONST     R26 1        ; R26 := 1.000000
469 [-]: LEN       R27 R25      ; R27 := # R25
470 [-]: CONST     R28 1        ; R28 := 1.000000
471 [-]: FORPREP   R26 487      ; R26 -= R28; PC := 487
472 [-]: GETGLOBAL R30 K107     ; R30 := 0x5f0788c4
473 [-]: GETGLOBAL R31 K32      ; R31 := 0x603636ad
474 [-]: GETTABLE  R32 R25 R29  ; R32 := R25[R29]
475 [-]: LOADKB    R33 0 0      ; R33 := false
476 [-]: CALL      R31 3 0      ; R31,... := R31(R32,R33)
477 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
478 [-]: MOVE      R31 R20      ; R31 := R20
479 [-]: MOVE      R32 R30      ; R32 := R30
480 [-]: CONCAT    R20 R31 R32  ; R20 := R31 .. R32
481 [-]: LEN       R31 R25      ; R31 := # R25
482 [-]: LT        0 R29 R31    ; if R29 >= R31 then PC := 487
483 [-]: JMP       487          ; PC := 487
484 [-]: MOVE      R31 R20      ; R31 := R20
485 [-]: LOADK     R32 K108     ; R32 := ", "
486 [-]: CONCAT    R20 R31 R32  ; R20 := R31 .. R32
487 [-]: FORLOOP   R26 472      ; R26 += R28; if R26 <= R27 then begin PC := 472; R29 := R26 end
488 [-]: MOVE      R31 R20      ; R31 := R20
489 [-]: LOADK     R32 K45      ; R32 := "\r\n\r\n"
490 [-]: CONCAT    R20 R31 R32  ; R20 := R31 .. R32
491 [-]: TFORLOOP  R21 2        ; R24,R25 :=  R21(R22,R23); if R24 ~= nil then begin PC = 458; R23 := R24 end
492 [-]: JMP       458          ; PC := 458
493 [-]: GETUPVAL  R31 U0       ; R31 := U0
494 [-]: GETTABLE  R31 R31 K6   ; R31 := R31[0xe0cba3ca]
495 [-]: MOVE      R32 R20      ; R32 := R20
496 [-]: CALL      R31 2 1      ; R31(R32)
497 [-]: RETURN    R0 1         ; return 
498 [-]: GETUPVAL  R31 U11      ; R31 := U11
499 [-]: GETTABLE  R31 R31 K109 ; R31 := R31[0x94098a1d]
500 [-]: GETGLOBAL R32 K110     ; R32 := 0x0469f296
501 [-]: GETGLOBAL R33 K25      ; R33 := 0x64fb1586
502 [-]: GETTABLE  R34 R0 K82   ; R34 := R0["mAlertInfo"]
503 [-]: GETTABLE  R34 R34 K84  ; R34 := R34["mMissionInfo"]
504 [-]: GETTABLE  R34 R34 K111 ; R34 := R34["location"]
505 [-]: CALL      R33 2 2      ; R33 := R33(R34)
506 [-]: MOVE      R34 R9       ; R34 := R9
507 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
508 [-]: CALL      R32 2 2      ; R32 := R32(R33)
509 [-]: LOADKB    R33 1 0      ; R33 := true
510 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
511 [-]: EQ        1 R31 K20    ; if R31 == nil then PC := 519
512 [-]: JMP       519          ; PC := 519
513 [-]: GETUPVAL  R32 U11      ; R32 := U11
514 [-]: GETTABLE  R32 R32 K112 ; R32 := R32[0xc0ee6a07]
515 [-]: MOVE      R33 R31      ; R33 := R31
516 [-]: CALL      R32 2 1      ; R32(R33)
517 [-]: LOADKB    R32 0 0      ; R32 := false
518 [-]: RETURN    R32 2        ; return R32
519 [-]: GETTABLE  R32 R0 K113  ; R32 := R0["mCompleted"]
520 [-]: TEST      R32 0        ; if not R32 then PC := 524
521 [-]: JMP       524          ; PC := 524
522 [-]: LOADKB    R32 0 0      ; R32 := false
523 [-]: RETURN    R32 2        ; return R32
524 [-]: GETUPVAL  R32 U9       ; R32 := U9
525 [-]: GETTABLE  R32 R32 K73  ; R32 := R32[0x29f54de9]
526 [-]: CALL      R32 1 1      ; R32()
527 [-]: GETGLOBAL R32 K4       ; R32 := _T
528 [-]: GETGLOBAL R33 K25      ; R33 := 0x64fb1586
529 [-]: GETTABLE  R34 R0 K82   ; R34 := R0["mAlertInfo"]
530 [-]: GETTABLE  R34 R34 K84  ; R34 := R34["mMissionInfo"]
531 [-]: GETTABLE  R34 R34 K111 ; R34 := R34["location"]
532 [-]: CALL      R33 2 2      ; R33 := R33(R34)
533 [-]: SETTABLE  R32 K24 R33  ; R32["DesiredGoToNode"] := R33
534 [-]: GETGLOBAL R32 K4       ; R32 := _T
535 [-]: SETTABLE  R32 K114 R9  ; R32["DesiredGoToNodeTag"] := R9
536 [-]: JMP       1075         ; PC := 1075
537 [-]: GETUPVAL  R32 U1       ; R32 := U1
538 [-]: GETTABLE  R32 R32 K115 ; R32 := R32["INVASION"]
539 [-]: EQ        0 R2 R32     ; if R2 ~= R32 then PC := 594
540 [-]: JMP       594          ; PC := 594
541 [-]: GETGLOBAL R32 K3       ; R32 := 0x7b998233
542 [-]: GETTABLE  R33 R0 K116  ; R33 := R0["RegionIdx"]
543 [-]: CALL      R32 2 2      ; R32 := R32(R33)
544 [-]: TEST      R32 1        ; if R32 then PC := 594
545 [-]: JMP       594          ; PC := 594
546 [-]: GETTABLE  R32 R0 K117  ; R32 := R0["Unlocked"]
547 [-]: TEST      R32 0        ; if not R32 then PC := 594
548 [-]: JMP       594          ; PC := 594
549 [-]: GETUPVAL  R32 U12      ; R32 := U12
550 [-]: GETTABLE  R33 R0 K118  ; R33 := R0["Region"]
551 [-]: GETTABLE  R32 R32 R33  ; R32 := R32[R33]
552 [-]: TEST      R32 0        ; if not R32 then PC := 574
553 [-]: JMP       574          ; PC := 574
554 [-]: GETUPVAL  R32 U12      ; R32 := U12
555 [-]: GETTABLE  R33 R0 K118  ; R33 := R0["Region"]
556 [-]: GETTABLE  R32 R32 R33  ; R32 := R32[R33]
557 [-]: GETTABLE  R32 R32 K119 ; R32 := R32["SubInvasions"]
558 [-]: LEN       R32 R32      ; R32 := # R32
559 [-]: EQ        0 R32 K12    ; if R32 ~= 1.000000 then PC := 574
560 [-]: JMP       574          ; PC := 574
561 [-]: GETGLOBAL R32 K4       ; R32 := _T
562 [-]: GETUPVAL  R33 U12      ; R33 := U12
563 [-]: GETTABLE  R34 R0 K118  ; R34 := R0["Region"]
564 [-]: GETTABLE  R33 R33 R34  ; R33 := R33[R34]
565 [-]: GETTABLE  R33 R33 K119 ; R33 := R33["SubInvasions"]
566 [-]: GETTABLE  R33 R33 K12  ; R33 := R33[1.000000]
567 [-]: GETTABLE  R33 R33 K120 ; R33 := R33["Location"]
568 [-]: SETTABLE  R32 K24 R33  ; R32["DesiredGoToNode"] := R33
569 [-]: GETGLOBAL R32 K4       ; R32 := _T
570 [-]: GETUPVAL  R33 U4       ; R33 := U4
571 [-]: GETTABLE  R33 R33 K121 ; R33 := R33["INVASION_ATTACKER_TAG"]
572 [-]: SETTABLE  R32 K114 R33 ; R32["DesiredGoToNodeTag"] := R33
573 [-]: JMP       1075         ; PC := 1075
574 [-]: GETGLOBAL R32 K4       ; R32 := _T
575 [-]: GETTABLE  R33 R0 K116  ; R33 := R0["RegionIdx"]
576 [-]: ADD       R33 R33 K12  ; R33 := R33 + 1.000000
577 [-]: SETTABLE  R32 K74 R33  ; R32["DesiredGoToRegion"] := R33
578 [-]: GETGLOBAL R32 K122     ; R32 := 0x9ba7909f
579 [-]: SELF      R32 R32 K123 ; R33 := R32; R32 := R32[0xbcfb64ab]
580 [-]: GETGLOBAL R34 K124     ; R34 := 0x6476f22d
581 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
582 [-]: GETGLOBAL R33 K3       ; R33 := 0x7b998233
583 [-]: MOVE      R34 R32      ; R34 := R32
584 [-]: CALL      R33 2 2      ; R33 := R33(R34)
585 [-]: TEST      R33 1        ; if R33 then PC := 1075
586 [-]: JMP       1075         ; PC := 1075
587 [-]: SELF      R33 R32 K51  ; R34 := R32; R33 := R32[0xe4162eed]
588 [-]: LOADK     R35 K125     ; R35 := "PulseInvasionNodes"
589 [-]: GETGLOBAL R36 K25      ; R36 := 0x64fb1586
590 [-]: GETTABLE  R37 R0 K116  ; R37 := R0["RegionIdx"]
591 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
592 [-]: CALL      R33 0 1      ; R33(R34,...)
593 [-]: JMP       1075         ; PC := 1075
594 [-]: GETUPVAL  R33 U1       ; R33 := U1
595 [-]: GETTABLE  R33 R33 K126 ; R33 := R33["EVENT"]
596 [-]: EQ        0 R2 R33     ; if R2 ~= R33 then PC := 889
597 [-]: JMP       889          ; PC := 889
598 [-]: GETGLOBAL R33 K3       ; R33 := 0x7b998233
599 [-]: GETTABLE  R34 R0 K127  ; R34 := R0["EventInfo"]
600 [-]: CALL      R33 2 2      ; R33 := R33(R34)
601 [-]: TEST      R33 1        ; if R33 then PC := 1075
602 [-]: JMP       1075         ; PC := 1075
603 [-]: GETTABLE  R33 R0 K127  ; R33 := R0["EventInfo"]
604 [-]: GETTABLE  R33 R33 K128 ; R33 := R33["mNode"]
605 [-]: TEST      R33 1        ; if R33 then PC := 611
606 [-]: JMP       611          ; PC := 611
607 [-]: GETTABLE  R33 R0 K127  ; R33 := R0["EventInfo"]
608 [-]: GETTABLE  R33 R33 K129 ; R33 := R33["mInvasionNode"]
609 [-]: TEST      R33 0        ; if not R33 then PC := 1075
610 [-]: JMP       1075         ; PC := 1075
611 [-]: GETUPVAL  R33 U4       ; R33 := U4
612 [-]: GETTABLE  R33 R33 K98  ; R33 := R33[0x5e35d4d6]
613 [-]: CALL      R33 1 2      ; R33 := R33()
614 [-]: GETTABLE  R34 R0 K127  ; R34 := R0["EventInfo"]
615 [-]: GETTABLE  R34 R34 K130 ; R34 := R34["mTag"]
616 [-]: GETUPVAL  R35 U13      ; R35 := U13
617 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 625
618 [-]: JMP       625          ; PC := 625
619 [-]: GETGLOBAL R34 K47      ; R34 := 0xae91e43b
620 [-]: SELF      R34 R34 K51  ; R35 := R34; R34 := R34[0xe4162eed]
621 [-]: LOADK     R36 K131     ; R36 := "TopMenuEntryPressed"
622 [-]: LOADK     R37 K132     ; R37 := "2"
623 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
624 [-]: JMP       1075         ; PC := 1075
625 [-]: GETGLOBAL R34 K38      ; R34 := 0x7f5022cf
626 [-]: GETTABLE  R34 R34 K88  ; R34 := R34[0xa5c556b9]
627 [-]: GETGLOBAL R35 K25      ; R35 := 0x64fb1586
628 [-]: GETTABLE  R36 R0 K127  ; R36 := R0["EventInfo"]
629 [-]: GETTABLE  R36 R36 K128 ; R36 := R36["mNode"]
630 [-]: CALL      R35 2 2      ; R35 := R35(R36)
631 [-]: LOADK     R36 K133     ; R36 := "Pvp"
632 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
633 [-]: TEST      R34 0        ; if not R34 then PC := 655
634 [-]: JMP       655          ; PC := 655
635 [-]: GETGLOBAL R34 K4       ; R34 := _T
636 [-]: SETTABLE  R34 K134 K135; R34["triggeredConsoleTag"] := "Conclave"
637 [-]: GETGLOBAL R34 K4       ; R34 := _T
638 [-]: SETTABLE  R34 K136 K137; R34["AutoStartAlternativeMatch"] := true
639 [-]: GETGLOBAL R34 K4       ; R34 := _T
640 [-]: GETGLOBAL R35 K25      ; R35 := 0x64fb1586
641 [-]: GETUPVAL  R36 U14      ; R36 := U14
642 [-]: GETTABLE  R37 R0 K127  ; R37 := R0["EventInfo"]
643 [-]: GETTABLE  R37 R37 K128 ; R37 := R37["mNode"]
644 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
645 [-]: CALL      R35 2 2      ; R35 := R35(R36)
646 [-]: SETTABLE  R34 K138 R35 ; R34["CurrentAlternative"] := R35
647 [-]: GETUPVAL  R34 U0       ; R34 := U0
648 [-]: GETTABLE  R34 R34 K139 ; R34 := R34[0xa9882367]
649 [-]: LOADK     R35 K140     ; R35 := "ConsoleTeleportAndActivate"
650 [-]: CALL      R34 2 2      ; R34 := R34(R35)
651 [-]: SELF      R34 R34 K141 ; R35 := R34; R34 := R34[0xd91e1179]
652 [-]: CALL      R34 2 1      ; R34(R35)
653 [-]: RETURN    R0 1         ; return 
654 [-]: JMP       1075         ; PC := 1075
655 [-]: GETGLOBAL R34 K3       ; R34 := 0x7b998233
656 [-]: GETTABLE  R35 R0 K127  ; R35 := R0["EventInfo"]
657 [-]: GETTABLE  R35 R35 K142 ; R35 := R35["mInstructionalItem"]
658 [-]: CALL      R34 2 2      ; R34 := R34(R35)
659 [-]: TEST      R34 1        ; if R34 then PC := 699
660 [-]: JMP       699          ; PC := 699
661 [-]: GETGLOBAL R34 K3       ; R34 := 0x7b998233
662 [-]: GETUPVAL  R35 U15      ; R35 := U15
663 [-]: CALL      R34 2 2      ; R34 := R34(R35)
664 [-]: TEST      R34 1        ; if R34 then PC := 669
665 [-]: JMP       669          ; PC := 669
666 [-]: GETUPVAL  R34 U15      ; R34 := U15
667 [-]: SELF      R34 R34 K143 ; R35 := R34; R34 := R34[0x32302b4a]
668 [-]: CALL      R34 2 1      ; R34(R35)
669 [-]: GETGLOBAL R34 K47      ; R34 := 0xae91e43b
670 [-]: SELF      R34 R34 K144 ; R35 := R34; R34 := R34[0x1fd6abd0]
671 [-]: GETGLOBAL R36 K145     ; R36 := 0x0032441c
672 [-]: GETTABLE  R36 R36 K146 ; R36 := R36["UIMovie_DetailedPurchaseDialog"]
673 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
674 [-]: SETUPVAL  R34 U15      ; U82 := R15
675 [-]: GETGLOBAL R34 K4       ; R34 := _T
676 [-]: NEWTABLE  R35 0 3      ; R35 := {}
677 [-]: NEWTABLE  R36 0 2      ; R36 := {}
678 [-]: GETGLOBAL R37 K150     ; R37 := 0xb009bbc6
679 [-]: GETTABLE  R38 R0 K127  ; R38 := R0["EventInfo"]
680 [-]: GETTABLE  R38 R38 K142 ; R38 := R38["mInstructionalItem"]
681 [-]: CALL      R37 2 2      ; R37 := R37(R38)
682 [-]: SETTABLE  R36 K149 R37 ; R36["StoreItem"] := R37
683 [-]: SETTABLE  R36 K151 K20 ; R36["UpgradeFingerprint"] := nil
684 [-]: SETTABLE  R35 K148 R36 ; R35["ITEM"] := R36
685 [-]: SETTABLE  R35 K152 K20 ; R35["CALLBACK"] := nil
686 [-]: SETTABLE  R35 K153 K20 ; R35["Anchor"] := nil
687 [-]: SETTABLE  R34 K147 R35 ; R34["marketDetailedViewParms"] := R35
688 [-]: GETUPVAL  R34 U15      ; R34 := U15
689 [-]: SELF      R34 R34 K51  ; R35 := R34; R34 := R34[0xe4162eed]
690 [-]: LOADK     R36 K154     ; R36 := "SetIgnoreTopMenu"
691 [-]: LOADK     R37 K155     ; R37 := "true"
692 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
693 [-]: GETUPVAL  R34 U15      ; R34 := U15
694 [-]: SELF      R34 R34 K156 ; R35 := R34; R34 := R34[0x27abb3c0]
695 [-]: CONST     R36 1        ; R36 := 1.000000
696 [-]: CALL      R34 3 1      ; R34(R35,R36)
697 [-]: RETURN    R0 1         ; return 
698 [-]: JMP       1075         ; PC := 1075
699 [-]: GETGLOBAL R34 K3       ; R34 := 0x7b998233
700 [-]: MOVE      R35 R33      ; R35 := R33
701 [-]: CALL      R34 2 2      ; R34 := R34(R35)
702 [-]: TEST      R34 1        ; if R34 then PC := 1075
703 [-]: JMP       1075         ; PC := 1075
704 [-]: GETGLOBAL R34 K38      ; R34 := 0x7f5022cf
705 [-]: GETTABLE  R34 R34 K88  ; R34 := R34[0xa5c556b9]
706 [-]: GETGLOBAL R35 K25      ; R35 := 0x64fb1586
707 [-]: GETTABLE  R36 R0 K127  ; R36 := R0["EventInfo"]
708 [-]: GETTABLE  R36 R36 K128 ; R36 := R36["mNode"]
709 [-]: CALL      R35 2 2      ; R35 := R35(R36)
710 [-]: GETUPVAL  R36 U4       ; R36 := U4
711 [-]: GETTABLE  R36 R36 K157 ; R36 := R36["ANY_NODE_PREFIX"]
712 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
713 [-]: EQ        1 R34 K20    ; if R34 == nil then PC := 719
714 [-]: JMP       719          ; PC := 719
715 [-]: GETTABLE  R34 R0 K127  ; R34 := R0["EventInfo"]
716 [-]: GETTABLE  R34 R34 K129 ; R34 := R34["mInvasionNode"]
717 [-]: TEST      R34 0        ; if not R34 then PC := 1075
718 [-]: JMP       1075         ; PC := 1075
719 [-]: GETTABLE  R34 R0 K127  ; R34 := R0["EventInfo"]
720 [-]: GETTABLE  R34 R34 K158 ; R34 := R34["mRoaming"]
721 [-]: EQ        0 R34 K137   ; if R34 ~= true then PC := 724
722 [-]: JMP       724          ; PC := 724
723 [-]: RETURN    R0 1         ; return 
724 [-]: GETTABLE  R34 R0 K159  ; R34 := R0["mLinearEventNode"]
725 [-]: TEST      R34 0        ; if not R34 then PC := 743
726 [-]: JMP       743          ; PC := 743
727 [-]: GETTABLE  R34 R0 K17   ; R34 := R0["mUnlocked"]
728 [-]: TEST      R34 1        ; if R34 then PC := 743
729 [-]: JMP       743          ; PC := 743
730 [-]: GETUPVAL  R34 U0       ; R34 := U0
731 [-]: GETTABLE  R34 R34 K6   ; R34 := R34[0xe0cba3ca]
732 [-]: GETGLOBAL R35 K47      ; R35 := 0xae91e43b
733 [-]: SELF      R35 R35 K160 ; R36 := R35; R35 := R35[0x42b04007]
734 [-]: LOADK     R37 K161     ; R37 := "/Lotus/Language/Menu/NeedToUnlockEventPrereqs"
735 [-]: LOADKB    R38 1 0      ; R38 := true
736 [-]: NEWTABLE  R39 0 1      ; R39 := {}
737 [-]: GETTABLE  R40 R0 K163  ; R40 := R0["mMissionNumber"]
738 [-]: SUB       R40 R40 K12  ; R40 := R40 - 1.000000
739 [-]: SETTABLE  R39 K162 R40 ; R39["PREREQ"] := R40
740 [-]: CALL      R35 5 0      ; R35,... := R35(R36,R37,R38,R39)
741 [-]: CALL      R34 0 1      ; R34(R35,...)
742 [-]: RETURN    R0 1         ; return 
743 [-]: GETUPVAL  R34 U0       ; R34 := U0
744 [-]: GETTABLE  R34 R34 K77  ; R34 := R34[0x06d055f9]
745 [-]: GETTABLE  R35 R0 K159  ; R35 := R0["mLinearEventNode"]
746 [-]: GETTABLE  R36 R0 K159  ; R36 := R0["mLinearEventNode"]
747 [-]: GETGLOBAL R37 K25      ; R37 := 0x64fb1586
748 [-]: GETTABLE  R38 R0 K127  ; R38 := R0["EventInfo"]
749 [-]: GETTABLE  R38 R38 K128 ; R38 := R38["mNode"]
750 [-]: CALL      R37 2 0      ; R37,... := R37(R38)
751 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
752 [-]: GETTABLE  R35 R0 K127  ; R35 := R0["EventInfo"]
753 [-]: GETTABLE  R35 R35 K129 ; R35 := R35["mInvasionNode"]
754 [-]: TEST      R35 0        ; if not R35 then PC := 775
755 [-]: JMP       775          ; PC := 775
756 [-]: GETGLOBAL R35 K4       ; R35 := _T
757 [-]: GETTABLE  R35 R35 K164 ; R35 := R35["CachedInvasionInfo"]
758 [-]: GETGLOBAL R36 K25      ; R36 := 0x64fb1586
759 [-]: GETTABLE  R37 R0 K127  ; R37 := R0["EventInfo"]
760 [-]: GETTABLE  R37 R37 K129 ; R37 := R37["mInvasionNode"]
761 [-]: CALL      R36 2 2      ; R36 := R36(R37)
762 [-]: GETTABLE  R35 R35 R36  ; R35 := R35[R36]
763 [-]: TEST      R35 0        ; if not R35 then PC := 775
764 [-]: JMP       775          ; PC := 775
765 [-]: GETGLOBAL R35 K25      ; R35 := 0x64fb1586
766 [-]: GETTABLE  R36 R0 K127  ; R36 := R0["EventInfo"]
767 [-]: GETTABLE  R36 R36 K129 ; R36 := R36["mInvasionNode"]
768 [-]: CALL      R35 2 2      ; R35 := R35(R36)
769 [-]: MOVE      R34 R35      ; R34 := R35
770 [-]: GETGLOBAL R35 K4       ; R35 := _T
771 [-]: GETUPVAL  R36 U4       ; R36 := U4
772 [-]: GETTABLE  R36 R36 K121 ; R36 := R36["INVASION_ATTACKER_TAG"]
773 [-]: SETTABLE  R35 K114 R36 ; R35["DesiredGoToNodeTag"] := R36
774 [-]: JMP       790          ; PC := 790
775 [-]: GETTABLE  R35 R0 K165  ; R35 := R0["IsGhoulEvent"]
776 [-]: TEST      R35 0        ; if not R35 then PC := 784
777 [-]: JMP       784          ; PC := 784
778 [-]: GETGLOBAL R35 K25      ; R35 := 0x64fb1586
779 [-]: GETUPVAL  R36 U4       ; R36 := U4
780 [-]: GETTABLE  R36 R36 K166 ; R36 := R36["CETUS_NODE_TAG"]
781 [-]: CALL      R35 2 2      ; R35 := R35(R36)
782 [-]: MOVE      R34 R35      ; R34 := R35
783 [-]: JMP       790          ; PC := 790
784 [-]: GETTABLE  R35 R0 K167  ; R35 := R0["IsRelayEvent"]
785 [-]: TEST      R35 0        ; if not R35 then PC := 790
786 [-]: JMP       790          ; PC := 790
787 [-]: MOVE      R35 R34      ; R35 := R34
788 [-]: LOADK     R36 K168     ; R36 := "Rebuild"
789 [-]: CONCAT    R34 R35 R36  ; R34 := R35 .. R36
790 [-]: GETUPVAL  R35 U11      ; R35 := U11
791 [-]: GETTABLE  R35 R35 K109 ; R35 := R35[0x94098a1d]
792 [-]: GETGLOBAL R36 K110     ; R36 := 0x0469f296
793 [-]: MOVE      R37 R34      ; R37 := R34
794 [-]: GETUPVAL  R38 U4       ; R38 := U4
795 [-]: GETTABLE  R38 R38 K169 ; R38 := R38["EVENT_TAG"]
796 [-]: CONCAT    R37 R37 R38  ; R37 := R37 .. R38
797 [-]: CALL      R36 2 2      ; R36 := R36(R37)
798 [-]: LOADKB    R37 1 0      ; R37 := true
799 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
800 [-]: EQ        1 R35 K20    ; if R35 == nil then PC := 808
801 [-]: JMP       808          ; PC := 808
802 [-]: GETUPVAL  R36 U11      ; R36 := U11
803 [-]: GETTABLE  R36 R36 K112 ; R36 := R36[0xc0ee6a07]
804 [-]: MOVE      R37 R35      ; R37 := R35
805 [-]: CALL      R36 2 1      ; R36(R37)
806 [-]: LOADKB    R36 0 0      ; R36 := false
807 [-]: RETURN    R36 2        ; return R36
808 [-]: SELF      R36 R33 K170 ; R37 := R33; R36 := R33[0x3ad9ed31]
809 [-]: GETGLOBAL R38 K110     ; R38 := 0x0469f296
810 [-]: MOVE      R39 R34      ; R39 := R34
811 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
812 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
813 [-]: GETTABLE  R37 R36 K171 ; R37 := R36["region"]
814 [-]: ADD       R37 R37 K12  ; R37 := R37 + 1.000000
815 [-]: LOADNIL   R38 R38      ; R38 := nil
816 [-]: EQ        0 R34 K48    ; if R34 ~= "" then PC := 842
817 [-]: JMP       842          ; PC := 842
818 [-]: GETTABLE  R39 R0 K127  ; R39 := R0["EventInfo"]
819 [-]: GETTABLE  R39 R39 K172 ; R39 := R39["mRegions"]
820 [-]: LEN       R40 R39      ; R40 := # R39
821 [-]: EQ        0 R40 K173   ; if R40 ~= 0.000000 then PC := 824
822 [-]: JMP       824          ; PC := 824
823 [-]: RETURN    R0 1         ; return 
824 [-]: GETGLOBAL R40 K174     ; R40 := 0xc8802016
825 [-]: MOVE      R41 R39      ; R41 := R39
826 [-]: CALL      R40 2 4      ; R40,R41,R42 := R40(R41)
827 [-]: JMP       839          ; PC := 839
828 [-]: ADD       R37 R44 K12  ; R37 := R44 + 1.000000
829 [-]: GETUPVAL  R45 U4       ; R45 := U4
830 [-]: GETTABLE  R45 R45 K175 ; R45 := R45[0xdebdf69b]
831 [-]: MOVE      R46 R33      ; R46 := R33
832 [-]: GETUPVAL  R47 U16      ; R47 := U16
833 [-]: MOVE      R48 R37      ; R48 := R37
834 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
835 [-]: MOVE      R38 R45      ; R38 := R45
836 [-]: TEST      R38 0        ; if not R38 then PC := 839
837 [-]: JMP       839          ; PC := 839
838 [-]: JMP       849          ; PC := 849
839 [-]: TFORLOOP  R40 2        ; R43,R44 :=  R40(R41,R42); if R43 ~= nil then begin PC = 828; R42 := R43 end
840 [-]: JMP       828          ; PC := 828
841 [-]: JMP       849          ; PC := 849
842 [-]: GETUPVAL  R45 U4       ; R45 := U4
843 [-]: GETTABLE  R45 R45 K175 ; R45 := R45[0xdebdf69b]
844 [-]: MOVE      R46 R33      ; R46 := R33
845 [-]: GETUPVAL  R47 U16      ; R47 := U16
846 [-]: MOVE      R48 R37      ; R48 := R37
847 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
848 [-]: MOVE      R38 R45      ; R38 := R45
849 [-]: TEST      R38 0        ; if not R38 then PC := 868
850 [-]: JMP       868          ; PC := 868
851 [-]: GETTABLE  R45 R36 K101 ; R45 := R36["name"]
852 [-]: TEST      R45 0        ; if not R45 then PC := 865
853 [-]: JMP       865          ; PC := 865
854 [-]: GETGLOBAL R45 K25      ; R45 := 0x64fb1586
855 [-]: GETTABLE  R46 R36 K101 ; R46 := R36["name"]
856 [-]: CALL      R45 2 2      ; R45 := R45(R46)
857 [-]: EQ        1 R45 K48    ; if R45 == "" then PC := 865
858 [-]: JMP       865          ; PC := 865
859 [-]: GETGLOBAL R45 K4       ; R45 := _T
860 [-]: GETGLOBAL R46 K25      ; R46 := 0x64fb1586
861 [-]: GETTABLE  R47 R36 K101 ; R47 := R36["name"]
862 [-]: CALL      R46 2 2      ; R46 := R46(R47)
863 [-]: SETTABLE  R45 K24 R46  ; R45["DesiredGoToNode"] := R46
864 [-]: JMP       1075         ; PC := 1075
865 [-]: GETGLOBAL R45 K4       ; R45 := _T
866 [-]: SETTABLE  R45 K74 R37  ; R45["DesiredGoToRegion"] := R37
867 [-]: JMP       1075         ; PC := 1075
868 [-]: SELF      R45 R33 K176 ; R46 := R33; R45 := R33[0xc1dee03f]
869 [-]: CALL      R45 2 2      ; R45 := R45(R46)
870 [-]: GETTABLE  R45 R45 R37  ; R45 := R45[R37]
871 [-]: GETGLOBAL R46 K32      ; R46 := 0x603636ad
872 [-]: GETGLOBAL R47 K25      ; R47 := 0x64fb1586
873 [-]: GETTABLE  R48 R45 K101 ; R48 := R45["name"]
874 [-]: CALL      R47 2 2      ; R47 := R47(R48)
875 [-]: LOADNIL   R48 R48      ; R48 := nil
876 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
877 [-]: GETUPVAL  R47 U0       ; R47 := U0
878 [-]: GETTABLE  R47 R47 K6   ; R47 := R47[0xe0cba3ca]
879 [-]: GETGLOBAL R48 K47      ; R48 := 0xae91e43b
880 [-]: SELF      R48 R48 K160 ; R49 := R48; R48 := R48[0x42b04007]
881 [-]: LOADK     R50 K177     ; R50 := "/Lotus/Language/Menu/NeedToUnlockRegion"
882 [-]: LOADKB    R51 1 0      ; R51 := true
883 [-]: NEWTABLE  R52 0 1      ; R52 := {}
884 [-]: SETTABLE  R52 K178 R46 ; R52["REGION"] := R46
885 [-]: CALL      R48 5 0      ; R48,... := R48(R49,R50,R51,R52)
886 [-]: CALL      R47 0 1      ; R47(R48,...)
887 [-]: RETURN    R0 1         ; return 
888 [-]: JMP       1075         ; PC := 1075
889 [-]: GETUPVAL  R47 U1       ; R47 := U1
890 [-]: GETTABLE  R47 R47 K15  ; R47 := R47["SYND_MISSION"]
891 [-]: EQ        0 R2 R47     ; if R2 ~= R47 then PC := 921
892 [-]: JMP       921          ; PC := 921
893 [-]: GETGLOBAL R47 K3       ; R47 := 0x7b998233
894 [-]: GETTABLE  R48 R0 K84   ; R48 := R0["mMissionInfo"]
895 [-]: CALL      R47 2 2      ; R47 := R47(R48)
896 [-]: TEST      R47 1        ; if R47 then PC := 921
897 [-]: JMP       921          ; PC := 921
898 [-]: GETTABLE  R47 R0 K97   ; R47 := R0["mRegionUnlocked"]
899 [-]: TEST      R47 0        ; if not R47 then PC := 1075
900 [-]: JMP       1075         ; PC := 1075
901 [-]: GETTABLE  R47 R0 K179  ; R47 := R0["mIsUnlockHint"]
902 [-]: TEST      R47 1        ; if R47 then PC := 1075
903 [-]: JMP       1075         ; PC := 1075
904 [-]: GETUPVAL  R47 U9       ; R47 := U9
905 [-]: GETTABLE  R47 R47 K73  ; R47 := R47[0x29f54de9]
906 [-]: CALL      R47 1 1      ; R47()
907 [-]: GETGLOBAL R47 K4       ; R47 := _T
908 [-]: GETGLOBAL R48 K25      ; R48 := 0x64fb1586
909 [-]: GETTABLE  R49 R0 K84   ; R49 := R0["mMissionInfo"]
910 [-]: GETTABLE  R49 R49 K111 ; R49 := R49["location"]
911 [-]: CALL      R48 2 2      ; R48 := R48(R49)
912 [-]: SETTABLE  R47 K24 R48  ; R47["DesiredGoToNode"] := R48
913 [-]: GETTABLE  R47 R0 K180  ; R47 := R0["mIsRegularMission"]
914 [-]: TEST      R47 1        ; if R47 then PC := 1075
915 [-]: JMP       1075         ; PC := 1075
916 [-]: GETGLOBAL R47 K4       ; R47 := _T
917 [-]: GETUPVAL  R48 U4       ; R48 := U4
918 [-]: GETTABLE  R48 R48 K181 ; R48 := R48["SYNDICATE_MISSION_TAG"]
919 [-]: SETTABLE  R47 K114 R48 ; R47["DesiredGoToNodeTag"] := R48
920 [-]: JMP       1075         ; PC := 1075
921 [-]: GETUPVAL  R47 U1       ; R47 := U1
922 [-]: GETTABLE  R47 R47 K182 ; R47 := R47["PVPCHALLENGES"]
923 [-]: EQ        0 R2 R47     ; if R2 ~= R47 then PC := 929
924 [-]: JMP       929          ; PC := 929
925 [-]: GETUPVAL  R47 U17      ; R47 := U17
926 [-]: MOVE      R48 R0       ; R48 := R0
927 [-]: CALL      R47 2 1      ; R47(R48)
928 [-]: JMP       1075         ; PC := 1075
929 [-]: GETUPVAL  R47 U1       ; R47 := U1
930 [-]: GETTABLE  R47 R47 K183 ; R47 := R47["SORTIE"]
931 [-]: EQ        1 R2 R47     ; if R2 == R47 then PC := 937
932 [-]: JMP       937          ; PC := 937
933 [-]: GETUPVAL  R47 U1       ; R47 := U1
934 [-]: GETTABLE  R47 R47 K184 ; R47 := R47["LITE_SORTIE"]
935 [-]: EQ        0 R2 R47     ; if R2 ~= R47 then PC := 1038
936 [-]: JMP       1038         ; PC := 1038
937 [-]: GETGLOBAL R47 K3       ; R47 := 0x7b998233
938 [-]: GETTABLE  R48 R0 K84   ; R48 := R0["mMissionInfo"]
939 [-]: CALL      R47 2 2      ; R47 := R47(R48)
940 [-]: TEST      R47 1        ; if R47 then PC := 1033
941 [-]: JMP       1033         ; PC := 1033
942 [-]: GETTABLE  R47 R0 K185  ; R47 := R0["mShowInStarChart"]
943 [-]: TEST      R47 0        ; if not R47 then PC := 968
944 [-]: JMP       968          ; PC := 968
945 [-]: GETUPVAL  R47 U9       ; R47 := U9
946 [-]: GETTABLE  R47 R47 K73  ; R47 := R47[0x29f54de9]
947 [-]: CALL      R47 1 1      ; R47()
948 [-]: GETGLOBAL R47 K4       ; R47 := _T
949 [-]: GETGLOBAL R48 K25      ; R48 := 0x64fb1586
950 [-]: GETTABLE  R49 R0 K84   ; R49 := R0["mMissionInfo"]
951 [-]: GETTABLE  R49 R49 K111 ; R49 := R49["location"]
952 [-]: CALL      R48 2 2      ; R48 := R48(R49)
953 [-]: SETTABLE  R47 K24 R48  ; R47["DesiredGoToNode"] := R48
954 [-]: GETUPVAL  R47 U1       ; R47 := U1
955 [-]: GETTABLE  R47 R47 K183 ; R47 := R47["SORTIE"]
956 [-]: EQ        0 R2 R47     ; if R2 ~= R47 then PC := 963
957 [-]: JMP       963          ; PC := 963
958 [-]: GETGLOBAL R47 K4       ; R47 := _T
959 [-]: GETUPVAL  R48 U4       ; R48 := U4
960 [-]: GETTABLE  R48 R48 K186 ; R48 := R48["SORTIE_MISSION_TAG"]
961 [-]: SETTABLE  R47 K114 R48 ; R47["DesiredGoToNodeTag"] := R48
962 [-]: JMP       1075         ; PC := 1075
963 [-]: GETGLOBAL R47 K4       ; R47 := _T
964 [-]: GETUPVAL  R48 U4       ; R48 := U4
965 [-]: GETTABLE  R48 R48 K187 ; R48 := R48["LITE_SORTIE_MISSION_TAG"]
966 [-]: SETTABLE  R47 K114 R48 ; R47["DesiredGoToNodeTag"] := R48
967 [-]: JMP       1075         ; PC := 1075
968 [-]: GETTABLE  R47 R0 K113  ; R47 := R0["mCompleted"]
969 [-]: TEST      R47 1        ; if R47 then PC := 1075
970 [-]: JMP       1075         ; PC := 1075
971 [-]: GETUPVAL  R47 U4       ; R47 := U4
972 [-]: GETTABLE  R47 R47 K98  ; R47 := R47[0x5e35d4d6]
973 [-]: CALL      R47 1 2      ; R47 := R47()
974 [-]: SELF      R48 R47 K170 ; R49 := R47; R48 := R47[0x3ad9ed31]
975 [-]: GETTABLE  R50 R0 K84   ; R50 := R0["mMissionInfo"]
976 [-]: GETTABLE  R50 R50 K111 ; R50 := R50["location"]
977 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
978 [-]: GETGLOBAL R49 K32      ; R49 := 0x603636ad
979 [-]: GETGLOBAL R50 K25      ; R50 := 0x64fb1586
980 [-]: GETTABLE  R51 R48 K104 ; R51 := R48["locTag"]
981 [-]: CALL      R50 2 2      ; R50 := R50(R51)
982 [-]: LOADKB    R51 0 0      ; R51 := false
983 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
984 [-]: SELF      R50 R47 K176 ; R51 := R47; R50 := R47[0xc1dee03f]
985 [-]: CALL      R50 2 2      ; R50 := R50(R51)
986 [-]: GETTABLE  R51 R48 K171 ; R51 := R48["region"]
987 [-]: ADD       R51 R51 K12  ; R51 := R51 + 1.000000
988 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
989 [-]: GETGLOBAL R51 K32      ; R51 := 0x603636ad
990 [-]: GETGLOBAL R52 K25      ; R52 := 0x64fb1586
991 [-]: GETTABLE  R53 R50 K101 ; R53 := R50["name"]
992 [-]: CALL      R52 2 2      ; R52 := R52(R53)
993 [-]: LOADNIL   R53 R53      ; R53 := nil
994 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
995 [-]: GETTABLE  R52 R0 K188  ; R52 := R0["mNodeUnlocked"]
996 [-]: TEST      R52 1        ; if R52 then PC := 1010
997 [-]: JMP       1010         ; PC := 1010
998 [-]: GETUPVAL  R52 U0       ; R52 := U0
999 [-]: GETTABLE  R52 R52 K6   ; R52 := R52[0xe0cba3ca]
1000 [-]: GETGLOBAL R53 K47      ; R53 := 0xae91e43b
1001 [-]: SELF      R53 R53 K160 ; R54 := R53; R53 := R53[0x42b04007]
1002 [-]: LOADK     R55 K189     ; R55 := "/Lotus/Language/Menu/NeedToUnlockNode"
1003 [-]: LOADKB    R56 1 0      ; R56 := true
1004 [-]: NEWTABLE  R57 0 2      ; R57 := {}
1005 [-]: SETTABLE  R57 K190 R49 ; R57["NODE"] := R49
1006 [-]: SETTABLE  R57 K178 R51 ; R57["REGION"] := R51
1007 [-]: CALL      R53 5 0      ; R53,... := R53(R54,R55,R56,R57)
1008 [-]: CALL      R52 0 1      ; R52(R53,...)
1009 [-]: JMP       1031         ; PC := 1031
1010 [-]: GETUPVAL  R52 U0       ; R52 := U0
1011 [-]: GETTABLE  R52 R52 K6   ; R52 := R52[0xe0cba3ca]
1012 [-]: GETGLOBAL R53 K47      ; R53 := 0xae91e43b
1013 [-]: SELF      R53 R53 K160 ; R54 := R53; R53 := R53[0x42b04007]
1014 [-]: GETUPVAL  R55 U0       ; R55 := U0
1015 [-]: GETTABLE  R55 R55 K77  ; R55 := R55[0x06d055f9]
1016 [-]: GETUPVAL  R56 U1       ; R56 := U1
1017 [-]: GETTABLE  R56 R56 K184 ; R56 := R56["LITE_SORTIE"]
1018 [-]: EQ        1 R2 R56     ; if R2 == R56 then PC := 1021
1019 [-]: JMP       1021         ; PC := 1021
1020 [-]: LOADKB    R56 0 1      ; R56 := false; PC := 1021
1021 [-]: LOADKB    R56 1 0      ; R56 := true
1022 [-]: LOADK     R57 K191     ; R57 := "/Lotus/Language/WorldStateWindow/LiteSortieUnlockPrereqs"
1023 [-]: LOADK     R58 K192     ; R58 := "/Lotus/Language/Menu/NeedToUnlockPrereqs"
1024 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
1025 [-]: LOADKB    R56 0 0      ; R56 := false
1026 [-]: NEWTABLE  R57 0 1      ; R57 := {}
1027 [-]: GETTABLE  R58 R0 K193  ; R58 := R0["mPrereqDesc"]
1028 [-]: SETTABLE  R57 K162 R58 ; R57["PREREQ"] := R58
1029 [-]: CALL      R53 5 0      ; R53,... := R53(R54,R55,R56,R57)
1030 [-]: CALL      R52 0 1      ; R52(R53,...)
1031 [-]: RETURN    R0 1         ; return 
1032 [-]: JMP       1075         ; PC := 1075
1033 [-]: GETTABLE  R52 R0 K194  ; R52 := R0["mIsModifiersHint"]
1034 [-]: TEST      R52 0        ; if not R52 then PC := 1075
1035 [-]: JMP       1075         ; PC := 1075
1036 [-]: RETURN    R0 1         ; return 
1037 [-]: JMP       1075         ; PC := 1075
1038 [-]: GETUPVAL  R52 U1       ; R52 := U1
1039 [-]: GETTABLE  R52 R52 K195 ; R52 := R52["VOID_TEAR_MISSION"]
1040 [-]: EQ        0 R2 R52     ; if R2 ~= R52 then PC := 1075
1041 [-]: JMP       1075         ; PC := 1075
1042 [-]: GETGLOBAL R52 K3       ; R52 := 0x7b998233
1043 [-]: GETTABLE  R53 R0 K84   ; R53 := R0["mMissionInfo"]
1044 [-]: CALL      R52 2 2      ; R52 := R52(R53)
1045 [-]: TEST      R52 1        ; if R52 then PC := 1075
1046 [-]: JMP       1075         ; PC := 1075
1047 [-]: GETGLOBAL R52 K40      ; R52 := 0x34291f5c
1048 [-]: GETTABLE  R52 R52 K196 ; R52 := R52[0x397b920f]
1049 [-]: GETTABLE  R53 R0 K197  ; R53 := R0["mExpiry"]
1050 [-]: CALL      R52 2 2      ; R52 := R52(R53)
1051 [-]: LT        0 K173 R52   ; if 0.000000 >= R52 then PC := 1075
1052 [-]: JMP       1075         ; PC := 1075
1053 [-]: GETTABLE  R52 R0 K97   ; R52 := R0["mRegionUnlocked"]
1054 [-]: TEST      R52 0        ; if not R52 then PC := 1075
1055 [-]: JMP       1075         ; PC := 1075
1056 [-]: GETGLOBAL R52 K3       ; R52 := 0x7b998233
1057 [-]: GETGLOBAL R53 K4       ; R53 := _T
1058 [-]: GETTABLE  R53 R53 K13  ; R53 := R53["gPendingMission"]
1059 [-]: CALL      R52 2 2      ; R52 := R52(R53)
1060 [-]: TEST      R52 1        ; if R52 then PC := 1065
1061 [-]: JMP       1065         ; PC := 1065
1062 [-]: GETUPVAL  R52 U9       ; R52 := U9
1063 [-]: GETTABLE  R52 R52 K73  ; R52 := R52[0x29f54de9]
1064 [-]: CALL      R52 1 1      ; R52()
1065 [-]: GETGLOBAL R52 K4       ; R52 := _T
1066 [-]: GETGLOBAL R53 K25      ; R53 := 0x64fb1586
1067 [-]: GETTABLE  R54 R0 K84   ; R54 := R0["mMissionInfo"]
1068 [-]: GETTABLE  R54 R54 K111 ; R54 := R54["location"]
1069 [-]: CALL      R53 2 2      ; R53 := R53(R54)
1070 [-]: SETTABLE  R52 K24 R53  ; R52["DesiredGoToNode"] := R53
1071 [-]: GETGLOBAL R52 K4       ; R52 := _T
1072 [-]: GETUPVAL  R53 U4       ; R53 := U4
1073 [-]: GETTABLE  R53 R53 K198 ; R53 := R53["ACTIVE_MISSION_TAG"]
1074 [-]: SETTABLE  R52 K114 R53 ; R52["DesiredGoToNodeTag"] := R53
1075 [-]: GETUPVAL  R52 U18      ; R52 := U18
1076 [-]: CALL      R52 1 1      ; R52()
1077 [-]: RETURN    R0 1         ; return 


; Function #67.6.1:
;
; Name:            
; Defined at line: 4548
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xef3e3165]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: CONST     R6 40        ; R6 := 40.000000
  7 [-]: LOADK     R7 K2        ; R7 := ""
  8 [-]: LOADK     R8 K3        ; R8 := "OSKConfirmQuestCommitment"
  9 [-]: CALL      R2 7 3       ; R2,R3 := R2(R3,R4,R5,R6,R7,R8)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 13 [-]: MOVE      R5 R3        ; R5 := R3
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3[0xe4162eed]
 18 [-]: LOADK     R6 K6        ; R6 := "SetConditionalWord"
 19 [-]: GETUPVAL  R7 U3        ; R7 := U3
 20 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 21 [-]: RETURN    R0 1         ; return 


; Function #67.7:
;
; Name:            
; Defined at line: 4816
; #Upvalues:       15
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xa7ec3e8a]
  9 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: TEST      R1 1         ; if R1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 16 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 17 [-]: CONST     R4 11        ; R4 := 11.000000
 18 [-]: LOADKB    R5 1 0       ; R5 := true
 19 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 20 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 22 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 23 [-]: CONST     R4 59        ; R4 := 59.000000
 24 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["IsConstructionEntry"]
 25 [-]: NOT       R5 R5        ; R5 :=  R5
 26 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 27 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 28 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xc0a3774b]
 29 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 30 [-]: LOADK     R4 K7        ; R4 := "Header"
 31 [-]: CONST     R5 11        ; R5 := 11.000000
 32 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["IsHeader"]
 33 [-]: EQ        1 R6 K9      ; if R6 == true then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 36
 36 [-]: LOADKB    R6 1 0       ; R6 := true
 37 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 38 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 39 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xc0a3774b]
 40 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 41 [-]: LOADK     R4 K10       ; R4 := "Btn"
 42 [-]: CONST     R5 11        ; R5 := 11.000000
 43 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["IsHeader"]
 44 [-]: NOT       R6 R6        ; R6 :=  R6
 45 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 46 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["EntryId"]
 47 [-]: GETUPVAL  R2 U0        ; R2 := U0
 48 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0xed1ab921]
 49 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 50 [-]: GETGLOBAL R3 K13       ; R3 := 0x7b998233
 51 [-]: MOVE      R4 R2        ; R4 := R2
 52 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 53 [-]: TEST      R3 1         ; if R3 then PC := 59
 54 [-]: JMP       59           ; PC := 59
 55 [-]: GETTABLE  R3 R2 K14    ; R3 := R2["Id"]
 56 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["Id"]
 57 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 60
 60 [-]: LOADKB    R3 1 0       ; R3 := true
 61 [-]: GETUPVAL  R4 U1        ; R4 := U1
 62 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["Background1Object"]
 63 [-]: GETUPVAL  R5 U2        ; R5 := U2
 64 [-]: GETTABLE  R5 R5 K16    ; R5 := R5[0x06d055f9]
 65 [-]: MOVE      R6 R3        ; R6 := R3
 66 [-]: GETUPVAL  R7 U1        ; R7 := U1
 67 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["FloatingContentHighlightObject"]
 68 [-]: GETUPVAL  R8 U1        ; R8 := U1
 69 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["FloatingContentObject"]
 70 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 71 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 72 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xc0a3774b]
 73 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 74 [-]: LOADK     R9 K19       ; R9 := "Outline"
 75 [-]: CONST     R10 11       ; R10 := 11.000000
 76 [-]: LOADKB    R11 1 0      ; R11 := true
 77 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 78 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 79 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0xd5181643]
 80 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 81 [-]: LOADK     R9 K21       ; R9 := ".Outline"
 82 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 83 [-]: GETGLOBAL R9 K22       ; R9 := 0xe3d94630
 84 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 85 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 86 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0x91e13703]
 87 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 88 [-]: LOADK     R9 K21       ; R9 := ".Outline"
 89 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 90 [-]: LOADK     R9 K24       ; R9 := "RectEdgeColor"
 91 [-]: GETTABLE  R10 R5 K25   ; R10 := R5["r"]
 92 [-]: GETTABLE  R11 R5 K26   ; R11 := R5["g"]
 93 [-]: GETTABLE  R12 R5 K27   ; R12 := R5["b"]
 94 [-]: GETUPVAL  R13 U2       ; R13 := U2
 95 [-]: GETTABLE  R13 R13 K16  ; R13 := R13[0x06d055f9]
 96 [-]: MOVE      R14 R3       ; R14 := R3
 97 [-]: LOADK     R15 K28      ; R15 := 0.600000
 98 [-]: LOADK     R16 K29      ; R16 := 0.400000
 99 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
100 [-]: CALL      R6 0 1       ; R6(R7,...)
101 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
102 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0x91e13703]
103 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
104 [-]: LOADK     R9 K21       ; R9 := ".Outline"
105 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
106 [-]: LOADK     R9 K30       ; R9 := "RectInnerColor"
107 [-]: GETTABLE  R10 R4 K25   ; R10 := R4["r"]
108 [-]: GETTABLE  R11 R4 K26   ; R11 := R4["g"]
109 [-]: GETTABLE  R12 R4 K27   ; R12 := R4["b"]
110 [-]: LOADK     R13 K31      ; R13 := 0.900000
111 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
112 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
113 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
114 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
115 [-]: LOADK     R9 K33       ; R9 := "Arrow"
116 [-]: CONST     R10 9        ; R10 := 9.000000
117 [-]: GETUPVAL  R11 U1       ; R11 := U1
118 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["FloatingContent"]
119 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
120 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
121 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
122 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
123 [-]: LOADK     R9 K33       ; R9 := "Arrow"
124 [-]: CONST     R10 10       ; R10 := 10.000000
125 [-]: CONST     R11 10       ; R11 := 10.000000
126 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
127 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
128 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
129 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
130 [-]: LOADK     R9 K35       ; R9 := "ArrowCircle.Arrow"
131 [-]: CONST     R10 9        ; R10 := 9.000000
132 [-]: GETUPVAL  R11 U1       ; R11 := U1
133 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["FloatingContent"]
134 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
135 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
136 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
137 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
138 [-]: LOADK     R9 K36       ; R9 := "ArrowCircle.Check"
139 [-]: CONST     R10 9        ; R10 := 9.000000
140 [-]: GETUPVAL  R11 U1       ; R11 := U1
141 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["FloatingContentHighlight"]
142 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
143 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
144 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
145 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
146 [-]: LOADK     R9 K35       ; R9 := "ArrowCircle.Arrow"
147 [-]: CONST     R10 10       ; R10 := 10.000000
148 [-]: CONST     R11 40       ; R11 := 40.000000
149 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
150 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
151 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0xd5181643]
152 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
153 [-]: LOADK     R9 K38       ; R9 := ".ArrowCircle.Arrow"
154 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
155 [-]: GETGLOBAL R9 K39       ; R9 := 0x0032441c
156 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["UIMaterial_VitruvianLines"]
157 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
158 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
159 [-]: SELF      R6 R6 K41    ; R7 := R6; R6 := R6[0xef99134f]
160 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
161 [-]: LOADK     R9 K42       ; R9 := ".ArrowCircle.Check"
162 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
163 [-]: GETGLOBAL R9 K43       ; R9 := 0xeb421bba
164 [-]: GETGLOBAL R10 K39      ; R10 := 0x0032441c
165 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["UIMaterial_VitruvianLines"]
166 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
167 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
168 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xc0a3774b]
169 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
170 [-]: LOADK     R9 K44       ; R9 := "ArrowCircle"
171 [-]: CONST     R10 11       ; R10 := 11.000000
172 [-]: LOADKB    R11 0 0      ; R11 := false
173 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
174 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
175 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0xd5181643]
176 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
177 [-]: LOADK     R9 K45       ; R9 := ".Highlight"
178 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
179 [-]: GETGLOBAL R9 K46       ; R9 := 0x3f56a9a5
180 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
181 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
182 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
183 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
184 [-]: LOADK     R9 K47       ; R9 := "Highlight"
185 [-]: CONST     R10 9        ; R10 := 9.000000
186 [-]: GETUPVAL  R11 U1       ; R11 := U1
187 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["FloatingContentHighlight"]
188 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
189 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
190 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
191 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
192 [-]: LOADK     R9 K47       ; R9 := "Highlight"
193 [-]: CONST     R10 10       ; R10 := 10.000000
194 [-]: CONST     R11 20       ; R11 := 20.000000
195 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
196 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
197 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0xf64b7262]
198 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
199 [-]: LOADK     R9 K47       ; R9 := "Highlight"
200 [-]: CONST     R10 13       ; R10 := 13.000000
201 [-]: LOADK     R11 K48      ; R11 := 0.001000
202 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
203 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
204 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xc0a3774b]
205 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
206 [-]: LOADK     R9 K49       ; R9 := "Progress"
207 [-]: CONST     R10 11       ; R10 := 11.000000
208 [-]: LOADKB    R11 1 0      ; R11 := true
209 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
210 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
211 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xc0a3774b]
212 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
213 [-]: LOADK     R9 K50       ; R9 := "Details"
214 [-]: CONST     R10 11       ; R10 := 11.000000
215 [-]: LOADKB    R11 1 0      ; R11 := true
216 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
217 [-]: GETUPVAL  R6 U3        ; R6 := U3
218 [-]: GETTABLE  R6 R6 K51    ; R6 := R6["QUEST"]
219 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 226
220 [-]: JMP       226          ; PC := 226
221 [-]: GETUPVAL  R6 U4        ; R6 := U4
222 [-]: MOVE      R7 R0        ; R7 := R0
223 [-]: MOVE      R8 R3        ; R8 := R3
224 [-]: CALL      R6 3 1       ; R6(R7,R8)
225 [-]: JMP       308          ; PC := 308
226 [-]: GETUPVAL  R6 U3        ; R6 := U3
227 [-]: GETTABLE  R6 R6 K52    ; R6 := R6["EVENT"]
228 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 235
229 [-]: JMP       235          ; PC := 235
230 [-]: GETUPVAL  R6 U5        ; R6 := U5
231 [-]: MOVE      R7 R0        ; R7 := R0
232 [-]: MOVE      R8 R3        ; R8 := R3
233 [-]: CALL      R6 3 1       ; R6(R7,R8)
234 [-]: JMP       308          ; PC := 308
235 [-]: GETUPVAL  R6 U3        ; R6 := U3
236 [-]: GETTABLE  R6 R6 K53    ; R6 := R6["ALERT"]
237 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 244
238 [-]: JMP       244          ; PC := 244
239 [-]: GETUPVAL  R6 U6        ; R6 := U6
240 [-]: MOVE      R7 R0        ; R7 := R0
241 [-]: MOVE      R8 R3        ; R8 := R3
242 [-]: CALL      R6 3 1       ; R6(R7,R8)
243 [-]: JMP       308          ; PC := 308
244 [-]: GETUPVAL  R6 U3        ; R6 := U3
245 [-]: GETTABLE  R6 R6 K54    ; R6 := R6["INVASION"]
246 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 253
247 [-]: JMP       253          ; PC := 253
248 [-]: GETUPVAL  R6 U7        ; R6 := U7
249 [-]: MOVE      R7 R0        ; R7 := R0
250 [-]: MOVE      R8 R3        ; R8 := R3
251 [-]: CALL      R6 3 1       ; R6(R7,R8)
252 [-]: JMP       308          ; PC := 308
253 [-]: GETUPVAL  R6 U3        ; R6 := U3
254 [-]: GETTABLE  R6 R6 K55    ; R6 := R6["SYND_MISSION"]
255 [-]: EQ        1 R1 R6      ; if R1 == R6 then PC := 261
256 [-]: JMP       261          ; PC := 261
257 [-]: GETUPVAL  R6 U3        ; R6 := U3
258 [-]: GETTABLE  R6 R6 K56    ; R6 := R6["PVPCHALLENGES"]
259 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 266
260 [-]: JMP       266          ; PC := 266
261 [-]: GETUPVAL  R6 U8        ; R6 := U8
262 [-]: MOVE      R7 R0        ; R7 := R0
263 [-]: MOVE      R8 R3        ; R8 := R3
264 [-]: CALL      R6 3 1       ; R6(R7,R8)
265 [-]: JMP       308          ; PC := 308
266 [-]: GETUPVAL  R6 U3        ; R6 := U3
267 [-]: GETTABLE  R6 R6 K57    ; R6 := R6["SORTIE"]
268 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 291
269 [-]: JMP       291          ; PC := 291
270 [-]: GETUPVAL  R6 U9        ; R6 := U9
271 [-]: MOVE      R7 R0        ; R7 := R0
272 [-]: MOVE      R8 R3        ; R8 := R3
273 [-]: CALL      R6 3 1       ; R6(R7,R8)
274 [-]: GETUPVAL  R6 U10       ; R6 := U10
275 [-]: TEST      R6 1         ; if R6 then PC := 308
276 [-]: JMP       308          ; PC := 308
277 [-]: LOADKB    R6 1 0       ; R6 := true
278 [-]: SETUPVAL  R6 U10       ; U82 := R10
279 [-]: GETTABLE  R6 R0 K58    ; R6 := R0["mBossInfo"]
280 [-]: TEST      R6 0         ; if not R6 then PC := 308
281 [-]: JMP       308          ; PC := 308
282 [-]: GETTABLE  R6 R0 K58    ; R6 := R0["mBossInfo"]
283 [-]: GETTABLE  R6 R6 K59    ; R6 := R6["Transmission"]
284 [-]: SETUPVAL  R6 U11       ; U82 := R11
285 [-]: GETUPVAL  R6 U12       ; R6 := U12
286 [-]: GETTABLE  R6 R6 K60    ; R6 := R6[0x1f60d532]
287 [-]: GETTABLE  R7 R0 K58    ; R7 := R0["mBossInfo"]
288 [-]: GETTABLE  R7 R7 K59    ; R7 := R7["Transmission"]
289 [-]: CALL      R6 2 1       ; R6(R7)
290 [-]: JMP       308          ; PC := 308
291 [-]: GETUPVAL  R6 U3        ; R6 := U3
292 [-]: GETTABLE  R6 R6 K61    ; R6 := R6["LITE_SORTIE"]
293 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 300
294 [-]: JMP       300          ; PC := 300
295 [-]: GETUPVAL  R6 U13       ; R6 := U13
296 [-]: MOVE      R7 R0        ; R7 := R0
297 [-]: MOVE      R8 R3        ; R8 := R3
298 [-]: CALL      R6 3 1       ; R6(R7,R8)
299 [-]: JMP       308          ; PC := 308
300 [-]: GETUPVAL  R6 U3        ; R6 := U3
301 [-]: GETTABLE  R6 R6 K62    ; R6 := R6["VOID_TEAR_MISSION"]
302 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 308
303 [-]: JMP       308          ; PC := 308
304 [-]: GETUPVAL  R6 U14       ; R6 := U14
305 [-]: MOVE      R7 R0        ; R7 := R0
306 [-]: MOVE      R8 R3        ; R8 := R3
307 [-]: CALL      R6 3 1       ; R6(R7,R8)
308 [-]: RETURN    R0 1         ; return 


; Function #67.8:
;
; Name:            
; Defined at line: 4886
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["EntryId"]
  2 [-]: CONST     R4 0         ; R4 := 0.000000
  3 [-]: GETUPVAL  R5 U0        ; R5 := U0
  4 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["QUEST"]
  5 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0x06d055f9]
  9 [-]: GETTABLE  R6 R1 K3     ; R6 := R1["IsBanner"]
 10 [-]: CONST     R7 15        ; R7 := 15.000000
 11 [-]: CONST     R8 108       ; R8 := 108.000000
 12 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 13 [-]: MOVE      R4 R5        ; R4 := R5
 14 [-]: JMP       86           ; PC := 86
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["ALERT"]
 17 [-]: EQ        1 R3 R5      ; if R3 == R5 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["VOID_TEAR_MISSION"]
 21 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETUPVAL  R5 U1        ; R5 := U1
 24 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0x06d055f9]
 25 [-]: GETTABLE  R6 R1 K6     ; R6 := R1["TotalHeight"]
 26 [-]: EQ        1 R6 K7      ; if R6 == nil then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 29
 29 [-]: LOADKB    R6 1 0       ; R6 := true
 30 [-]: CONST     R7 108       ; R7 := 108.000000
 31 [-]: GETTABLE  R8 R1 K6     ; R8 := R1["TotalHeight"]
 32 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 33 [-]: MOVE      R4 R5        ; R4 := R5
 34 [-]: JMP       86           ; PC := 86
 35 [-]: GETUPVAL  R5 U0        ; R5 := U0
 36 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["SYND_MISSION"]
 37 [-]: EQ        1 R3 R5      ; if R3 == R5 then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: GETUPVAL  R5 U0        ; R5 := U0
 40 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["PVPCHALLENGES"]
 41 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: CONST     R4 108       ; R4 := 108.000000
 44 [-]: JMP       86           ; PC := 86
 45 [-]: GETUPVAL  R5 U0        ; R5 := U0
 46 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["EVENT"]
 47 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 61
 48 [-]: JMP       61           ; PC := 61
 49 [-]: GETUPVAL  R5 U1        ; R5 := U1
 50 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0x06d055f9]
 51 [-]: GETTABLE  R6 R1 K6     ; R6 := R1["TotalHeight"]
 52 [-]: EQ        1 R6 K7      ; if R6 == nil then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 55
 55 [-]: LOADKB    R6 1 0       ; R6 := true
 56 [-]: CONST     R7 108       ; R7 := 108.000000
 57 [-]: GETTABLE  R8 R1 K6     ; R8 := R1["TotalHeight"]
 58 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 59 [-]: MOVE      R4 R5        ; R4 := R5
 60 [-]: JMP       86           ; PC := 86
 61 [-]: GETUPVAL  R5 U0        ; R5 := U0
 62 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["INVASION"]
 63 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: CONST     R4 108       ; R4 := 108.000000
 66 [-]: JMP       86           ; PC := 86
 67 [-]: GETUPVAL  R5 U0        ; R5 := U0
 68 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["SORTIE"]
 69 [-]: EQ        1 R3 R5      ; if R3 == R5 then PC := 75
 70 [-]: JMP       75           ; PC := 75
 71 [-]: GETUPVAL  R5 U0        ; R5 := U0
 72 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["LITE_SORTIE"]
 73 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 86
 74 [-]: JMP       86           ; PC := 86
 75 [-]: GETUPVAL  R5 U1        ; R5 := U1
 76 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0x06d055f9]
 77 [-]: GETTABLE  R6 R1 K6     ; R6 := R1["TotalHeight"]
 78 [-]: EQ        1 R6 K7      ; if R6 == nil then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 81
 81 [-]: LOADKB    R6 1 0       ; R6 := true
 82 [-]: CONST     R7 130       ; R7 := 130.000000
 83 [-]: GETTABLE  R8 R1 K6     ; R8 := R1["TotalHeight"]
 84 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 85 [-]: MOVE      R4 R5        ; R4 := R5
 86 [-]: RETURN    R4 2         ; return R4
 87 [-]: RETURN    R0 1         ; return 


; Function #67.9:
;
; Name:            
; Defined at line: 4906
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mInitialY"]
  2 [-]: CONST     R4 1         ; R4 := 1.000000
  3 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mIndex"]
  4 [-]: SUB       R5 R5 K2     ; R5 := R5 - 1.000000
  5 [-]: CONST     R6 1         ; R6 := 1.000000
  6 [-]: FORPREP   R4 15        ; R4 -= R6; PC := 15
  7 [-]: SELF      R8 R0 K3     ; R9 := R0; R8 := R0[0x2721d8ad]
  8 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["mElements"]
  9 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 10 [-]: MOVE      R11 R2       ; R11 := R2
 11 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 12 [-]: ADD       R8 R3 R8     ; R8 := R3 + R8
 13 [-]: GETTABLE  R9 R0 K5     ; R9 := R0["mForcedVerticalSeparation"]
 14 [-]: ADD       R3 R8 R9     ; R3 := R8 + R9
 15 [-]: FORLOOP   R4 7         ; R4 += R6; if R4 <= R5 then begin PC := 7; R7 := R4 end
 16 [-]: RETURN    R3 2         ; return R3
 17 [-]: RETURN    R0 1         ; return 


; Function #67.10:
;
; Name:            
; Defined at line: 4915
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 0         ; if not R2 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: EQ        1 R1 K1      ; if R1 == true then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 8
  8 [-]: LOADKB    R3 1 0       ; R3 := true
  9 [-]: SETTABLE  R2 K0 R3     ; R2["mQueueReposition"] := R3
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0xea061e98]
 12 [-]: CLOSURE   R4 0         ; R4 := closure(Function #67.10.1)
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: MOVE      R0 R1        ; R0 := R1
 15 [-]: CALL      R2 3 1       ; R2(R3,R4)
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #67.10.1:
;
; Name:            
; Defined at line: 4924
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x68e36b8d]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x67bc869f]
  8 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
  9 [-]: CONST     R5 1         ; R5 := 1.000000
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 12 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 4932
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xea061e98]
  3 [-]: CLOSURE   R3 0         ; R3 := closure(Function #68.1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: GETUPVAL  R0 U3        ; R0 := U3
  7 [-]: GETUPVAL  R0 U4        ; R0 := U4
  8 [-]: GETUPVAL  R0 U5        ; R0 := U5
  9 [-]: GETUPVAL  R0 U6        ; R0 := U6
 10 [-]: GETUPVAL  R0 U7        ; R0 := U7
 11 [-]: GETUPVAL  R0 U8        ; R0 := U8
 12 [-]: GETUPVAL  R0 U9        ; R0 := U9
 13 [-]: GETUPVAL  R0 U10       ; R0 := U10
 14 [-]: GETUPVAL  R0 U11       ; R0 := U11
 15 [-]: GETUPVAL  R0 U12       ; R0 := U12
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: CALL      R1 3 1       ; R1(R2,R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #68.1:
;
; Name:            
; Defined at line: 4934
; #Upvalues:       14
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  66

  1 [-]: SETTABLE  R0 K0 K1     ; R0["Count"] := 0.000000
  2 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Section"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["QUESTS"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: LEN       R1 R1        ; R1 := # R1
  9 [-]: SETTABLE  R0 K0 R1     ; R0["Count"] := R1
 10 [-]: JMP       378          ; PC := 378
 11 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Section"]
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["EVENTS"]
 14 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 57
 15 [-]: JMP       57           ; PC := 57
 16 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0xcfc01047
 18 [-]: GETGLOBAL R3 K6        ; R3 := 0x0032441c
 19 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["CachedGoalInfo"]
 20 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 21 [-]: JMP       54           ; PC := 54
 22 [-]: GETTABLE  R7 R6 K8     ; R7 := R6["mId"]
 23 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["mId"]
 24 [-]: GETGLOBAL R8 K9        ; R8 := 0x7f5022cf
 25 [-]: GETTABLE  R8 R8 K10    ; R8 := R8[0xa5c556b9]
 26 [-]: GETTABLE  R9 R6 K11    ; R9 := R6["mNode"]
 27 [-]: GETUPVAL  R10 U2       ; R10 := U2
 28 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["ANY_NODE_PREFIX"]
 29 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 30 [-]: NOT       R8 R8        ; R8 :=  R8
 31 [-]: LOADKB    R9 1 0       ; R9 := true
 32 [-]: GETTABLE  R10 R6 K13   ; R10 := R6["mTag"]
 33 [-]: GETUPVAL  R11 U3       ; R11 := U3
 34 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 43
 35 [-]: JMP       43           ; PC := 43
 36 [-]: GETUPVAL  R10 U2       ; R10 := U2
 37 [-]: GETTABLE  R10 R10 K14  ; R10 := R10[0x52fb05b3]
 38 [-]: GETUPVAL  R11 U4       ; R11 := U4
 39 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 40 [-]: TEST      R10 1        ; if R10 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: LOADKB    R9 0 0       ; R9 := false
 43 [-]: TEST      R9 0         ; if not R9 then PC := 54
 44 [-]: JMP       54           ; PC := 54
 45 [-]: GETTABLE  R10 R1 R7    ; R10 := R1[R7]
 46 [-]: TEST      R10 1        ; if R10 then PC := 54
 47 [-]: JMP       54           ; PC := 54
 48 [-]: TEST      R8 0         ; if not R8 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: SETTABLE  R1 R7 K15    ; R1[R7] := true
 51 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["Count"]
 52 [-]: ADD       R10 R10 K16  ; R10 := R10 + 1.000000
 53 [-]: SETTABLE  R0 K0 R10    ; R0["Count"] := R10
 54 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 22; R4 := R5 end
 55 [-]: JMP       22           ; PC := 22
 56 [-]: JMP       378          ; PC := 378
 57 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["Section"]
 58 [-]: GETUPVAL  R11 U0       ; R11 := U0
 59 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["ALERTS"]
 60 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 115
 61 [-]: JMP       115          ; PC := 115
 62 [-]: SETTABLE  R0 K18 K1    ; R0["UnlockedCount"] := 0.000000
 63 [-]: GETGLOBAL R10 K5       ; R10 := 0xcfc01047
 64 [-]: GETGLOBAL R11 K19      ; R11 := _T
 65 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["CachedAlerts"]
 66 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 67 [-]: JMP       84           ; PC := 84
 68 [-]: GETTABLE  R15 R14 K21  ; R15 := R14["mVisible"]
 69 [-]: TEST      R15 0        ; if not R15 then PC := 84
 70 [-]: JMP       84           ; PC := 84
 71 [-]: GETTABLE  R15 R0 K0    ; R15 := R0["Count"]
 72 [-]: ADD       R15 R15 K16  ; R15 := R15 + 1.000000
 73 [-]: SETTABLE  R0 K0 R15    ; R0["Count"] := R15
 74 [-]: GETTABLE  R15 R14 K22  ; R15 := R14["mUnlocked"]
 75 [-]: TEST      R15 0        ; if not R15 then PC := 84
 76 [-]: JMP       84           ; PC := 84
 77 [-]: GETTABLE  R15 R0 K18   ; R15 := R0["UnlockedCount"]
 78 [-]: TEST      R15 1        ; if R15 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: SETTABLE  R0 K18 K1    ; R0["UnlockedCount"] := 0.000000
 81 [-]: GETTABLE  R15 R0 K18   ; R15 := R0["UnlockedCount"]
 82 [-]: ADD       R15 R15 K16  ; R15 := R15 + 1.000000
 83 [-]: SETTABLE  R0 K18 R15   ; R0["UnlockedCount"] := R15
 84 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 68; R12 := R13 end
 85 [-]: JMP       68           ; PC := 68
 86 [-]: GETGLOBAL R15 K5       ; R15 := 0xcfc01047
 87 [-]: GETGLOBAL R16 K19      ; R16 := _T
 88 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["CachedEliteAlertMissions"]
 89 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 90 [-]: JMP       100          ; PC := 100
 91 [-]: GETTABLE  R20 R19 K21  ; R20 := R19["mVisible"]
 92 [-]: TEST      R20 0        ; if not R20 then PC := 100
 93 [-]: JMP       100          ; PC := 100
 94 [-]: GETTABLE  R20 R19 K22  ; R20 := R19["mUnlocked"]
 95 [-]: TEST      R20 0        ; if not R20 then PC := 100
 96 [-]: JMP       100          ; PC := 100
 97 [-]: GETTABLE  R20 R0 K18   ; R20 := R0["UnlockedCount"]
 98 [-]: ADD       R20 R20 K16  ; R20 := R20 + 1.000000
 99 [-]: SETTABLE  R0 K18 R20   ; R0["UnlockedCount"] := R20
100 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 91; R17 := R18 end
101 [-]: JMP       91           ; PC := 91
102 [-]: GETUPVAL  R20 U5       ; R20 := U5
103 [-]: TEST      R20 0        ; if not R20 then PC := 108
104 [-]: JMP       108          ; PC := 108
105 [-]: GETTABLE  R20 R0 K18   ; R20 := R0["UnlockedCount"]
106 [-]: ADD       R20 R20 K16  ; R20 := R20 + 1.000000
107 [-]: SETTABLE  R0 K18 R20   ; R0["UnlockedCount"] := R20
108 [-]: GETUPVAL  R20 U6       ; R20 := U6
109 [-]: TEST      R20 0        ; if not R20 then PC := 378
110 [-]: JMP       378          ; PC := 378
111 [-]: GETTABLE  R20 R0 K18   ; R20 := R0["UnlockedCount"]
112 [-]: ADD       R20 R20 K16  ; R20 := R20 + 1.000000
113 [-]: SETTABLE  R0 K18 R20   ; R0["UnlockedCount"] := R20
114 [-]: JMP       378          ; PC := 378
115 [-]: GETTABLE  R20 R0 K2    ; R20 := R0["Section"]
116 [-]: GETUPVAL  R21 U0       ; R21 := U0
117 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["HARD_ALERTS"]
118 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 144
119 [-]: JMP       144          ; PC := 144
120 [-]: GETGLOBAL R20 K5       ; R20 := 0xcfc01047
121 [-]: GETGLOBAL R21 K19      ; R21 := _T
122 [-]: GETTABLE  R21 R21 K25  ; R21 := R21["CachedHardModeDailyMissions"]
123 [-]: CALL      R20 2 4      ; R20,R21,R22 := R20(R21)
124 [-]: JMP       141          ; PC := 141
125 [-]: GETTABLE  R25 R24 K26  ; R25 := R24["isVisible"]
126 [-]: TEST      R25 0        ; if not R25 then PC := 141
127 [-]: JMP       141          ; PC := 141
128 [-]: GETTABLE  R25 R0 K0    ; R25 := R0["Count"]
129 [-]: ADD       R25 R25 K16  ; R25 := R25 + 1.000000
130 [-]: SETTABLE  R0 K0 R25    ; R0["Count"] := R25
131 [-]: GETTABLE  R25 R24 K22  ; R25 := R24["mUnlocked"]
132 [-]: TEST      R25 0        ; if not R25 then PC := 141
133 [-]: JMP       141          ; PC := 141
134 [-]: GETTABLE  R25 R0 K18   ; R25 := R0["UnlockedCount"]
135 [-]: TEST      R25 1        ; if R25 then PC := 138
136 [-]: JMP       138          ; PC := 138
137 [-]: SETTABLE  R0 K18 K1    ; R0["UnlockedCount"] := 0.000000
138 [-]: GETTABLE  R25 R0 K18   ; R25 := R0["UnlockedCount"]
139 [-]: ADD       R25 R25 K16  ; R25 := R25 + 1.000000
140 [-]: SETTABLE  R0 K18 R25   ; R0["UnlockedCount"] := R25
141 [-]: TFORLOOP  R20 2        ; R23,R24 :=  R20(R21,R22); if R23 ~= nil then begin PC = 125; R22 := R23 end
142 [-]: JMP       125          ; PC := 125
143 [-]: JMP       378          ; PC := 378
144 [-]: GETTABLE  R25 R0 K2    ; R25 := R0["Section"]
145 [-]: GETUPVAL  R26 U0       ; R26 := U0
146 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["INVASIONS"]
147 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 205
148 [-]: JMP       205          ; PC := 205
149 [-]: NEWTABLE  R25 0 0      ; R25 := {}
150 [-]: CONST     R26 0        ; R26 := 0.000000
151 [-]: GETUPVAL  R27 U2       ; R27 := U2
152 [-]: GETTABLE  R27 R27 K28  ; R27 := R27[0x5e35d4d6]
153 [-]: CALL      R27 1 2      ; R27 := R27()
154 [-]: GETGLOBAL R28 K29      ; R28 := 0x7b998233
155 [-]: MOVE      R29 R27      ; R29 := R27
156 [-]: CALL      R28 2 2      ; R28 := R28(R29)
157 [-]: TEST      R28 1        ; if R28 then PC := 203
158 [-]: JMP       203          ; PC := 203
159 [-]: GETGLOBAL R28 K5       ; R28 := 0xcfc01047
160 [-]: GETGLOBAL R29 K19      ; R29 := _T
161 [-]: GETTABLE  R29 R29 K30  ; R29 := R29["CachedInvasionInfo"]
162 [-]: CALL      R28 2 4      ; R28,R29,R30 := R28(R29)
163 [-]: JMP       201          ; PC := 201
164 [-]: SELF      R33 R27 K31  ; R34 := R27; R33 := R27[0x3ad9ed31]
165 [-]: GETTABLE  R35 R32 K11  ; R35 := R32["mNode"]
166 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
167 [-]: SELF      R34 R27 K32  ; R35 := R27; R34 := R27[0xc1dee03f]
168 [-]: CALL      R34 2 2      ; R34 := R34(R35)
169 [-]: GETTABLE  R35 R33 K33  ; R35 := R33["region"]
170 [-]: ADD       R35 R35 K16  ; R35 := R35 + 1.000000
171 [-]: GETTABLE  R34 R34 R35  ; R34 := R34[R35]
172 [-]: GETTABLE  R34 R34 K34  ; R34 := R34["name"]
173 [-]: GETGLOBAL R35 K29      ; R35 := 0x7b998233
174 [-]: MOVE      R36 R34      ; R36 := R34
175 [-]: CALL      R35 2 2      ; R35 := R35(R36)
176 [-]: TEST      R35 1        ; if R35 then PC := 201
177 [-]: JMP       201          ; PC := 201
178 [-]: GETGLOBAL R35 K29      ; R35 := 0x7b998233
179 [-]: GETGLOBAL R36 K19      ; R36 := _T
180 [-]: GETTABLE  R36 R36 K35  ; R36 := R36["CachedRegionStatus"]
181 [-]: GETTABLE  R37 R33 K33  ; R37 := R33["region"]
182 [-]: ADD       R37 R37 K16  ; R37 := R37 + 1.000000
183 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
184 [-]: CALL      R35 2 2      ; R35 := R35(R36)
185 [-]: TEST      R35 1        ; if R35 then PC := 201
186 [-]: JMP       201          ; PC := 201
187 [-]: GETGLOBAL R35 K19      ; R35 := _T
188 [-]: GETTABLE  R35 R35 K35  ; R35 := R35["CachedRegionStatus"]
189 [-]: GETTABLE  R36 R33 K33  ; R36 := R33["region"]
190 [-]: ADD       R36 R36 K16  ; R36 := R36 + 1.000000
191 [-]: GETTABLE  R35 R35 R36  ; R35 := R35[R36]
192 [-]: GETTABLE  R35 R35 K36  ; R35 := R35["invasion"]
193 [-]: TEST      R35 0        ; if not R35 then PC := 201
194 [-]: JMP       201          ; PC := 201
195 [-]: GETTABLE  R35 R25 R34  ; R35 := R25[R34]
196 [-]: EQ        0 R35 K37    ; if R35 ~= nil then PC := 201
197 [-]: JMP       201          ; PC := 201
198 [-]: NEWTABLE  R35 0 0      ; R35 := {}
199 [-]: SETTABLE  R25 R34 R35  ; R25[R34] := R35
200 [-]: ADD       R26 R26 K16  ; R26 := R26 + 1.000000
201 [-]: TFORLOOP  R28 2        ; R31,R32 :=  R28(R29,R30); if R31 ~= nil then begin PC = 164; R30 := R31 end
202 [-]: JMP       164          ; PC := 164
203 [-]: SETTABLE  R0 K0 R26    ; R0["Count"] := R26
204 [-]: JMP       378          ; PC := 378
205 [-]: GETTABLE  R35 R0 K2    ; R35 := R0["Section"]
206 [-]: GETUPVAL  R36 U0       ; R36 := U0
207 [-]: GETTABLE  R36 R36 K38  ; R36 := R36["SYND_MISSIONS"]
208 [-]: EQ        0 R35 R36    ; if R35 ~= R36 then PC := 249
209 [-]: JMP       249          ; PC := 249
210 [-]: GETUPVAL  R35 U7       ; R35 := U7
211 [-]: SELF      R35 R35 K39  ; R36 := R35; R35 := R35[0x55e93a91]
212 [-]: CALL      R35 2 2      ; R35 := R35(R36)
213 [-]: GETGLOBAL R36 K29      ; R36 := 0x7b998233
214 [-]: MOVE      R37 R35      ; R37 := R35
215 [-]: CALL      R36 2 2      ; R36 := R36(R37)
216 [-]: TEST      R36 1        ; if R36 then PC := 225
217 [-]: JMP       225          ; PC := 225
218 [-]: SELF      R36 R35 K40  ; R37 := R35; R36 := R35[0x56c01834]
219 [-]: CALL      R36 2 2      ; R36 := R36(R37)
220 [-]: TEST      R36 0        ; if not R36 then PC := 225
221 [-]: JMP       225          ; PC := 225
222 [-]: GETTABLE  R36 R0 K0    ; R36 := R0["Count"]
223 [-]: ADD       R36 R36 K16  ; R36 := R36 + 1.000000
224 [-]: SETTABLE  R0 K0 R36    ; R0["Count"] := R36
225 [-]: GETGLOBAL R36 K5       ; R36 := 0xcfc01047
226 [-]: GETGLOBAL R37 K19      ; R37 := _T
227 [-]: GETTABLE  R37 R37 K41  ; R37 := R37["CachedSyndicateMissions"]
228 [-]: CALL      R36 2 4      ; R36,R37,R38 := R36(R37)
229 [-]: JMP       239          ; PC := 239
230 [-]: GETTABLE  R41 R40 K21  ; R41 := R40["mVisible"]
231 [-]: TEST      R41 0        ; if not R41 then PC := 239
232 [-]: JMP       239          ; PC := 239
233 [-]: GETTABLE  R41 R40 K22  ; R41 := R40["mUnlocked"]
234 [-]: TEST      R41 0        ; if not R41 then PC := 239
235 [-]: JMP       239          ; PC := 239
236 [-]: GETTABLE  R41 R0 K0    ; R41 := R0["Count"]
237 [-]: ADD       R41 R41 K16  ; R41 := R41 + 1.000000
238 [-]: SETTABLE  R0 K0 R41    ; R0["Count"] := R41
239 [-]: TFORLOOP  R36 2        ; R39,R40 :=  R36(R37,R38); if R39 ~= nil then begin PC = 230; R38 := R39 end
240 [-]: JMP       230          ; PC := 230
241 [-]: GETUPVAL  R41 U8       ; R41 := U8
242 [-]: CALL      R41 1 2      ; R41 := R41()
243 [-]: TEST      R41 0        ; if not R41 then PC := 378
244 [-]: JMP       378          ; PC := 378
245 [-]: GETTABLE  R41 R0 K0    ; R41 := R0["Count"]
246 [-]: ADD       R41 R41 K42  ; R41 := R41 + 2.000000
247 [-]: SETTABLE  R0 K0 R41    ; R0["Count"] := R41
248 [-]: JMP       378          ; PC := 378
249 [-]: GETTABLE  R41 R0 K2    ; R41 := R0["Section"]
250 [-]: GETUPVAL  R42 U0       ; R42 := U0
251 [-]: GETTABLE  R42 R42 K43  ; R42 := R42["PVPCHALLENGES"]
252 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 259
253 [-]: JMP       259          ; PC := 259
254 [-]: GETTABLE  R41 R0 K2    ; R41 := R0["Section"]
255 [-]: GETUPVAL  R42 U0       ; R42 := U0
256 [-]: GETTABLE  R42 R42 K44  ; R42 := R42["PVPCHALLENGES_WEEKLY"]
257 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 264
258 [-]: JMP       264          ; PC := 264
259 [-]: GETUPVAL  R41 U9       ; R41 := U9
260 [-]: MOVE      R42 R0       ; R42 := R0
261 [-]: GETTABLE  R43 R0 K2    ; R43 := R0["Section"]
262 [-]: CALL      R41 3 1      ; R41(R42,R43)
263 [-]: JMP       378          ; PC := 378
264 [-]: GETTABLE  R41 R0 K2    ; R41 := R0["Section"]
265 [-]: GETUPVAL  R42 U0       ; R42 := U0
266 [-]: GETTABLE  R42 R42 K45  ; R42 := R42["SORTIES"]
267 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 291
268 [-]: JMP       291          ; PC := 291
269 [-]: LOADKB    R41 1 0      ; R41 := true
270 [-]: GETGLOBAL R42 K5       ; R42 := 0xcfc01047
271 [-]: GETGLOBAL R43 K19      ; R43 := _T
272 [-]: GETTABLE  R43 R43 K46  ; R43 := R43["CachedSortieMissions"]
273 [-]: CALL      R42 2 4      ; R42,R43,R44 := R42(R43)
274 [-]: JMP       281          ; PC := 281
275 [-]: TEST      R41 0        ; if not R41 then PC := 281
276 [-]: JMP       281          ; PC := 281
277 [-]: GETTABLE  R47 R46 K21  ; R47 := R46["mVisible"]
278 [-]: TESTSET   R41 R47 0    ; if not R47 then PC := 281 else R41 := R47
279 [-]: JMP       281          ; PC := 281
280 [-]: GETTABLE  R41 R46 K47  ; R41 := R46["mCompleted"]
281 [-]: TFORLOOP  R42 2        ; R45,R46 :=  R42(R43,R44); if R45 ~= nil then begin PC = 275; R44 := R45 end
282 [-]: JMP       275          ; PC := 275
283 [-]: GETUPVAL  R47 U10      ; R47 := U10
284 [-]: GETTABLE  R47 R47 K48  ; R47 := R47[0x06d055f9]
285 [-]: MOVE      R48 R41      ; R48 := R41
286 [-]: CONST     R49 0        ; R49 := 0.000000
287 [-]: CONST     R50 1        ; R50 := 1.000000
288 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
289 [-]: SETTABLE  R0 K0 R47    ; R0["Count"] := R47
290 [-]: JMP       378          ; PC := 378
291 [-]: GETTABLE  R47 R0 K2    ; R47 := R0["Section"]
292 [-]: GETUPVAL  R48 U0       ; R48 := U0
293 [-]: GETTABLE  R48 R48 K49  ; R48 := R48["LITE_SORTIES"]
294 [-]: EQ        0 R47 R48    ; if R47 ~= R48 then PC := 318
295 [-]: JMP       318          ; PC := 318
296 [-]: LOADKB    R47 1 0      ; R47 := true
297 [-]: GETGLOBAL R48 K5       ; R48 := 0xcfc01047
298 [-]: GETGLOBAL R49 K19      ; R49 := _T
299 [-]: GETTABLE  R49 R49 K50  ; R49 := R49["CachedLiteSortieMissions"]
300 [-]: CALL      R48 2 4      ; R48,R49,R50 := R48(R49)
301 [-]: JMP       308          ; PC := 308
302 [-]: TEST      R47 0        ; if not R47 then PC := 308
303 [-]: JMP       308          ; PC := 308
304 [-]: GETTABLE  R53 R52 K21  ; R53 := R52["mVisible"]
305 [-]: TESTSET   R47 R53 0    ; if not R53 then PC := 308 else R47 := R53
306 [-]: JMP       308          ; PC := 308
307 [-]: GETTABLE  R47 R52 K47  ; R47 := R52["mCompleted"]
308 [-]: TFORLOOP  R48 2        ; R51,R52 :=  R48(R49,R50); if R51 ~= nil then begin PC = 302; R50 := R51 end
309 [-]: JMP       302          ; PC := 302
310 [-]: GETUPVAL  R53 U10      ; R53 := U10
311 [-]: GETTABLE  R53 R53 K48  ; R53 := R53[0x06d055f9]
312 [-]: MOVE      R54 R47      ; R54 := R47
313 [-]: CONST     R55 0        ; R55 := 0.000000
314 [-]: CONST     R56 1        ; R56 := 1.000000
315 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
316 [-]: SETTABLE  R0 K0 R53    ; R0["Count"] := R53
317 [-]: JMP       378          ; PC := 378
318 [-]: GETTABLE  R53 R0 K2    ; R53 := R0["Section"]
319 [-]: GETUPVAL  R54 U0       ; R54 := U0
320 [-]: GETTABLE  R54 R54 K51  ; R54 := R54["VOID_TEARS"]
321 [-]: EQ        0 R53 R54    ; if R53 ~= R54 then PC := 378
322 [-]: JMP       378          ; PC := 378
323 [-]: GETUPVAL  R53 U11      ; R53 := U11
324 [-]: TEST      R53 1        ; if R53 then PC := 365
325 [-]: JMP       365          ; PC := 365
326 [-]: GETGLOBAL R53 K52      ; R53 := 0x25d99d89
327 [-]: SELF      R53 R53 K53  ; R54 := R53; R53 := R53[0xefc55311]
328 [-]: CALL      R53 2 2      ; R53 := R53(R54)
329 [-]: LT        1 K1 R53     ; if 0.000000 < R53 then PC := 332
330 [-]: JMP       332          ; PC := 332
331 [-]: LOADKB    R53 0 1      ; R53 := false; PC := 332
332 [-]: LOADKB    R53 1 0      ; R53 := true
333 [-]: GETGLOBAL R54 K5       ; R54 := 0xcfc01047
334 [-]: GETGLOBAL R55 K19      ; R55 := _T
335 [-]: GETTABLE  R55 R55 K54  ; R55 := R55["CachedActiveMissions"]
336 [-]: CALL      R54 2 4      ; R54,R55,R56 := R54(R55)
337 [-]: JMP       362          ; PC := 362
338 [-]: GETTABLE  R59 R58 K21  ; R59 := R58["mVisible"]
339 [-]: TEST      R59 0        ; if not R59 then PC := 362
340 [-]: JMP       362          ; PC := 362
341 [-]: GETTABLE  R59 R58 K22  ; R59 := R58["mUnlocked"]
342 [-]: TEST      R59 0        ; if not R59 then PC := 362
343 [-]: JMP       362          ; PC := 362
344 [-]: GETTABLE  R59 R58 K55  ; R59 := R58["mMissionInfo"]
345 [-]: GETTABLE  R59 R59 K56  ; R59 := R59["activeMissionTag"]
346 [-]: GETGLOBAL R60 K57      ; R60 := EMPTY_SYMBOL
347 [-]: EQ        1 R59 R60    ; if R59 == R60 then PC := 362
348 [-]: JMP       362          ; PC := 362
349 [-]: TEST      R53 0        ; if not R53 then PC := 354
350 [-]: JMP       354          ; PC := 354
351 [-]: GETTABLE  R59 R58 K58  ; R59 := R58["mHard"]
352 [-]: TEST      R59 1        ; if R59 then PC := 359
353 [-]: JMP       359          ; PC := 359
354 [-]: TEST      R53 1        ; if R53 then PC := 362
355 [-]: JMP       362          ; PC := 362
356 [-]: GETTABLE  R59 R58 K58  ; R59 := R58["mHard"]
357 [-]: TEST      R59 1        ; if R59 then PC := 362
358 [-]: JMP       362          ; PC := 362
359 [-]: GETTABLE  R59 R0 K0    ; R59 := R0["Count"]
360 [-]: ADD       R59 R59 K16  ; R59 := R59 + 1.000000
361 [-]: SETTABLE  R0 K0 R59    ; R0["Count"] := R59
362 [-]: TFORLOOP  R54 2        ; R57,R58 :=  R54(R55,R56); if R57 ~= nil then begin PC = 338; R56 := R57 end
363 [-]: JMP       338          ; PC := 338
364 [-]: JMP       378          ; PC := 378
365 [-]: GETGLOBAL R59 K5       ; R59 := 0xcfc01047
366 [-]: GETGLOBAL R60 K19      ; R60 := _T
367 [-]: GETTABLE  R60 R60 K59  ; R60 := R60["CachedVoidStormMissions"]
368 [-]: CALL      R59 2 4      ; R59,R60,R61 := R59(R60)
369 [-]: JMP       376          ; PC := 376
370 [-]: GETTABLE  R64 R63 K22  ; R64 := R63["mUnlocked"]
371 [-]: TEST      R64 0        ; if not R64 then PC := 376
372 [-]: JMP       376          ; PC := 376
373 [-]: GETTABLE  R64 R0 K0    ; R64 := R0["Count"]
374 [-]: ADD       R64 R64 K16  ; R64 := R64 + 1.000000
375 [-]: SETTABLE  R0 K0 R64    ; R0["Count"] := R64
376 [-]: TFORLOOP  R59 2        ; R62,R63 :=  R59(R60,R61); if R62 ~= nil then begin PC = 370; R61 := R62 end
377 [-]: JMP       370          ; PC := 370
378 [-]: GETUPVAL  R64 U12      ; R64 := U12
379 [-]: TEST      R64 1        ; if R64 then PC := 385
380 [-]: JMP       385          ; PC := 385
381 [-]: GETUPVAL  R64 U13      ; R64 := U13
382 [-]: GETTABLE  R64 R64 K60  ; R64 := R64[0xb15e6aca]
383 [-]: MOVE      R65 R0       ; R65 := R0
384 [-]: CALL      R64 2 1      ; R64(R65)
385 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 5068
; #Upvalues:       25
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  64

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0[0x9383bc56]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K4        ; R3 := "TopMenu.MenuList.MenuItem"
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: SETUPVAL  R1 U0        ; U82 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x1e5b5cfe]
 11 [-]: LOADK     R3 K6        ; R3 := "TopMenuEntryPressed"
 12 [-]: LOADK     R4 K7        ; R4 := "TopMenuEntryFocused"
 13 [-]: LOADK     R5 K8        ; R5 := "TopMenuEntryUnfocused"
 14 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["AddElement"]
 18 [-]: SETTABLE  R1 K9 R2     ; R1["ListAddElement"] := R2
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: CLOSURE   R2 0         ; R2 := closure(Function #69.1)
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: GETUPVAL  R0 U2        ; R0 := U2
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: SETTABLE  R1 K10 R2    ; R1["AddElement"] := R2
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: SETTABLE  R1 K11 K12   ; R1["mForcedHorizontalSeparation"] := 49.000000
 27 [-]: GETUPVAL  R1 U0        ; R1 := U0
 28 [-]: SETTABLE  R1 K13 K14   ; R1["mForcedVerticalSeparation"] := 0.000000
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: SETTABLE  R1 K15 K16   ; R1["mVisibleElements"] := 6.000000
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: SETTABLE  R1 K17 K18   ; R1["mPrevSelectedElement"] := nil
 33 [-]: GETUPVAL  R1 U0        ; R1 := U0
 34 [-]: SETTABLE  R1 K19 K20   ; R1["mWrapAroundNavigation"] := true
 35 [-]: GETUPVAL  R1 U0        ; R1 := U0
 36 [-]: CLOSURE   R2 1         ; R2 := closure(Function #69.2)
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: SETTABLE  R1 K21 R2    ; R1["UpdateImageCycles"] := R2
 39 [-]: GETUPVAL  R1 U0        ; R1 := U0
 40 [-]: CLOSURE   R2 2         ; R2 := closure(Function #69.3)
 41 [-]: GETUPVAL  R0 U3        ; R0 := U3
 42 [-]: SETTABLE  R1 K22 R2    ; R1["mClipCreatedCallback"] := R2
 43 [-]: GETUPVAL  R1 U0        ; R1 := U0
 44 [-]: CLOSURE   R2 3         ; R2 := closure(Function #69.4)
 45 [-]: GETUPVAL  R0 U0        ; R0 := U0
 46 [-]: GETUPVAL  R0 U4        ; R0 := U4
 47 [-]: GETUPVAL  R0 U3        ; R0 := U3
 48 [-]: SETTABLE  R1 K23 R2    ; R1["SetVisibleState"] := R2
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: CLOSURE   R2 4         ; R2 := closure(Function #69.5)
 51 [-]: GETUPVAL  R0 U4        ; R0 := U4
 52 [-]: GETUPVAL  R0 U0        ; R0 := U0
 53 [-]: SETTABLE  R1 K24 R2    ; R1["mOnFocusedCallback"] := R2
 54 [-]: GETUPVAL  R1 U0        ; R1 := U0
 55 [-]: CLOSURE   R2 5         ; R2 := closure(Function #69.6)
 56 [-]: GETUPVAL  R0 U0        ; R0 := U0
 57 [-]: SETTABLE  R1 K25 R2    ; R1["mOnUnfocusedCallback"] := R2
 58 [-]: GETUPVAL  R1 U0        ; R1 := U0
 59 [-]: CLOSURE   R2 6         ; R2 := closure(Function #69.7)
 60 [-]: GETUPVAL  R0 U0        ; R0 := U0
 61 [-]: GETUPVAL  R0 U5        ; R0 := U5
 62 [-]: GETUPVAL  R0 U6        ; R0 := U6
 63 [-]: GETUPVAL  R0 U7        ; R0 := U7
 64 [-]: GETUPVAL  R0 U8        ; R0 := U8
 65 [-]: GETUPVAL  R0 U4        ; R0 := U4
 66 [-]: SETTABLE  R1 K26 R2    ; R1["mOnSelectedCallback"] := R2
 67 [-]: GETUPVAL  R1 U0        ; R1 := U0
 68 [-]: CLOSURE   R2 7         ; R2 := closure(Function #69.8)
 69 [-]: GETUPVAL  R0 U4        ; R0 := U4
 70 [-]: GETUPVAL  R0 U0        ; R0 := U0
 71 [-]: SETTABLE  R1 K27 R2    ; R1["mElementDrawCallback"] := R2
 72 [-]: GETUPVAL  R1 U9        ; R1 := U9
 73 [-]: TEST      R1 1         ; if R1 then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: GETUPVAL  R1 U0        ; R1 := U0
 76 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1[0xbad4316f]
 77 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 78 [-]: GETUPVAL  R4 U1        ; R4 := U1
 79 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["QUESTS"]
 80 [-]: SETTABLE  R3 K29 R4    ; R3["Section"] := R4
 81 [-]: SETTABLE  R3 K31 K32   ; R3["Title"] := "/Lotus/Language/Menu/Codex_Quests"
 82 [-]: GETGLOBAL R4 K34       ; R4 := 0x0032441c
 83 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["UITexture_Story"]
 84 [-]: SETTABLE  R3 K33 R4    ; R3[0x0032441c] := R4
 85 [-]: LOADKB    R4 1 0       ; R4 := true
 86 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 87 [-]: JMP       537          ; PC := 537
 88 [-]: GETGLOBAL R1 K34       ; R1 := 0x0032441c
 89 [-]: GETTABLE  R1 R1 K36    ; R1 := R1["HACK_MENUPARAM_ShowPVPChallenges"]
 90 [-]: TEST      R1 1         ; if R1 then PC := 513
 91 [-]: JMP       513          ; PC := 513
 92 [-]: CONST     R1 0         ; R1 := 0.000000
 93 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 94 [-]: GETGLOBAL R3 K34       ; R3 := 0x0032441c
 95 [-]: GETTABLE  R3 R3 K37    ; R3 := R3["CachedGoalInfo"]
 96 [-]: TEST      R3 0         ; if not R3 then PC := 184
 97 [-]: JMP       184          ; PC := 184
 98 [-]: GETGLOBAL R3 K38       ; R3 := 0xcfc01047
 99 [-]: GETGLOBAL R4 K34       ; R4 := 0x0032441c
100 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["CachedGoalInfo"]
101 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
102 [-]: JMP       157          ; PC := 157
103 [-]: GETTABLE  R8 R7 K39    ; R8 := R7["mTag"]
104 [-]: GETUPVAL  R9 U10       ; R9 := U10
105 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: GETUPVAL  R8 U11       ; R8 := U11
108 [-]: GETTABLE  R8 R8 K40    ; R8 := R8[0x52fb05b3]
109 [-]: GETUPVAL  R9 U12       ; R9 := U12
110 [-]: CALL      R8 2 2       ; R8 := R8(R9)
111 [-]: TEST      R8 0         ; if not R8 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: ADD       R1 R1 K41    ; R1 := R1 + 1.000000
114 [-]: GETGLOBAL R8 K42       ; R8 := 0x7b998233
115 [-]: GETTABLE  R9 R7 K43    ; R9 := R7["mIcon"]
116 [-]: CALL      R8 2 2       ; R8 := R8(R9)
117 [-]: TEST      R8 1         ; if R8 then PC := 157
118 [-]: JMP       157          ; PC := 157
119 [-]: GETGLOBAL R8 K44       ; R8 := 0x7f5022cf
120 [-]: GETTABLE  R8 R8 K45    ; R8 := R8[0x66edf04f]
121 [-]: GETTABLE  R9 R7 K43    ; R9 := R7["mIcon"]
122 [-]: SELF      R9 R9 K46    ; R10 := R9; R9 := R9[0xe223e2b1]
123 [-]: CALL      R9 2 2       ; R9 := R9(R10)
124 [-]: LOADK     R10 K47      ; R10 := ".png$"
125 [-]: LOADK     R11 K48      ; R11 := ""
126 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
127 [-]: GETGLOBAL R9 K44       ; R9 := 0x7f5022cf
128 [-]: GETTABLE  R9 R9 K45    ; R9 := R9[0x66edf04f]
129 [-]: MOVE      R10 R8       ; R10 := R8
130 [-]: LOADK     R11 K49      ; R11 := "_.$"
131 [-]: LOADK     R12 K48      ; R12 := ""
132 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
133 [-]: MOVE      R8 R9        ; R8 := R9
134 [-]: GETUPVAL  R9 U4        ; R9 := U4
135 [-]: GETTABLE  R9 R9 K50    ; R9 := R9[0x06d055f9]
136 [-]: GETUPVAL  R10 U13      ; R10 := U13
137 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
138 [-]: EQ        0 R10 K18    ; if R10 ~= nil then PC := 141
139 [-]: JMP       141          ; PC := 141
140 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 141
141 [-]: LOADKB    R10 1 0      ; R10 := true
142 [-]: GETUPVAL  R11 U13      ; R11 := U13
143 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
144 [-]: GETTABLE  R12 R7 K43   ; R12 := R7["mIcon"]
145 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
146 [-]: GETGLOBAL R10 K51      ; R10 := 0x33bdd652
147 [-]: GETTABLE  R10 R10 K52  ; R10 := R10[0x23d5322f]
148 [-]: MOVE      R11 R2       ; R11 := R2
149 [-]: NEWTABLE  R12 0 2      ; R12 := {}
150 [-]: SETTABLE  R12 K33 R9   ; R12[0x0032441c] := R9
151 [-]: GETUPVAL  R13 U14      ; R13 := U14
152 [-]: GETTABLE  R13 R13 K54  ; R13 := R13[0x3972b419]
153 [-]: MOVE      R14 R9       ; R14 := R9
154 [-]: CALL      R13 2 2      ; R13 := R13(R14)
155 [-]: SETTABLE  R12 K53 R13  ; R12["TintIcon"] := R13
156 [-]: CALL      R10 3 1      ; R10(R11,R12)
157 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 103; R5 := R6 end
158 [-]: JMP       103          ; PC := 103
159 [-]: LEN       R10 R2       ; R10 := # R2
160 [-]: EQ        0 R10 K14    ; if R10 ~= 0.000000 then PC := 171
161 [-]: JMP       171          ; PC := 171
162 [-]: GETGLOBAL R10 K51      ; R10 := 0x33bdd652
163 [-]: GETTABLE  R10 R10 K52  ; R10 := R10[0x23d5322f]
164 [-]: MOVE      R11 R2       ; R11 := R2
165 [-]: NEWTABLE  R12 0 2      ; R12 := {}
166 [-]: GETGLOBAL R13 K34      ; R13 := 0x0032441c
167 [-]: GETTABLE  R13 R13 K55  ; R13 := R13["UITexture_Event"]
168 [-]: SETTABLE  R12 K33 R13  ; R12[0x0032441c] := R13
169 [-]: SETTABLE  R12 K53 K20  ; R12["TintIcon"] := true
170 [-]: CALL      R10 3 1      ; R10(R11,R12)
171 [-]: LT        0 K14 R1     ; if 0.000000 >= R1 then PC := 184
172 [-]: JMP       184          ; PC := 184
173 [-]: GETUPVAL  R10 U0       ; R10 := U0
174 [-]: SELF      R10 R10 K28  ; R11 := R10; R10 := R10[0xbad4316f]
175 [-]: NEWTABLE  R12 0 4      ; R12 := {}
176 [-]: GETUPVAL  R13 U1       ; R13 := U1
177 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["EVENTS"]
178 [-]: SETTABLE  R12 K29 R13  ; R12["Section"] := R13
179 [-]: SETTABLE  R12 K31 K57  ; R12["Title"] := "/Lotus/Language/Menu/WorldStatePanel_Event"
180 [-]: SETTABLE  R12 K58 R2   ; R12["Images"] := R2
181 [-]: SETTABLE  R12 K59 K41  ; R12["ImagesIndex"] := 1.000000
182 [-]: LOADKB    R13 1 0      ; R13 := true
183 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
184 [-]: GETUPVAL  R10 U15      ; R10 := U15
185 [-]: LEN       R10 R10      ; R10 := # R10
186 [-]: EQ        1 R10 K14    ; if R10 == 0.000000 then PC := 201
187 [-]: JMP       201          ; PC := 201
188 [-]: LOADK     R10 K32      ; R10 := "/Lotus/Language/Menu/Codex_Quests"
189 [-]: GETUPVAL  R11 U0       ; R11 := U0
190 [-]: SELF      R11 R11 K28  ; R12 := R11; R11 := R11[0xbad4316f]
191 [-]: NEWTABLE  R13 0 3      ; R13 := {}
192 [-]: GETUPVAL  R14 U1       ; R14 := U1
193 [-]: GETTABLE  R14 R14 K30  ; R14 := R14["QUESTS"]
194 [-]: SETTABLE  R13 K29 R14  ; R13["Section"] := R14
195 [-]: SETTABLE  R13 K31 R10  ; R13[0xd5181643] := R10
196 [-]: GETGLOBAL R14 K60      ; R14 := 0x5de7c318
197 [-]: GETTABLE  R14 R14 K41  ; R14 := R14[1.000000]
198 [-]: SETTABLE  R13 K33 R14  ; R13[0x0032441c] := R14
199 [-]: LOADKB    R14 1 0      ; R14 := true
200 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
201 [-]: GETUPVAL  R11 U16      ; R11 := U16
202 [-]: TEST      R11 1        ; if R11 then PC := 215
203 [-]: JMP       215          ; PC := 215
204 [-]: GETUPVAL  R11 U17      ; R11 := U17
205 [-]: TEST      R11 1        ; if R11 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETUPVAL  R11 U18      ; R11 := U18
208 [-]: EQ        0 R11 K18    ; if R11 ~= nil then PC := 214
209 [-]: JMP       214          ; PC := 214
210 [-]: GETGLOBAL R11 K61      ; R11 := _T
211 [-]: GETTABLE  R11 R11 K62  ; R11 := R11["SHOW_LOCKED_ALERTS"]
212 [-]: JMP       215          ; PC := 215
213 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 214
214 [-]: LOADKB    R11 1 0      ; R11 := true
215 [-]: GETGLOBAL R12 K38      ; R12 := 0xcfc01047
216 [-]: GETGLOBAL R13 K61      ; R13 := _T
217 [-]: GETTABLE  R13 R13 K63  ; R13 := R13["CachedAlerts"]
218 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
219 [-]: JMP       225          ; PC := 225
220 [-]: GETTABLE  R17 R16 K64  ; R17 := R16["mVisible"]
221 [-]: TEST      R17 0        ; if not R17 then PC := 225
222 [-]: JMP       225          ; PC := 225
223 [-]: LOADKB    R11 1 0      ; R11 := true
224 [-]: JMP       227          ; PC := 227
225 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 220; R14 := R15 end
226 [-]: JMP       220          ; PC := 220
227 [-]: GETGLOBAL R17 K61      ; R17 := _T
228 [-]: GETTABLE  R17 R17 K65  ; R17 := R17["CachedEliteAlertMissions"]
229 [-]: TEST      R17 0        ; if not R17 then PC := 246
230 [-]: JMP       246          ; PC := 246
231 [-]: GETGLOBAL R17 K38      ; R17 := 0xcfc01047
232 [-]: GETGLOBAL R18 K61      ; R18 := _T
233 [-]: GETTABLE  R18 R18 K65  ; R18 := R18["CachedEliteAlertMissions"]
234 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
235 [-]: JMP       244          ; PC := 244
236 [-]: GETTABLE  R22 R21 K66  ; R22 := R21["mShowInStarChart"]
237 [-]: TEST      R22 1        ; if R22 then PC := 242
238 [-]: JMP       242          ; PC := 242
239 [-]: GETTABLE  R22 R21 K67  ; R22 := R21["mUnlocked"]
240 [-]: TEST      R22 0        ; if not R22 then PC := 244
241 [-]: JMP       244          ; PC := 244
242 [-]: LOADKB    R11 1 0      ; R11 := true
243 [-]: JMP       246          ; PC := 246
244 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 236; R19 := R20 end
245 [-]: JMP       236          ; PC := 236
246 [-]: GETGLOBAL R22 K61      ; R22 := _T
247 [-]: GETTABLE  R22 R22 K68  ; R22 := R22["CachedGhostTowerMissions"]
248 [-]: TEST      R22 0        ; if not R22 then PC := 265
249 [-]: JMP       265          ; PC := 265
250 [-]: GETGLOBAL R22 K38      ; R22 := 0xcfc01047
251 [-]: GETGLOBAL R23 K61      ; R23 := _T
252 [-]: GETTABLE  R23 R23 K68  ; R23 := R23["CachedGhostTowerMissions"]
253 [-]: CALL      R22 2 4      ; R22,R23,R24 := R22(R23)
254 [-]: JMP       263          ; PC := 263
255 [-]: GETTABLE  R27 R26 K67  ; R27 := R26["mUnlocked"]
256 [-]: TEST      R27 0        ; if not R27 then PC := 263
257 [-]: JMP       263          ; PC := 263
258 [-]: GETTABLE  R27 R26 K66  ; R27 := R26["mShowInStarChart"]
259 [-]: TEST      R27 0        ; if not R27 then PC := 263
260 [-]: JMP       263          ; PC := 263
261 [-]: LOADKB    R11 1 0      ; R11 := true
262 [-]: JMP       265          ; PC := 265
263 [-]: TFORLOOP  R22 2        ; R25,R26 :=  R22(R23,R24); if R25 ~= nil then begin PC = 255; R24 := R25 end
264 [-]: JMP       255          ; PC := 255
265 [-]: GETGLOBAL R27 K61      ; R27 := _T
266 [-]: GETTABLE  R27 R27 K69  ; R27 := R27["CachedSkullNodes"]
267 [-]: TEST      R27 0        ; if not R27 then PC := 278
268 [-]: JMP       278          ; PC := 278
269 [-]: GETGLOBAL R27 K38      ; R27 := 0xcfc01047
270 [-]: GETGLOBAL R28 K61      ; R28 := _T
271 [-]: GETTABLE  R28 R28 K69  ; R28 := R28["CachedSkullNodes"]
272 [-]: CALL      R27 2 4      ; R27,R28,R29 := R27(R28)
273 [-]: JMP       276          ; PC := 276
274 [-]: LOADKB    R11 1 0      ; R11 := true
275 [-]: JMP       278          ; PC := 278
276 [-]: TFORLOOP  R27 2        ; R30,R31 :=  R27(R28,R29); if R30 ~= nil then begin PC = 274; R29 := R30 end
277 [-]: JMP       274          ; PC := 274
278 [-]: TEST      R11 0        ; if not R11 then PC := 292
279 [-]: JMP       292          ; PC := 292
280 [-]: GETUPVAL  R32 U0       ; R32 := U0
281 [-]: SELF      R32 R32 K28  ; R33 := R32; R32 := R32[0xbad4316f]
282 [-]: NEWTABLE  R34 0 3      ; R34 := {}
283 [-]: GETUPVAL  R35 U1       ; R35 := U1
284 [-]: GETTABLE  R35 R35 K70  ; R35 := R35["ALERTS"]
285 [-]: SETTABLE  R34 K29 R35  ; R34["Section"] := R35
286 [-]: SETTABLE  R34 K31 K71  ; R34["Title"] := "/Lotus/Language/Menu/MainMenu_Alerts"
287 [-]: GETGLOBAL R35 K60      ; R35 := 0x5de7c318
288 [-]: GETTABLE  R35 R35 K72  ; R35 := R35[2.000000]
289 [-]: SETTABLE  R34 K33 R35  ; R34[0x0032441c] := R35
290 [-]: LOADKB    R35 1 0      ; R35 := true
291 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
292 [-]: GETGLOBAL R32 K73      ; R32 := 0x25d99d89
293 [-]: SELF      R32 R32 K74  ; R33 := R32; R32 := R32[0xefc55311]
294 [-]: CALL      R32 2 2      ; R32 := R32(R33)
295 [-]: LT        0 K14 R32    ; if 0.000000 >= R32 then PC := 300
296 [-]: JMP       300          ; PC := 300
297 [-]: GETGLOBAL R32 K61      ; R32 := _T
298 [-]: GETTABLE  R32 R32 K75  ; R32 := R32["CachedHardModeDailyMissions"]
299 [-]: JMP       302          ; PC := 302
300 [-]: LOADKB    R32 0 1      ; R32 := false; PC := 301
301 [-]: LOADKB    R32 1 0      ; R32 := true
302 [-]: TEST      R32 0        ; if not R32 then PC := 319
303 [-]: JMP       319          ; PC := 319
304 [-]: GETUPVAL  R33 U0       ; R33 := U0
305 [-]: SELF      R33 R33 K28  ; R34 := R33; R33 := R33[0xbad4316f]
306 [-]: NEWTABLE  R35 0 3      ; R35 := {}
307 [-]: GETUPVAL  R36 U1       ; R36 := U1
308 [-]: GETTABLE  R36 R36 K76  ; R36 := R36["HARD_ALERTS"]
309 [-]: SETTABLE  R35 K29 R36  ; R35["Section"] := R36
310 [-]: SETTABLE  R35 K31 K77  ; R35["Title"] := "/Lotus/Language/Labels/SteelPathDailies"
311 [-]: GETGLOBAL R36 K78      ; R36 := 0x649a746b
312 [-]: SELF      R36 R36 K79  ; R37 := R36; R36 := R36[0x628bc0ab]
313 [-]: LOADK     R38 K80      ; R38 := "hard"
314 [-]: CONST     R39 0        ; R39 := 0.000000
315 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
316 [-]: SETTABLE  R35 K33 R36  ; R35[0x0032441c] := R36
317 [-]: LOADKB    R36 1 0      ; R36 := true
318 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
319 [-]: LOADKB    R33 0 0      ; R33 := false
320 [-]: GETGLOBAL R34 K38      ; R34 := 0xcfc01047
321 [-]: GETGLOBAL R35 K61      ; R35 := _T
322 [-]: GETTABLE  R35 R35 K81  ; R35 := R35["CachedRegionStatus"]
323 [-]: CALL      R34 2 4      ; R34,R35,R36 := R34(R35)
324 [-]: JMP       330          ; PC := 330
325 [-]: GETTABLE  R39 R38 K82  ; R39 := R38["invasion"]
326 [-]: TEST      R39 0        ; if not R39 then PC := 330
327 [-]: JMP       330          ; PC := 330
328 [-]: LOADKB    R33 1 0      ; R33 := true
329 [-]: JMP       332          ; PC := 332
330 [-]: TFORLOOP  R34 2        ; R37,R38 :=  R34(R35,R36); if R37 ~= nil then begin PC = 325; R36 := R37 end
331 [-]: JMP       325          ; PC := 325
332 [-]: TEST      R33 1        ; if R33 then PC := 338
333 [-]: JMP       338          ; PC := 338
334 [-]: GETGLOBAL R39 K61      ; R39 := _T
335 [-]: GETTABLE  R39 R39 K62  ; R39 := R39["SHOW_LOCKED_ALERTS"]
336 [-]: TEST      R39 0        ; if not R39 then PC := 350
337 [-]: JMP       350          ; PC := 350
338 [-]: GETUPVAL  R39 U0       ; R39 := U0
339 [-]: SELF      R39 R39 K28  ; R40 := R39; R39 := R39[0xbad4316f]
340 [-]: NEWTABLE  R41 0 3      ; R41 := {}
341 [-]: GETUPVAL  R42 U1       ; R42 := U1
342 [-]: GETTABLE  R42 R42 K83  ; R42 := R42["INVASIONS"]
343 [-]: SETTABLE  R41 K29 R42  ; R41["Section"] := R42
344 [-]: SETTABLE  R41 K31 K84  ; R41["Title"] := "/Lotus/Language/Menu/WorldStatePanel_Invasions"
345 [-]: GETGLOBAL R42 K60      ; R42 := 0x5de7c318
346 [-]: GETTABLE  R42 R42 K85  ; R42 := R42[3.000000]
347 [-]: SETTABLE  R41 K33 R42  ; R41[0x0032441c] := R42
348 [-]: LOADKB    R42 1 0      ; R42 := true
349 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
350 [-]: GETUPVAL  R39 U19      ; R39 := U19
351 [-]: EQ        0 R39 K18    ; if R39 ~= nil then PC := 387
352 [-]: JMP       387          ; PC := 387
353 [-]: GETGLOBAL R39 K86      ; R39 := 0xa94df70b
354 [-]: SELF      R39 R39 K87  ; R40 := R39; R39 := R39[0x918ce365]
355 [-]: CALL      R39 2 2      ; R39 := R39(R40)
356 [-]: GETUPVAL  R40 U20      ; R40 := U20
357 [-]: SELF      R40 R40 K88  ; R41 := R40; R40 := R40[0x2b1b267d]
358 [-]: CALL      R40 2 2      ; R40 := R40(R41)
359 [-]: GETGLOBAL R41 K38      ; R41 := 0xcfc01047
360 [-]: MOVE      R42 R39      ; R42 := R39
361 [-]: CALL      R41 2 4      ; R41,R42,R43 := R41(R42)
362 [-]: JMP       385          ; PC := 385
363 [-]: SELF      R46 R45 K89  ; R47 := R45; R46 := R45[0x2e47b6d8]
364 [-]: CALL      R46 2 2      ; R46 := R46(R47)
365 [-]: TEST      R46 0        ; if not R46 then PC := 385
366 [-]: JMP       385          ; PC := 385
367 [-]: CONST     R46 1        ; R46 := 1.000000
368 [-]: LEN       R47 R40      ; R47 := # R40
369 [-]: CONST     R48 1        ; R48 := 1.000000
370 [-]: FORPREP   R46 384      ; R46 -= R48; PC := 384
371 [-]: GETTABLE  R50 R40 R49  ; R50 := R40[R49]
372 [-]: GETTABLE  R50 R50 K39  ; R50 := R50["mTag"]
373 [-]: SELF      R51 R45 K90  ; R52 := R45; R51 := R45[0xec3ed714]
374 [-]: CALL      R51 2 2      ; R51 := R51(R52)
375 [-]: EQ        0 R50 R51    ; if R50 ~= R51 then PC := 384
376 [-]: JMP       384          ; PC := 384
377 [-]: GETTABLE  R50 R40 R49  ; R50 := R40[R49]
378 [-]: GETTABLE  R50 R50 K91  ; R50 := R50["mTitle"]
379 [-]: LT        0 K14 R50    ; if 0.000000 >= R50 then PC := 384
380 [-]: JMP       384          ; PC := 384
381 [-]: LOADKB    R50 1 0      ; R50 := true
382 [-]: SETUPVAL  R50 U19      ; U82 := R19
383 [-]: JMP       385          ; PC := 385
384 [-]: FORLOOP   R46 371      ; R46 += R48; if R46 <= R47 then begin PC := 371; R49 := R46 end
385 [-]: TFORLOOP  R41 2        ; R44,R45 :=  R41(R42,R43); if R44 ~= nil then begin PC = 363; R43 := R44 end
386 [-]: JMP       363          ; PC := 363
387 [-]: GETUPVAL  R50 U19      ; R50 := U19
388 [-]: EQ        0 R50 K18    ; if R50 ~= nil then PC := 396
389 [-]: JMP       396          ; PC := 396
390 [-]: GETUPVAL  R50 U21      ; R50 := U21
391 [-]: CALL      R50 1 2      ; R50 := R50()
392 [-]: TEST      R50 0        ; if not R50 then PC := 396
393 [-]: JMP       396          ; PC := 396
394 [-]: LOADKB    R50 1 0      ; R50 := true
395 [-]: SETUPVAL  R50 U19      ; U82 := R19
396 [-]: GETUPVAL  R50 U19      ; R50 := U19
397 [-]: TEST      R50 1        ; if R50 then PC := 403
398 [-]: JMP       403          ; PC := 403
399 [-]: GETGLOBAL R50 K61      ; R50 := _T
400 [-]: GETTABLE  R50 R50 K62  ; R50 := R50["SHOW_LOCKED_ALERTS"]
401 [-]: TEST      R50 0        ; if not R50 then PC := 415
402 [-]: JMP       415          ; PC := 415
403 [-]: GETUPVAL  R50 U0       ; R50 := U0
404 [-]: SELF      R50 R50 K28  ; R51 := R50; R50 := R50[0xbad4316f]
405 [-]: NEWTABLE  R52 0 3      ; R52 := {}
406 [-]: GETUPVAL  R53 U1       ; R53 := U1
407 [-]: GETTABLE  R53 R53 K92  ; R53 := R53["SYND_MISSIONS"]
408 [-]: SETTABLE  R52 K29 R53  ; R52["Section"] := R53
409 [-]: SETTABLE  R52 K31 K93  ; R52["Title"] := "/Lotus/Language/Menu/SyndicateMissionName"
410 [-]: GETGLOBAL R53 K34      ; R53 := 0x0032441c
411 [-]: GETTABLE  R53 R53 K94  ; R53 := R53["UITexture_Syndicate"]
412 [-]: SETTABLE  R52 K33 R53  ; R52[0x0032441c] := R53
413 [-]: LOADKB    R53 1 0      ; R53 := true
414 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
415 [-]: GETUPVAL  R50 U20      ; R50 := U20
416 [-]: SELF      R50 R50 K95  ; R51 := R50; R50 := R50[0x25a6e75e]
417 [-]: CALL      R50 2 2      ; R50 := R50(R51)
418 [-]: GETGLOBAL R51 K42      ; R51 := 0x7b998233
419 [-]: MOVE      R52 R50      ; R52 := R50
420 [-]: CALL      R51 2 2      ; R51 := R51(R52)
421 [-]: TEST      R51 1        ; if R51 then PC := 428
422 [-]: JMP       428          ; PC := 428
423 [-]: SELF      R51 R50 K96  ; R52 := R50; R51 := R50[0xabeded2f]
424 [-]: GETGLOBAL R53 K97      ; R53 := gVoidProjectionItemType
425 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
426 [-]: TEST      R51 1        ; if R51 then PC := 432
427 [-]: JMP       432          ; PC := 432
428 [-]: GETGLOBAL R51 K61      ; R51 := _T
429 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["SHOW_LOCKED_ALERTS"]
430 [-]: TEST      R51 0        ; if not R51 then PC := 444
431 [-]: JMP       444          ; PC := 444
432 [-]: GETUPVAL  R51 U0       ; R51 := U0
433 [-]: SELF      R51 R51 K28  ; R52 := R51; R51 := R51[0xbad4316f]
434 [-]: NEWTABLE  R53 0 3      ; R53 := {}
435 [-]: GETUPVAL  R54 U1       ; R54 := U1
436 [-]: GETTABLE  R54 R54 K98  ; R54 := R54["VOID_TEARS"]
437 [-]: SETTABLE  R53 K29 R54  ; R53["Section"] := R54
438 [-]: SETTABLE  R53 K31 K99  ; R53["Title"] := "/Lotus/Language/Menu/VoidTearMissionCategoryName"
439 [-]: GETGLOBAL R54 K34      ; R54 := 0x0032441c
440 [-]: GETTABLE  R54 R54 K100 ; R54 := R54["UITexture_VoidTear"]
441 [-]: SETTABLE  R53 K33 R54  ; R53[0x0032441c] := R54
442 [-]: LOADKB    R54 1 0      ; R54 := true
443 [-]: CALL      R51 4 1      ; R51(R52,R53,R54)
444 [-]: GETGLOBAL R51 K61      ; R51 := _T
445 [-]: GETTABLE  R51 R51 K101 ; R51 := R51["CachedSortieMissionsExist"]
446 [-]: TEST      R51 0        ; if not R51 then PC := 483
447 [-]: JMP       483          ; PC := 483
448 [-]: LOADKB    R51 0 0      ; R51 := false
449 [-]: GETGLOBAL R52 K38      ; R52 := 0xcfc01047
450 [-]: GETGLOBAL R53 K61      ; R53 := _T
451 [-]: GETTABLE  R53 R53 K102 ; R53 := R53["CachedSortieMissions"]
452 [-]: CALL      R52 2 4      ; R52,R53,R54 := R52(R53)
453 [-]: JMP       459          ; PC := 459
454 [-]: GETTABLE  R57 R56 K64  ; R57 := R56["mVisible"]
455 [-]: TEST      R57 0        ; if not R57 then PC := 459
456 [-]: JMP       459          ; PC := 459
457 [-]: LOADKB    R51 1 0      ; R51 := true
458 [-]: JMP       461          ; PC := 461
459 [-]: TFORLOOP  R52 2        ; R55,R56 :=  R52(R53,R54); if R55 ~= nil then begin PC = 454; R54 := R55 end
460 [-]: JMP       454          ; PC := 454
461 [-]: TEST      R51 1        ; if R51 then PC := 467
462 [-]: JMP       467          ; PC := 467
463 [-]: GETGLOBAL R57 K61      ; R57 := _T
464 [-]: GETTABLE  R57 R57 K62  ; R57 := R57["SHOW_LOCKED_ALERTS"]
465 [-]: TEST      R57 0        ; if not R57 then PC := 483
466 [-]: JMP       483          ; PC := 483
467 [-]: GETUPVAL  R57 U0       ; R57 := U0
468 [-]: SELF      R57 R57 K28  ; R58 := R57; R57 := R57[0xbad4316f]
469 [-]: NEWTABLE  R59 0 3      ; R59 := {}
470 [-]: GETUPVAL  R60 U1       ; R60 := U1
471 [-]: GETTABLE  R60 R60 K103 ; R60 := R60["SORTIES"]
472 [-]: SETTABLE  R59 K29 R60  ; R59["Section"] := R60
473 [-]: GETGLOBAL R60 K104     ; R60 := 0x603636ad
474 [-]: LOADK     R61 K105     ; R61 := "/Lotus/Language/Menu/SortieMissionName"
475 [-]: LOADKB    R62 0 0      ; R62 := false
476 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
477 [-]: SETTABLE  R59 K31 R60  ; R59[0xd5181643] := R60
478 [-]: GETGLOBAL R60 K60      ; R60 := 0x5de7c318
479 [-]: GETTABLE  R60 R60 K106 ; R60 := R60[4.000000]
480 [-]: SETTABLE  R59 K33 R60  ; R59[0x0032441c] := R60
481 [-]: LOADKB    R60 1 0      ; R60 := true
482 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
483 [-]: GETGLOBAL R57 K61      ; R57 := _T
484 [-]: GETTABLE  R57 R57 K107 ; R57 := R57["CachedLiteSortieMissionsExist"]
485 [-]: TEST      R57 0        ; if not R57 then PC := 537
486 [-]: JMP       537          ; PC := 537
487 [-]: GETUPVAL  R57 U11      ; R57 := U11
488 [-]: GETTABLE  R57 R57 K40  ; R57 := R57[0x52fb05b3]
489 [-]: GETUPVAL  R58 U22      ; R58 := U22
490 [-]: CALL      R57 2 2      ; R57 := R57(R58)
491 [-]: TEST      R57 0        ; if not R57 then PC := 537
492 [-]: JMP       537          ; PC := 537
493 [-]: GETUPVAL  R57 U0       ; R57 := U0
494 [-]: SELF      R57 R57 K28  ; R58 := R57; R57 := R57[0xbad4316f]
495 [-]: NEWTABLE  R59 0 3      ; R59 := {}
496 [-]: GETUPVAL  R60 U1       ; R60 := U1
497 [-]: GETTABLE  R60 R60 K108 ; R60 := R60["LITE_SORTIES"]
498 [-]: SETTABLE  R59 K29 R60  ; R59["Section"] := R60
499 [-]: GETGLOBAL R60 K44      ; R60 := 0x7f5022cf
500 [-]: GETTABLE  R60 R60 K109 ; R60 := R60[0x3f3e4d12]
501 [-]: GETGLOBAL R61 K104     ; R61 := 0x603636ad
502 [-]: LOADK     R62 K110     ; R62 := "/Lotus/Language/WorldStateWindow/LiteSortieMissionName"
503 [-]: LOADKB    R63 0 0      ; R63 := false
504 [-]: CALL      R61 3 0      ; R61,... := R61(R62,R63)
505 [-]: CALL      R60 0 2      ; R60 := R60(R61,...)
506 [-]: SETTABLE  R59 K31 R60  ; R59[0xd5181643] := R60
507 [-]: GETGLOBAL R60 K60      ; R60 := 0x5de7c318
508 [-]: GETTABLE  R60 R60 K111 ; R60 := R60[5.000000]
509 [-]: SETTABLE  R59 K33 R60  ; R59[0x0032441c] := R60
510 [-]: LOADKB    R60 1 0      ; R60 := true
511 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
512 [-]: JMP       537          ; PC := 537
513 [-]: GETUPVAL  R57 U0       ; R57 := U0
514 [-]: SELF      R57 R57 K28  ; R58 := R57; R57 := R57[0xbad4316f]
515 [-]: NEWTABLE  R59 0 3      ; R59 := {}
516 [-]: GETUPVAL  R60 U1       ; R60 := U1
517 [-]: GETTABLE  R60 R60 K112 ; R60 := R60["PVPCHALLENGES"]
518 [-]: SETTABLE  R59 K29 R60  ; R59["Section"] := R60
519 [-]: SETTABLE  R59 K31 K113 ; R59["Title"] := "/Lotus/Language/Menu/PVPChallenges"
520 [-]: GETGLOBAL R60 K34      ; R60 := 0x0032441c
521 [-]: GETTABLE  R60 R60 K114 ; R60 := R60["UITexture_PvpChallenges"]
522 [-]: SETTABLE  R59 K33 R60  ; R59[0x0032441c] := R60
523 [-]: LOADKB    R60 1 0      ; R60 := true
524 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
525 [-]: GETUPVAL  R57 U0       ; R57 := U0
526 [-]: SELF      R57 R57 K28  ; R58 := R57; R57 := R57[0xbad4316f]
527 [-]: NEWTABLE  R59 0 3      ; R59 := {}
528 [-]: GETUPVAL  R60 U1       ; R60 := U1
529 [-]: GETTABLE  R60 R60 K115 ; R60 := R60["PVPCHALLENGES_WEEKLY"]
530 [-]: SETTABLE  R59 K29 R60  ; R59["Section"] := R60
531 [-]: SETTABLE  R59 K31 K116 ; R59["Title"] := "/Lotus/Language/Menu/PVPChallengesWeekly"
532 [-]: GETGLOBAL R60 K34      ; R60 := 0x0032441c
533 [-]: GETTABLE  R60 R60 K117 ; R60 := R60["UITexture_PvpWeeklyChallenges"]
534 [-]: SETTABLE  R59 K33 R60  ; R59[0x0032441c] := R60
535 [-]: LOADKB    R60 1 0      ; R60 := true
536 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
537 [-]: GETUPVAL  R57 U23      ; R57 := U23
538 [-]: LOADKB    R58 1 0      ; R58 := true
539 [-]: CALL      R57 2 1      ; R57(R58)
540 [-]: GETGLOBAL R57 K3       ; R57 := 0xae91e43b
541 [-]: SELF      R57 R57 K118 ; R58 := R57; R57 := R57[0xaade900e]
542 [-]: LOADK     R59 K119     ; R59 := "TopMenu.MenuList.LeftBumper"
543 [-]: CONST     R60 11       ; R60 := 11.000000
544 [-]: GETGLOBAL R61 K120     ; R61 := 0x34291f5c
545 [-]: GETTABLE  R61 R61 K121 ; R61 := R61[0x1467d5f4]
546 [-]: CALL      R61 1 2      ; R61 := R61()
547 [-]: TEST      R61 1        ; if R61 then PC := 552
548 [-]: JMP       552          ; PC := 552
549 [-]: GETGLOBAL R61 K120     ; R61 := 0x34291f5c
550 [-]: GETTABLE  R61 R61 K122 ; R61 := R61[0x399826a5]
551 [-]: CALL      R61 1 2      ; R61 := R61()
552 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
553 [-]: GETGLOBAL R57 K3       ; R57 := 0xae91e43b
554 [-]: SELF      R57 R57 K118 ; R58 := R57; R57 := R57[0xaade900e]
555 [-]: LOADK     R59 K123     ; R59 := "TopMenu.MenuList.RightBumper"
556 [-]: CONST     R60 11       ; R60 := 11.000000
557 [-]: GETGLOBAL R61 K120     ; R61 := 0x34291f5c
558 [-]: GETTABLE  R61 R61 K121 ; R61 := R61[0x1467d5f4]
559 [-]: CALL      R61 1 2      ; R61 := R61()
560 [-]: TEST      R61 1        ; if R61 then PC := 565
561 [-]: JMP       565          ; PC := 565
562 [-]: GETGLOBAL R61 K120     ; R61 := 0x34291f5c
563 [-]: GETTABLE  R61 R61 K122 ; R61 := R61[0x399826a5]
564 [-]: CALL      R61 1 2      ; R61 := R61()
565 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
566 [-]: GETGLOBAL R57 K3       ; R57 := 0xae91e43b
567 [-]: SELF      R57 R57 K124 ; R58 := R57; R57 := R57[0x20b98db3]
568 [-]: LOADK     R59 K125     ; R59 := "TopMenu.MenuList.LeftBumper.Tf.text"
569 [-]: LOADK     R60 K126     ; R60 := "<MENU_LTRIGGER2>"
570 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
571 [-]: GETGLOBAL R57 K3       ; R57 := 0xae91e43b
572 [-]: SELF      R57 R57 K124 ; R58 := R57; R57 := R57[0x20b98db3]
573 [-]: LOADK     R59 K127     ; R59 := "TopMenu.MenuList.RightBumper.Tf.text"
574 [-]: LOADK     R60 K128     ; R60 := "<MENU_RTRIGGER2>"
575 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
576 [-]: GETGLOBAL R57 K3       ; R57 := 0xae91e43b
577 [-]: SELF      R57 R57 K129 ; R58 := R57; R57 := R57[0xd5181643]
578 [-]: LOADK     R59 K130     ; R59 := "TopMenu.MenuList.LeftBumper.Tf"
579 [-]: GETGLOBAL R60 K34      ; R60 := 0x0032441c
580 [-]: GETTABLE  R60 R60 K131 ; R60 := R60["UIMaterial_PlainText"]
581 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
582 [-]: GETGLOBAL R57 K3       ; R57 := 0xae91e43b
583 [-]: SELF      R57 R57 K129 ; R58 := R57; R57 := R57[0xd5181643]
584 [-]: LOADK     R59 K132     ; R59 := "TopMenu.MenuList.RightBumper.Tf"
585 [-]: GETGLOBAL R60 K34      ; R60 := 0x0032441c
586 [-]: GETTABLE  R60 R60 K131 ; R60 := R60["UIMaterial_PlainText"]
587 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
588 [-]: GETUPVAL  R57 U0       ; R57 := U0
589 [-]: GETTABLE  R57 R57 K133 ; R57 := R57["mInitialX"]
590 [-]: GETUPVAL  R58 U0       ; R58 := U0
591 [-]: SELF      R58 R58 K134 ; R59 := R58; R58 := R58[0x5fbddc1a]
592 [-]: CALL      R58 2 2      ; R58 := R58(R59)
593 [-]: GETUPVAL  R59 U0       ; R59 := U0
594 [-]: GETTABLE  R59 R59 K11  ; R59 := R59["mForcedHorizontalSeparation"]
595 [-]: MUL       R58 R58 R59  ; R58 := R58 * R59
596 [-]: ADD       R57 R57 R58  ; R57 := R57 + R58
597 [-]: ADD       R57 R57 K135 ; R57 := R57 + 25.000000
598 [-]: GETGLOBAL R58 K3       ; R58 := 0xae91e43b
599 [-]: SELF      R58 R58 K136 ; R59 := R58; R58 := R58[0x67bc869f]
600 [-]: LOADK     R60 K123     ; R60 := "TopMenu.MenuList.RightBumper"
601 [-]: CONST     R61 0        ; R61 := 0.000000
602 [-]: MOVE      R62 R57      ; R62 := R57
603 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
604 [-]: GETUPVAL  R58 U0       ; R58 := U0
605 [-]: SELF      R58 R58 K137 ; R59 := R58; R58 := R58[0x71e9ac81]
606 [-]: CALL      R58 2 1      ; R58(R59)
607 [-]: GETUPVAL  R58 U0       ; R58 := U0
608 [-]: GETUPVAL  R59 U24      ; R59 := U24
609 [-]: SELF      R59 R59 K139 ; R60 := R59; R59 := R59[0xbd2e96ea]
610 [-]: CONST     R61 8        ; R61 := 8.000000
611 [-]: GETUPVAL  R62 U0       ; R62 := U0
612 [-]: GETTABLE  R62 R62 K21  ; R62 := R62["UpdateImageCycles"]
613 [-]: LOADKB    R63 1 0      ; R63 := true
614 [-]: CALL      R59 5 2      ; R59 := R59(R60,R61,R62,R63)
615 [-]: SETTABLE  R58 K138 R59 ; R58["ImageTimer"] := R59
616 [-]: RETURN    R0 1         ; return 


; Function #69.1:
;
; Name:            
; Defined at line: 5074
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
  2 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Section"]
  3 [-]: GETUPVAL  R5 U0        ; R5 := U0
  4 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["QUEST"]
  5 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 8
  8 [-]: LOADKB    R4 1 0       ; R4 := true
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: CALL      R3 3 1       ; R3(R4,R5)
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: TEST      R3 0         ; if not R3 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Section"]
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["QUESTS"]
 17 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R3 U2        ; R3 := U2
 20 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x0f88b213]
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: MOVE      R6 R2        ; R6 := R2
 23 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 24 [-]: RETURN    R0 1         ; return 


; Function #69.2:
;
; Name:            
; Defined at line: 5086
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0xea061e98]
  3 [-]: CLOSURE   R2 0         ; R2 := closure(Function #69.2.1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #69.2.1:
;
; Name:            
; Defined at line: 5088
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Images"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 35
  3 [-]: JMP       35           ; PC := 35
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Images"]
  5 [-]: LEN       R1 R1        ; R1 := # R1
  6 [-]: LT        0 K2 R1      ; if 1.000000 >= R1 then PC := 35
  7 [-]: JMP       35           ; PC := 35
  8 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["ImagesIndex"]
  9 [-]: ADD       R1 R1 K2     ; R1 := R1 + 1.000000
 10 [-]: SETTABLE  R0 K3 R1     ; R0["ImagesIndex"] := R1
 11 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["ImagesIndex"]
 12 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Images"]
 13 [-]: LEN       R2 R2        ; R2 := # R2
 14 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: SETTABLE  R0 K3 K2     ; R0["ImagesIndex"] := 1.000000
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x25312c9b
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 19 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mClipName"]
 20 [-]: LOADK     R4 K7        ; R4 := ".Image"
 21 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 22 [-]: CONST     R4 8         ; R4 := 8.000000
 23 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 24 [-]: CONST     R6 10        ; R6 := 10.000000
 25 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 26 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 27 [-]: CONST     R7 0         ; R7 := 0.000000
 28 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 29 [-]: CONST     R7 0         ; R7 := 0.500000
 30 [-]: CONST     R8 0         ; R8 := 0.000000
 31 [-]: CLOSURE   R9 0         ; R9 := closure(Function #69.2.1.1)
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: MOVE      R0 R0        ; R0 := R0
 34 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 35 [-]: RETURN    R0 1         ; return 


; Function #69.2.1.1:
;
; Name:            
; Defined at line: 5096
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xb15e6aca]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0x25312c9b
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipName"]
  9 [-]: LOADK     R3 K4        ; R3 := ".Image"
 10 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 11 [-]: CONST     R3 8         ; R3 := 8.000000
 12 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 13 [-]: CONST     R5 10        ; R5 := 10.000000
 14 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 15 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 16 [-]: CONST     R6 100       ; R6 := 100.000000
 17 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 18 [-]: CONST     R6 0         ; R6 := 0.500000
 19 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 20 [-]: RETURN    R0 1         ; return 


; Function #69.3:
;
; Name:            
; Defined at line: 5104
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xd5181643]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: LOADK     R5 K2        ; R5 := ".Notifications"
  5 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x0032441c
  7 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["UIMaterial_PlainText"]
  8 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xd5181643]
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: LOADK     R5 K5        ; R5 := ".Bg"
 13 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 14 [-]: GETGLOBAL R5 K3        ; R5 := 0x0032441c
 15 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIMaterial_RectangleNoDepth"]
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 18 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x91e13703]
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: LOADK     R5 K5        ; R5 := ".Bg"
 21 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 22 [-]: LOADK     R5 K8        ; R5 := "RectEdgeColor"
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["FloatingContentObject"]
 25 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["r"]
 26 [-]: GETUPVAL  R7 U0        ; R7 := U0
 27 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["FloatingContentObject"]
 28 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["g"]
 29 [-]: GETUPVAL  R8 U0        ; R8 := U0
 30 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["FloatingContentObject"]
 31 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["b"]
 32 [-]: LOADK     R9 K13       ; R9 := 0.400000
 33 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 34 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 35 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x91e13703]
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: LOADK     R5 K5        ; R5 := ".Bg"
 38 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 39 [-]: LOADK     R5 K14       ; R5 := "RectInnerColor"
 40 [-]: GETUPVAL  R6 U0        ; R6 := U0
 41 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["Background1Object"]
 42 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["r"]
 43 [-]: GETUPVAL  R7 U0        ; R7 := U0
 44 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["Background1Object"]
 45 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["g"]
 46 [-]: GETUPVAL  R8 U0        ; R8 := U0
 47 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["Background1Object"]
 48 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["b"]
 49 [-]: LOADK     R9 K16       ; R9 := 0.900000
 50 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 51 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 52 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xf64b7262]
 53 [-]: MOVE      R4 R0        ; R4 := R0
 54 [-]: LOADK     R5 K18       ; R5 := "NotificationBg"
 55 [-]: CONST     R6 9         ; R6 := 9.000000
 56 [-]: GETUPVAL  R7 U0        ; R7 := U0
 57 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["Background2"]
 58 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 59 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 60 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xf64b7262]
 61 [-]: MOVE      R4 R0        ; R4 := R0
 62 [-]: LOADK     R5 K20       ; R5 := "Notifications"
 63 [-]: CONST     R6 36        ; R6 := 36.000000
 64 [-]: GETUPVAL  R7 U0        ; R7 := U0
 65 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["Content"]
 66 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 67 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 68 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xf64b7262]
 69 [-]: MOVE      R4 R0        ; R4 := R0
 70 [-]: LOADK     R5 K22       ; R5 := "BottomLine"
 71 [-]: CONST     R6 9         ; R6 := 9.000000
 72 [-]: GETUPVAL  R7 U0        ; R7 := U0
 73 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["FloatingContent"]
 74 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 75 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 76 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xf64b7262]
 77 [-]: MOVE      R4 R0        ; R4 := R0
 78 [-]: LOADK     R5 K24       ; R5 := "BottomHighlight"
 79 [-]: CONST     R6 9         ; R6 := 9.000000
 80 [-]: GETUPVAL  R7 U0        ; R7 := U0
 81 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["FloatingContentHighlight"]
 82 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 83 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 84 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xf64b7262]
 85 [-]: MOVE      R4 R0        ; R4 := R0
 86 [-]: LOADK     R5 K26       ; R5 := "Highlight"
 87 [-]: CONST     R6 9         ; R6 := 9.000000
 88 [-]: GETUPVAL  R7 U0        ; R7 := U0
 89 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["FloatingContentHighlight"]
 90 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 91 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 92 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xf64b7262]
 93 [-]: MOVE      R4 R0        ; R4 := R0
 94 [-]: LOADK     R5 K26       ; R5 := "Highlight"
 95 [-]: CONST     R6 13        ; R6 := 13.000000
 96 [-]: LOADK     R7 K27       ; R7 := 0.100000
 97 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 98 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 99 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xf64b7262]
100 [-]: MOVE      R4 R0        ; R4 := R0
101 [-]: LOADK     R5 K26       ; R5 := "Highlight"
102 [-]: CONST     R6 10        ; R6 := 10.000000
103 [-]: CONST     R7 60        ; R7 := 60.000000
104 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
105 [-]: RETURN    R0 1         ; return 


; Function #69.4:
;
; Name:            
; Defined at line: 5118
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: SELF      R4 R4 K0     ; R5 := R4; R4 := R4[0xed1ab921]
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["Id"]
  9 [-]: GETTABLE  R6 R1 K2     ; R6 := R1["Id"]
 10 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 13
 13 [-]: LOADKB    R5 1 0       ; R5 := true
 14 [-]: GETUPVAL  R6 U0        ; R6 := U0
 15 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["mSelectedElement"]
 16 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 24
 17 [-]: JMP       24           ; PC := 24
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["mSelectedElement"]
 20 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Id"]
 21 [-]: GETTABLE  R7 R1 K2     ; R7 := R1["Id"]
 22 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 25
 25 [-]: LOADKB    R6 1 0       ; R6 := true
 26 [-]: GETGLOBAL R7 K4        ; R7 := 0x0032441c
 27 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIColor_White"]
 28 [-]: GETTABLE  R8 R1 K6     ; R8 := R1["TintIcon"]
 29 [-]: GETTABLE  R9 R1 K7     ; R9 := R1["Images"]
 30 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETTABLE  R9 R1 K7     ; R9 := R1["Images"]
 33 [-]: GETTABLE  R10 R1 K8    ; R10 := R1["ImagesIndex"]
 34 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 35 [-]: GETTABLE  R8 R9 K6     ; R8 := R9["TintIcon"]
 36 [-]: EQ        1 R8 K9      ; if R8 == false then PC := 49
 37 [-]: JMP       49           ; PC := 49
 38 [-]: GETUPVAL  R9 U1        ; R9 := U1
 39 [-]: GETTABLE  R9 R9 K10    ; R9 := R9[0x06d055f9]
 40 [-]: TESTSET   R10 R5 1     ; if R5 then PC := 43 else R10 := R5
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R10 R6       ; R10 := R6
 43 [-]: GETUPVAL  R11 U2       ; R11 := U2
 44 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["FloatingContentHighlight"]
 45 [-]: GETUPVAL  R12 U2       ; R12 := U2
 46 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["FloatingContent"]
 47 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 48 [-]: MOVE      R7 R9        ; R7 := R9
 49 [-]: GETGLOBAL R9 K13       ; R9 := 0xae91e43b
 50 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9[0xf64b7262]
 51 [-]: GETTABLE  R11 R1 K15   ; R11 := R1["mClipName"]
 52 [-]: LOADK     R12 K16      ; R12 := "Image"
 53 [-]: CONST     R13 9        ; R13 := 9.000000
 54 [-]: MOVE      R14 R7       ; R14 := R7
 55 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 56 [-]: GETUPVAL  R9 U1        ; R9 := U1
 57 [-]: GETTABLE  R9 R9 K10    ; R9 := R9[0x06d055f9]
 58 [-]: TESTSET   R10 R5 1     ; if R5 then PC := 61 else R10 := R5
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R10 R6       ; R10 := R6
 61 [-]: GETUPVAL  R11 U2       ; R11 := U2
 62 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["FloatingContentHighlightObject"]
 63 [-]: GETUPVAL  R12 U2       ; R12 := U2
 64 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["FloatingContentObject"]
 65 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 66 [-]: GETGLOBAL R10 K13      ; R10 := 0xae91e43b
 67 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10[0x91e13703]
 68 [-]: GETTABLE  R12 R1 K15   ; R12 := R1["mClipName"]
 69 [-]: LOADK     R13 K20      ; R13 := ".Bg"
 70 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 71 [-]: LOADK     R13 K21      ; R13 := "RectEdgeColor"
 72 [-]: GETTABLE  R14 R9 K22   ; R14 := R9["r"]
 73 [-]: GETTABLE  R15 R9 K23   ; R15 := R9["g"]
 74 [-]: GETTABLE  R16 R9 K24   ; R16 := R9["b"]
 75 [-]: GETUPVAL  R17 U1       ; R17 := U1
 76 [-]: GETTABLE  R17 R17 K10  ; R17 := R17[0x06d055f9]
 77 [-]: TESTSET   R18 R5 1     ; if R5 then PC := 80 else R18 := R5
 78 [-]: JMP       80           ; PC := 80
 79 [-]: MOVE      R18 R6       ; R18 := R6
 80 [-]: LOADK     R19 K25      ; R19 := 0.600000
 81 [-]: LOADK     R20 K26      ; R20 := 0.400000
 82 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
 83 [-]: CALL      R10 0 1      ; R10(R11,...)
 84 [-]: TESTSET   R10 R5 1     ; if R5 then PC := 87 else R10 := R5
 85 [-]: JMP       87           ; PC := 87
 86 [-]: MOVE      R10 R6       ; R10 := R6
 87 [-]: TEST      R3 0         ; if not R3 then PC := 121
 88 [-]: JMP       121          ; PC := 121
 89 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
 90 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11[0xc0a3774b]
 91 [-]: GETTABLE  R13 R1 K15   ; R13 := R1["mClipName"]
 92 [-]: LOADK     R14 K28      ; R14 := "BottomHighlight"
 93 [-]: CONST     R15 11       ; R15 := 11.000000
 94 [-]: MOVE      R16 R10      ; R16 := R10
 95 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 96 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
 97 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0xf64b7262]
 98 [-]: GETTABLE  R13 R1 K15   ; R13 := R1["mClipName"]
 99 [-]: LOADK     R14 K28      ; R14 := "BottomHighlight"
100 [-]: CONST     R15 12       ; R15 := 12.000000
101 [-]: GETUPVAL  R16 U1       ; R16 := U1
102 [-]: GETTABLE  R16 R16 K10  ; R16 := R16[0x06d055f9]
103 [-]: MOVE      R17 R10      ; R17 := R10
104 [-]: CONST     R18 50       ; R18 := 50.000000
105 [-]: LOADK     R19 K29      ; R19 := 0.100000
106 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
107 [-]: CALL      R11 0 1      ; R11(R12,...)
108 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
109 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0xf64b7262]
110 [-]: GETTABLE  R13 R1 K15   ; R13 := R1["mClipName"]
111 [-]: LOADK     R14 K30      ; R14 := "Highlight"
112 [-]: CONST     R15 13       ; R15 := 13.000000
113 [-]: GETUPVAL  R16 U1       ; R16 := U1
114 [-]: GETTABLE  R16 R16 K10  ; R16 := R16[0x06d055f9]
115 [-]: MOVE      R17 R5       ; R17 := R5
116 [-]: CONST     R18 30       ; R18 := 30.000000
117 [-]: LOADK     R19 K29      ; R19 := 0.100000
118 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
119 [-]: CALL      R11 0 1      ; R11(R12,...)
120 [-]: JMP       172          ; PC := 172
121 [-]: TEST      R10 0        ; if not R10 then PC := 130
122 [-]: JMP       130          ; PC := 130
123 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
124 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11[0xc0a3774b]
125 [-]: GETTABLE  R13 R1 K15   ; R13 := R1["mClipName"]
126 [-]: LOADK     R14 K28      ; R14 := "BottomHighlight"
127 [-]: CONST     R15 11       ; R15 := 11.000000
128 [-]: LOADKB    R16 1 0      ; R16 := true
129 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
130 [-]: GETGLOBAL R11 K31      ; R11 := 0x25312c9b
131 [-]: GETGLOBAL R12 K13      ; R12 := 0xae91e43b
132 [-]: GETTABLE  R13 R1 K15   ; R13 := R1["mClipName"]
133 [-]: LOADK     R14 K32      ; R14 := ".Highlight"
134 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
135 [-]: CONST     R14 8        ; R14 := 8.000000
136 [-]: NEWTABLE  R15 1 0      ; R15 := {}
137 [-]: CONST     R16 13       ; R16 := 13.000000
138 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
139 [-]: NEWTABLE  R16 0 0      ; R16 := {}
140 [-]: GETUPVAL  R17 U1       ; R17 := U1
141 [-]: GETTABLE  R17 R17 K10  ; R17 := R17[0x06d055f9]
142 [-]: MOVE      R18 R5       ; R18 := R5
143 [-]: CONST     R19 30       ; R19 := 30.000000
144 [-]: LOADK     R20 K29      ; R20 := 0.100000
145 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
146 [-]: SETLIST   R16 0 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 0
147 [-]: CONST     R17 0        ; R17 := 0.250000
148 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
149 [-]: GETGLOBAL R11 K31      ; R11 := 0x25312c9b
150 [-]: GETGLOBAL R12 K13      ; R12 := 0xae91e43b
151 [-]: GETTABLE  R13 R1 K15   ; R13 := R1["mClipName"]
152 [-]: LOADK     R14 K34      ; R14 := ".BottomHighlight"
153 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
154 [-]: CONST     R14 8        ; R14 := 8.000000
155 [-]: NEWTABLE  R15 1 0      ; R15 := {}
156 [-]: CONST     R16 12       ; R16 := 12.000000
157 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
158 [-]: NEWTABLE  R16 0 0      ; R16 := {}
159 [-]: GETUPVAL  R17 U1       ; R17 := U1
160 [-]: GETTABLE  R17 R17 K10  ; R17 := R17[0x06d055f9]
161 [-]: MOVE      R18 R10      ; R18 := R10
162 [-]: CONST     R19 50       ; R19 := 50.000000
163 [-]: LOADK     R20 K29      ; R20 := 0.100000
164 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
165 [-]: SETLIST   R16 0 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 0
166 [-]: CONST     R17 0        ; R17 := 0.250000
167 [-]: CONST     R18 0        ; R18 := 0.000000
168 [-]: CLOSURE   R19 0        ; R19 := closure(Function #69.4.1)
169 [-]: MOVE      R0 R10       ; R0 := R10
170 [-]: MOVE      R0 R1        ; R0 := R1
171 [-]: CALL      R11 9 1      ; R11(R12,R13,R14,R15,R16,R17,R18,R19)
172 [-]: RETURN    R0 1         ; return 


; Function #69.4.1:
;
; Name:            
; Defined at line: 5146
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xc0a3774b]
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mClipName"]
  8 [-]: LOADK     R3 K3        ; R3 := "BottomHighlight"
  9 [-]: CONST     R4 11        ; R4 := 11.000000
 10 [-]: LOADKB    R5 0 0       ; R5 := false
 11 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 12 [-]: RETURN    R0 1         ; return 


; Function #69.5:
;
; Name:            
; Defined at line: 5154
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0x659d451f]
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UISound_Focus"]
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: GETGLOBAL R1 K5        ; R1 := _T
 13 [-]: GETGLOBAL R2 K7        ; R2 := 0x5f0788c4
 14 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x42b04007]
 16 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["Title"]
 17 [-]: LOADKB    R6 1 0       ; R6 := true
 18 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: SETTABLE  R1 K6 R2     ; R1["gToolTip"] := R2
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x89dcb43d]
 23 [-]: MOVE      R3 R0        ; R3 := R0
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: RETURN    R0 1         ; return 


; Function #69.6:
;
; Name:            
; Defined at line: 5165
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: SETTABLE  R1 K3 K0     ; R1["gToolTip"] := nil
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x89dcb43d]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: LOADKB    R4 1 0       ; R4 := true
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: RETURN    R0 1         ; return 


; Function #69.7:
;
; Name:            
; Defined at line: 5174
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADKB    R1 1 0       ; R1 := true
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mPrevSelectedElement"]
  7 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mPrevSelectedElement"]
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Id"]
 12 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Id"]
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: SETTABLE  R2 K3 K0     ; R2["mSelectedElement"] := nil
 17 [-]: LOADKB    R1 0 0       ; R1 := false
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x89dcb43d]
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mPrevSelectedElement"]
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mSelectedElement"]
 27 [-]: SETTABLE  R2 K1 R3     ; R2["mPrevSelectedElement"] := R3
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x89dcb43d]
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: CALL      R2 3 1       ; R2(R3,R4)
 32 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["Section"]
 33 [-]: SETUPVAL  R2 U1        ; U82 := R1
 34 [-]: GETUPVAL  R2 U2        ; R2 := U2
 35 [-]: MOVE      R3 R0        ; R3 := R0
 36 [-]: CALL      R2 2 1       ; R2(R3)
 37 [-]: GETUPVAL  R2 U3        ; R2 := U3
 38 [-]: MOVE      R3 R1        ; R3 := R1
 39 [-]: CALL      R2 2 1       ; R2(R3)
 40 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 41 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xaade900e]
 42 [-]: LOADK     R4 K8        ; R4 := "InfoPanel.ConstructionProgressA"
 43 [-]: CONST     R5 11        ; R5 := 11.000000
 44 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["id"]
 45 [-]: GETUPVAL  R7 U4        ; R7 := U4
 46 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["INVASION"]
 47 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 50
 50 [-]: LOADKB    R6 1 0       ; R6 := true
 51 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 52 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 53 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xaade900e]
 54 [-]: LOADK     R4 K11       ; R4 := "InfoPanel.ConstructionProgressB"
 55 [-]: CONST     R5 11        ; R5 := 11.000000
 56 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["id"]
 57 [-]: GETUPVAL  R7 U4        ; R7 := U4
 58 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["INVASION"]
 59 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 62
 62 [-]: LOADKB    R6 1 0       ; R6 := true
 63 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 64 [-]: GETUPVAL  R2 U5        ; R2 := U5
 65 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[0x659d451f]
 66 [-]: GETGLOBAL R3 K13       ; R3 := 0x0032441c
 67 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["UISound_Select"]
 68 [-]: CALL      R2 2 1       ; R2(R3)
 69 [-]: EQ        0 R1 K15     ; if R1 ~= true then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETUPVAL  R2 U5        ; R2 := U5
 72 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[0x659d451f]
 73 [-]: GETGLOBAL R3 K13       ; R3 := 0x0032441c
 74 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["UISound_ItemTipSection"]
 75 [-]: CALL      R2 2 1       ; R2(R3)
 76 [-]: JMP       82           ; PC := 82
 77 [-]: GETUPVAL  R2 U5        ; R2 := U5
 78 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[0x659d451f]
 79 [-]: GETGLOBAL R3 K13       ; R3 := 0x0032441c
 80 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["UISound_DialogClose"]
 81 [-]: CALL      R2 2 1       ; R2(R3)
 82 [-]: RETURN    R0 1         ; return 


; Function #69.8:
;
; Name:            
; Defined at line: 5209
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Image"]
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Images"]
  9 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Images"]
 12 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["ImagesIndex"]
 13 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 14 [-]: GETTABLE  R1 R2 K2     ; R1 := R2["Image"]
 15 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 16 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xc0a3774b]
 17 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 18 [-]: LOADK     R5 K2        ; R5 := "Image"
 19 [-]: CONST     R6 11        ; R6 := 11.000000
 20 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 23
 23 [-]: LOADKB    R7 1 0       ; R7 := true
 24 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 25 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 28 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x1cb415c1]
 29 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 30 [-]: LOADK     R5 K8        ; R5 := ".Image"
 31 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 32 [-]: MOVE      R5 R1        ; R5 := R1
 33 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 34 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["Count"]
 35 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["UnlockedCount"]
 36 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["UnlockedCount"]
 39 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 40 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xe261aa96]
 41 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 42 [-]: LOADK     R6 K12       ; R6 := "Notifications"
 43 [-]: CONST     R7 29        ; R7 := 29.000000
 44 [-]: GETGLOBAL R8 K13       ; R8 := 0x64fb1586
 45 [-]: MOVE      R9 R2        ; R9 := R2
 46 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 47 [-]: CALL      R3 0 1       ; R3(R4,...)
 48 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 49 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0xf64b7262]
 50 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 51 [-]: LOADK     R6 K15       ; R6 := "NotificationBg"
 52 [-]: CONST     R7 10        ; R7 := 10.000000
 53 [-]: GETUPVAL  R8 U0        ; R8 := U0
 54 [-]: GETTABLE  R8 R8 K16    ; R8 := R8[0x06d055f9]
 55 [-]: LT        1 K17 R2     ; if 0.000000 < R2 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 58
 58 [-]: LOADKB    R9 1 0       ; R9 := true
 59 [-]: CONST     R10 70       ; R10 := 70.000000
 60 [-]: CONST     R11 0        ; R11 := 0.000000
 61 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 62 [-]: CALL      R3 0 1       ; R3(R4,...)
 63 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 64 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0xf64b7262]
 65 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 66 [-]: LOADK     R6 K15       ; R6 := "NotificationBg"
 67 [-]: CONST     R7 12        ; R7 := 12.000000
 68 [-]: GETGLOBAL R8 K5        ; R8 := 0xae91e43b
 69 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0x91a24e4b]
 70 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["mClipName"]
 71 [-]: LOADK     R11 K19      ; R11 := ".Notifications"
 72 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 73 [-]: CONST     R11 33       ; R11 := 33.000000
 74 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 75 [-]: ADD       R8 R8 K20    ; R8 := R8 + 5.000000
 76 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 77 [-]: GETUPVAL  R3 U1        ; R3 := U1
 78 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3[0x89dcb43d]
 79 [-]: MOVE      R5 R0        ; R5 := R0
 80 [-]: LOADNIL   R6 R6        ; R6 := nil
 81 [-]: LOADKB    R7 1 0       ; R7 := true
 82 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 83 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 5397
; #Upvalues:       10
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
  3 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 0         ; if not R3 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4[0xa5a62f78]
 15 [-]: GETUPVAL  R5 U2        ; R5 := U2
 16 [-]: MOVE      R6 R0        ; R6 := R0
 17 [-]: CALL      R4 3 3       ; R4,R5 := R4(R5,R6)
 18 [-]: SELF      R6 R0 K3     ; R7 := R0; R6 := R0[0x42700bd0]
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: SELF      R7 R0 K4     ; R8 := R0; R7 := R0[0x6e026b71]
 21 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 22 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
 23 [-]: MOVE      R9 R7        ; R9 := R7
 24 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 25 [-]: TEST      R8 1         ; if R8 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETUPVAL  R8 U1        ; R8 := U1
 28 [-]: GETTABLE  R8 R8 K5     ; R8 := R8[0x52fb05b3]
 29 [-]: MOVE      R9 R7        ; R9 := R7
 30 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 31 [-]: GETUPVAL  R9 U1        ; R9 := U1
 32 [-]: GETTABLE  R9 R9 K6     ; R9 := R9[0x5e35d4d6]
 33 [-]: CALL      R9 1 2       ; R9 := R9()
 34 [-]: SETTABLE  R3 K7 R2     ; R3["IsActive"] := R2
 35 [-]: GETUPVAL  R10 U3       ; R10 := U3
 36 [-]: GETTABLE  R10 R10 K10  ; R10 := R10[0x056dcf06]
 37 [-]: MOVE      R11 R0       ; R11 := R0
 38 [-]: LOADKB    R12 1 0      ; R12 := true
 39 [-]: CALL      R10 3 3      ; R10,R11 := R10(R11,R12)
 40 [-]: SETTABLE  R3 K9 R11    ; R3["Themed"] := R11
 41 [-]: SETTABLE  R3 K8 R10    ; R3["Icon"] := R10
 42 [-]: GETGLOBAL R10 K12      ; R10 := 0xae91e43b
 43 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0x42b04007]
 44 [-]: GETGLOBAL R12 K14      ; R12 := 0x64fb1586
 45 [-]: SELF      R13 R0 K15   ; R14 := R0; R13 := R0[0xd3a9d01f]
 46 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 47 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 48 [-]: LOADKB    R13 0 0      ; R13 := false
 49 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 50 [-]: SETTABLE  R3 K11 R10   ; R3["Title"] := R10
 51 [-]: SELF      R10 R0 K17   ; R11 := R0; R10 := R0[0x45fdff63]
 52 [-]: SUB       R12 R4 K18   ; R12 := R4 - 1.000000
 53 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 54 [-]: SETTABLE  R3 K16 R10   ; R3["Text"] := R10
 55 [-]: SETTABLE  R3 K19 R7    ; R3["PrereqQuest"] := R7
 56 [-]: SETTABLE  R3 K20 R8    ; R3["PrereqQuestCompleted"] := R8
 57 [-]: GETGLOBAL R10 K1       ; R10 := 0x7b998233
 58 [-]: SELF      R11 R0 K22   ; R12 := R0; R11 := R0[0x7d45ff7d]
 59 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 60 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 61 [-]: NOT       R10 R10      ; R10 :=  R10
 62 [-]: SETTABLE  R3 K21 R10   ; R3["HasIntroCinematic"] := R10
 63 [-]: GETTABLE  R10 R3 K21   ; R10 := R3["HasIntroCinematic"]
 64 [-]: TEST      R10 0        ; if not R10 then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: LT        0 K18 R4     ; if 1.000000 >= R4 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: MOVE      R10 R8       ; R10 := R8
 69 [-]: JMP       72           ; PC := 72
 70 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 71
 71 [-]: LOADKB    R10 1 0      ; R10 := true
 72 [-]: SETTABLE  R3 K23 R10   ; R3["CanStart"] := R10
 73 [-]: SELF      R10 R0 K24   ; R11 := R0; R10 := R0[0xf8eabce5]
 74 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 75 [-]: SELF      R10 R10 K25  ; R11 := R10; R10 := R10[0x56c01834]
 76 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 77 [-]: TEST      R10 0        ; if not R10 then PC := 82
 78 [-]: JMP       82           ; PC := 82
 79 [-]: SELF      R10 R0 K24   ; R11 := R0; R10 := R0[0xf8eabce5]
 80 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 81 [-]: SETTABLE  R3 K26 R10   ; R3["CommitmentTag"] := R10
 82 [-]: TEST      R2 0         ; if not R2 then PC := 229
 83 [-]: JMP       229          ; PC := 229
 84 [-]: LEN       R10 R6       ; R10 := # R6
 85 [-]: LE        0 R4 R10     ; if R4 > R10 then PC := 229
 86 [-]: JMP       229          ; PC := 229
 87 [-]: SELF      R10 R0 K27   ; R11 := R0; R10 := R0[0xe975bacb]
 88 [-]: SUB       R12 R4 K18   ; R12 := R4 - 1.000000
 89 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 90 [-]: TEST      R10 0        ; if not R10 then PC := 125
 91 [-]: JMP       125          ; PC := 125
 92 [-]: SELF      R10 R0 K28   ; R11 := R0; R10 := R0[0xe2258c84]
 93 [-]: SUB       R12 R4 K18   ; R12 := R4 - 1.000000
 94 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 95 [-]: TEST      R10 1        ; if R10 then PC := 125
 96 [-]: JMP       125          ; PC := 125
 97 [-]: GETTABLE  R10 R6 R4    ; R10 := R6[R4]
 98 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["mMainMission"]
 99 [-]: GETTABLE  R10 R10 K30  ; R10 := R10["mKey"]
100 [-]: GETGLOBAL R11 K1       ; R11 := 0x7b998233
101 [-]: MOVE      R12 R10      ; R12 := R10
102 [-]: CALL      R11 2 2      ; R11 := R11(R12)
103 [-]: TEST      R11 1        ; if R11 then PC := 229
104 [-]: JMP       229          ; PC := 229
105 [-]: GETGLOBAL R11 K31      ; R11 := 0xb009bbc6
106 [-]: MOVE      R12 R10      ; R12 := R10
107 [-]: CALL      R11 2 2      ; R11 := R11(R12)
108 [-]: SELF      R12 R11 K33  ; R13 := R11; R12 := R11[0xef893aec]
109 [-]: CALL      R12 2 2      ; R12 := R12(R13)
110 [-]: SELF      R12 R12 K34  ; R13 := R12; R12 := R12[0x8f89d633]
111 [-]: CALL      R12 2 2      ; R12 := R12(R13)
112 [-]: SETTABLE  R3 K32 R12   ; R3["MissionInfo"] := R12
113 [-]: SELF      R12 R11 K36  ; R13 := R11; R12 := R11[0x92608d86]
114 [-]: CALL      R12 2 2      ; R12 := R12(R13)
115 [-]: SETTABLE  R3 K35 R12   ; R3["Node"] := R12
116 [-]: GETGLOBAL R12 K14      ; R12 := 0x64fb1586
117 [-]: SELF      R13 R11 K38  ; R14 := R11; R13 := R11[0xed4e0128]
118 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
119 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
120 [-]: GETUPVAL  R13 U1       ; R13 := U1
121 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["KEY_TAG"]
122 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
123 [-]: SETTABLE  R3 K37 R12   ; R3[0x25a6e75e] := R12
124 [-]: JMP       229          ; PC := 229
125 [-]: GETTABLE  R12 R6 R4    ; R12 := R6[R4]
126 [-]: GETTABLE  R12 R12 K40  ; R12 := R12["mMarkedNodes"]
127 [-]: LEN       R13 R12      ; R13 := # R12
128 [-]: LT        0 K41 R13    ; if 0.000000 >= R13 then PC := 229
129 [-]: JMP       229          ; PC := 229
130 [-]: GETTABLE  R13 R12 K18  ; R13 := R12[1.000000]
131 [-]: GETUPVAL  R14 U4       ; R14 := U4
132 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 137
133 [-]: JMP       137          ; PC := 137
134 [-]: GETUPVAL  R13 U4       ; R13 := U4
135 [-]: SETTABLE  R3 K35 R13   ; R3["Node"] := R13
136 [-]: JMP       229          ; PC := 229
137 [-]: LOADNIL   R13 R13      ; R13 := nil
138 [-]: SELF      R14 R0 K42   ; R15 := R0; R14 := R0[0xf2deaf69]
139 [-]: GETUPVAL  R16 U5       ; R16 := U5
140 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
141 [-]: TEST      R14 0        ; if not R14 then PC := 183
142 [-]: JMP       183          ; PC := 183
143 [-]: GETGLOBAL R14 K43      ; R14 := 0x7f5022cf
144 [-]: GETTABLE  R14 R14 K44  ; R14 := R14[0xa5c556b9]
145 [-]: GETGLOBAL R15 K14      ; R15 := 0x64fb1586
146 [-]: GETTABLE  R16 R12 K18  ; R16 := R12[1.000000]
147 [-]: CALL      R15 2 2      ; R15 := R15(R16)
148 [-]: LOADK     R16 K45      ; R16 := "HUB"
149 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
150 [-]: TEST      R14 0        ; if not R14 then PC := 183
151 [-]: JMP       183          ; PC := 183
152 [-]: GETGLOBAL R14 K46      ; R14 := 0x0469f296
153 [-]: LOADK     R15 K47      ; R15 := "DESTROYED"
154 [-]: CALL      R14 2 2      ; R14 := R14(R15)
155 [-]: GETGLOBAL R15 K48      ; R15 := 0xcfc01047
156 [-]: MOVE      R16 R12      ; R16 := R12
157 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
158 [-]: JMP       180          ; PC := 180
159 [-]: SELF      R20 R9 K49   ; R21 := R9; R20 := R9[0x3ad9ed31]
160 [-]: MOVE      R22 R19      ; R22 := R19
161 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
162 [-]: GETTABLE  R21 R20 K50  ; R21 := R20["missionTag"]
163 [-]: EQ        1 R21 R14    ; if R21 == R14 then PC := 180
164 [-]: JMP       180          ; PC := 180
165 [-]: GETGLOBAL R21 K1       ; R21 := 0x7b998233
166 [-]: GETTABLE  R22 R20 K51  ; R22 := R20["mission"]
167 [-]: GETTABLE  R22 R22 K52  ; R22 := R22["levelOverride"]
168 [-]: CALL      R21 2 2      ; R21 := R21(R22)
169 [-]: TEST      R21 1        ; if R21 then PC := 180
170 [-]: JMP       180          ; PC := 180
171 [-]: GETTABLE  R21 R20 K51  ; R21 := R20["mission"]
172 [-]: GETTABLE  R21 R21 K52  ; R21 := R21["levelOverride"]
173 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21[0xf2deaf69]
174 [-]: GETUPVAL  R23 U6       ; R23 := U6
175 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
176 [-]: TEST      R21 0        ; if not R21 then PC := 180
177 [-]: JMP       180          ; PC := 180
178 [-]: MOVE      R13 R19      ; R13 := R19
179 [-]: JMP       222          ; PC := 222
180 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 159; R17 := R18 end
181 [-]: JMP       159          ; PC := 159
182 [-]: JMP       222          ; PC := 222
183 [-]: GETUPVAL  R21 U7       ; R21 := U7
184 [-]: TEST      R21 0        ; if not R21 then PC := 218
185 [-]: JMP       218          ; PC := 218
186 [-]: NEWTABLE  R21 0 0      ; R21 := {}
187 [-]: GETGLOBAL R22 K53      ; R22 := _T
188 [-]: GETTABLE  R22 R22 K54  ; R22 := R22["CustomStarChartNodeFilter"]
189 [-]: TEST      R22 0        ; if not R22 then PC := 199
190 [-]: JMP       199          ; PC := 199
191 [-]: GETGLOBAL R22 K53      ; R22 := _T
192 [-]: GETTABLE  R22 R22 K54  ; R22 := R22["CustomStarChartNodeFilter"]
193 [-]: GETTABLE  R22 R22 K55  ; R22 := R22["Nodes"]
194 [-]: TEST      R22 0        ; if not R22 then PC := 199
195 [-]: JMP       199          ; PC := 199
196 [-]: GETGLOBAL R22 K53      ; R22 := _T
197 [-]: GETTABLE  R22 R22 K54  ; R22 := R22["CustomStarChartNodeFilter"]
198 [-]: GETTABLE  R12 R22 K55  ; R12 := R22["Nodes"]
199 [-]: CONST     R22 1        ; R22 := 1.000000
200 [-]: LEN       R23 R12      ; R23 := # R12
201 [-]: CONST     R24 1        ; R24 := 1.000000
202 [-]: FORPREP   R22 215      ; R22 -= R24; PC := 215
203 [-]: SELF      R26 R9 K49   ; R27 := R9; R26 := R9[0x3ad9ed31]
204 [-]: GETTABLE  R28 R12 R25  ; R28 := R12[R25]
205 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
206 [-]: GETTABLE  R26 R26 K56  ; R26 := R26["name"]
207 [-]: GETGLOBAL R27 K57      ; R27 := EMPTY_SYMBOL
208 [-]: EQ        1 R26 R27    ; if R26 == R27 then PC := 215
209 [-]: JMP       215          ; PC := 215
210 [-]: GETGLOBAL R26 K58      ; R26 := 0x33bdd652
211 [-]: GETTABLE  R26 R26 K59  ; R26 := R26[0x23d5322f]
212 [-]: MOVE      R27 R21      ; R27 := R21
213 [-]: GETTABLE  R28 R12 R25  ; R28 := R12[R25]
214 [-]: CALL      R26 3 1      ; R26(R27,R28)
215 [-]: FORLOOP   R22 203      ; R22 += R24; if R22 <= R23 then begin PC := 203; R25 := R22 end
216 [-]: SETTABLE  R3 K55 R21   ; R3["Nodes"] := R21
217 [-]: JMP       222          ; PC := 222
218 [-]: SELF      R26 R9 K60   ; R27 := R9; R26 := R9[0x365d0eb2]
219 [-]: MOVE      R28 R12      ; R28 := R12
220 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
221 [-]: MOVE      R13 R26      ; R13 := R26
222 [-]: TEST      R13 0        ; if not R13 then PC := 229
223 [-]: JMP       229          ; PC := 229
224 [-]: SELF      R26 R13 K25  ; R27 := R13; R26 := R13[0x56c01834]
225 [-]: CALL      R26 2 2      ; R26 := R26(R27)
226 [-]: TEST      R26 0        ; if not R26 then PC := 229
227 [-]: JMP       229          ; PC := 229
228 [-]: SETTABLE  R3 K35 R13   ; R3["Node"] := R13
229 [-]: SETTABLE  R3 K61 K62   ; R3["IsLoaded"] := true
230 [-]: GETUPVAL  R26 U8       ; R26 := U8
231 [-]: EQ        1 R26 K0     ; if R26 == nil then PC := 241
232 [-]: JMP       241          ; PC := 241
233 [-]: GETUPVAL  R26 U8       ; R26 := U8
234 [-]: SELF      R26 R26 K63  ; R27 := R26; R26 := R26[0xea061e98]
235 [-]: CLOSURE   R28 0        ; R28 := closure(Function #70.1)
236 [-]: MOVE      R0 R1        ; R0 := R1
237 [-]: GETUPVAL  R0 U8        ; R0 := U8
238 [-]: CALL      R26 3 1      ; R26(R27,R28)
239 [-]: GETUPVAL  R26 U9       ; R26 := U9
240 [-]: CALL      R26 1 1      ; R26()
241 [-]: RETURN    R0 1         ; return 


; Function #70.1:
;
; Name:            
; Defined at line: 5479
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["IsBanner"]
  2 [-]: TEST      R1 1         ; if R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["QuestIndex"]
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mInitialized"]
  9 [-]: TEST      R1 0         ; if not R1 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0xb15e6aca]
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 5489
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x25a6e75e]
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x8e7c3b5e]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x25a6e75e]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xe9768ed0]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 44
 17 [-]: JMP       44           ; PC := 44
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x33bdd652
 19 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x23d5322f]
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 22 [-]: SETTABLE  R4 K6 R0     ; R4["Type"] := R0
 23 [-]: SETTABLE  R4 K7 K8     ; R4["IsLoaded"] := false
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: GETUPVAL  R2 U0        ; R2 := U0
 26 [-]: LEN       R2 R2        ; R2 := # R2
 27 [-]: GETUPVAL  R3 U2        ; R3 := U2
 28 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x39f637e6]
 29 [-]: SELF      R5 R0 K10    ; R6 := R0; R5 := R0[0xed4e0128]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: CLOSURE   R6 0         ; R6 := closure(Function #71.1)
 32 [-]: MOVE      R0 R2        ; R0 := R2
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: GETUPVAL  R0 U3        ; R0 := U3
 35 [-]: GETUPVAL  R0 U4        ; R0 := U4
 36 [-]: GETUPVAL  R0 U5        ; R0 := U5
 37 [-]: GETUPVAL  R0 U6        ; R0 := U6
 38 [-]: GETUPVAL  R0 U7        ; R0 := U7
 39 [-]: GETUPVAL  R0 U8        ; R0 := U8
 40 [-]: GETUPVAL  R0 U9        ; R0 := U9
 41 [-]: GETUPVAL  R0 U10       ; R0 := U10
 42 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 43 [-]: CLOSE     R2           ; SAVE R2,...
 44 [-]: GETUPVAL  R2 U4        ; R2 := U4
 45 [-]: TEST      R2 0         ; if not R2 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: RETURN    R0 1         ; return 
 48 [-]: LOADNIL   R2 R2        ; R2 := nil
 49 [-]: LOADKB    R3 0 0       ; R3 := false
 50 [-]: GETGLOBAL R4 K3        ; R4 := 0x7b998233
 51 [-]: MOVE      R5 R0        ; R5 := R0
 52 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 53 [-]: TEST      R4 0         ; if not R4 then PC := 127
 54 [-]: JMP       127          ; PC := 127
 55 [-]: GETUPVAL  R4 U11       ; R4 := U11
 56 [-]: LEN       R4 R4        ; R4 := # R4
 57 [-]: LT        0 K11 R4     ; if 0.000000 >= R4 then PC := 127
 58 [-]: JMP       127          ; PC := 127
 59 [-]: GETUPVAL  R4 U7        ; R4 := U7
 60 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x52fb05b3]
 61 [-]: GETUPVAL  R5 U11       ; R5 := U11
 62 [-]: GETUPVAL  R6 U11       ; R6 := U11
 63 [-]: LEN       R6 R6        ; R6 := # R6
 64 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 65 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["keyChain"]
 66 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 67 [-]: TEST      R4 1         ; if R4 then PC := 127
 68 [-]: JMP       127          ; PC := 127
 69 [-]: LOADKB    R4 0 0       ; R4 := false
 70 [-]: GETGLOBAL R5 K14       ; R5 := 0xc8802016
 71 [-]: GETUPVAL  R6 U11       ; R6 := U11
 72 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 73 [-]: JMP       93           ; PC := 93
 74 [-]: LOADKB    R4 0 0       ; R4 := false
 75 [-]: LOADKB    R3 0 0       ; R3 := false
 76 [-]: GETGLOBAL R10 K14      ; R10 := 0xc8802016
 77 [-]: MOVE      R11 R1       ; R11 := R1
 78 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 79 [-]: JMP       87           ; PC := 87
 80 [-]: GETTABLE  R15 R9 K13   ; R15 := R9["keyChain"]
 81 [-]: GETTABLE  R16 R14 K15  ; R16 := R14["mItemType"]
 82 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 87
 83 [-]: JMP       87           ; PC := 87
 84 [-]: GETTABLE  R4 R14 K16   ; R4 := R14["mCompleted"]
 85 [-]: LOADKB    R3 1 0       ; R3 := true
 86 [-]: JMP       89           ; PC := 89
 87 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 80; R12 := R13 end
 88 [-]: JMP       80           ; PC := 80
 89 [-]: TEST      R4 1         ; if R4 then PC := 93
 90 [-]: JMP       93           ; PC := 93
 91 [-]: MOVE      R2 R9        ; R2 := R9
 92 [-]: JMP       95           ; PC := 95
 93 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 74; R7 := R8 end
 94 [-]: JMP       74           ; PC := 74
 95 [-]: GETGLOBAL R15 K3       ; R15 := 0x7b998233
 96 [-]: MOVE      R16 R2       ; R16 := R2
 97 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 98 [-]: TEST      R15 1        ; if R15 then PC := 127
 99 [-]: JMP       127          ; PC := 127
100 [-]: TEST      R3 1         ; if R3 then PC := 127
101 [-]: JMP       127          ; PC := 127
102 [-]: GETGLOBAL R15 K4       ; R15 := 0x33bdd652
103 [-]: GETTABLE  R15 R15 K5   ; R15 := R15[0x23d5322f]
104 [-]: GETUPVAL  R16 U0       ; R16 := U0
105 [-]: NEWTABLE  R17 0 2      ; R17 := {}
106 [-]: GETTABLE  R18 R2 K13   ; R18 := R2["keyChain"]
107 [-]: SETTABLE  R17 K6 R18   ; R17["Type"] := R18
108 [-]: SETTABLE  R17 K7 K8    ; R17["IsLoaded"] := false
109 [-]: CALL      R15 3 1      ; R15(R16,R17)
110 [-]: GETUPVAL  R15 U0       ; R15 := U0
111 [-]: LEN       R15 R15      ; R15 := # R15
112 [-]: GETUPVAL  R16 U0       ; R16 := U0
113 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
114 [-]: GETUPVAL  R17 U2       ; R17 := U2
115 [-]: SELF      R17 R17 K9   ; R18 := R17; R17 := R17[0x39f637e6]
116 [-]: GETTABLE  R19 R2 K13   ; R19 := R2["keyChain"]
117 [-]: SELF      R19 R19 K10  ; R20 := R19; R19 := R19[0xed4e0128]
118 [-]: CALL      R19 2 2      ; R19 := R19(R20)
119 [-]: CLOSURE   R20 1        ; R20 := closure(Function #71.2)
120 [-]: MOVE      R0 R16       ; R0 := R16
121 [-]: MOVE      R0 R2        ; R0 := R2
122 [-]: GETUPVAL  R0 U1        ; R0 := U1
123 [-]: GETUPVAL  R0 U7        ; R0 := U7
124 [-]: GETUPVAL  R0 U12       ; R0 := U12
125 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
126 [-]: CLOSE     R15          ; SAVE R15,...
127 [-]: GETGLOBAL R15 K14      ; R15 := 0xc8802016
128 [-]: MOVE      R16 R1       ; R16 := R1
129 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
130 [-]: JMP       181          ; PC := 181
131 [-]: GETTABLE  R20 R19 K16  ; R20 := R19["mCompleted"]
132 [-]: TEST      R20 1        ; if R20 then PC := 181
133 [-]: JMP       181          ; PC := 181
134 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
135 [-]: MOVE      R21 R0       ; R21 := R0
136 [-]: CALL      R20 2 2      ; R20 := R20(R21)
137 [-]: TEST      R20 1        ; if R20 then PC := 142
138 [-]: JMP       142          ; PC := 142
139 [-]: GETTABLE  R20 R19 K15  ; R20 := R19["mItemType"]
140 [-]: EQ        1 R0 R20     ; if R0 == R20 then PC := 181
141 [-]: JMP       181          ; PC := 181
142 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
143 [-]: MOVE      R21 R2       ; R21 := R2
144 [-]: CALL      R20 2 2      ; R20 := R20(R21)
145 [-]: TEST      R20 1        ; if R20 then PC := 156
146 [-]: JMP       156          ; PC := 156
147 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
148 [-]: GETTABLE  R21 R2 K13   ; R21 := R2["keyChain"]
149 [-]: CALL      R20 2 2      ; R20 := R20(R21)
150 [-]: TEST      R20 1        ; if R20 then PC := 156
151 [-]: JMP       156          ; PC := 156
152 [-]: GETTABLE  R20 R19 K15  ; R20 := R19["mItemType"]
153 [-]: GETTABLE  R21 R2 K13   ; R21 := R2["keyChain"]
154 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 157
155 [-]: JMP       157          ; PC := 157
156 [-]: LOADKB    R20 0 1      ; R20 := false; PC := 157
157 [-]: LOADKB    R20 1 0      ; R20 := true
158 [-]: GETGLOBAL R21 K4       ; R21 := 0x33bdd652
159 [-]: GETTABLE  R21 R21 K5   ; R21 := R21[0x23d5322f]
160 [-]: GETUPVAL  R22 U0       ; R22 := U0
161 [-]: NEWTABLE  R23 0 4      ; R23 := {}
162 [-]: GETTABLE  R24 R19 K15  ; R24 := R19["mItemType"]
163 [-]: SETTABLE  R23 K6 R24   ; R23["Type"] := R24
164 [-]: SETTABLE  R23 K7 K8    ; R23["IsLoaded"] := false
165 [-]: SETTABLE  R23 K17 R20  ; R23["IsPrereq"] := R20
166 [-]: SETTABLE  R23 K18 K19  ; R23["CanActivate"] := true
167 [-]: CALL      R21 3 1      ; R21(R22,R23)
168 [-]: GETUPVAL  R21 U0       ; R21 := U0
169 [-]: LEN       R21 R21      ; R21 := # R21
170 [-]: GETUPVAL  R22 U2       ; R22 := U2
171 [-]: SELF      R22 R22 K9   ; R23 := R22; R22 := R22[0x39f637e6]
172 [-]: GETTABLE  R24 R19 K15  ; R24 := R19["mItemType"]
173 [-]: SELF      R24 R24 K10  ; R25 := R24; R24 := R24[0xed4e0128]
174 [-]: CALL      R24 2 2      ; R24 := R24(R25)
175 [-]: CLOSURE   R25 2        ; R25 := closure(Function #71.3)
176 [-]: MOVE      R0 R21       ; R0 := R21
177 [-]: GETUPVAL  R0 U0        ; R0 := U0
178 [-]: GETUPVAL  R0 U3        ; R0 := U3
179 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
180 [-]: CLOSE     R20          ; SAVE R20,...
181 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 131; R17 := R18 end
182 [-]: JMP       131          ; PC := 131
183 [-]: RETURN    R0 1         ; return 


; Function #71.1:
;
; Name:            
; Defined at line: 5501
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 10 [-]: SETTABLE  R1 K0 R0     ; R1["Quest"] := R0
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: LOADKB    R4 1 0       ; R4 := true
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: TEST      R1 0         ; if not R1 then PC := 64
 18 [-]: JMP       64           ; PC := 64
 19 [-]: GETUPVAL  R1 U4        ; R1 := U4
 20 [-]: GETUPVAL  R2 U5        ; R2 := U5
 21 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["QUESTS"]
 22 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 64
 23 [-]: JMP       64           ; PC := 64
 24 [-]: GETUPVAL  R1 U6        ; R1 := U6
 25 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0x8e7c3b5e]
 26 [-]: GETGLOBAL R2 K3        ; R2 := 0x25d99d89
 27 [-]: CALL      R1 2 3       ; R1,R2 := R1(R2)
 28 [-]: GETUPVAL  R3 U7        ; R3 := U7
 29 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 64
 30 [-]: JMP       64           ; PC := 64
 31 [-]: EQ        1 R2 K4      ; if R2 == 11.000000 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: EQ        0 R2 K5      ; if R2 ~= 13.000000 then PC := 64
 34 [-]: JMP       64           ; PC := 64
 35 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 36 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x42b04007]
 37 [-]: GETUPVAL  R5 U8        ; R5 := U8
 38 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mSelectedElement"]
 39 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["Title"]
 40 [-]: LOADKB    R6 1 0       ; R6 := true
 41 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 42 [-]: MOVE      R4 R3        ; R4 := R3
 43 [-]: LOADK     R5 K10       ; R5 := " - "
 44 [-]: GETUPVAL  R6 U1        ; R6 := U1
 45 [-]: GETTABLE  R6 R6 K11    ; R6 := R6[1.000000]
 46 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Title"]
 47 [-]: LOADK     R7 K10       ; R7 := " - "
 48 [-]: GETGLOBAL R8 K12       ; R8 := 0x603636ad
 49 [-]: GETGLOBAL R9 K13       ; R9 := 0x64fb1586
 50 [-]: GETUPVAL  R10 U1       ; R10 := U1
 51 [-]: GETTABLE  R10 R10 K11  ; R10 := R10[1.000000]
 52 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["Text"]
 53 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 54 [-]: LOADKB    R10 0 0      ; R10 := false
 55 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 56 [-]: CONCAT    R3 R4 R8     ; R3 := R4 .. R5 .. R6 .. R7 .. R8
 57 [-]: GETUPVAL  R4 U9        ; R4 := U9
 58 [-]: GETTABLE  R4 R4 K15    ; R4 := R4[0xc340ce91]
 59 [-]: GETGLOBAL R5 K6        ; R5 := 0xae91e43b
 60 [-]: LOADK     R6 K16       ; R6 := "InfoPanel.Title"
 61 [-]: MOVE      R7 R3        ; R7 := R3
 62 [-]: LOADK     R8 K17       ; R8 := "..."
 63 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 64 [-]: RETURN    R0 1         ; return 


; Function #71.2:
;
; Name:            
; Defined at line: 5557
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 R0     ; R1["Quest"] := R0
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: SETTABLE  R1 K1 K2     ; R1["IsPrereq"] := true
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SETTABLE  R1 K3 K2     ; R1["IsLoaded"] := true
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SETTABLE  R1 K4 K5     ; R1["Title"] := ""
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["prereqJunctions"]
 11 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 107
 12 [-]: JMP       107          ; PC := 107
 13 [-]: LOADKB    R1 1 0       ; R1 := true
 14 [-]: CONST     R2 1         ; R2 := 1.000000
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["prereqJunctions"]
 17 [-]: LEN       R3 R3        ; R3 := # R3
 18 [-]: CONST     R4 1         ; R4 := 1.000000
 19 [-]: FORPREP   R2 77        ; R2 -= R4; PC := 77
 20 [-]: GETGLOBAL R6 K8        ; R6 := 0x0469f296
 21 [-]: GETUPVAL  R7 U1        ; R7 := U1
 22 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["prereqJunctions"]
 23 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: GETUPVAL  R7 U2        ; R7 := U2
 26 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xdcbeb3e3]
 27 [-]: MOVE      R9 R6        ; R9 := R6
 28 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 29 [-]: TEST      R7 1         ; if R7 then PC := 77
 30 [-]: JMP       77           ; PC := 77
 31 [-]: GETUPVAL  R7 U3        ; R7 := U3
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7[0x5e35d4d6]
 33 [-]: CALL      R7 1 2       ; R7 := R7()
 34 [-]: SELF      R8 R7 K11    ; R9 := R7; R8 := R7[0x3ad9ed31]
 35 [-]: MOVE      R10 R6       ; R10 := R6
 36 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 37 [-]: GETGLOBAL R9 K12       ; R9 := 0x603636ad
 38 [-]: GETTABLE  R10 R8 K13   ; R10 := R8["locTag"]
 39 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10[0x6d604ba7]
 40 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 41 [-]: LOADNIL   R11 R11      ; R11 := nil
 42 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 43 [-]: GETGLOBAL R10 K12      ; R10 := 0x603636ad
 44 [-]: SELF      R11 R7 K15   ; R12 := R7; R11 := R7[0xc1dee03f]
 45 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 46 [-]: GETTABLE  R12 R8 K16   ; R12 := R8["region"]
 47 [-]: ADD       R12 R12 K17  ; R12 := R12 + 1.000000
 48 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 49 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["name"]
 50 [-]: LOADNIL   R12 R12      ; R12 := nil
 51 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 52 [-]: GETUPVAL  R11 U0       ; R11 := U0
 53 [-]: MOVE      R12 R9       ; R12 := R9
 54 [-]: LOADK     R13 K19      ; R13 := " ("
 55 [-]: MOVE      R14 R10      ; R14 := R10
 56 [-]: LOADK     R15 K20      ; R15 := ")"
 57 [-]: CONCAT    R12 R12 R15  ; R12 := R12 .. R13 .. R14 .. R15
 58 [-]: SETTABLE  R11 K4 R12   ; R11["Title"] := R12
 59 [-]: GETUPVAL  R11 U0       ; R11 := U0
 60 [-]: GETGLOBAL R12 K12      ; R12 := 0x603636ad
 61 [-]: LOADK     R13 K22      ; R13 := "/Lotus/Language/Menu/WorldStatePanel_PrereqJunctionHint"
 62 [-]: LOADNIL   R14 R14      ; R14 := nil
 63 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 64 [-]: SETTABLE  R11 K21 R12  ; R11["Text"] := R12
 65 [-]: GETUPVAL  R11 U0       ; R11 := U0
 66 [-]: GETUPVAL  R12 U3       ; R12 := U3
 67 [-]: GETTABLE  R12 R12 K24  ; R12 := R12[0xc63cb7e8]
 68 [-]: GETTABLE  R13 R8 K25   ; R13 := R8["mission"]
 69 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 70 [-]: SETTABLE  R11 K23 R12  ; R11["Icon"] := R12
 71 [-]: GETUPVAL  R11 U0       ; R11 := U0
 72 [-]: SETTABLE  R11 K26 R6   ; R11["Node"] := R6
 73 [-]: GETUPVAL  R11 U0       ; R11 := U0
 74 [-]: SETTABLE  R11 K27 K2   ; R11["IsJunctionOverride"] := true
 75 [-]: LOADKB    R1 0 0       ; R1 := false
 76 [-]: JMP       78           ; PC := 78
 77 [-]: FORLOOP   R2 20        ; R2 += R4; if R2 <= R3 then begin PC := 20; R5 := R2 end
 78 [-]: TEST      R1 0         ; if not R1 then PC := 107
 79 [-]: JMP       107          ; PC := 107
 80 [-]: GETUPVAL  R11 U1       ; R11 := U1
 81 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["postJunctionDescriptions"]
 82 [-]: EQ        1 R11 K7     ; if R11 == nil then PC := 107
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETUPVAL  R11 U0       ; R11 := U0
 85 [-]: GETGLOBAL R12 K12      ; R12 := 0x603636ad
 86 [-]: GETUPVAL  R13 U1       ; R13 := U1
 87 [-]: GETTABLE  R13 R13 K29  ; R13 := R13["postJunctionTitles"]
 88 [-]: GETTABLE  R13 R13 K17  ; R13 := R13[1.000000]
 89 [-]: LOADNIL   R14 R14      ; R14 := nil
 90 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 91 [-]: SETTABLE  R11 K4 R12   ; R11["Title"] := R12
 92 [-]: GETUPVAL  R11 U0       ; R11 := U0
 93 [-]: GETGLOBAL R12 K12      ; R12 := 0x603636ad
 94 [-]: GETUPVAL  R13 U1       ; R13 := U1
 95 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["postJunctionDescriptions"]
 96 [-]: GETTABLE  R13 R13 K17  ; R13 := R13[1.000000]
 97 [-]: LOADNIL   R14 R14      ; R14 := nil
 98 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 99 [-]: SETTABLE  R11 K21 R12  ; R11["Text"] := R12
100 [-]: GETUPVAL  R11 U0       ; R11 := U0
101 [-]: GETUPVAL  R12 U1       ; R12 := U1
102 [-]: GETTABLE  R12 R12 K30  ; R12 := R12["postJunctionTextures"]
103 [-]: GETTABLE  R12 R12 K17  ; R12 := R12[1.000000]
104 [-]: SETTABLE  R11 K23 R12  ; R11["Icon"] := R12
105 [-]: GETUPVAL  R11 U0       ; R11 := U0
106 [-]: SETTABLE  R11 K27 K2   ; R11["IsJunctionOverride"] := true
107 [-]: GETUPVAL  R11 U4       ; R11 := U4
108 [-]: CALL      R11 1 1      ; R11()
109 [-]: RETURN    R0 1         ; return 


; Function #71.3:
;
; Name:            
; Defined at line: 5609
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LT        1 R2 R1      ; if R2 < R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  9 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 15 [-]: SETTABLE  R1 K1 R0     ; R1["Quest"] := R0
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: LOADKB    R4 0 0       ; R4 := false
 20 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 21 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 5621
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2[0xbd2e96ea]
  3 [-]: LOADK     R4 K1        ; R4 := 0.010000
  4 [-]: CLOSURE   R5 0         ; R5 := closure(Function #72.1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #72.1:
;
; Name:            
; Defined at line: 5622
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x93865f87]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 5625
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x06d055f9]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0x1467d5f4]
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: CONST     R2 -40       ; R2 := -40.000000
  7 [-]: CONST     R3 0         ; R3 := 0.000000
  8 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x67bc869f]
 11 [-]: LOADK     R3 K5        ; R3 := "TopMenu"
 12 [-]: CONST     R4 0         ; R4 := 0.000000
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: ADD       R5 R5 R0     ; R5 := R5 + R0
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x67bc869f]
 18 [-]: LOADK     R3 K6        ; R3 := "InfoPanel"
 19 [-]: CONST     R4 0         ; R4 := 0.000000
 20 [-]: GETUPVAL  R5 U2        ; R5 := U2
 21 [-]: ADD       R5 R5 R0     ; R5 := R5 + R0
 22 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 23 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 5631
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mElements"]
  3 [-]: CONST     R2 1         ; R2 := 1.000000
  4 [-]: LEN       R3 R1        ; R3 := # R1
  5 [-]: CONST     R4 1         ; R4 := 1.000000
  6 [-]: FORPREP   R2 16        ; R2 -= R4; PC := 16
  7 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
  8 [-]: GETTABLE  R7 R6 K1     ; R7 := R6["Section"]
  9 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R7 U0        ; R7 := U0
 12 [-]: SELF      R7 R7 K2     ; R8 := R7; R7 := R7[0x77de11fe]
 13 [-]: MOVE      R9 R5        ; R9 := R5
 14 [-]: CALL      R7 3 1       ; R7(R8,R9)
 15 [-]: JMP       17           ; PC := 17
 16 [-]: FORLOOP   R2 7         ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
 17 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 5642
; #Upvalues:       39
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CustomStarChartNodeFilter"]
  5 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CustomStarChartNodeFilter"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["NewWarMode"]
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 12
 12 [-]: LOADKB    R0 1 0       ; R0 := true
 13 [-]: SETUPVAL  R0 U1        ; U82 := R1
 14 [-]: GETGLOBAL R0 K4        ; R0 := 0x76ea806b
 15 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x3f3ae64c]
 16 [-]: CONST     R2 0         ; R2 := 0.000000
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 25 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x4ad11788]
 26 [-]: GETGLOBAL R3 K9        ; R3 := 0x3f56a9a5
 27 [-]: CALL      R1 3 1       ; R1(R2,R3)
 28 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 29 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x97f16b44]
 30 [-]: GETGLOBAL R3 K11       ; R3 := 0xf9376b34
 31 [-]: CALL      R1 3 1       ; R1(R2,R3)
 32 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 33 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xf5f4e9ac]
 34 [-]: GETGLOBAL R3 K11       ; R3 := 0xf9376b34
 35 [-]: CALL      R1 3 1       ; R1(R2,R3)
 36 [-]: GETGLOBAL R1 K13       ; R1 := 0x2d0fad09
 37 [-]: LOADK     R2 K14       ; R2 := "Lotus.Interface.Libs.TimerMgr"
 38 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 39 [-]: GETTABLE  R2 R1 K15    ; R2 := R1[0xde474187]
 40 [-]: CALL      R2 1 2       ; R2 := R2()
 41 [-]: SETUPVAL  R2 U2        ; U82 := R2
 42 [-]: SELF      R2 R0 K16    ; R3 := R0; R2 := R0[0x80563238]
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: SETUPVAL  R2 U3        ; U82 := R3
 45 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 46 [-]: GETUPVAL  R3 U3        ; R3 := U3
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 0         ; if not R2 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETUPVAL  R2 U4        ; R2 := U4
 52 [-]: GETGLOBAL R3 K18       ; R3 := 0x8430ccbc
 53 [-]: GETTABLE  R3 R3 K19    ; R3 := R3[1.000000]
 54 [-]: SETTABLE  R2 K17 R3    ; R2["PlagueStarEventBadge"] := R3
 55 [-]: GETUPVAL  R2 U4        ; R2 := U4
 56 [-]: GETGLOBAL R3 K18       ; R3 := 0x8430ccbc
 57 [-]: GETTABLE  R3 R3 K21    ; R3 := R3[2.000000]
 58 [-]: SETTABLE  R2 K20 R3    ; R2["TennoLive2022White"] := R3
 59 [-]: GETUPVAL  R2 U4        ; R2 := U4
 60 [-]: GETGLOBAL R3 K18       ; R3 := 0x8430ccbc
 61 [-]: GETTABLE  R3 R3 K23    ; R3 := R3[3.000000]
 62 [-]: SETTABLE  R2 K22 R3    ; R2["TennonConSigil2022"] := R3
 63 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 64 [-]: GETGLOBAL R3 K24       ; R3 := 0x9ba7909f
 65 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 66 [-]: TEST      R2 1         ; if R2 then PC := 78
 67 [-]: JMP       78           ; PC := 78
 68 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 69 [-]: GETGLOBAL R3 K25       ; R3 := 0xe44a533a
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: TEST      R2 1         ; if R2 then PC := 78
 72 [-]: JMP       78           ; PC := 78
 73 [-]: GETGLOBAL R2 K24       ; R2 := 0x9ba7909f
 74 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2[0xbcfb64ab]
 75 [-]: GETGLOBAL R4 K25       ; R4 := 0xe44a533a
 76 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 77 [-]: SETUPVAL  R2 U5        ; U82 := R5
 78 [-]: GETGLOBAL R2 K13       ; R2 := 0x2d0fad09
 79 [-]: LOADK     R3 K27       ; R3 := "Lotus.Interface.Libs.DioramaLoader"
 80 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 81 [-]: GETTABLE  R3 R2 K28    ; R3 := R2[0xbec1f4ee]
 82 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
 83 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 84 [-]: SETUPVAL  R3 U6        ; U82 := R6
 85 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 86 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3[0x2002e1dc]
 87 [-]: GETGLOBAL R5 K0        ; R5 := _T
 88 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["RadialSolarMapOpen"]
 89 [-]: EQ        1 R5 K31     ; if R5 == true then PC := 92
 90 [-]: JMP       92           ; PC := 92
 91 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 92
 92 [-]: LOADKB    R5 1 0       ; R5 := true
 93 [-]: CALL      R3 3 1       ; R3(R4,R5)
 94 [-]: GETGLOBAL R3 K13       ; R3 := 0x2d0fad09
 95 [-]: LOADK     R4 K32       ; R4 := "Lotus.Interface.Components.ResourceLoaderQueue"
 96 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 97 [-]: GETTABLE  R4 R3 K33    ; R4 := R3[0x133f6ea0]
 98 [-]: GETGLOBAL R5 K7        ; R5 := 0xae91e43b
 99 [-]: LOADK     R6 K34       ; R6 := "OnResourceLoaded"
100 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
101 [-]: SETUPVAL  R4 U7        ; U82 := R7
102 [-]: GETUPVAL  R4 U8        ; R4 := U8
103 [-]: GETUPVAL  R5 U9        ; R5 := U9
104 [-]: GETTABLE  R5 R5 K36    ; R5 := R5[0x5d10207d]
105 [-]: CONST     R6 2         ; R6 := 2.000000
106 [-]: LOADKB    R7 1 0       ; R7 := true
107 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
108 [-]: SETTABLE  R4 K35 R5    ; R4["Background1"] := R5
109 [-]: GETUPVAL  R4 U8        ; R4 := U8
110 [-]: GETUPVAL  R5 U9        ; R5 := U9
111 [-]: GETTABLE  R5 R5 K36    ; R5 := R5[0x5d10207d]
112 [-]: CONST     R6 3         ; R6 := 3.000000
113 [-]: LOADKB    R7 1 0       ; R7 := true
114 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
115 [-]: SETTABLE  R4 K38 R5    ; R4["Background2"] := R5
116 [-]: GETUPVAL  R4 U8        ; R4 := U8
117 [-]: GETUPVAL  R5 U9        ; R5 := U9
118 [-]: GETTABLE  R5 R5 K36    ; R5 := R5[0x5d10207d]
119 [-]: CONST     R6 1         ; R6 := 1.000000
120 [-]: LOADKB    R7 1 0       ; R7 := true
121 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
122 [-]: SETTABLE  R4 K39 R5    ; R4["BackerHighlight"] := R5
123 [-]: GETUPVAL  R4 U8        ; R4 := U8
124 [-]: GETUPVAL  R5 U9        ; R5 := U9
125 [-]: GETTABLE  R5 R5 K36    ; R5 := R5[0x5d10207d]
126 [-]: CONST     R6 9         ; R6 := 9.000000
127 [-]: LOADKB    R7 1 0       ; R7 := true
128 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
129 [-]: SETTABLE  R4 K40 R5    ; R4["FloatingContent"] := R5
130 [-]: GETUPVAL  R4 U8        ; R4 := U8
131 [-]: GETUPVAL  R5 U9        ; R5 := U9
132 [-]: GETTABLE  R5 R5 K36    ; R5 := R5[0x5d10207d]
133 [-]: CONST     R6 10        ; R6 := 10.000000
134 [-]: LOADKB    R7 1 0       ; R7 := true
135 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
136 [-]: SETTABLE  R4 K41 R5    ; R4[0x06d055f9] := R5
137 [-]: GETUPVAL  R4 U8        ; R4 := U8
138 [-]: GETUPVAL  R5 U9        ; R5 := U9
139 [-]: GETTABLE  R5 R5 K36    ; R5 := R5[0x5d10207d]
140 [-]: CONST     R6 6         ; R6 := 6.000000
141 [-]: CALL      R5 2 2       ; R5 := R5(R6)
142 [-]: SETTABLE  R4 K42 R5    ; R4["ContentColor"] := R5
143 [-]: GETUPVAL  R4 U8        ; R4 := U8
144 [-]: GETUPVAL  R5 U8        ; R5 := U8
145 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["ContentColor"]
146 [-]: SELF      R5 R5 K44    ; R6 := R5; R5 := R5[0xa5d5c8f6]
147 [-]: CALL      R5 2 2       ; R5 := R5(R6)
148 [-]: SETTABLE  R4 K43 R5    ; R4["Content"] := R5
149 [-]: GETUPVAL  R4 U8        ; R4 := U8
150 [-]: GETUPVAL  R5 U10       ; R5 := U10
151 [-]: GETTABLE  R5 R5 K46    ; R5 := R5[0x9f57dd7d]
152 [-]: GETUPVAL  R6 U8        ; R6 := U8
153 [-]: GETTABLE  R6 R6 K43    ; R6 := R6["Content"]
154 [-]: CALL      R5 2 2       ; R5 := R5(R6)
155 [-]: SETTABLE  R4 K45 R5    ; R4["ContentHex"] := R5
156 [-]: GETUPVAL  R4 U8        ; R4 := U8
157 [-]: GETUPVAL  R5 U10       ; R5 := U10
158 [-]: GETTABLE  R5 R5 K46    ; R5 := R5[0x9f57dd7d]
159 [-]: GETUPVAL  R6 U8        ; R6 := U8
160 [-]: GETTABLE  R6 R6 K40    ; R6 := R6["FloatingContent"]
161 [-]: CALL      R5 2 2       ; R5 := R5(R6)
162 [-]: SETTABLE  R4 K47 R5    ; R4["FloatingContentHex"] := R5
163 [-]: GETUPVAL  R4 U8        ; R4 := U8
164 [-]: GETUPVAL  R5 U10       ; R5 := U10
165 [-]: GETTABLE  R5 R5 K46    ; R5 := R5[0x9f57dd7d]
166 [-]: GETUPVAL  R6 U8        ; R6 := U8
167 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["FloatingContentHighlight"]
168 [-]: CALL      R5 2 2       ; R5 := R5(R6)
169 [-]: SETTABLE  R4 K48 R5    ; R4["FloatingContentHighlightHex"] := R5
170 [-]: GETUPVAL  R4 U8        ; R4 := U8
171 [-]: GETUPVAL  R5 U10       ; R5 := U10
172 [-]: GETTABLE  R5 R5 K50    ; R5 := R5[0x8bcd12b6]
173 [-]: GETUPVAL  R6 U8        ; R6 := U8
174 [-]: GETTABLE  R6 R6 K35    ; R6 := R6["Background1"]
175 [-]: CALL      R5 2 2       ; R5 := R5(R6)
176 [-]: SETTABLE  R4 K49 R5    ; R4["Background1Object"] := R5
177 [-]: GETUPVAL  R4 U8        ; R4 := U8
178 [-]: GETUPVAL  R5 U10       ; R5 := U10
179 [-]: GETTABLE  R5 R5 K50    ; R5 := R5[0x8bcd12b6]
180 [-]: GETUPVAL  R6 U8        ; R6 := U8
181 [-]: GETTABLE  R6 R6 K39    ; R6 := R6["BackerHighlight"]
182 [-]: CALL      R5 2 2       ; R5 := R5(R6)
183 [-]: SETTABLE  R4 K51 R5    ; R4["BackerHighlightObject"] := R5
184 [-]: GETUPVAL  R4 U8        ; R4 := U8
185 [-]: GETUPVAL  R5 U10       ; R5 := U10
186 [-]: GETTABLE  R5 R5 K50    ; R5 := R5[0x8bcd12b6]
187 [-]: GETUPVAL  R6 U8        ; R6 := U8
188 [-]: GETTABLE  R6 R6 K40    ; R6 := R6["FloatingContent"]
189 [-]: CALL      R5 2 2       ; R5 := R5(R6)
190 [-]: SETTABLE  R4 K52 R5    ; R4["FloatingContentObject"] := R5
191 [-]: GETUPVAL  R4 U8        ; R4 := U8
192 [-]: GETUPVAL  R5 U10       ; R5 := U10
193 [-]: GETTABLE  R5 R5 K50    ; R5 := R5[0x8bcd12b6]
194 [-]: GETUPVAL  R6 U8        ; R6 := U8
195 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["FloatingContentHighlight"]
196 [-]: CALL      R5 2 2       ; R5 := R5(R6)
197 [-]: SETTABLE  R4 K53 R5    ; R4["FloatingContentHighlightObject"] := R5
198 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
199 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x0c33ebb2]
200 [-]: LOADK     R6 K55       ; R6 := "InfoPanel.Bg"
201 [-]: LOADK     R7 K56       ; R7 := "noMenuSelection"
202 [-]: LOADKB    R8 1 0       ; R8 := true
203 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
204 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
205 [-]: SELF      R4 R4 K57    ; R5 := R4; R4 := R4[0x67bc869f]
206 [-]: LOADK     R6 K58       ; R6 := "InfoPanel.Title"
207 [-]: CONST     R7 36        ; R7 := 36.000000
208 [-]: GETUPVAL  R8 U8        ; R8 := U8
209 [-]: GETTABLE  R8 R8 K41    ; R8 := R8["FloatingContentHighlight"]
210 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
211 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
212 [-]: SELF      R4 R4 K57    ; R5 := R4; R4 := R4[0x67bc869f]
213 [-]: LOADK     R6 K59       ; R6 := "InfoPanel.TimeLeft"
214 [-]: CONST     R7 36        ; R7 := 36.000000
215 [-]: GETUPVAL  R8 U8        ; R8 := U8
216 [-]: GETTABLE  R8 R8 K41    ; R8 := R8["FloatingContentHighlight"]
217 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
218 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
219 [-]: SELF      R4 R4 K60    ; R5 := R4; R4 := R4[0xaade900e]
220 [-]: LOADK     R6 K61       ; R6 := "TopMenu.MaxMinCallout"
221 [-]: CONST     R7 11        ; R7 := 11.000000
222 [-]: GETGLOBAL R8 K62       ; R8 := 0x34291f5c
223 [-]: GETTABLE  R8 R8 K63    ; R8 := R8[0x1467d5f4]
224 [-]: CALL      R8 1 2       ; R8 := R8()
225 [-]: TEST      R8 1         ; if R8 then PC := 230
226 [-]: JMP       230          ; PC := 230
227 [-]: GETGLOBAL R8 K62       ; R8 := 0x34291f5c
228 [-]: GETTABLE  R8 R8 K64    ; R8 := R8[0x399826a5]
229 [-]: CALL      R8 1 2       ; R8 := R8()
230 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
231 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
232 [-]: SELF      R4 R4 K65    ; R5 := R4; R4 := R4[0x20b98db3]
233 [-]: LOADK     R6 K66       ; R6 := "TopMenu.MaxMinCallout.Tf.text"
234 [-]: LOADK     R7 K67       ; R7 := "<MENU_RTRIGGER2>"
235 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
236 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
237 [-]: SELF      R4 R4 K68    ; R5 := R4; R4 := R4[0xd5181643]
238 [-]: LOADK     R6 K69       ; R6 := "TopMenu.MaxMinCallout.Tf"
239 [-]: GETGLOBAL R7 K70       ; R7 := 0x0032441c
240 [-]: GETTABLE  R7 R7 K71    ; R7 := R7["UIMaterial_PlainText"]
241 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
242 [-]: GETUPVAL  R4 U11       ; R4 := U11
243 [-]: CALL      R4 1 2       ; R4 := R4()
244 [-]: SELF      R5 R4 K72    ; R6 := R4; R5 := R4[0xef893aec]
245 [-]: CALL      R5 2 2       ; R5 := R5(R6)
246 [-]: GETTABLE  R6 R5 K73    ; R6 := R5["periodicMissionTag"]
247 [-]: GETTABLE  R7 R5 K74    ; R7 := R5["periodicMissionCooldown"]
248 [-]: GETUPVAL  R8 U13       ; R8 := U13
249 [-]: GETTABLE  R8 R8 K75    ; R8 := R8[0x52fb05b3]
250 [-]: GETGLOBAL R9 K76       ; R9 := 0x9d4c9031
251 [-]: CALL      R8 2 2       ; R8 := R8(R9)
252 [-]: TEST      R8 0         ; if not R8 then PC := 261
253 [-]: JMP       261          ; PC := 261
254 [-]: GETUPVAL  R8 U3        ; R8 := U3
255 [-]: SELF      R8 R8 K77    ; R9 := R8; R8 := R8[0xc3150d06]
256 [-]: MOVE      R10 R6       ; R10 := R6
257 [-]: MOVE      R11 R7       ; R11 := R7
258 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
259 [-]: TEST      R8 1         ; if R8 then PC := 262
260 [-]: JMP       262          ; PC := 262
261 [-]: LOADKB    R8 0 0       ; R8 := false
262 [-]: SETUPVAL  R8 U12       ; U82 := R12
263 [-]: GETUPVAL  R8 U15       ; R8 := U15
264 [-]: CALL      R8 1 2       ; R8 := R8()
265 [-]: SETUPVAL  R8 U14       ; U82 := R14
266 [-]: GETUPVAL  R8 U17       ; R8 := U17
267 [-]: CALL      R8 1 2       ; R8 := R8()
268 [-]: SETUPVAL  R8 U16       ; U82 := R16
269 [-]: GETUPVAL  R8 U13       ; R8 := U13
270 [-]: GETTABLE  R8 R8 K78    ; R8 := R8[0xc00479a5]
271 [-]: CALL      R8 1 2       ; R8 := R8()
272 [-]: SETUPVAL  R8 U18       ; U82 := R18
273 [-]: GETUPVAL  R8 U13       ; R8 := U13
274 [-]: GETTABLE  R8 R8 K79    ; R8 := R8[0x5e35d4d6]
275 [-]: CALL      R8 1 2       ; R8 := R8()
276 [-]: GETUPVAL  R9 U12       ; R9 := U12
277 [-]: TEST      R9 0         ; if not R9 then PC := 299
278 [-]: JMP       299          ; PC := 299
279 [-]: SELF      R9 R8 K80    ; R10 := R8; R9 := R8[0x3ad9ed31]
280 [-]: GETGLOBAL R11 K81      ; R11 := 0x0469f296
281 [-]: LOADK     R12 K82      ; R12 := "TradeHUB1"
282 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
283 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
284 [-]: GETUPVAL  R10 U13      ; R10 := U13
285 [-]: GETTABLE  R10 R10 K83  ; R10 := R10[0xdc1248b0]
286 [-]: MOVE      R11 R9       ; R11 := R9
287 [-]: GETTABLE  R12 R9 K84   ; R12 := R9["mission"]
288 [-]: GETUPVAL  R13 U19      ; R13 := U19
289 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
290 [-]: GETTABLE  R11 R10 K85  ; R11 := R10["mMission"]
291 [-]: SELF      R11 R11 K86  ; R12 := R11; R11 := R11[0x8f89d633]
292 [-]: CALL      R11 2 2      ; R11 := R11(R12)
293 [-]: SETUPVAL  R11 U20      ; U82 := R20
294 [-]: GETUPVAL  R11 U20      ; R11 := U20
295 [-]: GETGLOBAL R12 K81      ; R12 := 0x0469f296
296 [-]: LOADK     R13 K82      ; R13 := "TradeHUB1"
297 [-]: CALL      R12 2 2      ; R12 := R12(R13)
298 [-]: SETTABLE  R11 K87 R12  ; R11["location"] := R12
299 [-]: GETUPVAL  R11 U14      ; R11 := U14
300 [-]: TEST      R11 0        ; if not R11 then PC := 318
301 [-]: JMP       318          ; PC := 318
302 [-]: SELF      R11 R8 K88   ; R12 := R8; R11 := R8[0x365d0eb2]
303 [-]: GETUPVAL  R13 U21      ; R13 := U21
304 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
305 [-]: SELF      R12 R8 K80   ; R13 := R8; R12 := R8[0x3ad9ed31]
306 [-]: MOVE      R14 R11      ; R14 := R11
307 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
308 [-]: GETUPVAL  R13 U13      ; R13 := U13
309 [-]: GETTABLE  R13 R13 K83  ; R13 := R13[0xdc1248b0]
310 [-]: MOVE      R14 R12      ; R14 := R12
311 [-]: GETTABLE  R15 R12 K84  ; R15 := R12["mission"]
312 [-]: GETUPVAL  R16 U19      ; R16 := U19
313 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
314 [-]: GETTABLE  R14 R13 K85  ; R14 := R13["mMission"]
315 [-]: SELF      R14 R14 K86  ; R15 := R14; R14 := R14[0x8f89d633]
316 [-]: CALL      R14 2 2      ; R14 := R14(R15)
317 [-]: SETUPVAL  R14 U22      ; U82 := R22
318 [-]: GETUPVAL  R14 U18      ; R14 := U18
319 [-]: TEST      R14 0        ; if not R14 then PC := 364
320 [-]: JMP       364          ; PC := 364
321 [-]: GETGLOBAL R14 K0       ; R14 := _T
322 [-]: GETTABLE  R14 R14 K89  ; R14 := R14["CachedVoidTraders"]
323 [-]: TEST      R14 0        ; if not R14 then PC := 364
324 [-]: JMP       364          ; PC := 364
325 [-]: GETGLOBAL R14 K90      ; R14 := 0xcfc01047
326 [-]: GETGLOBAL R15 K0       ; R15 := _T
327 [-]: GETTABLE  R15 R15 K89  ; R15 := R15["CachedVoidTraders"]
328 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
329 [-]: JMP       362          ; PC := 362
330 [-]: GETGLOBAL R19 K62      ; R19 := 0x34291f5c
331 [-]: GETTABLE  R19 R19 K91  ; R19 := R19[0x397b920f]
332 [-]: GETTABLE  R20 R18 K92  ; R20 := R18["mActivation"]
333 [-]: CALL      R19 2 2      ; R19 := R19(R20)
334 [-]: LT        0 R19 K93    ; if R19 >= 0.000000 then PC := 362
335 [-]: JMP       362          ; PC := 362
336 [-]: GETGLOBAL R19 K62      ; R19 := 0x34291f5c
337 [-]: GETTABLE  R19 R19 K91  ; R19 := R19[0x397b920f]
338 [-]: GETTABLE  R20 R18 K94  ; R20 := R18["mExpiry"]
339 [-]: CALL      R19 2 2      ; R19 := R19(R20)
340 [-]: LT        0 K93 R19    ; if 0.000000 >= R19 then PC := 362
341 [-]: JMP       362          ; PC := 362
342 [-]: GETGLOBAL R19 K37      ; R19 := 0x6c97a788
343 [-]: GETTABLE  R19 R19 K95  ; R19 := R19[0x56888730]
344 [-]: CALL      R19 1 2      ; R19 := R19()
345 [-]: SETUPVAL  R19 U23      ; U82 := R23
346 [-]: GETUPVAL  R19 U23      ; R19 := U23
347 [-]: GETTABLE  R20 R18 K94  ; R20 := R18["mExpiry"]
348 [-]: SELF      R20 R20 K86  ; R21 := R20; R20 := R20[0x8f89d633]
349 [-]: CALL      R20 2 2      ; R20 := R20(R21)
350 [-]: SETTABLE  R19 K94 R20  ; R19["mExpiry"] := R20
351 [-]: GETUPVAL  R19 U23      ; R19 := U23
352 [-]: SELF      R20 R8 K97   ; R21 := R8; R20 := R8[0xc18bf6f0]
353 [-]: GETTABLE  R22 R18 K98  ; R22 := R18["mNode"]
354 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
355 [-]: SELF      R20 R20 K86  ; R21 := R20; R20 := R20[0x8f89d633]
356 [-]: CALL      R20 2 2      ; R20 := R20(R21)
357 [-]: SETTABLE  R19 K96 R20  ; R19["mMissionInfo"] := R20
358 [-]: GETUPVAL  R19 U23      ; R19 := U23
359 [-]: GETUPVAL  R20 U24      ; R20 := U24
360 [-]: SETTABLE  R19 K99 R20  ; R19["mTag"] := R20
361 [-]: JMP       364          ; PC := 364
362 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 330; R16 := R17 end
363 [-]: JMP       330          ; PC := 330
364 [-]: GETUPVAL  R19 U25      ; R19 := U25
365 [-]: CALL      R19 1 1      ; R19()
366 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
367 [-]: SELF      R19 R19 K100 ; R20 := R19; R19 := R19[0x91a24e4b]
368 [-]: LOADK     R21 K101     ; R21 := "TopMenu"
369 [-]: CONST     R22 0        ; R22 := 0.000000
370 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
371 [-]: SETUPVAL  R19 U26      ; U82 := R26
372 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
373 [-]: SELF      R19 R19 K100 ; R20 := R19; R19 := R19[0x91a24e4b]
374 [-]: LOADK     R21 K102     ; R21 := "InfoPanel"
375 [-]: CONST     R22 0        ; R22 := 0.000000
376 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
377 [-]: SETUPVAL  R19 U27      ; U82 := R27
378 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
379 [-]: SELF      R19 R19 K100 ; R20 := R19; R19 := R19[0x91a24e4b]
380 [-]: LOADK     R21 K102     ; R21 := "InfoPanel"
381 [-]: CONST     R22 1        ; R22 := 1.000000
382 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
383 [-]: SETUPVAL  R19 U28      ; U82 := R28
384 [-]: GETUPVAL  R19 U29      ; R19 := U29
385 [-]: CALL      R19 1 1      ; R19()
386 [-]: GETGLOBAL R19 K7       ; R19 := 0xae91e43b
387 [-]: SELF      R19 R19 K100 ; R20 := R19; R19 := R19[0x91a24e4b]
388 [-]: LOADK     R21 K55      ; R21 := "InfoPanel.Bg"
389 [-]: CONST     R22 13       ; R22 := 13.000000
390 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
391 [-]: SUB       R19 R19 K103 ; R19 := R19 - 70.000000
392 [-]: GETGLOBAL R20 K13      ; R20 := 0x2d0fad09
393 [-]: LOADK     R21 K104     ; R21 := "EE.Interface.Components.ScrollBar"
394 [-]: CALL      R20 2 2      ; R20 := R20(R21)
395 [-]: GETTABLE  R21 R20 K105 ; R21 := R20[0x3b3ea08c]
396 [-]: GETGLOBAL R22 K7       ; R22 := 0xae91e43b
397 [-]: LOADK     R23 K106     ; R23 := "InfoPanel.ScrollBar"
398 [-]: MOVE      R24 R19      ; R24 := R19
399 [-]: CONST     R25 0        ; R25 := 0.500000
400 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
401 [-]: SETUPVAL  R21 U30      ; U82 := R30
402 [-]: GETUPVAL  R21 U30      ; R21 := U30
403 [-]: SETTABLE  R21 K107 K31 ; R21["mEnableSmoothScroll"] := true
404 [-]: GETUPVAL  R21 U30      ; R21 := U30
405 [-]: GETUPVAL  R22 U30      ; R22 := U30
406 [-]: GETTABLE  R22 R22 K109 ; R22 := R22["mHeight"]
407 [-]: SETTABLE  R21 K108 R22 ; R21["mInitHeight"] := R22
408 [-]: GETUPVAL  R21 U30      ; R21 := U30
409 [-]: GETGLOBAL R22 K7       ; R22 := 0xae91e43b
410 [-]: SELF      R22 R22 K100 ; R23 := R22; R22 := R22[0x91a24e4b]
411 [-]: LOADK     R24 K106     ; R24 := "InfoPanel.ScrollBar"
412 [-]: CONST     R25 1        ; R25 := 1.000000
413 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
414 [-]: SETTABLE  R21 K110 R22 ; R21["mInitYPos"] := R22
415 [-]: GETUPVAL  R21 U30      ; R21 := U30
416 [-]: SELF      R21 R21 K111 ; R22 := R21; R21 := R21[0xe91c55ec]
417 [-]: CALL      R21 2 1      ; R21(R22)
418 [-]: GETUPVAL  R21 U30      ; R21 := U30
419 [-]: SELF      R21 R21 K112 ; R22 := R21; R21 := R21[0x0ae95538]
420 [-]: GETGLOBAL R23 K9       ; R23 := 0x3f56a9a5
421 [-]: CALL      R21 3 1      ; R21(R22,R23)
422 [-]: GETGLOBAL R21 K7       ; R21 := 0xae91e43b
423 [-]: SELF      R21 R21 K54  ; R22 := R21; R21 := R21[0x0c33ebb2]
424 [-]: LOADK     R23 K113     ; R23 := "InfoPanel.ScrollBar.Scrub"
425 [-]: LOADK     R24 K114     ; R24 := "startScrubCallback"
426 [-]: LOADK     R25 K115     ; R25 := "InfoMenuScrollBarScrubStartDrag"
427 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
428 [-]: GETGLOBAL R21 K7       ; R21 := 0xae91e43b
429 [-]: SELF      R21 R21 K54  ; R22 := R21; R21 := R21[0x0c33ebb2]
430 [-]: LOADK     R23 K113     ; R23 := "InfoPanel.ScrollBar.Scrub"
431 [-]: LOADK     R24 K116     ; R24 := "stopScrubCallback"
432 [-]: LOADK     R25 K117     ; R25 := "InfoMenuScrollBarScrubStopDrag"
433 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
434 [-]: GETGLOBAL R21 K7       ; R21 := 0xae91e43b
435 [-]: SELF      R21 R21 K54  ; R22 := R21; R21 := R21[0x0c33ebb2]
436 [-]: LOADK     R23 K106     ; R23 := "InfoPanel.ScrollBar"
437 [-]: LOADK     R24 K118     ; R24 := "clickScrollBarCallback"
438 [-]: LOADK     R25 K119     ; R25 := "InfoMenuScrollBarClick"
439 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
440 [-]: GETUPVAL  R21 U30      ; R21 := U30
441 [-]: SELF      R21 R21 K120 ; R22 := R21; R21 := R21[0x687ae094]
442 [-]: CALL      R21 2 1      ; R21(R22)
443 [-]: NEWTABLE  R21 6 0      ; R21 := {}
444 [-]: LOADK     R22 K121     ; R22 := "AlertElement"
445 [-]: LOADK     R23 K122     ; R23 := "InvasionElement"
446 [-]: LOADK     R24 K123     ; R24 := "EventElement"
447 [-]: LOADK     R25 K124     ; R25 := "SyndicateElement"
448 [-]: LOADK     R26 K125     ; R26 := "QuestElement"
449 [-]: LOADK     R27 K126     ; R27 := "SortieElement"
450 [-]: SETLIST   R21 6 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 6
451 [-]: GETGLOBAL R22 K127     ; R22 := 0xc8802016
452 [-]: MOVE      R23 R21      ; R23 := R21
453 [-]: CALL      R22 2 4      ; R22,R23,R24 := R22(R23)
454 [-]: JMP       469          ; PC := 469
455 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
456 [-]: SELF      R27 R27 K128 ; R28 := R27; R27 := R27[0xc0a3774b]
457 [-]: LOADK     R29 K129     ; R29 := "InfoPanel.InfoMenu"
458 [-]: MOVE      R30 R26      ; R30 := R26
459 [-]: CONST     R31 11       ; R31 := 11.000000
460 [-]: LOADKB    R32 0 0      ; R32 := false
461 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
462 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
463 [-]: SELF      R27 R27 K128 ; R28 := R27; R27 := R27[0xc0a3774b]
464 [-]: LOADK     R29 K129     ; R29 := "InfoPanel.InfoMenu"
465 [-]: MOVE      R30 R26      ; R30 := R26
466 [-]: CONST     R31 59       ; R31 := 59.000000
467 [-]: LOADKB    R32 0 0      ; R32 := false
468 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
469 [-]: TFORLOOP  R22 2        ; R25,R26 :=  R22(R23,R24); if R25 ~= nil then begin PC = 455; R24 := R25 end
470 [-]: JMP       455          ; PC := 455
471 [-]: GETUPVAL  R27 U31      ; R27 := U31
472 [-]: CALL      R27 1 1      ; R27()
473 [-]: GETUPVAL  R27 U32      ; R27 := U32
474 [-]: CALL      R27 1 1      ; R27()
475 [-]: GETUPVAL  R27 U33      ; R27 := U33
476 [-]: CALL      R27 1 1      ; R27()
477 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
478 [-]: SELF      R27 R27 K130 ; R28 := R27; R27 := R27[0x1e5b5cfe]
479 [-]: LOADK     R29 K55      ; R29 := "InfoPanel.Bg"
480 [-]: LOADK     R30 K131     ; R30 := "OnMouseCatcherFocused"
481 [-]: LOADNIL   R31 R33      ; R31 := R32 := R33 := nil
482 [-]: CALL      R27 7 1      ; R27(R28,R29,R30,R31,R32,R33)
483 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
484 [-]: SELF      R27 R27 K68  ; R28 := R27; R27 := R27[0xd5181643]
485 [-]: LOADK     R29 K55      ; R29 := "InfoPanel.Bg"
486 [-]: GETGLOBAL R30 K132     ; R30 := 0xe3d94630
487 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
488 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
489 [-]: SELF      R27 R27 K133 ; R28 := R27; R27 := R27[0x91e13703]
490 [-]: LOADK     R29 K55      ; R29 := "InfoPanel.Bg"
491 [-]: LOADK     R30 K134     ; R30 := "RectEdgeColor"
492 [-]: GETUPVAL  R31 U8       ; R31 := U8
493 [-]: GETTABLE  R31 R31 K52  ; R31 := R31["FloatingContentObject"]
494 [-]: GETTABLE  R31 R31 K135 ; R31 := R31["r"]
495 [-]: GETUPVAL  R32 U8       ; R32 := U8
496 [-]: GETTABLE  R32 R32 K52  ; R32 := R32["FloatingContentObject"]
497 [-]: GETTABLE  R32 R32 K136 ; R32 := R32["g"]
498 [-]: GETUPVAL  R33 U8       ; R33 := U8
499 [-]: GETTABLE  R33 R33 K52  ; R33 := R33["FloatingContentObject"]
500 [-]: GETTABLE  R33 R33 K137 ; R33 := R33["b"]
501 [-]: LOADK     R34 K138     ; R34 := 0.400000
502 [-]: CALL      R27 8 1      ; R27(R28,R29,R30,R31,R32,R33,R34)
503 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
504 [-]: SELF      R27 R27 K133 ; R28 := R27; R27 := R27[0x91e13703]
505 [-]: LOADK     R29 K55      ; R29 := "InfoPanel.Bg"
506 [-]: LOADK     R30 K139     ; R30 := "RectInnerColor"
507 [-]: GETUPVAL  R31 U8       ; R31 := U8
508 [-]: GETTABLE  R31 R31 K49  ; R31 := R31["Background1Object"]
509 [-]: GETTABLE  R31 R31 K135 ; R31 := R31["r"]
510 [-]: GETUPVAL  R32 U8       ; R32 := U8
511 [-]: GETTABLE  R32 R32 K49  ; R32 := R32["Background1Object"]
512 [-]: GETTABLE  R32 R32 K136 ; R32 := R32["g"]
513 [-]: GETUPVAL  R33 U8       ; R33 := U8
514 [-]: GETTABLE  R33 R33 K49  ; R33 := R33["Background1Object"]
515 [-]: GETTABLE  R33 R33 K137 ; R33 := R33["b"]
516 [-]: LOADK     R34 K140     ; R34 := 0.900000
517 [-]: CALL      R27 8 1      ; R27(R28,R29,R30,R31,R32,R33,R34)
518 [-]: GETUPVAL  R27 U34      ; R27 := U34
519 [-]: GETTABLE  R27 R27 K141 ; R27 := R27[0x00fa676f]
520 [-]: GETGLOBAL R28 K7       ; R28 := 0xae91e43b
521 [-]: LOADK     R29 K142     ; R29 := "InfoPanel.Separator"
522 [-]: CONST     R30 600      ; R30 := 600.000000
523 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
524 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
525 [-]: SELF      R27 R27 K57  ; R28 := R27; R27 := R27[0x67bc869f]
526 [-]: LOADK     R29 K142     ; R29 := "InfoPanel.Separator"
527 [-]: CONST     R30 9        ; R30 := 9.000000
528 [-]: GETUPVAL  R31 U8       ; R31 := U8
529 [-]: GETTABLE  R31 R31 K40  ; R31 := R31["FloatingContent"]
530 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
531 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
532 [-]: SELF      R27 R27 K68  ; R28 := R27; R27 := R27[0xd5181643]
533 [-]: LOADK     R29 K143     ; R29 := "InfoPanel.Separator.Fill"
534 [-]: GETGLOBAL R30 K9       ; R30 := 0x3f56a9a5
535 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
536 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
537 [-]: SELF      R27 R27 K68  ; R28 := R27; R27 := R27[0xd5181643]
538 [-]: LOADK     R29 K144     ; R29 := "InfoPanel.Separator.CapLeft"
539 [-]: GETGLOBAL R30 K9       ; R30 := 0x3f56a9a5
540 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
541 [-]: GETGLOBAL R27 K7       ; R27 := 0xae91e43b
542 [-]: SELF      R27 R27 K68  ; R28 := R27; R27 := R27[0xd5181643]
543 [-]: LOADK     R29 K145     ; R29 := "InfoPanel.Separator.CapRight"
544 [-]: GETGLOBAL R30 K9       ; R30 := 0x3f56a9a5
545 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
546 [-]: GETUPVAL  R27 U35      ; R27 := U35
547 [-]: LOADKB    R28 0 0      ; R28 := false
548 [-]: LOADKB    R29 1 0      ; R29 := true
549 [-]: CALL      R27 3 1      ; R27(R28,R29)
550 [-]: GETGLOBAL R27 K6       ; R27 := 0x7b998233
551 [-]: GETGLOBAL R28 K0       ; R28 := _T
552 [-]: GETTABLE  R28 R28 K146 ; R28 := R28["mTrigger"]
553 [-]: CALL      R27 2 2      ; R27 := R27(R28)
554 [-]: TEST      R27 1        ; if R27 then PC := 564
555 [-]: JMP       564          ; PC := 564
556 [-]: GETGLOBAL R27 K0       ; R27 := _T
557 [-]: GETTABLE  R27 R27 K146 ; R27 := R27["mTrigger"]
558 [-]: SELF      R27 R27 K147 ; R28 := R27; R27 := R27[0x08db51de]
559 [-]: GETGLOBAL R29 K81      ; R29 := 0x0469f296
560 [-]: LOADK     R30 K148     ; R30 := "LiteSorties"
561 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
562 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
563 [-]: JMP       566          ; PC := 566
564 [-]: LOADKB    R27 0 1      ; R27 := false; PC := 565
565 [-]: LOADKB    R27 1 0      ; R27 := true
566 [-]: TEST      R27 0        ; if not R27 then PC := 572
567 [-]: JMP       572          ; PC := 572
568 [-]: GETUPVAL  R28 U36      ; R28 := U36
569 [-]: GETUPVAL  R29 U37      ; R29 := U37
570 [-]: GETTABLE  R29 R29 K149 ; R29 := R29["LITE_SORTIES"]
571 [-]: CALL      R28 2 1      ; R28(R29)
572 [-]: LOADKB    R28 1 0      ; R28 := true
573 [-]: SETUPVAL  R28 U38      ; U82 := R38
574 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 5794
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0xcfd9cd76]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 41
  5 [-]: JMP       41           ; PC := 41
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x842bdef9]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 41
 10 [-]: JMP       41           ; PC := 41
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xa4497305]
 13 [-]: CALL      R0 2 1       ; R0(R1)
 14 [-]: LOADKB    R0 1 0       ; R0 := true
 15 [-]: SETUPVAL  R0 U1        ; U82 := R1
 16 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
 17 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x27abb3c0]
 18 [-]: CONST     R2 1         ; R2 := 1.000000
 19 [-]: CALL      R0 3 1       ; R0(R1,R2)
 20 [-]: GETGLOBAL R0 K5        ; R0 := _T
 21 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["BackgroundMovie"]
 22 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xe4162eed]
 23 [-]: LOADK     R2 K8        ; R2 := "ShowBlockingMessage"
 24 [-]: LOADK     R3 K9        ; R3 := "0"
 25 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 26 [-]: LOADKB    R0 0 0       ; R0 := false
 27 [-]: SETUPVAL  R0 U2        ; U82 := R2
 28 [-]: GETGLOBAL R0 K10       ; R0 := 0x9ba7909f
 29 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0xbcfb64ab]
 30 [-]: GETGLOBAL R2 K12       ; R2 := 0x6476f22d
 31 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 32 [-]: GETGLOBAL R1 K13       ; R1 := 0x7b998233
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 35 [-]: TEST      R1 1         ; if R1 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0xe4162eed]
 38 [-]: LOADK     R3 K14       ; R3 := "WSWDioramaChanged"
 39 [-]: LOADK     R4 K15       ; R4 := "true"
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 5812
; #Upvalues:       22
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["HideSquadOverlay"]
  9 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R0 K1        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["HideSquadOverlay"]
 13 [-]: LE        1 R0 K4      ; if R0 <= 0.000000 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 16
 16 [-]: LOADKB    R0 1 0       ; R0 := true
 17 [-]: GETGLOBAL R1 K1        ; R1 := _T
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["TopMenuOpen"]
 19 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R1 K1        ; R1 := _T
 22 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["TopMenuOpen"]
 23 [-]: TEST      R1 1         ; if R1 then PC := 53
 24 [-]: JMP       53           ; PC := 53
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: TEST      R1 1         ; if R1 then PC := 53
 27 [-]: JMP       53           ; PC := 53
 28 [-]: GETUPVAL  R1 U2        ; R1 := U2
 29 [-]: TEST      R1 1         ; if R1 then PC := 53
 30 [-]: JMP       53           ; PC := 53
 31 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 32 [-]: GETUPVAL  R2 U3        ; R2 := U3
 33 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 34 [-]: TEST      R1 0         ; if not R1 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETUPVAL  R1 U4        ; R1 := U4
 37 [-]: TEST      R1 1         ; if R1 then PC := 53
 38 [-]: JMP       53           ; PC := 53
 39 [-]: GETGLOBAL R1 K1        ; R1 := _T
 40 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["BackgroundVisible"]
 41 [-]: TEST      R1 1         ; if R1 then PC := 53
 42 [-]: JMP       53           ; PC := 53
 43 [-]: GETGLOBAL R1 K1        ; R1 := _T
 44 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["HideMapRedux"]
 45 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: GETGLOBAL R1 K1        ; R1 := _T
 48 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["HideMapRedux"]
 49 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: MOVE      R1 R0        ; R1 := R0
 52 [-]: JMP       55           ; PC := 55
 53 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 54
 54 [-]: LOADKB    R1 1 0       ; R1 := true
 55 [-]: GETUPVAL  R2 U5        ; R2 := U5
 56 [-]: EQ        0 R2 R1      ; if R2 ~= R1 then PC := 64
 57 [-]: JMP       64           ; PC := 64
 58 [-]: GETUPVAL  R2 U5        ; R2 := U5
 59 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 60 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0xd4cc05b4]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 95
 63 [-]: JMP       95           ; PC := 95
 64 [-]: SETUPVAL  R1 U5        ; U82 := R5
 65 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 66 [-]: GETUPVAL  R3 U6        ; R3 := U6
 67 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 68 [-]: TEST      R2 1         ; if R2 then PC := 82
 69 [-]: JMP       82           ; PC := 82
 70 [-]: GETUPVAL  R2 U6        ; R2 := U6
 71 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xe4162eed]
 72 [-]: LOADK     R4 K11       ; R4 := "WSWWidthChanged"
 73 [-]: GETUPVAL  R5 U7        ; R5 := U7
 74 [-]: GETTABLE  R5 R5 K12    ; R5 := R5[0x06d055f9]
 75 [-]: GETUPVAL  R6 U5        ; R6 := U5
 76 [-]: GETGLOBAL R7 K13       ; R7 := 0x64fb1586
 77 [-]: GETUPVAL  R8 U8        ; R8 := U8
 78 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 79 [-]: CONST     R8 0         ; R8 := 0.000000
 80 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 81 [-]: CALL      R2 0 1       ; R2(R3,...)
 82 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 83 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xbed40e9c]
 84 [-]: GETUPVAL  R4 U5        ; R4 := U5
 85 [-]: NOT       R4 R4        ; R4 :=  R4
 86 [-]: CALL      R2 3 1       ; R2(R3,R4)
 87 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 88 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xbc838db9]
 89 [-]: GETUPVAL  R4 U5        ; R4 := U5
 90 [-]: CALL      R2 3 1       ; R2(R3,R4)
 91 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 92 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x368ad758]
 93 [-]: GETUPVAL  R4 U5        ; R4 := U5
 94 [-]: CALL      R2 3 1       ; R2(R3,R4)
 95 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 96 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0x8a8c8d5a]
 97 [-]: GETGLOBAL R4 K18       ; R4 := 0x67652851
 98 [-]: CALL      R4 1 0       ; R4,... := R4()
 99 [-]: CALL      R2 0 1       ; R2(R3,...)
100 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
101 [-]: GETUPVAL  R3 U9        ; R3 := U9
102 [-]: CALL      R2 2 2       ; R2 := R2(R3)
103 [-]: TEST      R2 1         ; if R2 then PC := 110
104 [-]: JMP       110          ; PC := 110
105 [-]: GETUPVAL  R2 U9        ; R2 := U9
106 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xfaa69527]
107 [-]: GETGLOBAL R4 K18       ; R4 := 0x67652851
108 [-]: CALL      R4 1 0       ; R4,... := R4()
109 [-]: CALL      R2 0 1       ; R2(R3,...)
110 [-]: GETGLOBAL R2 K20       ; R2 := 0xc8802016
111 [-]: GETUPVAL  R3 U10       ; R3 := U10
112 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
113 [-]: JMP       116          ; PC := 116
114 [-]: MOVE      R7 R6        ; R7 := R6
115 [-]: CALL      R7 1 1       ; R7()
116 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 114; R4 := R5 end
117 [-]: JMP       114          ; PC := 114
118 [-]: GETUPVAL  R7 U11       ; R7 := U11
119 [-]: CALL      R7 1 1       ; R7()
120 [-]: GETUPVAL  R7 U12       ; R7 := U12
121 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 246
122 [-]: JMP       246          ; PC := 246
123 [-]: GETUPVAL  R7 U13       ; R7 := U13
124 [-]: TEST      R7 1         ; if R7 then PC := 246
125 [-]: JMP       246          ; PC := 246
126 [-]: GETUPVAL  R7 U14       ; R7 := U14
127 [-]: GETUPVAL  R8 U15       ; R8 := U15
128 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["EVENTS"]
129 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 161
130 [-]: JMP       161          ; PC := 161
131 [-]: GETUPVAL  R7 U14       ; R7 := U14
132 [-]: GETUPVAL  R8 U15       ; R8 := U15
133 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["ALERTS"]
134 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 161
135 [-]: JMP       161          ; PC := 161
136 [-]: GETUPVAL  R7 U14       ; R7 := U14
137 [-]: GETUPVAL  R8 U15       ; R8 := U15
138 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["SYND_MISSIONS"]
139 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 161
140 [-]: JMP       161          ; PC := 161
141 [-]: GETUPVAL  R7 U14       ; R7 := U14
142 [-]: GETUPVAL  R8 U15       ; R8 := U15
143 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["PVPCHALLENGES"]
144 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 161
145 [-]: JMP       161          ; PC := 161
146 [-]: GETUPVAL  R7 U14       ; R7 := U14
147 [-]: GETUPVAL  R8 U15       ; R8 := U15
148 [-]: GETTABLE  R8 R8 K25    ; R8 := R8["PVPCHALLENGES_WEEKLY"]
149 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 161
150 [-]: JMP       161          ; PC := 161
151 [-]: GETUPVAL  R7 U14       ; R7 := U14
152 [-]: GETUPVAL  R8 U15       ; R8 := U15
153 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["SORTIES"]
154 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 161
155 [-]: JMP       161          ; PC := 161
156 [-]: GETUPVAL  R7 U14       ; R7 := U14
157 [-]: GETUPVAL  R8 U15       ; R8 := U15
158 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["VOID_TEARS"]
159 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 246
160 [-]: JMP       246          ; PC := 246
161 [-]: GETUPVAL  R7 U14       ; R7 := U14
162 [-]: GETUPVAL  R8 U15       ; R8 := U15
163 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["EVENTS"]
164 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 167
165 [-]: JMP       167          ; PC := 167
166 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 167
167 [-]: LOADKB    R7 1 0       ; R7 := true
168 [-]: GETUPVAL  R8 U14       ; R8 := U14
169 [-]: GETUPVAL  R9 U15       ; R9 := U15
170 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["ALERTS"]
171 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 179
172 [-]: JMP       179          ; PC := 179
173 [-]: GETUPVAL  R8 U14       ; R8 := U14
174 [-]: GETUPVAL  R9 U15       ; R9 := U15
175 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["VOID_TEARS"]
176 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 179
177 [-]: JMP       179          ; PC := 179
178 [-]: LOADKB    R8 0 1       ; R8 := false; PC := 179
179 [-]: LOADKB    R8 1 0       ; R8 := true
180 [-]: GETUPVAL  R9 U14       ; R9 := U14
181 [-]: GETUPVAL  R10 U15      ; R10 := U15
182 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["SORTIES"]
183 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 194
184 [-]: JMP       194          ; PC := 194
185 [-]: GETUPVAL  R9 U12       ; R9 := U12
186 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0x5465f8f3]
187 [-]: CONST     R11 1        ; R11 := 1.000000
188 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
189 [-]: GETUPVAL  R10 U16      ; R10 := U16
190 [-]: LOADK     R11 K29      ; R11 := "InfoPanel.TimeLeft"
191 [-]: MOVE      R12 R9       ; R12 := R9
192 [-]: CALL      R10 3 1      ; R10(R11,R12)
193 [-]: JMP       245          ; PC := 245
194 [-]: GETUPVAL  R10 U14      ; R10 := U14
195 [-]: GETUPVAL  R11 U15      ; R11 := U15
196 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["SYND_MISSIONS"]
197 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 235
198 [-]: JMP       235          ; PC := 235
199 [-]: LOADNIL   R10 R10      ; R10 := nil
200 [-]: CONST     R11 1        ; R11 := 1.000000
201 [-]: EQ        0 R10 K3     ; if R10 ~= nil then PC := 221
202 [-]: JMP       221          ; PC := 221
203 [-]: GETUPVAL  R12 U12      ; R12 := U12
204 [-]: SELF      R12 R12 K30  ; R13 := R12; R12 := R12[0x5fbddc1a]
205 [-]: CALL      R12 2 2      ; R12 := R12(R13)
206 [-]: LE        0 R11 R12    ; if R11 > R12 then PC := 221
207 [-]: JMP       221          ; PC := 221
208 [-]: GETUPVAL  R12 U12      ; R12 := U12
209 [-]: SELF      R12 R12 K28  ; R13 := R12; R12 := R12[0x5465f8f3]
210 [-]: MOVE      R14 R11      ; R14 := R11
211 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
212 [-]: MOVE      R10 R12      ; R10 := R12
213 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
214 [-]: GETTABLE  R13 R10 K31  ; R13 := R10["mExpiry"]
215 [-]: CALL      R12 2 2      ; R12 := R12(R13)
216 [-]: TEST      R12 0        ; if not R12 then PC := 219
217 [-]: JMP       219          ; PC := 219
218 [-]: LOADNIL   R10 R10      ; R10 := nil
219 [-]: ADD       R11 R11 K32  ; R11 := R11 + 1.000000
220 [-]: JMP       201          ; PC := 201
221 [-]: EQ        1 R10 K3     ; if R10 == nil then PC := 228
222 [-]: JMP       228          ; PC := 228
223 [-]: GETUPVAL  R12 U16      ; R12 := U16
224 [-]: LOADK     R13 K29      ; R13 := "InfoPanel.TimeLeft"
225 [-]: MOVE      R14 R10      ; R14 := R10
226 [-]: CALL      R12 3 1      ; R12(R13,R14)
227 [-]: JMP       245          ; PC := 245
228 [-]: GETGLOBAL R12 K8       ; R12 := 0xae91e43b
229 [-]: SELF      R12 R12 K33  ; R13 := R12; R12 := R12[0x5f56eeab]
230 [-]: LOADK     R14 K29      ; R14 := "InfoPanel.TimeLeft"
231 [-]: CONST     R15 29       ; R15 := 29.000000
232 [-]: LOADK     R16 K34      ; R16 := ""
233 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
234 [-]: JMP       245          ; PC := 245
235 [-]: GETUPVAL  R12 U12      ; R12 := U12
236 [-]: SELF      R12 R12 K35  ; R13 := R12; R12 := R12[0xea061e98]
237 [-]: CLOSURE   R14 0        ; R14 := closure(Function #77.1)
238 [-]: GETUPVAL  R0 U7        ; R0 := U7
239 [-]: MOVE      R0 R7        ; R0 := R7
240 [-]: MOVE      R0 R8        ; R0 := R8
241 [-]: GETUPVAL  R0 U14       ; R0 := U14
242 [-]: GETUPVAL  R0 U15       ; R0 := U15
243 [-]: GETUPVAL  R0 U16       ; R0 := U16
244 [-]: CALL      R12 3 1      ; R12(R13,R14)
245 [-]: CLOSE     R7           ; SAVE R7,...
246 [-]: GETUPVAL  R7 U17       ; R7 := U17
247 [-]: TEST      R7 1         ; if R7 then PC := 265
248 [-]: JMP       265          ; PC := 265
249 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
250 [-]: GETUPVAL  R8 U12       ; R8 := U12
251 [-]: CALL      R7 2 2       ; R7 := R7(R8)
252 [-]: TEST      R7 1         ; if R7 then PC := 265
253 [-]: JMP       265          ; PC := 265
254 [-]: GETUPVAL  R7 U12       ; R7 := U12
255 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["mQueueReposition"]
256 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 265
257 [-]: JMP       265          ; PC := 265
258 [-]: GETUPVAL  R7 U12       ; R7 := U12
259 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7[0x7d81f6e1]
260 [-]: GETUPVAL  R9 U12       ; R9 := U12
261 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["mQueueReposition"]
262 [-]: CALL      R7 3 1       ; R7(R8,R9)
263 [-]: GETUPVAL  R7 U12       ; R7 := U12
264 [-]: SETTABLE  R7 K36 K3    ; R7["mQueueReposition"] := nil
265 [-]: GETGLOBAL R7 K1        ; R7 := _T
266 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["InRailJackMode"]
267 [-]: EQ        0 R7 K3      ; if R7 ~= nil then PC := 270
268 [-]: JMP       270          ; PC := 270
269 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 270
270 [-]: LOADKB    R7 1 0       ; R7 := true
271 [-]: GETUPVAL  R8 U18       ; R8 := U18
272 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 284
273 [-]: JMP       284          ; PC := 284
274 [-]: SETUPVAL  R7 U18       ; U82 := R18
275 [-]: GETUPVAL  R8 U19       ; R8 := U19
276 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0xea061e98]
277 [-]: CLOSURE   R10 1        ; R10 := closure(Function #77.2)
278 [-]: GETUPVAL  R0 U15       ; R0 := U15
279 [-]: GETUPVAL  R0 U7        ; R0 := U7
280 [-]: GETUPVAL  R0 U18       ; R0 := U18
281 [-]: CALL      R8 3 1       ; R8(R9,R10)
282 [-]: GETUPVAL  R8 U20       ; R8 := U20
283 [-]: CALL      R8 1 1       ; R8()
284 [-]: GETGLOBAL R8 K1        ; R8 := _T
285 [-]: GETUPVAL  R9 U1        ; R9 := U1
286 [-]: TEST      R9 1         ; if R9 then PC := 291
287 [-]: JMP       291          ; PC := 291
288 [-]: GETUPVAL  R9 U21       ; R9 := U21
289 [-]: CALL      R9 1 2       ; R9 := R9()
290 [-]: JMP       293          ; PC := 293
291 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 292
292 [-]: LOADKB    R9 1 0       ; R9 := true
293 [-]: SETTABLE  R8 K39 R9    ; R8["MouseInWorldStateWindow"] := R9
294 [-]: RETURN    R0 1         ; return 


; Function #77.1:
;
; Name:            
; Defined at line: 5879
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 107
  3 [-]: JMP       107          ; PC := 107
  4 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mNoTimer"]
  5 [-]: TEST      R1 1         ; if R1 then PC := 107
  6 [-]: JMP       107          ; PC := 107
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0x06d055f9]
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 K3        ; R4 := ".Event.Expiry.Timer"
 12 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 13 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mClipName"]
 14 [-]: LOADK     R5 K4        ; R5 := ".Timer"
 15 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 16 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: TEST      R2 0         ; if not R2 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mClipName"]
 21 [-]: LOADK     R3 K5        ; R3 := ".Text.Timer"
 22 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 23 [-]: LOADNIL   R2 R4        ; R2 := R3 := R4 := nil
 24 [-]: LOADKB    R5 1 0       ; R5 := true
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: TEST      R6 0         ; if not R6 then PC := 66
 27 [-]: JMP       66           ; PC := 66
 28 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["IsLinearEvent"]
 29 [-]: TEST      R6 0         ; if not R6 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADKB    R5 0 0       ; R5 := false
 32 [-]: JMP       99           ; PC := 99
 33 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["IsHeader"]
 34 [-]: TEST      R6 0         ; if not R6 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: JMP       99           ; PC := 99
 38 [-]: GETGLOBAL R6 K8        ; R6 := 0x7b998233
 39 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["EventInfo"]
 40 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 41 [-]: TEST      R6 1         ; if R6 then PC := 99
 42 [-]: JMP       99           ; PC := 99
 43 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["EventInfo"]
 44 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["EventInfo"]
 45 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["mFomorian"]
 46 [-]: TEST      R6 0         ; if not R6 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["VictimNodeName"]
 49 [-]: JMP       59           ; PC := 59
 50 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["EventInfo"]
 51 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["mInvasionNode"]
 52 [-]: TEST      R6 0         ; if not R6 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: GETGLOBAL R6 K13       ; R6 := 0x64fb1586
 55 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["EventInfo"]
 56 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["mInvasionNode"]
 57 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 58 [-]: MOVE      R3 R6        ; R3 := R6
 59 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["IsBannerEvent"]
 60 [-]: TEST      R6 0         ; if not R6 then PC := 99
 61 [-]: JMP       99           ; PC := 99
 62 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 63 [-]: LOADK     R7 K15       ; R7 := ".EventHeader.Timer"
 64 [-]: CONCAT    R1 R6 R7     ; R1 := R6 .. R7
 65 [-]: JMP       99           ; PC := 99
 66 [-]: GETUPVAL  R6 U3        ; R6 := U3
 67 [-]: GETUPVAL  R7 U4        ; R7 := U4
 68 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["SYND_MISSIONS"]
 69 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 81
 70 [-]: JMP       81           ; PC := 81
 71 [-]: GETUPVAL  R6 U3        ; R6 := U3
 72 [-]: GETUPVAL  R7 U4        ; R7 := U4
 73 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["SORTIES"]
 74 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: GETUPVAL  R6 U3        ; R6 := U3
 77 [-]: GETUPVAL  R7 U4        ; R7 := U4
 78 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["VOID_TEARS"]
 79 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: MOVE      R2 R0        ; R2 := R0
 82 [-]: JMP       99           ; PC := 99
 83 [-]: GETUPVAL  R6 U3        ; R6 := U3
 84 [-]: GETUPVAL  R7 U4        ; R7 := U4
 85 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["PVPCHALLENGES"]
 86 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 93
 87 [-]: JMP       93           ; PC := 93
 88 [-]: GETUPVAL  R6 U3        ; R6 := U3
 89 [-]: GETUPVAL  R7 U4        ; R7 := U4
 90 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["PVPCHALLENGES_WEEKLY"]
 91 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 97
 92 [-]: JMP       97           ; PC := 97
 93 [-]: MOVE      R2 R0        ; R2 := R0
 94 [-]: LOADKB    R4 1 0       ; R4 := true
 95 [-]: GETTABLE  R5 R0 K21    ; R5 := R0["updateTimerText"]
 96 [-]: JMP       99           ; PC := 99
 97 [-]: GETTABLE  R2 R0 K22    ; R2 := R0["mAlertInfo"]
 98 [-]: LOADKB    R4 1 0       ; R4 := true
 99 [-]: TEST      R5 0         ; if not R5 then PC := 107
100 [-]: JMP       107          ; PC := 107
101 [-]: GETUPVAL  R6 U5        ; R6 := U5
102 [-]: MOVE      R7 R1        ; R7 := R1
103 [-]: MOVE      R8 R2        ; R8 := R2
104 [-]: MOVE      R9 R3        ; R9 := R3
105 [-]: MOVE      R10 R4       ; R10 := R4
106 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
107 [-]: RETURN    R0 1         ; return 


; Function #77.2:
;
; Name:            
; Defined at line: 5936
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Section"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["VOID_TEARS"]
  4 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0x06d055f9]
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Language/WorldStateWindow/VoidStormHeader"
 10 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Menu/VoidTearMissionCategoryName"
 11 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 12 [-]: SETTABLE  R0 K2 R1     ; R0["Title"] := R1
 13 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 5947
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x32302b4a]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R0 U2        ; R0 := U2
 17 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xe4162eed]
 18 [-]: LOADK     R2 K3        ; R2 := "WSWWidthChanged"
 19 [-]: LOADK     R3 K4        ; R3 := "0"
 20 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 21 [-]: GETUPVAL  R0 U3        ; R0 := U3
 22 [-]: TEST      R0 0         ; if not R0 then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 25 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 26 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 27 [-]: TEST      R0 1         ; if R0 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETUPVAL  R0 U4        ; R0 := U4
 30 [-]: CALL      R0 1 1       ; R0()
 31 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 5963
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 1       ; R2()
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R2 U2        ; R2 := U2
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 5971
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: TEST      R0 1         ; if R0 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R0 U3        ; R0 := U3
 10 [-]: GETUPVAL  R1 U4        ; R1 := U4
 11 [-]: LOADKB    R2 1 0       ; R2 := true
 12 [-]: CALL      R0 3 1       ; R0(R1,R2)
 13 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 5979
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SETUPVAL  R0 U0        ; U82 := R0
  2 [-]: LOADNIL   R0 R0        ; R0 := nil
  3 [-]: SETUPVAL  R0 U1        ; U82 := R1
  4 [-]: GETUPVAL  R0 U2        ; R0 := U2
  5 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETUPVAL  R0 U3        ; R0 := U3
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: GETUPVAL  R0 U4        ; R0 := U4
 10 [-]: GETUPVAL  R1 U5        ; R1 := U5
 11 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SORTIES"]
 12 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 69
 13 [-]: JMP       69           ; PC := 69
 14 [-]: GETGLOBAL R0 K2        ; R0 := _T
 15 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["CachedSortieMissions"]
 16 [-]: TEST      R0 0         ; if not R0 then PC := 69
 17 [-]: JMP       69           ; PC := 69
 18 [-]: GETGLOBAL R0 K2        ; R0 := _T
 19 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["CachedSortieMissionsExist"]
 20 [-]: TEST      R0 0         ; if not R0 then PC := 69
 21 [-]: JMP       69           ; PC := 69
 22 [-]: CONST     R0 1         ; R0 := 1.000000
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x5fbddc1a]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: CONST     R2 1         ; R2 := 1.000000
 27 [-]: FORPREP   R0 68        ; R0 -= R2; PC := 68
 28 [-]: GETUPVAL  R4 U2        ; R4 := U2
 29 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x5465f8f3]
 30 [-]: MOVE      R6 R3        ; R6 := R3
 31 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 32 [-]: TEST      R4 0         ; if not R4 then PC := 68
 33 [-]: JMP       68           ; PC := 68
 34 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["Section"]
 35 [-]: TEST      R5 0         ; if not R5 then PC := 68
 36 [-]: JMP       68           ; PC := 68
 37 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["Section"]
 38 [-]: GETUPVAL  R6 U5        ; R6 := U5
 39 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["SORTIES"]
 40 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 68
 41 [-]: JMP       68           ; PC := 68
 42 [-]: GETGLOBAL R5 K8        ; R5 := 0xcfc01047
 43 [-]: GETGLOBAL R6 K2        ; R6 := _T
 44 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["CachedSortieMissions"]
 45 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 46 [-]: JMP       58           ; PC := 58
 47 [-]: GETGLOBAL R10 K10      ; R10 := 0xae91e43b
 48 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10[0x42b04007]
 49 [-]: LOADK     R12 K12      ; R12 := "<SORTIE> "
 50 [-]: LOADKB    R13 1 0      ; R13 := true
 51 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 52 [-]: GETGLOBAL R11 K13      ; R11 := 0x603636ad
 53 [-]: GETTABLE  R12 R9 K14   ; R12 := R9["mTitle"]
 54 [-]: LOADKB    R13 0 0      ; R13 := false
 55 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 56 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 57 [-]: SETTABLE  R4 K9 R10    ; R4["Title"] := R10
 58 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 47; R7 := R8 end
 59 [-]: JMP       47           ; PC := 47
 60 [-]: GETUPVAL  R10 U6       ; R10 := U6
 61 [-]: GETTABLE  R10 R10 K15  ; R10 := R10[0xc340ce91]
 62 [-]: GETGLOBAL R11 K10      ; R11 := 0xae91e43b
 63 [-]: LOADK     R12 K16      ; R12 := "InfoPanel.Title"
 64 [-]: GETTABLE  R13 R4 K9    ; R13 := R4["Title"]
 65 [-]: LOADK     R14 K17      ; R14 := "..."
 66 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 67 [-]: JMP       69           ; PC := 69
 68 [-]: FORLOOP   R0 28        ; R0 += R2; if R0 <= R1 then begin PC := 28; R3 := R0 end
 69 [-]: GETUPVAL  R10 U7       ; R10 := U7
 70 [-]: EQ        1 R10 K0     ; if R10 == nil then PC := 79
 71 [-]: JMP       79           ; PC := 79
 72 [-]: GETUPVAL  R10 U8       ; R10 := U8
 73 [-]: TEST      R10 1        ; if R10 then PC := 79
 74 [-]: JMP       79           ; PC := 79
 75 [-]: GETUPVAL  R10 U9       ; R10 := U9
 76 [-]: GETUPVAL  R11 U4       ; R11 := U4
 77 [-]: LOADKB    R12 1 0      ; R12 := true
 78 [-]: CALL      R10 3 1      ; R10(R11,R12)
 79 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 6006
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xefc55311]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: LT        0 K2 R0      ; if 0.000000 >= R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K3        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["CachedHardModeDailyMissions"]
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 10
 10 [-]: LOADKB    R0 1 0       ; R0 := true
 11 [-]: LOADNIL   R1 R2        ; R1 := R2 := nil
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xea061e98]
 14 [-]: CLOSURE   R5 0         ; R5 := closure(Function #82.1)
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: MOVE      R0 R1        ; R0 := R1
 17 [-]: MOVE      R0 R2        ; R0 := R2
 18 [-]: CALL      R3 3 1       ; R3(R4,R5)
 19 [-]: TEST      R0 0         ; if not R0 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: EQ        0 R2 K6      ; if R2 ~= nil then PC := 49
 22 [-]: JMP       49           ; PC := 49
 23 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: CONST     R1 1         ; R1 := 1.000000
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x45082a31]
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 30 [-]: GETUPVAL  R7 U1        ; R7 := U1
 31 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["HARD_ALERTS"]
 32 [-]: SETTABLE  R6 K8 R7     ; R6["Section"] := R7
 33 [-]: SETTABLE  R6 K10 K11   ; R6["Title"] := "/Lotus/Language/Labels/SteelPathDailies"
 34 [-]: GETGLOBAL R7 K13       ; R7 := 0x649a746b
 35 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7[0x628bc0ab]
 36 [-]: LOADK     R9 K15       ; R9 := "hard"
 37 [-]: CONST     R10 0        ; R10 := 0.000000
 38 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 39 [-]: SETTABLE  R6 K12 R7    ; R6["Image"] := R7
 40 [-]: LOADKB    R7 1 0       ; R7 := true
 41 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 42 [-]: GETUPVAL  R3 U2        ; R3 := U2
 43 [-]: LOADKB    R4 1 0       ; R4 := true
 44 [-]: CALL      R3 2 1       ; R3(R4)
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x71e9ac81]
 47 [-]: CALL      R3 2 1       ; R3(R4)
 48 [-]: JMP       75           ; PC := 75
 49 [-]: TEST      R0 1         ; if R0 then PC := 75
 50 [-]: JMP       75           ; PC := 75
 51 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 75
 52 [-]: JMP       75           ; PC := 75
 53 [-]: GETUPVAL  R3 U0        ; R3 := U0
 54 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["mSelectedElement"]
 55 [-]: EQ        1 R3 K6      ; if R3 == nil then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETUPVAL  R3 U0        ; R3 := U0
 58 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["mSelectedElement"]
 59 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["Id"]
 60 [-]: EQ        0 R3 R2      ; if R3 ~= R2 then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETUPVAL  R3 U3        ; R3 := U3
 63 [-]: GETUPVAL  R4 U4        ; R4 := U4
 64 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["DECREMENT"]
 65 [-]: CALL      R3 2 1       ; R3(R4)
 66 [-]: GETUPVAL  R3 U0        ; R3 := U0
 67 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0xf4baa6c6]
 68 [-]: MOVE      R5 R2        ; R5 := R2
 69 [-]: LOADKB    R6 1 0       ; R6 := true
 70 [-]: LOADKB    R7 1 0       ; R7 := true
 71 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 72 [-]: GETUPVAL  R3 U0        ; R3 := U0
 73 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x71e9ac81]
 74 [-]: CALL      R3 2 1       ; R3(R4)
 75 [-]: GETUPVAL  R3 U0        ; R3 := U0
 76 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["mInitialX"]
 77 [-]: GETUPVAL  R4 U0        ; R4 := U0
 78 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x5fbddc1a]
 79 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 80 [-]: GETUPVAL  R5 U0        ; R5 := U0
 81 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["mForcedHorizontalSeparation"]
 82 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
 83 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 84 [-]: ADD       R3 R3 K24    ; R3 := R3 + 25.000000
 85 [-]: GETGLOBAL R4 K25       ; R4 := 0xae91e43b
 86 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4[0x67bc869f]
 87 [-]: LOADK     R6 K27       ; R6 := "TopMenu.MenuList.RightBumper"
 88 [-]: CONST     R7 0         ; R7 := 0.000000
 89 [-]: MOVE      R8 R3        ; R8 := R3
 90 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 91 [-]: GETUPVAL  R4 U5        ; R4 := U5
 92 [-]: GETUPVAL  R5 U6        ; R5 := U6
 93 [-]: LOADKB    R6 1 0       ; R6 := true
 94 [-]: LOADKB    R7 1 0       ; R7 := true
 95 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 96 [-]: RETURN    R0 1         ; return 


; Function #82.1:
;
; Name:            
; Defined at line: 6011
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Section"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ALERTS"]
  4 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mIndex"]
  7 [-]: ADD       R1 R1 K3     ; R1 := R1 + 1.000000
  8 [-]: SETUPVAL  R1 U1        ; U82 := R1
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Section"]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["HARD_ALERTS"]
 13 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["Id"]
 16 [-]: SETUPVAL  R1 U2        ; U82 := R2
 17 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 6041
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: TEST      R1 1         ; if R1 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x070daa5a]
 13 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 16 [-]: CALL      R1 0 1       ; R1(R2,...)
 17 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 6049
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xdf42446e]
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 6057
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbce5a201]
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 6065
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x070daa5a]
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 6073
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xdf42446e]
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 6081
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbce5a201]
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 6089
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0xa5c556b9]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := ".ModifiersInfo."
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 26
  7 [-]: JMP       26           ; PC := 26
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x1a94c9cc]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CONST     R4 1         ; R4 := 1.000000
 12 [-]: SUB       R5 R1 K5     ; R5 := R1 - 1.000000
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: GETGLOBAL R3 K6        ; R3 := 0x03f57322
 15 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
 16 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x5b638cce]
 17 [-]: MOVE      R6 R2        ; R6 := R2
 18 [-]: LOADK     R7 K9        ; R7 := "Id"
 19 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 20 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xca30dfb6]
 23 [-]: MOVE      R6 R3        ; R6 := R3
 24 [-]: TAILCALL  R4 3 0       ; R4,... := R4(R5,R6)
 25 [-]: RETURN    R4 0         ; return R4,...
 26 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 6098
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 0         ; if not R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: GETUPVAL  R3 U2        ; R3 := U2
  9 [-]: SETTABLE  R3 K0 K1     ; R3["mCurrentElementIndex"] := nil
 10 [-]: SETTABLE  R2 K2 R0     ; R2["FocusedNerf"] := R0
 11 [-]: GETUPVAL  R3 U2        ; R3 := U2
 12 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xdf42446e]
 13 [-]: GETTABLE  R5 R2 K4     ; R5 := R2["Id"]
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: LOADK     R3 K5        ; R3 := ""
 16 [-]: EQ        0 R0 K6      ; if R0 ~= 1.000000 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R3 K7        ; R3 := "RespawnNerf"
 19 [-]: JMP       25           ; PC := 25
 20 [-]: EQ        0 R0 K8      ; if R0 ~= 2.000000 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R3 K9        ; R3 := "ConsumablesNerf"
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R3 K10       ; R3 := "EnemiesNerf"
 25 [-]: GETTABLE  R4 R2 K11    ; R4 := R2["mClipName"]
 26 [-]: LOADK     R5 K12       ; R5 := ".ModifiersInfo."
 27 [-]: MOVE      R6 R3        ; R6 := R3
 28 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 29 [-]: GETGLOBAL R5 K13       ; R5 := 0xae91e43b
 30 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5[0xf64b7262]
 31 [-]: MOVE      R7 R4        ; R7 := R4
 32 [-]: LOADK     R8 K15       ; R8 := "Icon"
 33 [-]: CONST     R9 9         ; R9 := 9.000000
 34 [-]: GETUPVAL  R10 U3       ; R10 := U3
 35 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["FloatingContentHighlight"]
 36 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 37 [-]: GETGLOBAL R5 K13       ; R5 := 0xae91e43b
 38 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5[0xf64b7262]
 39 [-]: MOVE      R7 R4        ; R7 := R4
 40 [-]: LOADK     R8 K17       ; R8 := "Label"
 41 [-]: CONST     R9 36        ; R9 := 36.000000
 42 [-]: GETUPVAL  R10 U3       ; R10 := U3
 43 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["FloatingContentHighlight"]
 44 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 45 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 6120
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 0         ; if not R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SETTABLE  R2 K0 K1     ; R2["FocusedNerf"] := nil
  9 [-]: GETGLOBAL R3 K2        ; R3 := _T
 10 [-]: SETTABLE  R3 K3 K1     ; R3["InfoPopup_Data"] := nil
 11 [-]: LOADK     R3 K4        ; R3 := ""
 12 [-]: EQ        0 R0 K5      ; if R0 ~= 1.000000 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADK     R3 K6        ; R3 := "RespawnNerf"
 15 [-]: JMP       21           ; PC := 21
 16 [-]: EQ        0 R0 K7      ; if R0 ~= 2.000000 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R3 K8        ; R3 := "ConsumablesNerf"
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADK     R3 K9        ; R3 := "EnemiesNerf"
 21 [-]: GETTABLE  R4 R2 K10    ; R4 := R2["mClipName"]
 22 [-]: LOADK     R5 K11       ; R5 := ".ModifiersInfo."
 23 [-]: MOVE      R6 R3        ; R6 := R3
 24 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 25 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
 26 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf64b7262]
 27 [-]: MOVE      R7 R4        ; R7 := R4
 28 [-]: LOADK     R8 K14       ; R8 := "Icon"
 29 [-]: CONST     R9 9         ; R9 := 9.000000
 30 [-]: GETUPVAL  R10 U2       ; R10 := U2
 31 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["FloatingContent"]
 32 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 33 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
 34 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf64b7262]
 35 [-]: MOVE      R7 R4        ; R7 := R4
 36 [-]: LOADK     R8 K16       ; R8 := "Label"
 37 [-]: CONST     R9 36        ; R9 := 36.000000
 38 [-]: GETUPVAL  R10 U2       ; R10 := U2
 39 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["Content"]
 40 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 41 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 6141
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 0         ; if not R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SETTABLE  R2 K0 K1     ; R2["FocusedReward"] := true
  9 [-]: GETUPVAL  R3 U2        ; R3 := U2
 10 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xdf42446e]
 11 [-]: GETTABLE  R5 R2 K3     ; R5 := R2["Id"]
 12 [-]: CALL      R3 3 1       ; R3(R4,R5)
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x25312c9b
 14 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 15 [-]: GETTABLE  R5 R2 K6     ; R5 := R2["mClipName"]
 16 [-]: LOADK     R6 K7        ; R6 := ".ModifiersInfo.CrystalIcon.Icon"
 17 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 18 [-]: CONST     R6 8         ; R6 := 8.000000
 19 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 20 [-]: CONST     R8 12        ; R8 := 12.000000
 21 [-]: CONST     R9 13        ; R9 := 13.000000
 22 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 23 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 24 [-]: CONST     R9 94        ; R9 := 94.000000
 25 [-]: CONST     R10 94       ; R10 := 94.000000
 26 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 27 [-]: LOADK     R9 K9        ; R9 := 0.200000
 28 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 29 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 6152
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 0         ; if not R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SETTABLE  R2 K0 K1     ; R2["FocusedReward"] := false
  9 [-]: GETGLOBAL R3 K2        ; R3 := _T
 10 [-]: SETTABLE  R3 K3 K4     ; R3["InfoPopup_Data"] := nil
 11 [-]: GETGLOBAL R3 K5        ; R3 := 0x25312c9b
 12 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 13 [-]: GETTABLE  R5 R2 K7     ; R5 := R2["mClipName"]
 14 [-]: LOADK     R6 K8        ; R6 := ".ModifiersInfo.CrystalIcon.Icon"
 15 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 16 [-]: CONST     R6 8         ; R6 := 8.000000
 17 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 18 [-]: CONST     R8 12        ; R8 := 12.000000
 19 [-]: CONST     R9 13        ; R9 := 13.000000
 20 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 21 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 22 [-]: CONST     R9 86        ; R9 := 86.000000
 23 [-]: CONST     R10 86       ; R10 := 86.000000
 24 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 25 [-]: LOADK     R9 K10       ; R9 := 0.200000
 26 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 27 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 6163
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xd033d908]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 6169
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xcc5f3150]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 6175
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x87ffcf10]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 6181
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: TEST      R2 1         ; if R2 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: TEST      R2 1         ; if R2 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R2 U3        ; R2 := U3
 13 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: SELF      R3 R2 K1     ; R4 := R2; R3 := R2[0x30456f58]
 16 [-]: GETGLOBAL R5 K2        ; R5 := 0x03f57322
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K3        ; R6 := 0x0032441c
 20 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["UISound_Scroll"]
 21 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 22 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 6192
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 22
  3 [-]: JMP       22           ; PC := 22
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: TEST      R0 0         ; if not R0 then PC := 18
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x1d246732]
  9 [-]: GETUPVAL  R2 U2        ; R2 := U2
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mSelectedElement"]
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Id"]
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x77de11fe]
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R1 3 1       ; R1(R2,R3)
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x77de11fe]
 20 [-]: CONST     R3 1         ; R3 := 1.000000
 21 [-]: CALL      R1 3 1       ; R1(R2,R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 6205
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: CONST     R1 1         ; R1 := 1.000000
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mSelectedElement"]
  4 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 35
  5 [-]: JMP       35           ; PC := 35
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x1d246732]
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["mSelectedElement"]
 10 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Id"]
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mWrapAroundNavigation"]
 14 [-]: TEST      R3 0         ; if not R3 then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETTABLE  R3 R3 K5     ; R3 := R3[0x38a41ce7]
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: MOVE      R5 R0        ; R5 := R0
 20 [-]: CONST     R6 1         ; R6 := 1.000000
 21 [-]: GETUPVAL  R7 U0        ; R7 := U0
 22 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0x5fbddc1a]
 23 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 24 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 25 [-]: MOVE      R1 R3        ; R1 := R3
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETGLOBAL R3 K7        ; R3 := 0x42dcc9f5
 28 [-]: ADD       R4 R2 R0     ; R4 := R2 + R0
 29 [-]: CONST     R5 1         ; R5 := 1.000000
 30 [-]: GETUPVAL  R6 U0        ; R6 := U0
 31 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x5fbddc1a]
 32 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 33 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 34 [-]: MOVE      R1 R3        ; R1 := R3
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x77de11fe]
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R3 3 1       ; R3(R4,R5)
 39 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 6218
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 26
  3 [-]: JMP       26           ; PC := 26
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: TEST      R0 0         ; if not R0 then PC := 26
  6 [-]: JMP       26           ; PC := 26
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 26
  9 [-]: JMP       26           ; PC := 26
 10 [-]: GETUPVAL  R0 U3        ; R0 := U3
 11 [-]: TEST      R0 1         ; if R0 then PC := 26
 12 [-]: JMP       26           ; PC := 26
 13 [-]: GETUPVAL  R0 U4        ; R0 := U4
 14 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xf76783e5]
 15 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 16 [-]: LOADK     R2 K3        ; R2 := "TopMenu.MenuList.LeftBumper"
 17 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIFx_ConsolePress"]
 19 [-]: CONST     R4 0         ; R4 := 0.000000
 20 [-]: CONST     R5 0         ; R5 := 0.000000
 21 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 22 [-]: GETUPVAL  R0 U5        ; R0 := U5
 23 [-]: GETUPVAL  R1 U4        ; R1 := U4
 24 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["DECREMENT"]
 25 [-]: CALL      R0 2 1       ; R0(R1)
 26 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 6225
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: TEST      R0 0         ; if not R0 then PC := 28
  7 [-]: JMP       28           ; PC := 28
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 39
 10 [-]: JMP       39           ; PC := 39
 11 [-]: GETUPVAL  R0 U3        ; R0 := U3
 12 [-]: TEST      R0 1         ; if R0 then PC := 39
 13 [-]: JMP       39           ; PC := 39
 14 [-]: GETUPVAL  R0 U4        ; R0 := U4
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xf76783e5]
 16 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 17 [-]: LOADK     R2 K3        ; R2 := "TopMenu.MenuList.RightBumper"
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 19 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIFx_ConsolePress"]
 20 [-]: CONST     R4 0         ; R4 := 0.000000
 21 [-]: CONST     R5 0         ; R5 := 0.000000
 22 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 23 [-]: GETUPVAL  R0 U5        ; R0 := U5
 24 [-]: GETUPVAL  R1 U4        ; R1 := U4
 25 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["INCREMENT"]
 26 [-]: CALL      R0 2 1       ; R0(R1)
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETUPVAL  R0 U4        ; R0 := U4
 29 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xf76783e5]
 30 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 31 [-]: LOADK     R2 K7        ; R2 := "TopMenu.MaxMinCallout"
 32 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 33 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIFx_ConsolePress"]
 34 [-]: CONST     R4 0         ; R4 := 0.000000
 35 [-]: CONST     R5 0         ; R5 := 0.000000
 36 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 37 [-]: GETUPVAL  R0 U6        ; R0 := U6
 38 [-]: CALL      R0 1 1       ; R0()
 39 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 6241
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 6245
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 17
  3 [-]: JMP       17           ; PC := 17
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: TEST      R0 0         ; if not R0 then PC := 17
  6 [-]: JMP       17           ; PC := 17
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["InvitePanelOpen"]
  9 [-]: TEST      R0 1         ; if R0 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x8b24ce41]
 13 [-]: LOADKB    R2 1 0       ; R2 := true
 14 [-]: CALL      R0 3 1       ; R0(R1,R2)
 15 [-]: LOADKB    R0 1 0       ; R0 := true
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 6252
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 6256
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 4
  4 [-]: LOADKB    R1 1 0       ; R1 := true
  5 [-]: SETUPVAL  R1 U0        ; U82 := R0
  6 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 6260
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: TEST      R0 0         ; if not R0 then PC := 72
  3 [-]: JMP       72           ; PC := 72
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
  6 [-]: LOADK     R2 K2        ; R2 := "TopMenu.MaxMinCallout.Tf.text"
  7 [-]: LOADK     R3 K3        ; R3 := "<MENU_RTRIGGER2>"
  8 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  9 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 10 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
 11 [-]: LOADK     R2 K4        ; R2 := "TopMenu.MenuList.LeftBumper.Tf.text"
 12 [-]: LOADK     R3 K5        ; R3 := "<MENU_LTRIGGER2>"
 13 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 14 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 15 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
 16 [-]: LOADK     R2 K6        ; R2 := "TopMenu.MenuList.RightBumper.Tf.text"
 17 [-]: LOADK     R3 K3        ; R3 := "<MENU_RTRIGGER2>"
 18 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 19 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 20 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xaade900e]
 21 [-]: LOADK     R2 K8        ; R2 := "TopMenu.MaxMinCallout"
 22 [-]: CONST     R3 11        ; R3 := 11.000000
 23 [-]: GETGLOBAL R4 K9        ; R4 := 0x34291f5c
 24 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x1467d5f4]
 25 [-]: CALL      R4 1 0       ; R4,... := R4()
 26 [-]: CALL      R0 0 1       ; R0(R1,...)
 27 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 28 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xaade900e]
 29 [-]: LOADK     R2 K11       ; R2 := "TopMenu.MenuList.LeftBumper"
 30 [-]: CONST     R3 11        ; R3 := 11.000000
 31 [-]: GETGLOBAL R4 K9        ; R4 := 0x34291f5c
 32 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x1467d5f4]
 33 [-]: CALL      R4 1 0       ; R4,... := R4()
 34 [-]: CALL      R0 0 1       ; R0(R1,...)
 35 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 36 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xaade900e]
 37 [-]: LOADK     R2 K12       ; R2 := "TopMenu.MenuList.RightBumper"
 38 [-]: CONST     R3 11        ; R3 := 11.000000
 39 [-]: GETGLOBAL R4 K9        ; R4 := 0x34291f5c
 40 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x1467d5f4]
 41 [-]: CALL      R4 1 0       ; R4,... := R4()
 42 [-]: CALL      R0 0 1       ; R0(R1,...)
 43 [-]: GETUPVAL  R0 U0        ; R0 := U0
 44 [-]: GETTABLE  R0 R0 K13    ; R0 := R0[0x06d055f9]
 45 [-]: GETUPVAL  R1 U1        ; R1 := U1
 46 [-]: TEST      R1 0         ; if not R1 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETGLOBAL R1 K9        ; R1 := 0x34291f5c
 49 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0x1467d5f4]
 50 [-]: CALL      R1 1 2       ; R1 := R1()
 51 [-]: CONST     R2 100       ; R2 := 100.000000
 52 [-]: CONST     R3 0         ; R3 := 0.000000
 53 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 54 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 55 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0x67bc869f]
 56 [-]: LOADK     R3 K11       ; R3 := "TopMenu.MenuList.LeftBumper"
 57 [-]: CONST     R4 10        ; R4 := 10.000000
 58 [-]: MOVE      R5 R0        ; R5 := R0
 59 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 60 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 61 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0x67bc869f]
 62 [-]: LOADK     R3 K12       ; R3 := "TopMenu.MenuList.RightBumper"
 63 [-]: CONST     R4 10        ; R4 := 10.000000
 64 [-]: MOVE      R5 R0        ; R5 := R0
 65 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 66 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 67 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0x67bc869f]
 68 [-]: LOADK     R3 K8        ; R3 := "TopMenu.MaxMinCallout"
 69 [-]: CONST     R4 10        ; R4 := 10.000000
 70 [-]: SUB       R5 K15 R0    ; R5 := 100.000000 - R0
 71 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 72 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 6277
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 6281
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R0 K0        ; R0 := _T
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MouseInWorldStateWindow"]
  6 [-]: TEST      R0 1         ; if R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: CALL      R0 1 1       ; R0()
 15 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 6287
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R1 1 1       ; R1()
  5 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 6292
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


