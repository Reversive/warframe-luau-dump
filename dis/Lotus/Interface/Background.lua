; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  175

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["MATCHMAKING_QUICKMATCH_GAMEMODE"] := 9.000000
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: SETTABLE  R0 K3 K4     ; R0["MATCHMAKING_PRIVATE_GAMEMODE"] := 3.000000
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: SETTABLE  R0 K5 K6     ; R0["MATCHMAKING_INVITE_ONLY_GAMEMODE"] := 4.000000
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: SETTABLE  R0 K7 K8     ; R0["MATCHMAKING_OFFLINE_GAMEMODE"] := 0.000000
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: SETTABLE  R0 K9 K10    ; R0["MATCHMAKING_PVP_GAMEMODE"] := 6.000000
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: SETTABLE  R0 K11 K8    ; R0["MENU_SUIT_AVATAR_PROGRESS"] := 0.000000
 13 [-]: GETGLOBAL R0 K0        ; R0 := _T
 14 [-]: SETTABLE  R0 K12 K13   ; R0["SHOW_LOCKED_ALERTS"] := false
 15 [-]: GETGLOBAL R0 K0        ; R0 := _T
 16 [-]: SETTABLE  R0 K14 K15   ; R0["gSelectedRegionId"] := -1.000000
 17 [-]: GETGLOBAL R0 K0        ; R0 := _T
 18 [-]: SETTABLE  R0 K16 K17   ; R0["gSelectedNodeName"] := ""
 19 [-]: GETGLOBAL R0 K0        ; R0 := _T
 20 [-]: SETTABLE  R0 K18 K19   ; R0["gShowingLoginScreen"] := true
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 23 [-]: SETTABLE  R0 K20 R1    ; R0["CachedAlerts"] := R1
 24 [-]: GETGLOBAL R0 K0        ; R0 := _T
 25 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 26 [-]: SETTABLE  R0 K21 R1    ; R0["CachedInvasionInfo"] := R1
 27 [-]: GETGLOBAL R0 K0        ; R0 := _T
 28 [-]: SETTABLE  R0 K22 K23   ; R0["CachedConstructionProjects"] := nil
 29 [-]: GETGLOBAL R0 K0        ; R0 := _T
 30 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 31 [-]: SETTABLE  R0 K24 R1    ; R0["CachedSkullNodes"] := R1
 32 [-]: GETGLOBAL R0 K0        ; R0 := _T
 33 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 34 [-]: SETTABLE  R0 K25 R1    ; R0["CachedRegionStatus"] := R1
 35 [-]: GETGLOBAL R0 K0        ; R0 := _T
 36 [-]: SETTABLE  R0 K26 K23   ; R0["CachedFlashSales"] := nil
 37 [-]: GETGLOBAL R0 K0        ; R0 := _T
 38 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 39 [-]: SETTABLE  R0 K27 R1    ; R0["CachedVoidTraders"] := R1
 40 [-]: GETGLOBAL R0 K0        ; R0 := _T
 41 [-]: SETTABLE  R0 K28 K23   ; R0["CachedTennoAvatar"] := nil
 42 [-]: GETGLOBAL R0 K0        ; R0 := _T
 43 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 44 [-]: SETTABLE  R0 K29 R1    ; R0["CachedSyndicateMissions"] := R1
 45 [-]: GETGLOBAL R0 K0        ; R0 := _T
 46 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 47 [-]: SETTABLE  R0 K30 R1    ; R0["CachedNodesPendingDestruction"] := R1
 48 [-]: GETGLOBAL R0 K0        ; R0 := _T
 49 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 50 [-]: SETTABLE  R0 K31 R1    ; R0["CachedSortieMissions"] := R1
 51 [-]: GETGLOBAL R0 K0        ; R0 := _T
 52 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 53 [-]: SETTABLE  R0 K32 R1    ; R0["CachedLiteSortieMissions"] := R1
 54 [-]: GETGLOBAL R0 K0        ; R0 := _T
 55 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 56 [-]: SETTABLE  R0 K33 R1    ; R0["CachedActiveMissions"] := R1
 57 [-]: GETGLOBAL R0 K0        ; R0 := _T
 58 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 59 [-]: SETTABLE  R0 K34 R1    ; R0["CachedGhostTowerMissions"] := R1
 60 [-]: GETGLOBAL R0 K0        ; R0 := _T
 61 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 62 [-]: SETTABLE  R0 K35 R1    ; R0["CachedNemesisMissions"] := R1
 63 [-]: GETGLOBAL R0 K0        ; R0 := _T
 64 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 65 [-]: SETTABLE  R0 K36 R1    ; R0["CachedEliteAlertMissions"] := R1
 66 [-]: GETGLOBAL R0 K0        ; R0 := _T
 67 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 68 [-]: SETTABLE  R0 K37 R1    ; R0["CachedHardModeDailyMissions"] := R1
 69 [-]: GETGLOBAL R0 K0        ; R0 := _T
 70 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 71 [-]: SETTABLE  R0 K38 R1    ; R0["CachedVoidStormMissions"] := R1
 72 [-]: CONST     R0 6         ; R0 := 6.000000
 73 [-]: NEWTABLE  R1 0 2       ; R1 := {}
 74 [-]: GETGLOBAL R2 K40       ; R2 := 0xb009bbc6
 75 [-]: LOADK     R3 K41       ; R3 := "/Lotus/Types/Game/MissionDecks/KuvaMissionRewards/KuvaSiphonRewards"
 76 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 77 [-]: SETTABLE  R1 K39 R2    ; R1["easy"] := R2
 78 [-]: GETGLOBAL R2 K40       ; R2 := 0xb009bbc6
 79 [-]: LOADK     R3 K43       ; R3 := "/Lotus/Types/Game/MissionDecks/KuvaMissionRewards/KuvaSiphonFloodRewards"
 80 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 81 [-]: SETTABLE  R1 K42 R2    ; R1["hard"] := R2
 82 [-]: NEWTABLE  R2 0 4       ; R2 := {}
 83 [-]: GETGLOBAL R3 K45       ; R3 := 0x0469f296
 84 [-]: LOADK     R4 K46       ; R4 := "TeshinHardModeInvite"
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: SETTABLE  R2 K44 R3    ; R2["NodeSymbol"] := R3
 87 [-]: SETTABLE  R2 K47 K15   ; R2["InviteQueued"] := -1.000000
 88 [-]: GETGLOBAL R3 K49       ; R3 := 0x7ed0a956
 89 [-]: LOADK     R4 K50       ; R4 := "/Lotus/Sounds/Dialog/HardMode/Teshin/DTeshinGeneric0240Teshin"
 90 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 91 [-]: SETTABLE  R2 K48 R3    ; R2["Transmission"] := R3
 92 [-]: GETGLOBAL R3 K40       ; R3 := 0xb009bbc6
 93 [-]: LOADK     R4 K52       ; R4 := "/Lotus/Types/Items/MiscItems/SteelEssence"
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: SETTABLE  R2 K51 R3    ; R2["DailyMissionReward"] := R3
 96 [-]: LOADK     R3 K53       ; R3 := "Background::"
 97 [-]: GETGLOBAL R4 K54       ; R4 := 0x2d0fad09
 98 [-]: LOADK     R5 K55       ; R5 := "EE.Interface.Utilities"
 99 [-]: CALL      R4 2 2       ; R4 := R4(R5)
100 [-]: GETGLOBAL R5 K54       ; R5 := 0x2d0fad09
101 [-]: LOADK     R6 K56       ; R6 := "Lotus.Interface.CrossPlatformUtilities"
102 [-]: CALL      R5 2 2       ; R5 := R5(R6)
103 [-]: GETGLOBAL R6 K54       ; R6 := 0x2d0fad09
104 [-]: LOADK     R7 K57       ; R7 := "Lotus.Interface.LotusUtilities"
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: GETGLOBAL R7 K54       ; R7 := 0x2d0fad09
107 [-]: LOADK     R8 K58       ; R8 := "Lotus.Interface.FortressUtilities"
108 [-]: CALL      R7 2 2       ; R7 := R7(R8)
109 [-]: GETGLOBAL R8 K54       ; R8 := 0x2d0fad09
110 [-]: LOADK     R9 K59       ; R9 := "Lotus.Interface.LotusNetworkUtilities"
111 [-]: CALL      R8 2 2       ; R8 := R8(R9)
112 [-]: GETGLOBAL R9 K54       ; R9 := 0x2d0fad09
113 [-]: LOADK     R10 K60      ; R10 := "Lotus.Interface.Libs.SortieGenerator"
114 [-]: CALL      R9 2 2       ; R9 := R9(R10)
115 [-]: GETGLOBAL R10 K54      ; R10 := 0x2d0fad09
116 [-]: LOADK     R11 K61      ; R11 := "Lotus.Interface.Libs.SyndicateMissionGenerator"
117 [-]: CALL      R10 2 2      ; R10 := R10(R11)
118 [-]: GETGLOBAL R11 K54      ; R11 := 0x2d0fad09
119 [-]: LOADK     R12 K62      ; R12 := "Lotus.Interface.Libs.ActiveMissionGenerator"
120 [-]: CALL      R11 2 2      ; R11 := R11(R12)
121 [-]: GETGLOBAL R12 K54      ; R12 := 0x2d0fad09
122 [-]: LOADK     R13 K63      ; R13 := "Lotus.Interface.Libs.InvasionMissionGenerator"
123 [-]: CALL      R12 2 2      ; R12 := R12(R13)
124 [-]: GETGLOBAL R13 K54      ; R13 := 0x2d0fad09
125 [-]: LOADK     R14 K64      ; R14 := "Lotus.Interface.CardUtilitiesRedux"
126 [-]: CALL      R13 2 2      ; R13 := R13(R14)
127 [-]: GETGLOBAL R14 K54      ; R14 := 0x2d0fad09
128 [-]: LOADK     R15 K65      ; R15 := "Lotus.Interface.TransmissionUtilities"
129 [-]: CALL      R14 2 2      ; R14 := R14(R15)
130 [-]: GETGLOBAL R15 K54      ; R15 := 0x2d0fad09
131 [-]: LOADK     R16 K66      ; R16 := "Lotus.Interface.UIStyleUtilities"
132 [-]: CALL      R15 2 2      ; R15 := R15(R16)
133 [-]: GETGLOBAL R16 K54      ; R16 := 0x2d0fad09
134 [-]: LOADK     R17 K67      ; R17 := "Lotus.Scripts.RelayReconstructionUtilities"
135 [-]: CALL      R16 2 2      ; R16 := R16(R17)
136 [-]: GETGLOBAL R17 K54      ; R17 := 0x2d0fad09
137 [-]: LOADK     R18 K68      ; R18 := "Lotus.Interface.Libs.JukeBoxMgr"
138 [-]: CALL      R17 2 2      ; R17 := R17(R18)
139 [-]: GETGLOBAL R18 K54      ; R18 := 0x2d0fad09
140 [-]: LOADK     R19 K69      ; R19 := "Lotus.Interface.MissionRequirementUtilities"
141 [-]: CALL      R18 2 2      ; R18 := R18(R19)
142 [-]: GETGLOBAL R19 K54      ; R19 := 0x2d0fad09
143 [-]: LOADK     R20 K70      ; R20 := "Lotus.Interface.WorldStateUtilities"
144 [-]: CALL      R19 2 2      ; R19 := R19(R20)
145 [-]: GETGLOBAL R20 K54      ; R20 := 0x2d0fad09
146 [-]: LOADK     R21 K71      ; R21 := "Lotus.Scripts.Nemesis.NemesisGenerator"
147 [-]: CALL      R20 2 2      ; R20 := R20(R21)
148 [-]: GETGLOBAL R21 K54      ; R21 := 0x2d0fad09
149 [-]: LOADK     R22 K72      ; R22 := "Lotus.Interface.FocusUtilities"
150 [-]: CALL      R21 2 2      ; R21 := R21(R22)
151 [-]: GETGLOBAL R22 K54      ; R22 := 0x2d0fad09
152 [-]: LOADK     R23 K73      ; R23 := "Lotus.Scripts.Libs.PlayerShipUtilities"
153 [-]: CALL      R22 2 2      ; R22 := R22(R23)
154 [-]: GETGLOBAL R23 K54      ; R23 := 0x2d0fad09
155 [-]: LOADK     R24 K74      ; R24 := "Lotus.Powersuits.Operator.OperatorLib"
156 [-]: CALL      R23 2 2      ; R23 := R23(R24)
157 [-]: LOADNIL   R24 R24      ; R24 := nil
158 [-]: SETGLOBAL R24 K75      ; mTimerMgr := R24
159 [-]: LOADKB    R24 1 0      ; R24 := true
160 [-]: SETGLOBAL R24 K76      ; mQuestsNeedChecking := R24
161 [-]: NEWTABLE  R24 0 3      ; R24 := {}
162 [-]: SETTABLE  R24 K78 K13  ; R24["Initialized"] := false
163 [-]: SETTABLE  R24 K79 K13  ; R24["Shutdown"] := false
164 [-]: SETTABLE  R24 K80 K13  ; R24["StyleInit"] := false
165 [-]: SETGLOBAL R24 K77      ; mControl := R24
166 [-]: LOADNIL   R24 R24      ; R24 := nil
167 [-]: SETGLOBAL R24 K81      ; mNotificationsMovie := R24
168 [-]: LOADNIL   R24 R24      ; R24 := nil
169 [-]: SETGLOBAL R24 K82      ; mChildMovie := R24
170 [-]: NEWTABLE  R24 0 0      ; R24 := {}
171 [-]: SETGLOBAL R24 K83      ; screenStack := R24
172 [-]: LOADNIL   R24 R24      ; R24 := nil
173 [-]: SETGLOBAL R24 K84      ; queuedMovie := R24
174 [-]: LOADNIL   R24 R24      ; R24 := nil
175 [-]: SETGLOBAL R24 K85      ; queuedMovieCallback := R24
176 [-]: NEWTABLE  R24 0 0      ; R24 := {}
177 [-]: SETGLOBAL R24 K86      ; movies := R24
178 [-]: LOADKB    R24 0 0      ; R24 := false
179 [-]: SETGLOBAL R24 K87      ; mFadeInStarted := R24
180 [-]: LOADNIL   R24 R24      ; R24 := nil
181 [-]: SETGLOBAL R24 K88      ; mPreviousScreen := R24
182 [-]: LOADNIL   R24 R24      ; R24 := nil
183 [-]: SETGLOBAL R24 K89      ; mToolTip := R24
184 [-]: LOADNIL   R24 R24      ; R24 := nil
185 [-]: SETGLOBAL R24 K90      ; mInfoPopup := R24
186 [-]: LOADNIL   R24 R24      ; R24 := nil
187 [-]: SETGLOBAL R24 K91      ; mContextMenu := R24
188 [-]: LOADNIL   R24 R24      ; R24 := nil
189 [-]: SETGLOBAL R24 K92      ; mIMEOverlay := R24
190 [-]: LOADNIL   R24 R24      ; R24 := nil
191 [-]: SETGLOBAL R24 K93      ; mBlockingTaskPopup := R24
192 [-]: LOADKB    R24 0 0      ; R24 := false
193 [-]: SETGLOBAL R24 K94      ; mUnblockWhenAsyncDone := R24
194 [-]: LOADNIL   R24 R24      ; R24 := nil
195 [-]: SETGLOBAL R24 K95      ; mStyleBackgroundMovie := R24
196 [-]: LOADNIL   R24 R24      ; R24 := nil
197 [-]: SETGLOBAL R24 K96      ; mPurchaseParams := R24
198 [-]: CONST     R24 1        ; R24 := 1.000000
199 [-]: SETGLOBAL R24 K97      ; mQuantityToReceive := R24
200 [-]: LOADNIL   R24 R25      ; R24 := R25 := nil
201 [-]: SETGLOBAL R25 K98      ; mPurchaseTotalPrice := R25
202 [-]: LOADNIL   R25 R25      ; R25 := nil
203 [-]: SETGLOBAL R25 K99      ; mPurchaseUnitPrice := R25
204 [-]: CONST     R25 1        ; R25 := 1.000000
205 [-]: SETGLOBAL R25 K100     ; mPurchaseQuantityMultiplier := R25
206 [-]: LOADNIL   R25 R25      ; R25 := nil
207 [-]: SETGLOBAL R25 K101     ; mQueuedGoToScreen := R25
208 [-]: LOADNIL   R25 R25      ; R25 := nil
209 [-]: SETGLOBAL R25 K102     ; mQueuedGoToPreviousScreen := R25
210 [-]: LOADKB    R25 0 0      ; R25 := false
211 [-]: SETGLOBAL R25 K103     ; mQueuedLogoff := R25
212 [-]: LOADKB    R25 0 0      ; R25 := false
213 [-]: SETGLOBAL R25 K104     ; mAbortingQuickMatch := R25
214 [-]: LOADKB    R25 0 0      ; R25 := false
215 [-]: SETGLOBAL R25 K105     ; mNeedsToRespawnMenuAvatars := R25
216 [-]: LOADNIL   R25 R25      ; R25 := nil
217 [-]: SETGLOBAL R25 K106     ; mMenuSuitAvatar := R25
218 [-]: LOADKB    R25 0 0      ; R25 := false
219 [-]: SETGLOBAL R25 K107     ; mMenuSuitAvatarVisible := R25
220 [-]: LOADNIL   R25 R25      ; R25 := nil
221 [-]: SETGLOBAL R25 K108     ; connectionFailurePopup := R25
222 [-]: LOADNIL   R25 R25      ; R25 := nil
223 [-]: SETGLOBAL R25 K109     ; mPurchasePopupMovie := R25
224 [-]: LOADNIL   R25 R25      ; R25 := nil
225 [-]: SETGLOBAL R25 K110     ; mCurrentMode := R25
226 [-]: LOADNIL   R25 R25      ; R25 := nil
227 [-]: SETGLOBAL R25 K111     ; mCurrentGameRules := R25
228 [-]: LOADNIL   R25 R25      ; R25 := nil
229 [-]: SETGLOBAL R25 K112     ; mUIInputEnableTimer := R25
230 [-]: NEWTABLE  R25 0 3      ; R25 := {}
231 [-]: SETTABLE  R25 K114 K13 ; R25["Refresh"] := false
232 [-]: SETTABLE  R25 K115 K23 ; R25["Timer"] := nil
233 [-]: SETTABLE  R25 K116 K8  ; R25["LastRefreshTime"] := 0.000000
234 [-]: SETGLOBAL R25 K113     ; mFoundryNotification := R25
235 [-]: NEWTABLE  R25 0 5      ; R25 := {}
236 [-]: SETTABLE  R25 K118 K13 ; R25["IsLoading"] := false
237 [-]: SETTABLE  R25 K119 K17 ; R25["ScreenName"] := ""
238 [-]: SETTABLE  R25 K120 K23 ; R25["OpenFromMovie"] := nil
239 [-]: SETTABLE  R25 K121 K13 ; R25["IgnoreIfOpen"] := false
240 [-]: SETTABLE  R25 K122 K23 ; R25["Callback"] := nil
241 [-]: SETGLOBAL R25 K117     ; mOpenScreenAsyncInfo := R25
242 [-]: CONST     R25 0        ; R25 := 0.000000
243 [-]: SETGLOBAL R25 K123     ; mPurchasePolarityType := R25
244 [-]: LOADNIL   R25 R25      ; R25 := nil
245 [-]: SETGLOBAL R25 K124     ; mPurchaseOrigin := R25
246 [-]: LOADK     R25 K17      ; R25 := ""
247 [-]: SETGLOBAL R25 K125     ; mBinType := R25
248 [-]: LOADK     R25 K17      ; R25 := ""
249 [-]: SETGLOBAL R25 K126     ; mBaseSourceType := R25
250 [-]: LOADNIL   R25 R25      ; R25 := nil
251 [-]: SETGLOBAL R25 K127     ; mWebCmd := R25
252 [-]: NEWTABLE  R25 18 0     ; R25 := {}
253 [-]: LOADK     R26 K128     ; R26 := "PURCHASE_MARKET"
254 [-]: LOADK     R27 K129     ; R27 := "PURCHASE_VOID_TRADER"
255 [-]: LOADK     R28 K130     ; R28 := "PURCHASE_SYNDICATE_FAVOR"
256 [-]: LOADK     R29 K131     ; R29 := "PURCHASE_DAILY_DEAL"
257 [-]: LOADK     R30 K132     ; R30 := "PURCHASE_ARSENAL"
258 [-]: LOADK     R31 K133     ; R31 := "PURCHASE_PROFILE"
259 [-]: LOADK     R32 K134     ; R32 := "PURCHASE_HUB"
260 [-]: LOADK     R33 K135     ; R33 := "PURCHASE_VENDOR"
261 [-]: LOADK     R34 K136     ; R34 := "PURCHASE_APPEARANCE_PREVIEW"
262 [-]: LOADK     R35 K137     ; R35 := "PURCHASE_MUSEUM"
263 [-]: LOADK     R36 K138     ; R36 := "PURCHASE_OPERATOR"
264 [-]: LOADK     R37 K139     ; R37 := "PURCHASE_PLAYER_SHIP"
265 [-]: LOADK     R38 K140     ; R38 := "PURCHASE_CREWSHIP"
266 [-]: LOADK     R39 K141     ; R39 := "PURCHASE_MENU_STYLE"
267 [-]: LOADK     R40 K142     ; R40 := "PURCHASE_MENU_HUD"
268 [-]: LOADK     R41 K143     ; R41 := "PURCHASE_CHAT"
269 [-]: LOADK     R42 K144     ; R42 := "PURCHASE_INVENTORY"
270 [-]: LOADK     R43 K145     ; R43 := "PURCHASE_STAR_CHART"
271 [-]: LOADK     R44 K146     ; R44 := "PURCHASE_INCUBATOR"
272 [-]: LOADK     R45 K147     ; R45 := "PURCHASE_PROMPT"
273 [-]: SETLIST   R25 20 1     ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 20
274 [-]: NEWTABLE  R26 0 5      ; R26 := {}
275 [-]: SETTABLE  R26 K115 K15 ; R26["Timer"] := -1.000000
276 [-]: SETTABLE  R26 K148 K8  ; R26["InTime"] := 0.000000
277 [-]: SETTABLE  R26 K149 K8  ; R26["OutTime"] := 0.000000
278 [-]: SETTABLE  R26 K150 K8  ; R26["FinalVal"] := 0.000000
279 [-]: SETTABLE  R26 K151 K23 ; R26["FullCallback"] := nil
280 [-]: LOADNIL   R27 R27      ; R27 := nil
281 [-]: NEWTABLE  R28 0 6      ; R28 := {}
282 [-]: GETGLOBAL R29 K45      ; R29 := 0x0469f296
283 [-]: LOADK     R30 K153     ; R30 := "BackgroundMovie"
284 [-]: CALL      R29 2 2      ; R29 := R29(R30)
285 [-]: SETTABLE  R28 K152 R29 ; R28["WORLD_STATE_CALLBACK_IDENTIFIER"] := R29
286 [-]: SETTABLE  R28 K154 K23 ; R28["mWorldStateLastNightmareSeed"] := nil
287 [-]: SETTABLE  R28 K155 K23 ; R28["mWorldStateLastGhostTowerSeed"] := nil
288 [-]: SETTABLE  R28 K156 K23 ; R28["mWorldStateLastEliteAlertSeed"] := nil
289 [-]: SETTABLE  R28 K157 K13 ; R28["mWorldStateCallbackRegistered"] := false
290 [-]: SETTABLE  R28 K158 K13 ; R28["mForceRefreshWorldStatePostLogin"] := false
291 [-]: CONST     R29 5        ; R29 := 5.000000
292 [-]: CONST     R30 3        ; R30 := 3.000000
293 [-]: LOADKB    R31 0 0      ; R31 := false
294 [-]: LOADNIL   R32 R32      ; R32 := nil
295 [-]: NEWTABLE  R33 0 0      ; R33 := {}
296 [-]: CONST     R34 1        ; R34 := 1.000000
297 [-]: LOADNIL   R35 R35      ; R35 := nil
298 [-]: SETGLOBAL R35 K159     ; mProcessingOmegaWithPendingFingerprint := R35
299 [-]: LOADNIL   R35 R35      ; R35 := nil
300 [-]: SETGLOBAL R35 K160     ; mNewIdentifiedOmegaMods := R35
301 [-]: LOADNIL   R35 R35      ; R35 := nil
302 [-]: SETGLOBAL R35 K161     ; mOmegaWithPendingFingerprints := R35
303 [-]: LOADNIL   R35 R35      ; R35 := nil
304 [-]: SETGLOBAL R35 K162     ; mCheckingForIdentifiedOmegaMods := R35
305 [-]: LOADNIL   R35 R35      ; R35 := nil
306 [-]: SETGLOBAL R35 K163     ; mShowingIdentifiedOmegaModsDiorama := R35
307 [-]: LOADNIL   R35 R35      ; R35 := nil
308 [-]: SETGLOBAL R35 K164     ; mShouldShowDiorama := R35
309 [-]: LOADKB    R35 0 0      ; R35 := false
310 [-]: LOADNIL   R36 R36      ; R36 := nil
311 [-]: NEWTABLE  R37 0 8      ; R37 := {}
312 [-]: SETTABLE  R37 K165 K23 ; R37["Loader"] := nil
313 [-]: SETTABLE  R37 K118 K13 ; R37["IsLoading"] := false
314 [-]: SETTABLE  R37 K166 K23 ; R37["QueuedTransmission"] := nil
315 [-]: SETTABLE  R37 K167 K23 ; R37["SoundInst"] := nil
316 [-]: NEWTABLE  R38 0 0      ; R38 := {}
317 [-]: SETTABLE  R37 K168 R38 ; R37["WaitingTransmissions"] := R38
318 [-]: SETTABLE  R37 K169 K8  ; R37["DelayTime"] := 0.000000
319 [-]: NEWTABLE  R38 0 0      ; R38 := {}
320 [-]: SETTABLE  R37 K170 R38 ; R37["Callbacks"] := R38
321 [-]: SETTABLE  R37 K171 K13 ; R37["Playing"] := false
322 [-]: NEWTABLE  R38 0 2      ; R38 := {}
323 [-]: SETTABLE  R38 K172 K23 ; R38["Avatar"] := nil
324 [-]: GETGLOBAL R39 K174     ; R39 := 0xa421af95
325 [-]: CALL      R39 1 2      ; R39 := R39()
326 [-]: SETTABLE  R38 K173 R39 ; R38["TargetPos"] := R39
327 [-]: LOADKB    R39 0 0      ; R39 := false
328 [-]: SETGLOBAL R39 K175     ; mAdditionalScreenCreated := R39
329 [-]: LOADKB    R39 0 0      ; R39 := false
330 [-]: SETGLOBAL R39 K176     ; mNewFriendRequests := R39
331 [-]: NEWTABLE  R39 0 0      ; R39 := {}
332 [-]: SETGLOBAL R39 K177     ; mFriendRequests := R39
333 [-]: LOADNIL   R39 R39      ; R39 := nil
334 [-]: SETGLOBAL R39 K178     ; mFriendRequestActiveNotification := R39
335 [-]: NEWTABLE  R39 0 6      ; R39 := {}
336 [-]: NEWTABLE  R40 0 0      ; R40 := {}
337 [-]: SETTABLE  R39 K179 R40 ; R39["mBoosterPackResults"] := R40
338 [-]: SETTABLE  R39 K180 K8  ; R39["mCurrentPack"] := 0.000000
339 [-]: SETTABLE  R39 K181 K8  ; R39["mNumberOfCardsInPack"] := 0.000000
340 [-]: SETTABLE  R39 K182 K17 ; R39["mBoosterPackItemString"] := ""
341 [-]: SETTABLE  R39 K183 K8  ; R39["mNumberOfPacksToProcess"] := 0.000000
342 [-]: SETTABLE  R39 K184 K8  ; R39["mTotalPacksToProcess"] := 0.000000
343 [-]: NEWTABLE  R40 0 2      ; R40 := {}
344 [-]: SETTABLE  R40 K165 K23 ; R40["Loader"] := nil
345 [-]: SETTABLE  R40 K118 K13 ; R40["IsLoading"] := false
346 [-]: NEWTABLE  R41 0 3      ; R41 := {}
347 [-]: SETTABLE  R41 K165 K23 ; R41["Loader"] := nil
348 [-]: SETTABLE  R41 K118 K13 ; R41["IsLoading"] := false
349 [-]: NEWTABLE  R42 0 0      ; R42 := {}
350 [-]: SETTABLE  R41 K185 R42 ; R41["Upgrades"] := R42
351 [-]: NEWTABLE  R42 0 5      ; R42 := {}
352 [-]: SETTABLE  R42 K186 K23 ; R42["movie"] := nil
353 [-]: SETTABLE  R42 K187 K23 ; R42["timerId"] := nil
354 [-]: SETTABLE  R42 K188 K189; R42["timeToCheckDelay"] := 0.200000
355 [-]: SETTABLE  R42 K190 K8  ; R42["timeOpen"] := 0.000000
356 [-]: SETTABLE  R42 K191 K192; R42["minimumDisplayTime"] := 2.000000
357 [-]: LOADNIL   R43 R44      ; R43 := R44 := nil
358 [-]: NEWTABLE  R45 0 8      ; R45 := {}
359 [-]: SETTABLE  R45 K193 K194; R45["REGULAR_CREDITS"] := "Credits"
360 [-]: SETTABLE  R45 K195 K196; R45["PREMIUM_CREDITS"] := "Platinum"
361 [-]: SETTABLE  R45 K197 K198; R45["PRIME_BUCKS"] := "PrimeBucks"
362 [-]: SETTABLE  R45 K199 K200; R45["PRIME_TOKENS"] := "PrimeTokens"
363 [-]: SETTABLE  R45 K201 K202; R45["STANDING"] := "Standing"
364 [-]: SETTABLE  R45 K203 K204; R45["AMBULAS_DATA"] := "AmbulasData"
365 [-]: SETTABLE  R45 K205 K206; R45["ITEMS"] := "Items"
366 [-]: SETTABLE  R45 K207 K208; R45["FOCUS_XP"] := "FocusXp"
367 [-]: NEWTABLE  R46 0 4      ; R46 := {}
368 [-]: SETTABLE  R46 K209 K8  ; R46["DEFAULT"] := 0.000000
369 [-]: SETTABLE  R46 K210 K211; R46["OVERRIDE"] := 1.000000
370 [-]: SETTABLE  R46 K212 K192; R46["QUEUE"] := 2.000000
371 [-]: SETTABLE  R46 K213 K4  ; R46["FORCE_QUEUE"] := 3.000000
372 [-]: CONST     R47 1        ; R47 := 1.000000
373 [-]: SETGLOBAL R47 K214     ; mRefreshHighPriorityMessages := R47
374 [-]: CONST     R47 1        ; R47 := 1.000000
375 [-]: SETGLOBAL R47 K215     ; mHighPriorityMessageDelay := R47
376 [-]: LOADKB    R47 0 0      ; R47 := false
377 [-]: SETGLOBAL R47 K216     ; mBoughtShipFeatureItem := R47
378 [-]: LOADNIL   R47 R50      ; R47 := R48 := R49 := R50 := nil
379 [-]: LOADKB    R51 0 0      ; R51 := false
380 [-]: LOADNIL   R52 R53      ; R52 := R53 := nil
381 [-]: GETGLOBAL R54 K45      ; R54 := 0x0469f296
382 [-]: LOADK     R55 K217     ; R55 := "TennoConRelay"
383 [-]: CALL      R54 2 2      ; R54 := R54(R55)
384 [-]: GETGLOBAL R55 K45      ; R55 := 0x0469f296
385 [-]: LOADK     R56 K218     ; R56 := "TennoConRelayB"
386 [-]: CALL      R55 2 2      ; R55 := R55(R56)
387 [-]: LOADNIL   R56 R56      ; R56 := nil
388 [-]: LOADKB    R57 0 0      ; R57 := false
389 [-]: CONST     R58 0        ; R58 := 0.000000
390 [-]: NEWTABLE  R59 0 7      ; R59 := {}
391 [-]: NEWTABLE  R60 0 1      ; R60 := {}
392 [-]: GETGLOBAL R61 K40      ; R61 := 0xb009bbc6
393 [-]: LOADK     R62 K222     ; R62 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanCorruptedAISpec"
394 [-]: CALL      R61 2 2      ; R61 := R61(R62)
395 [-]: SETTABLE  R60 K221 R61 ; R60["enemySpec"] := R61
396 [-]: SETTABLE  R59 K220 R60 ; R59[33.000000] := R60
397 [-]: NEWTABLE  R60 0 1      ; R60 := {}
398 [-]: GETGLOBAL R61 K40      ; R61 := 0xb009bbc6
399 [-]: LOADK     R62 K223     ; R62 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanExterminateSpec"
400 [-]: CALL      R61 2 2      ; R61 := R61(R62)
401 [-]: SETTABLE  R60 K221 R61 ; R60["enemySpec"] := R61
402 [-]: SETTABLE  R59 K211 R60 ; R59[1.000000] := R60
403 [-]: NEWTABLE  R60 0 1      ; R60 := {}
404 [-]: GETGLOBAL R61 K40      ; R61 := 0xb009bbc6
405 [-]: LOADK     R62 K224     ; R62 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanSurvival"
406 [-]: CALL      R61 2 2      ; R61 := R61(R62)
407 [-]: SETTABLE  R60 K221 R61 ; R60["enemySpec"] := R61
408 [-]: SETTABLE  R59 K192 R60 ; R59[2.000000] := R60
409 [-]: NEWTABLE  R60 0 1      ; R60 := {}
410 [-]: GETGLOBAL R61 K40      ; R61 := 0xb009bbc6
411 [-]: LOADK     R62 K226     ; R62 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanEndlessAssassinateSpec"
412 [-]: CALL      R61 2 2      ; R61 := R61(R62)
413 [-]: SETTABLE  R60 K221 R61 ; R60["enemySpec"] := R61
414 [-]: SETTABLE  R59 K225 R60 ; R59[8.000000] := R60
415 [-]: NEWTABLE  R60 0 1      ; R60 := {}
416 [-]: GETGLOBAL R61 K40      ; R61 := 0xb009bbc6
417 [-]: LOADK     R62 K227     ; R62 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanMobileDefenseSpec"
418 [-]: CALL      R61 2 2      ; R61 := R61(R62)
419 [-]: SETTABLE  R60 K221 R61 ; R60["enemySpec"] := R61
420 [-]: SETTABLE  R59 K2 R60   ; R59[9.000000] := R60
421 [-]: NEWTABLE  R60 0 1      ; R60 := {}
422 [-]: GETGLOBAL R61 K40      ; R61 := 0xb009bbc6
423 [-]: LOADK     R62 K224     ; R62 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanSurvival"
424 [-]: CALL      R61 2 2      ; R61 := R61(R62)
425 [-]: SETTABLE  R60 K221 R61 ; R60["enemySpec"] := R61
426 [-]: SETTABLE  R59 K228 R60 ; R59[34.000000] := R60
427 [-]: NEWTABLE  R60 0 1      ; R60 := {}
428 [-]: GETGLOBAL R61 K40      ; R61 := 0xb009bbc6
429 [-]: LOADK     R62 K226     ; R62 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanEndlessAssassinateSpec"
430 [-]: CALL      R61 2 2      ; R61 := R61(R62)
431 [-]: SETTABLE  R60 K221 R61 ; R60["enemySpec"] := R61
432 [-]: SETTABLE  R59 K229 R60 ; R59[35.000000] := R60
433 [-]: GETGLOBAL R60 K0       ; R60 := _T
434 [-]: SETTABLE  R60 K230 K23 ; R60["Notifications"] := nil
435 [-]: GETGLOBAL R60 K0       ; R60 := _T
436 [-]: NEWTABLE  R61 0 0      ; R61 := {}
437 [-]: SETTABLE  R60 K231 R61 ; R60["remoteSuitEntities"] := R61
438 [-]: GETGLOBAL R60 K0       ; R60 := _T
439 [-]: SETTABLE  R60 K232 K13 ; R60["ActiveQuestLoaded"] := false
440 [-]: GETGLOBAL R60 K0       ; R60 := _T
441 [-]: SETTABLE  R60 K233 K23 ; R60["NeedsGoalCheck"] := nil
442 [-]: GETGLOBAL R60 K49      ; R60 := 0x7ed0a956
443 [-]: LOADK     R61 K234     ; R61 := "/Lotus/Types/Items/ShipDecos/Vignettes/Warframes/WarframeAFItem"
444 [-]: CALL      R60 2 2      ; R60 := R60(R61)
445 [-]: GETGLOBAL R61 K49      ; R61 := 0x7ed0a956
446 [-]: LOADK     R62 K235     ; R62 := "/Lotus/Types/Items/MiscItems/Elitium"
447 [-]: CALL      R61 2 2      ; R61 := R61(R62)
448 [-]: GETGLOBAL R62 K49      ; R62 := 0x7ed0a956
449 [-]: LOADK     R63 K236     ; R63 := "/Lotus/Types/Enemies/TennoReplicants/SyndicateAllies/HexisAllyAgentDefense"
450 [-]: CALL      R62 2 2      ; R62 := R62(R63)
451 [-]: CLOSURE   R63 0        ; R63 := closure(Function #1)
452 [-]: SETGLOBAL R63 K79      ; Shutdown := R63
453 [-]: CLOSURE   R63 1        ; R63 := closure(Function #2)
454 [-]: CLOSURE   R64 2        ; R64 := closure(Function #3)
455 [-]: SETGLOBAL R64 K237     ; PurchasePlatinumFailed := R64
456 [-]: CLOSURE   R64 3        ; R64 := closure(Function #4)
457 [-]: MOVE      R0 R6        ; R0 := R6
458 [-]: MOVE      R0 R4        ; R0 := R4
459 [-]: CLOSURE   R65 4        ; R65 := closure(Function #5)
460 [-]: MOVE      R0 R64       ; R0 := R64
461 [-]: SETGLOBAL R65 K238     ; OnPurchasePlatinum := R65
462 [-]: CLOSURE   R65 5        ; R65 := closure(Function #6)
463 [-]: MOVE      R0 R64       ; R0 := R64
464 [-]: SETGLOBAL R65 K239     ; PurchasePlatinumOk := R65
465 [-]: CLOSURE   R65 6        ; R65 := closure(Function #7)
466 [-]: MOVE      R0 R6        ; R0 := R6
467 [-]: MOVE      R0 R4        ; R0 := R4
468 [-]: CLOSURE   R66 7        ; R66 := closure(Function #8)
469 [-]: MOVE      R0 R65       ; R0 := R65
470 [-]: SETGLOBAL R66 K240     ; PurchasePlatinumWithDialog := R66
471 [-]: CLOSURE   R66 8        ; R66 := closure(Function #9)
472 [-]: MOVE      R0 R4        ; R0 := R4
473 [-]: SETGLOBAL R66 K241     ; PurchasePrimeAccessPS4 := R66
474 [-]: CLOSURE   R66 9        ; R66 := closure(Function #10)
475 [-]: MOVE      R0 R45       ; R0 := R45
476 [-]: MOVE      R0 R6        ; R0 := R6
477 [-]: MOVE      R0 R4        ; R0 := R4
478 [-]: CLOSURE   R67 10       ; R67 := closure(Function #11)
479 [-]: MOVE      R0 R24       ; R0 := R24
480 [-]: MOVE      R0 R66       ; R0 := R66
481 [-]: MOVE      R0 R4        ; R0 := R4
482 [-]: SETGLOBAL R67 K242     ; ShowInsufficientFundsPopup := R67
483 [-]: CLOSURE   R67 11       ; R67 := closure(Function #12)
484 [-]: MOVE      R0 R6        ; R0 := R6
485 [-]: MOVE      R0 R4        ; R0 := R4
486 [-]: CLOSURE   R68 12       ; R68 := closure(Function #13)
487 [-]: CLOSURE   R69 13       ; R69 := closure(Function #14)
488 [-]: CLOSURE   R70 14       ; R70 := closure(Function #15)
489 [-]: MOVE      R0 R6        ; R0 := R6
490 [-]: MOVE      R0 R45       ; R0 := R45
491 [-]: MOVE      R0 R68       ; R0 := R68
492 [-]: MOVE      R0 R69       ; R0 := R69
493 [-]: CLOSURE   R71 15       ; R71 := closure(Function #16)
494 [-]: MOVE      R0 R70       ; R0 := R70
495 [-]: CLOSURE   R72 16       ; R72 := closure(Function #17)
496 [-]: MOVE      R0 R6        ; R0 := R6
497 [-]: SETGLOBAL R72 K243     ; OnSaveLoadOutComplete := R72
498 [-]: CLOSURE   R72 17       ; R72 := closure(Function #18)
499 [-]: SETGLOBAL R72 K244     ; AddToGear := R72
500 [-]: CLOSURE   R72 18       ; R72 := closure(Function #19)
501 [-]: MOVE      R0 R24       ; R0 := R24
502 [-]: MOVE      R0 R4        ; R0 := R4
503 [-]: CLOSURE   R73 19       ; R73 := closure(Function #20)
504 [-]: MOVE      R0 R45       ; R0 := R45
505 [-]: MOVE      R0 R4        ; R0 := R4
506 [-]: MOVE      R0 R6        ; R0 := R6
507 [-]: CLOSURE   R74 20       ; R74 := closure(Function #21)
508 [-]: MOVE      R0 R48       ; R0 := R48
509 [-]: MOVE      R0 R4        ; R0 := R4
510 [-]: MOVE      R0 R63       ; R0 := R63
511 [-]: SETGLOBAL R74 K245     ; OnPurchaseSlotResult := R74
512 [-]: CLOSURE   R74 21       ; R74 := closure(Function #22)
513 [-]: MOVE      R0 R66       ; R0 := R66
514 [-]: MOVE      R0 R45       ; R0 := R45
515 [-]: MOVE      R0 R48       ; R0 := R48
516 [-]: SETGLOBAL R74 K246     ; ConfirmSlotPurchase := R74
517 [-]: CLOSURE   R74 22       ; R74 := closure(Function #23)
518 [-]: MOVE      R0 R6        ; R0 := R6
519 [-]: MOVE      R0 R4        ; R0 := R4
520 [-]: CLOSURE   R75 23       ; R75 := closure(Function #24)
521 [-]: MOVE      R0 R6        ; R0 := R6
522 [-]: SETGLOBAL R75 K247     ; OnInvalidBinError := R75
523 [-]: CLOSURE   R75 24       ; R75 := closure(Function #25)
524 [-]: MOVE      R0 R4        ; R0 := R4
525 [-]: CLOSURE   R76 25       ; R76 := closure(Function #26)
526 [-]: MOVE      R0 R6        ; R0 := R6
527 [-]: MOVE      R0 R67       ; R0 := R67
528 [-]: MOVE      R0 R63       ; R0 := R63
529 [-]: MOVE      R0 R75       ; R0 := R75
530 [-]: MOVE      R0 R60       ; R0 := R60
531 [-]: MOVE      R0 R4        ; R0 := R4
532 [-]: MOVE      R0 R45       ; R0 := R45
533 [-]: MOVE      R0 R66       ; R0 := R66
534 [-]: MOVE      R0 R72       ; R0 := R72
535 [-]: MOVE      R0 R74       ; R0 := R74
536 [-]: MOVE      R0 R73       ; R0 := R73
537 [-]: CLOSURE   R77 26       ; R77 := closure(Function #27)
538 [-]: MOVE      R0 R76       ; R0 := R76
539 [-]: SETGLOBAL R77 K248     ; CheckPurchaseRequirements := R77
540 [-]: CLOSURE   R77 27       ; R77 := closure(Function #28)
541 [-]: MOVE      R0 R71       ; R0 := R71
542 [-]: MOVE      R0 R45       ; R0 := R45
543 [-]: MOVE      R0 R4        ; R0 := R4
544 [-]: MOVE      R0 R6        ; R0 := R6
545 [-]: MOVE      R0 R72       ; R0 := R72
546 [-]: MOVE      R0 R76       ; R0 := R76
547 [-]: CLOSURE   R78 28       ; R78 := closure(Function #29)
548 [-]: MOVE      R0 R77       ; R0 := R77
549 [-]: SETGLOBAL R78 K249     ; ShowUpgradeDurabilityPopupForGifting := R78
550 [-]: CLOSURE   R78 29       ; R78 := closure(Function #30)
551 [-]: MOVE      R0 R72       ; R0 := R72
552 [-]: SETGLOBAL R78 K250     ; ConfirmCurrency := R78
553 [-]: CLOSURE   R78 30       ; R78 := closure(Function #31)
554 [-]: SETGLOBAL R78 K251     ; GetScreenStackSize := R78
555 [-]: CLOSURE   R78 31       ; R78 := closure(Function #32)
556 [-]: CLOSURE   R79 32       ; R79 := closure(Function #33)
557 [-]: MOVE      R0 R78       ; R0 := R78
558 [-]: CLOSURE   R80 33       ; R80 := closure(Function #34)
559 [-]: MOVE      R0 R78       ; R0 := R78
560 [-]: CLOSURE   R81 34       ; R81 := closure(Function #35)
561 [-]: CLOSURE   R82 35       ; R82 := closure(Function #36)
562 [-]: CLOSURE   R83 36       ; R83 := closure(Function #37)
563 [-]: MOVE      R0 R6        ; R0 := R6
564 [-]: MOVE      R0 R81       ; R0 := R81
565 [-]: MOVE      R0 R23       ; R0 := R23
566 [-]: MOVE      R0 R82       ; R0 := R82
567 [-]: MOVE      R0 R17       ; R0 := R17
568 [-]: MOVE      R0 R35       ; R0 := R35
569 [-]: CLOSURE   R84 37       ; R84 := closure(Function #38)
570 [-]: SETGLOBAL R84 K252     ; IsMenuSuitAvatarShowing := R84
571 [-]: CLOSURE   R84 38       ; R84 := closure(Function #39)
572 [-]: MOVE      R0 R83       ; R0 := R83
573 [-]: SETGLOBAL R84 K253     ; SetupMenuSuit := R84
574 [-]: CLOSURE   R84 39       ; R84 := closure(Function #40)
575 [-]: MOVE      R0 R34       ; R0 := R34
576 [-]: CLOSURE   R85 40       ; R85 := closure(Function #41)
577 [-]: MOVE      R0 R84       ; R0 := R84
578 [-]: MOVE      R0 R2        ; R0 := R2
579 [-]: MOVE      R0 R6        ; R0 := R6
580 [-]: SETGLOBAL R85 K254     ; OnInitialInventorySync := R85
581 [-]: CLOSURE   R85 41       ; R85 := closure(Function #42)
582 [-]: SETGLOBAL R85 K255     ; OnInboxSync := R85
583 [-]: CLOSURE   R85 42       ; R85 := closure(Function #43)
584 [-]: MOVE      R0 R4        ; R0 := R4
585 [-]: SETGLOBAL R85 K256     ; OnSyncTwitchDrops := R85
586 [-]: CLOSURE   R85 43       ; R85 := closure(Function #44)
587 [-]: MOVE      R0 R4        ; R0 := R4
588 [-]: SETGLOBAL R85 K257     ; OnSyncAmazonEntitlemments := R85
589 [-]: CLOSURE   R85 44       ; R85 := closure(Function #45)
590 [-]: SETGLOBAL R85 K258     ; OnLoginRewardSync := R85
591 [-]: CLOSURE   R85 45       ; R85 := closure(Function #46)
592 [-]: CLOSURE   R86 46       ; R86 := closure(Function #47)
593 [-]: MOVE      R0 R6        ; R0 := R6
594 [-]: MOVE      R0 R79       ; R0 := R79
595 [-]: MOVE      R0 R83       ; R0 := R83
596 [-]: CLOSURE   R87 47       ; R87 := closure(Function #48)
597 [-]: MOVE      R0 R49       ; R0 := R49
598 [-]: CLOSURE   R88 48       ; R88 := closure(Function #49)
599 [-]: CLOSURE   R89 49       ; R89 := closure(Function #50)
600 [-]: MOVE      R0 R4        ; R0 := R4
601 [-]: MOVE      R0 R6        ; R0 := R6
602 [-]: CLOSURE   R90 50       ; R90 := closure(Function #51)
603 [-]: MOVE      R0 R89       ; R0 := R89
604 [-]: SETGLOBAL R90 K259     ; PlayCameraTransition := R90
605 [-]: CLOSURE   R90 51       ; R90 := closure(Function #52)
606 [-]: CLOSURE   R91 52       ; R91 := closure(Function #53)
607 [-]: MOVE      R0 R90       ; R0 := R90
608 [-]: SETGLOBAL R91 K260     ; ClearCurrentCameraSpot := R91
609 [-]: CLOSURE   R91 53       ; R91 := closure(Function #54)
610 [-]: MOVE      R0 R26       ; R0 := R26
611 [-]: CLOSURE   R92 54       ; R92 := closure(Function #55)
612 [-]: MOVE      R0 R91       ; R0 := R91
613 [-]: SETGLOBAL R92 K261     ; FadeInOut := R92
614 [-]: CLOSURE   R92 55       ; R92 := closure(Function #56)
615 [-]: MOVE      R0 R28       ; R0 := R28
616 [-]: CLOSURE   R48 56       ; R48 := closure(Function #57)
617 [-]: MOVE      R0 R4        ; R0 := R4
618 [-]: CLOSURE   R93 57       ; R93 := closure(Function #58)
619 [-]: MOVE      R0 R48       ; R0 := R48
620 [-]: SETGLOBAL R93 K262     ; ShowBlockingMessage := R93
621 [-]: CLOSURE   R93 58       ; R93 := closure(Function #59)
622 [-]: MOVE      R0 R47       ; R0 := R47
623 [-]: SETGLOBAL R93 K263     ; NotifyWorldStateChanged := R93
624 [-]: CLOSURE   R93 59       ; R93 := closure(Function #60)
625 [-]: MOVE      R0 R48       ; R0 := R48
626 [-]: CLOSURE   R94 60       ; R94 := closure(Function #61)
627 [-]: CLOSURE   R95 61       ; R95 := closure(Function #62)
628 [-]: MOVE      R0 R94       ; R0 := R94
629 [-]: SETGLOBAL R95 K264     ; SetGlobalLobbyMessage := R95
630 [-]: CLOSURE   R95 62       ; R95 := closure(Function #63)
631 [-]: CLOSURE   R96 63       ; R96 := closure(Function #64)
632 [-]: CLOSURE   R97 64       ; R97 := closure(Function #65)
633 [-]: MOVE      R0 R6        ; R0 := R6
634 [-]: MOVE      R0 R33       ; R0 := R33
635 [-]: CLOSURE   R98 65       ; R98 := closure(Function #66)
636 [-]: MOVE      R0 R6        ; R0 := R6
637 [-]: MOVE      R0 R33       ; R0 := R33
638 [-]: CLOSURE   R99 66       ; R99 := closure(Function #67)
639 [-]: MOVE      R0 R47       ; R0 := R47
640 [-]: CLOSURE   R100 67      ; R100 := closure(Function #68)
641 [-]: MOVE      R0 R9        ; R0 := R9
642 [-]: MOVE      R0 R99       ; R0 := R99
643 [-]: CLOSURE   R101 68      ; R101 := closure(Function #69)
644 [-]: MOVE      R0 R32       ; R0 := R32
645 [-]: SETGLOBAL R101 K265    ; QuestCompleted := R101
646 [-]: CLOSURE   R101 69      ; R101 := closure(Function #70)
647 [-]: MOVE      R0 R6        ; R0 := R6
648 [-]: CLOSURE   R102 70      ; R102 := closure(Function #71)
649 [-]: MOVE      R0 R101      ; R0 := R101
650 [-]: SETGLOBAL R102 K266    ; CheckQuests := R102
651 [-]: CLOSURE   R102 71      ; R102 := closure(Function #72)
652 [-]: MOVE      R0 R21       ; R0 := R21
653 [-]: CLOSURE   R103 72      ; R103 := closure(Function #73)
654 [-]: MOVE      R0 R4        ; R0 := R4
655 [-]: MOVE      R0 R41       ; R0 := R41
656 [-]: MOVE      R0 R102      ; R0 := R102
657 [-]: MOVE      R0 R6        ; R0 := R6
658 [-]: MOVE      R0 R96       ; R0 := R96
659 [-]: CLOSURE   R104 73      ; R104 := closure(Function #74)
660 [-]: MOVE      R0 R6        ; R0 := R6
661 [-]: MOVE      R0 R28       ; R0 := R28
662 [-]: MOVE      R0 R7        ; R0 := R7
663 [-]: MOVE      R0 R4        ; R0 := R4
664 [-]: MOVE      R0 R0        ; R0 := R0
665 [-]: MOVE      R0 R1        ; R0 := R1
666 [-]: CLOSURE   R105 74      ; R105 := closure(Function #75)
667 [-]: MOVE      R0 R6        ; R0 := R6
668 [-]: MOVE      R0 R28       ; R0 := R28
669 [-]: MOVE      R0 R4        ; R0 := R4
670 [-]: MOVE      R0 R62       ; R0 := R62
671 [-]: MOVE      R0 R61       ; R0 := R61
672 [-]: CLOSURE   R106 75      ; R106 := closure(Function #76)
673 [-]: MOVE      R0 R6        ; R0 := R6
674 [-]: MOVE      R0 R28       ; R0 := R28
675 [-]: MOVE      R0 R4        ; R0 := R4
676 [-]: CLOSURE   R107 76      ; R107 := closure(Function #77)
677 [-]: MOVE      R0 R6        ; R0 := R6
678 [-]: MOVE      R0 R4        ; R0 := R4
679 [-]: MOVE      R0 R2        ; R0 := R2
680 [-]: CLOSURE   R108 77      ; R108 := closure(Function #78)
681 [-]: MOVE      R0 R56       ; R0 := R56
682 [-]: SETGLOBAL R108 K267    ; OnClaimRelayTasksComplete := R108
683 [-]: CLOSURE   R108 78      ; R108 := closure(Function #79)
684 [-]: MOVE      R0 R53       ; R0 := R53
685 [-]: CLOSURE   R109 79      ; R109 := closure(Function #80)
686 [-]: MOVE      R0 R109      ; R0 := R109
687 [-]: CLOSURE   R110 80      ; R110 := closure(Function #81)
688 [-]: MOVE      R0 R20       ; R0 := R20
689 [-]: MOVE      R0 R6        ; R0 := R6
690 [-]: MOVE      R0 R109      ; R0 := R109
691 [-]: MOVE      R0 R4        ; R0 := R4
692 [-]: CLOSURE   R111 81      ; R111 := closure(Function #82)
693 [-]: MOVE      R0 R59       ; R0 := R59
694 [-]: CLOSURE   R50 82       ; R50 := closure(Function #83)
695 [-]: MOVE      R0 R53       ; R0 := R53
696 [-]: MOVE      R0 R6        ; R0 := R6
697 [-]: MOVE      R0 R99       ; R0 := R99
698 [-]: MOVE      R0 R19       ; R0 := R19
699 [-]: MOVE      R0 R12       ; R0 := R12
700 [-]: MOVE      R0 R18       ; R0 := R18
701 [-]: MOVE      R0 R54       ; R0 := R54
702 [-]: MOVE      R0 R4        ; R0 := R4
703 [-]: MOVE      R0 R16       ; R0 := R16
704 [-]: MOVE      R0 R9        ; R0 := R9
705 [-]: MOVE      R0 R100      ; R0 := R100
706 [-]: MOVE      R0 R10       ; R0 := R10
707 [-]: MOVE      R0 R11       ; R0 := R11
708 [-]: MOVE      R0 R106      ; R0 := R106
709 [-]: MOVE      R0 R104      ; R0 := R104
710 [-]: MOVE      R0 R105      ; R0 := R105
711 [-]: MOVE      R0 R107      ; R0 := R107
712 [-]: MOVE      R0 R108      ; R0 := R108
713 [-]: MOVE      R0 R110      ; R0 := R110
714 [-]: MOVE      R0 R111      ; R0 := R111
715 [-]: CLOSURE   R112 83      ; R112 := closure(Function #84)
716 [-]: MOVE      R0 R4        ; R0 := R4
717 [-]: CLOSURE   R113 84      ; R113 := closure(Function #85)
718 [-]: MOVE      R0 R112      ; R0 := R112
719 [-]: SETGLOBAL R113 K268    ; ShowRequireExitMessage := R113
720 [-]: CLOSURE   R113 85      ; R113 := closure(Function #86)
721 [-]: MOVE      R0 R109      ; R0 := R109
722 [-]: SETGLOBAL R113 K269    ; RequiemMovieDone := R113
723 [-]: CLOSURE   R113 86      ; R113 := closure(Function #87)
724 [-]: MOVE      R0 R6        ; R0 := R6
725 [-]: MOVE      R0 R110      ; R0 := R110
726 [-]: SETGLOBAL R113 K270    ; OnInventorySyncCallback := R113
727 [-]: CLOSURE   R113 87      ; R113 := closure(Function #88)
728 [-]: MOVE      R0 R6        ; R0 := R6
729 [-]: MOVE      R0 R30       ; R0 := R30
730 [-]: MOVE      R0 R29       ; R0 := R29
731 [-]: MOVE      R0 R112      ; R0 := R112
732 [-]: MOVE      R0 R31       ; R0 := R31
733 [-]: MOVE      R0 R50       ; R0 := R50
734 [-]: SETGLOBAL R113 K271    ; OnSyncWorldState := R113
735 [-]: CLOSURE   R113 88      ; R113 := closure(Function #89)
736 [-]: MOVE      R0 R28       ; R0 := R28
737 [-]: CLOSURE   R114 89      ; R114 := closure(Function #90)
738 [-]: CLOSURE   R115 90      ; R115 := closure(Function #91)
739 [-]: MOVE      R0 R4        ; R0 := R4
740 [-]: MOVE      R0 R113      ; R0 := R113
741 [-]: SETGLOBAL R115 K272    ; RegisterWorldStateCallback := R115
742 [-]: CLOSURE   R115 91      ; R115 := closure(Function #92)
743 [-]: MOVE      R0 R46       ; R0 := R46
744 [-]: MOVE      R0 R37       ; R0 := R37
745 [-]: CLOSURE   R47 92       ; R47 := closure(Function #93)
746 [-]: MOVE      R0 R50       ; R0 := R50
747 [-]: CLOSURE   R116 93      ; R116 := closure(Function #94)
748 [-]: MOVE      R0 R38       ; R0 := R38
749 [-]: CLOSURE   R117 94      ; R117 := closure(Function #95)
750 [-]: MOVE      R0 R36       ; R0 := R36
751 [-]: CLOSURE   R118 95      ; R118 := closure(Function #96)
752 [-]: MOVE      R0 R117      ; R0 := R117
753 [-]: CLOSURE   R119 96      ; R119 := closure(Function #97)
754 [-]: MOVE      R0 R118      ; R0 := R118
755 [-]: MOVE      R0 R36       ; R0 := R36
756 [-]: SETGLOBAL R119 K273    ; ToggleOmegaDiorama := R119
757 [-]: CLOSURE   R119 97      ; R119 := closure(Function #98)
758 [-]: MOVE      R0 R32       ; R0 := R32
759 [-]: MOVE      R0 R97       ; R0 := R97
760 [-]: MOVE      R0 R100      ; R0 := R100
761 [-]: CLOSURE   R120 98      ; R120 := closure(Function #99)
762 [-]: MOVE      R0 R6        ; R0 := R6
763 [-]: CLOSURE   R121 99      ; R121 := closure(Function #100)
764 [-]: MOVE      R0 R4        ; R0 := R4
765 [-]: SETGLOBAL R121 K274    ; OnRerollsCompleted := R121
766 [-]: CLOSURE   R121 100     ; R121 := closure(Function #101)
767 [-]: MOVE      R0 R36       ; R0 := R36
768 [-]: SETGLOBAL R121 K275    ; OnFinishedShowingIdentifiedOmegas := R121
769 [-]: CLOSURE   R121 101     ; R121 := closure(Function #102)
770 [-]: MOVE      R0 R32       ; R0 := R32
771 [-]: MOVE      R0 R98       ; R0 := R98
772 [-]: MOVE      R0 R34       ; R0 := R34
773 [-]: MOVE      R0 R118      ; R0 := R118
774 [-]: CLOSURE   R122 102     ; R122 := closure(Function #103)
775 [-]: MOVE      R0 R35       ; R0 := R35
776 [-]: MOVE      R0 R32       ; R0 := R32
777 [-]: MOVE      R0 R98       ; R0 := R98
778 [-]: MOVE      R0 R13       ; R0 := R13
779 [-]: CLOSURE   R123 103     ; R123 := closure(Function #104)
780 [-]: MOVE      R0 R4        ; R0 := R4
781 [-]: MOVE      R0 R6        ; R0 := R6
782 [-]: MOVE      R0 R86       ; R0 := R86
783 [-]: MOVE      R0 R82       ; R0 := R82
784 [-]: MOVE      R0 R83       ; R0 := R83
785 [-]: MOVE      R0 R3        ; R0 := R3
786 [-]: MOVE      R0 R92       ; R0 := R92
787 [-]: MOVE      R0 R48       ; R0 := R48
788 [-]: CLOSURE   R124 104     ; R124 := closure(Function #105)
789 [-]: MOVE      R0 R22       ; R0 := R22
790 [-]: SETGLOBAL R124 K276    ; OnVignetteStreamed := R124
791 [-]: CLOSURE   R124 105     ; R124 := closure(Function #106)
792 [-]: MOVE      R0 R22       ; R0 := R22
793 [-]: SETGLOBAL R124 K277    ; OnVignetteRemoved := R124
794 [-]: CLOSURE   R124 106     ; R124 := closure(Function #107)
795 [-]: MOVE      R0 R37       ; R0 := R37
796 [-]: MOVE      R0 R14       ; R0 := R14
797 [-]: CLOSURE   R125 107     ; R125 := closure(Function #108)
798 [-]: CLOSURE   R126 108     ; R126 := closure(Function #109)
799 [-]: CLOSURE   R127 109     ; R127 := closure(Function #110)
800 [-]: MOVE      R0 R126      ; R0 := R126
801 [-]: CLOSURE   R128 110     ; R128 := closure(Function #111)
802 [-]: SETGLOBAL R128 K278    ; FriendRequestReceived := R128
803 [-]: CLOSURE   R128 111     ; R128 := closure(Function #112)
804 [-]: MOVE      R0 R4        ; R0 := R4
805 [-]: SETGLOBAL R128 K279    ; FriendNotificationSelected := R128
806 [-]: CLOSURE   R128 112     ; R128 := closure(Function #113)
807 [-]: MOVE      R0 R126      ; R0 := R126
808 [-]: SETGLOBAL R128 K280    ; FriendRequestOptionChosen := R128
809 [-]: CLOSURE   R128 113     ; R128 := closure(Function #114)
810 [-]: MOVE      R0 R4        ; R0 := R4
811 [-]: SETGLOBAL R128 K281    ; OnGetFriendsResult := R128
812 [-]: CLOSURE   R128 114     ; R128 := closure(Function #115)
813 [-]: MOVE      R0 R4        ; R0 := R4
814 [-]: CLOSURE   R129 115     ; R129 := closure(Function #116)
815 [-]: MOVE      R0 R128      ; R0 := R128
816 [-]: SETGLOBAL R129 K282    ; OnConfirmFriendResult := R129
817 [-]: CLOSURE   R129 116     ; R129 := closure(Function #117)
818 [-]: MOVE      R0 R128      ; R0 := R128
819 [-]: SETGLOBAL R129 K283    ; OnRemoveFriendResult := R129
820 [-]: CLOSURE   R129 117     ; R129 := closure(Function #118)
821 [-]: MOVE      R0 R4        ; R0 := R4
822 [-]: SETGLOBAL R129 K284    ; OnLeaveDojoSquadDone := R129
823 [-]: CLOSURE   R129 118     ; R129 := closure(Function #119)
824 [-]: MOVE      R0 R52       ; R0 := R52
825 [-]: MOVE      R0 R5        ; R0 := R5
826 [-]: MOVE      R0 R4        ; R0 := R4
827 [-]: MOVE      R0 R6        ; R0 := R6
828 [-]: MOVE      R0 R8        ; R0 := R8
829 [-]: CLOSURE   R130 119     ; R130 := closure(Function #120)
830 [-]: MOVE      R0 R6        ; R0 := R6
831 [-]: CLOSURE   R131 120     ; R131 := closure(Function #121)
832 [-]: MOVE      R0 R130      ; R0 := R130
833 [-]: CLOSURE   R132 121     ; R132 := closure(Function #122)
834 [-]: MOVE      R0 R15       ; R0 := R15
835 [-]: CLOSURE   R133 122     ; R133 := closure(Function #123)
836 [-]: MOVE      R0 R15       ; R0 := R15
837 [-]: CLOSURE   R134 123     ; R134 := closure(Function #124)
838 [-]: MOVE      R0 R15       ; R0 := R15
839 [-]: MOVE      R0 R132      ; R0 := R132
840 [-]: MOVE      R0 R133      ; R0 := R133
841 [-]: CLOSURE   R135 124     ; R135 := closure(Function #125)
842 [-]: MOVE      R0 R134      ; R0 := R134
843 [-]: SETGLOBAL R135 K285    ; StyleChangedCallback := R135
844 [-]: CLOSURE   R135 125     ; R135 := closure(Function #126)
845 [-]: MOVE      R0 R134      ; R0 := R134
846 [-]: MOVE      R0 R41       ; R0 := R41
847 [-]: MOVE      R0 R4        ; R0 := R4
848 [-]: MOVE      R0 R40       ; R0 := R40
849 [-]: MOVE      R0 R101      ; R0 := R101
850 [-]: MOVE      R0 R22       ; R0 := R22
851 [-]: MOVE      R0 R57       ; R0 := R57
852 [-]: MOVE      R0 R6        ; R0 := R6
853 [-]: MOVE      R0 R28       ; R0 := R28
854 [-]: MOVE      R0 R83       ; R0 := R83
855 [-]: MOVE      R0 R86       ; R0 := R86
856 [-]: MOVE      R0 R87       ; R0 := R87
857 [-]: MOVE      R0 R103      ; R0 := R103
858 [-]: MOVE      R0 R123      ; R0 := R123
859 [-]: MOVE      R0 R125      ; R0 := R125
860 [-]: MOVE      R0 R121      ; R0 := R121
861 [-]: MOVE      R0 R122      ; R0 := R122
862 [-]: MOVE      R0 R131      ; R0 := R131
863 [-]: MOVE      R0 R119      ; R0 := R119
864 [-]: MOVE      R0 R120      ; R0 := R120
865 [-]: MOVE      R0 R2        ; R0 := R2
866 [-]: MOVE      R0 R63       ; R0 := R63
867 [-]: MOVE      R0 R31       ; R0 := R31
868 [-]: MOVE      R0 R92       ; R0 := R92
869 [-]: MOVE      R0 R112      ; R0 := R112
870 [-]: MOVE      R0 R17       ; R0 := R17
871 [-]: MOVE      R0 R37       ; R0 := R37
872 [-]: MOVE      R0 R14       ; R0 := R14
873 [-]: MOVE      R0 R124      ; R0 := R124
874 [-]: MOVE      R0 R38       ; R0 := R38
875 [-]: MOVE      R0 R52       ; R0 := R52
876 [-]: MOVE      R0 R129      ; R0 := R129
877 [-]: MOVE      R0 R26       ; R0 := R26
878 [-]: MOVE      R0 R27       ; R0 := R27
879 [-]: MOVE      R0 R43       ; R0 := R43
880 [-]: MOVE      R0 R44       ; R0 := R44
881 [-]: MOVE      R0 R127      ; R0 := R127
882 [-]: SETGLOBAL R135 K286    ; Update := R135
883 [-]: CLOSURE   R135 126     ; R135 := closure(Function #127)
884 [-]: CLOSURE   R136 127     ; R136 := closure(Function #128)
885 [-]: MOVE      R0 R3        ; R0 := R3
886 [-]: MOVE      R0 R79       ; R0 := R79
887 [-]: CLOSURE   R137 128     ; R137 := closure(Function #129)
888 [-]: MOVE      R0 R3        ; R0 := R3
889 [-]: MOVE      R0 R80       ; R0 := R80
890 [-]: CLOSURE   R138 129     ; R138 := closure(Function #130)
891 [-]: MOVE      R0 R3        ; R0 := R3
892 [-]: SETGLOBAL R138 K287    ; ForceClearChildMovie := R138
893 [-]: CLOSURE   R138 130     ; R138 := closure(Function #131)
894 [-]: MOVE      R0 R48       ; R0 := R48
895 [-]: SETGLOBAL R138 K288    ; OnMovieLoaded := R138
896 [-]: CLOSURE   R138 131     ; R138 := closure(Function #132)
897 [-]: MOVE      R0 R3        ; R0 := R3
898 [-]: MOVE      R0 R95       ; R0 := R95
899 [-]: MOVE      R0 R48       ; R0 := R48
900 [-]: MOVE      R0 R78       ; R0 := R78
901 [-]: CLOSURE   R139 132     ; R139 := closure(Function #133)
902 [-]: MOVE      R0 R138      ; R0 := R138
903 [-]: SETGLOBAL R139 K289    ; OpenScreenAsyncContextReset := R139
904 [-]: CLOSURE   R139 133     ; R139 := closure(Function #134)
905 [-]: CLOSURE   R140 134     ; R140 := closure(Function #135)
906 [-]: MOVE      R0 R48       ; R0 := R48
907 [-]: CLOSURE   R141 135     ; R141 := closure(Function #136)
908 [-]: MOVE      R0 R140      ; R0 := R140
909 [-]: SETGLOBAL R141 K290    ; TerminateQuickMatch := R141
910 [-]: CLOSURE   R141 136     ; R141 := closure(Function #137)
911 [-]: MOVE      R0 R135      ; R0 := R135
912 [-]: MOVE      R0 R80       ; R0 := R80
913 [-]: MOVE      R0 R4        ; R0 := R4
914 [-]: CLOSURE   R142 137     ; R142 := closure(Function #138)
915 [-]: MOVE      R0 R6        ; R0 := R6
916 [-]: MOVE      R0 R88       ; R0 := R88
917 [-]: MOVE      R0 R93       ; R0 := R93
918 [-]: MOVE      R0 R3        ; R0 := R3
919 [-]: MOVE      R0 R95       ; R0 := R95
920 [-]: MOVE      R0 R80       ; R0 := R80
921 [-]: MOVE      R0 R4        ; R0 := R4
922 [-]: MOVE      R0 R79       ; R0 := R79
923 [-]: CLOSURE   R143 138     ; R143 := closure(Function #139)
924 [-]: MOVE      R0 R3        ; R0 := R3
925 [-]: MOVE      R0 R79       ; R0 := R79
926 [-]: CLOSURE   R144 139     ; R144 := closure(Function #140)
927 [-]: CLOSURE   R145 140     ; R145 := closure(Function #141)
928 [-]: MOVE      R0 R78       ; R0 := R78
929 [-]: CLOSURE   R146 141     ; R146 := closure(Function #142)
930 [-]: CLOSURE   R147 142     ; R147 := closure(Function #143)
931 [-]: MOVE      R0 R146      ; R0 := R146
932 [-]: CLOSURE   R148 143     ; R148 := closure(Function #144)
933 [-]: CLOSURE   R149 144     ; R149 := closure(Function #145)
934 [-]: MOVE      R0 R148      ; R0 := R148
935 [-]: SETGLOBAL R149 K291    ; ClearToMainMenu := R149
936 [-]: CLOSURE   R149 145     ; R149 := closure(Function #146)
937 [-]: MOVE      R0 R148      ; R0 := R148
938 [-]: MOVE      R0 R142      ; R0 := R142
939 [-]: MOVE      R0 R147      ; R0 := R147
940 [-]: CLOSURE   R150 146     ; R150 := closure(Function #147)
941 [-]: MOVE      R0 R88       ; R0 := R88
942 [-]: MOVE      R0 R93       ; R0 := R93
943 [-]: MOVE      R0 R3        ; R0 := R3
944 [-]: MOVE      R0 R80       ; R0 := R80
945 [-]: CLOSURE   R151 147     ; R151 := closure(Function #148)
946 [-]: CLOSURE   R152 148     ; R152 := closure(Function #149)
947 [-]: MOVE      R0 R4        ; R0 := R4
948 [-]: MOVE      R0 R6        ; R0 := R6
949 [-]: CLOSURE   R153 149     ; R153 := closure(Function #150)
950 [-]: MOVE      R0 R6        ; R0 := R6
951 [-]: CLOSURE   R154 150     ; R154 := closure(Function #151)
952 [-]: SETGLOBAL R154 K292    ; OnFcmKickOut := R154
953 [-]: CLOSURE   R154 151     ; R154 := closure(Function #152)
954 [-]: MOVE      R0 R4        ; R0 := R4
955 [-]: SETGLOBAL R154 K293    ; OnWeGamePopUp := R154
956 [-]: CLOSURE   R154 152     ; R154 := closure(Function #153)
957 [-]: MOVE      R0 R42       ; R0 := R42
958 [-]: MOVE      R0 R154      ; R0 := R154
959 [-]: CLOSURE   R155 153     ; R155 := closure(Function #154)
960 [-]: MOVE      R0 R15       ; R0 := R15
961 [-]: SETGLOBAL R155 K294    ; ToggleForcedColorCorrection := R155
962 [-]: CLOSURE   R155 154     ; R155 := closure(Function #155)
963 [-]: MOVE      R0 R133      ; R0 := R133
964 [-]: MOVE      R0 R6        ; R0 := R6
965 [-]: MOVE      R0 R22       ; R0 := R22
966 [-]: MOVE      R0 R8        ; R0 := R8
967 [-]: MOVE      R0 R33       ; R0 := R33
968 [-]: MOVE      R0 R24       ; R0 := R24
969 [-]: MOVE      R0 R4        ; R0 := R4
970 [-]: MOVE      R0 R151      ; R0 := R151
971 [-]: MOVE      R0 R154      ; R0 := R154
972 [-]: MOVE      R0 R138      ; R0 := R138
973 [-]: MOVE      R0 R139      ; R0 := R139
974 [-]: MOVE      R0 R142      ; R0 := R142
975 [-]: MOVE      R0 R149      ; R0 := R149
976 [-]: MOVE      R0 R150      ; R0 := R150
977 [-]: MOVE      R0 R141      ; R0 := R141
978 [-]: MOVE      R0 R135      ; R0 := R135
979 [-]: MOVE      R0 R95       ; R0 := R95
980 [-]: MOVE      R0 R146      ; R0 := R146
981 [-]: MOVE      R0 R143      ; R0 := R143
982 [-]: MOVE      R0 R144      ; R0 := R144
983 [-]: MOVE      R0 R136      ; R0 := R136
984 [-]: MOVE      R0 R137      ; R0 := R137
985 [-]: MOVE      R0 R145      ; R0 := R145
986 [-]: MOVE      R0 R152      ; R0 := R152
987 [-]: MOVE      R0 R153      ; R0 := R153
988 [-]: MOVE      R0 R85       ; R0 := R85
989 [-]: MOVE      R0 R115      ; R0 := R115
990 [-]: MOVE      R0 R116      ; R0 := R116
991 [-]: MOVE      R0 R50       ; R0 := R50
992 [-]: MOVE      R0 R113      ; R0 := R113
993 [-]: MOVE      R0 R28       ; R0 := R28
994 [-]: MOVE      R0 R17       ; R0 := R17
995 [-]: MOVE      R0 R117      ; R0 := R117
996 [-]: SETGLOBAL R155 K295    ; Initialize := R155
997 [-]: CLOSURE   R155 155     ; R155 := closure(Function #156)
998 [-]: MOVE      R0 R4        ; R0 := R4
999 [-]: SETGLOBAL R155 K296    ; Logoff := R155
1000 [-]: CLOSURE   R155 156     ; R155 := closure(Function #157)
1001 [-]: SETGLOBAL R155 K297    ; DebugSwitchProfile := R155
1002 [-]: CLOSURE   R155 157     ; R155 := closure(Function #158)
1003 [-]: MOVE      R0 R93       ; R0 := R93
1004 [-]: MOVE      R0 R91       ; R0 := R91
1005 [-]: MOVE      R0 R92       ; R0 := R92
1006 [-]: SETGLOBAL R155 K298    ; ConfirmLogoff := R155
1007 [-]: CLOSURE   R155 158     ; R155 := closure(Function #159)
1008 [-]: CLOSURE   R156 159     ; R156 := closure(Function #160)
1009 [-]: MOVE      R0 R155      ; R0 := R155
1010 [-]: SETGLOBAL R156 K299    ; CallMethodOnScreen := R156
1011 [-]: CLOSURE   R156 160     ; R156 := closure(Function #161)
1012 [-]: SETGLOBAL R156 K300    ; CallMethodOnScreenString := R156
1013 [-]: CLOSURE   R156 161     ; R156 := closure(Function #162)
1014 [-]: MOVE      R0 R155      ; R0 := R155
1015 [-]: SETGLOBAL R156 K301    ; CallMethodOnTopScreen := R156
1016 [-]: CLOSURE   R156 162     ; R156 := closure(Function #163)
1017 [-]: MOVE      R0 R4        ; R0 := R4
1018 [-]: SETGLOBAL R156 K302    ; SetBackgroundDepthTest := R156
1019 [-]: CLOSURE   R156 163     ; R156 := closure(Function #164)
1020 [-]: SETGLOBAL R156 K303    ; RefreshLoadout := R156
1021 [-]: CLOSURE   R156 164     ; R156 := closure(Function #165)
1022 [-]: SETGLOBAL R156 K304    ; CloseLoadout := R156
1023 [-]: CLOSURE   R156 165     ; R156 := closure(Function #166)
1024 [-]: MOVE      R0 R48       ; R0 := R48
1025 [-]: CLOSURE   R157 166     ; R157 := closure(Function #167)
1026 [-]: MOVE      R0 R48       ; R0 := R48
1027 [-]: CLOSURE   R158 167     ; R158 := closure(Function #168)
1028 [-]: MOVE      R0 R39       ; R0 := R39
1029 [-]: MOVE      R0 R4        ; R0 := R4
1030 [-]: CLOSURE   R159 168     ; R159 := closure(Function #169)
1031 [-]: MOVE      R0 R158      ; R0 := R158
1032 [-]: SETGLOBAL R159 K305    ; ProcessBoosterPacks := R159
1033 [-]: CLOSURE   R159 169     ; R159 := closure(Function #170)
1034 [-]: MOVE      R0 R39       ; R0 := R39
1035 [-]: MOVE      R0 R72       ; R0 := R72
1036 [-]: MOVE      R0 R157      ; R0 := R157
1037 [-]: MOVE      R0 R158      ; R0 := R158
1038 [-]: MOVE      R0 R6        ; R0 := R6
1039 [-]: CLOSURE   R160 170     ; R160 := closure(Function #171)
1040 [-]: MOVE      R0 R157      ; R0 := R157
1041 [-]: MOVE      R0 R4        ; R0 := R4
1042 [-]: MOVE      R0 R72       ; R0 := R72
1043 [-]: MOVE      R0 R159      ; R0 := R159
1044 [-]: SETGLOBAL R160 K306    ; OnPurchaseResults := R160
1045 [-]: CLOSURE   R160 171     ; R160 := closure(Function #172)
1046 [-]: MOVE      R0 R72       ; R0 := R72
1047 [-]: SETGLOBAL R160 K307    ; ConfirmPopup := R160
1048 [-]: CLOSURE   R160 172     ; R160 := closure(Function #173)
1049 [-]: MOVE      R0 R72       ; R0 := R72
1050 [-]: MOVE      R0 R25       ; R0 := R25
1051 [-]: MOVE      R0 R64       ; R0 := R64
1052 [-]: MOVE      R0 R65       ; R0 := R65
1053 [-]: SETGLOBAL R160 K308    ; ConfirmPopupNotEnoughPlatinum := R160
1054 [-]: CLOSURE   R160 173     ; R160 := closure(Function #174)
1055 [-]: MOVE      R0 R72       ; R0 := R72
1056 [-]: MOVE      R0 R71       ; R0 := R71
1057 [-]: MOVE      R0 R76       ; R0 := R76
1058 [-]: SETGLOBAL R160 K309    ; ConfirmDurability := R160
1059 [-]: CLOSURE   R160 174     ; R160 := closure(Function #175)
1060 [-]: SETGLOBAL R160 K310    ; ConfirmErrorPopup := R160
1061 [-]: CLOSURE   R160 175     ; R160 := closure(Function #176)
1062 [-]: SETGLOBAL R160 K311    ; OpenPrimeTokenPage := R160
1063 [-]: CLOSURE   R160 176     ; R160 := closure(Function #177)
1064 [-]: CLOSURE   R161 177     ; R161 := closure(Function #178)
1065 [-]: CLOSURE   R162 178     ; R162 := closure(Function #179)
1066 [-]: CLOSURE   R163 179     ; R163 := closure(Function #180)
1067 [-]: MOVE      R0 R162      ; R0 := R162
1068 [-]: MOVE      R0 R160      ; R0 := R160
1069 [-]: MOVE      R0 R4        ; R0 := R4
1070 [-]: MOVE      R0 R72       ; R0 := R72
1071 [-]: MOVE      R0 R161      ; R0 := R161
1072 [-]: MOVE      R0 R6        ; R0 := R6
1073 [-]: MOVE      R0 R156      ; R0 := R156
1074 [-]: SETGLOBAL R163 K312    ; ConfirmPurchase := R163
1075 [-]: CLOSURE   R163 180     ; R163 := closure(Function #181)
1076 [-]: MOVE      R0 R77       ; R0 := R77
1077 [-]: MOVE      R0 R6        ; R0 := R6
1078 [-]: MOVE      R0 R4        ; R0 := R4
1079 [-]: MOVE      R0 R71       ; R0 := R71
1080 [-]: MOVE      R0 R72       ; R0 := R72
1081 [-]: MOVE      R0 R45       ; R0 := R45
1082 [-]: MOVE      R0 R76       ; R0 := R76
1083 [-]: SETGLOBAL R163 K313    ; BuyItem := R163
1084 [-]: CLOSURE   R163 181     ; R163 := closure(Function #182)
1085 [-]: MOVE      R0 R148      ; R0 := R148
1086 [-]: MOVE      R0 R138      ; R0 := R138
1087 [-]: CLOSURE   R164 182     ; R164 := closure(Function #183)
1088 [-]: SETGLOBAL R164 K314    ; OpenPod := R164
1089 [-]: CLOSURE   R164 183     ; R164 := closure(Function #184)
1090 [-]: SETGLOBAL R164 K315    ; ClosePod := R164
1091 [-]: CLOSURE   R164 184     ; R164 := closure(Function #185)
1092 [-]: MOVE      R0 R4        ; R0 := R4
1093 [-]: SETGLOBAL R164 K316    ; OnProfileFocused := R164
1094 [-]: CLOSURE   R164 185     ; R164 := closure(Function #186)
1095 [-]: MOVE      R0 R163      ; R0 := R163
1096 [-]: SETGLOBAL R164 K317    ; ConfirmLobby := R164
1097 [-]: CLOSURE   R164 186     ; R164 := closure(Function #187)
1098 [-]: SETGLOBAL R164 K318    ; ExitLobby := R164
1099 [-]: CLOSURE   R164 187     ; R164 := closure(Function #188)
1100 [-]: MOVE      R0 R4        ; R0 := R4
1101 [-]: SETGLOBAL R164 K319    ; RollOver := R164
1102 [-]: CLOSURE   R164 188     ; R164 := closure(Function #189)
1103 [-]: SETGLOBAL R164 K320    ; onViewportSizeChanged := R164
1104 [-]: CLOSURE   R164 189     ; R164 := closure(Function #190)
1105 [-]: MOVE      R0 R17       ; R0 := R17
1106 [-]: SETGLOBAL R164 K232    ; ActiveQuestLoaded := R164
1107 [-]: CLOSURE   R164 190     ; R164 := closure(Function #191)
1108 [-]: MOVE      R0 R4        ; R0 := R4
1109 [-]: SETGLOBAL R164 K321    ; OnAccountNameChangedCallback := R164
1110 [-]: CLOSURE   R49 191      ; R49 := closure(Function #192)
1111 [-]: MOVE      R0 R6        ; R0 := R6
1112 [-]: CLOSURE   R164 192     ; R164 := closure(Function #193)
1113 [-]: MOVE      R0 R4        ; R0 := R4
1114 [-]: MOVE      R0 R164      ; R0 := R164
1115 [-]: CLOSURE   R165 193     ; R165 := closure(Function #194)
1116 [-]: MOVE      R0 R53       ; R0 := R53
1117 [-]: MOVE      R0 R6        ; R0 := R6
1118 [-]: MOVE      R0 R91       ; R0 := R91
1119 [-]: MOVE      R0 R90       ; R0 := R90
1120 [-]: MOVE      R0 R83       ; R0 := R83
1121 [-]: MOVE      R0 R101      ; R0 := R101
1122 [-]: MOVE      R0 R28       ; R0 := R28
1123 [-]: MOVE      R0 R50       ; R0 := R50
1124 [-]: MOVE      R0 R113      ; R0 := R113
1125 [-]: MOVE      R0 R164      ; R0 := R164
1126 [-]: MOVE      R0 R114      ; R0 := R114
1127 [-]: MOVE      R0 R110      ; R0 := R110
1128 [-]: MOVE      R0 R43       ; R0 := R43
1129 [-]: SETGLOBAL R165 K322    ; OnLoginDone := R165
1130 [-]: CLOSURE   R165 194     ; R165 := closure(Function #195)
1131 [-]: MOVE      R0 R2        ; R0 := R2
1132 [-]: SETGLOBAL R165 K323    ; QueueTeshinHardModeNag := R165
1133 [-]: CLOSURE   R165 195     ; R165 := closure(Function #196)
1134 [-]: MOVE      R0 R92       ; R0 := R92
1135 [-]: SETGLOBAL R165 K324    ; DoLogoff := R165
1136 [-]: CLOSURE   R165 196     ; R165 := closure(Function #197)
1137 [-]: MOVE      R0 R6        ; R0 := R6
1138 [-]: MOVE      R0 R4        ; R0 := R4
1139 [-]: SETGLOBAL R165 K325    ; HttpRequestFailureCallback := R165
1140 [-]: CLOSURE   R165 197     ; R165 := closure(Function #198)
1141 [-]: MOVE      R0 R4        ; R0 := R4
1142 [-]: SETGLOBAL R165 K326    ; HttpRequestAuthFailureCallback := R165
1143 [-]: CLOSURE   R165 198     ; R165 := closure(Function #199)
1144 [-]: MOVE      R0 R6        ; R0 := R6
1145 [-]: MOVE      R0 R92       ; R0 := R92
1146 [-]: SETGLOBAL R165 K327    ; OnUserChangedCallback := R165
1147 [-]: CLOSURE   R165 199     ; R165 := closure(Function #200)
1148 [-]: MOVE      R0 R51       ; R0 := R51
1149 [-]: SETGLOBAL R165 K328    ; OnConfirmation := R165
1150 [-]: CLOSURE   R165 200     ; R165 := closure(Function #201)
1151 [-]: MOVE      R0 R51       ; R0 := R51
1152 [-]: MOVE      R0 R4        ; R0 := R4
1153 [-]: SETGLOBAL R165 K329    ; OnUserGamepadRemoved := R165
1154 [-]: CLOSURE   R165 201     ; R165 := closure(Function #202)
1155 [-]: MOVE      R0 R51       ; R0 := R51
1156 [-]: MOVE      R0 R4        ; R0 := R4
1157 [-]: SETGLOBAL R165 K330    ; OnUserGamepadRemovedSwitch := R165
1158 [-]: CLOSURE   R165 202     ; R165 := closure(Function #203)
1159 [-]: MOVE      R0 R4        ; R0 := R4
1160 [-]: SETGLOBAL R165 K331    ; OnLoginExpired := R165
1161 [-]: CLOSURE   R165 203     ; R165 := closure(Function #204)
1162 [-]: SETGLOBAL R165 K332    ; GameInviteReceivedCallback := R165
1163 [-]: CLOSURE   R165 204     ; R165 := closure(Function #205)
1164 [-]: SETGLOBAL R165 K333    ; OnOnlinePlayTypeChanged := R165
1165 [-]: CLOSURE   R165 205     ; R165 := closure(Function #206)
1166 [-]: SETGLOBAL R165 K334    ; SelectMissionDeckRegion := R165
1167 [-]: CLOSURE   R165 206     ; R165 := closure(Function #207)
1168 [-]: MOVE      R0 R6        ; R0 := R6
1169 [-]: MOVE      R0 R17       ; R0 := R17
1170 [-]: SETGLOBAL R165 K335    ; IconCacheFlushed := R165
1171 [-]: LOADKB    R165 0 0     ; R165 := false
1172 [-]: CONST     R166 0       ; R166 := 0.000000
1173 [-]: CONST     R167 0       ; R167 := 0.000000
1174 [-]: CLOSURE   R168 207     ; R168 := closure(Function #208)
1175 [-]: MOVE      R0 R165      ; R0 := R165
1176 [-]: MOVE      R0 R166      ; R0 := R166
1177 [-]: MOVE      R0 R167      ; R0 := R167
1178 [-]: SETGLOBAL R168 K336    ; ConfirmLoadOrbiterMessage := R168
1179 [-]: CLOSURE   R168 208     ; R168 := closure(Function #209)
1180 [-]: MOVE      R0 R165      ; R0 := R165
1181 [-]: MOVE      R0 R167      ; R0 := R167
1182 [-]: MOVE      R0 R5        ; R0 := R5
1183 [-]: MOVE      R0 R4        ; R0 := R4
1184 [-]: CLOSURE   R169 209     ; R169 := closure(Function #210)
1185 [-]: MOVE      R0 R129      ; R0 := R129
1186 [-]: SETGLOBAL R169 K337    ; OnLoadHubMessage := R169
1187 [-]: CLOSURE   R169 210     ; R169 := closure(Function #211)
1188 [-]: CLOSURE   R170 211     ; R170 := closure(Function #212)
1189 [-]: CLOSURE   R171 212     ; R171 := closure(Function #213)
1190 [-]: CLOSURE   R172 213     ; R172 := closure(Function #214)
1191 [-]: SETGLOBAL R172 K338    ; OnAccountRenameRelogConfirm := R172
1192 [-]: CLOSURE   R172 214     ; R172 := closure(Function #215)
1193 [-]: MOVE      R0 R168      ; R0 := R168
1194 [-]: MOVE      R0 R169      ; R0 := R169
1195 [-]: MOVE      R0 R170      ; R0 := R170
1196 [-]: MOVE      R0 R171      ; R0 := R171
1197 [-]: SETGLOBAL R172 K339    ; OnLoadOrbiterMessage := R172
1198 [-]: CLOSURE   R172 215     ; R172 := closure(Function #216)
1199 [-]: MOVE      R0 R4        ; R0 := R4
1200 [-]: SETGLOBAL R172 K340    ; OnAccountRename := R172
1201 [-]: CLOSURE   R172 216     ; R172 := closure(Function #217)
1202 [-]: MOVE      R0 R6        ; R0 := R6
1203 [-]: SETGLOBAL R172 K341    ; OnAccountRenameConfirm := R172
1204 [-]: CLOSURE   R172 217     ; R172 := closure(Function #218)
1205 [-]: MOVE      R0 R6        ; R0 := R6
1206 [-]: SETGLOBAL R172 K342    ; OnBadNewNameAcknowledged := R172
1207 [-]: CLOSURE   R172 218     ; R172 := closure(Function #219)
1208 [-]: MOVE      R0 R6        ; R0 := R6
1209 [-]: MOVE      R0 R4        ; R0 := R4
1210 [-]: CLOSURE   R173 219     ; R173 := closure(Function #220)
1211 [-]: MOVE      R0 R172      ; R0 := R172
1212 [-]: SETGLOBAL R173 K343    ; AccountRename := R173
1213 [-]: CLOSURE   R173 220     ; R173 := closure(Function #221)
1214 [-]: MOVE      R0 R172      ; R0 := R172
1215 [-]: SETGLOBAL R173 K344    ; OSKAccountRename := R173
1216 [-]: CLOSURE   R173 221     ; R173 := closure(Function #222)
1217 [-]: MOVE      R0 R6        ; R0 := R6
1218 [-]: SETGLOBAL R173 K345    ; InitiateAccountRename := R173
1219 [-]: CLOSURE   R173 222     ; R173 := closure(Function #223)
1220 [-]: MOVE      R0 R6        ; R0 := R6
1221 [-]: MOVE      R0 R53       ; R0 := R53
1222 [-]: MOVE      R0 R108      ; R0 := R108
1223 [-]: MOVE      R0 R16       ; R0 := R16
1224 [-]: MOVE      R0 R56       ; R0 := R56
1225 [-]: SETGLOBAL R173 K346    ; InitializeRegionChallenges := R173
1226 [-]: CLOSURE   R173 223     ; R173 := closure(Function #224)
1227 [-]: MOVE      R0 R84       ; R0 := R84
1228 [-]: SETGLOBAL R173 K347    ; CheckNewOmega := R173
1229 [-]: CLOSURE   R173 224     ; R173 := closure(Function #225)
1230 [-]: SETGLOBAL R173 K348    ; ShowPurchaseCelebration := R173
1231 [-]: CLOSURE   R173 225     ; R173 := closure(Function #226)
1232 [-]: MOVE      R0 R22       ; R0 := R22
1233 [-]: SETGLOBAL R173 K349    ; ApplyLoadOutChanges := R173
1234 [-]: CLOSURE   R173 226     ; R173 := closure(Function #227)
1235 [-]: SETGLOBAL R173 K350    ; OnLobbyReady := R173
1236 [-]: CLOSURE   R173 227     ; R173 := closure(Function #228)
1237 [-]: SETGLOBAL R173 K351    ; OnUpdateSessionSettings := R173
1238 [-]: CLOSURE   R44 228      ; R44 := closure(Function #229)
1239 [-]: MOVE      R0 R6        ; R0 := R6
1240 [-]: MOVE      R0 R8        ; R0 := R8
1241 [-]: CLOSURE   R173 229     ; R173 := closure(Function #230)
1242 [-]: MOVE      R0 R44       ; R0 := R44
1243 [-]: SETGLOBAL R173 K352    ; DebugLoadMission := R173
1244 [-]: CLOSURE   R173 230     ; R173 := closure(Function #231)
1245 [-]: SETGLOBAL R173 K353    ; ConfirmWeaponRetrieve := R173
1246 [-]: CLOSURE   R173 231     ; R173 := closure(Function #232)
1247 [-]: MOVE      R0 R6        ; R0 := R6
1248 [-]: MOVE      R0 R48       ; R0 := R48
1249 [-]: MOVE      R0 R4        ; R0 := R4
1250 [-]: MOVE      R0 R66       ; R0 := R66
1251 [-]: MOVE      R0 R58       ; R0 := R58
1252 [-]: MOVE      R0 R57       ; R0 := R57
1253 [-]: SETGLOBAL R173 K354    ; OnTrainingResultUploaded := R173
1254 [-]: CLOSURE   R173 232     ; R173 := closure(Function #233)
1255 [-]: MOVE      R0 R6        ; R0 := R6
1256 [-]: MOVE      R0 R66       ; R0 := R66
1257 [-]: MOVE      R0 R48       ; R0 := R48
1258 [-]: MOVE      R0 R57       ; R0 := R57
1259 [-]: MOVE      R0 R58       ; R0 := R58
1260 [-]: CLOSURE   R174 233     ; R174 := closure(Function #234)
1261 [-]: MOVE      R0 R173      ; R0 := R173
1262 [-]: SETGLOBAL R174 K355    ; LevelUpRetry := R174
1263 [-]: CLOSURE   R174 234     ; R174 := closure(Function #235)
1264 [-]: MOVE      R0 R173      ; R0 := R173
1265 [-]: SETGLOBAL R174 K356    ; LevelUpRetryConfirm := R174
1266 [-]: CLOSURE   R174 235     ; R174 := closure(Function #236)
1267 [-]: MOVE      R0 R6        ; R0 := R6
1268 [-]: MOVE      R0 R4        ; R0 := R4
1269 [-]: MOVE      R0 R48       ; R0 := R48
1270 [-]: MOVE      R0 R57       ; R0 := R57
1271 [-]: MOVE      R0 R58       ; R0 := R58
1272 [-]: SETGLOBAL R174 K357    ; LevelUp := R174
1273 [-]: CLOSURE   R174 236     ; R174 := closure(Function #237)
1274 [-]: SETGLOBAL R174 K358    ; QueueMailboxNotification := R174
1275 [-]: CLOSURE   R174 237     ; R174 := closure(Function #238)
1276 [-]: MOVE      R0 R92       ; R0 := R92
1277 [-]: SETGLOBAL R174 K359    ; ForceVersionLogoff := R174
1278 [-]: CLOSURE   R174 238     ; R174 := closure(Function #239)
1279 [-]: SETGLOBAL R174 K360    ; QuitGameConfirm := R174
1280 [-]: CLOSURE   R174 239     ; R174 := closure(Function #240)
1281 [-]: MOVE      R0 R6        ; R0 := R6
1282 [-]: MOVE      R0 R4        ; R0 := R4
1283 [-]: SETGLOBAL R174 K361    ; QuitGame := R174
1284 [-]: CLOSURE   R174 240     ; R174 := closure(Function #241)
1285 [-]: MOVE      R0 R20       ; R0 := R20
1286 [-]: SETGLOBAL R174 K362    ; OnStartNemesis := R174
1287 [-]: CLOSURE   R174 241     ; R174 := closure(Function #242)
1288 [-]: SETGLOBAL R174 K363    ; ForceRefreshFoundryNotification := R174
1289 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 381
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mControl
  2 [-]: SETTABLE  R0 K1 K2     ; R0["Shutdown"] := true
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  4 [-]: GETGLOBAL R1 K4        ; R1 := mToolTip
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R0 K4        ; R0 := mToolTip
  9 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K6        ; R1 := mInfoPopup
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETGLOBAL R0 K6        ; R0 := mInfoPopup
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 20 [-]: GETGLOBAL R1 K7        ; R1 := mContextMenu
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETGLOBAL R0 K7        ; R0 := mContextMenu
 25 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 26 [-]: CALL      R0 2 1       ; R0(R1)
 27 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 28 [-]: GETGLOBAL R1 K8        ; R1 := mBlockingTaskPopup
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: TEST      R0 1         ; if R0 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETGLOBAL R0 K8        ; R0 := mBlockingTaskPopup
 33 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 34 [-]: CALL      R0 2 1       ; R0(R1)
 35 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 36 [-]: GETGLOBAL R1 K9        ; R1 := mStyleBackgroundMovie
 37 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 38 [-]: TEST      R0 1         ; if R0 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETGLOBAL R0 K9        ; R0 := mStyleBackgroundMovie
 41 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 42 [-]: CALL      R0 2 1       ; R0(R1)
 43 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 44 [-]: GETGLOBAL R1 K10       ; R1 := mNotificationsMovie
 45 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 46 [-]: TEST      R0 1         ; if R0 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETGLOBAL R0 K10       ; R0 := mNotificationsMovie
 49 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 50 [-]: CALL      R0 2 1       ; R0(R1)
 51 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 52 [-]: GETGLOBAL R1 K11       ; R1 := _T
 53 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["DisableUIInput"]
 54 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 55 [-]: TEST      R0 1         ; if R0 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETGLOBAL R0 K11       ; R0 := _T
 58 [-]: GETTABLE  R0 R0 K13    ; R0 := R0[0x80172c74]
 59 [-]: CALL      R0 1 1       ; R0()
 60 [-]: GETGLOBAL R0 K14       ; R0 := mOpenScreenAsyncInfo
 61 [-]: GETTABLE  R0 R0 K15    ; R0 := R0["IsLoading"]
 62 [-]: TEST      R0 0         ; if not R0 then PC := 72
 63 [-]: JMP       72           ; PC := 72
 64 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 65 [-]: GETGLOBAL R1 K16       ; R1 := 0x9ba7909f
 66 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 67 [-]: TEST      R0 1         ; if R0 then PC := 72
 68 [-]: JMP       72           ; PC := 72
 69 [-]: GETGLOBAL R0 K16       ; R0 := 0x9ba7909f
 70 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0[0xf248fd5d]
 71 [-]: CALL      R0 2 1       ; R0(R1)
 72 [-]: GETGLOBAL R0 K18       ; R0 := mUIInputEnableTimer
 73 [-]: EQ        1 R0 K19     ; if R0 == nil then PC := 92
 74 [-]: JMP       92           ; PC := 92
 75 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 76 [-]: GETGLOBAL R1 K20       ; R1 := mTimerMgr
 77 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 78 [-]: TEST      R0 1         ; if R0 then PC := 92
 79 [-]: JMP       92           ; PC := 92
 80 [-]: GETGLOBAL R0 K20       ; R0 := mTimerMgr
 81 [-]: GETTABLE  R0 R0 K21    ; R0 := R0["mTimers"]
 82 [-]: GETGLOBAL R1 K18       ; R1 := mUIInputEnableTimer
 83 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 84 [-]: EQ        1 R0 K19     ; if R0 == nil then PC := 92
 85 [-]: JMP       92           ; PC := 92
 86 [-]: GETGLOBAL R0 K20       ; R0 := mTimerMgr
 87 [-]: GETTABLE  R0 R0 K21    ; R0 := R0["mTimers"]
 88 [-]: GETGLOBAL R1 K18       ; R1 := mUIInputEnableTimer
 89 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 90 [-]: GETTABLE  R0 R0 K22    ; R0 := R0[0x75afeb61]
 91 [-]: CALL      R0 1 1       ; R0()
 92 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 424
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R5 K0        ; R5 := _T
  2 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Credits"]
  3 [-]: EQ        1 R5 R0      ; if R5 == R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETGLOBAL R5 K0        ; R5 := _T
  6 [-]: SETTABLE  R5 K1 R0     ; R5["Credits"] := R0
  7 [-]: GETGLOBAL R5 K0        ; R5 := _T
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["PremiumCredits"]
  9 [-]: EQ        1 R5 R1      ; if R5 == R1 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETGLOBAL R5 K0        ; R5 := _T
 12 [-]: SETTABLE  R5 K2 R1     ; R5["PremiumCredits"] := R1
 13 [-]: GETGLOBAL R5 K0        ; R5 := _T
 14 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["PurchasedPremiumCredits"]
 15 [-]: EQ        1 R5 R2      ; if R5 == R2 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETGLOBAL R5 K0        ; R5 := _T
 18 [-]: SETTABLE  R5 K3 R2     ; R5["PurchasedPremiumCredits"] := R2
 19 [-]: GETGLOBAL R5 K0        ; R5 := _T
 20 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["PrimeTokens"]
 21 [-]: EQ        1 R5 R3      ; if R5 == R3 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETGLOBAL R5 K0        ; R5 := _T
 24 [-]: SETTABLE  R5 K4 R3     ; R5["PrimeTokens"] := R3
 25 [-]: GETGLOBAL R5 K0        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["PlayerXP"]
 27 [-]: EQ        1 R5 R4      ; if R5 == R4 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETGLOBAL R5 K0        ; R5 := _T
 30 [-]: SETTABLE  R5 K5 R4     ; R5["PlayerXP"] := R4
 31 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 446
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 450
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x76ea806b
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x3f3ae64c]
  4 [-]: CONST     R3 0         ; R3 := 0.000000
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x49d9480e]
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: TEST      R2 1         ; if R2 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x7d0219ae]
 13 [-]: CALL      R2 1 2       ; R2 := R2()
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADK     R0 K5        ; R0 := "https://dev.warframe.com/gameplatinum?"
 17 [-]: JMP       33           ; PC := 33
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x28822185]
 20 [-]: CALL      R2 1 2       ; R2 := R2()
 21 [-]: TEST      R2 0         ; if not R2 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: LOADK     R0 K7        ; R0 := "https://test.warframe.com/gameplatinum?"
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0x34291f5c
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[0xa7a2e381]
 27 [-]: CALL      R2 1 2       ; R2 := R2()
 28 [-]: TEST      R2 0         ; if not R2 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADK     R0 K10       ; R0 := "https://store.wf.qq.com/?module=recharge"
 31 [-]: JMP       33           ; PC := 33
 32 [-]: LOADK     R0 K11       ; R0 := "https://warframe.com/gameplatinum?"
 33 [-]: SELF      R2 R1 K12    ; R3 := R1; R2 := R1[0x1012c7ec]
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: MOVE      R3 R2        ; R3 := R2
 36 [-]: SELF      R4 R1 K13    ; R5 := R1; R4 := R1[0x37346c0e]
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 39 [-]: LOADK     R3 K0        ; R3 := ""
 40 [-]: SELF      R4 R1 K14    ; R5 := R1; R4 := R1[0x80563238]
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: GETGLOBAL R5 K15       ; R5 := 0x7b998233
 43 [-]: MOVE      R6 R4        ; R6 := R4
 44 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 45 [-]: TEST      R5 1         ; if R5 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: SELF      R5 R4 K16    ; R6 := R4; R5 := R4[0x104b2223]
 48 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 49 [-]: LOADK     R6 K17       ; R6 := "&couponSku="
 50 [-]: GETGLOBAL R7 K18       ; R7 := 0x64fb1586
 51 [-]: GETTABLE  R8 R5 K19    ; R8 := R5["mCouponSku"]
 52 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 53 [-]: CONCAT    R3 R6 R7     ; R3 := R6 .. R7
 54 [-]: LOADK     R6 K0        ; R6 := ""
 55 [-]: GETGLOBAL R7 K8        ; R7 := 0x34291f5c
 56 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[0xbcd06415]
 57 [-]: CALL      R7 1 2       ; R7 := R7()
 58 [-]: TEST      R7 0         ; if not R7 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADK     R6 K21       ; R6 := "&epic=1"
 61 [-]: LOADKB    R7 0 0       ; R7 := false
 62 [-]: LOADK     R8 K0        ; R8 := ""
 63 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
 64 [-]: GETTABLE  R9 R9 K22    ; R9 := R9[0x9ad21ae9]
 65 [-]: CALL      R9 1 2       ; R9 := R9()
 66 [-]: TEST      R9 0         ; if not R9 then PC := 75
 67 [-]: JMP       75           ; PC := 75
 68 [-]: GETUPVAL  R9 U1        ; R9 := U1
 69 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
 70 [-]: LOADK     R10 K0       ; R10 := ""
 71 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
 72 [-]: MOVE      R8 R10       ; R8 := R10
 73 [-]: MOVE      R7 R9        ; R7 := R9
 74 [-]: JMP       121          ; PC := 121
 75 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
 76 [-]: GETTABLE  R9 R9 K24    ; R9 := R9[0x86647daf]
 77 [-]: CALL      R9 1 2       ; R9 := R9()
 78 [-]: TEST      R9 0         ; if not R9 then PC := 87
 79 [-]: JMP       87           ; PC := 87
 80 [-]: GETUPVAL  R9 U1        ; R9 := U1
 81 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
 82 [-]: LOADK     R10 K25      ; R10 := "PLATINUM"
 83 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
 84 [-]: MOVE      R8 R10       ; R8 := R10
 85 [-]: MOVE      R7 R9        ; R7 := R9
 86 [-]: JMP       121          ; PC := 121
 87 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
 88 [-]: GETTABLE  R9 R9 K26    ; R9 := R9[0xc84fa15a]
 89 [-]: CALL      R9 1 2       ; R9 := R9()
 90 [-]: TEST      R9 0         ; if not R9 then PC := 99
 91 [-]: JMP       99           ; PC := 99
 92 [-]: GETUPVAL  R9 U1        ; R9 := U1
 93 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
 94 [-]: LOADK     R10 K25      ; R10 := "PLATINUM"
 95 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
 96 [-]: MOVE      R8 R10       ; R8 := R10
 97 [-]: MOVE      R7 R9        ; R7 := R9
 98 [-]: JMP       121          ; PC := 121
 99 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
100 [-]: GETTABLE  R9 R9 K9     ; R9 := R9[0xa7a2e381]
101 [-]: CALL      R9 1 2       ; R9 := R9()
102 [-]: TEST      R9 0         ; if not R9 then PC := 111
103 [-]: JMP       111          ; PC := 111
104 [-]: GETUPVAL  R9 U1        ; R9 := U1
105 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
106 [-]: MOVE      R10 R0       ; R10 := R0
107 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
108 [-]: MOVE      R8 R10       ; R8 := R10
109 [-]: MOVE      R7 R9        ; R7 := R9
110 [-]: JMP       121          ; PC := 121
111 [-]: GETUPVAL  R9 U1        ; R9 := U1
112 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
113 [-]: MOVE      R10 R0       ; R10 := R0
114 [-]: MOVE      R11 R2       ; R11 := R2
115 [-]: MOVE      R12 R3       ; R12 := R3
116 [-]: MOVE      R13 R6       ; R13 := R6
117 [-]: CONCAT    R10 R10 R13  ; R10 := R10 .. R11 .. R12 .. R13
118 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
119 [-]: MOVE      R8 R10       ; R8 := R10
120 [-]: MOVE      R7 R9        ; R7 := R9
121 [-]: TEST      R7 1         ; if R7 then PC := 128
122 [-]: JMP       128          ; PC := 128
123 [-]: GETUPVAL  R9 U1        ; R9 := U1
124 [-]: GETTABLE  R9 R9 K27    ; R9 := R9[0xe0cba3ca]
125 [-]: MOVE      R10 R8       ; R10 := R8
126 [-]: LOADK     R11 K28      ; R11 := "PurchasePlatinumFailed"
127 [-]: CALL      R9 3 1       ; R9(R10,R11)
128 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 500
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 504
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
  9 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 10 [-]: JMP       39           ; PC := 39
 11 [-]: GETGLOBAL R1 K5        ; R1 := mPurchaseOrigin
 12 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 13 [-]: JMP       39           ; PC := 39
 14 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
 15 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x8b8fb8b7]
 16 [-]: GETGLOBAL R3 K7        ; R3 := 0x0469f296
 17 [-]: LOADK     R4 K8        ; R4 := "INSUFFICIENT_PLAT_POPUP"
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K5        ; R4 := mPurchaseOrigin
 20 [-]: LOADK     R5 K9        ; R5 := "_STORE_OK"
 21 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 22 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 23 [-]: JMP       39           ; PC := 39
 24 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
 25 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 26 [-]: JMP       39           ; PC := 39
 27 [-]: GETGLOBAL R1 K5        ; R1 := mPurchaseOrigin
 28 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
 31 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x8b8fb8b7]
 32 [-]: GETGLOBAL R3 K7        ; R3 := 0x0469f296
 33 [-]: LOADK     R4 K8        ; R4 := "INSUFFICIENT_PLAT_POPUP"
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: GETGLOBAL R4 K5        ; R4 := mPurchaseOrigin
 36 [-]: LOADK     R5 K10       ; R5 := "_STORE_CANCEL"
 37 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 38 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 39 [-]: LOADNIL   R1 R1        ; R1 := nil
 40 [-]: SETGLOBAL R1 K5        ; mPurchaseOrigin := R1
 41 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 518
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x34291f5c
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xc84fa15a]
  4 [-]: CALL      R2 1 2       ; R2 := R2()
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/Store_LaunchingBrowser_Switch"
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/Store_LaunchingBrowser_Windows"
 10 [-]: GETGLOBAL R2 K5        ; R2 := 0x76ea806b
 11 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x3f3ae64c]
 12 [-]: CONST     R4 0         ; R4 := 0.000000
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 1         ; if R3 then PC := 48
 18 [-]: JMP       48           ; PC := 48
 19 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0x80563238]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 22 [-]: MOVE      R5 R3        ; R5 := R3
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: TEST      R4 1         ; if R4 then PC := 48
 25 [-]: JMP       48           ; PC := 48
 26 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0x104b2223]
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: GETGLOBAL R5 K1        ; R5 := 0x34291f5c
 29 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x397b920f]
 30 [-]: GETTABLE  R6 R4 K11    ; R6 := R4["mExpiry"]
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: LT        0 K12 R5     ; if 0.000000 >= R5 then PC := 48
 33 [-]: JMP       48           ; PC := 48
 34 [-]: GETGLOBAL R6 K13       ; R6 := 0xae91e43b
 35 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x42b04007]
 36 [-]: LOADK     R8 K15       ; R8 := "/Lotus/Language/Menu/Store_LaunchingBrowserDiscount_Windows"
 37 [-]: LOADKB    R9 0 0       ; R9 := false
 38 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 39 [-]: GETUPVAL  R11 U0       ; R11 := U0
 40 [-]: GETTABLE  R11 R11 K17  ; R11 := R11[0x817b1503]
 41 [-]: GETGLOBAL R12 K13      ; R12 := 0xae91e43b
 42 [-]: MOVE      R13 R5       ; R13 := R5
 43 [-]: LOADK     R14 K18      ; R14 := "HoursOrMinutes"
 44 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 45 [-]: SETTABLE  R10 K16 R11  ; R10["TIMELEFT"] := R11
 46 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 47 [-]: MOVE      R1 R6        ; R1 := R6
 48 [-]: SETGLOBAL R0 K19       ; mPurchaseOrigin := R0
 49 [-]: GETUPVAL  R6 U1        ; R6 := U1
 50 [-]: GETTABLE  R6 R6 K20    ; R6 := R6[0xf616a184]
 51 [-]: MOVE      R7 R1        ; R7 := R1
 52 [-]: LOADK     R8 K21       ; R8 := "PurchasePlatinumOk"
 53 [-]: CALL      R6 3 1       ; R6(R7,R8)
 54 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 542
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 547
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0x86647daf]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: LOADKB    R0 0 0       ; R0 := false
  7 [-]: LOADK     R1 K2        ; R1 := ""
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x34291f5c
  9 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x86647daf]
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: TEST      R2 0         ; if not R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x49d3de6e]
 15 [-]: LOADK     R3 K4        ; R3 := "PRIME_ACCESS"
 16 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
 17 [-]: MOVE      R1 R3        ; R1 := R3
 18 [-]: MOVE      R0 R2        ; R0 := R2
 19 [-]: TEST      R0 1         ; if R0 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETUPVAL  R2 U0        ; R2 := U0
 22 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: LOADK     R4 K6        ; R4 := "PurchasePlatinumFailed"
 25 [-]: CALL      R2 3 1       ; R2(R3,R4)
 26 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 562
; #Upvalues:       3
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R6 K0        ; R6 := 0x34291f5c
  2 [-]: GETTABLE  R6 R6 K1     ; R6 := R6[0xe27b35bb]
  3 [-]: CALL      R6 1 2       ; R6 := R6()
  4 [-]: SETTABLE  R6 K2 K3     ; R6["dialogType"] := 0.000000
  5 [-]: LOADK     R7 K4        ; R7 := ""
  6 [-]: LOADK     R8 K5        ; R8 := "ConfirmPopup"
  7 [-]: GETUPVAL  R9 U0        ; R9 := U0
  8 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["PRIME_BUCKS"]
  9 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADK     R7 K7        ; R7 := "/Lotus/Language/Menu/Global_InsufficientPrimeBucks"
 12 [-]: JMP       57           ; PC := 57
 13 [-]: GETUPVAL  R9 U0        ; R9 := U0
 14 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PREMIUM_CREDITS"]
 15 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: SETGLOBAL R4 K9        ; mPurchaseOrigin := R4
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Language/Menu/Global_InsufficientPurchasedPlatinum"
 21 [-]: JMP       27           ; PC := 27
 22 [-]: TEST      R3 0         ; if not R3 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: MOVE      R7 R2        ; R7 := R2
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Language/Menu/Global_InsufficientPlatinum"
 27 [-]: SETTABLE  R6 K2 K12    ; R6["dialogType"] := 1.000000
 28 [-]: SETTABLE  R6 K13 K14   ; R6["firstString"] := "/Lotus/Language/Menu/Store_GetPlatinum"
 29 [-]: SETTABLE  R6 K15 K16   ; R6["secondString"] := "/Lotus/Language/Menu/ItemSelection_OK"
 30 [-]: LOADK     R8 K17       ; R8 := "ConfirmPopupNotEnoughPlatinum"
 31 [-]: JMP       57           ; PC := 57
 32 [-]: GETUPVAL  R9 U0        ; R9 := U0
 33 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["REGULAR_CREDITS"]
 34 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADK     R7 K19       ; R7 := "/Lotus/Language/Menu/Global_InsufficientCredits"
 37 [-]: JMP       57           ; PC := 57
 38 [-]: GETUPVAL  R9 U0        ; R9 := U0
 39 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["STANDING"]
 40 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADK     R7 K21       ; R7 := "/Lotus/Language/Menu/Global_InsufficientStanding"
 43 [-]: JMP       57           ; PC := 57
 44 [-]: GETUPVAL  R9 U0        ; R9 := U0
 45 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["PRIME_TOKENS"]
 46 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: LOADK     R7 K23       ; R7 := "/Lotus/Language/Store/Global_InsufficientPrimeTokens"
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETUPVAL  R9 U0        ; R9 := U0
 51 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["FOCUS_XP"]
 52 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: LOADK     R7 K25       ; R7 := "/Lotus/Language/Store/Global_InsufficientFocusXP"
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADK     R7 K26       ; R7 := "/Lotus/Language/Menu/Global_InsufficientFunds"
 57 [-]: EQ        0 R2 K27     ; if R2 ~= nil then PC := 75
 58 [-]: JMP       75           ; PC := 75
 59 [-]: GETGLOBAL R9 K28       ; R9 := _T
 60 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["GenericVendor_NameOverride"]
 61 [-]: TEST      R9 0         ; if not R9 then PC := 68
 62 [-]: JMP       68           ; PC := 68
 63 [-]: GETGLOBAL R9 K28       ; R9 := _T
 64 [-]: GETTABLE  R2 R9 K29    ; R2 := R9["GenericVendor_NameOverride"]
 65 [-]: GETGLOBAL R9 K28       ; R9 := _T
 66 [-]: SETTABLE  R9 K29 K27   ; R9["GenericVendor_NameOverride"] := nil
 67 [-]: JMP       75           ; PC := 75
 68 [-]: GETUPVAL  R9 U1        ; R9 := U1
 69 [-]: GETTABLE  R9 R9 K30    ; R9 := R9[0xc7ca0123]
 70 [-]: GETGLOBAL R10 K31      ; R10 := 0xae91e43b
 71 [-]: GETGLOBAL R11 K32      ; R11 := mPurchaseParams
 72 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["mStoreItem"]
 73 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 74 [-]: MOVE      R2 R9        ; R2 := R9
 75 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
 76 [-]: SELF      R9 R9 K35    ; R10 := R9; R9 := R9[0x42b04007]
 77 [-]: MOVE      R11 R7       ; R11 := R7
 78 [-]: LOADKB    R12 0 0      ; R12 := false
 79 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 80 [-]: SETTABLE  R13 K36 R2   ; R13["ITEM"] := R2
 81 [-]: SETTABLE  R13 K37 R5   ; R13["CURRENCY_AMOUNT_NEEDED"] := R5
 82 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 83 [-]: SETTABLE  R6 K34 R9    ; R6["locString"] := R9
 84 [-]: SELF      R9 R6 K38    ; R10 := R6; R9 := R6[0xe6ccc5b9]
 85 [-]: MOVE      R11 R8       ; R11 := R8
 86 [-]: CALL      R9 3 1       ; R9(R10,R11)
 87 [-]: GETUPVAL  R9 U2        ; R9 := U2
 88 [-]: GETTABLE  R9 R9 K39    ; R9 := R9[0xe99b84e7]
 89 [-]: MOVE      R10 R6       ; R10 := R6
 90 [-]: CALL      R9 2 1       ; R9(R10)
 91 [-]: GETGLOBAL R9 K28       ; R9 := _T
 92 [-]: SETTABLE  R9 K40 K27   ; R9["PurchaseSuccessLocOverride"] := nil
 93 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 610
; #Upvalues:       3
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: SETUPVAL  R6 U0        ; U82 := R0
  2 [-]: GETUPVAL  R6 U1        ; R6 := U1
  3 [-]: MOVE      R7 R0        ; R7 := R0
  4 [-]: GETUPVAL  R8 U2        ; R8 := U2
  5 [-]: GETTABLE  R8 R8 K0     ; R8 := R8[0x06d055f9]
  6 [-]: GETGLOBAL R9 K1        ; R9 := 0x03f57322
  7 [-]: MOVE      R10 R1       ; R10 := R1
  8 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  9 [-]: EQ        1 R9 K2      ; if R9 == 1.000000 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 12
 12 [-]: LOADKB    R9 1 0       ; R9 := true
 13 [-]: LOADKB    R10 1 0      ; R10 := true
 14 [-]: LOADKB    R11 0 0      ; R11 := false
 15 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 16 [-]: MOVE      R9 R2        ; R9 := R2
 17 [-]: MOVE      R10 R3       ; R10 := R3
 18 [-]: MOVE      R11 R4       ; R11 := R4
 19 [-]: MOVE      R12 R5       ; R12 := R5
 20 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
 21 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 618
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xbecef34c]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mPurchaseParams
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mStoreItem"]
  5 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x42b04007]
  8 [-]: GETGLOBAL R4 K5        ; R4 := 0x64fb1586
  9 [-]: GETGLOBAL R5 K1        ; R5 := mPurchaseParams
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mStoreItem"]
 11 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0xd3a9d01f]
 12 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 13 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 14 [-]: LOADKB    R5 0 0       ; R5 := false
 15 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 16 [-]: GETGLOBAL R3 K7        ; R3 := 0x76ea806b
 17 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x3f3ae64c]
 18 [-]: CONST     R5 0         ; R5 := 0.000000
 19 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 20 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0x80563238]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
 23 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x42b04007]
 24 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Language/Menu/BuyItem_XPNeeded"
 25 [-]: LOADKB    R8 0 0       ; R8 := false
 26 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 27 [-]: SETTABLE  R9 K11 R2    ; R9["ITEM_NAME"] := R2
 28 [-]: SETTABLE  R9 K12 R1    ; R9["XP_REQUIRED"] := R1
 29 [-]: SELF      R10 R4 K14   ; R11 := R4; R10 := R4[0xefee6c91]
 30 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 31 [-]: SETTABLE  R9 K13 R10   ; R9["XP_CURRENT"] := R10
 32 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 33 [-]: GETUPVAL  R6 U1        ; R6 := U1
 34 [-]: GETTABLE  R6 R6 K15    ; R6 := R6[0xe0cba3ca]
 35 [-]: MOVE      R7 R5        ; R7 := R5
 36 [-]: LOADK     R8 K16       ; R8 := "ConfirmPopup"
 37 [-]: CALL      R6 3 1       ; R6(R7,R8)
 38 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 630
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x76ea806b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x3f3ae64c]
  3 [-]: CONST     R3 0         ; R3 := 0.000000
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: SELF      R3 R1 K3     ; R4 := R1; R3 := R1[0x80563238]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: MOVE      R2 R3        ; R2 := R3
 14 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADNIL   R3 R3        ; R3 := nil
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x69727e0b]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 24 [-]: MOVE      R5 R3        ; R5 := R3
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 0         ; if not R4 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADNIL   R4 R4        ; R4 := nil
 29 [-]: RETURN    R4 2         ; return R4
 30 [-]: GETGLOBAL R4 K5        ; R4 := 0xc8802016
 31 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["mVoidTraders"]
 32 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETGLOBAL R9 K7        ; R9 := 0x64fb1586
 35 [-]: MOVE      R10 R0       ; R10 := R0
 36 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 37 [-]: GETTABLE  R10 R8 K8    ; R10 := R8["mId"]
 38 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["mId"]
 39 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: RETURN    R8 2         ; return R8
 42 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 34; R6 := R7 end
 43 [-]: JMP       34           ; PC := 34
 44 [-]: LOADNIL   R9 R9        ; R9 := nil
 45 [-]: RETURN    R9 2         ; return R9
 46 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 655
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x76ea806b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x3f3ae64c]
  3 [-]: CONST     R3 0         ; R3 := 0.000000
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: SELF      R3 R1 K3     ; R4 := R1; R3 := R1[0x80563238]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: MOVE      R2 R3        ; R2 := R3
 14 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADNIL   R3 R3        ; R3 := nil
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x69727e0b]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 24 [-]: MOVE      R5 R3        ; R5 := R3
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 0         ; if not R4 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADNIL   R4 R4        ; R4 := nil
 29 [-]: RETURN    R4 2         ; return R4
 30 [-]: GETGLOBAL R4 K5        ; R4 := 0x64fb1586
 31 [-]: MOVE      R5 R0        ; R5 := R0
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: GETGLOBAL R5 K6        ; R5 := 0xc8802016
 34 [-]: GETTABLE  R6 R3 K7     ; R6 := R3["mPrimeVaultTraders"]
 35 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 36 [-]: JMP       54           ; PC := 54
 37 [-]: GETTABLE  R10 R9 K8    ; R10 := R9["mId"]
 38 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["mId"]
 39 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 54
 40 [-]: JMP       54           ; PC := 54
 41 [-]: GETGLOBAL R10 K9       ; R10 := 0x34291f5c
 42 [-]: GETTABLE  R10 R10 K10  ; R10 := R10[0x397b920f]
 43 [-]: GETTABLE  R11 R9 K11   ; R11 := R9["mExpiry"]
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: LOADNIL   R11 R11      ; R11 := nil
 46 [-]: LT        0 K12 R10    ; if 0.000000 >= R10 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETTABLE  R11 R9 K13   ; R11 := R9["mManifest"]
 49 [-]: JMP       51           ; PC := 51
 50 [-]: GETTABLE  R11 R9 K14   ; R11 := R9["mNextManifest"]
 51 [-]: MOVE      R12 R9       ; R12 := R9
 52 [-]: MOVE      R13 R11      ; R13 := R11
 53 [-]: RETURN    R12 3        ; return R12,R13
 54 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 37; R7 := R8 end
 55 [-]: JMP       37           ; PC := 37
 56 [-]: LOADNIL   R12 R12      ; R12 := nil
 57 [-]: RETURN    R12 2        ; return R12
 58 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 690
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  76

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  3 [-]: CONST     R3 1         ; R3 := 1.000000
  4 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
  5 [-]: SETGLOBAL R4 K0        ; mBaseSourceType := R4
  6 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
  7 [-]: EQ        1 R4 K3      ; if R4 == 0.000000 then PC := 51
  8 [-]: JMP       51           ; PC := 51
  9 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 10 [-]: EQ        1 R4 K4      ; if R4 == 4.000000 then PC := 51
 11 [-]: JMP       51           ; PC := 51
 12 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 13 [-]: EQ        1 R4 K5      ; if R4 == 5.000000 then PC := 51
 14 [-]: JMP       51           ; PC := 51
 15 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 16 [-]: EQ        1 R4 K6      ; if R4 == 6.000000 then PC := 51
 17 [-]: JMP       51           ; PC := 51
 18 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 19 [-]: EQ        1 R4 K7      ; if R4 == 8.000000 then PC := 51
 20 [-]: JMP       51           ; PC := 51
 21 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 22 [-]: EQ        1 R4 K8      ; if R4 == 10.000000 then PC := 51
 23 [-]: JMP       51           ; PC := 51
 24 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 25 [-]: EQ        1 R4 K9      ; if R4 == 11.000000 then PC := 51
 26 [-]: JMP       51           ; PC := 51
 27 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 28 [-]: EQ        1 R4 K10     ; if R4 == 12.000000 then PC := 51
 29 [-]: JMP       51           ; PC := 51
 30 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 31 [-]: EQ        1 R4 K11     ; if R4 == 13.000000 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 34 [-]: EQ        1 R4 K12     ; if R4 == 14.000000 then PC := 51
 35 [-]: JMP       51           ; PC := 51
 36 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 37 [-]: EQ        1 R4 K13     ; if R4 == 15.000000 then PC := 51
 38 [-]: JMP       51           ; PC := 51
 39 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 40 [-]: EQ        1 R4 K14     ; if R4 == 16.000000 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 43 [-]: EQ        1 R4 K15     ; if R4 == 17.000000 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 46 [-]: EQ        1 R4 K16     ; if R4 == 19.000000 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 49 [-]: EQ        0 R4 K17     ; if R4 ~= 20.000000 then PC := 206
 50 [-]: JMP       206          ; PC := 206
 51 [-]: LOADNIL   R4 R6        ; R4 := R5 := R6 := nil
 52 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mStoreItem"]
 53 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0xc3bbc5cb]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: TEST      R7 0         ; if not R7 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: GETGLOBAL R7 K20       ; R7 := mPurchaseParams
 58 [-]: GETTABLE  R6 R7 K21    ; R6 := R7["mDurability"]
 59 [-]: GETTABLE  R7 R0 K22    ; R7 := R0["mCouponId"]
 60 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["mId"]
 61 [-]: EQ        1 R7 K24     ; if R7 == "" then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 64
 64 [-]: LOADKB    R7 1 0       ; R7 := true
 65 [-]: GETUPVAL  R8 U0        ; R8 := U0
 66 [-]: GETTABLE  R8 R8 K25    ; R8 := R8[0xe9947039]
 67 [-]: GETTABLE  R9 R0 K18    ; R9 := R0["mStoreItem"]
 68 [-]: MOVE      R10 R6       ; R10 := R6
 69 [-]: MOVE      R11 R7       ; R11 := R7
 70 [-]: GETGLOBAL R12 K26      ; R12 := _T
 71 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["purchasedItems"]
 72 [-]: CALL      R8 5 3       ; R8,R9 := R8(R9,R10,R11,R12)
 73 [-]: MOVE      R5 R9        ; R5 := R9
 74 [-]: MOVE      R4 R8        ; R4 := R8
 75 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["mCouponId"]
 76 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["mId"]
 77 [-]: EQ        1 R8 K24     ; if R8 == "" then PC := 104
 78 [-]: JMP       104          ; PC := 104
 79 [-]: EQ        0 R4 K3      ; if R4 ~= 0.000000 then PC := 104
 80 [-]: JMP       104          ; PC := 104
 81 [-]: EQ        0 R5 K3      ; if R5 ~= 0.000000 then PC := 104
 82 [-]: JMP       104          ; PC := 104
 83 [-]: GETUPVAL  R8 U0        ; R8 := U0
 84 [-]: GETTABLE  R8 R8 K28    ; R8 := R8[0xcd71f5a1]
 85 [-]: GETTABLE  R9 R0 K18    ; R9 := R0["mStoreItem"]
 86 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 87 [-]: GETGLOBAL R9 K29       ; R9 := 0x7b998233
 88 [-]: MOVE      R10 R8       ; R10 := R8
 89 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 90 [-]: TEST      R9 1         ; if R9 then PC := 104
 91 [-]: JMP       104          ; PC := 104
 92 [-]: GETUPVAL  R9 U0        ; R9 := U0
 93 [-]: GETTABLE  R9 R9 K25    ; R9 := R9[0xe9947039]
 94 [-]: GETTABLE  R10 R0 K18   ; R10 := R0["mStoreItem"]
 95 [-]: MOVE      R11 R6       ; R11 := R6
 96 [-]: LOADKB    R12 0 0      ; R12 := false
 97 [-]: GETGLOBAL R13 K26      ; R13 := _T
 98 [-]: GETTABLE  R13 R13 K27  ; R13 := R13["purchasedItems"]
 99 [-]: LOADNIL   R14 R14      ; R14 := nil
100 [-]: LOADKB    R15 1 0      ; R15 := true
101 [-]: CALL      R9 7 3       ; R9,R10 := R9(R10,R11,R12,R13,R14,R15)
102 [-]: MOVE      R5 R10       ; R5 := R10
103 [-]: MOVE      R4 R9        ; R4 := R9
104 [-]: LT        0 K3 R4      ; if 0.000000 >= R4 then PC := 118
105 [-]: JMP       118          ; PC := 118
106 [-]: GETTABLE  R9 R0 K30    ; R9 := R0["mUsePremium"]
107 [-]: TEST      R9 1         ; if R9 then PC := 118
108 [-]: JMP       118          ; PC := 118
109 [-]: GETUPVAL  R9 U1        ; R9 := U1
110 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["REGULAR_CREDITS"]
111 [-]: GETTABLE  R10 R0 K32   ; R10 := R0["mQuantity"]
112 [-]: MUL       R10 R4 R10   ; R10 := R4 * R10
113 [-]: SETTABLE  R1 R9 R10    ; R1[R9] := R10
114 [-]: GETUPVAL  R9 U1        ; R9 := U1
115 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["REGULAR_CREDITS"]
116 [-]: SETTABLE  R2 R9 R4     ; R2[R9] := R4
117 [-]: JMP       134          ; PC := 134
118 [-]: LT        0 K3 R5      ; if 0.000000 >= R5 then PC := 132
119 [-]: JMP       132          ; PC := 132
120 [-]: GETTABLE  R9 R0 K30    ; R9 := R0["mUsePremium"]
121 [-]: TEST      R9 0         ; if not R9 then PC := 132
122 [-]: JMP       132          ; PC := 132
123 [-]: GETUPVAL  R9 U1        ; R9 := U1
124 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["PREMIUM_CREDITS"]
125 [-]: GETTABLE  R10 R0 K32   ; R10 := R0["mQuantity"]
126 [-]: MUL       R10 R5 R10   ; R10 := R5 * R10
127 [-]: SETTABLE  R1 R9 R10    ; R1[R9] := R10
128 [-]: GETUPVAL  R9 U1        ; R9 := U1
129 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["PREMIUM_CREDITS"]
130 [-]: SETTABLE  R2 R9 R5     ; R2[R9] := R5
131 [-]: JMP       134          ; PC := 134
132 [-]: LOADNIL   R9 R9        ; R9 := nil
133 [-]: RETURN    R9 2         ; return R9
134 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["mCouponId"]
135 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["mId"]
136 [-]: EQ        1 R9 K24     ; if R9 == "" then PC := 763
137 [-]: JMP       763          ; PC := 763
138 [-]: GETGLOBAL R9 K34       ; R9 := 0x76ea806b
139 [-]: SELF      R9 R9 K35    ; R10 := R9; R9 := R9[0x3f3ae64c]
140 [-]: CONST     R11 0        ; R11 := 0.000000
141 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
142 [-]: GETGLOBAL R10 K29      ; R10 := 0x7b998233
143 [-]: MOVE      R11 R9       ; R11 := R9
144 [-]: CALL      R10 2 2      ; R10 := R10(R11)
145 [-]: TEST      R10 0        ; if not R10 then PC := 149
146 [-]: JMP       149          ; PC := 149
147 [-]: LOADNIL   R10 R10      ; R10 := nil
148 [-]: RETURN    R10 2        ; return R10
149 [-]: SELF      R10 R9 K36   ; R11 := R9; R10 := R9[0x80563238]
150 [-]: CALL      R10 2 2      ; R10 := R10(R11)
151 [-]: GETGLOBAL R11 K29      ; R11 := 0x7b998233
152 [-]: MOVE      R12 R10      ; R12 := R10
153 [-]: CALL      R11 2 2      ; R11 := R11(R12)
154 [-]: TEST      R11 0        ; if not R11 then PC := 158
155 [-]: JMP       158          ; PC := 158
156 [-]: LOADNIL   R11 R11      ; R11 := nil
157 [-]: RETURN    R11 2        ; return R11
158 [-]: LOADNIL   R11 R11      ; R11 := nil
159 [-]: GETGLOBAL R12 K37      ; R12 := 0xc8802016
160 [-]: SELF      R13 R10 K38  ; R14 := R10; R13 := R10[0x464542fe]
161 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
162 [-]: CALL      R12 0 4      ; R12,R13,R14 := R12(R13,...)
163 [-]: JMP       172          ; PC := 172
164 [-]: GETTABLE  R17 R16 K23  ; R17 := R16["mId"]
165 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["mId"]
166 [-]: GETTABLE  R18 R0 K22   ; R18 := R0["mCouponId"]
167 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["mId"]
168 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 172
169 [-]: JMP       172          ; PC := 172
170 [-]: MOVE      R11 R16      ; R11 := R16
171 [-]: JMP       174          ; PC := 174
172 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 164; R14 := R15 end
173 [-]: JMP       164          ; PC := 164
174 [-]: TEST      R11 1        ; if R11 then PC := 178
175 [-]: JMP       178          ; PC := 178
176 [-]: LOADNIL   R17 R17      ; R17 := nil
177 [-]: RETURN    R17 2        ; return R17
178 [-]: SELF      R17 R11 K39  ; R18 := R11; R17 := R11[0x96df49a3]
179 [-]: GETTABLE  R19 R0 K18   ; R19 := R0["mStoreItem"]
180 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
181 [-]: TEST      R17 1        ; if R17 then PC := 185
182 [-]: JMP       185          ; PC := 185
183 [-]: LOADNIL   R17 R17      ; R17 := nil
184 [-]: RETURN    R17 2        ; return R17
185 [-]: GETTABLE  R17 R0 K18   ; R17 := R0["mStoreItem"]
186 [-]: SELF      R17 R17 K40  ; R18 := R17; R17 := R17[0x0f5a34d1]
187 [-]: CALL      R17 2 2      ; R17 := R17(R18)
188 [-]: TEST      R17 0        ; if not R17 then PC := 192
189 [-]: JMP       192          ; PC := 192
190 [-]: LOADNIL   R17 R17      ; R17 := nil
191 [-]: RETURN    R17 2        ; return R17
192 [-]: GETGLOBAL R17 K41      ; R17 := 0xcfc01047
193 [-]: MOVE      R18 R2       ; R18 := R2
194 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
195 [-]: JMP       203          ; PC := 203
196 [-]: GETUPVAL  R22 U0       ; R22 := U0
197 [-]: GETTABLE  R22 R22 K42  ; R22 := R22[0xebcd9651]
198 [-]: GETTABLE  R23 R1 R20   ; R23 := R1[R20]
199 [-]: GETTABLE  R24 R11 K43  ; R24 := R11["mAmount"]
200 [-]: DIV       R24 R24 K44  ; R24 := R24 / 100.000000
201 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
202 [-]: SETTABLE  R1 R20 R22   ; R1[R20] := R22
203 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 196; R19 := R20 end
204 [-]: JMP       196          ; PC := 196
205 [-]: JMP       763          ; PC := 763
206 [-]: GETTABLE  R22 R0 K1    ; R22 := R0["mSource"]
207 [-]: EQ        0 R22 K45    ; if R22 ~= 1.000000 then PC := 339
208 [-]: JMP       339          ; PC := 339
209 [-]: GETUPVAL  R22 U2       ; R22 := U2
210 [-]: GETTABLE  R23 R0 K46   ; R23 := R0["mSourceId"]
211 [-]: CALL      R22 2 2      ; R22 := R22(R23)
212 [-]: TEST      R22 1        ; if R22 then PC := 216
213 [-]: JMP       216          ; PC := 216
214 [-]: LOADNIL   R23 R23      ; R23 := nil
215 [-]: RETURN    R23 2        ; return R23
216 [-]: LOADNIL   R23 R24      ; R23 := R24 := nil
217 [-]: GETTABLE  R25 R0 K47   ; R25 := R0["mExtraPurchaseInfoJson"]
218 [-]: EQ        1 R25 K24    ; if R25 == "" then PC := 232
219 [-]: JMP       232          ; PC := 232
220 [-]: GETGLOBAL R25 K48      ; R25 := cjson
221 [-]: GETTABLE  R25 R25 K49  ; R25 := R25[0x7ab914d8]
222 [-]: GETTABLE  R26 R0 K47   ; R26 := R0["mExtraPurchaseInfoJson"]
223 [-]: CALL      R25 2 2      ; R25 := R25(R26)
224 [-]: GETTABLE  R26 R25 K50  ; R26 := R25["ForcePrimeBucksPrice"]
225 [-]: EQ        1 R26 K51    ; if R26 == nil then PC := 228
226 [-]: JMP       228          ; PC := 228
227 [-]: GETTABLE  R23 R25 K50  ; R23 := R25["ForcePrimeBucksPrice"]
228 [-]: GETTABLE  R26 R25 K52  ; R26 := R25["ForceRegularPrice"]
229 [-]: EQ        1 R26 K51    ; if R26 == nil then PC := 232
230 [-]: JMP       232          ; PC := 232
231 [-]: GETTABLE  R24 R25 K52  ; R24 := R25["ForceRegularPrice"]
232 [-]: EQ        1 R23 K51    ; if R23 == nil then PC := 253
233 [-]: JMP       253          ; PC := 253
234 [-]: GETUPVAL  R26 U1       ; R26 := U1
235 [-]: GETTABLE  R26 R26 K53  ; R26 := R26["PRIME_BUCKS"]
236 [-]: GETTABLE  R27 R0 K32   ; R27 := R0["mQuantity"]
237 [-]: MUL       R27 R23 R27  ; R27 := R23 * R27
238 [-]: SETTABLE  R1 R26 R27   ; R1[R26] := R27
239 [-]: GETUPVAL  R26 U1       ; R26 := U1
240 [-]: GETTABLE  R26 R26 K53  ; R26 := R26["PRIME_BUCKS"]
241 [-]: SETTABLE  R2 R26 R23   ; R2[R26] := R23
242 [-]: EQ        1 R24 K51    ; if R24 == nil then PC := 321
243 [-]: JMP       321          ; PC := 321
244 [-]: GETUPVAL  R26 U1       ; R26 := U1
245 [-]: GETTABLE  R26 R26 K31  ; R26 := R26["REGULAR_CREDITS"]
246 [-]: GETTABLE  R27 R0 K32   ; R27 := R0["mQuantity"]
247 [-]: MUL       R27 R24 R27  ; R27 := R24 * R27
248 [-]: SETTABLE  R1 R26 R27   ; R1[R26] := R27
249 [-]: GETUPVAL  R26 U1       ; R26 := U1
250 [-]: GETTABLE  R26 R26 K31  ; R26 := R26["REGULAR_CREDITS"]
251 [-]: SETTABLE  R2 R26 R24   ; R2[R26] := R24
252 [-]: JMP       321          ; PC := 321
253 [-]: GETGLOBAL R26 K37      ; R26 := 0xc8802016
254 [-]: GETTABLE  R27 R22 K54  ; R27 := R22["mManifest"]
255 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
256 [-]: JMP       319          ; PC := 319
257 [-]: GETTABLE  R31 R30 K55  ; R31 := R30["mItemType"]
258 [-]: GETTABLE  R32 R0 K18   ; R32 := R0["mStoreItem"]
259 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 319
260 [-]: JMP       319          ; PC := 319
261 [-]: GETTABLE  R31 R30 K56  ; R31 := R30["mPrimePrice"]
262 [-]: LT        0 K3 R31     ; if 0.000000 >= R31 then PC := 274
263 [-]: JMP       274          ; PC := 274
264 [-]: GETUPVAL  R31 U1       ; R31 := U1
265 [-]: GETTABLE  R31 R31 K53  ; R31 := R31["PRIME_BUCKS"]
266 [-]: GETTABLE  R32 R30 K56  ; R32 := R30["mPrimePrice"]
267 [-]: GETTABLE  R33 R0 K32   ; R33 := R0["mQuantity"]
268 [-]: MUL       R32 R32 R33  ; R32 := R32 * R33
269 [-]: SETTABLE  R1 R31 R32   ; R1[R31] := R32
270 [-]: GETUPVAL  R31 U1       ; R31 := U1
271 [-]: GETTABLE  R31 R31 K53  ; R31 := R31["PRIME_BUCKS"]
272 [-]: GETTABLE  R32 R30 K56  ; R32 := R30["mPrimePrice"]
273 [-]: SETTABLE  R2 R31 R32   ; R2[R31] := R32
274 [-]: GETTABLE  R31 R30 K57  ; R31 := R30["mRegularPrice"]
275 [-]: LT        0 K3 R31     ; if 0.000000 >= R31 then PC := 287
276 [-]: JMP       287          ; PC := 287
277 [-]: GETUPVAL  R31 U1       ; R31 := U1
278 [-]: GETTABLE  R31 R31 K31  ; R31 := R31["REGULAR_CREDITS"]
279 [-]: GETTABLE  R32 R30 K57  ; R32 := R30["mRegularPrice"]
280 [-]: GETTABLE  R33 R0 K32   ; R33 := R0["mQuantity"]
281 [-]: MUL       R32 R32 R33  ; R32 := R32 * R33
282 [-]: SETTABLE  R1 R31 R32   ; R1[R31] := R32
283 [-]: GETUPVAL  R31 U1       ; R31 := U1
284 [-]: GETTABLE  R31 R31 K31  ; R31 := R31["REGULAR_CREDITS"]
285 [-]: GETTABLE  R32 R30 K57  ; R32 := R30["mRegularPrice"]
286 [-]: SETTABLE  R2 R31 R32   ; R2[R31] := R32
287 [-]: GETTABLE  R31 R30 K58  ; R31 := R30["mItemPrices"]
288 [-]: EQ        1 R31 K51    ; if R31 == nil then PC := 321
289 [-]: JMP       321          ; PC := 321
290 [-]: GETUPVAL  R31 U1       ; R31 := U1
291 [-]: GETTABLE  R31 R31 K59  ; R31 := R31["ITEMS"]
292 [-]: GETTABLE  R32 R30 K58  ; R32 := R30["mItemPrices"]
293 [-]: SETTABLE  R1 R31 R32   ; R1[R31] := R32
294 [-]: CONST     R31 1        ; R31 := 1.000000
295 [-]: GETUPVAL  R32 U1       ; R32 := U1
296 [-]: GETTABLE  R32 R32 K59  ; R32 := R32["ITEMS"]
297 [-]: GETTABLE  R32 R1 R32   ; R32 := R1[R32]
298 [-]: LEN       R32 R32      ; R32 := # R32
299 [-]: CONST     R33 1        ; R33 := 1.000000
300 [-]: FORPREP   R31 313      ; R31 -= R33; PC := 313
301 [-]: GETUPVAL  R35 U1       ; R35 := U1
302 [-]: GETTABLE  R35 R35 K59  ; R35 := R35["ITEMS"]
303 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
304 [-]: GETTABLE  R35 R35 R34  ; R35 := R35[R34]
305 [-]: GETUPVAL  R36 U1       ; R36 := U1
306 [-]: GETTABLE  R36 R36 K59  ; R36 := R36["ITEMS"]
307 [-]: GETTABLE  R36 R1 R36   ; R36 := R1[R36]
308 [-]: GETTABLE  R36 R36 R34  ; R36 := R36[R34]
309 [-]: GETTABLE  R36 R36 K60  ; R36 := R36["mItemCount"]
310 [-]: GETTABLE  R37 R0 K32   ; R37 := R0["mQuantity"]
311 [-]: MUL       R36 R36 R37  ; R36 := R36 * R37
312 [-]: SETTABLE  R35 K60 R36  ; R35["mItemCount"] := R36
313 [-]: FORLOOP   R31 301      ; R31 += R33; if R31 <= R32 then begin PC := 301; R34 := R31 end
314 [-]: GETUPVAL  R35 U1       ; R35 := U1
315 [-]: GETTABLE  R35 R35 K59  ; R35 := R35["ITEMS"]
316 [-]: GETTABLE  R36 R30 K58  ; R36 := R30["mItemPrices"]
317 [-]: SETTABLE  R2 R35 R36   ; R2[R35] := R36
318 [-]: JMP       321          ; PC := 321
319 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 257; R28 := R29 end
320 [-]: JMP       257          ; PC := 257
321 [-]: GETUPVAL  R35 U1       ; R35 := U1
322 [-]: GETTABLE  R35 R35 K53  ; R35 := R35["PRIME_BUCKS"]
323 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
324 [-]: TEST      R35 1        ; if R35 then PC := 763
325 [-]: JMP       763          ; PC := 763
326 [-]: GETUPVAL  R35 U1       ; R35 := U1
327 [-]: GETTABLE  R35 R35 K31  ; R35 := R35["REGULAR_CREDITS"]
328 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
329 [-]: TEST      R35 1        ; if R35 then PC := 763
330 [-]: JMP       763          ; PC := 763
331 [-]: GETUPVAL  R35 U1       ; R35 := U1
332 [-]: GETTABLE  R35 R35 K59  ; R35 := R35["ITEMS"]
333 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
334 [-]: TEST      R35 1        ; if R35 then PC := 763
335 [-]: JMP       763          ; PC := 763
336 [-]: LOADNIL   R35 R35      ; R35 := nil
337 [-]: RETURN    R35 2        ; return R35
338 [-]: JMP       763          ; PC := 763
339 [-]: GETTABLE  R35 R0 K1    ; R35 := R0["mSource"]
340 [-]: EQ        0 R35 K61    ; if R35 ~= 18.000000 then PC := 425
341 [-]: JMP       425          ; PC := 425
342 [-]: GETUPVAL  R35 U3       ; R35 := U3
343 [-]: GETTABLE  R36 R0 K46   ; R36 := R0["mSourceId"]
344 [-]: CALL      R35 2 3      ; R35,R36 := R35(R36)
345 [-]: TEST      R35 1        ; if R35 then PC := 349
346 [-]: JMP       349          ; PC := 349
347 [-]: LOADNIL   R37 R37      ; R37 := nil
348 [-]: RETURN    R37 2        ; return R37
349 [-]: LOADKB    R37 0 0      ; R37 := false
350 [-]: MOVE      R38 R36      ; R38 := R36
351 [-]: CONST     R39 1        ; R39 := 1.000000
352 [-]: GETGLOBAL R40 K37      ; R40 := 0xc8802016
353 [-]: MOVE      R41 R38      ; R41 := R38
354 [-]: CALL      R40 2 4      ; R40,R41,R42 := R40(R41)
355 [-]: JMP       401          ; PC := 401
356 [-]: GETTABLE  R45 R44 K55  ; R45 := R44["mItemType"]
357 [-]: GETTABLE  R46 R0 K18   ; R46 := R0["mStoreItem"]
358 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 401
359 [-]: JMP       401          ; PC := 401
360 [-]: GETTABLE  R45 R44 K56  ; R45 := R44["mPrimePrice"]
361 [-]: LT        0 K3 R45     ; if 0.000000 >= R45 then PC := 373
362 [-]: JMP       373          ; PC := 373
363 [-]: GETUPVAL  R45 U1       ; R45 := U1
364 [-]: GETTABLE  R45 R45 K62  ; R45 := R45["PRIME_TOKENS"]
365 [-]: GETTABLE  R46 R44 K56  ; R46 := R44["mPrimePrice"]
366 [-]: GETTABLE  R47 R0 K32   ; R47 := R0["mQuantity"]
367 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
368 [-]: SETTABLE  R1 R45 R46   ; R1[R45] := R46
369 [-]: GETUPVAL  R45 U1       ; R45 := U1
370 [-]: GETTABLE  R45 R45 K62  ; R45 := R45["PRIME_TOKENS"]
371 [-]: GETTABLE  R46 R44 K56  ; R46 := R44["mPrimePrice"]
372 [-]: SETTABLE  R2 R45 R46   ; R2[R45] := R46
373 [-]: GETTABLE  R45 R44 K57  ; R45 := R44["mRegularPrice"]
374 [-]: LT        0 K3 R45     ; if 0.000000 >= R45 then PC := 399
375 [-]: JMP       399          ; PC := 399
376 [-]: GETGLOBAL R45 K63      ; R45 := 0x7ed0a956
377 [-]: LOADK     R46 K64      ; R46 := "/Lotus/Types/Items/MiscItems/SchismKey"
378 [-]: CALL      R45 2 2      ; R45 := R45(R46)
379 [-]: GETUPVAL  R46 U1       ; R46 := U1
380 [-]: GETTABLE  R46 R46 K59  ; R46 := R46["ITEMS"]
381 [-]: NEWTABLE  R47 1 0      ; R47 := {}
382 [-]: NEWTABLE  R48 0 2      ; R48 := {}
383 [-]: SETTABLE  R48 K55 R45  ; R48["mItemType"] := R45
384 [-]: GETTABLE  R49 R44 K57  ; R49 := R44["mRegularPrice"]
385 [-]: GETTABLE  R50 R0 K32   ; R50 := R0["mQuantity"]
386 [-]: MUL       R49 R49 R50  ; R49 := R49 * R50
387 [-]: SETTABLE  R48 K60 R49  ; R48["mItemCount"] := R49
388 [-]: SETLIST   R47 1 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
389 [-]: SETTABLE  R1 R46 R47   ; R1[R46] := R47
390 [-]: GETUPVAL  R46 U1       ; R46 := U1
391 [-]: GETTABLE  R46 R46 K59  ; R46 := R46["ITEMS"]
392 [-]: NEWTABLE  R47 1 0      ; R47 := {}
393 [-]: NEWTABLE  R48 0 2      ; R48 := {}
394 [-]: SETTABLE  R48 K55 R45  ; R48["mItemType"] := R45
395 [-]: GETTABLE  R49 R44 K57  ; R49 := R44["mRegularPrice"]
396 [-]: SETTABLE  R48 K60 R49  ; R48["mItemCount"] := R49
397 [-]: SETLIST   R47 1 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
398 [-]: SETTABLE  R2 R46 R47   ; R2[R46] := R47
399 [-]: LOADKB    R37 1 0      ; R37 := true
400 [-]: JMP       403          ; PC := 403
401 [-]: TFORLOOP  R40 2        ; R43,R44 :=  R40(R41,R42); if R43 ~= nil then begin PC = 356; R42 := R43 end
402 [-]: JMP       356          ; PC := 356
403 [-]: TEST      R37 0        ; if not R37 then PC := 406
404 [-]: JMP       406          ; PC := 406
405 [-]: JMP       412          ; PC := 412
406 [-]: LE        0 K65 R39    ; if 2.000000 > R39 then PC := 409
407 [-]: JMP       409          ; PC := 409
408 [-]: JMP       412          ; PC := 412
409 [-]: CONST     R39 2        ; R39 := 2.000000
410 [-]: GETTABLE  R38 R35 K66  ; R38 := R35["mEvergreenManifest"]
411 [-]: JMP       352          ; PC := 352
412 [-]: GETUPVAL  R46 U1       ; R46 := U1
413 [-]: GETTABLE  R46 R46 K62  ; R46 := R46["PRIME_TOKENS"]
414 [-]: GETTABLE  R46 R1 R46   ; R46 := R1[R46]
415 [-]: TEST      R46 1        ; if R46 then PC := 763
416 [-]: JMP       763          ; PC := 763
417 [-]: GETUPVAL  R46 U1       ; R46 := U1
418 [-]: GETTABLE  R46 R46 K59  ; R46 := R46["ITEMS"]
419 [-]: GETTABLE  R46 R1 R46   ; R46 := R1[R46]
420 [-]: TEST      R46 1        ; if R46 then PC := 763
421 [-]: JMP       763          ; PC := 763
422 [-]: LOADNIL   R46 R46      ; R46 := nil
423 [-]: RETURN    R46 2        ; return R46
424 [-]: JMP       763          ; PC := 763
425 [-]: GETTABLE  R46 R0 K1    ; R46 := R0["mSource"]
426 [-]: EQ        0 R46 K65    ; if R46 ~= 2.000000 then PC := 522
427 [-]: JMP       522          ; PC := 522
428 [-]: GETTABLE  R46 R0 K67   ; R46 := R0["mSyndicateTag"]
429 [-]: SELF      R46 R46 K68  ; R47 := R46; R46 := R46[0x56c01834]
430 [-]: CALL      R46 2 2      ; R46 := R46(R47)
431 [-]: TEST      R46 1        ; if R46 then PC := 435
432 [-]: JMP       435          ; PC := 435
433 [-]: LOADNIL   R46 R46      ; R46 := nil
434 [-]: RETURN    R46 2        ; return R46
435 [-]: GETGLOBAL R46 K69      ; R46 := 0xa94df70b
436 [-]: SELF      R46 R46 K70  ; R47 := R46; R46 := R46[0x07408254]
437 [-]: GETTABLE  R48 R0 K67   ; R48 := R0["mSyndicateTag"]
438 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
439 [-]: GETGLOBAL R47 K29      ; R47 := 0x7b998233
440 [-]: MOVE      R48 R46      ; R48 := R46
441 [-]: CALL      R47 2 2      ; R47 := R47(R48)
442 [-]: TEST      R47 0        ; if not R47 then PC := 446
443 [-]: JMP       446          ; PC := 446
444 [-]: LOADNIL   R47 R47      ; R47 := nil
445 [-]: RETURN    R47 2        ; return R47
446 [-]: GETTABLE  R47 R0 K71   ; R47 := R0["mUseFreeFavor"]
447 [-]: TEST      R47 0        ; if not R47 then PC := 457
448 [-]: JMP       457          ; PC := 457
449 [-]: GETTABLE  R47 R0 K32   ; R47 := R0["mQuantity"]
450 [-]: LT        0 K45 R47    ; if 1.000000 >= R47 then PC := 454
451 [-]: JMP       454          ; PC := 454
452 [-]: LOADNIL   R47 R47      ; R47 := nil
453 [-]: RETURN    R47 2        ; return R47
454 [-]: NEWTABLE  R47 0 0      ; R47 := {}
455 [-]: NEWTABLE  R48 0 0      ; R48 := {}
456 [-]: RETURN    R47 3        ; return R47,R48
457 [-]: GETGLOBAL R47 K72      ; R47 := 0xb009bbc6
458 [-]: SELF      R48 R46 K73  ; R49 := R46; R48 := R46[0xcbbdc11b]
459 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
460 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
461 [-]: LOADNIL   R48 R48      ; R48 := nil
462 [-]: GETTABLE  R49 R0 K74   ; R49 := R0["mIsSupplyDrop"]
463 [-]: TEST      R49 0        ; if not R49 then PC := 469
464 [-]: JMP       469          ; PC := 469
465 [-]: SELF      R49 R47 K75  ; R50 := R47; R49 := R47[0x45d282eb]
466 [-]: CALL      R49 2 2      ; R49 := R49(R50)
467 [-]: MOVE      R48 R49      ; R48 := R49
468 [-]: JMP       472          ; PC := 472
469 [-]: SELF      R49 R47 K76  ; R50 := R47; R49 := R47[0x3cab9eeb]
470 [-]: CALL      R49 2 2      ; R49 := R49(R50)
471 [-]: MOVE      R48 R49      ; R48 := R49
472 [-]: GETGLOBAL R49 K37      ; R49 := 0xc8802016
473 [-]: MOVE      R50 R48      ; R50 := R48
474 [-]: CALL      R49 2 4      ; R49,R50,R51 := R49(R50)
475 [-]: JMP       507          ; PC := 507
476 [-]: GETTABLE  R54 R53 K77  ; R54 := R53["storeItem"]
477 [-]: GETTABLE  R55 R0 K18   ; R55 := R0["mStoreItem"]
478 [-]: EQ        0 R54 R55    ; if R54 ~= R55 then PC := 507
479 [-]: JMP       507          ; PC := 507
480 [-]: GETTABLE  R54 R53 K78  ; R54 := R53["standingCost"]
481 [-]: LT        0 K3 R54     ; if 0.000000 >= R54 then PC := 493
482 [-]: JMP       493          ; PC := 493
483 [-]: GETUPVAL  R54 U1       ; R54 := U1
484 [-]: GETTABLE  R54 R54 K79  ; R54 := R54["STANDING"]
485 [-]: GETTABLE  R55 R53 K78  ; R55 := R53["standingCost"]
486 [-]: GETTABLE  R56 R0 K32   ; R56 := R0["mQuantity"]
487 [-]: MUL       R55 R55 R56  ; R55 := R55 * R56
488 [-]: SETTABLE  R1 R54 R55   ; R1[R54] := R55
489 [-]: GETUPVAL  R54 U1       ; R54 := U1
490 [-]: GETTABLE  R54 R54 K79  ; R54 := R54["STANDING"]
491 [-]: GETTABLE  R55 R53 K78  ; R55 := R53["standingCost"]
492 [-]: SETTABLE  R2 R54 R55   ; R2[R54] := R55
493 [-]: GETTABLE  R54 R53 K80  ; R54 := R53["creditsCost"]
494 [-]: LT        0 K3 R54     ; if 0.000000 >= R54 then PC := 509
495 [-]: JMP       509          ; PC := 509
496 [-]: GETUPVAL  R54 U1       ; R54 := U1
497 [-]: GETTABLE  R54 R54 K31  ; R54 := R54["REGULAR_CREDITS"]
498 [-]: GETTABLE  R55 R53 K80  ; R55 := R53["creditsCost"]
499 [-]: GETTABLE  R56 R0 K32   ; R56 := R0["mQuantity"]
500 [-]: MUL       R55 R55 R56  ; R55 := R55 * R56
501 [-]: SETTABLE  R1 R54 R55   ; R1[R54] := R55
502 [-]: GETUPVAL  R54 U1       ; R54 := U1
503 [-]: GETTABLE  R54 R54 K31  ; R54 := R54["REGULAR_CREDITS"]
504 [-]: GETTABLE  R55 R53 K80  ; R55 := R53["creditsCost"]
505 [-]: SETTABLE  R2 R54 R55   ; R2[R54] := R55
506 [-]: JMP       509          ; PC := 509
507 [-]: TFORLOOP  R49 2        ; R52,R53 :=  R49(R50,R51); if R52 ~= nil then begin PC = 476; R51 := R52 end
508 [-]: JMP       476          ; PC := 476
509 [-]: GETUPVAL  R54 U1       ; R54 := U1
510 [-]: GETTABLE  R54 R54 K79  ; R54 := R54["STANDING"]
511 [-]: GETTABLE  R54 R1 R54   ; R54 := R1[R54]
512 [-]: TEST      R54 1        ; if R54 then PC := 763
513 [-]: JMP       763          ; PC := 763
514 [-]: GETUPVAL  R54 U1       ; R54 := U1
515 [-]: GETTABLE  R54 R54 K31  ; R54 := R54["REGULAR_CREDITS"]
516 [-]: GETTABLE  R54 R1 R54   ; R54 := R1[R54]
517 [-]: TEST      R54 1        ; if R54 then PC := 763
518 [-]: JMP       763          ; PC := 763
519 [-]: LOADNIL   R54 R54      ; R54 := nil
520 [-]: RETURN    R54 2        ; return R54
521 [-]: JMP       763          ; PC := 763
522 [-]: GETTABLE  R54 R0 K1    ; R54 := R0["mSource"]
523 [-]: EQ        0 R54 K81    ; if R54 ~= 3.000000 then PC := 553
524 [-]: JMP       553          ; PC := 553
525 [-]: GETUPVAL  R54 U0       ; R54 := U0
526 [-]: GETTABLE  R54 R54 K82  ; R54 := R54[0xe87653f1]
527 [-]: CALL      R54 1 2      ; R54 := R54()
528 [-]: GETGLOBAL R55 K29      ; R55 := 0x7b998233
529 [-]: MOVE      R56 R54      ; R56 := R54
530 [-]: CALL      R55 2 2      ; R55 := R55(R56)
531 [-]: TEST      R55 1        ; if R55 then PC := 540
532 [-]: JMP       540          ; PC := 540
533 [-]: GETTABLE  R55 R54 K18  ; R55 := R54["mStoreItem"]
534 [-]: GETTABLE  R56 R0 K18   ; R56 := R0["mStoreItem"]
535 [-]: EQ        0 R55 R56    ; if R55 ~= R56 then PC := 540
536 [-]: JMP       540          ; PC := 540
537 [-]: GETTABLE  R55 R54 K83  ; R55 := R54["mSalePrice"]
538 [-]: LE        0 R55 K3     ; if R55 > 0.000000 then PC := 542
539 [-]: JMP       542          ; PC := 542
540 [-]: LOADNIL   R55 R55      ; R55 := nil
541 [-]: RETURN    R55 2        ; return R55
542 [-]: GETUPVAL  R55 U1       ; R55 := U1
543 [-]: GETTABLE  R55 R55 K33  ; R55 := R55["PREMIUM_CREDITS"]
544 [-]: GETTABLE  R56 R54 K83  ; R56 := R54["mSalePrice"]
545 [-]: GETTABLE  R57 R0 K32   ; R57 := R0["mQuantity"]
546 [-]: MUL       R56 R56 R57  ; R56 := R56 * R57
547 [-]: SETTABLE  R1 R55 R56   ; R1[R55] := R56
548 [-]: GETUPVAL  R55 U1       ; R55 := U1
549 [-]: GETTABLE  R55 R55 K33  ; R55 := R55["PREMIUM_CREDITS"]
550 [-]: GETTABLE  R56 R54 K83  ; R56 := R54["mSalePrice"]
551 [-]: SETTABLE  R2 R55 R56   ; R2[R55] := R56
552 [-]: JMP       763          ; PC := 763
553 [-]: GETTABLE  R55 R0 K1    ; R55 := R0["mSource"]
554 [-]: EQ        0 R55 K84    ; if R55 ~= 7.000000 then PC := 763
555 [-]: JMP       763          ; PC := 763
556 [-]: GETGLOBAL R55 K63      ; R55 := 0x7ed0a956
557 [-]: LOADK     R56 K85      ; R56 := "/Lotus/Types/Items/Events/AmbulasDataFragment"
558 [-]: CALL      R55 2 2      ; R55 := R55(R56)
559 [-]: LOADNIL   R56 R56      ; R56 := nil
560 [-]: GETGLOBAL R57 K72      ; R57 := 0xb009bbc6
561 [-]: GETTABLE  R58 R0 K46   ; R58 := R0["mSourceId"]
562 [-]: CALL      R57 2 2      ; R57 := R57(R58)
563 [-]: GETGLOBAL R58 K29      ; R58 := 0x7b998233
564 [-]: MOVE      R59 R57      ; R59 := R57
565 [-]: CALL      R58 2 2      ; R58 := R58(R59)
566 [-]: TEST      R58 0        ; if not R58 then PC := 585
567 [-]: JMP       585          ; PC := 585
568 [-]: GETGLOBAL R58 K34      ; R58 := 0x76ea806b
569 [-]: SELF      R58 R58 K35  ; R59 := R58; R58 := R58[0x3f3ae64c]
570 [-]: CONST     R60 0        ; R60 := 0.000000
571 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
572 [-]: SELF      R58 R58 K36  ; R59 := R58; R58 := R58[0x80563238]
573 [-]: CALL      R58 2 2      ; R58 := R58(R59)
574 [-]: SELF      R59 R58 K86  ; R60 := R58; R59 := R58[0xa2997b3c]
575 [-]: LOADNIL   R61 R61      ; R61 := nil
576 [-]: GETTABLE  R62 R0 K46   ; R62 := R0["mSourceId"]
577 [-]: CALL      R59 4 2      ; R59 := R59(R60,R61,R62)
578 [-]: GETTABLE  R60 R59 K23  ; R60 := R59["mId"]
579 [-]: GETTABLE  R60 R60 K23  ; R60 := R60["mId"]
580 [-]: GETTABLE  R61 R0 K46   ; R61 := R0["mSourceId"]
581 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 588
582 [-]: JMP       588          ; PC := 588
583 [-]: GETTABLE  R56 R59 K87  ; R56 := R59["mItemManifest"]
584 [-]: JMP       588          ; PC := 588
585 [-]: SELF      R60 R57 K88  ; R61 := R57; R60 := R57[0x60e4aa28]
586 [-]: CALL      R60 2 2      ; R60 := R60(R61)
587 [-]: MOVE      R56 R60      ; R56 := R60
588 [-]: GETGLOBAL R60 K29      ; R60 := 0x7b998233
589 [-]: MOVE      R61 R56      ; R61 := R56
590 [-]: CALL      R60 2 2      ; R60 := R60(R61)
591 [-]: TEST      R60 0        ; if not R60 then PC := 595
592 [-]: JMP       595          ; PC := 595
593 [-]: LOADNIL   R60 R60      ; R60 := nil
594 [-]: RETURN    R60 2        ; return R60
595 [-]: GETTABLE  R60 R0 K18   ; R60 := R0["mStoreItem"]
596 [-]: LOADNIL   R61 R61      ; R61 := nil
597 [-]: GETTABLE  R62 R0 K47   ; R62 := R0["mExtraPurchaseInfoJson"]
598 [-]: EQ        1 R62 K24    ; if R62 == "" then PC := 608
599 [-]: JMP       608          ; PC := 608
600 [-]: GETGLOBAL R62 K48      ; R62 := cjson
601 [-]: GETTABLE  R62 R62 K49  ; R62 := R62[0x7ab914d8]
602 [-]: GETTABLE  R63 R0 K47   ; R63 := R0["mExtraPurchaseInfoJson"]
603 [-]: CALL      R62 2 2      ; R62 := R62(R63)
604 [-]: GETTABLE  R63 R62 K89  ; R63 := R62["ItemId"]
605 [-]: EQ        1 R63 K51    ; if R63 == nil then PC := 608
606 [-]: JMP       608          ; PC := 608
607 [-]: GETTABLE  R61 R62 K89  ; R61 := R62["ItemId"]
608 [-]: LOADKB    R63 0 0      ; R63 := false
609 [-]: CONST     R64 1        ; R64 := 1.000000
610 [-]: LEN       R65 R56      ; R65 := # R56
611 [-]: CONST     R66 1        ; R66 := 1.000000
612 [-]: FORPREP   R64 758      ; R64 -= R66; PC := 758
613 [-]: GETTABLE  R68 R56 R67  ; R68 := R56[R67]
614 [-]: GETGLOBAL R69 K29      ; R69 := 0x7b998233
615 [-]: MOVE      R70 R61      ; R70 := R61
616 [-]: CALL      R69 2 2      ; R69 := R69(R70)
617 [-]: TEST      R69 1        ; if R69 then PC := 624
618 [-]: JMP       624          ; PC := 624
619 [-]: GETTABLE  R69 R68 K23  ; R69 := R68["mId"]
620 [-]: SELF      R69 R69 K90  ; R70 := R69; R69 := R69[0xf537cfc7]
621 [-]: CALL      R69 2 2      ; R69 := R69(R70)
622 [-]: EQ        1 R61 R69    ; if R61 == R69 then PC := 632
623 [-]: JMP       632          ; PC := 632
624 [-]: GETGLOBAL R69 K29      ; R69 := 0x7b998233
625 [-]: MOVE      R70 R61      ; R70 := R61
626 [-]: CALL      R69 2 2      ; R69 := R69(R70)
627 [-]: TEST      R69 0        ; if not R69 then PC := 758
628 [-]: JMP       758          ; PC := 758
629 [-]: GETTABLE  R69 R68 K18  ; R69 := R68["mStoreItem"]
630 [-]: EQ        0 R69 R60    ; if R69 ~= R60 then PC := 758
631 [-]: JMP       758          ; PC := 758
632 [-]: GETTABLE  R69 R68 K57  ; R69 := R68["mRegularPrice"]
633 [-]: GETTABLE  R69 R69 K91  ; R69 := R69["minValue"]
634 [-]: GETTABLE  R70 R68 K57  ; R70 := R68["mRegularPrice"]
635 [-]: GETTABLE  R70 R70 K92  ; R70 := R70["maxValue"]
636 [-]: EQ        0 R69 R70    ; if R69 ~= R70 then PC := 655
637 [-]: JMP       655          ; PC := 655
638 [-]: GETTABLE  R69 R68 K57  ; R69 := R68["mRegularPrice"]
639 [-]: GETTABLE  R69 R69 K92  ; R69 := R69["maxValue"]
640 [-]: LT        0 K3 R69     ; if 0.000000 >= R69 then PC := 655
641 [-]: JMP       655          ; PC := 655
642 [-]: GETUPVAL  R69 U1       ; R69 := U1
643 [-]: GETTABLE  R69 R69 K31  ; R69 := R69["REGULAR_CREDITS"]
644 [-]: GETTABLE  R70 R68 K57  ; R70 := R68["mRegularPrice"]
645 [-]: GETTABLE  R70 R70 K92  ; R70 := R70["maxValue"]
646 [-]: GETTABLE  R71 R0 K32   ; R71 := R0["mQuantity"]
647 [-]: MUL       R70 R70 R71  ; R70 := R70 * R71
648 [-]: SETTABLE  R1 R69 R70   ; R1[R69] := R70
649 [-]: GETUPVAL  R69 U1       ; R69 := U1
650 [-]: GETTABLE  R69 R69 K31  ; R69 := R69["REGULAR_CREDITS"]
651 [-]: GETTABLE  R70 R68 K57  ; R70 := R68["mRegularPrice"]
652 [-]: GETTABLE  R70 R70 K92  ; R70 := R70["maxValue"]
653 [-]: SETTABLE  R2 R69 R70   ; R2[R69] := R70
654 [-]: LOADKB    R63 1 0      ; R63 := true
655 [-]: GETTABLE  R69 R68 K93  ; R69 := R68["mPremiumPrice"]
656 [-]: GETTABLE  R69 R69 K91  ; R69 := R69["minValue"]
657 [-]: GETTABLE  R70 R68 K93  ; R70 := R68["mPremiumPrice"]
658 [-]: GETTABLE  R70 R70 K92  ; R70 := R70["maxValue"]
659 [-]: EQ        0 R69 R70    ; if R69 ~= R70 then PC := 678
660 [-]: JMP       678          ; PC := 678
661 [-]: GETTABLE  R69 R68 K93  ; R69 := R68["mPremiumPrice"]
662 [-]: GETTABLE  R69 R69 K92  ; R69 := R69["maxValue"]
663 [-]: LT        0 K3 R69     ; if 0.000000 >= R69 then PC := 678
664 [-]: JMP       678          ; PC := 678
665 [-]: GETUPVAL  R69 U1       ; R69 := U1
666 [-]: GETTABLE  R69 R69 K33  ; R69 := R69["PREMIUM_CREDITS"]
667 [-]: GETTABLE  R70 R68 K93  ; R70 := R68["mPremiumPrice"]
668 [-]: GETTABLE  R70 R70 K92  ; R70 := R70["maxValue"]
669 [-]: GETTABLE  R71 R0 K32   ; R71 := R0["mQuantity"]
670 [-]: MUL       R70 R70 R71  ; R70 := R70 * R71
671 [-]: SETTABLE  R1 R69 R70   ; R1[R69] := R70
672 [-]: GETUPVAL  R69 U1       ; R69 := U1
673 [-]: GETTABLE  R69 R69 K33  ; R69 := R69["PREMIUM_CREDITS"]
674 [-]: GETTABLE  R70 R68 K93  ; R70 := R68["mPremiumPrice"]
675 [-]: GETTABLE  R70 R70 K92  ; R70 := R70["maxValue"]
676 [-]: SETTABLE  R2 R69 R70   ; R2[R69] := R70
677 [-]: LOADKB    R63 1 0      ; R63 := true
678 [-]: GETTABLE  R69 R68 K58  ; R69 := R68["mItemPrices"]
679 [-]: EQ        1 R69 K51    ; if R69 == nil then PC := 736
680 [-]: JMP       736          ; PC := 736
681 [-]: LOADKB    R63 1 0      ; R63 := true
682 [-]: GETUPVAL  R69 U1       ; R69 := U1
683 [-]: GETTABLE  R69 R69 K59  ; R69 := R69["ITEMS"]
684 [-]: GETTABLE  R70 R68 K58  ; R70 := R68["mItemPrices"]
685 [-]: SETTABLE  R1 R69 R70   ; R1[R69] := R70
686 [-]: GETUPVAL  R69 U1       ; R69 := U1
687 [-]: GETTABLE  R69 R69 K59  ; R69 := R69["ITEMS"]
688 [-]: GETTABLE  R70 R68 K58  ; R70 := R68["mItemPrices"]
689 [-]: SETTABLE  R2 R69 R70   ; R2[R69] := R70
690 [-]: CONST     R69 1        ; R69 := 1.000000
691 [-]: GETUPVAL  R70 U1       ; R70 := U1
692 [-]: GETTABLE  R70 R70 K59  ; R70 := R70["ITEMS"]
693 [-]: GETTABLE  R70 R1 R70   ; R70 := R1[R70]
694 [-]: LEN       R70 R70      ; R70 := # R70
695 [-]: CONST     R71 1        ; R71 := 1.000000
696 [-]: FORPREP   R69 735      ; R69 -= R71; PC := 735
697 [-]: GETUPVAL  R73 U1       ; R73 := U1
698 [-]: GETTABLE  R73 R73 K59  ; R73 := R73["ITEMS"]
699 [-]: GETTABLE  R73 R1 R73   ; R73 := R1[R73]
700 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
701 [-]: GETTABLE  R73 R73 K55  ; R73 := R73["mItemType"]
702 [-]: EQ        0 R73 R55    ; if R73 ~= R55 then PC := 715
703 [-]: JMP       715          ; PC := 715
704 [-]: GETUPVAL  R73 U1       ; R73 := U1
705 [-]: GETTABLE  R73 R73 K94  ; R73 := R73["AMBULAS_DATA"]
706 [-]: GETTABLE  R74 R68 K95  ; R74 := R68["mExtraCurrencyPrice"]
707 [-]: GETTABLE  R75 R0 K32   ; R75 := R0["mQuantity"]
708 [-]: MUL       R74 R74 R75  ; R74 := R74 * R75
709 [-]: SETTABLE  R1 R73 R74   ; R1[R73] := R74
710 [-]: GETUPVAL  R73 U1       ; R73 := U1
711 [-]: GETTABLE  R73 R73 K94  ; R73 := R73["AMBULAS_DATA"]
712 [-]: GETTABLE  R74 R68 K95  ; R74 := R68["mExtraCurrencyPrice"]
713 [-]: SETTABLE  R2 R73 R74   ; R2[R73] := R74
714 [-]: JMP       735          ; PC := 735
715 [-]: GETUPVAL  R73 U1       ; R73 := U1
716 [-]: GETTABLE  R73 R73 K59  ; R73 := R73["ITEMS"]
717 [-]: GETTABLE  R73 R1 R73   ; R73 := R1[R73]
718 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
719 [-]: GETUPVAL  R74 U1       ; R74 := U1
720 [-]: GETTABLE  R74 R74 K59  ; R74 := R74["ITEMS"]
721 [-]: GETTABLE  R74 R1 R74   ; R74 := R1[R74]
722 [-]: GETTABLE  R74 R74 R72  ; R74 := R74[R72]
723 [-]: GETTABLE  R74 R74 K60  ; R74 := R74["mItemCount"]
724 [-]: GETTABLE  R75 R0 K32   ; R75 := R0["mQuantity"]
725 [-]: MUL       R74 R74 R75  ; R74 := R74 * R75
726 [-]: SETTABLE  R73 K60 R74  ; R73["mItemCount"] := R74
727 [-]: GETUPVAL  R73 U1       ; R73 := U1
728 [-]: GETTABLE  R73 R73 K59  ; R73 := R73["ITEMS"]
729 [-]: GETTABLE  R73 R1 R73   ; R73 := R1[R73]
730 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
731 [-]: GETTABLE  R73 R73 K60  ; R73 := R73["mItemCount"]
732 [-]: LE        0 R73 K3     ; if R73 > 0.000000 then PC := 735
733 [-]: JMP       735          ; PC := 735
734 [-]: LOADKB    R63 0 0      ; R63 := false
735 [-]: FORLOOP   R69 697      ; R69 += R71; if R69 <= R70 then begin PC := 697; R72 := R69 end
736 [-]: GETTABLE  R73 R68 K96  ; R73 := R68["mFocusXpCost"]
737 [-]: GETTABLE  R73 R73 K97  ; R73 := R73["mCost"]
738 [-]: LT        0 K3 R73     ; if 0.000000 >= R73 then PC := 756
739 [-]: JMP       756          ; PC := 756
740 [-]: GETTABLE  R73 R68 K96  ; R73 := R68["mFocusXpCost"]
741 [-]: GETTABLE  R73 R73 K99  ; R73 := R73["mPolarity"]
742 [-]: SETGLOBAL R73 K98      ; mPurchasePolarityType := R73
743 [-]: GETUPVAL  R73 U1       ; R73 := U1
744 [-]: GETTABLE  R73 R73 K100 ; R73 := R73["FOCUS_XP"]
745 [-]: GETTABLE  R74 R68 K96  ; R74 := R68["mFocusXpCost"]
746 [-]: GETTABLE  R74 R74 K97  ; R74 := R74["mCost"]
747 [-]: GETTABLE  R75 R0 K32   ; R75 := R0["mQuantity"]
748 [-]: MUL       R74 R74 R75  ; R74 := R74 * R75
749 [-]: SETTABLE  R1 R73 R74   ; R1[R73] := R74
750 [-]: GETUPVAL  R73 U1       ; R73 := U1
751 [-]: GETTABLE  R73 R73 K100 ; R73 := R73["FOCUS_XP"]
752 [-]: GETTABLE  R74 R68 K96  ; R74 := R68["mFocusXpCost"]
753 [-]: GETTABLE  R74 R74 K97  ; R74 := R74["mCost"]
754 [-]: SETTABLE  R2 R73 R74   ; R2[R73] := R74
755 [-]: LOADKB    R63 1 0      ; R63 := true
756 [-]: GETTABLE  R3 R68 K101  ; R3 := R68["mQuantityMultiplier"]
757 [-]: JMP       759          ; PC := 759
758 [-]: FORLOOP   R64 613      ; R64 += R66; if R64 <= R65 then begin PC := 613; R67 := R64 end
759 [-]: TEST      R63 1        ; if R63 then PC := 763
760 [-]: JMP       763          ; PC := 763
761 [-]: LOADNIL   R73 R73      ; R73 := nil
762 [-]: RETURN    R73 2        ; return R73
763 [-]: MOVE      R73 R1       ; R73 := R1
764 [-]: MOVE      R74 R2       ; R74 := R2
765 [-]: MOVE      R75 R3       ; R75 := R3
766 [-]: RETURN    R73 4        ; return R73,R74,R75
767 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 1023
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  4 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: CONST     R3 1         ; R3 := 1.000000
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: MOVE      R5 R2        ; R5 := R2
  9 [-]: MOVE      R6 R3        ; R6 := R3
 10 [-]: RETURN    R4 4         ; return R4,R5,R6
 11 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 1032
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 3
  2 [-]: JMP       3            ; PC := 3
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x8fbd62e4]
  5 [-]: LOADK     R3 K1        ; R3 := "OnUpdateSessionSettings"
  6 [-]: CALL      R2 2 1       ; R2(R3)
  7 [-]: GETGLOBAL R2 K2        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MenuSuitAvatar"]
  9 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 0         ; if not R3 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETGLOBAL R3 K5        ; R3 := 0x89326c93
 15 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x78298275]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: MOVE      R2 R3        ; R2 := R3
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 19 [-]: MOVE      R4 R2        ; R4 := R2
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 55
 22 [-]: JMP       55           ; PC := 55
 23 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde321e6f]
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xcfd657f3]
 26 [-]: LOADKB    R5 0 0       ; R5 := false
 27 [-]: CALL      R3 3 1       ; R3(R4,R5)
 28 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde321e6f]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x1d2dfe4a]
 31 [-]: GETGLOBAL R5 K10       ; R5 := 0x25d99d89
 32 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x62c81b76]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: CONST     R6 0         ; R6 := 0.000000
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETUPVAL  R3 U0        ; R3 := U0
 37 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0xcf1fcba4]
 38 [-]: CALL      R3 1 2       ; R3 := R3()
 39 [-]: TEST      R3 0         ; if not R3 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: LOADK     R3 K14       ; R3 := "{\"loadout\":"
 42 [-]: GETGLOBAL R4 K15       ; R4 := 0xbe190284
 43 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe08c150e]
 44 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 45 [-]: LOADK     R5 K17       ; R5 := "}"
 46 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 47 [-]: GETGLOBAL R4 K15       ; R4 := 0xbe190284
 48 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4[0x83bfaed0]
 49 [-]: MOVE      R6 R3        ; R6 := R3
 50 [-]: CALL      R4 3 1       ; R4(R5,R6)
 51 [-]: GETGLOBAL R4 K15       ; R4 := 0xbe190284
 52 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4[0x6dd14378]
 53 [-]: MOVE      R6 R2        ; R6 := R2
 54 [-]: CALL      R4 3 1       ; R4(R5,R6)
 55 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 1054
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 4.000000 then PC := 21
  2 [-]: JMP       21           ; PC := 21
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  4 [-]: GETGLOBAL R2 K3        ; R2 := 0x25d99d89
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xae7e2261]
 10 [-]: GETGLOBAL R3 K5        ; R3 := 0xb009bbc6
 11 [-]: GETGLOBAL R4 K6        ; R4 := mPurchaseParams
 12 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mStoreItem"]
 13 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xf278f8a1]
 14 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 15 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 16 [-]: CALL      R1 0 1       ; R1(R2,...)
 17 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 18 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xb6e2ab0d]
 19 [-]: LOADK     R3 K10       ; R3 := "OnSaveLoadOutComplete"
 20 [-]: CALL      R1 3 1       ; R1(R2,R3)
 21 [-]: LOADNIL   R1 R1        ; R1 := nil
 22 [-]: SETGLOBAL R1 K6        ; mPurchaseParams := R1
 23 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 1062
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SETGLOBAL R1 K0        ; mPurchasePopupMovie := R1
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 10 [-]: CALL      R1 3 1       ; R1(R2,R3)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 38
 12 [-]: JMP       38           ; PC := 38
 13 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mStoreItem"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xea735790]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 38
 18 [-]: JMP       38           ; PC := 38
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x603636ad
 20 [-]: GETGLOBAL R2 K2        ; R2 := mPurchaseParams
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mStoreItem"]
 22 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xd3a9d01f]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x6d604ba7]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 27 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0xe0cba3ca]
 30 [-]: GETGLOBAL R3 K5        ; R3 := 0x603636ad
 31 [-]: LOADK     R4 K9        ; R4 := "/Lotus/Language/Menu/EquippedGearOnPurchase"
 32 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 33 [-]: SETTABLE  R5 K10 R1    ; R5["ITEM"] := R1
 34 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 35 [-]: LOADK     R4 K11       ; R4 := "AddToGear"
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: JMP       40           ; PC := 40
 38 [-]: LOADNIL   R2 R2        ; R2 := nil
 39 [-]: SETGLOBAL R2 K2        ; mPurchaseParams := R2
 40 [-]: CONST     R2 1         ; R2 := 1.000000
 41 [-]: SETGLOBAL R2 K12       ; mQuantityToReceive := R2
 42 [-]: GETGLOBAL R2 K13       ; R2 := _T
 43 [-]: SETTABLE  R2 K14 K15   ; R2["purchasedItems"] := nil
 44 [-]: GETGLOBAL R2 K13       ; R2 := _T
 45 [-]: SETTABLE  R2 K16 K15   ; R2["PurchaseSuccessLocOverride"] := nil
 46 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 1078
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  40

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mSkipConfirm"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
  6 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xe4162eed]
  7 [-]: LOADK     R2 K4        ; R2 := "ConfirmPurchase"
  8 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
  9 [-]: CONST     R4 4         ; R4 := 4.000000
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R0 0 1       ; R0(R1,...)
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: LOADK     R0 K7        ; R0 := ""
 14 [-]: LOADK     R1 K7        ; R1 := ""
 15 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["REGULAR_CREDITS"]
 18 [-]: SETTABLE  R2 R3 K9     ; R2[R3] := "<CREDITS>"
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["PREMIUM_CREDITS"]
 21 [-]: SETTABLE  R2 R3 K11    ; R2[R3] := "<PLATINUM_CREDITS>"
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["PRIME_BUCKS"]
 24 [-]: SETTABLE  R2 R3 K13    ; R2[R3] := "<PRIME_BUCKS>"
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["PRIME_TOKENS"]
 27 [-]: SETTABLE  R2 R3 K15    ; R2[R3] := "<PRIME_TOKENS>"
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["STANDING"]
 30 [-]: SETTABLE  R2 R3 K17    ; R2[R3] := "<REPUTATION>"
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["AMBULAS_DATA"]
 33 [-]: SETTABLE  R2 R3 K19    ; R2[R3] := "<AMBULAS_DATA>"
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["FOCUS_XP"]
 36 [-]: SETTABLE  R2 R3 K21    ; R2[R3] := "<FOCUS>"
 37 [-]: GETGLOBAL R3 K0        ; R3 := mPurchaseParams
 38 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["mStoreItem"]
 39 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0x075cb724]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: GETGLOBAL R4 K24       ; R4 := mPurchaseQuantityMultiplier
 42 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 43 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 44 [-]: LOADKB    R5 1 0       ; R5 := true
 45 [-]: GETGLOBAL R6 K25       ; R6 := 0xcfc01047
 46 [-]: GETGLOBAL R7 K26       ; R7 := mPurchaseUnitPrice
 47 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 48 [-]: JMP       66           ; PC := 66
 49 [-]: GETGLOBAL R11 K27      ; R11 := 0x0b96777e
 50 [-]: MOVE      R12 R10      ; R12 := R10
 51 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 52 [-]: EQ        1 R11 K28    ; if R11 == "table" then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: DIV       R11 R10 R3   ; R11 := R10 / R3
 55 [-]: SETTABLE  R4 R9 R11    ; R4[R9] := R11
 56 [-]: GETGLOBAL R11 K29      ; R11 := 0x5bced4c4
 57 [-]: GETTABLE  R11 R11 K30  ; R11 := R11[0x55f27c30]
 58 [-]: GETTABLE  R12 R4 R9    ; R12 := R4[R9]
 59 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 60 [-]: MUL       R11 R11 R3   ; R11 := R11 * R3
 61 [-]: EQ        1 R11 R10    ; if R11 == R10 then PC := 66
 62 [-]: JMP       66           ; PC := 66
 63 [-]: LOADKB    R5 0 0       ; R5 := false
 64 [-]: GETGLOBAL R4 K26       ; R4 := mPurchaseUnitPrice
 65 [-]: JMP       68           ; PC := 68
 66 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 49; R8 := R9 end
 67 [-]: JMP       49           ; PC := 49
 68 [-]: NEWTABLE  R11 7 0      ; R11 := {}
 69 [-]: GETUPVAL  R12 U0       ; R12 := U0
 70 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["AMBULAS_DATA"]
 71 [-]: GETUPVAL  R13 U0       ; R13 := U0
 72 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["FOCUS_XP"]
 73 [-]: GETUPVAL  R14 U0       ; R14 := U0
 74 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["STANDING"]
 75 [-]: GETUPVAL  R15 U0       ; R15 := U0
 76 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["PRIME_BUCKS"]
 77 [-]: GETUPVAL  R16 U0       ; R16 := U0
 78 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["PREMIUM_CREDITS"]
 79 [-]: GETUPVAL  R17 U0       ; R17 := U0
 80 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["REGULAR_CREDITS"]
 81 [-]: GETUPVAL  R18 U0       ; R18 := U0
 82 [-]: GETTABLE  R18 R18 K31  ; R18 := R18["ITEMS"]
 83 [-]: SETLIST   R11 7 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 7
 84 [-]: LOADKB    R12 1 0      ; R12 := true
 85 [-]: GETGLOBAL R13 K32      ; R13 := 0xc8802016
 86 [-]: MOVE      R14 R11      ; R14 := R11
 87 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 88 [-]: JMP       185          ; PC := 185
 89 [-]: GETUPVAL  R18 U0       ; R18 := U0
 90 [-]: GETTABLE  R18 R18 K31  ; R18 := R18["ITEMS"]
 91 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 134
 92 [-]: JMP       134          ; PC := 134
 93 [-]: GETGLOBAL R18 K33      ; R18 := mPurchaseTotalPrice
 94 [-]: GETTABLE  R18 R18 R17  ; R18 := R18[R17]
 95 [-]: TEST      R18 0        ; if not R18 then PC := 185
 96 [-]: JMP       185          ; PC := 185
 97 [-]: LOADKB    R12 0 0      ; R12 := false
 98 [-]: CONST     R18 1        ; R18 := 1.000000
 99 [-]: GETGLOBAL R19 K33      ; R19 := mPurchaseTotalPrice
100 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
101 [-]: LEN       R19 R19      ; R19 := # R19
102 [-]: CONST     R20 1        ; R20 := 1.000000
103 [-]: FORPREP   R18 132      ; R18 -= R20; PC := 132
104 [-]: GETGLOBAL R22 K33      ; R22 := mPurchaseTotalPrice
105 [-]: GETTABLE  R22 R22 R17  ; R22 := R22[R17]
106 [-]: GETTABLE  R22 R22 R21  ; R22 := R22[R21]
107 [-]: GETGLOBAL R23 K34      ; R23 := 0xb009bbc6
108 [-]: GETTABLE  R24 R22 K35  ; R24 := R22["mItemType"]
109 [-]: CALL      R23 2 2      ; R23 := R23(R24)
110 [-]: EQ        1 R1 K7      ; if R1 == "" then PC := 115
111 [-]: JMP       115          ; PC := 115
112 [-]: MOVE      R24 R1       ; R24 := R1
113 [-]: LOADK     R25 K36      ; R25 := "\r"
114 [-]: CONCAT    R1 R24 R25   ; R1 := R24 .. R25
115 [-]: MOVE      R24 R1       ; R24 := R1
116 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
117 [-]: SELF      R25 R25 K37  ; R26 := R25; R25 := R25[0x42b04007]
118 [-]: GETGLOBAL R27 K5       ; R27 := 0x64fb1586
119 [-]: SELF      R28 R23 K38  ; R29 := R23; R28 := R23[0xd3a9d01f]
120 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
121 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
122 [-]: LOADKB    R28 0 0      ; R28 := false
123 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
124 [-]: CONCAT    R1 R24 R25   ; R1 := R24 .. R25
125 [-]: GETTABLE  R24 R22 K39  ; R24 := R22["mItemCount"]
126 [-]: LT        0 K40 R24    ; if 1.000000 >= R24 then PC := 132
127 [-]: JMP       132          ; PC := 132
128 [-]: MOVE      R24 R1       ; R24 := R1
129 [-]: LOADK     R25 K41      ; R25 := " x "
130 [-]: GETTABLE  R26 R22 K39  ; R26 := R22["mItemCount"]
131 [-]: CONCAT    R1 R24 R26   ; R1 := R24 .. R25 .. R26
132 [-]: FORLOOP   R18 104      ; R18 += R20; if R18 <= R19 then begin PC := 104; R21 := R18 end
133 [-]: JMP       185          ; PC := 185
134 [-]: GETTABLE  R24 R4 R17   ; R24 := R4[R17]
135 [-]: TEST      R24 0        ; if not R24 then PC := 158
136 [-]: JMP       158          ; PC := 158
137 [-]: GETTABLE  R24 R4 R17   ; R24 := R4[R17]
138 [-]: LT        0 K42 R24    ; if 0.000000 >= R24 then PC := 158
139 [-]: JMP       158          ; PC := 158
140 [-]: LOADKB    R12 0 0      ; R12 := false
141 [-]: EQ        1 R0 K7      ; if R0 == "" then PC := 146
142 [-]: JMP       146          ; PC := 146
143 [-]: MOVE      R24 R0       ; R24 := R0
144 [-]: LOADK     R25 K43      ; R25 := " + "
145 [-]: CONCAT    R0 R24 R25   ; R0 := R24 .. R25
146 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
147 [-]: SELF      R24 R24 K37  ; R25 := R24; R24 := R24[0x42b04007]
148 [-]: GETTABLE  R26 R2 R17   ; R26 := R2[R17]
149 [-]: LOADKB    R27 1 0      ; R27 := true
150 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
151 [-]: MOVE      R25 R0       ; R25 := R0
152 [-]: MOVE      R26 R24      ; R26 := R24
153 [-]: GETUPVAL  R27 U1       ; R27 := U1
154 [-]: GETTABLE  R27 R27 K44  ; R27 := R27[0x1142c7a8]
155 [-]: GETTABLE  R28 R4 R17   ; R28 := R4[R17]
156 [-]: CALL      R27 2 2      ; R27 := R27(R28)
157 [-]: CONCAT    R0 R25 R27   ; R0 := R25 .. R26 .. R27
158 [-]: GETGLOBAL R25 K33      ; R25 := mPurchaseTotalPrice
159 [-]: GETTABLE  R25 R25 R17  ; R25 := R25[R17]
160 [-]: TEST      R25 0        ; if not R25 then PC := 185
161 [-]: JMP       185          ; PC := 185
162 [-]: GETGLOBAL R25 K33      ; R25 := mPurchaseTotalPrice
163 [-]: GETTABLE  R25 R25 R17  ; R25 := R25[R17]
164 [-]: LT        0 K42 R25    ; if 0.000000 >= R25 then PC := 185
165 [-]: JMP       185          ; PC := 185
166 [-]: LOADKB    R12 0 0      ; R12 := false
167 [-]: EQ        1 R1 K7      ; if R1 == "" then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: MOVE      R25 R1       ; R25 := R1
170 [-]: LOADK     R26 K43      ; R26 := " + "
171 [-]: CONCAT    R1 R25 R26   ; R1 := R25 .. R26
172 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
173 [-]: SELF      R25 R25 K37  ; R26 := R25; R25 := R25[0x42b04007]
174 [-]: GETTABLE  R27 R2 R17   ; R27 := R2[R17]
175 [-]: LOADKB    R28 1 0      ; R28 := true
176 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
177 [-]: MOVE      R26 R1       ; R26 := R1
178 [-]: MOVE      R27 R25      ; R27 := R25
179 [-]: GETUPVAL  R28 U1       ; R28 := U1
180 [-]: GETTABLE  R28 R28 K44  ; R28 := R28[0x1142c7a8]
181 [-]: GETGLOBAL R29 K33      ; R29 := mPurchaseTotalPrice
182 [-]: GETTABLE  R29 R29 R17  ; R29 := R29[R17]
183 [-]: CALL      R28 2 2      ; R28 := R28(R29)
184 [-]: CONCAT    R1 R26 R28   ; R1 := R26 .. R27 .. R28
185 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 89; R15 := R16 end
186 [-]: JMP       89           ; PC := 89
187 [-]: GETUPVAL  R26 U2       ; R26 := U2
188 [-]: GETTABLE  R26 R26 K45  ; R26 := R26[0xc7ca0123]
189 [-]: GETGLOBAL R27 K2       ; R27 := 0xae91e43b
190 [-]: GETGLOBAL R28 K0       ; R28 := mPurchaseParams
191 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["mStoreItem"]
192 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
193 [-]: GETGLOBAL R27 K0       ; R27 := mPurchaseParams
194 [-]: GETTABLE  R27 R27 K22  ; R27 := R27["mStoreItem"]
195 [-]: SELF      R27 R27 K46  ; R28 := R27; R27 := R27[0xc3bbc5cb]
196 [-]: CALL      R27 2 2      ; R27 := R27(R28)
197 [-]: TEST      R27 0        ; if not R27 then PC := 282
198 [-]: JMP       282          ; PC := 282
199 [-]: LOADKB    R27 1 0      ; R27 := true
200 [-]: GETGLOBAL R28 K0       ; R28 := mPurchaseParams
201 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["mStoreItem"]
202 [-]: SELF      R28 R28 K47  ; R29 := R28; R28 := R28[0xf278f8a1]
203 [-]: CALL      R28 2 2      ; R28 := R28(R29)
204 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28[0xf2deaf69]
205 [-]: GETGLOBAL R30 K49      ; R30 := gLotusBoosterUpgradeType
206 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
207 [-]: TEST      R28 0        ; if not R28 then PC := 218
208 [-]: JMP       218          ; PC := 218
209 [-]: GETGLOBAL R28 K34      ; R28 := 0xb009bbc6
210 [-]: GETGLOBAL R29 K0       ; R29 := mPurchaseParams
211 [-]: GETTABLE  R29 R29 K22  ; R29 := R29["mStoreItem"]
212 [-]: SELF      R29 R29 K47  ; R30 := R29; R29 := R29[0xf278f8a1]
213 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
214 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
215 [-]: SELF      R29 R28 K50  ; R30 := R28; R29 := R28[0x4bcc0a75]
216 [-]: CALL      R29 2 2      ; R29 := R29(R30)
217 [-]: MOVE      R27 R29      ; R27 := R29
218 [-]: TEST      R27 0        ; if not R27 then PC := 268
219 [-]: JMP       268          ; PC := 268
220 [-]: GETGLOBAL R29 K2       ; R29 := 0xae91e43b
221 [-]: SELF      R29 R29 K37  ; R30 := R29; R29 := R29[0x42b04007]
222 [-]: LOADK     R31 K51      ; R31 := "/Lotus/Language/Menu/Global_DurabilityPermanent"
223 [-]: LOADKB    R32 0 0      ; R32 := false
224 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
225 [-]: GETGLOBAL R30 K52      ; R30 := 0xa94df70b
226 [-]: SELF      R30 R30 K53  ; R31 := R30; R30 := R30[0x2539e471]
227 [-]: GETGLOBAL R32 K0       ; R32 := mPurchaseParams
228 [-]: GETTABLE  R32 R32 K54  ; R32 := R32["mDurability"]
229 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
230 [-]: EQ        0 R30 K55    ; if R30 ~= 259200.000000 then PC := 239
231 [-]: JMP       239          ; PC := 239
232 [-]: GETGLOBAL R31 K2       ; R31 := 0xae91e43b
233 [-]: SELF      R31 R31 K37  ; R32 := R31; R31 := R31[0x42b04007]
234 [-]: LOADK     R33 K56      ; R33 := "/Lotus/Language/Menu/Global_3Days"
235 [-]: LOADKB    R34 0 0      ; R34 := false
236 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
237 [-]: MOVE      R30 R31      ; R30 := R31
238 [-]: JMP       263          ; PC := 263
239 [-]: EQ        0 R30 K57    ; if R30 ~= 604800.000000 then PC := 248
240 [-]: JMP       248          ; PC := 248
241 [-]: GETGLOBAL R31 K2       ; R31 := 0xae91e43b
242 [-]: SELF      R31 R31 K37  ; R32 := R31; R31 := R31[0x42b04007]
243 [-]: LOADK     R33 K58      ; R33 := "/Lotus/Language/Menu/Global_7Days"
244 [-]: LOADKB    R34 0 0      ; R34 := false
245 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
246 [-]: MOVE      R30 R31      ; R30 := R31
247 [-]: JMP       263          ; PC := 263
248 [-]: GETUPVAL  R31 U1       ; R31 := U1
249 [-]: GETTABLE  R31 R31 K59  ; R31 := R31[0x06d055f9]
250 [-]: LT        1 K42 R30    ; if 0.000000 < R30 then PC := 253
251 [-]: JMP       253          ; PC := 253
252 [-]: LOADKB    R32 0 1      ; R32 := false; PC := 253
253 [-]: LOADKB    R32 1 0      ; R32 := true
254 [-]: GETUPVAL  R33 U2       ; R33 := U2
255 [-]: GETTABLE  R33 R33 K60  ; R33 := R33[0x817b1503]
256 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
257 [-]: MOVE      R35 R30      ; R35 := R30
258 [-]: LOADKB    R36 1 0      ; R36 := true
259 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
260 [-]: MOVE      R34 R29      ; R34 := R29
261 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
262 [-]: MOVE      R30 R31      ; R30 := R31
263 [-]: MOVE      R31 R30      ; R31 := R30
264 [-]: LOADK     R32 K61      ; R32 := " "
265 [-]: MOVE      R33 R26      ; R33 := R26
266 [-]: CONCAT    R26 R31 R33  ; R26 := R31 .. R32 .. R33
267 [-]: JMP       282          ; PC := 282
268 [-]: GETGLOBAL R31 K52      ; R31 := 0xa94df70b
269 [-]: SELF      R31 R31 K62  ; R32 := R31; R31 := R31[0xbd680672]
270 [-]: GETGLOBAL R33 K0       ; R33 := mPurchaseParams
271 [-]: GETTABLE  R33 R33 K54  ; R33 := R33["mDurability"]
272 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
273 [-]: MOVE      R32 R26      ; R32 := R26
274 [-]: LOADK     R33 K63      ; R33 := " ("
275 [-]: GETGLOBAL R34 K64      ; R34 := 0x603636ad
276 [-]: LOADK     R35 K65      ; R35 := "/Lotus/Language/Menu/Global_BoosterUses"
277 [-]: NEWTABLE  R36 0 1      ; R36 := {}
278 [-]: SETTABLE  R36 K66 R31  ; R36["NUM_USES"] := R31
279 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
280 [-]: LOADK     R35 K67      ; R35 := ")"
281 [-]: CONCAT    R26 R32 R35  ; R26 := R32 .. R33 .. R34 .. R35
282 [-]: LOADK     R32 K7       ; R32 := ""
283 [-]: NEWTABLE  R33 0 4      ; R33 := {}
284 [-]: SETTABLE  R33 K68 R26  ; R33["ITEM"] := R26
285 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
286 [-]: MUL       R34 R34 R3   ; R34 := R34 * R3
287 [-]: SETTABLE  R33 K69 R34  ; R33["QUANTITY"] := R34
288 [-]: SETTABLE  R33 K71 R0   ; R33["UNIT_PRICE"] := R0
289 [-]: SETTABLE  R33 K72 R1   ; R33["PRICE"] := R1
290 [-]: GETGLOBAL R34 K0       ; R34 := mPurchaseParams
291 [-]: GETTABLE  R34 R34 K73  ; R34 := R34["mSource"]
292 [-]: EQ        0 R34 K75    ; if R34 ~= 2.000000 then PC := 304
293 [-]: JMP       304          ; PC := 304
294 [-]: TEST      R12 0        ; if not R12 then PC := 304
295 [-]: JMP       304          ; PC := 304
296 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
297 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
298 [-]: LOADK     R36 K76      ; R36 := "/Lotus/Language/Menu/Global_FreePurchaseConfirmation"
299 [-]: LOADKB    R37 0 0      ; R37 := false
300 [-]: MOVE      R38 R33      ; R38 := R33
301 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
302 [-]: MOVE      R32 R34      ; R32 := R34
303 [-]: JMP       368          ; PC := 368
304 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
305 [-]: LT        0 K40 R34    ; if 1.000000 >= R34 then PC := 346
306 [-]: JMP       346          ; PC := 346
307 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
308 [-]: GETGLOBAL R35 K0       ; R35 := mPurchaseParams
309 [-]: GETTABLE  R35 R35 K77  ; R35 := R35["mQuantity"]
310 [-]: EQ        1 R34 R35    ; if R34 == R35 then PC := 328
311 [-]: JMP       328          ; PC := 328
312 [-]: GETGLOBAL R34 K0       ; R34 := mPurchaseParams
313 [-]: GETTABLE  R34 R34 K77  ; R34 := R34["mQuantity"]
314 [-]: SETTABLE  R33 K78 R34  ; R33["QUANTITY_BOUGHT"] := R34
315 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
316 [-]: GETGLOBAL R35 K0       ; R35 := mPurchaseParams
317 [-]: GETTABLE  R35 R35 K77  ; R35 := R35["mQuantity"]
318 [-]: SUB       R34 R34 R35  ; R34 := R34 - R35
319 [-]: SETTABLE  R33 K79 R34  ; R33["QUANTITY_FREE"] := R34
320 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
321 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
322 [-]: LOADK     R36 K80      ; R36 := "/Lotus/Language/Menu/Global_BogoPurchaseConfirmation"
323 [-]: LOADKB    R37 0 0      ; R37 := false
324 [-]: MOVE      R38 R33      ; R38 := R33
325 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
326 [-]: MOVE      R32 R34      ; R32 := R34
327 [-]: JMP       368          ; PC := 368
328 [-]: TEST      R5 1         ; if R5 then PC := 338
329 [-]: JMP       338          ; PC := 338
330 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
331 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
332 [-]: LOADK     R36 K81      ; R36 := "/Lotus/Language/Menu/Global_MultiBundlePurchaseConfirmation"
333 [-]: LOADKB    R37 0 0      ; R37 := false
334 [-]: MOVE      R38 R33      ; R38 := R33
335 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
336 [-]: MOVE      R32 R34      ; R32 := R34
337 [-]: JMP       368          ; PC := 368
338 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
339 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
340 [-]: LOADK     R36 K82      ; R36 := "/Lotus/Language/Menu/Global_MultiPurchaseConfirmation"
341 [-]: LOADKB    R37 0 0      ; R37 := false
342 [-]: MOVE      R38 R33      ; R38 := R33
343 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
344 [-]: MOVE      R32 R34      ; R32 := R34
345 [-]: JMP       368          ; PC := 368
346 [-]: GETTABLE  R34 R33 K69  ; R34 := R33["QUANTITY"]
347 [-]: LT        0 K40 R34    ; if 1.000000 >= R34 then PC := 354
348 [-]: JMP       354          ; PC := 354
349 [-]: MOVE      R34 R26      ; R34 := R26
350 [-]: LOADK     R35 K41      ; R35 := " x "
351 [-]: GETTABLE  R36 R33 K69  ; R36 := R33["QUANTITY"]
352 [-]: CONCAT    R34 R34 R36  ; R34 := R34 .. R35 .. R36
353 [-]: SETTABLE  R33 K68 R34  ; R33["ITEM"] := R34
354 [-]: LOADK     R34 K83      ; R34 := "/Lotus/Language/Menu/Global_PurchaseConfirmation"
355 [-]: GETGLOBAL R35 K0       ; R35 := mPurchaseParams
356 [-]: GETTABLE  R35 R35 K84  ; R35 := R35["mConfirmMsgOverride"]
357 [-]: EQ        1 R35 K7     ; if R35 == "" then PC := 361
358 [-]: JMP       361          ; PC := 361
359 [-]: GETGLOBAL R35 K0       ; R35 := mPurchaseParams
360 [-]: GETTABLE  R34 R35 K84  ; R34 := R35["mConfirmMsgOverride"]
361 [-]: GETGLOBAL R35 K2       ; R35 := 0xae91e43b
362 [-]: SELF      R35 R35 K37  ; R36 := R35; R35 := R35[0x42b04007]
363 [-]: MOVE      R37 R34      ; R37 := R34
364 [-]: LOADKB    R38 0 0      ; R38 := false
365 [-]: MOVE      R39 R33      ; R39 := R33
366 [-]: CALL      R35 5 2      ; R35 := R35(R36,R37,R38,R39)
367 [-]: MOVE      R32 R35      ; R32 := R35
368 [-]: GETUPVAL  R35 U1       ; R35 := U1
369 [-]: GETTABLE  R35 R35 K85  ; R35 := R35[0xdedfded7]
370 [-]: MOVE      R36 R32      ; R36 := R32
371 [-]: LOADK     R37 K4       ; R37 := "ConfirmPurchase"
372 [-]: CALL      R35 3 1      ; R35(R36,R37)
373 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 1212
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CONST     R3 0         ; R3 := 0.000000
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 48
  5 [-]: JMP       48           ; PC := 48
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x659d451f]
  8 [-]: GETGLOBAL R3 K1        ; R3 := 0x0032441c
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["UISound_Purchase"]
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x76ea806b
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x3f3ae64c]
 13 [-]: CONST     R4 0         ; R4 := 0.000000
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 54
 19 [-]: JMP       54           ; PC := 54
 20 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0x80563238]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 23 [-]: MOVE      R5 R3        ; R5 := R3
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: TEST      R4 1         ; if R4 then PC := 54
 26 [-]: JMP       54           ; PC := 54
 27 [-]: GETUPVAL  R4 U2        ; R4 := U2
 28 [-]: SELF      R5 R3 K7     ; R6 := R3; R5 := R3[0x1e11a6d0]
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: SELF      R6 R3 K8     ; R7 := R3; R6 := R3[0x9b466ee3]
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: SELF      R7 R3 K9     ; R8 := R3; R7 := R3[0x4ce20fca]
 33 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 34 [-]: SELF      R8 R3 K10    ; R9 := R3; R8 := R3[0xbd6729ff]
 35 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 36 [-]: SELF      R9 R3 K11    ; R10 := R3; R9 := R3[0xa59dbd63]
 37 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 38 [-]: CALL      R4 0 1       ; R4(R5,...)
 39 [-]: GETGLOBAL R4 K12       ; R4 := mPurchaseParams
 40 [-]: EQ        1 R4 K13     ; if R4 == nil then PC := 54
 41 [-]: JMP       54           ; PC := 54
 42 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 43 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0xe4162eed]
 44 [-]: LOADK     R6 K16       ; R6 := "CheckPurchaseRequirements"
 45 [-]: LOADK     R7 K17       ; R7 := ""
 46 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 47 [-]: JMP       54           ; PC := 54
 48 [-]: GETGLOBAL R4 K18       ; R4 := _T
 49 [-]: SETTABLE  R4 K19 K13   ; R4["PurchaseSuccessLocOverride"] := nil
 50 [-]: GETUPVAL  R4 U1        ; R4 := U1
 51 [-]: GETTABLE  R4 R4 K20    ; R4 := R4[0xe0cba3ca]
 52 [-]: LOADK     R5 K21       ; R5 := "/Lotus/Language/Menu/PurchaseFailure"
 53 [-]: CALL      R4 2 1       ; R4(R5)
 54 [-]: LOADNIL   R4 R4        ; R4 := nil
 55 [-]: SETGLOBAL R4 K22       ; mWebCmd := R4
 56 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 1237
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 4.000000 then PC := 97
  2 [-]: JMP       97           ; PC := 97
  3 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
  4 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 97
  5 [-]: JMP       97           ; PC := 97
  6 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K5        ; R2 := 0xcb79539e
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETGLOBAL R1 K5        ; R1 := 0xcb79539e
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x8b8fb8b7]
 13 [-]: GETGLOBAL R3 K7        ; R3 := 0x0469f296
 14 [-]: LOADK     R4 K8        ; R4 := "SLOT_PROMPT_POPUP"
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: LOADK     R4 K9        ; R4 := "Baro_"
 17 [-]: GETGLOBAL R5 K10       ; R5 := mBinType
 18 [-]: LOADK     R6 K11       ; R6 := "_Purchase"
 19 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 20 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 21 [-]: GETGLOBAL R1 K12       ; R1 := 0xa94df70b
 22 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x99c4ef3a]
 23 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 24 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mStoreItem"]
 25 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xfe9eb1a5]
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 28 [-]: GETGLOBAL R2 K16       ; R2 := 0x6c97a788
 29 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["MiscBin"]
 30 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: LE        0 K18 R1     ; if 12.000000 > R1 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETGLOBAL R2 K19       ; R2 := _T
 35 [-]: SETTABLE  R2 K20 K3    ; R2["PurchaseSuccessLocOverride"] := nil
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R2 K12       ; R2 := 0xa94df70b
 38 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0xd8cdfe4e]
 39 [-]: MOVE      R4 R1        ; R4 := R1
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: GETGLOBAL R3 K19       ; R3 := _T
 42 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["PremiumCredits"]
 43 [-]: LT        0 R3 R2      ; if R3 >= R2 then PC := 61
 44 [-]: JMP       61           ; PC := 61
 45 [-]: GETGLOBAL R3 K19       ; R3 := _T
 46 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["PremiumCredits"]
 47 [-]: SUB       R3 R2 R3     ; R3 := R2 - R3
 48 [-]: GETUPVAL  R4 U0        ; R4 := U0
 49 [-]: GETUPVAL  R5 U1        ; R5 := U1
 50 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["PREMIUM_CREDITS"]
 51 [-]: LOADKB    R6 0 0       ; R6 := false
 52 [-]: GETGLOBAL R7 K24       ; R7 := 0xae91e43b
 53 [-]: SELF      R7 R7 K25    ; R8 := R7; R7 := R7[0x42b04007]
 54 [-]: LOADK     R9 K26       ; R9 := "/Lotus/Language/Menu/ItemInventory_SlotsMisc"
 55 [-]: LOADKB    R10 1 0      ; R10 := true
 56 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 57 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
 58 [-]: MOVE      R10 R3       ; R10 := R3
 59 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 60 [-]: RETURN    R0 1         ; return 
 61 [-]: GETGLOBAL R4 K27       ; R4 := 0x76ea806b
 62 [-]: SELF      R4 R4 K28    ; R5 := R4; R4 := R4[0x3f3ae64c]
 63 [-]: CONST     R6 0         ; R6 := 0.000000
 64 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 65 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 66 [-]: MOVE      R6 R4        ; R6 := R4
 67 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 68 [-]: TEST      R5 1         ; if R5 then PC := 114
 69 [-]: JMP       114          ; PC := 114
 70 [-]: SELF      R5 R4 K29    ; R6 := R4; R5 := R4[0x80563238]
 71 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 72 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 73 [-]: MOVE      R7 R5        ; R7 := R5
 74 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 75 [-]: TEST      R6 1         ; if R6 then PC := 114
 76 [-]: JMP       114          ; PC := 114
 77 [-]: GETUPVAL  R6 U2        ; R6 := U2
 78 [-]: CONST     R7 1         ; R7 := 1.000000
 79 [-]: CALL      R6 2 1       ; R6(R7)
 80 [-]: GETGLOBAL R6 K30       ; R6 := 0x60cce7b4
 81 [-]: GETGLOBAL R7 K31       ; R7 := mWebCmd
 82 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 85
 85 [-]: LOADKB    R7 1 0       ; R7 := true
 86 [-]: CALL      R6 2 1       ; R6(R7)
 87 [-]: GETGLOBAL R6 K16       ; R6 := 0x6c97a788
 88 [-]: GETTABLE  R6 R6 K32    ; R6 := R6[0x2c6cc890]
 89 [-]: MOVE      R7 R1        ; R7 := R1
 90 [-]: LOADK     R8 K33       ; R8 := "OnPurchaseSlotResult"
 91 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 92 [-]: SETGLOBAL R6 K31       ; mWebCmd := R6
 93 [-]: GETGLOBAL R6 K31       ; R6 := mWebCmd
 94 [-]: SELF      R6 R6 K34    ; R7 := R6; R6 := R6[0xe4162eed]
 95 [-]: CALL      R6 2 1       ; R6(R7)
 96 [-]: JMP       114          ; PC := 114
 97 [-]: GETGLOBAL R6 K19       ; R6 := _T
 98 [-]: SETTABLE  R6 K20 K3    ; R6["PurchaseSuccessLocOverride"] := nil
 99 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
100 [-]: GETGLOBAL R7 K5        ; R7 := 0xcb79539e
101 [-]: CALL      R6 2 2       ; R6 := R6(R7)
102 [-]: TEST      R6 1         ; if R6 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETGLOBAL R6 K5        ; R6 := 0xcb79539e
105 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x8b8fb8b7]
106 [-]: GETGLOBAL R8 K7        ; R8 := 0x0469f296
107 [-]: LOADK     R9 K8        ; R9 := "SLOT_PROMPT_POPUP"
108 [-]: CALL      R8 2 2       ; R8 := R8(R9)
109 [-]: LOADK     R9 K9        ; R9 := "Baro_"
110 [-]: GETGLOBAL R10 K10      ; R10 := mBinType
111 [-]: LOADK     R11 K35      ; R11 := "_Cancel"
112 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
113 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
114 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 1273
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xa94df70b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x99c4ef3a]
  3 [-]: GETGLOBAL R2 K2        ; R2 := mPurchaseParams
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mStoreItem"]
  5 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xfe9eb1a5]
  6 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  7 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  8 [-]: GETGLOBAL R1 K5        ; R1 := 0x6c97a788
  9 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MiscBin"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LE        0 K7 R0      ; if 12.000000 > R0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0xa94df70b
 16 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xd8cdfe4e]
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: GETGLOBAL R2 K0        ; R2 := 0xa94df70b
 20 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x4ddd3d6e]
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[0x780243ce]
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: SETGLOBAL R3 K10       ; mBinType := R3
 28 [-]: GETUPVAL  R3 U1        ; R3 := U1
 29 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0xdedfded7]
 30 [-]: GETGLOBAL R4 K13       ; R4 := 0xae91e43b
 31 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x42b04007]
 32 [-]: LOADK     R6 K15       ; R6 := "/Lotus/Language/Menu/Store_InsufficientSlotPurchase"
 33 [-]: LOADKB    R7 1 0       ; R7 := true
 34 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 35 [-]: SETTABLE  R8 K16 R2    ; R8["COUNT"] := R2
 36 [-]: SETTABLE  R8 K17 R1    ; R8["COST"] := R1
 37 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 38 [-]: LOADK     R5 K18       ; R5 := "ConfirmSlotPurchase"
 39 [-]: CALL      R3 3 1       ; R3(R4,R5)
 40 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 1285
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x2dcaf529]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 1289
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R4 K1        ; R4 := _T
  7 [-]: SETTABLE  R4 K2 K3     ; R4["PurchaseSuccessLocOverride"] := nil
  8 [-]: LOADKB    R4 0 0       ; R4 := false
  9 [-]: RETURN    R4 2         ; return R4
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0xa94df70b
 11 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x0736562b]
 12 [-]: MOVE      R6 R1        ; R6 := R1
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: GETGLOBAL R5 K6        ; R5 := 0x25d99d89
 15 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0xefee6c91]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: LT        0 K8 R4      ; if 0.000000 >= R4 then PC := 53
 18 [-]: JMP       53           ; PC := 53
 19 [-]: SELF      R6 R0 K9     ; R7 := R0; R6 := R0[0xd83f6338]
 20 [-]: MOVE      R8 R1        ; R8 := R1
 21 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 22 [-]: ADD       R6 R2 R6     ; R6 := R2 + R6
 23 [-]: LT        0 R4 R6      ; if R4 >= R6 then PC := 53
 24 [-]: JMP       53           ; PC := 53
 25 [-]: EQ        0 R1 K11     ; if R1 ~= 7.000000 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: LE        0 K12 R5     ; if 30.000000 > R5 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: ADD       R4 R4 K12    ; R4 := R4 + 30.000000
 30 [-]: GETGLOBAL R6 K13       ; R6 := 0xae91e43b
 31 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x42b04007]
 32 [-]: MOVE      R8 R3        ; R8 := R3
 33 [-]: LOADKB    R9 0 0       ; R9 := false
 34 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 35 [-]: GETUPVAL  R11 U0       ; R11 := U0
 36 [-]: GETTABLE  R11 R11 K16  ; R11 := R11[0x1142c7a8]
 37 [-]: GETGLOBAL R12 K4       ; R12 := 0xa94df70b
 38 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0x804ccab2]
 39 [-]: MOVE      R14 R1       ; R14 := R1
 40 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 41 [-]: ADD       R12 R4 R12   ; R12 := R4 + R12
 42 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 43 [-]: SETTABLE  R10 K15 R11  ; R10["MAX"] := R11
 44 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 45 [-]: GETUPVAL  R7 U0        ; R7 := U0
 46 [-]: GETTABLE  R7 R7 K18    ; R7 := R7[0xe0cba3ca]
 47 [-]: MOVE      R8 R6        ; R8 := R6
 48 [-]: CALL      R7 2 1       ; R7(R8)
 49 [-]: GETGLOBAL R7 K1        ; R7 := _T
 50 [-]: SETTABLE  R7 K2 K3     ; R7["PurchaseSuccessLocOverride"] := nil
 51 [-]: LOADKB    R7 0 0       ; R7 := false
 52 [-]: RETURN    R7 2         ; return R7
 53 [-]: LOADKB    R7 1 0       ; R7 := true
 54 [-]: RETURN    R7 2         ; return R7
 55 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 1311
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseTotalPrice
  2 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: LOADKB    R0 0 0       ; R0 := false
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xbecef34c]
  8 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETGLOBAL R1 K3        ; R1 := mPurchaseParams
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mSource"]
 15 [-]: EQ        1 R1 K7      ; if R1 == 18.000000 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: CALL      R1 1 1       ; R1()
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: LOADNIL   R1 R1        ; R1 := nil
 21 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 22 [-]: GETGLOBAL R3 K9        ; R3 := 0x25d99d89
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 47
 25 [-]: JMP       47           ; PC := 47
 26 [-]: GETGLOBAL R2 K9        ; R2 := 0x25d99d89
 27 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x25a6e75e]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETUPVAL  R2 U2        ; R2 := U2
 31 [-]: GETGLOBAL R3 K9        ; R3 := 0x25d99d89
 32 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x1e11a6d0]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0x25d99d89
 35 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0x9b466ee3]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETGLOBAL R5 K9        ; R5 := 0x25d99d89
 38 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x4ce20fca]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
 41 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0xbd6729ff]
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: GETGLOBAL R7 K9        ; R7 := 0x25d99d89
 44 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7[0xa59dbd63]
 45 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 46 [-]: CALL      R2 0 1       ; R2(R3,...)
 47 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
 48 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 49 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xfe9eb1a5]
 50 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 51 [-]: EQ        0 R2 K18     ; if R2 ~= 19.000000 then PC := 72
 52 [-]: JMP       72           ; PC := 72
 53 [-]: GETUPVAL  R2 U3        ; R2 := U3
 54 [-]: MOVE      R3 R1        ; R3 := R1
 55 [-]: GETGLOBAL R4 K3        ; R4 := mPurchaseParams
 56 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mStoreItem"]
 57 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4[0x5c4cdd9b]
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 60 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["mQuantity"]
 61 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
 62 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
 63 [-]: SELF      R6 R6 K21    ; R7 := R6; R6 := R6[0x075cb724]
 64 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 65 [-]: MUL       R5 R5 R6     ; R5 := R5 * R6
 66 [-]: LOADK     R6 K22       ; R6 := "/Lotus/Language/Menu/BuyItem_ExceedBinMaxCapacity"
 67 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 68 [-]: TEST      R2 1         ; if R2 then PC := 126
 69 [-]: JMP       126          ; PC := 126
 70 [-]: RETURN    R0 1         ; return 
 71 [-]: JMP       126          ; PC := 126
 72 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
 73 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 74 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xfe9eb1a5]
 75 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 76 [-]: EQ        0 R2 K23     ; if R2 ~= 30.000000 then PC := 126
 77 [-]: JMP       126          ; PC := 126
 78 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
 79 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 80 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2[0xf278f8a1]
 81 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 82 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2[0xf2deaf69]
 83 [-]: GETUPVAL  R4 U4        ; R4 := U4
 84 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 85 [-]: TEST      R2 0         ; if not R2 then PC := 126
 86 [-]: JMP       126          ; PC := 126
 87 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 88 [-]: MOVE      R3 R1        ; R3 := R1
 89 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 90 [-]: TEST      R2 0         ; if not R2 then PC := 95
 91 [-]: JMP       95           ; PC := 95
 92 [-]: GETGLOBAL R2 K26       ; R2 := _T
 93 [-]: SETTABLE  R2 K27 K1    ; R2["PurchaseSuccessLocOverride"] := nil
 94 [-]: RETURN    R0 1         ; return 
 95 [-]: GETUPVAL  R2 U0        ; R2 := U0
 96 [-]: GETTABLE  R2 R2 K28    ; R2 := R2[0x8a36a81b]
 97 [-]: GETGLOBAL R3 K9        ; R3 := 0x25d99d89
 98 [-]: MOVE      R4 R1        ; R4 := R1
 99 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
100 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
101 [-]: GETGLOBAL R6 K26       ; R6 := _T
102 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["purchasedItems"]
103 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
104 [-]: GETGLOBAL R3 K3        ; R3 := mPurchaseParams
105 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["mQuantity"]
106 [-]: GETGLOBAL R4 K3        ; R4 := mPurchaseParams
107 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mStoreItem"]
108 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4[0x075cb724]
109 [-]: CALL      R4 2 2       ; R4 := R4(R5)
110 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
111 [-]: ADD       R3 R2 R3     ; R3 := R2 + R3
112 [-]: LT        0 K30 R3     ; if 138.000000 >= R3 then PC := 126
113 [-]: JMP       126          ; PC := 126
114 [-]: GETGLOBAL R3 K31       ; R3 := 0xae91e43b
115 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3[0x42b04007]
116 [-]: LOADK     R5 K33       ; R5 := "/Lotus/Language/Menu/BuyItem_ExceedShipDecoCapacity"
117 [-]: LOADKB    R6 0 0       ; R6 := false
118 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
119 [-]: GETUPVAL  R4 U5        ; R4 := U5
120 [-]: GETTABLE  R4 R4 K34    ; R4 := R4[0xe0cba3ca]
121 [-]: MOVE      R5 R3        ; R5 := R3
122 [-]: CALL      R4 2 1       ; R4(R5)
123 [-]: GETGLOBAL R4 K26       ; R4 := _T
124 [-]: SETTABLE  R4 K27 K1    ; R4["PurchaseSuccessLocOverride"] := nil
125 [-]: RETURN    R0 1         ; return 
126 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
127 [-]: GETUPVAL  R5 U6        ; R5 := U6
128 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["REGULAR_CREDITS"]
129 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
130 [-]: TEST      R4 0         ; if not R4 then PC := 149
131 [-]: JMP       149          ; PC := 149
132 [-]: GETGLOBAL R4 K26       ; R4 := _T
133 [-]: GETTABLE  R4 R4 K36    ; R4 := R4["Credits"]
134 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 149
135 [-]: JMP       149          ; PC := 149
136 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
137 [-]: GETUPVAL  R5 U6        ; R5 := U6
138 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["REGULAR_CREDITS"]
139 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
140 [-]: GETGLOBAL R5 K26       ; R5 := _T
141 [-]: GETTABLE  R5 R5 K36    ; R5 := R5["Credits"]
142 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 149
143 [-]: JMP       149          ; PC := 149
144 [-]: GETUPVAL  R4 U7        ; R4 := U7
145 [-]: GETUPVAL  R5 U6        ; R5 := U6
146 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["REGULAR_CREDITS"]
147 [-]: CALL      R4 2 1       ; R4(R5)
148 [-]: RETURN    R0 1         ; return 
149 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
150 [-]: GETUPVAL  R5 U6        ; R5 := U6
151 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["PREMIUM_CREDITS"]
152 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
153 [-]: TEST      R4 0         ; if not R4 then PC := 201
154 [-]: JMP       201          ; PC := 201
155 [-]: LOADKB    R0 1 0       ; R0 := true
156 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
157 [-]: GETUPVAL  R5 U6        ; R5 := U6
158 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["PREMIUM_CREDITS"]
159 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
160 [-]: GETUPVAL  R5 U5        ; R5 := U5
161 [-]: GETTABLE  R5 R5 K38    ; R5 := R5[0x06d055f9]
162 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
163 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
164 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xd33115d5]
165 [-]: CALL      R6 2 2       ; R6 := R6(R7)
166 [-]: GETGLOBAL R7 K26       ; R7 := _T
167 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["PremiumCredits"]
168 [-]: GETGLOBAL R8 K26       ; R8 := _T
169 [-]: GETTABLE  R8 R8 K41    ; R8 := R8["PurchasedPremiumCredits"]
170 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
171 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 201
172 [-]: JMP       201          ; PC := 201
173 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
174 [-]: GETUPVAL  R5 U6        ; R5 := U6
175 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["PREMIUM_CREDITS"]
176 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
177 [-]: GETUPVAL  R5 U5        ; R5 := U5
178 [-]: GETTABLE  R5 R5 K38    ; R5 := R5[0x06d055f9]
179 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
180 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
181 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xd33115d5]
182 [-]: CALL      R6 2 2       ; R6 := R6(R7)
183 [-]: GETGLOBAL R7 K26       ; R7 := _T
184 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["PremiumCredits"]
185 [-]: GETGLOBAL R8 K26       ; R8 := _T
186 [-]: GETTABLE  R8 R8 K41    ; R8 := R8["PurchasedPremiumCredits"]
187 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
188 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
189 [-]: GETUPVAL  R5 U7        ; R5 := U7
190 [-]: GETUPVAL  R6 U6        ; R6 := U6
191 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["PREMIUM_CREDITS"]
192 [-]: GETGLOBAL R7 K3        ; R7 := mPurchaseParams
193 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["mStoreItem"]
194 [-]: SELF      R7 R7 K39    ; R8 := R7; R7 := R7[0xd33115d5]
195 [-]: CALL      R7 2 2       ; R7 := R7(R8)
196 [-]: NOT       R7 R7        ; R7 :=  R7
197 [-]: LOADNIL   R8 R10       ; R8 := R9 := R10 := nil
198 [-]: MOVE      R11 R4       ; R11 := R4
199 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
200 [-]: RETURN    R0 1         ; return 
201 [-]: GETGLOBAL R5 K0        ; R5 := mPurchaseTotalPrice
202 [-]: GETUPVAL  R6 U6        ; R6 := U6
203 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["PRIME_BUCKS"]
204 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
205 [-]: TEST      R5 0         ; if not R5 then PC := 226
206 [-]: JMP       226          ; PC := 226
207 [-]: GETGLOBAL R5 K8        ; R5 := 0x7b998233
208 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
209 [-]: CALL      R5 2 2       ; R5 := R5(R6)
210 [-]: TEST      R5 1         ; if R5 then PC := 226
211 [-]: JMP       226          ; PC := 226
212 [-]: GETGLOBAL R5 K0        ; R5 := mPurchaseTotalPrice
213 [-]: GETUPVAL  R6 U6        ; R6 := U6
214 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["PRIME_BUCKS"]
215 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
216 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
217 [-]: SELF      R6 R6 K43    ; R7 := R6; R6 := R6[0x592472fb]
218 [-]: CALL      R6 2 2       ; R6 := R6(R7)
219 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 226
220 [-]: JMP       226          ; PC := 226
221 [-]: GETUPVAL  R5 U7        ; R5 := U7
222 [-]: GETUPVAL  R6 U6        ; R6 := U6
223 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["PRIME_BUCKS"]
224 [-]: CALL      R5 2 1       ; R5(R6)
225 [-]: RETURN    R0 1         ; return 
226 [-]: GETGLOBAL R5 K0        ; R5 := mPurchaseTotalPrice
227 [-]: GETUPVAL  R6 U6        ; R6 := U6
228 [-]: GETTABLE  R6 R6 K44    ; R6 := R6["PRIME_TOKENS"]
229 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
230 [-]: TEST      R5 0         ; if not R5 then PC := 252
231 [-]: JMP       252          ; PC := 252
232 [-]: LOADKB    R0 1 0       ; R0 := true
233 [-]: GETGLOBAL R5 K8        ; R5 := 0x7b998233
234 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
235 [-]: CALL      R5 2 2       ; R5 := R5(R6)
236 [-]: TEST      R5 1         ; if R5 then PC := 252
237 [-]: JMP       252          ; PC := 252
238 [-]: GETGLOBAL R5 K0        ; R5 := mPurchaseTotalPrice
239 [-]: GETUPVAL  R6 U6        ; R6 := U6
240 [-]: GETTABLE  R6 R6 K44    ; R6 := R6["PRIME_TOKENS"]
241 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
242 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
243 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0xbd6729ff]
244 [-]: CALL      R6 2 2       ; R6 := R6(R7)
245 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 252
246 [-]: JMP       252          ; PC := 252
247 [-]: GETUPVAL  R5 U7        ; R5 := U7
248 [-]: GETUPVAL  R6 U6        ; R6 := U6
249 [-]: GETTABLE  R6 R6 K44    ; R6 := R6["PRIME_TOKENS"]
250 [-]: CALL      R5 2 1       ; R5(R6)
251 [-]: RETURN    R0 1         ; return 
252 [-]: GETGLOBAL R5 K0        ; R5 := mPurchaseTotalPrice
253 [-]: GETUPVAL  R6 U6        ; R6 := U6
254 [-]: GETTABLE  R6 R6 K45    ; R6 := R6["STANDING"]
255 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
256 [-]: TEST      R5 0         ; if not R5 then PC := 287
257 [-]: JMP       287          ; PC := 287
258 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
259 [-]: GETTABLE  R5 R5 K46    ; R5 := R5["mSyndicateTag"]
260 [-]: SELF      R5 R5 K47    ; R6 := R5; R5 := R5[0x56c01834]
261 [-]: CALL      R5 2 2       ; R5 := R5(R6)
262 [-]: TEST      R5 1         ; if R5 then PC := 268
263 [-]: JMP       268          ; PC := 268
264 [-]: GETUPVAL  R5 U8        ; R5 := U8
265 [-]: LOADNIL   R6 R6        ; R6 := nil
266 [-]: CALL      R5 2 1       ; R5(R6)
267 [-]: RETURN    R0 1         ; return 
268 [-]: GETUPVAL  R5 U0        ; R5 := U0
269 [-]: GETTABLE  R5 R5 K48    ; R5 := R5[0x338a8686]
270 [-]: GETGLOBAL R6 K49       ; R6 := 0xa94df70b
271 [-]: SELF      R6 R6 K50    ; R7 := R6; R6 := R6[0x07408254]
272 [-]: GETGLOBAL R8 K3        ; R8 := mPurchaseParams
273 [-]: GETTABLE  R8 R8 K46    ; R8 := R8["mSyndicateTag"]
274 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
275 [-]: CALL      R5 0 3       ; R5,R6 := R5(R6,...)
276 [-]: GETGLOBAL R7 K0        ; R7 := mPurchaseTotalPrice
277 [-]: GETUPVAL  R8 U6        ; R8 := U6
278 [-]: GETTABLE  R8 R8 K45    ; R8 := R8["STANDING"]
279 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
280 [-]: LT        0 R6 R7      ; if R6 >= R7 then PC := 287
281 [-]: JMP       287          ; PC := 287
282 [-]: GETUPVAL  R7 U7        ; R7 := U7
283 [-]: GETUPVAL  R8 U6        ; R8 := U6
284 [-]: GETTABLE  R8 R8 K45    ; R8 := R8["STANDING"]
285 [-]: CALL      R7 2 1       ; R7(R8)
286 [-]: RETURN    R0 1         ; return 
287 [-]: GETGLOBAL R7 K0        ; R7 := mPurchaseTotalPrice
288 [-]: GETUPVAL  R8 U6        ; R8 := U6
289 [-]: GETTABLE  R8 R8 K51    ; R8 := R8["AMBULAS_DATA"]
290 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
291 [-]: TEST      R7 0         ; if not R7 then PC := 322
292 [-]: JMP       322          ; PC := 322
293 [-]: GETGLOBAL R7 K52       ; R7 := 0x7ed0a956
294 [-]: LOADK     R8 K53       ; R8 := "/Lotus/Types/Items/Events/AmbulasDataFragment"
295 [-]: CALL      R7 2 2       ; R7 := R7(R8)
296 [-]: CONST     R8 0         ; R8 := 0.000000
297 [-]: SELF      R9 R1 K54    ; R10 := R1; R9 := R1[0xf4045b7e]
298 [-]: CALL      R9 2 2       ; R9 := R9(R10)
299 [-]: CONST     R10 1        ; R10 := 1.000000
300 [-]: LEN       R11 R9       ; R11 := # R9
301 [-]: CONST     R12 1        ; R12 := 1.000000
302 [-]: FORPREP   R10 310      ; R10 -= R12; PC := 310
303 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
304 [-]: GETTABLE  R14 R14 K55  ; R14 := R14["mItemType"]
305 [-]: EQ        0 R14 R7     ; if R14 ~= R7 then PC := 310
306 [-]: JMP       310          ; PC := 310
307 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
308 [-]: GETTABLE  R8 R14 K56   ; R8 := R14["mItemCount"]
309 [-]: JMP       311          ; PC := 311
310 [-]: FORLOOP   R10 303      ; R10 += R12; if R10 <= R11 then begin PC := 303; R13 := R10 end
311 [-]: GETGLOBAL R14 K0       ; R14 := mPurchaseTotalPrice
312 [-]: GETUPVAL  R15 U6       ; R15 := U6
313 [-]: GETTABLE  R15 R15 K51  ; R15 := R15["AMBULAS_DATA"]
314 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
315 [-]: LT        0 R8 R14     ; if R8 >= R14 then PC := 322
316 [-]: JMP       322          ; PC := 322
317 [-]: GETUPVAL  R14 U7       ; R14 := U7
318 [-]: GETUPVAL  R15 U6       ; R15 := U6
319 [-]: GETTABLE  R15 R15 K51  ; R15 := R15["AMBULAS_DATA"]
320 [-]: CALL      R14 2 1      ; R14(R15)
321 [-]: RETURN    R0 1         ; return 
322 [-]: GETGLOBAL R14 K0       ; R14 := mPurchaseTotalPrice
323 [-]: GETUPVAL  R15 U6       ; R15 := U6
324 [-]: GETTABLE  R15 R15 K57  ; R15 := R15["ITEMS"]
325 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
326 [-]: TEST      R14 0        ; if not R14 then PC := 390
327 [-]: JMP       390          ; PC := 390
328 [-]: CONST     R14 1        ; R14 := 1.000000
329 [-]: GETGLOBAL R15 K0       ; R15 := mPurchaseTotalPrice
330 [-]: GETUPVAL  R16 U6       ; R16 := U6
331 [-]: GETTABLE  R16 R16 K57  ; R16 := R16["ITEMS"]
332 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
333 [-]: LEN       R15 R15      ; R15 := # R15
334 [-]: CONST     R16 1        ; R16 := 1.000000
335 [-]: FORPREP   R14 389      ; R14 -= R16; PC := 389
336 [-]: GETGLOBAL R18 K0       ; R18 := mPurchaseTotalPrice
337 [-]: GETUPVAL  R19 U6       ; R19 := U6
338 [-]: GETTABLE  R19 R19 K57  ; R19 := R19["ITEMS"]
339 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
340 [-]: GETTABLE  R18 R18 R17  ; R18 := R18[R17]
341 [-]: GETGLOBAL R19 K8       ; R19 := 0x7b998233
342 [-]: GETTABLE  R20 R18 K55  ; R20 := R18["mItemType"]
343 [-]: CALL      R19 2 2      ; R19 := R19(R20)
344 [-]: TEST      R19 1        ; if R19 then PC := 389
345 [-]: JMP       389          ; PC := 389
346 [-]: GETUPVAL  R19 U0       ; R19 := U0
347 [-]: GETTABLE  R19 R19 K58  ; R19 := R19[0xb54b2e07]
348 [-]: GETGLOBAL R20 K26      ; R20 := _T
349 [-]: GETTABLE  R20 R20 K29  ; R20 := R20["purchasedItems"]
350 [-]: GETTABLE  R21 R18 K55  ; R21 := R18["mItemType"]
351 [-]: SELF      R21 R21 K59  ; R22 := R21; R21 := R21[0xed4e0128]
352 [-]: CALL      R21 2 2      ; R21 := R21(R22)
353 [-]: CLOSURE   R22 0        ; R22 := closure(Function #26.1)
354 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
355 [-]: CONST     R20 0        ; R20 := 0.000000
356 [-]: TEST      R19 0        ; if not R19 then PC := 381
357 [-]: JMP       381          ; PC := 381
358 [-]: GETTABLE  R21 R19 K60  ; R21 := R19[1.000000]
359 [-]: GETTABLE  R22 R19 K61  ; R22 := R19[2.000000]
360 [-]: CONST     R23 1        ; R23 := 1.000000
361 [-]: FORPREP   R21 380      ; R21 -= R23; PC := 380
362 [-]: GETGLOBAL R25 K26      ; R25 := _T
363 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["purchasedItems"]
364 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
365 [-]: GETTABLE  R25 R25 K62  ; R25 := R25["count"]
366 [-]: TEST      R25 0        ; if not R25 then PC := 374
367 [-]: JMP       374          ; PC := 374
368 [-]: GETGLOBAL R25 K26      ; R25 := _T
369 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["purchasedItems"]
370 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
371 [-]: GETTABLE  R25 R25 K62  ; R25 := R25["count"]
372 [-]: ADD       R20 R20 R25  ; R20 := R20 + R25
373 [-]: JMP       380          ; PC := 380
374 [-]: GETGLOBAL R25 K63      ; R25 := 0x5bced4c4
375 [-]: GETTABLE  R25 R25 K64  ; R25 := R25[0xac1b386a]
376 [-]: ADD       R26 R20 K60  ; R26 := R20 + 1.000000
377 [-]: CONST     R27 1        ; R27 := 1.000000
378 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
379 [-]: MOVE      R20 R25      ; R20 := R25
380 [-]: FORLOOP   R21 362      ; R21 += R23; if R21 <= R22 then begin PC := 362; R24 := R21 end
381 [-]: GETTABLE  R25 R18 K56  ; R25 := R18["mItemCount"]
382 [-]: LT        0 R20 R25    ; if R20 >= R25 then PC := 389
383 [-]: JMP       389          ; PC := 389
384 [-]: GETUPVAL  R25 U7       ; R25 := U7
385 [-]: GETUPVAL  R26 U6       ; R26 := U6
386 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["ITEMS"]
387 [-]: CALL      R25 2 1      ; R25(R26)
388 [-]: RETURN    R0 1         ; return 
389 [-]: FORLOOP   R14 336      ; R14 += R16; if R14 <= R15 then begin PC := 336; R17 := R14 end
390 [-]: GETGLOBAL R25 K0       ; R25 := mPurchaseTotalPrice
391 [-]: GETUPVAL  R26 U6       ; R26 := U6
392 [-]: GETTABLE  R26 R26 K65  ; R26 := R26["FOCUS_XP"]
393 [-]: GETTABLE  R25 R25 R26  ; R25 := R25[R26]
394 [-]: TEST      R25 0        ; if not R25 then PC := 422
395 [-]: JMP       422          ; PC := 422
396 [-]: GETGLOBAL R25 K9       ; R25 := 0x25d99d89
397 [-]: SELF      R25 R25 K66  ; R26 := R25; R25 := R25[0xad94d866]
398 [-]: GETGLOBAL R27 K67      ; R27 := mPurchasePolarityType
399 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
400 [-]: GETGLOBAL R26 K26      ; R26 := _T
401 [-]: GETTABLE  R26 R26 K68  ; R26 := R26["TennoWay_CurrentFocus"]
402 [-]: EQ        1 R26 K1     ; if R26 == nil then PC := 406
403 [-]: JMP       406          ; PC := 406
404 [-]: GETGLOBAL R26 K26      ; R26 := _T
405 [-]: GETTABLE  R25 R26 K68  ; R25 := R26["TennoWay_CurrentFocus"]
406 [-]: GETGLOBAL R26 K8       ; R26 := 0x7b998233
407 [-]: GETGLOBAL R27 K9       ; R27 := 0x25d99d89
408 [-]: CALL      R26 2 2      ; R26 := R26(R27)
409 [-]: TEST      R26 1        ; if R26 then PC := 422
410 [-]: JMP       422          ; PC := 422
411 [-]: GETGLOBAL R26 K0       ; R26 := mPurchaseTotalPrice
412 [-]: GETUPVAL  R27 U6       ; R27 := U6
413 [-]: GETTABLE  R27 R27 K65  ; R27 := R27["FOCUS_XP"]
414 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
415 [-]: LT        0 R25 R26    ; if R25 >= R26 then PC := 422
416 [-]: JMP       422          ; PC := 422
417 [-]: GETUPVAL  R26 U7       ; R26 := U7
418 [-]: GETUPVAL  R27 U6       ; R27 := U6
419 [-]: GETTABLE  R27 R27 K65  ; R27 := R27["FOCUS_XP"]
420 [-]: CALL      R26 2 1      ; R26(R27)
421 [-]: RETURN    R0 1         ; return 
422 [-]: TEST      R0 1         ; if R0 then PC := 479
423 [-]: JMP       479          ; PC := 479
424 [-]: GETUPVAL  R26 U0       ; R26 := U0
425 [-]: GETTABLE  R26 R26 K69  ; R26 := R26[0x1fdb3a11]
426 [-]: GETGLOBAL R27 K3       ; R27 := mPurchaseParams
427 [-]: GETTABLE  R27 R27 K4   ; R27 := R27["mStoreItem"]
428 [-]: SELF      R27 R27 K16  ; R28 := R27; R27 := R27[0xfe9eb1a5]
429 [-]: CALL      R27 2 2      ; R27 := R27(R28)
430 [-]: GETGLOBAL R28 K70      ; R28 := mQuantityToReceive
431 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
432 [-]: TEST      R26 1        ; if R26 then PC := 479
433 [-]: JMP       479          ; PC := 479
434 [-]: GETGLOBAL R26 K49      ; R26 := 0xa94df70b
435 [-]: SELF      R26 R26 K71  ; R27 := R26; R26 := R26[0x99c4ef3a]
436 [-]: GETGLOBAL R28 K3       ; R28 := mPurchaseParams
437 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["mStoreItem"]
438 [-]: SELF      R28 R28 K16  ; R29 := R28; R28 := R28[0xfe9eb1a5]
439 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
440 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
441 [-]: GETUPVAL  R27 U0       ; R27 := U0
442 [-]: GETTABLE  R27 R27 K72  ; R27 := R27[0xc10bb642]
443 [-]: MOVE      R28 R1       ; R28 := R1
444 [-]: MOVE      R29 R26      ; R29 := R26
445 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
446 [-]: TEST      R27 1        ; if R27 then PC := 455
447 [-]: JMP       455          ; PC := 455
448 [-]: GETGLOBAL R27 K26      ; R27 := _T
449 [-]: SETTABLE  R27 K27 K1   ; R27["PurchaseSuccessLocOverride"] := nil
450 [-]: GETUPVAL  R27 U0       ; R27 := U0
451 [-]: GETTABLE  R27 R27 K73  ; R27 := R27[0x7aef8b7f]
452 [-]: LOADK     R28 K74      ; R28 := "OnInvalidBinError"
453 [-]: CALL      R27 2 1      ; R27(R28)
454 [-]: JMP       478          ; PC := 478
455 [-]: EQ        0 R26 K75    ; if R26 ~= 11.000000 then PC := 468
456 [-]: JMP       468          ; PC := 468
457 [-]: GETUPVAL  R27 U3       ; R27 := U3
458 [-]: MOVE      R28 R1       ; R28 := R1
459 [-]: MOVE      R29 R26      ; R29 := R26
460 [-]: CONST     R30 1        ; R30 := 1.000000
461 [-]: LOADK     R31 K76      ; R31 := "/Lotus/Language/Labels/BuyItem_CrewCapacityReached"
462 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
463 [-]: TEST      R27 0        ; if not R27 then PC := 478
464 [-]: JMP       478          ; PC := 478
465 [-]: GETUPVAL  R27 U9       ; R27 := U9
466 [-]: CALL      R27 1 1      ; R27()
467 [-]: JMP       478          ; PC := 478
468 [-]: GETUPVAL  R27 U3       ; R27 := U3
469 [-]: MOVE      R28 R1       ; R28 := R1
470 [-]: MOVE      R29 R26      ; R29 := R26
471 [-]: CONST     R30 1        ; R30 := 1.000000
472 [-]: LOADK     R31 K77      ; R31 := "/Lotus/Language/Labels/BuyItem_BinCapacityReached"
473 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
474 [-]: TEST      R27 0        ; if not R27 then PC := 478
475 [-]: JMP       478          ; PC := 478
476 [-]: GETUPVAL  R27 U9       ; R27 := U9
477 [-]: CALL      R27 1 1      ; R27()
478 [-]: RETURN    R0 1         ; return 
479 [-]: GETUPVAL  R27 U10      ; R27 := U10
480 [-]: CALL      R27 1 1      ; R27()
481 [-]: RETURN    R0 1         ; return 


; Function #26.1:
;
; Name:            
; Defined at line: 1420
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["type"]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 1476
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 1480
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: CONST     R0 -1        ; R0 := -1.000000
  2 [-]: CONST     R1 0         ; R1 := 0.000000
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x34291f5c
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xe27b35bb]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: SETTABLE  R2 K2 K3     ; R2["dialogType"] := 5.000000
  7 [-]: SETTABLE  R2 K4 K5     ; R2["locString"] := "/Lotus/Language/Menu/Global_DurabilityConfirmation"
  8 [-]: GETGLOBAL R3 K6        ; R3 := mPurchaseParams
  9 [-]: SETTABLE  R3 K7 K8     ; R3["mUsePremium"] := true
 10 [-]: LOADKB    R3 1 0       ; R3 := true
 11 [-]: GETGLOBAL R4 K6        ; R4 := mPurchaseParams
 12 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mStoreItem"]
 13 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf278f8a1]
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf2deaf69]
 16 [-]: GETGLOBAL R6 K12       ; R6 := gLotusBoosterUpgradeType
 17 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 18 [-]: TEST      R4 0         ; if not R4 then PC := 37
 19 [-]: JMP       37           ; PC := 37
 20 [-]: GETGLOBAL R4 K13       ; R4 := 0xb009bbc6
 21 [-]: GETGLOBAL R5 K6        ; R5 := mPurchaseParams
 22 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mStoreItem"]
 23 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf278f8a1]
 24 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 25 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 26 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4[0x4bcc0a75]
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: MOVE      R3 R5        ; R3 := R5
 29 [-]: GETGLOBAL R5 K15       ; R5 := _T
 30 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["GiftParams"]
 31 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Item"]
 32 [-]: EQ        1 R5 K18     ; if R5 == nil then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETGLOBAL R5 K15       ; R5 := _T
 35 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["GiftParams"]
 36 [-]: SETTABLE  R5 K19 R3    ; R5["BoosterIsTimed"] := R3
 37 [-]: GETGLOBAL R5 K20       ; R5 := 0xae91e43b
 38 [-]: SELF      R5 R5 K21    ; R6 := R5; R5 := R5[0x42b04007]
 39 [-]: LOADK     R7 K22       ; R7 := "/Lotus/Language/Menu/Global_DurabilityPermanent"
 40 [-]: LOADKB    R8 0 0       ; R8 := false
 41 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 42 [-]: CONST     R6 0         ; R6 := 0.000000
 43 [-]: CONST     R7 2         ; R7 := 2.000000
 44 [-]: CONST     R8 1         ; R8 := 1.000000
 45 [-]: FORPREP   R6 165       ; R6 -= R8; PC := 165
 46 [-]: GETGLOBAL R10 K6       ; R10 := mPurchaseParams
 47 [-]: SETTABLE  R10 K24 R9   ; R10["mDurability"] := R9
 48 [-]: GETUPVAL  R10 U0       ; R10 := U0
 49 [-]: GETGLOBAL R11 K6       ; R11 := mPurchaseParams
 50 [-]: CALL      R10 2 3      ; R10,R11 := R10(R11)
 51 [-]: EQ        1 R11 K18    ; if R11 == nil then PC := 165
 52 [-]: JMP       165          ; PC := 165
 53 [-]: EQ        1 R10 K18    ; if R10 == nil then PC := 165
 54 [-]: JMP       165          ; PC := 165
 55 [-]: GETUPVAL  R12 U1       ; R12 := U1
 56 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["PREMIUM_CREDITS"]
 57 [-]: GETTABLE  R12 R10 R12  ; R12 := R10[R12]
 58 [-]: EQ        1 R12 K18    ; if R12 == nil then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETUPVAL  R12 U1       ; R12 := U1
 61 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["PREMIUM_CREDITS"]
 62 [-]: GETTABLE  R12 R10 R12  ; R12 := R10[R12]
 63 [-]: LT        1 K26 R12    ; if 0.000000 < R12 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: LOADKB    R12 0 1      ; R12 := false; PC := 66
 66 [-]: LOADKB    R12 1 0      ; R12 := true
 67 [-]: GETUPVAL  R13 U2       ; R13 := U2
 68 [-]: GETTABLE  R13 R13 K27  ; R13 := R13[0x06d055f9]
 69 [-]: MOVE      R14 R12      ; R14 := R12
 70 [-]: GETUPVAL  R15 U1       ; R15 := U1
 71 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["PREMIUM_CREDITS"]
 72 [-]: GETTABLE  R15 R10 R15  ; R15 := R10[R15]
 73 [-]: GETUPVAL  R16 U1       ; R16 := U1
 74 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["REGULAR_CREDITS"]
 75 [-]: GETTABLE  R16 R10 R16  ; R16 := R10[R16]
 76 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 77 [-]: LOADK     R14 K29      ; R14 := "undefined"
 78 [-]: MOVE      R0 R9        ; R0 := R9
 79 [-]: ADD       R1 R1 K30    ; R1 := R1 + 1.000000
 80 [-]: TEST      R3 0         ; if not R3 then PC := 135
 81 [-]: JMP       135          ; PC := 135
 82 [-]: GETGLOBAL R15 K31      ; R15 := 0xa94df70b
 83 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15[0x2539e471]
 84 [-]: MOVE      R17 R9       ; R17 := R9
 85 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 86 [-]: EQ        0 R15 K33    ; if R15 ~= 259200.000000 then PC := 95
 87 [-]: JMP       95           ; PC := 95
 88 [-]: GETGLOBAL R16 K20      ; R16 := 0xae91e43b
 89 [-]: SELF      R16 R16 K21  ; R17 := R16; R16 := R16[0x42b04007]
 90 [-]: LOADK     R18 K34      ; R18 := "/Lotus/Language/Menu/Global_3Days"
 91 [-]: LOADKB    R19 0 0      ; R19 := false
 92 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 93 [-]: MOVE      R15 R16      ; R15 := R16
 94 [-]: JMP       119          ; PC := 119
 95 [-]: EQ        0 R15 K35    ; if R15 ~= 604800.000000 then PC := 104
 96 [-]: JMP       104          ; PC := 104
 97 [-]: GETGLOBAL R16 K20      ; R16 := 0xae91e43b
 98 [-]: SELF      R16 R16 K21  ; R17 := R16; R16 := R16[0x42b04007]
 99 [-]: LOADK     R18 K36      ; R18 := "/Lotus/Language/Menu/Global_7Days"
100 [-]: LOADKB    R19 0 0      ; R19 := false
101 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
102 [-]: MOVE      R15 R16      ; R15 := R16
103 [-]: JMP       119          ; PC := 119
104 [-]: GETUPVAL  R16 U2       ; R16 := U2
105 [-]: GETTABLE  R16 R16 K27  ; R16 := R16[0x06d055f9]
106 [-]: LT        1 K26 R15    ; if 0.000000 < R15 then PC := 109
107 [-]: JMP       109          ; PC := 109
108 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 109
109 [-]: LOADKB    R17 1 0      ; R17 := true
110 [-]: GETUPVAL  R18 U3       ; R18 := U3
111 [-]: GETTABLE  R18 R18 K37  ; R18 := R18[0x817b1503]
112 [-]: GETGLOBAL R19 K20      ; R19 := 0xae91e43b
113 [-]: MOVE      R20 R15      ; R20 := R15
114 [-]: LOADKB    R21 1 0      ; R21 := true
115 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
116 [-]: MOVE      R19 R5       ; R19 := R5
117 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
118 [-]: MOVE      R15 R16      ; R15 := R16
119 [-]: MOVE      R16 R15      ; R16 := R15
120 [-]: LOADK     R17 K38      ; R17 := " "
121 [-]: GETGLOBAL R18 K20      ; R18 := 0xae91e43b
122 [-]: SELF      R18 R18 K21  ; R19 := R18; R18 := R18[0x42b04007]
123 [-]: GETUPVAL  R20 U2       ; R20 := U2
124 [-]: GETTABLE  R20 R20 K27  ; R20 := R20[0x06d055f9]
125 [-]: MOVE      R21 R12      ; R21 := R12
126 [-]: LOADK     R22 K39      ; R22 := "<PLATINUM_CREDITS>"
127 [-]: LOADK     R23 K40      ; R23 := "<CREDITS>"
128 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
129 [-]: MOVE      R21 R13      ; R21 := R13
130 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
131 [-]: LOADKB    R21 1 0      ; R21 := true
132 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
133 [-]: CONCAT    R14 R16 R18  ; R14 := R16 .. R17 .. R18
134 [-]: JMP       158          ; PC := 158
135 [-]: GETGLOBAL R16 K31      ; R16 := 0xa94df70b
136 [-]: SELF      R16 R16 K41  ; R17 := R16; R16 := R16[0xbd680672]
137 [-]: MOVE      R18 R9       ; R18 := R9
138 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
139 [-]: GETGLOBAL R17 K42      ; R17 := 0x603636ad
140 [-]: LOADK     R18 K43      ; R18 := "/Lotus/Language/Menu/Global_BoosterUses"
141 [-]: NEWTABLE  R19 0 1      ; R19 := {}
142 [-]: SETTABLE  R19 K44 R16  ; R19["NUM_USES"] := R16
143 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
144 [-]: LOADK     R18 K38      ; R18 := " "
145 [-]: GETGLOBAL R19 K20      ; R19 := 0xae91e43b
146 [-]: SELF      R19 R19 K21  ; R20 := R19; R19 := R19[0x42b04007]
147 [-]: GETUPVAL  R21 U2       ; R21 := U2
148 [-]: GETTABLE  R21 R21 K27  ; R21 := R21[0x06d055f9]
149 [-]: MOVE      R22 R12      ; R22 := R12
150 [-]: LOADK     R23 K39      ; R23 := "<PLATINUM_CREDITS>"
151 [-]: LOADK     R24 K40      ; R24 := "<CREDITS>"
152 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
153 [-]: MOVE      R22 R13      ; R22 := R13
154 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
155 [-]: LOADKB    R22 1 0      ; R22 := true
156 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
157 [-]: CONCAT    R14 R17 R19  ; R14 := R17 .. R18 .. R19
158 [-]: GETGLOBAL R17 K6       ; R17 := mPurchaseParams
159 [-]: SETTABLE  R17 K45 R13  ; R17["mExpectedPrice"] := R13
160 [-]: EQ        0 R1 K30     ; if R1 ~= 1.000000 then PC := 164
161 [-]: JMP       164          ; PC := 164
162 [-]: SETTABLE  R2 K46 R14   ; R2["firstString"] := R14
163 [-]: JMP       165          ; PC := 165
164 [-]: SETTABLE  R2 K47 R14   ; R2["secondString"] := R14
165 [-]: FORLOOP   R6 46        ; R6 += R8; if R6 <= R7 then begin PC := 46; R9 := R6 end
166 [-]: LT        0 K30 R1     ; if 1.000000 >= R1 then PC := 177
167 [-]: JMP       177          ; PC := 177
168 [-]: SETTABLE  R2 K48 K49   ; R2["thirdString"] := "/Lotus/Language/Menu/ItemSelection_Cancel"
169 [-]: SELF      R17 R2 K50   ; R18 := R2; R17 := R2[0xe6ccc5b9]
170 [-]: LOADK     R19 K51      ; R19 := "ConfirmDurability"
171 [-]: CALL      R17 3 1      ; R17(R18,R19)
172 [-]: GETUPVAL  R17 U2       ; R17 := U2
173 [-]: GETTABLE  R17 R17 K52  ; R17 := R17[0xe99b84e7]
174 [-]: MOVE      R18 R2       ; R18 := R2
175 [-]: CALL      R17 2 1      ; R17(R18)
176 [-]: JMP       194          ; PC := 194
177 [-]: GETGLOBAL R17 K6       ; R17 := mPurchaseParams
178 [-]: SETTABLE  R17 K24 R0   ; R17["mDurability"] := R0
179 [-]: GETUPVAL  R17 U0       ; R17 := U0
180 [-]: GETGLOBAL R18 K6       ; R18 := mPurchaseParams
181 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
182 [-]: SETGLOBAL R19 K55      ; mPurchaseQuantityMultiplier := R19
183 [-]: SETGLOBAL R18 K54      ; mPurchaseUnitPrice := R18
184 [-]: SETGLOBAL R17 K53      ; mPurchaseTotalPrice := R17
185 [-]: GETGLOBAL R17 K53      ; R17 := mPurchaseTotalPrice
186 [-]: EQ        0 R17 K18    ; if R17 ~= nil then PC := 192
187 [-]: JMP       192          ; PC := 192
188 [-]: GETUPVAL  R17 U4       ; R17 := U4
189 [-]: LOADNIL   R18 R18      ; R18 := nil
190 [-]: CALL      R17 2 1      ; R17(R18)
191 [-]: RETURN    R0 1         ; return 
192 [-]: GETUPVAL  R17 U5       ; R17 := U5
193 [-]: CALL      R17 1 1      ; R17()
194 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1559
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K1        ; R0 := 0x6c97a788
  2 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xf89a99f3]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: SETGLOBAL R0 K0        ; mPurchaseParams := R0
  5 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
  6 [-]: GETGLOBAL R1 K4        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["GiftParams"]
  8 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Item"]
  9 [-]: SETTABLE  R0 K3 R1     ; R0[0xf2deaf69] := R1
 10 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
 11 [-]: GETGLOBAL R1 K4        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["GiftParams"]
 13 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Source"]
 14 [-]: SETTABLE  R0 K7 R1     ; R0["mSource"] := R1
 15 [-]: GETGLOBAL R0 K4        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["GiftParams"]
 17 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["CouponId"]
 18 [-]: EQ        1 R0 K10     ; if R0 == nil then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
 21 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mCouponId"]
 22 [-]: GETGLOBAL R1 K4        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["GiftParams"]
 24 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["CouponId"]
 25 [-]: SETTABLE  R0 K12 R1    ; R0[0x7b998233] := R1
 26 [-]: GETUPVAL  R0 U0        ; R0 := U0
 27 [-]: CALL      R0 1 1       ; R0()
 28 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1571
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 5.000000 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: EQ        0 R1 K3      ; if R1 ~= 4.000000 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETGLOBAL R1 K4        ; R1 := mPurchaseParams
 16 [-]: SETTABLE  R1 K5 K6     ; R1["mUsePremium"] := false
 17 [-]: JMP       20           ; PC := 20
 18 [-]: GETGLOBAL R1 K4        ; R1 := mPurchaseParams
 19 [-]: SETTABLE  R1 K5 K7     ; R1["mUsePremium"] := true
 20 [-]: GETGLOBAL R1 K8        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xe4162eed]
 22 [-]: LOADK     R3 K10       ; R3 := "BuyItem"
 23 [-]: LOADK     R4 K11       ; R4 := "true"
 24 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1586
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := screenStack
  2 [-]: LEN       R0 R0        ; R0 := # R0
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1590
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x7e17ae26]
  3 [-]: LOADK     R2 K2        ; R2 := "ScreenStackUpdated"
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x64fb1586
  5 [-]: GETGLOBAL R4 K4        ; R4 := screenStack
  6 [-]: LEN       R4 R4        ; R4 := # R4
  7 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  8 [-]: CALL      R0 0 1       ; R0(R1,...)
  9 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1594
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x23d5322f]
  3 [-]: GETGLOBAL R2 K2        ; R2 := screenStack
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1599
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x9c1f3b5a]
  3 [-]: GETGLOBAL R2 K2        ; R2 := screenStack
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1604
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0x768274d6]
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: LOADKB    R5 1 0       ; R5 := true
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0xde321e6f]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x2676deee]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: SELF      R3 R2 K1     ; R4 := R2; R3 := R2[0x768274d6]
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: LOADKB    R6 1 0       ; R6 := true
 23 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 24 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1615
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x8019cc24]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 12 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xf2deaf69]
 13 [-]: GETGLOBAL R2 K4        ; R2 := gLotusAttractModeGameRulesType
 14 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x23ddc82a]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 22
 22 [-]: LOADKB    R0 1 0       ; R0 := true
 23 [-]: RETURN    R0 2         ; return R0
 24 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1620
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: LOADKB    R0 0 0       ; R0 := false
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K1        ; R2 := mMenuSuitAvatar
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xffe25891]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x89326c93
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x89326c93
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x78298275]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: SETGLOBAL R2 K1        ; mMenuSuitAvatar := R2
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 21 [-]: GETGLOBAL R3 K1        ; R3 := mMenuSuitAvatar
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R2 K6        ; R2 := mCurrentMode
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
 28 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: LOADNIL   R2 R2        ; R2 := nil
 32 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 33 [-]: GETGLOBAL R4 K8        ; R4 := 0x76ea806b
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 1         ; if R3 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R3 K8        ; R3 := 0x76ea806b
 38 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x3f3ae64c]
 39 [-]: CONST     R5 0         ; R5 := 0.000000
 40 [-]: LOADKB    R6 0 0       ; R6 := false
 41 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 42 [-]: MOVE      R2 R3        ; R2 := R3
 43 [-]: LOADNIL   R3 R3        ; R3 := nil
 44 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 45 [-]: MOVE      R5 R2        ; R5 := R2
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 52
 48 [-]: JMP       52           ; PC := 52
 49 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2[0x80563238]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: MOVE      R3 R4        ; R3 := R4
 52 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 53 [-]: MOVE      R5 R3        ; R5 := R3
 54 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 55 [-]: TEST      R4 1         ; if R4 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: SELF      R4 R3 K11    ; R5 := R3; R4 := R3[0x25a6e75e]
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0x8e7c3b5e]
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: GETGLOBAL R5 K13       ; R5 := 0x7ed0a956
 62 [-]: LOADK     R6 K14       ; R6 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
 63 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 64 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 67
 67 [-]: LOADKB    R4 1 0       ; R4 := true
 68 [-]: TEST      R4 0         ; if not R4 then PC := 205
 69 [-]: JMP       205          ; PC := 205
 70 [-]: LOADKB    R5 1 0       ; R5 := true
 71 [-]: TEST      R5 1         ; if R5 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: GETGLOBAL R5 K15       ; R5 := 0x9ba7909f
 74 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xbf9494fc]
 75 [-]: LOADK     R7 K17       ; R7 := "Lotus.BypassQuestCommitments"
 76 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 77 [-]: TEST      R5 1         ; if R5 then PC := 102
 78 [-]: JMP       102          ; PC := 102
 79 [-]: SELF      R5 R3 K18    ; R6 := R3; R5 := R3[0xd3620ef3]
 80 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 81 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 82 [-]: MOVE      R7 R5        ; R7 := R5
 83 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 84 [-]: TEST      R6 1         ; if R6 then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: SELF      R6 R5 K19    ; R7 := R5; R6 := R5[0xf2deaf69]
 87 [-]: GETGLOBAL R8 K13       ; R8 := 0x7ed0a956
 88 [-]: LOADK     R9 K20       ; R9 := "/Lotus/Types/GameRules/CampFirstLoadFrontEndGameRules"
 89 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 90 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 91 [-]: TEST      R6 0         ; if not R6 then PC := 102
 92 [-]: JMP       102          ; PC := 102
 93 [-]: GETUPVAL  R6 U1        ; R6 := U1
 94 [-]: GETGLOBAL R7 K1        ; R7 := mMenuSuitAvatar
 95 [-]: LOADKB    R8 0 0       ; R8 := false
 96 [-]: CALL      R6 3 1       ; R6(R7,R8)
 97 [-]: GETGLOBAL R6 K21       ; R6 := _T
 98 [-]: SETTABLE  R6 K22 K23   ; R6["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
 99 [-]: LOADKB    R6 1 0       ; R6 := true
100 [-]: SETGLOBAL R6 K24       ; mMenuSuitAvatarVisible := R6
101 [-]: RETURN    R0 1         ; return 
102 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
103 [-]: GETGLOBAL R7 K1        ; R7 := mMenuSuitAvatar
104 [-]: CALL      R6 2 2       ; R6 := R6(R7)
105 [-]: TEST      R6 1         ; if R6 then PC := 114
106 [-]: JMP       114          ; PC := 114
107 [-]: GETGLOBAL R6 K1        ; R6 := mMenuSuitAvatar
108 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0xf2deaf69]
109 [-]: GETGLOBAL R8 K13       ; R8 := 0x7ed0a956
110 [-]: LOADK     R9 K25       ; R9 := "/Lotus/Types/Friendly/PlayerControllable/ControllableDrifterTennoAvatar"
111 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
112 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
113 [-]: JMP       116          ; PC := 116
114 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 115
115 [-]: LOADKB    R6 1 0       ; R6 := true
116 [-]: TEST      R6 0         ; if not R6 then PC := 205
117 [-]: JMP       205          ; PC := 205
118 [-]: GETUPVAL  R7 U0        ; R7 := U0
119 [-]: GETTABLE  R7 R7 K12    ; R7 := R7[0x8e7c3b5e]
120 [-]: MOVE      R8 R3        ; R8 := R3
121 [-]: CALL      R7 2 3       ; R7,R8 := R7(R8)
122 [-]: EQ        1 R8 K26     ; if R8 == nil then PC := 140
123 [-]: JMP       140          ; PC := 140
124 [-]: LE        0 R8 K27     ; if R8 > 7.000000 then PC := 140
125 [-]: JMP       140          ; PC := 140
126 [-]: SELF      R9 R3 K28    ; R10 := R3; R9 := R3[0x62c81b76]
127 [-]: CALL      R9 2 2       ; R9 := R9(R10)
128 [-]: GETTABLE  R10 R9 K29   ; R10 := R9["mAdultOperatorCustomization"]
129 [-]: SELF      R11 R10 K30  ; R12 := R10; R11 := R10[0xb73354b4]
130 [-]: CONST     R13 14       ; R13 := 14.000000
131 [-]: CONST     R14 1        ; R14 := 1.000000
132 [-]: LOADKB    R15 1 0      ; R15 := true
133 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
134 [-]: SELF      R11 R3 K11   ; R12 := R3; R11 := R3[0x25a6e75e]
135 [-]: CALL      R11 2 2      ; R11 := R11(R12)
136 [-]: SELF      R12 R11 K32  ; R13 := R11; R12 := R11[0xabb55f13]
137 [-]: MOVE      R14 R10      ; R14 := R10
138 [-]: LOADKB    R15 1 0      ; R15 := true
139 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
140 [-]: SELF      R12 R3 K33   ; R13 := R3; R12 := R3[0x24d4e4c1]
141 [-]: MOVE      R14 R0       ; R14 := R0
142 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
143 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
144 [-]: MOVE      R14 R12      ; R14 := R12
145 [-]: CALL      R13 2 2      ; R13 := R13(R14)
146 [-]: TEST      R13 1        ; if R13 then PC := 155
147 [-]: JMP       155          ; PC := 155
148 [-]: SELF      R13 R12 K34  ; R14 := R12; R13 := R12[0xd2d3875a]
149 [-]: CALL      R13 2 2      ; R13 := R13(R14)
150 [-]: TEST      R13 1        ; if R13 then PC := 155
151 [-]: JMP       155          ; PC := 155
152 [-]: LOADKB    R13 0 0      ; R13 := false
153 [-]: SETGLOBAL R13 K24      ; mMenuSuitAvatarVisible := R13
154 [-]: RETURN    R0 1         ; return 
155 [-]: GETGLOBAL R13 K35      ; R13 := 0x3d106989
156 [-]: LOADK     R14 K36      ; R14 := "LoadOut resource loader is done; showing avatar"
157 [-]: CALL      R13 2 1      ; R13(R14)
158 [-]: SELF      R13 R3 K37   ; R14 := R3; R13 := R3[0x121ec068]
159 [-]: CALL      R13 2 1      ; R13(R14)
160 [-]: GETGLOBAL R13 K8       ; R13 := 0x76ea806b
161 [-]: SELF      R13 R13 K38  ; R14 := R13; R13 := R13[0x8792aaab]
162 [-]: CALL      R13 2 2      ; R13 := R13(R14)
163 [-]: TEST      R13 0        ; if not R13 then PC := 167
164 [-]: JMP       167          ; PC := 167
165 [-]: SELF      R13 R3 K39   ; R14 := R3; R13 := R3[0x41f4ba99]
166 [-]: CALL      R13 2 1      ; R13(R14)
167 [-]: SELF      R13 R3 K28   ; R14 := R3; R13 := R3[0x62c81b76]
168 [-]: CALL      R13 2 2      ; R13 := R13(R14)
169 [-]: GETUPVAL  R14 U1       ; R14 := U1
170 [-]: GETGLOBAL R15 K1       ; R15 := mMenuSuitAvatar
171 [-]: LOADKB    R16 1 0      ; R16 := true
172 [-]: CALL      R14 3 1      ; R14(R15,R16)
173 [-]: LOADKB    R14 1 0      ; R14 := true
174 [-]: SETGLOBAL R14 K24      ; mMenuSuitAvatarVisible := R14
175 [-]: LOADNIL   R14 R14      ; R14 := nil
176 [-]: GETTABLE  R15 R13 K29  ; R15 := R13["mAdultOperatorCustomization"]
177 [-]: SELF      R16 R15 K40  ; R17 := R15; R16 := R15[0x0549b427]
178 [-]: CALL      R16 2 2      ; R16 := R16(R17)
179 [-]: TEST      R16 0        ; if not R16 then PC := 186
180 [-]: JMP       186          ; PC := 186
181 [-]: GETGLOBAL R16 K13      ; R16 := 0x7ed0a956
182 [-]: LOADK     R17 K41      ; R17 := "/Lotus/Types/Friendly/PlayerControllable/MaleControllableDrifterSuit"
183 [-]: CALL      R16 2 2      ; R16 := R16(R17)
184 [-]: MOVE      R14 R16      ; R14 := R16
185 [-]: JMP       190          ; PC := 190
186 [-]: GETGLOBAL R16 K13      ; R16 := 0x7ed0a956
187 [-]: LOADK     R17 K42      ; R17 := "/Lotus/Types/Friendly/PlayerControllable/FemaleControllableDrifterSuit"
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: MOVE      R14 R16      ; R14 := R16
190 [-]: GETUPVAL  R16 U2       ; R16 := U2
191 [-]: GETTABLE  R16 R16 K43  ; R16 := R16[0x222e16f3]
192 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
193 [-]: MOVE      R18 R13      ; R18 := R13
194 [-]: LOADKB    R19 0 0      ; R19 := false
195 [-]: LOADKB    R20 1 0      ; R20 := true
196 [-]: MOVE      R21 R14      ; R21 := R14
197 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
198 [-]: GETGLOBAL R16 K1       ; R16 := mMenuSuitAvatar
199 [-]: SELF      R16 R16 K44  ; R17 := R16; R16 := R16[0x2e9b92e3]
200 [-]: CONST     R18 1        ; R18 := 1.000000
201 [-]: CALL      R16 3 1      ; R16(R17,R18)
202 [-]: LOADKB    R16 1 0      ; R16 := true
203 [-]: SETGLOBAL R16 K24      ; mMenuSuitAvatarVisible := R16
204 [-]: RETURN    R0 1         ; return 
205 [-]: GETGLOBAL R16 K4       ; R16 := 0x89326c93
206 [-]: SELF      R16 R16 K45  ; R17 := R16; R16 := R16[0x18d05d30]
207 [-]: CALL      R16 2 2      ; R16 := R16(R17)
208 [-]: TEST      R16 1        ; if R16 then PC := 214
209 [-]: JMP       214          ; PC := 214
210 [-]: GETUPVAL  R16 U3       ; R16 := U3
211 [-]: CALL      R16 1 2      ; R16 := R16()
212 [-]: TEST      R16 1        ; if R16 then PC := 218
213 [-]: JMP       218          ; PC := 218
214 [-]: GETGLOBAL R16 K21      ; R16 := _T
215 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["streaming_prevLevel"]
216 [-]: TEST      R16 0        ; if not R16 then PC := 223
217 [-]: JMP       223          ; PC := 223
218 [-]: GETGLOBAL R16 K21      ; R16 := _T
219 [-]: SETTABLE  R16 K22 K23  ; R16["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
220 [-]: LOADKB    R16 1 0      ; R16 := true
221 [-]: SETGLOBAL R16 K24      ; mMenuSuitAvatarVisible := R16
222 [-]: RETURN    R0 1         ; return 
223 [-]: GETUPVAL  R16 U1       ; R16 := U1
224 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
225 [-]: LOADKB    R18 0 0      ; R18 := false
226 [-]: CALL      R16 3 1      ; R16(R17,R18)
227 [-]: TEST      R1 0         ; if not R1 then PC := 268
228 [-]: JMP       268          ; PC := 268
229 [-]: GETGLOBAL R16 K21      ; R16 := _T
230 [-]: SETTABLE  R16 K22 K47  ; R16["MENU_SUIT_AVATAR_PROGRESS"] := 0.000000
231 [-]: GETGLOBAL R16 K48      ; R16 := 0x00046924
232 [-]: CALL      R16 1 2      ; R16 := R16()
233 [-]: GETUPVAL  R17 U0       ; R17 := U0
234 [-]: GETTABLE  R17 R17 K49  ; R17 := R17[0xf47b8ec3]
235 [-]: LOADKB    R18 1 0      ; R18 := true
236 [-]: CALL      R17 2 2      ; R17 := R17(R18)
237 [-]: TEST      R17 0        ; if not R17 then PC := 240
238 [-]: JMP       240          ; PC := 240
239 [-]: SETTABLE  R16 K50 K51  ; R16["heading"] := 180.000000
240 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
241 [-]: SELF      R17 R17 K52  ; R18 := R17; R17 := R17[0x89c6dbf7]
242 [-]: MOVE      R19 R16      ; R19 := R16
243 [-]: CALL      R17 3 1      ; R17(R18,R19)
244 [-]: GETGLOBAL R17 K8       ; R17 := 0x76ea806b
245 [-]: SELF      R17 R17 K38  ; R18 := R17; R17 := R17[0x8792aaab]
246 [-]: CALL      R17 2 2      ; R17 := R17(R18)
247 [-]: TEST      R17 0        ; if not R17 then PC := 256
248 [-]: JMP       256          ; PC := 256
249 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
250 [-]: SELF      R17 R17 K53  ; R18 := R17; R17 := R17[0x589ef1c1]
251 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
252 [-]: SELF      R19 R19 K54  ; R20 := R19; R19 := R19[0xd1586535]
253 [-]: CALL      R19 2 2      ; R19 := R19(R20)
254 [-]: MOVE      R20 R16      ; R20 := R16
255 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
256 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
257 [-]: SELF      R17 R17 K55  ; R18 := R17; R17 := R17[0xb2532845]
258 [-]: GETGLOBAL R19 K56      ; R19 := 0x0469f296
259 [-]: LOADK     R20 K57      ; R20 := "InstantKneel"
260 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
261 [-]: CALL      R17 0 1      ; R17(R18,...)
262 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
263 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
264 [-]: CALL      R17 2 2      ; R17 := R17(R18)
265 [-]: SELF      R17 R17 K59  ; R18 := R17; R17 := R17[0xc7154a44]
266 [-]: LOADKB    R19 0 0      ; R19 := false
267 [-]: CALL      R17 3 1      ; R17(R18,R19)
268 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
269 [-]: MOVE      R18 R2       ; R18 := R2
270 [-]: CALL      R17 2 2      ; R17 := R17(R18)
271 [-]: TEST      R17 0        ; if not R17 then PC := 301
272 [-]: JMP       301          ; PC := 301
273 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
274 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
275 [-]: CALL      R17 2 2      ; R17 := R17(R18)
276 [-]: SELF      R17 R17 K60  ; R18 := R17; R17 := R17[0x374b084a]
277 [-]: CALL      R17 2 1      ; R17(R18)
278 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
279 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
280 [-]: CALL      R17 2 2      ; R17 := R17(R18)
281 [-]: SELF      R17 R17 K61  ; R18 := R17; R17 := R17[0x1d2dfe4a]
282 [-]: GETGLOBAL R19 K31      ; R19 := 0x6c97a788
283 [-]: GETTABLE  R19 R19 K62  ; R19 := R19[0x17574a02]
284 [-]: CALL      R19 1 0      ; R19,... := R19()
285 [-]: CALL      R17 0 1      ; R17(R18,...)
286 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
287 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
288 [-]: CALL      R17 2 2      ; R17 := R17(R18)
289 [-]: SELF      R17 R17 K63  ; R18 := R17; R17 := R17[0x0c277ae1]
290 [-]: LOADKB    R19 0 0      ; R19 := false
291 [-]: CALL      R17 3 1      ; R17(R18,R19)
292 [-]: GETUPVAL  R17 U1       ; R17 := U1
293 [-]: GETGLOBAL R18 K1       ; R18 := mMenuSuitAvatar
294 [-]: LOADKB    R19 1 0      ; R19 := true
295 [-]: CALL      R17 3 1      ; R17(R18,R19)
296 [-]: LOADKB    R17 1 0      ; R17 := true
297 [-]: SETGLOBAL R17 K24      ; mMenuSuitAvatarVisible := R17
298 [-]: GETGLOBAL R17 K21      ; R17 := _T
299 [-]: SETTABLE  R17 K22 K23  ; R17["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
300 [-]: RETURN    R0 1         ; return 
301 [-]: GETGLOBAL R17 K21      ; R17 := _T
302 [-]: GETTABLE  R17 R17 K64  ; R17 := R17["syncingInventory"]
303 [-]: TEST      R17 0        ; if not R17 then PC := 351
304 [-]: JMP       351          ; PC := 351
305 [-]: SELF      R17 R3 K33   ; R18 := R3; R17 := R3[0x24d4e4c1]
306 [-]: MOVE      R19 R0       ; R19 := R0
307 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
308 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
309 [-]: MOVE      R19 R17      ; R19 := R17
310 [-]: CALL      R18 2 2      ; R18 := R18(R19)
311 [-]: TEST      R18 1        ; if R18 then PC := 350
312 [-]: JMP       350          ; PC := 350
313 [-]: GETGLOBAL R18 K21      ; R18 := _T
314 [-]: SELF      R19 R17 K65  ; R20 := R17; R19 := R17[0x958b6075]
315 [-]: CALL      R19 2 2      ; R19 := R19(R20)
316 [-]: SETTABLE  R18 K22 R19  ; R18["MENU_SUIT_AVATAR_PROGRESS"] := R19
317 [-]: SELF      R18 R17 K34  ; R19 := R17; R18 := R17[0xd2d3875a]
318 [-]: CALL      R18 2 2      ; R18 := R18(R19)
319 [-]: TEST      R18 0        ; if not R18 then PC := 350
320 [-]: JMP       350          ; PC := 350
321 [-]: SELF      R18 R3 K28   ; R19 := R3; R18 := R3[0x62c81b76]
322 [-]: CALL      R18 2 2      ; R18 := R18(R19)
323 [-]: GETGLOBAL R19 K21      ; R19 := _T
324 [-]: SETTABLE  R19 K22 K23  ; R19["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
325 [-]: LOADKB    R19 1 0      ; R19 := true
326 [-]: SETGLOBAL R19 K24      ; mMenuSuitAvatarVisible := R19
327 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
328 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0xde321e6f]
329 [-]: CALL      R19 2 2      ; R19 := R19(R20)
330 [-]: SELF      R19 R19 K60  ; R20 := R19; R19 := R19[0x374b084a]
331 [-]: CALL      R19 2 1      ; R19(R20)
332 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
333 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0xde321e6f]
334 [-]: CALL      R19 2 2      ; R19 := R19(R20)
335 [-]: SELF      R19 R19 K61  ; R20 := R19; R19 := R19[0x1d2dfe4a]
336 [-]: MOVE      R21 R18      ; R21 := R18
337 [-]: CALL      R19 3 1      ; R19(R20,R21)
338 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
339 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0xde321e6f]
340 [-]: CALL      R19 2 2      ; R19 := R19(R20)
341 [-]: SELF      R19 R19 K63  ; R20 := R19; R19 := R19[0x0c277ae1]
342 [-]: LOADKB    R21 0 0      ; R21 := false
343 [-]: CALL      R19 3 1      ; R19(R20,R21)
344 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
345 [-]: SELF      R19 R19 K66  ; R20 := R19; R19 := R19[0x5b89142c]
346 [-]: CALL      R19 2 2      ; R19 := R19(R20)
347 [-]: SELF      R19 R19 K67  ; R20 := R19; R19 := R19[0xe5586395]
348 [-]: MOVE      R21 R18      ; R21 := R18
349 [-]: CALL      R19 3 1      ; R19(R20,R21)
350 [-]: RETURN    R0 1         ; return 
351 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
352 [-]: MOVE      R20 R3       ; R20 := R3
353 [-]: CALL      R19 2 2      ; R19 := R19(R20)
354 [-]: TEST      R19 0        ; if not R19 then PC := 359
355 [-]: JMP       359          ; PC := 359
356 [-]: LOADKB    R19 0 0      ; R19 := false
357 [-]: SETGLOBAL R19 K24      ; mMenuSuitAvatarVisible := R19
358 [-]: RETURN    R0 1         ; return 
359 [-]: SELF      R19 R3 K33   ; R20 := R3; R19 := R3[0x24d4e4c1]
360 [-]: MOVE      R21 R0       ; R21 := R0
361 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
362 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
363 [-]: MOVE      R21 R19      ; R21 := R19
364 [-]: CALL      R20 2 2      ; R20 := R20(R21)
365 [-]: TEST      R20 1        ; if R20 then PC := 378
366 [-]: JMP       378          ; PC := 378
367 [-]: SELF      R20 R19 K34  ; R21 := R19; R20 := R19[0xd2d3875a]
368 [-]: CALL      R20 2 2      ; R20 := R20(R21)
369 [-]: TEST      R20 1        ; if R20 then PC := 378
370 [-]: JMP       378          ; PC := 378
371 [-]: GETGLOBAL R20 K21      ; R20 := _T
372 [-]: SELF      R21 R19 K65  ; R22 := R19; R21 := R19[0x958b6075]
373 [-]: CALL      R21 2 2      ; R21 := R21(R22)
374 [-]: SETTABLE  R20 K22 R21  ; R20["MENU_SUIT_AVATAR_PROGRESS"] := R21
375 [-]: LOADKB    R20 0 0      ; R20 := false
376 [-]: SETGLOBAL R20 K24      ; mMenuSuitAvatarVisible := R20
377 [-]: RETURN    R0 1         ; return 
378 [-]: GETGLOBAL R20 K35      ; R20 := 0x3d106989
379 [-]: LOADK     R21 K36      ; R21 := "LoadOut resource loader is done; showing avatar"
380 [-]: CALL      R20 2 1      ; R20(R21)
381 [-]: SELF      R20 R3 K37   ; R21 := R3; R20 := R3[0x121ec068]
382 [-]: CALL      R20 2 1      ; R20(R21)
383 [-]: GETGLOBAL R20 K8       ; R20 := 0x76ea806b
384 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0x8792aaab]
385 [-]: CALL      R20 2 2      ; R20 := R20(R21)
386 [-]: TEST      R20 0        ; if not R20 then PC := 410
387 [-]: JMP       410          ; PC := 410
388 [-]: SELF      R20 R3 K39   ; R21 := R3; R20 := R3[0x41f4ba99]
389 [-]: CALL      R20 2 1      ; R20(R21)
390 [-]: GETGLOBAL R20 K21      ; R20 := _T
391 [-]: GETTABLE  R20 R20 K68  ; R20 := R20["Jukebox"]
392 [-]: EQ        0 R20 K26    ; if R20 ~= nil then PC := 410
393 [-]: JMP       410          ; PC := 410
394 [-]: SELF      R20 R3 K69   ; R21 := R3; R20 := R3[0x4ae54c32]
395 [-]: GETUPVAL  R22 U0       ; R22 := U0
396 [-]: GETTABLE  R22 R22 K70  ; R22 := R22["SF_PERSONAL_QUARTERS"]
397 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
398 [-]: TEST      R20 0        ; if not R20 then PC := 410
399 [-]: JMP       410          ; PC := 410
400 [-]: GETGLOBAL R20 K2       ; R20 := 0xbe190284
401 [-]: SELF      R20 R20 K71  ; R21 := R20; R20 := R20[0x23ddc82a]
402 [-]: CALL      R20 2 2      ; R20 := R20(R21)
403 [-]: TEST      R20 1        ; if R20 then PC := 410
404 [-]: JMP       410          ; PC := 410
405 [-]: GETUPVAL  R20 U4       ; R20 := U4
406 [-]: GETTABLE  R20 R20 K72  ; R20 := R20[0x687ae094]
407 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
408 [-]: GETGLOBAL R22 K73      ; R22 := 0xae91e43b
409 [-]: CALL      R20 3 1      ; R20(R21,R22)
410 [-]: SELF      R20 R3 K28   ; R21 := R3; R20 := R3[0x62c81b76]
411 [-]: CALL      R20 2 2      ; R20 := R20(R21)
412 [-]: GETUPVAL  R21 U1       ; R21 := U1
413 [-]: GETGLOBAL R22 K1       ; R22 := mMenuSuitAvatar
414 [-]: LOADKB    R23 1 0      ; R23 := true
415 [-]: CALL      R21 3 1      ; R21(R22,R23)
416 [-]: LOADKB    R21 1 0      ; R21 := true
417 [-]: SETGLOBAL R21 K24      ; mMenuSuitAvatarVisible := R21
418 [-]: GETGLOBAL R21 K21      ; R21 := _T
419 [-]: SETTABLE  R21 K22 K23  ; R21["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
420 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
421 [-]: SELF      R21 R21 K58  ; R22 := R21; R21 := R21[0xde321e6f]
422 [-]: CALL      R21 2 2      ; R21 := R21(R22)
423 [-]: SELF      R21 R21 K60  ; R22 := R21; R21 := R21[0x374b084a]
424 [-]: CALL      R21 2 1      ; R21(R22)
425 [-]: GETGLOBAL R21 K2       ; R21 := 0xbe190284
426 [-]: SELF      R21 R21 K74  ; R22 := R21; R21 := R21[0x417eba72]
427 [-]: MOVE      R23 R20      ; R23 := R20
428 [-]: CALL      R21 3 1      ; R21(R22,R23)
429 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
430 [-]: SELF      R21 R21 K58  ; R22 := R21; R21 := R21[0xde321e6f]
431 [-]: CALL      R21 2 2      ; R21 := R21(R22)
432 [-]: SELF      R21 R21 K61  ; R22 := R21; R21 := R21[0x1d2dfe4a]
433 [-]: MOVE      R23 R20      ; R23 := R20
434 [-]: CALL      R21 3 1      ; R21(R22,R23)
435 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
436 [-]: SELF      R21 R21 K58  ; R22 := R21; R21 := R21[0xde321e6f]
437 [-]: CALL      R21 2 2      ; R21 := R21(R22)
438 [-]: SELF      R21 R21 K63  ; R22 := R21; R21 := R21[0x0c277ae1]
439 [-]: LOADKB    R23 0 0      ; R23 := false
440 [-]: CALL      R21 3 1      ; R21(R22,R23)
441 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
442 [-]: SELF      R21 R21 K66  ; R22 := R21; R21 := R21[0x5b89142c]
443 [-]: CALL      R21 2 2      ; R21 := R21(R22)
444 [-]: SELF      R21 R21 K67  ; R22 := R21; R21 := R21[0xe5586395]
445 [-]: MOVE      R23 R20      ; R23 := R20
446 [-]: CALL      R21 3 1      ; R21(R22,R23)
447 [-]: GETGLOBAL R21 K21      ; R21 := _T
448 [-]: GETGLOBAL R22 K1       ; R22 := mMenuSuitAvatar
449 [-]: SELF      R22 R22 K54  ; R23 := R22; R22 := R22[0xd1586535]
450 [-]: CALL      R22 2 2      ; R22 := R22(R23)
451 [-]: SETTABLE  R21 K75 R22  ; R21["menuSuitInitPos"] := R22
452 [-]: GETGLOBAL R21 K21      ; R21 := _T
453 [-]: GETGLOBAL R22 K1       ; R22 := mMenuSuitAvatar
454 [-]: SELF      R22 R22 K54  ; R23 := R22; R22 := R22[0xd1586535]
455 [-]: CALL      R22 2 2      ; R22 := R22(R23)
456 [-]: SETTABLE  R21 K76 R22  ; R21["menuSuitTargetPos"] := R22
457 [-]: LOADKB    R21 1 0      ; R21 := true
458 [-]: SETUPVAL  R21 U5       ; U82 := R5
459 [-]: GETGLOBAL R21 K4       ; R21 := 0x89326c93
460 [-]: SELF      R21 R21 K77  ; R22 := R21; R21 := R21[0xfb64e76c]
461 [-]: CALL      R21 2 2      ; R21 := R21(R22)
462 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
463 [-]: MOVE      R23 R21      ; R23 := R21
464 [-]: CALL      R22 2 2      ; R22 := R22(R23)
465 [-]: TEST      R22 1        ; if R22 then PC := 476
466 [-]: JMP       476          ; PC := 476
467 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
468 [-]: SELF      R23 R21 K78  ; R24 := R21; R23 := R21[0xa534c3ac]
469 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
470 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
471 [-]: TEST      R22 0        ; if not R22 then PC := 476
472 [-]: JMP       476          ; PC := 476
473 [-]: SELF      R22 R21 K79  ; R23 := R21; R22 := R21[0xe8272a78]
474 [-]: GETGLOBAL R24 K1       ; R24 := mMenuSuitAvatar
475 [-]: CALL      R22 3 1      ; R22(R23,R24)
476 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1802
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMenuSuitAvatarVisible
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1806
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1810
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mCheckingForIdentifiedOmegaMods := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: SETGLOBAL R0 K1        ; mOmegaWithPendingFingerprints := R0
  5 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  6 [-]: SETGLOBAL R0 K2        ; mNewIdentifiedOmegaMods := R0
  7 [-]: CONST     R0 1         ; R0 := 1.000000
  8 [-]: SETUPVAL  R0 U0        ; U82 := R0
  9 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1817
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := mFoundryNotification
  2 [-]: SETTABLE  R2 K1 K2     ; R2["Refresh"] := true
  3 [-]: GETGLOBAL R2 K3        ; R2 := _T
  4 [-]: SETTABLE  R2 K4 K5     ; R2["syncingInventory"] := false
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: CALL      R2 1 1       ; R2()
  7 [-]: LOADKB    R2 0 0       ; R2 := false
  8 [-]: SETGLOBAL R2 K6        ; mMenuSuitAvatarVisible := R2
  9 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K8        ; R3 := 0x25d99d89
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 47
 13 [-]: JMP       47           ; PC := 47
 14 [-]: GETGLOBAL R2 K8        ; R2 := 0x25d99d89
 15 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x21a1810f]
 16 [-]: GETUPVAL  R4 U1        ; R4 := U1
 17 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["NodeSymbol"]
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: TEST      R2 1         ; if R2 then PC := 47
 20 [-]: JMP       47           ; PC := 47
 21 [-]: GETUPVAL  R2 U2        ; R2 := U2
 22 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0x1b0c4985]
 23 [-]: CALL      R2 1 2       ; R2 := R2()
 24 [-]: TEST      R2 1         ; if R2 then PC := 47
 25 [-]: JMP       47           ; PC := 47
 26 [-]: GETUPVAL  R2 U2        ; R2 := U2
 27 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[0xe0628359]
 28 [-]: CALL      R2 1 2       ; R2 := R2()
 29 [-]: TEST      R2 0         ; if not R2 then PC := 47
 30 [-]: JMP       47           ; PC := 47
 31 [-]: GETGLOBAL R2 K8        ; R2 := 0x25d99d89
 32 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x25a6e75e]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x8e7c3b5e]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: GETGLOBAL R3 K15       ; R3 := 0x7ed0a956
 37 [-]: LOADK     R4 K16       ; R4 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 42
 42 [-]: LOADKB    R2 1 0       ; R2 := true
 43 [-]: TEST      R2 1         ; if R2 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: GETUPVAL  R3 U1        ; R3 := U1
 46 [-]: SETTABLE  R3 K17 K18   ; R3["InviteQueued"] := 5.000000
 47 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1831
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x76ea806b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x3f3ae64c]
  3 [-]: CONST     R4 0         ; R4 := 0.000000
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 27
  9 [-]: JMP       27           ; PC := 27
 10 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x22de02e1]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 0         ; if not R3 then PC := 27
 13 [-]: JMP       27           ; PC := 27
 14 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x80563238]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 17 [-]: MOVE      R5 R3        ; R5 := R3
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3[0x1730e16b]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 0         ; if not R4 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: GETGLOBAL R4 K6        ; R4 := _T
 26 [-]: SETTABLE  R4 K7 K8     ; R4["gQueueMailbox"] := true
 27 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1843
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: EQ        1 R1 K0      ; if R1 == "" then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xa5c556b9]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/"
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 14 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x42b04007]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADKB    R6 0 0       ; R6 := false
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: CONST     R5 0         ; R5 := 0.000000
 21 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1849
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: EQ        1 R1 K0      ; if R1 == "" then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xa5c556b9]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/"
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 14 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x42b04007]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADKB    R6 0 0       ; R6 := false
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: CONST     R5 0         ; R5 := 0.000000
 21 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1855
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1858
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x354c41af
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 44
  5 [-]: JMP       44           ; PC := 44
  6 [-]: GETGLOBAL R3 K2        ; R3 := _T
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["InfoPopup_Data"]
  8 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 44
  9 [-]: JMP       44           ; PC := 44
 10 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["UID"]
 11 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETTABLE  R4 R3 K6     ; R4 := R3["RawItem"]
 14 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETTABLE  R4 R3 K6     ; R4 := R3["RawItem"]
 17 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UID"]
 18 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["UID"]
 19 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 44
 20 [-]: JMP       44           ; PC := 44
 21 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
 22 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x1fd6abd0]
 23 [-]: GETGLOBAL R6 K1        ; R6 := 0x354c41af
 24 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 25 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 26 [-]: MOVE      R6 R4        ; R6 := R4
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: TEST      R5 1         ; if R5 then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: GETGLOBAL R5 K2        ; R5 := _T
 31 [-]: LOADK     R6 K3        ; R6 := "InfoPopup_Data"
 32 [-]: MOVE      R7 R1        ; R7 := R1
 33 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 34 [-]: SETTABLE  R5 R6 R0     ; R5[R6] := R0
 35 [-]: SELF      R5 R4 K9     ; R6 := R4; R5 := R4[0xe4162eed]
 36 [-]: LOADK     R7 K10       ; R7 := "OverrideItemInfoData"
 37 [-]: MOVE      R8 R1        ; R8 := R1
 38 [-]: LOADK     R9 K11       ; R9 := ","
 39 [-]: MOVE      R10 R2       ; R10 := R2
 40 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 41 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 42 [-]: LOADKB    R5 1 0       ; R5 := true
 43 [-]: RETURN    R5 2         ; return R5
 44 [-]: LOADKB    R5 0 0       ; R5 := false
 45 [-]: RETURN    R5 2         ; return R5
 46 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1875
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["TopMenuOpen"] := false
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0x0bad3ab5
  4 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 10 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5374b92e]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: TEST      R1 1         ; if R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 16 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CALL      R1 3 1       ; R1(R2,R3)
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 20 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
 21 [-]: GETGLOBAL R3 K11       ; R3 := 0x997568cf
 22 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 23 [-]: SETGLOBAL R1 K9        ; mToolTip := R1
 24 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 25 [-]: GETGLOBAL R2 K9        ; R2 := mToolTip
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 30 [-]: GETGLOBAL R2 K11       ; R2 := 0x997568cf
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 1         ; if R1 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 35 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 36 [-]: GETGLOBAL R3 K11       ; R3 := 0x997568cf
 37 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 38 [-]: SETGLOBAL R1 K9        ; mToolTip := R1
 39 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 40 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
 41 [-]: GETGLOBAL R3 K13       ; R3 := 0x354c41af
 42 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 43 [-]: SETGLOBAL R1 K12       ; mInfoPopup := R1
 44 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 45 [-]: GETGLOBAL R2 K12       ; R2 := mInfoPopup
 46 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 47 [-]: TEST      R1 0         ; if not R1 then PC := 59
 48 [-]: JMP       59           ; PC := 59
 49 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 50 [-]: GETGLOBAL R2 K13       ; R2 := 0x354c41af
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 1         ; if R1 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 55 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 56 [-]: GETGLOBAL R3 K13       ; R3 := 0x354c41af
 57 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 58 [-]: SETGLOBAL R1 K12       ; mInfoPopup := R1
 59 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 60 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
 61 [-]: GETGLOBAL R3 K15       ; R3 := 0xfc29c5ee
 62 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 63 [-]: SETGLOBAL R1 K14       ; mContextMenu := R1
 64 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 65 [-]: GETGLOBAL R2 K14       ; R2 := mContextMenu
 66 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 67 [-]: TEST      R1 0         ; if not R1 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 70 [-]: GETGLOBAL R2 K15       ; R2 := 0xfc29c5ee
 71 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 72 [-]: TEST      R1 1         ; if R1 then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 75 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 76 [-]: GETGLOBAL R3 K15       ; R3 := 0xfc29c5ee
 77 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 78 [-]: SETGLOBAL R1 K14       ; mContextMenu := R1
 79 [-]: GETGLOBAL R1 K16       ; R1 := mCurrentMode
 80 [-]: GETUPVAL  R2 U0        ; R2 := U0
 81 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 82 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 111
 83 [-]: JMP       111          ; PC := 111
 84 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 85 [-]: GETGLOBAL R2 K18       ; R2 := 0x2c15a601
 86 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 87 [-]: TEST      R1 1         ; if R1 then PC := 99
 88 [-]: JMP       99           ; PC := 99
 89 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 90 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5374b92e]
 91 [-]: GETGLOBAL R3 K18       ; R3 := 0x2c15a601
 92 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 93 [-]: TEST      R1 1         ; if R1 then PC := 99
 94 [-]: JMP       99           ; PC := 99
 95 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 96 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 97 [-]: GETGLOBAL R3 K18       ; R3 := 0x2c15a601
 98 [-]: CALL      R1 3 1       ; R1(R2,R3)
 99 [-]: GETGLOBAL R1 K19       ; R1 := 0xbe190284
100 [-]: SELF      R1 R1 K20    ; R2 := R1; R1 := R1[0x23ddc82a]
101 [-]: CALL      R1 2 2       ; R1 := R1(R2)
102 [-]: TEST      R1 1         ; if R1 then PC := 111
103 [-]: JMP       111          ; PC := 111
104 [-]: LOADK     R1 K22       ; R1 := "Default"
105 [-]: SETGLOBAL R1 K21       ; queuedMovie := R1
106 [-]: GETUPVAL  R1 U1        ; R1 := U1
107 [-]: GETGLOBAL R2 K21       ; R2 := queuedMovie
108 [-]: CALL      R1 2 1       ; R1(R2)
109 [-]: GETUPVAL  R1 U2        ; R1 := U2
110 [-]: CALL      R1 1 1       ; R1()
111 [-]: GETGLOBAL R1 K23       ; R1 := 0x34291f5c
112 [-]: GETTABLE  R1 R1 K24    ; R1 := R1[0x056bfe8b]
113 [-]: CALL      R1 1 2       ; R1 := R1()
114 [-]: TEST      R1 1         ; if R1 then PC := 136
115 [-]: JMP       136          ; PC := 136
116 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
117 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
118 [-]: GETGLOBAL R3 K26       ; R3 := 0x16a51607
119 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
120 [-]: SETGLOBAL R1 K25       ; mIMEOverlay := R1
121 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
122 [-]: GETGLOBAL R2 K25       ; R2 := mIMEOverlay
123 [-]: CALL      R1 2 2       ; R1 := R1(R2)
124 [-]: TEST      R1 0         ; if not R1 then PC := 136
125 [-]: JMP       136          ; PC := 136
126 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
127 [-]: GETGLOBAL R2 K26       ; R2 := 0x16a51607
128 [-]: CALL      R1 2 2       ; R1 := R1(R2)
129 [-]: TEST      R1 1         ; if R1 then PC := 136
130 [-]: JMP       136          ; PC := 136
131 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
132 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
133 [-]: GETGLOBAL R3 K26       ; R3 := 0x16a51607
134 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
135 [-]: SETGLOBAL R1 K25       ; mIMEOverlay := R1
136 [-]: LOADKB    R1 0 0       ; R1 := false
137 [-]: SETGLOBAL R1 K27       ; mAdditionalScreenCreated := R1
138 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1922
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x22efbc9d
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x9ba7909f
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5374b92e]
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x22efbc9d
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 26
 11 [-]: JMP       26           ; PC := 26
 12 [-]: GETGLOBAL R0 K4        ; R0 := 0x0032441c
 13 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["StalkerMode"]
 14 [-]: TEST      R0 1         ; if R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R0 K4        ; R0 := 0x0032441c
 17 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["LoadingTutorial"]
 18 [-]: TEST      R0 1         ; if R0 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R0 K7        ; R0 := _T
 21 [-]: GETGLOBAL R1 K9        ; R1 := 0xae91e43b
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x1fd6abd0]
 23 [-]: GETGLOBAL R3 K1        ; R3 := 0x22efbc9d
 24 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 25 [-]: SETTABLE  R0 K8 R1     ; R0["AcceptInvitePanel"] := R1
 26 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 27 [-]: GETGLOBAL R1 K11       ; R1 := 0x45c63724
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 1         ; if R0 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: GETGLOBAL R0 K2        ; R0 := 0x9ba7909f
 32 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5374b92e]
 33 [-]: GETGLOBAL R2 K11       ; R2 := 0x45c63724
 34 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 35 [-]: TEST      R0 1         ; if R0 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: GETGLOBAL R0 K9        ; R0 := 0xae91e43b
 38 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x1fd6abd0]
 39 [-]: GETGLOBAL R2 K11       ; R2 := 0x45c63724
 40 [-]: CALL      R0 3 1       ; R0(R1,R2)
 41 [-]: GETGLOBAL R0 K12       ; R0 := 0xdbf8fb8c
 42 [-]: GETGLOBAL R1 K2        ; R1 := 0x9ba7909f
 43 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0xbcfb64ab]
 44 [-]: MOVE      R3 R0        ; R3 := R0
 45 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 46 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 47 [-]: MOVE      R3 R1        ; R3 := R1
 48 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 49 [-]: TEST      R2 0         ; if not R2 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETGLOBAL R2 K7        ; R2 := _T
 52 [-]: GETGLOBAL R3 K2        ; R3 := 0x9ba7909f
 53 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0x6dd7aa66]
 54 [-]: MOVE      R5 R0        ; R5 := R0
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: SETTABLE  R2 K14 R3    ; R2["SquadOverlay"] := R3
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: CALL      R2 1 1       ; R2()
 59 [-]: GETGLOBAL R2 K16       ; R2 := 0x34291f5c
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2[0xe6b41adb]
 61 [-]: CALL      R2 1 2       ; R2 := R2()
 62 [-]: TEST      R2 0         ; if not R2 then PC := 95
 63 [-]: JMP       95           ; PC := 95
 64 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 65 [-]: GETGLOBAL R3 K18       ; R3 := 0x3ace7bd2
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: TEST      R2 1         ; if R2 then PC := 95
 68 [-]: JMP       95           ; PC := 95
 69 [-]: GETGLOBAL R2 K2        ; R2 := 0x9ba7909f
 70 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xbf9494fc]
 71 [-]: LOADK     R4 K20       ; R4 := "Flash.ShowTouchControls"
 72 [-]: LOADKB    R5 1 0       ; R5 := true
 73 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 74 [-]: TEST      R2 0         ; if not R2 then PC := 95
 75 [-]: JMP       95           ; PC := 95
 76 [-]: GETGLOBAL R2 K2        ; R2 := 0x9ba7909f
 77 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0xbcfb64ab]
 78 [-]: GETGLOBAL R4 K18       ; R4 := 0x3ace7bd2
 79 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 80 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 81 [-]: MOVE      R4 R2        ; R4 := R2
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: TEST      R3 0         ; if not R3 then PC := 95
 84 [-]: JMP       95           ; PC := 95
 85 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 86 [-]: GETGLOBAL R4 K18       ; R4 := 0x3ace7bd2
 87 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 88 [-]: TEST      R3 1         ; if R3 then PC := 95
 89 [-]: JMP       95           ; PC := 95
 90 [-]: GETGLOBAL R3 K2        ; R3 := 0x9ba7909f
 91 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3[0xcfba257f]
 92 [-]: GETGLOBAL R5 K18       ; R5 := 0x3ace7bd2
 93 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 94 [-]: MOVE      R2 R3        ; R2 := R3
 95 [-]: LOADKB    R3 1 0       ; R3 := true
 96 [-]: SETGLOBAL R3 K22       ; mAdditionalScreenCreated := R3
 97 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1950
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == "Lobby" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 4
  4 [-]: LOADKB    R1 1 0       ; R1 := true
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1954
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xa9882367]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K1     ; R4 := R4[0x06d055f9]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0xcf1fcba4]
  8 [-]: CALL      R5 1 2       ; R5 := R5()
  9 [-]: GETGLOBAL R6 K3        ; R6 := 0x1211d00f
 10 [-]: LOADNIL   R7 R7        ; R7 := nil
 11 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 12 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 65
 17 [-]: JMP       65           ; PC := 65
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x89326c93
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xded7d5cd]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 22 [-]: MOVE      R5 R3        ; R5 := R3
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: TEST      R4 1         ; if R4 then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: LEN       R4 R3        ; R4 := # R3
 27 [-]: EQ        0 R4 K7      ; if R4 ~= 0.000000 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: CONST     R4 1         ; R4 := 1.000000
 31 [-]: EQ        1 R1 K8      ; if R1 == nil then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETGLOBAL R5 K9        ; R5 := 0x03f57322
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: MOVE      R4 R5        ; R4 := R5
 37 [-]: GETTABLE  R5 R3 K10    ; R5 := R3[1.000000]
 38 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 39 [-]: MOVE      R7 R5        ; R7 := R5
 40 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 41 [-]: TEST      R6 1         ; if R6 then PC := 60
 42 [-]: JMP       60           ; PC := 60
 43 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 44 [-]: SELF      R7 R5 K11    ; R8 := R5; R7 := R5[0x0b4bcfb6]
 45 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 46 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 47 [-]: TEST      R6 1         ; if R6 then PC := 60
 48 [-]: JMP       60           ; PC := 60
 49 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0x0b4bcfb6]
 50 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 51 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0xcbeafe74]
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: TEST      R6 1         ; if R6 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0x0b4bcfb6]
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x68f07b6a]
 58 [-]: MOVE      R8 R4        ; R8 := R4
 59 [-]: CALL      R6 3 1       ; R6(R7,R8)
 60 [-]: SELF      R6 R2 K14    ; R7 := R2; R6 := R2[0x8eb2112d]
 61 [-]: LOADK     R8 K15       ; R8 := "Activate"
 62 [-]: CALL      R6 3 1       ; R6(R7,R8)
 63 [-]: GETGLOBAL R6 K16       ; R6 := _T
 64 [-]: SETTABLE  R6 K17 R0    ; R6["gActiveCameraSpot"] := R0
 65 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1977
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1981
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xded7d5cd]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: LEN       R2 R1        ; R2 := # R1
 16 [-]: EQ        0 R2 K3      ; if R2 ~= 0.000000 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x3d106989
 19 [-]: LOADK     R3 K5        ; R3 := "_ClearCurrentCameraSpot - no local player"
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: EQ        0 R0 K6      ; if R0 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R0 K7        ; R0 := 0.010000
 25 [-]: GETTABLE  R2 R1 K8     ; R2 := R1[1.000000]
 26 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 56
 30 [-]: JMP       56           ; PC := 56
 31 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 32 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0x0b4bcfb6]
 33 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 34 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 35 [-]: TEST      R3 1         ; if R3 then PC := 56
 36 [-]: JMP       56           ; PC := 56
 37 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0b4bcfb6]
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xcbeafe74]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: TEST      R3 1         ; if R3 then PC := 56
 42 [-]: JMP       56           ; PC := 56
 43 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0b4bcfb6]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x68f07b6a]
 46 [-]: CONST     R5 1         ; R5 := 1.000000
 47 [-]: CALL      R3 3 1       ; R3(R4,R5)
 48 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0b4bcfb6]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x14c7f7dd]
 51 [-]: LOADNIL   R5 R5        ; R5 := nil
 52 [-]: GETGLOBAL R6 K13       ; R6 := 0x03f57322
 53 [-]: MOVE      R7 R0        ; R7 := R0
 54 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 55 [-]: CALL      R3 0 1       ; R3(R4,...)
 56 [-]: GETGLOBAL R3 K14       ; R3 := _T
 57 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 58 [-]: EQ        1 R3 K16     ; if R3 == "LoginNoSuit" then PC := 80
 59 [-]: JMP       80           ; PC := 80
 60 [-]: GETGLOBAL R3 K14       ; R3 := _T
 61 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 62 [-]: EQ        1 R3 K17     ; if R3 == "Login" then PC := 80
 63 [-]: JMP       80           ; PC := 80
 64 [-]: GETGLOBAL R3 K14       ; R3 := _T
 65 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 66 [-]: EQ        1 R3 K18     ; if R3 == "OldLogin" then PC := 80
 67 [-]: JMP       80           ; PC := 80
 68 [-]: GETGLOBAL R3 K14       ; R3 := _T
 69 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 70 [-]: EQ        1 R3 K19     ; if R3 == "Syndicate" then PC := 80
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETGLOBAL R3 K14       ; R3 := _T
 73 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 74 [-]: EQ        1 R3 K20     ; if R3 == "LoginCamp" then PC := 80
 75 [-]: JMP       80           ; PC := 80
 76 [-]: GETGLOBAL R3 K14       ; R3 := _T
 77 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 78 [-]: EQ        0 R3 K21     ; if R3 ~= "LoginCampPreview" then PC := 84
 79 [-]: JMP       84           ; PC := 84
 80 [-]: GETGLOBAL R3 K22       ; R3 := 0xbe190284
 81 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0xc02f2cb8]
 82 [-]: LOADKB    R5 0 0       ; R5 := false
 83 [-]: CALL      R3 3 1       ; R3(R4,R5)
 84 [-]: GETGLOBAL R3 K14       ; R3 := _T
 85 [-]: SETTABLE  R3 K15 K6    ; R3["gActiveCameraSpot"] := nil
 86 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 2010
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 2014
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: SETTABLE  R4 K0 K1     ; R4["Timer"] := 0.000000
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: SETTABLE  R4 K2 R5     ; R4["InTime"] := R5
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: SETTABLE  R4 K4 R5     ; R4["OutTime"] := R5
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
 15 [-]: MOVE      R6 R2        ; R6 := R2
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: SETTABLE  R4 K5 R5     ; R4["FinalVal"] := R5
 18 [-]: GETUPVAL  R4 U0        ; R4 := U0
 19 [-]: SETTABLE  R4 K6 R3     ; R4["FullCallback"] := R3
 20 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 2022
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
  6 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2026
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: LOADK     R2 K1        ; R2 := "Background.lua - _DoLogoff()"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K3        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["BackgroundMovie"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
 11 [-]: LOADK     R2 K5        ; R2 := "Queued"
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: LOADKB    R1 1 0       ; R1 := true
 14 [-]: SETGLOBAL R1 K6        ; mQueuedLogoff := R1
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R1 K7        ; R1 := 0x34291f5c
 17 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0x056bfe8b]
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: TEST      R1 1         ; if R1 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R1 K9        ; R1 := 0x76ea806b
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x524772b5]
 23 [-]: CONST     R3 0         ; R3 := 0.000000
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: GETGLOBAL R1 K3        ; R1 := _T
 26 [-]: SETTABLE  R1 K11 K12   ; R1["PreviousLoggedInAccountId"] := nil
 27 [-]: GETGLOBAL R1 K9        ; R1 := 0x76ea806b
 28 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x3f3ae64c]
 29 [-]: CONST     R3 0         ; R3 := 0.000000
 30 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 31 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 83
 35 [-]: JMP       83           ; PC := 83
 36 [-]: GETGLOBAL R2 K3        ; R2 := _T
 37 [-]: SELF      R3 R1 K14    ; R4 := R1; R3 := R1[0xcac617c9]
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: SETTABLE  R2 K11 R3    ; R2["PreviousLoggedInAccountId"] := R3
 40 [-]: SELF      R2 R1 K15    ; R3 := R1; R2 := R1[0x80563238]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: SELF      R3 R1 K16    ; R4 := R1; R3 := R1[0x40e9c32b]
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 45 [-]: MOVE      R5 R2        ; R5 := R2
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 67
 48 [-]: JMP       67           ; PC := 67
 49 [-]: GETGLOBAL R4 K17       ; R4 := 0x0032441c
 50 [-]: SELF      R5 R3 K19    ; R6 := R3; R5 := R3[0xd25ad6f2]
 51 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 52 [-]: SETTABLE  R4 K18 R5    ; R4["PreviousLoggedInStreamerMode"] := R5
 53 [-]: TEST      R0 1         ; if R0 then PC := 67
 54 [-]: JMP       67           ; PC := 67
 55 [-]: SELF      R4 R2 K20    ; R5 := R2; R4 := R2[0x8e4b0c74]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: SELF      R5 R2 K21    ; R6 := R2; R5 := R2[0x68838443]
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: GETGLOBAL R5 K22       ; R5 := 0xa94df70b
 62 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0x2b0141b8]
 63 [-]: GETGLOBAL R7 K24       ; R7 := 0x7ed0a956
 64 [-]: LOADK     R8 K25       ; R8 := "/Lotus/Levels/Proc/PlayerShip"
 65 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 66 [-]: CALL      R5 0 1       ; R5(R6,...)
 67 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 68 [-]: MOVE      R6 R2        ; R6 := R2
 69 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 70 [-]: TEST      R5 1         ; if R5 then PC := 83
 71 [-]: JMP       83           ; PC := 83
 72 [-]: GETUPVAL  R5 U0        ; R5 := U0
 73 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mWorldStateCallbackRegistered"]
 74 [-]: TEST      R5 0         ; if not R5 then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: SELF      R5 R2 K27    ; R6 := R2; R5 := R2[0xa552fd85]
 77 [-]: LOADK     R7 K28       ; R7 := "OnSyncWorldState"
 78 [-]: GETUPVAL  R8 U0        ; R8 := U0
 79 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["WORLD_STATE_CALLBACK_IDENTIFIER"]
 80 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 81 [-]: SELF      R5 R2 K30    ; R6 := R2; R5 := R2[0x75fa6bbb]
 82 [-]: CALL      R5 2 1       ; R5(R6)
 83 [-]: GETUPVAL  R5 U0        ; R5 := U0
 84 [-]: SETTABLE  R5 K26 K31   ; R5["mWorldStateCallbackRegistered"] := false
 85 [-]: GETGLOBAL R5 K3        ; R5 := _T
 86 [-]: GETTABLE  R5 R5 K32    ; R5 := R5[0x8e6a7b4e]
 87 [-]: LOADK     R6 K33       ; R6 := "MainMenu"
 88 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 89 [-]: TEST      R5 1         ; if R5 then PC := 134
 90 [-]: JMP       134          ; PC := 134
 91 [-]: GETGLOBAL R6 K0        ; R6 := 0x3d106989
 92 [-]: LOADK     R7 K34       ; R7 := "Main menu not open"
 93 [-]: CALL      R6 2 1       ; R6(R7)
 94 [-]: GETGLOBAL R6 K35       ; R6 := screenStack
 95 [-]: LEN       R6 R6        ; R6 := # R6
 96 [-]: CONST     R7 1         ; R7 := 1.000000
 97 [-]: CONST     R8 -1        ; R8 := -1.000000
 98 [-]: FORPREP   R6 123       ; R6 -= R8; PC := 123
 99 [-]: GETGLOBAL R10 K2       ; R10 := 0x7b998233
100 [-]: GETGLOBAL R11 K36      ; R11 := movies
101 [-]: GETGLOBAL R12 K35      ; R12 := screenStack
102 [-]: GETTABLE  R12 R12 R9   ; R12 := R12[R9]
103 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
104 [-]: CALL      R10 2 2      ; R10 := R10(R11)
105 [-]: TEST      R10 1        ; if R10 then PC := 123
106 [-]: JMP       123          ; PC := 123
107 [-]: GETGLOBAL R10 K37      ; R10 := 0x9ba7909f
108 [-]: SELF      R10 R10 K38  ; R11 := R10; R10 := R10[0xbcfb64ab]
109 [-]: GETGLOBAL R12 K36      ; R12 := movies
110 [-]: GETGLOBAL R13 K35      ; R13 := screenStack
111 [-]: GETTABLE  R13 R13 R9   ; R13 := R13[R9]
112 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
113 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
114 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
115 [-]: MOVE      R12 R10      ; R12 := R10
116 [-]: CALL      R11 2 2      ; R11 := R11(R12)
117 [-]: TEST      R11 1        ; if R11 then PC := 123
118 [-]: JMP       123          ; PC := 123
119 [-]: SELF      R11 R10 K39  ; R12 := R10; R11 := R10[0xe4162eed]
120 [-]: LOADK     R13 K40      ; R13 := "TransitionOut"
121 [-]: LOADK     R14 K41      ; R14 := ""
122 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
123 [-]: FORLOOP   R6 99        ; R6 += R8; if R6 <= R7 then begin PC := 99; R9 := R6 end
124 [-]: GETGLOBAL R11 K9       ; R11 := 0x76ea806b
125 [-]: SELF      R11 R11 K42  ; R12 := R11; R11 := R11[0x63e78018]
126 [-]: CALL      R11 2 1      ; R11(R12)
127 [-]: TEST      R0 0         ; if not R0 then PC := 192
128 [-]: JMP       192          ; PC := 192
129 [-]: GETGLOBAL R11 K9       ; R11 := 0x76ea806b
130 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0x44ef46af]
131 [-]: LOADKB    R13 0 0      ; R13 := false
132 [-]: CALL      R11 3 1      ; R11(R12,R13)
133 [-]: JMP       192          ; PC := 192
134 [-]: GETGLOBAL R11 K35      ; R11 := screenStack
135 [-]: LEN       R11 R11      ; R11 := # R11
136 [-]: CONST     R12 1        ; R12 := 1.000000
137 [-]: CONST     R13 -1       ; R13 := -1.000000
138 [-]: FORPREP   R11 191      ; R11 -= R13; PC := 191
139 [-]: GETGLOBAL R15 K37      ; R15 := 0x9ba7909f
140 [-]: SELF      R15 R15 K38  ; R16 := R15; R15 := R15[0xbcfb64ab]
141 [-]: GETGLOBAL R17 K36      ; R17 := movies
142 [-]: GETGLOBAL R18 K35      ; R18 := screenStack
143 [-]: GETTABLE  R18 R18 R14  ; R18 := R18[R14]
144 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
145 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
146 [-]: EQ        1 R15 K12    ; if R15 == nil then PC := 191
147 [-]: JMP       191          ; PC := 191
148 [-]: GETGLOBAL R16 K35      ; R16 := screenStack
149 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
150 [-]: EQ        1 R16 K44    ; if R16 == "Default" then PC := 156
151 [-]: JMP       156          ; PC := 156
152 [-]: GETGLOBAL R16 K35      ; R16 := screenStack
153 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
154 [-]: EQ        0 R16 K33    ; if R16 ~= "MainMenu" then PC := 170
155 [-]: JMP       170          ; PC := 170
156 [-]: GETGLOBAL R16 K9       ; R16 := 0x76ea806b
157 [-]: SELF      R16 R16 K42  ; R17 := R16; R16 := R16[0x63e78018]
158 [-]: CALL      R16 2 1      ; R16(R17)
159 [-]: TEST      R0 0         ; if not R0 then PC := 165
160 [-]: JMP       165          ; PC := 165
161 [-]: GETGLOBAL R16 K9       ; R16 := 0x76ea806b
162 [-]: SELF      R16 R16 K43  ; R17 := R16; R16 := R16[0x44ef46af]
163 [-]: LOADKB    R18 0 0      ; R18 := false
164 [-]: CALL      R16 3 1      ; R16(R17,R18)
165 [-]: SELF      R16 R15 K39  ; R17 := R15; R16 := R15[0xe4162eed]
166 [-]: LOADK     R18 K45      ; R18 := "LogOut"
167 [-]: LOADK     R19 K41      ; R19 := ""
168 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
169 [-]: JMP       191          ; PC := 191
170 [-]: GETGLOBAL R16 K7       ; R16 := 0x34291f5c
171 [-]: GETTABLE  R16 R16 K46  ; R16 := R16[0xff935e74]
172 [-]: CALL      R16 1 2      ; R16 := R16()
173 [-]: TEST      R16 0        ; if not R16 then PC := 184
174 [-]: JMP       184          ; PC := 184
175 [-]: GETGLOBAL R16 K35      ; R16 := screenStack
176 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
177 [-]: EQ        0 R16 K47    ; if R16 ~= "Menu" then PC := 184
178 [-]: JMP       184          ; PC := 184
179 [-]: SELF      R16 R15 K39  ; R17 := R15; R16 := R15[0xe4162eed]
180 [-]: LOADK     R18 K48      ; R18 := "HideForBigPic"
181 [-]: LOADK     R19 K41      ; R19 := ""
182 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
183 [-]: JMP       191          ; PC := 191
184 [-]: GETGLOBAL R16 K49      ; R16 := 0xae91e43b
185 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 191
186 [-]: JMP       191          ; PC := 191
187 [-]: SELF      R16 R15 K39  ; R17 := R15; R16 := R15[0xe4162eed]
188 [-]: LOADK     R18 K40      ; R18 := "TransitionOut"
189 [-]: LOADK     R19 K41      ; R19 := ""
190 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
191 [-]: FORLOOP   R11 139      ; R11 += R13; if R11 <= R12 then begin PC := 139; R14 := R11 end
192 [-]: GETGLOBAL R16 K37      ; R16 := 0x9ba7909f
193 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0xbcfb64ab]
194 [-]: GETGLOBAL R18 K50      ; R18 := 0x3255839e
195 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
196 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
197 [-]: MOVE      R18 R16      ; R18 := R16
198 [-]: CALL      R17 2 2      ; R17 := R17(R18)
199 [-]: TEST      R17 1        ; if R17 then PC := 203
200 [-]: JMP       203          ; PC := 203
201 [-]: SELF      R17 R16 K51  ; R18 := R16; R17 := R16[0x32302b4a]
202 [-]: CALL      R17 2 1      ; R17(R18)
203 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
204 [-]: GETGLOBAL R18 K3       ; R18 := _T
205 [-]: GETTABLE  R18 R18 K52  ; R18 := R18["SquadOverlay"]
206 [-]: CALL      R17 2 2      ; R17 := R17(R18)
207 [-]: TEST      R17 1        ; if R17 then PC := 213
208 [-]: JMP       213          ; PC := 213
209 [-]: GETGLOBAL R17 K3       ; R17 := _T
210 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["SquadOverlay"]
211 [-]: SELF      R17 R17 K51  ; R18 := R17; R17 := R17[0x32302b4a]
212 [-]: CALL      R17 2 1      ; R17(R18)
213 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
214 [-]: GETGLOBAL R18 K53      ; R18 := mChildMovie
215 [-]: CALL      R17 2 2      ; R17 := R17(R18)
216 [-]: TEST      R17 1        ; if R17 then PC := 221
217 [-]: JMP       221          ; PC := 221
218 [-]: GETGLOBAL R17 K53      ; R17 := mChildMovie
219 [-]: SELF      R17 R17 K51  ; R18 := R17; R17 := R17[0x32302b4a]
220 [-]: CALL      R17 2 1      ; R17(R18)
221 [-]: LOADNIL   R17 R17      ; R17 := nil
222 [-]: SETGLOBAL R17 K53      ; mChildMovie := R17
223 [-]: LOADKB    R17 0 0      ; R17 := false
224 [-]: SETGLOBAL R17 K6       ; mQueuedLogoff := R17
225 [-]: GETGLOBAL R17 K17      ; R17 := 0x0032441c
226 [-]: SETTABLE  R17 K54 K12  ; R17["LoginDone"] := nil
227 [-]: LOADK     R17 K44      ; R17 := "Default"
228 [-]: SETGLOBAL R17 K55      ; queuedMovie := R17
229 [-]: NEWTABLE  R17 1 0      ; R17 := {}
230 [-]: LOADK     R18 K44      ; R18 := "Default"
231 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
232 [-]: SETGLOBAL R17 K35      ; screenStack := R17
233 [-]: NEWTABLE  R17 1 0      ; R17 := {}
234 [-]: LOADK     R18 K56      ; R18 := "loadoutInProgress"
235 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
236 [-]: GETGLOBAL R18 K57      ; R18 := 0xc8802016
237 [-]: MOVE      R19 R17      ; R19 := R17
238 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
239 [-]: JMP       242          ; PC := 242
240 [-]: GETGLOBAL R23 K3       ; R23 := _T
241 [-]: SETTABLE  R23 R22 K12  ; R23[R22] := nil
242 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 240; R20 := R21 end
243 [-]: JMP       240          ; PC := 240
244 [-]: GETGLOBAL R23 K7       ; R23 := 0x34291f5c
245 [-]: GETTABLE  R23 R23 K58  ; R23 := R23[0x9ad21ae9]
246 [-]: CALL      R23 1 2      ; R23 := R23()
247 [-]: TEST      R23 0        ; if not R23 then PC := 259
248 [-]: JMP       259          ; PC := 259
249 [-]: GETGLOBAL R23 K59      ; R23 := 0x83f4e77c
250 [-]: SELF      R23 R23 K60  ; R24 := R23; R23 := R23[0x7d63f19c]
251 [-]: CALL      R23 2 2      ; R23 := R23(R24)
252 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
253 [-]: MOVE      R25 R23      ; R25 := R23
254 [-]: CALL      R24 2 2      ; R24 := R24(R25)
255 [-]: TEST      R24 1        ; if R24 then PC := 259
256 [-]: JMP       259          ; PC := 259
257 [-]: SELF      R24 R23 K61  ; R25 := R23; R24 := R23[0x68a5045a]
258 [-]: CALL      R24 2 1      ; R24(R25)
259 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
260 [-]: GETGLOBAL R25 K62      ; R25 := 0xbe190284
261 [-]: CALL      R24 2 2      ; R24 := R24(R25)
262 [-]: TEST      R24 1        ; if R24 then PC := 268
263 [-]: JMP       268          ; PC := 268
264 [-]: GETGLOBAL R24 K62      ; R24 := 0xbe190284
265 [-]: SELF      R24 R24 K63  ; R25 := R24; R24 := R24[0x39c667a9]
266 [-]: LOADKB    R26 1 0      ; R26 := true
267 [-]: CALL      R24 3 1      ; R24(R25,R26)
268 [-]: GETGLOBAL R24 K7       ; R24 := 0x34291f5c
269 [-]: GETTABLE  R24 R24 K64  ; R24 := R24[0x8ee24660]
270 [-]: LOADKB    R25 1 0      ; R25 := true
271 [-]: CALL      R24 2 1      ; R24(R25)
272 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2143
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x03f57322
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: MOVE      R0 R2        ; R0 := R2
  5 [-]: EQ        1 R0 K1      ; if R0 == 1.000000 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: EQ        0 R0 K2      ; if R0 ~= 2.000000 then PC := 36
  8 [-]: JMP       36           ; PC := 36
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K4        ; R3 := mBlockingTaskPopup
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 50
 13 [-]: JMP       50           ; PC := 50
 14 [-]: GETGLOBAL R2 K5        ; R2 := 0x34291f5c
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0xe27b35bb]
 16 [-]: CALL      R2 1 2       ; R2 := R2()
 17 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: SETTABLE  R2 K8 K9     ; R2["locString"] := "/Lotus/Language/Menu/NavBar_QuickMatchPleaseWait"
 20 [-]: JMP       22           ; PC := 22
 21 [-]: SETTABLE  R2 K8 R1     ; R2[0x0000005c] := R1
 22 [-]: GETGLOBAL R3 K10       ; R3 := _T
 23 [-]: EQ        1 R0 K2      ; if R0 == 2.000000 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 26
 26 [-]: LOADKB    R4 1 0       ; R4 := true
 27 [-]: SETTABLE  R3 K11 R4    ; R3["LiteModeBlocking"] := R4
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0xe99b84e7]
 30 [-]: MOVE      R4 R2        ; R4 := R2
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: SETGLOBAL R3 K4        ; mBlockingTaskPopup := R3
 33 [-]: GETGLOBAL R3 K10       ; R3 := _T
 34 [-]: SETTABLE  R3 K11 K7    ; R3["LiteModeBlocking"] := nil
 35 [-]: JMP       50           ; PC := 50
 36 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 37 [-]: GETGLOBAL R4 K4        ; R4 := mBlockingTaskPopup
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: TEST      R3 1         ; if R3 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETGLOBAL R3 K4        ; R3 := mBlockingTaskPopup
 42 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x32302b4a]
 43 [-]: CALL      R3 2 1       ; R3(R4)
 44 [-]: LOADNIL   R3 R3        ; R3 := nil
 45 [-]: SETGLOBAL R3 K4        ; mBlockingTaskPopup := R3
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETGLOBAL R3 K14       ; R3 := 0x3d106989
 48 [-]: LOADK     R4 K15       ; R4 := "Tried to close non-existent blocking message"
 49 [-]: CALL      R3 2 1       ; R3(R4)
 50 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2167
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2171
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2175
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mAbortingQuickMatch
  2 [-]: TEST      R0 1         ; if R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: SETGLOBAL R0 K1        ; mUnblockWhenAsyncDone := R0
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CONST     R1 1         ; R1 := 1.000000
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2182
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := screenStack
  2 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  5 [-]: EQ        1 R1 K1      ; if R1 == "Lobby" then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 10
 10 [-]: LOADKB    R1 1 0       ; R1 := true
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xaade900e]
 13 [-]: LOADK     R4 K5        ; R4 := "GlobalMessage"
 14 [-]: CONST     R5 11        ; R5 := 11.000000
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x5f56eeab]
 21 [-]: LOADK     R4 K7        ; R4 := "GlobalMessage.Message"
 22 [-]: CONST     R5 29        ; R5 := 29.000000
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 25 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2190
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2194
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := movies
  3 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 18
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x9ba7909f
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbcfb64ab]
  9 [-]: GETGLOBAL R3 K1        ; R3 := movies
 10 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: NOT       R2 R2        ; R2 :=  R2
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x3d106989
 19 [-]: LOADK     R3 K5        ; R3 := "ERROR: Checking unrecognized screen ["
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0x64fb1586
 21 [-]: MOVE      R5 R0        ; R5 := R0
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: LOADK     R5 K7        ; R5 := "] Check your spelling."
 24 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: LOADKB    R2 0 0       ; R2 := false
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2204
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: RETURN    R3 3         ; return R3,R4
  9 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x104b2223]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R4 K2        ; R4 := 0x34291f5c
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0x397b920f]
 18 [-]: GETTABLE  R5 R3 K4     ; R5 := R3["mExpiry"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: LT        0 K5 R4      ; if 0.000000 >= R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: CONST     R1 1         ; R1 := 1.000000
 23 [-]: GETTABLE  R2 R3 K4     ; R2 := R3["mExpiry"]
 24 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 58
 25 [-]: JMP       58           ; PC := 58
 26 [-]: GETGLOBAL R4 K7        ; R4 := _T
 27 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["CachedFlashSales"]
 28 [-]: TEST      R4 0         ; if not R4 then PC := 58
 29 [-]: JMP       58           ; PC := 58
 30 [-]: GETGLOBAL R4 K9        ; R4 := 0xcfc01047
 31 [-]: GETGLOBAL R5 K7        ; R5 := _T
 32 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["CachedFlashSales"]
 33 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 34 [-]: JMP       56           ; PC := 56
 35 [-]: GETTABLE  R9 R8 K10    ; R9 := R8["mDiscount"]
 36 [-]: EQ        1 R9 K5      ; if R9 == 0.000000 then PC := 56
 37 [-]: JMP       56           ; PC := 56
 38 [-]: GETGLOBAL R9 K2        ; R9 := 0x34291f5c
 39 [-]: GETTABLE  R9 R9 K3     ; R9 := R9[0x397b920f]
 40 [-]: GETTABLE  R10 R8 K11   ; R10 := R8["mStartDate"]
 41 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 42 [-]: LT        0 R9 K5      ; if R9 >= 0.000000 then PC := 56
 43 [-]: JMP       56           ; PC := 56
 44 [-]: GETGLOBAL R9 K2        ; R9 := 0x34291f5c
 45 [-]: GETTABLE  R9 R9 K3     ; R9 := R9[0x397b920f]
 46 [-]: GETTABLE  R10 R8 K12   ; R10 := R8["mEndDate"]
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: LT        0 K5 R9      ; if 0.000000 >= R9 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R9 R8 K13    ; R9 := R8["mShowInMarket"]
 51 [-]: TEST      R9 0         ; if not R9 then PC := 56
 52 [-]: JMP       56           ; PC := 56
 53 [-]: CONST     R1 2         ; R1 := 2.000000
 54 [-]: GETTABLE  R2 R8 K12    ; R2 := R8["mEndDate"]
 55 [-]: JMP       58           ; PC := 58
 56 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 35; R6 := R7 end
 57 [-]: JMP       35           ; PC := 35
 58 [-]: MOVE      R9 R1        ; R9 := R1
 59 [-]: MOVE      R10 R2       ; R10 := R2
 60 [-]: RETURN    R9 3         ; return R9,R10
 61 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2237
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := queuedMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 31
  5 [-]: JMP       31           ; PC := 31
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["missionStatsPending"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 31
  9 [-]: JMP       31           ; PC := 31
 10 [-]: GETGLOBAL R0 K2        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["ActiveQuestLoaded"]
 12 [-]: TEST      R0 0         ; if not R0 then PC := 31
 13 [-]: JMP       31           ; PC := 31
 14 [-]: GETGLOBAL R0 K2        ; R0 := _T
 15 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["MainMenuStateReady"]
 16 [-]: TEST      R0 1         ; if R0 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R0 K6        ; R0 := mCurrentMode
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 21 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: GETGLOBAL R0 K2        ; R0 := _T
 24 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["gQueueMailbox"]
 25 [-]: TEST      R0 1         ; if R0 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETGLOBAL R0 K2        ; R0 := _T
 28 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["OpeningMailbox"]
 29 [-]: TEST      R0 0         ; if not R0 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADKB    R0 0 0       ; R0 := false
 32 [-]: RETURN    R0 2         ; return R0
 33 [-]: CONST     R0 1         ; R0 := 1.000000
 34 [-]: GETUPVAL  R1 U1        ; R1 := U1
 35 [-]: LEN       R1 R1        ; R1 := # R1
 36 [-]: CONST     R2 1         ; R2 := 1.000000
 37 [-]: FORPREP   R0 47        ; R0 -= R2; PC := 47
 38 [-]: GETGLOBAL R4 K10       ; R4 := 0x9ba7909f
 39 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xbcfb64ab]
 40 [-]: GETUPVAL  R6 U1        ; R6 := U1
 41 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 42 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 43 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: LOADKB    R5 0 0       ; R5 := false
 46 [-]: RETURN    R5 2         ; return R5
 47 [-]: FORLOOP   R0 38        ; R0 += R2; if R0 <= R1 then begin PC := 38; R3 := R0 end
 48 [-]: LOADKB    R5 1 0       ; R5 := true
 49 [-]: RETURN    R5 2         ; return R5
 50 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2257
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x9ba7909f
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADKB    R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K1        ; R1 := 0x9ba7909f
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbcfb64ab]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UIMovie_EndOfQuestMovie"]
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADKB    R2 0 0       ; R2 := false
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: TEST      R0 0         ; if not R0 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x9ba7909f
 20 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xbcfb64ab]
 21 [-]: GETGLOBAL R4 K6        ; R4 := 0x39803e25
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADKB    R3 0 0       ; R3 := false
 26 [-]: RETURN    R3 2         ; return R3
 27 [-]: GETGLOBAL R3 K1        ; R3 := 0x9ba7909f
 28 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xbcfb64ab]
 29 [-]: GETGLOBAL R5 K3        ; R5 := 0x0032441c
 30 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["UIMovie_SolarMap"]
 31 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 32 [-]: MOVE      R1 R3        ; R1 := R3
 33 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: LOADKB    R3 0 0       ; R3 := false
 36 [-]: RETURN    R3 2         ; return R3
 37 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 38 [-]: GETGLOBAL R4 K8        ; R4 := queuedMovie
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 0         ; if not R3 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R3 K9        ; R3 := _T
 43 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["missionStatsPending"]
 44 [-]: TEST      R3 1         ; if R3 then PC := 55
 45 [-]: JMP       55           ; PC := 55
 46 [-]: GETGLOBAL R3 K11       ; R3 := mCurrentMode
 47 [-]: GETUPVAL  R4 U0        ; R4 := U0
 48 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["UI_MODE_IN_SPACE_SHIP"]
 49 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETGLOBAL R3 K9        ; R3 := _T
 52 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["MainMenuStateReady"]
 53 [-]: TEST      R3 1         ; if R3 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: LOADKB    R3 0 0       ; R3 := false
 56 [-]: RETURN    R3 2         ; return R3
 57 [-]: GETGLOBAL R3 K9        ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["gQueueMailbox"]
 59 [-]: TEST      R3 1         ; if R3 then PC := 69
 60 [-]: JMP       69           ; PC := 69
 61 [-]: GETGLOBAL R3 K9        ; R3 := _T
 62 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["OpeningMailbox"]
 63 [-]: TEST      R3 1         ; if R3 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETGLOBAL R3 K9        ; R3 := _T
 66 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["QuestPickerOpen"]
 67 [-]: TEST      R3 0         ; if not R3 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADKB    R3 0 0       ; R3 := false
 70 [-]: RETURN    R3 2         ; return R3
 71 [-]: CONST     R3 1         ; R3 := 1.000000
 72 [-]: GETUPVAL  R4 U1        ; R4 := U1
 73 [-]: LEN       R4 R4        ; R4 := # R4
 74 [-]: CONST     R5 1         ; R5 := 1.000000
 75 [-]: FORPREP   R3 86        ; R3 -= R5; PC := 86
 76 [-]: GETGLOBAL R7 K1        ; R7 := 0x9ba7909f
 77 [-]: SELF      R7 R7 K2     ; R8 := R7; R7 := R7[0xbcfb64ab]
 78 [-]: GETUPVAL  R9 U1        ; R9 := U1
 79 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 80 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 81 [-]: MOVE      R1 R7        ; R1 := R7
 82 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: LOADKB    R7 0 0       ; R7 := false
 85 [-]: RETURN    R7 2         ; return R7
 86 [-]: FORLOOP   R3 76        ; R3 += R5; if R3 <= R4 then begin PC := 76; R6 := R3 end
 87 [-]: LOADKB    R7 1 0       ; R7 := true
 88 [-]: RETURN    R7 2         ; return R7
 89 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2297
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := mTimerMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xb1f4e5e1]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETTABLE  R3 R2 K2     ; R3 := R2["Duration"]
  8 [-]: LT        0 R1 R3      ; if R1 >= R3 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: SETTABLE  R2 K2 R1     ; R2["Duration"] := R1
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R3 K0        ; R3 := mTimerMgr
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xbd2e96ea]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: GETUPVAL  R6 U0        ; R6 := U0
 16 [-]: LOADKB    R7 0 0       ; R7 := false
 17 [-]: MOVE      R8 R0        ; R8 := R0
 18 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 19 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2309
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xd6b6f58a]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 24
 13 [-]: JMP       24           ; PC := 24
 14 [-]: GETGLOBAL R3 K2        ; R3 := 0x34291f5c
 15 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0x397b920f]
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: LT        0 K4 R3      ; if 0.000000 >= R3 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: LOADK     R5 K5        ; R5 := "LiteSortie"
 22 [-]: MOVE      R6 R3        ; R6 := R3
 23 [-]: CALL      R4 3 1       ; R4(R5,R6)
 24 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2323
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETUPVAL  R0 U0        ; U82 := R0
  2 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2327
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x7c37aeec]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2331
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 5
  5 [-]: LOADKB    R2 1 0       ; R2 := true
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 2335
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R0 5 0       ; R0 := {}
  2 [-]: CONST     R1 1         ; R1 := 1.000000
  3 [-]: CONST     R2 2         ; R2 := 2.000000
  4 [-]: CONST     R3 3         ; R3 := 3.000000
  5 [-]: CONST     R4 4         ; R4 := 4.000000
  6 [-]: CONST     R5 7         ; R5 := 7.000000
  7 [-]: SETLIST   R0 5 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 5
  8 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  9 [-]: CONST     R2 1         ; R2 := 1.000000
 10 [-]: LEN       R3 R0        ; R3 := # R0
 11 [-]: CONST     R4 1         ; R4 := 1.000000
 12 [-]: FORPREP   R2 21        ; R2 -= R4; PC := 21
 13 [-]: GETUPVAL  R6 U0        ; R6 := U0
 14 [-]: GETTABLE  R6 R6 K1     ; R6 := R6[0x09cec339]
 15 [-]: GETTABLE  R7 R0 R5     ; R7 := R0[R5]
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: TEST      R6 0         ; if not R6 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETTABLE  R6 R0 R5     ; R6 := R0[R5]
 20 [-]: SETTABLE  R1 R6 K2     ; R1[R6] := true
 21 [-]: FORLOOP   R2 13        ; R2 += R4; if R2 <= R3 then begin PC := 13; R5 := R2 end
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 2348
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  61

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R3 K1        ; R3 := _T
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Notifications"]
  9 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: LOADNIL   R4 R9        ; R4 := R5 := R6 := R7 := R8 := R9 := nil
 13 [-]: GETGLOBAL R10 K1       ; R10 := _T
 14 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["CachedGlobalUpgrades"]
 15 [-]: EQ        1 R10 K3     ; if R10 == nil then PC := 78
 16 [-]: JMP       78           ; PC := 78
 17 [-]: GETGLOBAL R10 K5       ; R10 := 0xcfc01047
 18 [-]: GETGLOBAL R11 K1       ; R11 := _T
 19 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["CachedGlobalUpgrades"]
 20 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 21 [-]: JMP       76           ; PC := 76
 22 [-]: GETGLOBAL R15 K6       ; R15 := 0x34291f5c
 23 [-]: GETTABLE  R15 R15 K7   ; R15 := R15[0x397b920f]
 24 [-]: GETTABLE  R16 R14 K8   ; R16 := R14["mActivation"]
 25 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 26 [-]: LE        0 R15 K9     ; if R15 > 0.000000 then PC := 76
 27 [-]: JMP       76           ; PC := 76
 28 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
 29 [-]: GETTABLE  R16 R14 K10  ; R16 := R14["mUpgrade"]
 30 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 31 [-]: TEST      R15 1        ; if R15 then PC := 76
 32 [-]: JMP       76           ; PC := 76
 33 [-]: GETTABLE  R15 R14 K11  ; R15 := R14["mNodes"]
 34 [-]: LEN       R15 R15      ; R15 := # R15
 35 [-]: EQ        0 R15 K9     ; if R15 ~= 0.000000 then PC := 76
 36 [-]: JMP       76           ; PC := 76
 37 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 38 [-]: SELF      R15 R15 K12  ; R16 := R15; R15 := R15[0x9f236ac2]
 39 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 40 [-]: EQ        0 R15 K14    ; if R15 ~= 176.000000 then PC := 48
 41 [-]: JMP       48           ; PC := 48
 42 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 43 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15[0x0fbc7293]
 44 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 45 [-]: MOVE      R8 R15       ; R8 := R15
 46 [-]: GETTABLE  R9 R14 K16   ; R9 := R14["mExpiryDate"]
 47 [-]: JMP       69           ; PC := 69
 48 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 49 [-]: SELF      R15 R15 K12  ; R16 := R15; R15 := R15[0x9f236ac2]
 50 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 51 [-]: EQ        0 R15 K17    ; if R15 ~= 174.000000 then PC := 59
 52 [-]: JMP       59           ; PC := 59
 53 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 54 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15[0x0fbc7293]
 55 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 56 [-]: MOVE      R4 R15       ; R4 := R15
 57 [-]: GETTABLE  R5 R14 K16   ; R5 := R14["mExpiryDate"]
 58 [-]: JMP       69           ; PC := 69
 59 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 60 [-]: SELF      R15 R15 K12  ; R16 := R15; R15 := R15[0x9f236ac2]
 61 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 62 [-]: EQ        0 R15 K18    ; if R15 ~= 168.000000 then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 65 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15[0x0fbc7293]
 66 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 67 [-]: MOVE      R6 R15       ; R6 := R15
 68 [-]: GETTABLE  R7 R14 K16   ; R7 := R14["mExpiryDate"]
 69 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: EQ        1 R8 K3      ; if R8 == nil then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: JMP       78           ; PC := 78
 76 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 22; R12 := R13 end
 77 [-]: JMP       22           ; PC := 22
 78 [-]: LOADNIL   R15 R15      ; R15 := nil
 79 [-]: CONST     R16 0        ; R16 := 0.000000
 80 [-]: LOADNIL   R17 R17      ; R17 := nil
 81 [-]: CONST     R18 0        ; R18 := 0.000000
 82 [-]: SELF      R19 R1 K19   ; R20 := R1; R19 := R1[0x62c81b76]
 83 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 84 [-]: SELF      R20 R19 K20  ; R21 := R19; R20 := R19[0xb61abfd2]
 85 [-]: CONST     R22 0        ; R22 := 0.000000
 86 [-]: CONST     R23 0        ; R23 := 0.000000
 87 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
 88 [-]: GETTABLE  R21 R20 K22  ; R21 := R20["mUmbraDate"]
 89 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21[0x56c01834]
 90 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 91 [-]: TEST      R21 0        ; if not R21 then PC := 97
 92 [-]: JMP       97           ; PC := 97
 93 [-]: CONST     R16 1        ; R16 := 1.000000
 94 [-]: SELF      R21 R20 K24  ; R22 := R20; R21 := R20[0x54c2ec45]
 95 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 96 [-]: MOVE      R15 R21      ; R15 := R21
 97 [-]: GETTABLE  R21 R20 K25  ; R21 := R20["mUpgradesExpiry"]
 98 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21[0x56c01834]
 99 [-]: CALL      R21 2 2      ; R21 := R21(R22)
100 [-]: TEST      R21 0        ; if not R21 then PC := 193
101 [-]: JMP       193          ; PC := 193
102 [-]: CONST     R18 1        ; R18 := 1.000000
103 [-]: GETTABLE  R17 R20 K25  ; R17 := R20["mUpgradesExpiry"]
104 [-]: GETGLOBAL R21 K1       ; R21 := _T
105 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["CurrentInvigoration"]
106 [-]: EQ        0 R21 K3     ; if R21 ~= nil then PC := 110
107 [-]: JMP       110          ; PC := 110
108 [-]: GETGLOBAL R21 K1       ; R21 := _T
109 [-]: SETTABLE  R21 K26 K27  ; R21["CurrentInvigoration"] := ""
110 [-]: GETTABLE  R21 R20 K28  ; R21 := R20["mOffensiveUpgrade"]
111 [-]: EQ        1 R21 K3     ; if R21 == nil then PC := 121
112 [-]: JMP       121          ; PC := 121
113 [-]: GETUPVAL  R21 U0       ; R21 := U0
114 [-]: GETTABLE  R21 R21 K29  ; R21 := R21[0x609b196e]
115 [-]: GETUPVAL  R22 U1       ; R22 := U1
116 [-]: GETTABLE  R22 R22 K30  ; R22 := R22["Upgrades"]
117 [-]: GETTABLE  R23 R20 K28  ; R23 := R20["mOffensiveUpgrade"]
118 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
119 [-]: EQ        1 R21 K31    ; if R21 == -1.000000 then PC := 122
120 [-]: JMP       122          ; PC := 122
121 [-]: LOADKB    R21 0 1      ; R21 := false; PC := 122
122 [-]: LOADKB    R21 1 0      ; R21 := true
123 [-]: GETTABLE  R22 R20 K32  ; R22 := R20["mDefensiveUpgrade"]
124 [-]: EQ        1 R22 K3     ; if R22 == nil then PC := 134
125 [-]: JMP       134          ; PC := 134
126 [-]: GETUPVAL  R22 U0       ; R22 := U0
127 [-]: GETTABLE  R22 R22 K29  ; R22 := R22[0x609b196e]
128 [-]: GETUPVAL  R23 U1       ; R23 := U1
129 [-]: GETTABLE  R23 R23 K30  ; R23 := R23["Upgrades"]
130 [-]: GETTABLE  R24 R20 K32  ; R24 := R20["mDefensiveUpgrade"]
131 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
132 [-]: EQ        1 R22 K31    ; if R22 == -1.000000 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: LOADKB    R22 0 1      ; R22 := false; PC := 135
135 [-]: LOADKB    R22 1 0      ; R22 := true
136 [-]: TEST      R21 1        ; if R21 then PC := 140
137 [-]: JMP       140          ; PC := 140
138 [-]: TEST      R22 0        ; if not R22 then PC := 193
139 [-]: JMP       193          ; PC := 193
140 [-]: GETGLOBAL R23 K1       ; R23 := _T
141 [-]: GETGLOBAL R24 K33      ; R24 := 0xae91e43b
142 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x42b04007]
143 [-]: LOADK     R26 K35      ; R26 := "/Lotus/Language/Menu/LoadoutSelection_Loading"
144 [-]: LOADKB    R27 0 0      ; R27 := false
145 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
146 [-]: SETTABLE  R23 K26 R24  ; R23["CurrentInvigoration"] := R24
147 [-]: GETUPVAL  R23 U1       ; R23 := U1
148 [-]: NEWTABLE  R24 0 0      ; R24 := {}
149 [-]: SETTABLE  R23 K30 R24  ; R23["Upgrades"] := R24
150 [-]: GETTABLE  R23 R20 K28  ; R23 := R20["mOffensiveUpgrade"]
151 [-]: EQ        1 R23 K3     ; if R23 == nil then PC := 159
152 [-]: JMP       159          ; PC := 159
153 [-]: GETGLOBAL R23 K36      ; R23 := 0x33bdd652
154 [-]: GETTABLE  R23 R23 K37  ; R23 := R23[0x23d5322f]
155 [-]: GETUPVAL  R24 U1       ; R24 := U1
156 [-]: GETTABLE  R24 R24 K30  ; R24 := R24["Upgrades"]
157 [-]: GETTABLE  R25 R20 K28  ; R25 := R20["mOffensiveUpgrade"]
158 [-]: CALL      R23 3 1      ; R23(R24,R25)
159 [-]: GETTABLE  R23 R20 K32  ; R23 := R20["mDefensiveUpgrade"]
160 [-]: EQ        1 R23 K3     ; if R23 == nil then PC := 168
161 [-]: JMP       168          ; PC := 168
162 [-]: GETGLOBAL R23 K36      ; R23 := 0x33bdd652
163 [-]: GETTABLE  R23 R23 K37  ; R23 := R23[0x23d5322f]
164 [-]: GETUPVAL  R24 U1       ; R24 := U1
165 [-]: GETTABLE  R24 R24 K30  ; R24 := R24["Upgrades"]
166 [-]: GETTABLE  R25 R20 K32  ; R25 := R20["mDefensiveUpgrade"]
167 [-]: CALL      R23 3 1      ; R23(R24,R25)
168 [-]: NEWTABLE  R23 0 0      ; R23 := {}
169 [-]: CONST     R24 1        ; R24 := 1.000000
170 [-]: GETUPVAL  R25 U1       ; R25 := U1
171 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["Upgrades"]
172 [-]: LEN       R25 R25      ; R25 := # R25
173 [-]: CONST     R26 1        ; R26 := 1.000000
174 [-]: FORPREP   R24 184      ; R24 -= R26; PC := 184
175 [-]: GETGLOBAL R28 K36      ; R28 := 0x33bdd652
176 [-]: GETTABLE  R28 R28 K37  ; R28 := R28[0x23d5322f]
177 [-]: MOVE      R29 R23      ; R29 := R23
178 [-]: GETUPVAL  R30 U1       ; R30 := U1
179 [-]: GETTABLE  R30 R30 K30  ; R30 := R30["Upgrades"]
180 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
181 [-]: SELF      R30 R30 K38  ; R31 := R30; R30 := R30[0xed4e0128]
182 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
183 [-]: CALL      R28 0 1      ; R28(R29,...)
184 [-]: FORLOOP   R24 175      ; R24 += R26; if R24 <= R25 then begin PC := 175; R27 := R24 end
185 [-]: GETUPVAL  R28 U1       ; R28 := U1
186 [-]: GETGLOBAL R29 K40      ; R29 := 0xbd496aa1
187 [-]: GETTABLE  R29 R29 K41  ; R29 := R29[0x42645da3]
188 [-]: MOVE      R30 R23      ; R30 := R23
189 [-]: CALL      R29 2 2      ; R29 := R29(R30)
190 [-]: SETTABLE  R28 K39 R29  ; R28["Loader"] := R29
191 [-]: GETUPVAL  R28 U1       ; R28 := U1
192 [-]: SETTABLE  R28 K42 K43  ; R28["IsLoading"] := true
193 [-]: LOADNIL   R28 R28      ; R28 := nil
194 [-]: TEST      R2 1         ; if R2 then PC := 210
195 [-]: JMP       210          ; PC := 210
196 [-]: GETGLOBAL R29 K1       ; R29 := _T
197 [-]: GETTABLE  R29 R29 K44  ; R29 := R29["Notifications_RefreshPolarities"]
198 [-]: EQ        0 R29 K3     ; if R29 ~= nil then PC := 210
199 [-]: JMP       210          ; PC := 210
200 [-]: GETGLOBAL R29 K0       ; R29 := 0x7b998233
201 [-]: GETGLOBAL R30 K45      ; R30 := 0x25d99d89
202 [-]: CALL      R29 2 2      ; R29 := R29(R30)
203 [-]: TEST      R29 1        ; if R29 then PC := 210
204 [-]: JMP       210          ; PC := 210
205 [-]: GETUPVAL  R29 U2       ; R29 := U2
206 [-]: CALL      R29 1 2      ; R29 := R29()
207 [-]: MOVE      R28 R29      ; R28 := R29
208 [-]: GETGLOBAL R29 K1       ; R29 := _T
209 [-]: SETTABLE  R29 K44 K46  ; R29["Notifications_RefreshPolarities"] := false
210 [-]: CONST     R29 1        ; R29 := 1.000000
211 [-]: GETTABLE  R30 R3 K47   ; R30 := R3["mElements"]
212 [-]: LEN       R30 R30      ; R30 := # R30
213 [-]: CONST     R31 1        ; R31 := 1.000000
214 [-]: FORPREP   R29 496      ; R29 -= R31; PC := 496
215 [-]: GETTABLE  R33 R3 K47   ; R33 := R3["mElements"]
216 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
217 [-]: EQ        1 R33 K3     ; if R33 == nil then PC := 496
218 [-]: JMP       496          ; PC := 496
219 [-]: CONST     R34 0        ; R34 := 0.000000
220 [-]: LOADNIL   R35 R35      ; R35 := nil
221 [-]: GETTABLE  R36 R33 K48  ; R36 := R33["Id"]
222 [-]: TEST      R2 1         ; if R2 then PC := 362
223 [-]: JMP       362          ; PC := 362
224 [-]: GETTABLE  R37 R3 K49   ; R37 := R3["MAIL"]
225 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 231
226 [-]: JMP       231          ; PC := 231
227 [-]: SELF      R37 R1 K50   ; R38 := R1; R37 := R1[0xf5fb4cbf]
228 [-]: CALL      R37 2 2      ; R37 := R37(R38)
229 [-]: MOVE      R34 R37      ; R34 := R37
230 [-]: JMP       362          ; PC := 362
231 [-]: GETTABLE  R37 R3 K51   ; R37 := R3["FOUNDRY"]
232 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 325
233 [-]: JMP       325          ; PC := 325
234 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
235 [-]: GETGLOBAL R38 K52      ; R38 := 0xbe190284
236 [-]: CALL      R37 2 2      ; R37 := R37(R38)
237 [-]: TEST      R37 1        ; if R37 then PC := 362
238 [-]: JMP       362          ; PC := 362
239 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
240 [-]: MOVE      R38 R1       ; R38 := R1
241 [-]: CALL      R37 2 2      ; R37 := R37(R38)
242 [-]: TEST      R37 1        ; if R37 then PC := 362
243 [-]: JMP       362          ; PC := 362
244 [-]: SELF      R37 R1 K53   ; R38 := R1; R37 := R1[0x4ae54c32]
245 [-]: GETUPVAL  R39 U3       ; R39 := U3
246 [-]: GETTABLE  R39 R39 K54  ; R39 := R39["SF_FOUNDRY"]
247 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
248 [-]: TEST      R37 0        ; if not R37 then PC := 362
249 [-]: JMP       362          ; PC := 362
250 [-]: GETGLOBAL R37 K55      ; R37 := mFoundryNotification
251 [-]: GETTABLE  R37 R37 K56  ; R37 := R37["Refresh"]
252 [-]: TEST      R37 0        ; if not R37 then PC := 323
253 [-]: JMP       323          ; PC := 323
254 [-]: MOVE      R37 R0       ; R37 := R0
255 [-]: GETGLOBAL R38 K55      ; R38 := mFoundryNotification
256 [-]: GETTABLE  R38 R38 K57  ; R38 := R38["LastRefreshTime"]
257 [-]: EQ        1 R38 K9     ; if R38 == 0.000000 then PC := 264
258 [-]: JMP       264          ; PC := 264
259 [-]: GETGLOBAL R38 K58      ; R38 := 0x55156ff7
260 [-]: CALL      R38 1 2      ; R38 := R38()
261 [-]: GETGLOBAL R39 K55      ; R39 := mFoundryNotification
262 [-]: GETTABLE  R39 R39 K57  ; R39 := R39["LastRefreshTime"]
263 [-]: SUB       R37 R38 R39  ; R37 := R38 - R39
264 [-]: SELF      R38 R1 K59   ; R39 := R1; R38 := R1[0x72d0092a]
265 [-]: GETGLOBAL R40 K52      ; R40 := 0xbe190284
266 [-]: SELF      R40 R40 K60  ; R41 := R40; R40 := R40[0xa1c390fe]
267 [-]: CALL      R40 2 2      ; R40 := R40(R41)
268 [-]: MOVE      R41 R37      ; R41 := R37
269 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
270 [-]: GETGLOBAL R39 K55      ; R39 := mFoundryNotification
271 [-]: GETGLOBAL R40 K58      ; R40 := 0x55156ff7
272 [-]: CALL      R40 1 2      ; R40 := R40()
273 [-]: SETTABLE  R39 K57 R40  ; R39["LastRefreshTime"] := R40
274 [-]: GETTABLE  R34 R38 K61  ; R34 := R38["mCount"]
275 [-]: GETGLOBAL R39 K1       ; R39 := _T
276 [-]: GETTABLE  R39 R39 K62  ; R39 := R39["ShowNotification"]
277 [-]: EQ        1 R39 K3     ; if R39 == nil then PC := 299
278 [-]: JMP       299          ; PC := 299
279 [-]: CONST     R39 1        ; R39 := 1.000000
280 [-]: GETTABLE  R40 R38 K63  ; R40 := R38["mReadySinceLastCheck"]
281 [-]: LEN       R40 R40      ; R40 := # R40
282 [-]: CONST     R41 1        ; R41 := 1.000000
283 [-]: FORPREP   R39 298      ; R39 -= R41; PC := 298
284 [-]: GETGLOBAL R43 K33      ; R43 := 0xae91e43b
285 [-]: SELF      R43 R43 K34  ; R44 := R43; R43 := R43[0x42b04007]
286 [-]: LOADK     R45 K64      ; R45 := "/Lotus/Language/Menu/Crafting_ReadyToClaim_Notification"
287 [-]: LOADKB    R46 0 0      ; R46 := false
288 [-]: NEWTABLE  R47 0 1      ; R47 := {}
289 [-]: GETTABLE  R48 R38 K63  ; R48 := R38["mReadySinceLastCheck"]
290 [-]: GETTABLE  R48 R48 R42  ; R48 := R48[R42]
291 [-]: SETTABLE  R47 K65 R48  ; R47["RECIPE"] := R48
292 [-]: CALL      R43 5 2      ; R43 := R43(R44,R45,R46,R47)
293 [-]: GETGLOBAL R44 K1       ; R44 := _T
294 [-]: GETTABLE  R44 R44 K66  ; R44 := R44[0x7dce37bc]
295 [-]: MOVE      R45 R43      ; R45 := R43
296 [-]: LOADK     R46 K67      ; R46 := "BuildComplete"
297 [-]: CALL      R44 3 1      ; R44(R45,R46)
298 [-]: FORLOOP   R39 284      ; R39 += R41; if R39 <= R40 then begin PC := 284; R42 := R39 end
299 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
300 [-]: SETTABLE  R44 K56 K46  ; R44["Refresh"] := false
301 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
302 [-]: GETTABLE  R44 R44 K68  ; R44 := R44["Timer"]
303 [-]: EQ        1 R44 K3     ; if R44 == nil then PC := 312
304 [-]: JMP       312          ; PC := 312
305 [-]: GETGLOBAL R44 K69      ; R44 := mTimerMgr
306 [-]: SELF      R44 R44 K70  ; R45 := R44; R44 := R44[0x775c858b]
307 [-]: GETGLOBAL R46 K55      ; R46 := mFoundryNotification
308 [-]: GETTABLE  R46 R46 K68  ; R46 := R46["Timer"]
309 [-]: CALL      R44 3 1      ; R44(R45,R46)
310 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
311 [-]: SETTABLE  R44 K68 K3   ; R44["Timer"] := nil
312 [-]: GETTABLE  R44 R38 K71  ; R44 := R38["mTimeToNextClaimable"]
313 [-]: LE        0 K9 R44     ; if 0.000000 > R44 then PC := 362
314 [-]: JMP       362          ; PC := 362
315 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
316 [-]: GETGLOBAL R45 K69      ; R45 := mTimerMgr
317 [-]: SELF      R45 R45 K72  ; R46 := R45; R45 := R45[0xbd2e96ea]
318 [-]: GETTABLE  R47 R38 K71  ; R47 := R38["mTimeToNextClaimable"]
319 [-]: CLOSURE   R48 0        ; R48 := closure(Function #73.1)
320 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
321 [-]: SETTABLE  R44 K68 R45  ; R44["Timer"] := R45
322 [-]: JMP       362          ; PC := 362
323 [-]: GETTABLE  R34 R33 K73  ; R34 := R33["Value"]
324 [-]: JMP       362          ; PC := 362
325 [-]: GETTABLE  R44 R3 K74   ; R44 := R3["MARKET"]
326 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 340
327 [-]: JMP       340          ; PC := 340
328 [-]: SELF      R44 R1 K53   ; R45 := R1; R44 := R1[0x4ae54c32]
329 [-]: GETUPVAL  R46 U3       ; R46 := U3
330 [-]: GETTABLE  R46 R46 K75  ; R46 := R46["SF_SOCIAL_MENU"]
331 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
332 [-]: TEST      R44 0        ; if not R44 then PC := 362
333 [-]: JMP       362          ; PC := 362
334 [-]: GETUPVAL  R44 U4       ; R44 := U4
335 [-]: MOVE      R45 R1       ; R45 := R1
336 [-]: CALL      R44 2 3      ; R44,R45 := R44(R45)
337 [-]: MOVE      R35 R45      ; R35 := R45
338 [-]: MOVE      R34 R44      ; R34 := R44
339 [-]: JMP       362          ; PC := 362
340 [-]: GETTABLE  R44 R3 K76   ; R44 := R3["INC_FRIENDS"]
341 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 347
342 [-]: JMP       347          ; PC := 347
343 [-]: SELF      R44 R1 K77   ; R45 := R1; R44 := R1[0x016ec8be]
344 [-]: CALL      R44 2 2      ; R44 := R44(R45)
345 [-]: MOVE      R34 R44      ; R34 := R44
346 [-]: JMP       362          ; PC := 362
347 [-]: GETTABLE  R44 R3 K78   ; R44 := R3["ATTACK_POLARITY"]
348 [-]: LE        0 R44 R36    ; if R44 > R36 then PC := 362
349 [-]: JMP       362          ; PC := 362
350 [-]: GETTABLE  R44 R3 K79   ; R44 := R3["WARD_POLARITY"]
351 [-]: LE        0 R36 R44    ; if R36 > R44 then PC := 362
352 [-]: JMP       362          ; PC := 362
353 [-]: EQ        0 R28 K3     ; if R28 ~= nil then PC := 357
354 [-]: JMP       357          ; PC := 357
355 [-]: GETTABLE  R34 R33 K73  ; R34 := R33["Value"]
356 [-]: JMP       362          ; PC := 362
357 [-]: GETTABLE  R44 R33 K80  ; R44 := R33["Polarity"]
358 [-]: GETTABLE  R44 R28 R44  ; R44 := R28[R44]
359 [-]: EQ        1 R44 K3     ; if R44 == nil then PC := 362
360 [-]: JMP       362          ; PC := 362
361 [-]: CONST     R34 1        ; R34 := 1.000000
362 [-]: GETTABLE  R44 R3 K81   ; R44 := R3["UMBRA_ECHO"]
363 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 368
364 [-]: JMP       368          ; PC := 368
365 [-]: MOVE      R34 R16      ; R34 := R16
366 [-]: MOVE      R35 R15      ; R35 := R15
367 [-]: JMP       472          ; PC := 472
368 [-]: GETTABLE  R44 R3 K82   ; R44 := R3["INVIGORATION"]
369 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 374
370 [-]: JMP       374          ; PC := 374
371 [-]: MOVE      R34 R18      ; R34 := R18
372 [-]: MOVE      R35 R17      ; R35 := R17
373 [-]: JMP       472          ; PC := 472
374 [-]: GETTABLE  R44 R3 K83   ; R44 := R3["DOUBLE_CREDIT"]
375 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 380
376 [-]: JMP       380          ; PC := 380
377 [-]: MOVE      R34 R4       ; R34 := R4
378 [-]: MOVE      R35 R5       ; R35 := R5
379 [-]: JMP       472          ; PC := 472
380 [-]: GETTABLE  R44 R3 K84   ; R44 := R3["DOUBLE_AFFINITY"]
381 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 386
382 [-]: JMP       386          ; PC := 386
383 [-]: MOVE      R34 R6       ; R34 := R6
384 [-]: MOVE      R35 R7       ; R35 := R7
385 [-]: JMP       472          ; PC := 472
386 [-]: GETTABLE  R44 R3 K85   ; R44 := R3["DOUBLE_PICKUP"]
387 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 392
388 [-]: JMP       392          ; PC := 392
389 [-]: MOVE      R34 R8       ; R34 := R8
390 [-]: MOVE      R35 R9       ; R35 := R9
391 [-]: JMP       472          ; PC := 472
392 [-]: GETTABLE  R44 R3 K86   ; R44 := R3["EVOLVING_WEAPON"]
393 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 472
394 [-]: JMP       472          ; PC := 472
395 [-]: GETGLOBAL R44 K0       ; R44 := 0x7b998233
396 [-]: GETGLOBAL R45 K45      ; R45 := 0x25d99d89
397 [-]: CALL      R44 2 2      ; R44 := R44(R45)
398 [-]: TEST      R44 1        ; if R44 then PC := 472
399 [-]: JMP       472          ; PC := 472
400 [-]: GETGLOBAL R44 K87      ; R44 := 0x89326c93
401 [-]: SELF      R44 R44 K88  ; R45 := R44; R44 := R44[0x78298275]
402 [-]: CALL      R44 2 2      ; R44 := R44(R45)
403 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
404 [-]: MOVE      R46 R44      ; R46 := R44
405 [-]: CALL      R45 2 2      ; R45 := R45(R46)
406 [-]: TEST      R45 1        ; if R45 then PC := 472
407 [-]: JMP       472          ; PC := 472
408 [-]: SELF      R45 R44 K89  ; R46 := R44; R45 := R44[0xde321e6f]
409 [-]: CALL      R45 2 2      ; R45 := R45(R46)
410 [-]: NEWTABLE  R46 3 0      ; R46 := {}
411 [-]: CONST     R47 0        ; R47 := 0.000000
412 [-]: CONST     R48 1        ; R48 := 1.000000
413 [-]: CONST     R49 5        ; R49 := 5.000000
414 [-]: SETLIST   R46 3 1      ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 3
415 [-]: NEWTABLE  R47 3 0      ; R47 := {}
416 [-]: CONST     R48 1        ; R48 := 1.000000
417 [-]: CONST     R49 2        ; R49 := 2.000000
418 [-]: CONST     R50 3        ; R50 := 3.000000
419 [-]: SETLIST   R47 3 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 3
420 [-]: GETGLOBAL R48 K90      ; R48 := 0xc8802016
421 [-]: MOVE      R49 R46      ; R49 := R46
422 [-]: CALL      R48 2 4      ; R48,R49,R50 := R48(R49)
423 [-]: JMP       470          ; PC := 470
424 [-]: SELF      R53 R45 K91  ; R54 := R45; R53 := R45[0xe85a2361]
425 [-]: MOVE      R55 R52      ; R55 := R52
426 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
427 [-]: GETGLOBAL R54 K0       ; R54 := 0x7b998233
428 [-]: MOVE      R55 R53      ; R55 := R53
429 [-]: CALL      R54 2 2      ; R54 := R54(R55)
430 [-]: TEST      R54 1        ; if R54 then PC := 470
431 [-]: JMP       470          ; PC := 470
432 [-]: SELF      R54 R53 K92  ; R55 := R53; R54 := R53[0xc49a5a08]
433 [-]: CALL      R54 2 2      ; R54 := R54(R55)
434 [-]: TEST      R54 0        ; if not R54 then PC := 470
435 [-]: JMP       470          ; PC := 470
436 [-]: GETGLOBAL R54 K45      ; R54 := 0x25d99d89
437 [-]: SELF      R54 R54 K93  ; R55 := R54; R54 := R54[0x81454478]
438 [-]: SELF      R56 R53 K94  ; R57 := R53; R56 := R53[0xc2b8dddf]
439 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
440 [-]: CALL      R54 0 2      ; R54 := R54(R55,...)
441 [-]: GETGLOBAL R55 K0       ; R55 := 0x7b998233
442 [-]: MOVE      R56 R54      ; R56 := R54
443 [-]: CALL      R55 2 2      ; R55 := R55(R56)
444 [-]: TEST      R55 1        ; if R55 then PC := 470
445 [-]: JMP       470          ; PC := 470
446 [-]: GETGLOBAL R55 K45      ; R55 := 0x25d99d89
447 [-]: SELF      R55 R55 K95  ; R56 := R55; R55 := R55[0x25a6e75e]
448 [-]: CALL      R55 2 2      ; R55 := R55(R56)
449 [-]: SELF      R55 R55 K96  ; R56 := R55; R55 := R55[0xc70965fe]
450 [-]: CONST     R57 0        ; R57 := 0.000000
451 [-]: GETTABLE  R58 R47 R51  ; R58 := R47[R51]
452 [-]: SELF      R59 R53 K97  ; R60 := R53; R59 := R53[0x6daa621a]
453 [-]: CALL      R59 2 2      ; R59 := R59(R60)
454 [-]: SELF      R59 R59 K98  ; R60 := R59; R59 := R59[0xf537cfc7]
455 [-]: CALL      R59 2 0      ; R59,... := R59(R60)
456 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
457 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
458 [-]: MOVE      R57 R55      ; R57 := R55
459 [-]: CALL      R56 2 2      ; R56 := R56(R57)
460 [-]: TEST      R56 1        ; if R56 then PC := 470
461 [-]: JMP       470          ; PC := 470
462 [-]: GETGLOBAL R56 K99      ; R56 := 0x7f5022cf
463 [-]: GETTABLE  R56 R56 K100 ; R56 := R56[0x41e2ae25]
464 [-]: GETTABLE  R57 R55 K101 ; R57 := R55["mSkillTree"]
465 [-]: CALL      R56 2 2      ; R56 := R56(R57)
466 [-]: GETTABLE  R57 R54 K102 ; R57 := R54["rank"]
467 [-]: LT        0 R56 R57    ; if R56 >= R57 then PC := 470
468 [-]: JMP       470          ; PC := 470
469 [-]: CONST     R34 1        ; R34 := 1.000000
470 [-]: TFORLOOP  R48 2        ; R51,R52 :=  R48(R49,R50); if R51 ~= nil then begin PC = 424; R50 := R51 end
471 [-]: JMP       424          ; PC := 424
472 [-]: GETTABLE  R56 R33 K73  ; R56 := R33["Value"]
473 [-]: EQ        0 R34 R56    ; if R34 ~= R56 then PC := 488
474 [-]: JMP       488          ; PC := 488
475 [-]: EQ        1 R35 K3     ; if R35 == nil then PC := 496
476 [-]: JMP       496          ; PC := 496
477 [-]: GETTABLE  R56 R33 K103 ; R56 := R33["Expiry"]
478 [-]: EQ        1 R56 K3     ; if R56 == nil then PC := 485
479 [-]: JMP       485          ; PC := 485
480 [-]: SELF      R56 R35 K104 ; R57 := R35; R56 := R35[0x10f68684]
481 [-]: GETTABLE  R58 R33 K103 ; R58 := R33["Expiry"]
482 [-]: CALL      R56 3 2      ; R56 := R56(R57,R58)
483 [-]: JMP       486          ; PC := 486
484 [-]: LOADKB    R56 0 1      ; R56 := false; PC := 485
485 [-]: LOADKB    R56 1 0      ; R56 := true
486 [-]: EQ        1 R56 K9     ; if R56 == 0.000000 then PC := 496
487 [-]: JMP       496          ; PC := 496
488 [-]: SETTABLE  R33 K73 R34  ; R33["Value"] := R34
489 [-]: EQ        0 R35 K3     ; if R35 ~= nil then PC := 493
490 [-]: JMP       493          ; PC := 493
491 [-]: SETTABLE  R33 K103 K3  ; R33["Expiry"] := nil
492 [-]: JMP       496          ; PC := 496
493 [-]: SELF      R56 R35 K105 ; R57 := R35; R56 := R35[0x8f89d633]
494 [-]: CALL      R56 2 2      ; R56 := R56(R57)
495 [-]: SETTABLE  R33 K103 R56 ; R33["Expiry"] := R56
496 [-]: FORLOOP   R29 215      ; R29 += R31; if R29 <= R30 then begin PC := 215; R32 := R29 end
497 [-]: RETURN    R0 1         ; return 


; Function #73.1:
;
; Name:            
; Defined at line: 2472
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mFoundryNotification
  2 [-]: SETTABLE  R0 K1 K2     ; R0["Refresh"] := true
  3 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 2546
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  55

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x9718be96]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["KUVA_TOWER_MISSION_INTERVAL"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["KUVA_TOWER_MISSION_INTERVAL"]
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0xa01111a5]
 10 [-]: CALL      R3 1 2       ; R3 := R3()
 11 [-]: GETUPVAL  R4 U0        ; R4 := U0
 12 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["KUVA_TOWER_MISSION_INTERVAL"]
 13 [-]: MOD       R3 R3 R4     ; R3 := R3 % R4
 14 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mWorldStateLastGhostTowerSeed"]
 17 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: SETTABLE  R3 K4 R1     ; R3["mWorldStateLastGhostTowerSeed"] := R1
 22 [-]: GETGLOBAL R3 K5        ; R3 := 0x4f6851ff
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: CALL      R3 2 1       ; R3(R4)
 25 [-]: GETGLOBAL R3 K6        ; R3 := _T
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: SETTABLE  R3 K7 R4     ; R3["CachedGhostTowerMissions"] := R4
 28 [-]: LOADKB    R3 0 0       ; R3 := false
 29 [-]: GETGLOBAL R4 K8        ; R4 := 0x7ed0a956
 30 [-]: LOADK     R5 K9        ; R5 := "/Lotus/Types/Keys/WarWithinQuest/WarWithinQuestKeyChain"
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: GETUPVAL  R5 U0        ; R5 := U0
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x52fb05b3]
 34 [-]: MOVE      R6 R4        ; R6 := R4
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: GETGLOBAL R6 K11       ; R6 := 0x0469f296
 37 [-]: LOADK     R7 K12       ; R7 := "KuvaSurvival"
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: GETGLOBAL R7 K13       ; R7 := 0x5bced4c4
 40 [-]: GETTABLE  R7 R7 K14    ; R7 := R7[0x55f27c30]
 41 [-]: GETGLOBAL R8 K15       ; R8 := 0xbe190284
 42 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x67b221fa]
 43 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 44 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 45 [-]: ADD       R7 R7 R2     ; R7 := R7 + R2
 46 [-]: GETUPVAL  R8 U0        ; R8 := U0
 47 [-]: GETTABLE  R8 R8 K17    ; R8 := R8[0x5e35d4d6]
 48 [-]: CALL      R8 1 2       ; R8 := R8()
 49 [-]: SELF      R9 R8 K18    ; R10 := R8; R9 := R8[0xc1dee03f]
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: GETUPVAL  R10 U2       ; R10 := U2
 52 [-]: GETTABLE  R10 R10 K19  ; R10 := R10[0xf918a1ff]
 53 [-]: CALL      R10 1 2      ; R10 := R10()
 54 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 55 [-]: GETGLOBAL R12 K20      ; R12 := 0xcfc01047
 56 [-]: MOVE      R13 R9       ; R13 := R9
 57 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 58 [-]: JMP       92           ; PC := 92
 59 [-]: GETUPVAL  R17 U0       ; R17 := U0
 60 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["REGION_ID_FORTRESS"]
 61 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 62 [-]: JMP       92           ; PC := 92
 63 [-]: GETUPVAL  R17 U0       ; R17 := U0
 64 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["REGION_ID_DOJO"]
 65 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 66 [-]: JMP       92           ; PC := 92
 67 [-]: GETUPVAL  R17 U0       ; R17 := U0
 68 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["REGION_ID_VOID"]
 69 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 70 [-]: JMP       92           ; PC := 92
 71 [-]: GETUPVAL  R17 U0       ; R17 := U0
 72 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["REGION_ID_MOON"]
 73 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 74 [-]: JMP       92           ; PC := 92
 75 [-]: GETUPVAL  R17 U0       ; R17 := U0
 76 [-]: GETTABLE  R17 R17 K25  ; R17 := R17["REGION_ID_DARK_SECTOR"]
 77 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 78 [-]: JMP       92           ; PC := 92
 79 [-]: GETUPVAL  R17 U0       ; R17 := U0
 80 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["REGION_ID_DEEP_SPACE"]
 81 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 82 [-]: JMP       92           ; PC := 92
 83 [-]: GETUPVAL  R17 U0       ; R17 := U0
 84 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["REGION_ID_ZARIMAN"]
 85 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 86 [-]: JMP       92           ; PC := 92
 87 [-]: GETGLOBAL R17 K28      ; R17 := 0x33bdd652
 88 [-]: GETTABLE  R17 R17 K29  ; R17 := R17[0x23d5322f]
 89 [-]: MOVE      R18 R11      ; R18 := R11
 90 [-]: MOVE      R19 R16      ; R19 := R16
 91 [-]: CALL      R17 3 1      ; R17(R18,R19)
 92 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 59; R14 := R15 end
 93 [-]: JMP       59           ; PC := 59
 94 [-]: GETGLOBAL R17 K28      ; R17 := 0x33bdd652
 95 [-]: GETTABLE  R17 R17 K30  ; R17 := R17[0xf21b1d8e]
 96 [-]: MOVE      R18 R11      ; R18 := R11
 97 [-]: CLOSURE   R19 0        ; R19 := closure(Function #74.1)
 98 [-]: MOVE      R0 R10       ; R0 := R10
 99 [-]: CALL      R17 3 1      ; R17(R18,R19)
100 [-]: CONST     R17 2        ; R17 := 2.000000
101 [-]: NEWTABLE  R18 0 0      ; R18 := {}
102 [-]: GETGLOBAL R19 K31      ; R19 := 0xc8802016
103 [-]: MOVE      R20 R11      ; R20 := R11
104 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
105 [-]: JMP       173          ; PC := 173
106 [-]: GETGLOBAL R24 K20      ; R24 := 0xcfc01047
107 [-]: GETTABLE  R25 R23 K32  ; R25 := R23["sectors"]
108 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
109 [-]: JMP       168          ; PC := 168
110 [-]: GETGLOBAL R29 K33      ; R29 := 0x64fb1586
111 [-]: GETTABLE  R30 R28 K34  ; R30 := R28["name"]
112 [-]: CALL      R29 2 2      ; R29 := R29(R30)
113 [-]: GETTABLE  R30 R28 K35  ; R30 := R28["mission"]
114 [-]: GETTABLE  R31 R30 K36  ; R31 := R30["missionType"]
115 [-]: GETTABLE  R32 R28 K37  ; R32 := R28["nodeType"]
116 [-]: EQ        0 R32 K39    ; if R32 ~= 0.000000 then PC := 168
117 [-]: JMP       168          ; PC := 168
118 [-]: EQ        1 R29 K40    ; if R29 == "" then PC := 168
119 [-]: JMP       168          ; PC := 168
120 [-]: GETGLOBAL R32 K41      ; R32 := 0x7b998233
121 [-]: GETTABLE  R33 R30 K42  ; R33 := R30["levelOverride"]
122 [-]: CALL      R32 2 2      ; R32 := R32(R33)
123 [-]: TEST      R32 1        ; if R32 then PC := 168
124 [-]: JMP       168          ; PC := 168
125 [-]: GETTABLE  R32 R30 K43  ; R32 := R30["archwingRequired"]
126 [-]: TEST      R32 1        ; if R32 then PC := 168
127 [-]: JMP       168          ; PC := 168
128 [-]: GETTABLE  R32 R30 K44  ; R32 := R30["isSharkwingMission"]
129 [-]: TEST      R32 1        ; if R32 then PC := 168
130 [-]: JMP       168          ; PC := 168
131 [-]: EQ        1 R31 K45    ; if R31 == 22.000000 then PC := 168
132 [-]: JMP       168          ; PC := 168
133 [-]: EQ        1 R31 K46    ; if R31 == 13.000000 then PC := 168
134 [-]: JMP       168          ; PC := 168
135 [-]: EQ        1 R31 K47    ; if R31 == 8.000000 then PC := 168
136 [-]: JMP       168          ; PC := 168
137 [-]: EQ        1 R31 K48    ; if R31 == 21.000000 then PC := 168
138 [-]: JMP       168          ; PC := 168
139 [-]: EQ        1 R31 K49    ; if R31 == 14.000000 then PC := 168
140 [-]: JMP       168          ; PC := 168
141 [-]: EQ        1 R31 K50    ; if R31 == 28.000000 then PC := 168
142 [-]: JMP       168          ; PC := 168
143 [-]: EQ        1 R31 K51    ; if R31 == 36.000000 then PC := 168
144 [-]: JMP       168          ; PC := 168
145 [-]: EQ        1 R31 K52    ; if R31 == 30.000000 then PC := 168
146 [-]: JMP       168          ; PC := 168
147 [-]: EQ        1 R31 K53    ; if R31 == 32.000000 then PC := 168
148 [-]: JMP       168          ; PC := 168
149 [-]: EQ        1 R31 K54    ; if R31 == 31.000000 then PC := 168
150 [-]: JMP       168          ; PC := 168
151 [-]: GETTABLE  R32 R30 K55  ; R32 := R30["goalTag"]
152 [-]: GETGLOBAL R33 K56      ; R33 := EMPTY_SYMBOL
153 [-]: EQ        1 R32 R33    ; if R32 == R33 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: GETTABLE  R32 R30 K55  ; R32 := R30["goalTag"]
156 [-]: EQ        0 R32 R6     ; if R32 ~= R6 then PC := 168
157 [-]: JMP       168          ; PC := 168
158 [-]: GETGLOBAL R32 K41      ; R32 := 0x7b998233
159 [-]: GETTABLE  R33 R30 K57  ; R33 := R30["questReq"]
160 [-]: CALL      R32 2 2      ; R32 := R32(R33)
161 [-]: TEST      R32 0        ; if not R32 then PC := 168
162 [-]: JMP       168          ; PC := 168
163 [-]: GETGLOBAL R32 K28      ; R32 := 0x33bdd652
164 [-]: GETTABLE  R32 R32 K29  ; R32 := R32[0x23d5322f]
165 [-]: MOVE      R33 R18      ; R33 := R18
166 [-]: MOVE      R34 R28      ; R34 := R28
167 [-]: CALL      R32 3 1      ; R32(R33,R34)
168 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 110; R26 := R27 end
169 [-]: JMP       110          ; PC := 110
170 [-]: EQ        0 R22 R17    ; if R22 ~= R17 then PC := 173
171 [-]: JMP       173          ; PC := 173
172 [-]: JMP       175          ; PC := 175
173 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 106; R21 := R22 end
174 [-]: JMP       106          ; PC := 106
175 [-]: GETUPVAL  R32 U3       ; R32 := U3
176 [-]: GETTABLE  R32 R32 K58  ; R32 := R32[0xb8f73de1]
177 [-]: MOVE      R33 R18      ; R33 := R18
178 [-]: CALL      R32 2 1      ; R32(R33)
179 [-]: LOADKB    R32 0 0      ; R32 := false
180 [-]: TEST      R32 0        ; if not R32 then PC := 199
181 [-]: JMP       199          ; PC := 199
182 [-]: TEST      R3 0         ; if not R3 then PC := 199
183 [-]: JMP       199          ; PC := 199
184 [-]: GETGLOBAL R32 K31      ; R32 := 0xc8802016
185 [-]: MOVE      R33 R18      ; R33 := R18
186 [-]: CALL      R32 2 4      ; R32,R33,R34 := R32(R33)
187 [-]: JMP       197          ; PC := 197
188 [-]: GETGLOBAL R37 K59      ; R37 := 0x3d106989
189 [-]: LOADK     R38 K60      ; R38 := "KUVA node"
190 [-]: MOVE      R39 R35      ; R39 := R35
191 [-]: LOADK     R40 K61      ; R40 := "="
192 [-]: GETGLOBAL R41 K33      ; R41 := 0x64fb1586
193 [-]: GETTABLE  R42 R36 K34  ; R42 := R36["name"]
194 [-]: CALL      R41 2 2      ; R41 := R41(R42)
195 [-]: CONCAT    R38 R38 R41  ; R38 := R38 .. R39 .. R40 .. R41
196 [-]: CALL      R37 2 1      ; R37(R38)
197 [-]: TFORLOOP  R32 2        ; R35,R36 :=  R32(R33,R34); if R35 ~= nil then begin PC = 188; R34 := R35 end
198 [-]: JMP       188          ; PC := 188
199 [-]: LOADNIL   R37 R37      ; R37 := nil
200 [-]: SELF      R38 R0 K62   ; R39 := R0; R38 := R0[0x69727e0b]
201 [-]: CALL      R38 2 2      ; R38 := R38(R39)
202 [-]: SELF      R38 R38 K63  ; R39 := R38; R38 := R38[0x21fec8ad]
203 [-]: GETGLOBAL R40 K11      ; R40 := 0x0469f296
204 [-]: LOADK     R41 K64      ; R41 := "KuvaFlood"
205 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
206 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
207 [-]: TEST      R38 0        ; if not R38 then PC := 222
208 [-]: JMP       222          ; PC := 222
209 [-]: LEN       R39 R38      ; R39 := # R38
210 [-]: LT        0 K39 R39    ; if 0.000000 >= R39 then PC := 222
211 [-]: JMP       222          ; PC := 222
212 [-]: SELF      R39 R8 K65   ; R40 := R8; R39 := R8[0x3ad9ed31]
213 [-]: GETTABLE  R41 R38 K66  ; R41 := R38[1.000000]
214 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
215 [-]: MOVE      R37 R39      ; R37 := R39
216 [-]: GETGLOBAL R39 K13      ; R39 := 0x5bced4c4
217 [-]: GETTABLE  R39 R39 K67  ; R39 := R39[0xac1b386a]
218 [-]: GETUPVAL  R40 U4       ; R40 := U4
219 [-]: LEN       R41 R18      ; R41 := # R18
220 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
221 [-]: SETTABLE  R18 R39 R37  ; R18[R39] := R37
222 [-]: GETGLOBAL R39 K13      ; R39 := 0x5bced4c4
223 [-]: GETTABLE  R39 R39 K14  ; R39 := R39[0x55f27c30]
224 [-]: GETUPVAL  R40 U0       ; R40 := U0
225 [-]: GETTABLE  R40 R40 K3   ; R40 := R40[0xa01111a5]
226 [-]: CALL      R40 1 2      ; R40 := R40()
227 [-]: GETUPVAL  R41 U0       ; R41 := U0
228 [-]: GETTABLE  R41 R41 K2   ; R41 := R41["KUVA_TOWER_MISSION_INTERVAL"]
229 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
230 [-]: CALL      R39 2 2      ; R39 := R39(R40)
231 [-]: MOD       R39 R39 K68  ; R39 := R39 % 2.000000
232 [-]: GETGLOBAL R40 K31      ; R40 := 0xc8802016
233 [-]: MOVE      R41 R18      ; R41 := R18
234 [-]: CALL      R40 2 4      ; R40,R41,R42 := R40(R41)
235 [-]: JMP       361          ; PC := 361
236 [-]: GETUPVAL  R45 U4       ; R45 := U4
237 [-]: EQ        1 R43 R45    ; if R43 == R45 then PC := 240
238 [-]: JMP       240          ; PC := 240
239 [-]: LOADKB    R45 0 1      ; R45 := false; PC := 240
240 [-]: LOADKB    R45 1 0      ; R45 := true
241 [-]: GETUPVAL  R46 U4       ; R46 := U4
242 [-]: MUL       R46 R39 R46  ; R46 := R39 * R46
243 [-]: ADD       R46 R43 R46  ; R46 := R43 + R46
244 [-]: GETGLOBAL R47 K11      ; R47 := 0x0469f296
245 [-]: LOADK     R48 K69      ; R48 := "KuvaMission"
246 [-]: MOVE      R49 R46      ; R49 := R46
247 [-]: CONCAT    R48 R48 R49  ; R48 := R48 .. R49
248 [-]: CALL      R47 2 2      ; R47 := R47(R48)
249 [-]: GETGLOBAL R48 K33      ; R48 := 0x64fb1586
250 [-]: GETTABLE  R49 R44 K34  ; R49 := R44["name"]
251 [-]: CALL      R48 2 2      ; R48 := R48(R49)
252 [-]: SELF      R49 R0 K70   ; R50 := R0; R49 := R0[0xc3150d06]
253 [-]: MOVE      R51 R47      ; R51 := R47
254 [-]: GETUPVAL  R52 U0       ; R52 := U0
255 [-]: GETTABLE  R52 R52 K2   ; R52 := R52["KUVA_TOWER_MISSION_INTERVAL"]
256 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
257 [-]: TEST      R49 1        ; if R49 then PC := 265
258 [-]: JMP       265          ; PC := 265
259 [-]: TESTSET   R49 R37 0    ; if not R37 then PC := 265 else R49 := R37
260 [-]: JMP       265          ; PC := 265
261 [-]: EQ        1 R37 R44    ; if R37 == R44 then PC := 264
262 [-]: JMP       264          ; PC := 264
263 [-]: LOADKB    R49 0 1      ; R49 := false; PC := 264
264 [-]: LOADKB    R49 1 0      ; R49 := true
265 [-]: GETTABLE  R50 R44 K35  ; R50 := R44["mission"]
266 [-]: SELF      R50 R50 K71  ; R51 := R50; R50 := R50[0x8f89d633]
267 [-]: CALL      R50 2 2      ; R50 := R50(R51)
268 [-]: GETUPVAL  R51 U3       ; R51 := U3
269 [-]: GETTABLE  R51 R51 K73  ; R51 := R51[0x06d055f9]
270 [-]: MOVE      R52 R45      ; R52 := R45
271 [-]: CONST     R53 80       ; R53 := 80.000000
272 [-]: CONST     R54 25       ; R54 := 25.000000
273 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
274 [-]: SETTABLE  R50 K72 R51  ; R50["minEnemyLevel"] := R51
275 [-]: GETUPVAL  R51 U3       ; R51 := U3
276 [-]: GETTABLE  R51 R51 K73  ; R51 := R51[0x06d055f9]
277 [-]: MOVE      R52 R45      ; R52 := R45
278 [-]: CONST     R53 100      ; R53 := 100.000000
279 [-]: CONST     R54 35       ; R54 := 35.000000
280 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
281 [-]: SETTABLE  R50 K74 R51  ; R50["maxEnemyLevel"] := R51
282 [-]: SETTABLE  R50 K75 K66  ; R50["difficulty"] := 1.000000
283 [-]: GETUPVAL  R51 U0       ; R51 := U0
284 [-]: GETTABLE  R51 R51 K76  ; R51 := R51["KUVA_TOWER_GOAL_TAG"]
285 [-]: SETTABLE  R50 K55 R51  ; R50["goalTag"] := R51
286 [-]: SETTABLE  R50 K77 R47  ; R50["periodicMissionTag"] := R47
287 [-]: GETUPVAL  R51 U0       ; R51 := U0
288 [-]: GETTABLE  R51 R51 K2   ; R51 := R51["KUVA_TOWER_MISSION_INTERVAL"]
289 [-]: SETTABLE  R50 K78 R51  ; R50["periodicMissionCooldown"] := R51
290 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
291 [-]: EQ        0 R51 K68    ; if R51 ~= 2.000000 then PC := 295
292 [-]: JMP       295          ; PC := 295
293 [-]: SETTABLE  R50 K79 K80  ; R50["maxWaveNum"] := 5.000000
294 [-]: JMP       324          ; PC := 324
295 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
296 [-]: EQ        0 R51 K47    ; if R51 ~= 8.000000 then PC := 300
297 [-]: JMP       300          ; PC := 300
298 [-]: SETTABLE  R50 K79 K80  ; R50["maxWaveNum"] := 5.000000
299 [-]: JMP       324          ; PC := 324
300 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
301 [-]: EQ        0 R51 K46    ; if R51 ~= 13.000000 then PC := 305
302 [-]: JMP       305          ; PC := 305
303 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
304 [-]: JMP       324          ; PC := 324
305 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
306 [-]: EQ        0 R51 K81    ; if R51 ~= 17.000000 then PC := 310
307 [-]: JMP       310          ; PC := 310
308 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
309 [-]: JMP       324          ; PC := 324
310 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
311 [-]: EQ        0 R51 K82    ; if R51 ~= 7.000000 then PC := 315
312 [-]: JMP       315          ; PC := 315
313 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
314 [-]: JMP       324          ; PC := 324
315 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
316 [-]: EQ        0 R51 K83    ; if R51 ~= 4.000000 then PC := 320
317 [-]: JMP       320          ; PC := 320
318 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
319 [-]: JMP       324          ; PC := 324
320 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
321 [-]: EQ        0 R51 K53    ; if R51 ~= 32.000000 then PC := 324
322 [-]: JMP       324          ; PC := 324
323 [-]: SETTABLE  R50 K79 K66  ; R50["maxWaveNum"] := 1.000000
324 [-]: GETGLOBAL R51 K84      ; R51 := 0x84883f05
325 [-]: GETTABLE  R52 R50 K85  ; R52 := R50["seed"]
326 [-]: GETUPVAL  R53 U0       ; R53 := U0
327 [-]: GETTABLE  R53 R53 K86  ; R53 := R53[0xb53a8957]
328 [-]: CALL      R53 1 2      ; R53 := R53()
329 [-]: MOD       R53 R53 K87  ; R53 := R53 % 24.000000
330 [-]: CALL      R51 3 1      ; R51(R52,R53)
331 [-]: GETGLOBAL R51 K88      ; R51 := 0xffd438ab
332 [-]: CALL      R51 1 2      ; R51 := R51()
333 [-]: SETTABLE  R50 K85 R51  ; R50["seed"] := R51
334 [-]: TEST      R45 0        ; if not R45 then PC := 341
335 [-]: JMP       341          ; PC := 341
336 [-]: GETTABLE  R51 R50 K89  ; R51 := R50["missionReward"]
337 [-]: GETUPVAL  R52 U5       ; R52 := U5
338 [-]: GETTABLE  R52 R52 K91  ; R52 := R52["hard"]
339 [-]: SETTABLE  R51 K90 R52  ; R51["randomizedItems"] := R52
340 [-]: JMP       345          ; PC := 345
341 [-]: GETTABLE  R51 R50 K89  ; R51 := R50["missionReward"]
342 [-]: GETUPVAL  R52 U5       ; R52 := U5
343 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["easy"]
344 [-]: SETTABLE  R51 K90 R52  ; R51["randomizedItems"] := R52
345 [-]: GETGLOBAL R51 K6       ; R51 := _T
346 [-]: GETTABLE  R51 R51 K7   ; R51 := R51["CachedGhostTowerMissions"]
347 [-]: NEWTABLE  R52 0 5      ; R52 := {}
348 [-]: SETTABLE  R52 K93 R50  ; R52["mMissionInfo"] := R50
349 [-]: TESTSET   R53 R5 1     ; if R5 then PC := 352 else R53 := R5
350 [-]: JMP       352          ; PC := 352
351 [-]: MOVE      R53 R3       ; R53 := R3
352 [-]: SETTABLE  R52 K94 R53  ; R52["mUnlocked"] := R53
353 [-]: SETTABLE  R52 K95 R49  ; R52["mShowInStarChart"] := R49
354 [-]: SETTABLE  R52 K96 R7   ; R52["mExpiry"] := R7
355 [-]: SETTABLE  R52 K97 R45  ; R52["mFlood"] := R45
356 [-]: SETTABLE  R51 R48 R52  ; R51[R48] := R52
357 [-]: GETUPVAL  R51 U4       ; R51 := U4
358 [-]: EQ        0 R43 R51    ; if R43 ~= R51 then PC := 361
359 [-]: JMP       361          ; PC := 361
360 [-]: JMP       363          ; PC := 363
361 [-]: TFORLOOP  R40 2        ; R43,R44 :=  R40(R41,R42); if R43 ~= nil then begin PC = 236; R42 := R43 end
362 [-]: JMP       236          ; PC := 236
363 [-]: RETURN    R2 2         ; return R2
364 [-]: RETURN    R0 1         ; return 


; Function #74.1:
;
; Name:            
; Defined at line: 2579
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x03ea2485
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["pos"]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x03ea2485
  6 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["pos"]
  7 [-]: GETUPVAL  R5 U0        ; R5 := U0
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 12
 12 [-]: LOADKB    R2 1 0       ; R2 := true
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 2690
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  71

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["ELITE_ALERT_MISSION_INTERVAL"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xa01111a5]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["ELITE_ALERT_MISSION_INTERVAL"]
  8 [-]: MOD       R2 R2 R3     ; R2 := R2 % R3
  9 [-]: SUB       R1 R1 R2     ; R1 := R1 - R2
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x34291f5c
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x9718be96]
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["ELITE_ALERT_MISSION_INTERVAL"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mWorldStateLastEliteAlertSeed"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: SETTABLE  R3 K4 R2     ; R3["mWorldStateLastEliteAlertSeed"] := R2
 22 [-]: GETGLOBAL R3 K5        ; R3 := 0x4f6851ff
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: CALL      R3 2 1       ; R3(R4)
 25 [-]: GETGLOBAL R3 K6        ; R3 := _T
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: SETTABLE  R3 K7 R4     ; R3["CachedEliteAlertMissions"] := R4
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x5e35d4d6]
 30 [-]: CALL      R3 1 2       ; R3 := R3()
 31 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xc1dee03f]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: GETGLOBAL R5 K10       ; R5 := 0x5bced4c4
 34 [-]: GETTABLE  R5 R5 K11    ; R5 := R5[0x55f27c30]
 35 [-]: GETGLOBAL R6 K12       ; R6 := 0xbe190284
 36 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x67b221fa]
 37 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 38 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 39 [-]: ADD       R5 R5 R1     ; R5 := R5 + R1
 40 [-]: GETUPVAL  R6 U2        ; R6 := U2
 41 [-]: GETTABLE  R6 R6 K14    ; R6 := R6[0x06d055f9]
 42 [-]: GETUPVAL  R7 U0        ; R7 := U0
 43 [-]: GETTABLE  R7 R7 K15    ; R7 := R7[0xb53a8957]
 44 [-]: CALL      R7 1 2       ; R7 := R7()
 45 [-]: MOD       R7 R7 K16    ; R7 := R7 % 2.000000
 46 [-]: EQ        1 R7 K17     ; if R7 == 0.000000 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 49
 49 [-]: LOADKB    R7 1 0       ; R7 := true
 50 [-]: GETUPVAL  R8 U0        ; R8 := U0
 51 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["ELITE_ALERT_PERIODIC_MISSION_TAG"]
 52 [-]: GETUPVAL  R9 U0        ; R9 := U0
 53 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
 54 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 55 [-]: SELF      R7 R0 K20    ; R8 := R0; R7 := R0[0xc3150d06]
 56 [-]: MOVE      R9 R6        ; R9 := R6
 57 [-]: GETUPVAL  R10 U0       ; R10 := U0
 58 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["ELITE_ALERT_MISSION_INTERVAL"]
 59 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 60 [-]: EQ        1 R7 K21     ; if R7 == false then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 63
 63 [-]: LOADKB    R7 1 0       ; R7 := true
 64 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
 65 [-]: SELF      R10 R0 K22   ; R11 := R0; R10 := R0[0x21a1810f]
 66 [-]: GETUPVAL  R12 U0       ; R12 := U0
 67 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["ELITE_ALERT_PERIODIC_MISSION_TAG"]
 68 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 69 [-]: TEST      R10 0        ; if not R10 then PC := 74
 70 [-]: JMP       74           ; PC := 74
 71 [-]: LOADKB    R8 1 0       ; R8 := true
 72 [-]: CONST     R9 0         ; R9 := 0.000000
 73 [-]: JMP       85           ; PC := 85
 74 [-]: GETUPVAL  R10 U0       ; R10 := U0
 75 [-]: GETTABLE  R10 R10 K23  ; R10 := R10[0xe0628359]
 76 [-]: CALL      R10 1 3      ; R10,R11 := R10()
 77 [-]: MOVE      R9 R11       ; R9 := R11
 78 [-]: MOVE      R8 R10       ; R8 := R10
 79 [-]: TEST      R8 0         ; if not R8 then PC := 85
 80 [-]: JMP       85           ; PC := 85
 81 [-]: SELF      R10 R0 K24   ; R11 := R0; R10 := R0[0xbf6c9575]
 82 [-]: GETUPVAL  R12 U0       ; R12 := U0
 83 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["ELITE_ALERT_PERIODIC_MISSION_TAG"]
 84 [-]: CALL      R10 3 1      ; R10(R11,R12)
 85 [-]: LOADKB    R10 1 0      ; R10 := true
 86 [-]: TEST      R8 1         ; if R8 then PC := 116
 87 [-]: JMP       116          ; PC := 116
 88 [-]: CONST     R11 1        ; R11 := 1.000000
 89 [-]: LEN       R12 R4       ; R12 := # R4
 90 [-]: CONST     R13 1        ; R13 := 1.000000
 91 [-]: FORPREP   R11 115      ; R11 -= R13; PC := 115
 92 [-]: GETUPVAL  R15 U0       ; R15 := U0
 93 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["REGION_ID_DOJO"]
 94 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 115
 95 [-]: JMP       115          ; PC := 115
 96 [-]: GETUPVAL  R15 U0       ; R15 := U0
 97 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["REGION_ID_DARK_SECTOR"]
 98 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 115
 99 [-]: JMP       115          ; PC := 115
100 [-]: GETUPVAL  R15 U0       ; R15 := U0
101 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["REGION_ID_DEEP_SPACE"]
102 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 115
103 [-]: JMP       115          ; PC := 115
104 [-]: GETUPVAL  R15 U0       ; R15 := U0
105 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["REGION_ID_ZARIMAN"]
106 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 115
107 [-]: JMP       115          ; PC := 115
108 [-]: GETTABLE  R15 R4 R14   ; R15 := R4[R14]
109 [-]: SELF      R15 R15 K29  ; R16 := R15; R15 := R15[0x699fd1e2]
110 [-]: CALL      R15 2 2      ; R15 := R15(R16)
111 [-]: EQ        0 R15 K17    ; if R15 ~= 0.000000 then PC := 115
112 [-]: JMP       115          ; PC := 115
113 [-]: LOADKB    R10 0 0      ; R10 := false
114 [-]: JMP       116          ; PC := 116
115 [-]: FORLOOP   R11 92       ; R11 += R13; if R11 <= R12 then begin PC := 92; R14 := R11 end
116 [-]: TEST      R8 1         ; if R8 then PC := 123
117 [-]: JMP       123          ; PC := 123
118 [-]: TESTSET   R15 R10 0    ; if not R10 then PC := 127 else R15 := R10
119 [-]: JMP       127          ; PC := 127
120 [-]: LEN       R15 R9       ; R15 := # R9
121 [-]: LE        0 R15 K31    ; if R15 > 20.000000 then PC := 125
122 [-]: JMP       125          ; PC := 125
123 [-]: NOT       R15 R7       ; R15 :=  R7
124 [-]: JMP       127          ; PC := 127
125 [-]: LOADKB    R15 0 1      ; R15 := false; PC := 126
126 [-]: LOADKB    R15 1 0      ; R15 := true
127 [-]: LOADNIL   R16 R16      ; R16 := nil
128 [-]: SELF      R17 R0 K32   ; R18 := R0; R17 := R0[0x69727e0b]
129 [-]: CALL      R17 2 2      ; R17 := R17(R18)
130 [-]: SELF      R17 R17 K33  ; R18 := R17; R17 := R17[0x21fec8ad]
131 [-]: GETGLOBAL R19 K34      ; R19 := 0x0469f296
132 [-]: LOADK     R20 K35      ; R20 := "EliteAlert"
133 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
134 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
135 [-]: TEST      R17 0        ; if not R17 then PC := 145
136 [-]: JMP       145          ; PC := 145
137 [-]: LEN       R18 R17      ; R18 := # R17
138 [-]: LT        0 K17 R18    ; if 0.000000 >= R18 then PC := 145
139 [-]: JMP       145          ; PC := 145
140 [-]: SELF      R18 R3 K36   ; R19 := R3; R18 := R3[0x3ad9ed31]
141 [-]: GETTABLE  R20 R17 K37  ; R20 := R17[1.000000]
142 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
143 [-]: MOVE      R16 R18      ; R16 := R18
144 [-]: JMP       274          ; PC := 274
145 [-]: NEWTABLE  R18 0 0      ; R18 := {}
146 [-]: NEWTABLE  R19 0 0      ; R19 := {}
147 [-]: CONST     R20 1        ; R20 := 1.000000
148 [-]: LEN       R21 R4       ; R21 := # R4
149 [-]: CONST     R22 1        ; R22 := 1.000000
150 [-]: FORPREP   R20 176      ; R20 -= R22; PC := 176
151 [-]: GETUPVAL  R24 U0       ; R24 := U0
152 [-]: GETTABLE  R24 R24 K38  ; R24 := R24["REGION_ID_FORTRESS"]
153 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 176
154 [-]: JMP       176          ; PC := 176
155 [-]: GETUPVAL  R24 U0       ; R24 := U0
156 [-]: GETTABLE  R24 R24 K25  ; R24 := R24["REGION_ID_DOJO"]
157 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 176
158 [-]: JMP       176          ; PC := 176
159 [-]: GETUPVAL  R24 U0       ; R24 := U0
160 [-]: GETTABLE  R24 R24 K26  ; R24 := R24["REGION_ID_DARK_SECTOR"]
161 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 176
162 [-]: JMP       176          ; PC := 176
163 [-]: GETUPVAL  R24 U0       ; R24 := U0
164 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["REGION_ID_DEEP_SPACE"]
165 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 176
166 [-]: JMP       176          ; PC := 176
167 [-]: GETUPVAL  R24 U0       ; R24 := U0
168 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["REGION_ID_ZARIMAN"]
169 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R24 K39      ; R24 := 0x33bdd652
172 [-]: GETTABLE  R24 R24 K40  ; R24 := R24[0x23d5322f]
173 [-]: MOVE      R25 R19      ; R25 := R19
174 [-]: MOVE      R26 R23      ; R26 := R23
175 [-]: CALL      R24 3 1      ; R24(R25,R26)
176 [-]: FORLOOP   R20 151      ; R20 += R22; if R20 <= R21 then begin PC := 151; R23 := R20 end
177 [-]: GETUPVAL  R24 U2       ; R24 := U2
178 [-]: GETTABLE  R24 R24 K41  ; R24 := R24[0xb8f73de1]
179 [-]: MOVE      R25 R19      ; R25 := R19
180 [-]: CALL      R24 2 1      ; R24(R25)
181 [-]: LOADNIL   R24 R25      ; R24 := R25 := nil
182 [-]: LOADKB    R26 0 0      ; R26 := false
183 [-]: TEST      R26 0        ; if not R26 then PC := 203
184 [-]: JMP       203          ; PC := 203
185 [-]: NEWTABLE  R27 0 0      ; R27 := {}
186 [-]: MOVE      R24 R27      ; R24 := R27
187 [-]: CONST     R27 1        ; R27 := 1.000000
188 [-]: LEN       R28 R19      ; R28 := # R19
189 [-]: CONST     R29 1        ; R29 := 1.000000
190 [-]: FORPREP   R27 197      ; R27 -= R29; PC := 197
191 [-]: GETTABLE  R31 R19 R30  ; R31 := R19[R30]
192 [-]: GETGLOBAL R32 K39      ; R32 := 0x33bdd652
193 [-]: GETTABLE  R32 R32 K40  ; R32 := R32[0x23d5322f]
194 [-]: MOVE      R33 R24      ; R33 := R24
195 [-]: GETTABLE  R34 R4 R31   ; R34 := R4[R31]
196 [-]: CALL      R32 3 1      ; R32(R33,R34)
197 [-]: FORLOOP   R27 191      ; R27 += R29; if R27 <= R28 then begin PC := 191; R30 := R27 end
198 [-]: NEWTABLE  R32 1 0      ; R32 := {}
199 [-]: CONST     R33 0        ; R33 := 0.000000
200 [-]: SETLIST   R32 1 1      ; R32[(1-1)*FPF+i] := R(32+i), 1 <= i <= 1
201 [-]: MOVE      R25 R32      ; R25 := R32
202 [-]: JMP       218          ; PC := 218
203 [-]: GETTABLE  R32 R19 K37  ; R32 := R19[1.000000]
204 [-]: NEWTABLE  R33 1 0      ; R33 := {}
205 [-]: GETTABLE  R34 R4 R32   ; R34 := R4[R32]
206 [-]: SETLIST   R33 1 1      ; R33[(1-1)*FPF+i] := R(33+i), 1 <= i <= 1
207 [-]: MOVE      R24 R33      ; R24 := R33
208 [-]: NEWTABLE  R33 7 0      ; R33 := {}
209 [-]: CONST     R34 2        ; R34 := 2.000000
210 [-]: CONST     R35 8        ; R35 := 8.000000
211 [-]: CONST     R36 13       ; R36 := 13.000000
212 [-]: CONST     R37 21       ; R37 := 21.000000
213 [-]: CONST     R38 17       ; R38 := 17.000000
214 [-]: CONST     R39 27       ; R39 := 27.000000
215 [-]: CONST     R40 32       ; R40 := 32.000000
216 [-]: SETLIST   R33 7 1      ; R33[(1-1)*FPF+i] := R(33+i), 1 <= i <= 7
217 [-]: MOVE      R25 R33      ; R25 := R33
218 [-]: GETGLOBAL R33 K42      ; R33 := 0xcfc01047
219 [-]: MOVE      R34 R24      ; R34 := R24
220 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
221 [-]: JMP       267          ; PC := 267
222 [-]: GETGLOBAL R38 K42      ; R38 := 0xcfc01047
223 [-]: GETTABLE  R39 R37 K43  ; R39 := R37["sectors"]
224 [-]: CALL      R38 2 4      ; R38,R39,R40 := R38(R39)
225 [-]: JMP       265          ; PC := 265
226 [-]: GETGLOBAL R43 K44      ; R43 := 0x64fb1586
227 [-]: GETTABLE  R44 R42 K45  ; R44 := R42["name"]
228 [-]: CALL      R43 2 2      ; R43 := R43(R44)
229 [-]: EQ        1 R43 K46    ; if R43 == "" then PC := 265
230 [-]: JMP       265          ; PC := 265
231 [-]: GETTABLE  R44 R42 K47  ; R44 := R42["nodeType"]
232 [-]: EQ        1 R44 K17    ; if R44 == 0.000000 then PC := 237
233 [-]: JMP       237          ; PC := 237
234 [-]: GETTABLE  R44 R42 K47  ; R44 := R42["nodeType"]
235 [-]: EQ        0 R44 K48    ; if R44 ~= 4.000000 then PC := 265
236 [-]: JMP       265          ; PC := 265
237 [-]: GETTABLE  R44 R42 K49  ; R44 := R42["mission"]
238 [-]: GETTABLE  R44 R44 K50  ; R44 := R44["goalTag"]
239 [-]: GETGLOBAL R45 K51      ; R45 := EMPTY_SYMBOL
240 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 265
241 [-]: JMP       265          ; PC := 265
242 [-]: GETTABLE  R44 R42 K49  ; R44 := R42["mission"]
243 [-]: GETTABLE  R44 R44 K52  ; R44 := R44["archwingRequired"]
244 [-]: TEST      R44 1        ; if R44 then PC := 265
245 [-]: JMP       265          ; PC := 265
246 [-]: GETGLOBAL R44 K53      ; R44 := 0x7b998233
247 [-]: GETTABLE  R45 R42 K49  ; R45 := R42["mission"]
248 [-]: GETTABLE  R45 R45 K54  ; R45 := R45["levelOverride"]
249 [-]: CALL      R44 2 2      ; R44 := R44(R45)
250 [-]: TEST      R44 1        ; if R44 then PC := 265
251 [-]: JMP       265          ; PC := 265
252 [-]: GETUPVAL  R44 U2       ; R44 := U2
253 [-]: GETTABLE  R44 R44 K55  ; R44 := R44[0x609b196e]
254 [-]: MOVE      R45 R25      ; R45 := R25
255 [-]: GETTABLE  R46 R42 K49  ; R46 := R42["mission"]
256 [-]: GETTABLE  R46 R46 K56  ; R46 := R46["missionType"]
257 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
258 [-]: LT        0 K17 R44    ; if 0.000000 >= R44 then PC := 265
259 [-]: JMP       265          ; PC := 265
260 [-]: GETGLOBAL R44 K39      ; R44 := 0x33bdd652
261 [-]: GETTABLE  R44 R44 K40  ; R44 := R44[0x23d5322f]
262 [-]: MOVE      R45 R18      ; R45 := R18
263 [-]: MOVE      R46 R42      ; R46 := R42
264 [-]: CALL      R44 3 1      ; R44(R45,R46)
265 [-]: TFORLOOP  R38 2        ; R41,R42 :=  R38(R39,R40); if R41 ~= nil then begin PC = 226; R40 := R41 end
266 [-]: JMP       226          ; PC := 226
267 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 222; R35 := R36 end
268 [-]: JMP       222          ; PC := 222
269 [-]: GETUPVAL  R44 U2       ; R44 := U2
270 [-]: GETTABLE  R44 R44 K41  ; R44 := R44[0xb8f73de1]
271 [-]: MOVE      R45 R18      ; R45 := R18
272 [-]: CALL      R44 2 1      ; R44(R45)
273 [-]: GETTABLE  R16 R18 K37  ; R16 := R18[1.000000]
274 [-]: TEST      R16 1        ; if R16 then PC := 278
275 [-]: JMP       278          ; PC := 278
276 [-]: LOADNIL   R44 R44      ; R44 := nil
277 [-]: RETURN    R44 2        ; return R44
278 [-]: GETGLOBAL R44 K44      ; R44 := 0x64fb1586
279 [-]: GETTABLE  R45 R16 K45  ; R45 := R16["name"]
280 [-]: CALL      R44 2 2      ; R44 := R44(R45)
281 [-]: GETTABLE  R45 R16 K49  ; R45 := R16["mission"]
282 [-]: SELF      R45 R45 K57  ; R46 := R45; R45 := R45[0x8f89d633]
283 [-]: CALL      R45 2 2      ; R45 := R45(R46)
284 [-]: SELF      R46 R45 K58  ; R47 := R45; R46 := R45[0xa76123ac]
285 [-]: CALL      R46 2 1      ; R46(R47)
286 [-]: SELF      R46 R45 K59  ; R47 := R45; R46 := R45[0x1a812eb5]
287 [-]: CALL      R46 2 1      ; R46(R47)
288 [-]: SETTABLE  R45 K60 K61  ; R45["minEnemyLevel"] := 60.000000
289 [-]: SETTABLE  R45 K62 K63  ; R45["maxEnemyLevel"] := 80.000000
290 [-]: SETTABLE  R45 K64 K37  ; R45["difficulty"] := 1.000000
291 [-]: SETTABLE  R45 K65 K66  ; R45["maxSuitReq"] := true
292 [-]: SETTABLE  R45 K67 R6   ; R45["periodicMissionTag"] := R6
293 [-]: GETUPVAL  R46 U0       ; R46 := U0
294 [-]: GETTABLE  R46 R46 K0   ; R46 := R46["ELITE_ALERT_MISSION_INTERVAL"]
295 [-]: SETTABLE  R45 K68 R46  ; R45["periodicMissionCooldown"] := R46
296 [-]: GETGLOBAL R46 K70      ; R46 := 0x0032441c
297 [-]: GETTABLE  R46 R46 K71  ; R46 := R46["UITexture_EliteAlert"]
298 [-]: SETTABLE  R45 K69 R46  ; R45["icon"] := R46
299 [-]: GETTABLE  R46 R45 K56  ; R46 := R45["missionType"]
300 [-]: EQ        0 R46 K72    ; if R46 ~= 8.000000 then PC := 309
301 [-]: JMP       309          ; PC := 309
302 [-]: GETTABLE  R46 R16 K73  ; R46 := R16["region"]
303 [-]: GETUPVAL  R47 U0       ; R47 := U0
304 [-]: GETTABLE  R47 R47 K74  ; R47 := R47["REGION_ID_MOON"]
305 [-]: EQ        1 R46 R47    ; if R46 == R47 then PC := 309
306 [-]: JMP       309          ; PC := 309
307 [-]: GETUPVAL  R46 U3       ; R46 := U3
308 [-]: SETTABLE  R45 K75 R46  ; R45["vipAgent"] := R46
309 [-]: GETTABLE  R46 R45 K52  ; R46 := R45["archwingRequired"]
310 [-]: TEST      R46 0        ; if not R46 then PC := 314
311 [-]: JMP       314          ; PC := 314
312 [-]: GETTABLE  R46 R45 K76  ; R46 := R45["isSharkwingMission"]
313 [-]: NOT       R46 R46      ; R46 :=  R46
314 [-]: TEST      R46 0        ; if not R46 then PC := 322
315 [-]: JMP       322          ; PC := 322
316 [-]: GETTABLE  R47 R45 K60  ; R47 := R45["minEnemyLevel"]
317 [-]: DIV       R47 R47 K16  ; R47 := R47 / 2.000000
318 [-]: SETTABLE  R45 K60 R47  ; R45["minEnemyLevel"] := R47
319 [-]: GETTABLE  R47 R45 K62  ; R47 := R45["maxEnemyLevel"]
320 [-]: DIV       R47 R47 K16  ; R47 := R47 / 2.000000
321 [-]: SETTABLE  R45 K62 R47  ; R45["maxEnemyLevel"] := R47
322 [-]: GETGLOBAL R47 K77      ; R47 := 0x84883f05
323 [-]: GETTABLE  R48 R45 K78  ; R48 := R45["seed"]
324 [-]: GETUPVAL  R49 U0       ; R49 := U0
325 [-]: GETTABLE  R49 R49 K15  ; R49 := R49[0xb53a8957]
326 [-]: CALL      R49 1 2      ; R49 := R49()
327 [-]: MOD       R49 R49 K79  ; R49 := R49 % 24.000000
328 [-]: CALL      R47 3 1      ; R47(R48,R49)
329 [-]: GETGLOBAL R47 K80      ; R47 := 0x0997dbe6
330 [-]: GETGLOBAL R48 K81      ; R48 := 0x0c5e62f9
331 [-]: CONST     R49 0        ; R49 := 0.000000
332 [-]: LOADK     R50 K82      ; R50 := 1000000.000000
333 [-]: CALL      R48 3 0      ; R48,... := R48(R49,R50)
334 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
335 [-]: SETTABLE  R45 K78 R47  ; R45["seed"] := R47
336 [-]: GETTABLE  R47 R45 K83  ; R47 := R45["missionReward"]
337 [-]: SETTABLE  R47 K84 K85  ; R47["credits"] := 50000.000000
338 [-]: GETTABLE  R47 R45 K83  ; R47 := R45["missionReward"]
339 [-]: NEWTABLE  R48 0 0      ; R48 := {}
340 [-]: GETGLOBAL R49 K30      ; R49 := 0x6c97a788
341 [-]: GETTABLE  R49 R49 K87  ; R49 := R49[0x925e2bbb]
342 [-]: GETUPVAL  R50 U4       ; R50 := U4
343 [-]: CONST     R51 1        ; R51 := 1.000000
344 [-]: CALL      R49 3 0      ; R49,... := R49(R50,R51)
345 [-]: SETLIST   R48 0 1      ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 0
346 [-]: SETTABLE  R47 K86 R48  ; R47["countedItems"] := R48
347 [-]: GETTABLE  R47 R45 K83  ; R47 := R45["missionReward"]
348 [-]: GETGLOBAL R48 K89      ; R48 := 0xb009bbc6
349 [-]: GETGLOBAL R49 K90      ; R49 := 0xa94df70b
350 [-]: SELF      R49 R49 K91  ; R50 := R49; R49 := R49[0xc3b3ec6b]
351 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
352 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
353 [-]: SETTABLE  R47 K88 R48  ; R47["randomizedItems"] := R48
354 [-]: SELF      R47 R45 K92  ; R48 := R45; R47 := R45[0xafd5ace5]
355 [-]: CONST     R49 19       ; R49 := 19.000000
356 [-]: CONST     R50 4        ; R50 := 4.000000
357 [-]: CONST     R51 10000    ; R51 := 10000.000000
358 [-]: GETGLOBAL R52 K94      ; R52 := gTennoAvatarType
359 [-]: LOADNIL   R53 R53      ; R53 := nil
360 [-]: CONST     R54 25       ; R54 := 25.000000
361 [-]: GETGLOBAL R55 K51      ; R55 := EMPTY_SYMBOL
362 [-]: CALL      R47 9 1      ; R47(R48,R49,R50,R51,R52,R53,R54,R55)
363 [-]: GETGLOBAL R47 K95      ; R47 := 0x76ea806b
364 [-]: SELF      R47 R47 K96  ; R48 := R47; R47 := R47[0x3f3ae64c]
365 [-]: CONST     R49 0        ; R49 := 0.000000
366 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
367 [-]: SELF      R47 R47 K97  ; R48 := R47; R47 := R47[0x5ca33548]
368 [-]: CALL      R47 2 2      ; R47 := R47(R48)
369 [-]: GETUPVAL  R48 U0       ; R48 := U0
370 [-]: GETTABLE  R48 R48 K98  ; R48 := R48[0x4c1fdc6a]
371 [-]: MOVE      R49 R47      ; R49 := R47
372 [-]: CALL      R48 2 2      ; R48 := R48(R49)
373 [-]: GETUPVAL  R49 U0       ; R49 := U0
374 [-]: GETTABLE  R49 R49 K99  ; R49 := R49[0x31e65198]
375 [-]: MOVE      R50 R47      ; R50 := R47
376 [-]: MOVE      R51 R48      ; R51 := R48
377 [-]: CALL      R49 3 9      ; R49,R50,R51,R52,R53,R54,R55,R56 := R49(R50,R51)
378 [-]: NEWTABLE  R57 0 0      ; R57 := {}
379 [-]: CONST     R58 1        ; R58 := 1.000000
380 [-]: LEN       R59 R57      ; R59 := # R57
381 [-]: CONST     R60 1        ; R60 := 1.000000
382 [-]: FORPREP   R58 386      ; R58 -= R60; PC := 386
383 [-]: GETTABLE  R62 R57 R61  ; R62 := R57[R61]
384 [-]: GETTABLE  R62 R62 K100 ; R62 := R62["label"]
385 [-]: SETTABLE  R57 R61 R62  ; R57[R61] := R62
386 [-]: FORLOOP   R58 383      ; R58 += R60; if R58 <= R59 then begin PC := 383; R61 := R58 end
387 [-]: GETGLOBAL R62 K6       ; R62 := _T
388 [-]: GETTABLE  R62 R62 K7   ; R62 := R62["CachedEliteAlertMissions"]
389 [-]: NEWTABLE  R63 0 10     ; R63 := {}
390 [-]: SETTABLE  R63 K101 R45 ; R63["mMissionInfo"] := R45
391 [-]: TESTSET   R64 R15 0    ; if not R15 then PC := 394 else R64 := R15
392 [-]: JMP       394          ; PC := 394
393 [-]: MOVE      R64 R8       ; R64 := R8
394 [-]: SETTABLE  R63 K102 R64 ; R63["mUnlocked"] := R64
395 [-]: SETTABLE  R63 K103 R15 ; R63["mVisible"] := R15
396 [-]: TESTSET   R64 R15 0    ; if not R15 then PC := 399 else R64 := R15
397 [-]: JMP       399          ; PC := 399
398 [-]: MOVE      R64 R8       ; R64 := R8
399 [-]: SETTABLE  R63 K104 R64 ; R63["mShowInStarChart"] := R64
400 [-]: SETTABLE  R63 K105 R5  ; R63["mExpiry"] := R5
401 [-]: SETTABLE  R63 K106 R49 ; R63["mSuitStoreItem"] := R49
402 [-]: SETTABLE  R63 K107 R52 ; R63["mSuitMods"] := R52
403 [-]: SETTABLE  R63 K108 R53 ; R63["mWeaponStoreItems"] := R53
404 [-]: SETTABLE  R63 K109 R57 ; R63["mWeaponMods"] := R57
405 [-]: SETTABLE  R63 K110 R7  ; R63["mCompleted"] := R7
406 [-]: SETTABLE  R62 R44 R63  ; R62[R44] := R63
407 [-]: GETGLOBAL R62 K111     ; R62 := 0x3d106989
408 [-]: LOADK     R63 K112     ; R63 := "EliteAlertMission at "
409 [-]: MOVE      R64 R44      ; R64 := R44
410 [-]: LOADK     R65 K113     ; R65 := " ("
411 [-]: GETGLOBAL R66 K114     ; R66 := 0x603636ad
412 [-]: GETTABLE  R67 R16 K73  ; R67 := R16["region"]
413 [-]: ADD       R67 R67 K37  ; R67 := R67 + 1.000000
414 [-]: GETTABLE  R67 R4 R67   ; R67 := R4[R67]
415 [-]: GETTABLE  R67 R67 K45  ; R67 := R67["name"]
416 [-]: LOADKB    R68 0 0      ; R68 := false
417 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
418 [-]: LOADK     R67 K115     ; R67 := " - "
419 [-]: GETGLOBAL R68 K114     ; R68 := 0x603636ad
420 [-]: GETGLOBAL R69 K44      ; R69 := 0x64fb1586
421 [-]: GETTABLE  R70 R16 K116 ; R70 := R16["locTag"]
422 [-]: CALL      R69 2 2      ; R69 := R69(R70)
423 [-]: LOADKB    R70 0 0      ; R70 := false
424 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
425 [-]: LOADK     R69 K117     ; R69 := ")"
426 [-]: CONCAT    R63 R63 R69  ; R63 := R63 .. R64 .. R65 .. R66 .. R67 .. R68 .. R69
427 [-]: CALL      R62 2 1      ; R62(R63)
428 [-]: RETURN    R1 2         ; return R1
429 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 2836
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x9718be96]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["NIGHTMARE_MISSION_INTERVAL"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mWorldStateLastNightmareSeed"]
  8 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: SETTABLE  R2 K3 R1     ; R2["mWorldStateLastNightmareSeed"] := R1
 13 [-]: GETGLOBAL R2 K4        ; R2 := _T
 14 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 15 [-]: SETTABLE  R2 K5 R3     ; R2["CachedSkullNodes"] := R3
 16 [-]: GETGLOBAL R2 K6        ; R2 := 0x1239e0a2
 17 [-]: CALL      R2 1 2       ; R2 := R2()
 18 [-]: TEST      R2 0         ; if not R2 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0x9ba7909f
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xbf9494fc]
 23 [-]: LOADK     R4 K9        ; R4 := "LotusGameRules.AlwaysNightmare"
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: LOADKB    R3 0 0       ; R3 := false
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x5e35d4d6]
 28 [-]: CALL      R4 1 2       ; R4 := R4()
 29 [-]: SELF      R5 R4 K11    ; R6 := R4; R5 := R4[0xc1dee03f]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: SELF      R6 R4 K12    ; R7 := R4; R6 := R4[0xd13b47be]
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 34 [-]: CONST     R8 1         ; R8 := 1.000000
 35 [-]: LEN       R9 R5        ; R9 := # R5
 36 [-]: CONST     R10 1        ; R10 := 1.000000
 37 [-]: FORPREP   R8 43        ; R8 -= R10; PC := 43
 38 [-]: GETGLOBAL R12 K13      ; R12 := 0x33bdd652
 39 [-]: GETTABLE  R12 R12 K14  ; R12 := R12[0x23d5322f]
 40 [-]: MOVE      R13 R7       ; R13 := R7
 41 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 42 [-]: CALL      R12 3 1      ; R12(R13,R14)
 43 [-]: FORLOOP   R8 38        ; R8 += R10; if R8 <= R9 then begin PC := 38; R11 := R8 end
 44 [-]: CONST     R12 1        ; R12 := 1.000000
 45 [-]: LEN       R13 R6       ; R13 := # R6
 46 [-]: CONST     R14 1        ; R14 := 1.000000
 47 [-]: FORPREP   R12 59       ; R12 -= R14; PC := 59
 48 [-]: GETGLOBAL R16 K15      ; R16 := 0xce225efa
 49 [-]: CONST     R17 0        ; R17 := 0.000000
 50 [-]: CALL      R16 2 1      ; R16(R17)
 51 [-]: GETTABLE  R16 R6 R15   ; R16 := R6[R15]
 52 [-]: GETTABLE  R17 R16 K16  ; R17 := R16["region"]
 53 [-]: ADD       R17 R17 K17  ; R17 := R17 + 1.000000
 54 [-]: GETGLOBAL R18 K13      ; R18 := 0x33bdd652
 55 [-]: GETTABLE  R18 R18 K14  ; R18 := R18[0x23d5322f]
 56 [-]: GETTABLE  R19 R7 R17   ; R19 := R7[R17]
 57 [-]: MOVE      R20 R16      ; R20 := R16
 58 [-]: CALL      R18 3 1      ; R18(R19,R20)
 59 [-]: FORLOOP   R12 48       ; R12 += R14; if R12 <= R13 then begin PC := 48; R15 := R12 end
 60 [-]: GETGLOBAL R18 K18      ; R18 := 0x4f6851ff
 61 [-]: MOVE      R19 R1       ; R19 := R1
 62 [-]: CALL      R18 2 1      ; R18(R19)
 63 [-]: CONST     R18 1        ; R18 := 1.000000
 64 [-]: LEN       R19 R5       ; R19 := # R5
 65 [-]: CONST     R20 1        ; R20 := 1.000000
 66 [-]: FORPREP   R18 75       ; R18 -= R20; PC := 75
 67 [-]: GETTABLE  R22 R7 R21   ; R22 := R7[R21]
 68 [-]: LEN       R22 R22      ; R22 := # R22
 69 [-]: LT        0 K19 R22    ; if 0.000000 >= R22 then PC := 75
 70 [-]: JMP       75           ; PC := 75
 71 [-]: GETUPVAL  R22 U2       ; R22 := U2
 72 [-]: GETTABLE  R22 R22 K20  ; R22 := R22[0xb8f73de1]
 73 [-]: GETTABLE  R23 R7 R21   ; R23 := R7[R21]
 74 [-]: CALL      R22 2 1      ; R22(R23)
 75 [-]: FORLOOP   R18 67       ; R18 += R20; if R18 <= R19 then begin PC := 67; R21 := R18 end
 76 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 77 [-]: CONST     R23 1        ; R23 := 1.000000
 78 [-]: LEN       R24 R5       ; R24 := # R5
 79 [-]: CONST     R25 1        ; R25 := 1.000000
 80 [-]: FORPREP   R23 237      ; R23 -= R25; PC := 237
 81 [-]: GETTABLE  R27 R5 R26   ; R27 := R5[R26]
 82 [-]: SELF      R27 R27 K21  ; R28 := R27; R27 := R27[0x699fd1e2]
 83 [-]: CALL      R27 2 2      ; R27 := R27(R28)
 84 [-]: EQ        1 R27 K23    ; if R27 == 2.000000 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: TESTSET   R27 R3 1     ; if R3 then PC := 92 else R27 := R3
 87 [-]: JMP       92           ; PC := 92
 88 [-]: MOVE      R27 R2       ; R27 := R2
 89 [-]: JMP       92           ; PC := 92
 90 [-]: LOADKB    R27 0 1      ; R27 := false; PC := 91
 91 [-]: LOADKB    R27 1 0      ; R27 := true
 92 [-]: LOADK     R28 K24      ; R28 := "NightmareRegion"
 93 [-]: MOVE      R29 R26      ; R29 := R26
 94 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
 95 [-]: GETUPVAL  R29 U0       ; R29 := U0
 96 [-]: GETTABLE  R29 R29 K25  ; R29 := R29["REGION_ID_DOJO"]
 97 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
 98 [-]: JMP       119          ; PC := 119
 99 [-]: GETUPVAL  R29 U0       ; R29 := U0
100 [-]: GETTABLE  R29 R29 K26  ; R29 := R29["REGION_ID_DARK_SECTOR"]
101 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
102 [-]: JMP       119          ; PC := 119
103 [-]: GETUPVAL  R29 U0       ; R29 := U0
104 [-]: GETTABLE  R29 R29 K27  ; R29 := R29["REGION_ID_DEEP_SPACE"]
105 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
106 [-]: JMP       119          ; PC := 119
107 [-]: GETUPVAL  R29 U0       ; R29 := U0
108 [-]: GETTABLE  R29 R29 K28  ; R29 := R29["REGION_ID_ZARIMAN"]
109 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
110 [-]: JMP       119          ; PC := 119
111 [-]: SELF      R29 R0 K29   ; R30 := R0; R29 := R0[0xc3150d06]
112 [-]: GETGLOBAL R31 K30      ; R31 := 0x0469f296
113 [-]: MOVE      R32 R28      ; R32 := R28
114 [-]: CALL      R31 2 2      ; R31 := R31(R32)
115 [-]: GETUPVAL  R32 U0       ; R32 := U0
116 [-]: GETTABLE  R32 R32 K2   ; R32 := R32["NIGHTMARE_MISSION_INTERVAL"]
117 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
118 [-]: JMP       121          ; PC := 121
119 [-]: LOADKB    R29 0 1      ; R29 := false; PC := 120
120 [-]: LOADKB    R29 1 0      ; R29 := true
121 [-]: TEST      R27 0        ; if not R27 then PC := 237
122 [-]: JMP       237          ; PC := 237
123 [-]: TEST      R29 0        ; if not R29 then PC := 237
124 [-]: JMP       237          ; PC := 237
125 [-]: GETTABLE  R30 R7 R26   ; R30 := R7[R26]
126 [-]: LEN       R30 R30      ; R30 := # R30
127 [-]: LT        0 K19 R30    ; if 0.000000 >= R30 then PC := 237
128 [-]: JMP       237          ; PC := 237
129 [-]: LOADNIL   R30 R30      ; R30 := nil
130 [-]: TEST      R2 0         ; if not R2 then PC := 135
131 [-]: JMP       135          ; PC := 135
132 [-]: GETTABLE  R31 R7 R26   ; R31 := R7[R26]
133 [-]: LEN       R30 R31      ; R30 := # R31
134 [-]: JMP       136          ; PC := 136
135 [-]: CONST     R30 1        ; R30 := 1.000000
136 [-]: CONST     R31 1        ; R31 := 1.000000
137 [-]: GETTABLE  R32 R7 R26   ; R32 := R7[R26]
138 [-]: LEN       R32 R32      ; R32 := # R32
139 [-]: CONST     R33 1        ; R33 := 1.000000
140 [-]: FORPREP   R31 236      ; R31 -= R33; PC := 236
141 [-]: GETTABLE  R35 R7 R26   ; R35 := R7[R26]
142 [-]: GETTABLE  R35 R35 R34  ; R35 := R35[R34]
143 [-]: GETGLOBAL R36 K31      ; R36 := 0x64fb1586
144 [-]: GETTABLE  R37 R35 K32  ; R37 := R35["name"]
145 [-]: CALL      R36 2 2      ; R36 := R36(R37)
146 [-]: EQ        1 R36 K33    ; if R36 == "" then PC := 236
147 [-]: JMP       236          ; PC := 236
148 [-]: GETGLOBAL R37 K34      ; R37 := 0x7b998233
149 [-]: GETTABLE  R38 R35 K35  ; R38 := R35["mission"]
150 [-]: GETTABLE  R38 R38 K36  ; R38 := R38["levelOverride"]
151 [-]: CALL      R37 2 2      ; R37 := R37(R38)
152 [-]: TEST      R37 1        ; if R37 then PC := 236
153 [-]: JMP       236          ; PC := 236
154 [-]: GETTABLE  R37 R35 K37  ; R37 := R35["nodeType"]
155 [-]: EQ        0 R37 K19    ; if R37 ~= 0.000000 then PC := 236
156 [-]: JMP       236          ; PC := 236
157 [-]: GETGLOBAL R37 K4       ; R37 := _T
158 [-]: GETTABLE  R37 R37 K38  ; R37 := R37["CachedSortieMissions"]
159 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
160 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
161 [-]: JMP       236          ; PC := 236
162 [-]: GETGLOBAL R37 K4       ; R37 := _T
163 [-]: GETTABLE  R37 R37 K40  ; R37 := R37["CachedActiveMissions"]
164 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
165 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
166 [-]: JMP       236          ; PC := 236
167 [-]: GETGLOBAL R37 K4       ; R37 := _T
168 [-]: GETTABLE  R37 R37 K41  ; R37 := R37["CachedAlerts"]
169 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
170 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
171 [-]: JMP       236          ; PC := 236
172 [-]: GETGLOBAL R37 K4       ; R37 := _T
173 [-]: GETTABLE  R37 R37 K42  ; R37 := R37["CachedInvasionInfo"]
174 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
175 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
176 [-]: JMP       236          ; PC := 236
177 [-]: GETGLOBAL R37 K43      ; R37 := 0x0032441c
178 [-]: GETTABLE  R37 R37 K44  ; R37 := R37["CachedGoalInfo"]
179 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
180 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
181 [-]: JMP       236          ; PC := 236
182 [-]: GETGLOBAL R37 K43      ; R37 := 0x0032441c
183 [-]: GETTABLE  R37 R37 K45  ; R37 := R37["MergedGoalNodes"]
184 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
185 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
186 [-]: JMP       236          ; PC := 236
187 [-]: GETGLOBAL R37 K4       ; R37 := _T
188 [-]: GETTABLE  R37 R37 K46  ; R37 := R37["CachedSyndicateMissions"]
189 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
190 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
191 [-]: JMP       236          ; PC := 236
192 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
193 [-]: GETTABLE  R37 R37 K47  ; R37 := R37["archwingRequired"]
194 [-]: TEST      R37 0        ; if not R37 then PC := 200
195 [-]: JMP       200          ; PC := 200
196 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
197 [-]: GETTABLE  R37 R37 K48  ; R37 := R37["isSharkwingMission"]
198 [-]: TEST      R37 0        ; if not R37 then PC := 236
199 [-]: JMP       236          ; PC := 236
200 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
201 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
202 [-]: EQ        1 R37 K50    ; if R37 == 22.000000 then PC := 236
203 [-]: JMP       236          ; PC := 236
204 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
205 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
206 [-]: EQ        1 R37 K51    ; if R37 == 28.000000 then PC := 236
207 [-]: JMP       236          ; PC := 236
208 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
209 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
210 [-]: EQ        1 R37 K52    ; if R37 == 36.000000 then PC := 236
211 [-]: JMP       236          ; PC := 236
212 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
213 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
214 [-]: EQ        1 R37 K53    ; if R37 == 30.000000 then PC := 236
215 [-]: JMP       236          ; PC := 236
216 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
217 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
218 [-]: EQ        1 R37 K54    ; if R37 == 31.000000 then PC := 236
219 [-]: JMP       236          ; PC := 236
220 [-]: SELF      R37 R4 K55   ; R38 := R4; R37 := R4[0x3ad9ed31]
221 [-]: GETTABLE  R39 R35 K32  ; R39 := R35["name"]
222 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
223 [-]: GETTABLE  R37 R37 K35  ; R37 := R37["mission"]
224 [-]: GETTABLE  R37 R37 K56  ; R37 := R37["faction"]
225 [-]: GETTABLE  R38 R35 K35  ; R38 := R35["mission"]
226 [-]: GETTABLE  R38 R38 K56  ; R38 := R38["faction"]
227 [-]: EQ        0 R38 R37    ; if R38 ~= R37 then PC := 236
228 [-]: JMP       236          ; PC := 236
229 [-]: LEN       R38 R22      ; R38 := # R22
230 [-]: ADD       R38 R38 K17  ; R38 := R38 + 1.000000
231 [-]: SETTABLE  R22 R38 R35  ; R22[R38] := R35
232 [-]: SUB       R30 R30 K17  ; R30 := R30 - 1.000000
233 [-]: EQ        0 R30 K19    ; if R30 ~= 0.000000 then PC := 236
234 [-]: JMP       236          ; PC := 236
235 [-]: JMP       237          ; PC := 237
236 [-]: FORLOOP   R31 141      ; R31 += R33; if R31 <= R32 then begin PC := 141; R34 := R31 end
237 [-]: FORLOOP   R23 81       ; R23 += R25; if R23 <= R24 then begin PC := 81; R26 := R23 end
238 [-]: SELF      R38 R0 K57   ; R39 := R0; R38 := R0[0x69727e0b]
239 [-]: CALL      R38 2 2      ; R38 := R38(R39)
240 [-]: SELF      R38 R38 K58  ; R39 := R38; R38 := R38[0x21fec8ad]
241 [-]: GETGLOBAL R40 K30      ; R40 := 0x0469f296
242 [-]: LOADK     R41 K59      ; R41 := "Nightmare"
243 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
244 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
245 [-]: CONST     R39 1        ; R39 := 1.000000
246 [-]: LEN       R40 R38      ; R40 := # R38
247 [-]: CONST     R41 1        ; R41 := 1.000000
248 [-]: FORPREP   R39 255      ; R39 -= R41; PC := 255
249 [-]: LEN       R43 R22      ; R43 := # R22
250 [-]: ADD       R43 R43 K17  ; R43 := R43 + 1.000000
251 [-]: SELF      R44 R4 K55   ; R45 := R4; R44 := R4[0x3ad9ed31]
252 [-]: GETTABLE  R46 R38 R42  ; R46 := R38[R42]
253 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
254 [-]: SETTABLE  R22 R43 R44  ; R22[R43] := R44
255 [-]: FORLOOP   R39 249      ; R39 += R41; if R39 <= R40 then begin PC := 249; R42 := R39 end
256 [-]: CONST     R43 1        ; R43 := 1.000000
257 [-]: LEN       R44 R22      ; R44 := # R22
258 [-]: CONST     R45 1        ; R45 := 1.000000
259 [-]: FORPREP   R43 271      ; R43 -= R45; PC := 271
260 [-]: GETTABLE  R47 R22 R46  ; R47 := R22[R46]
261 [-]: GETUPVAL  R48 U0       ; R48 := U0
262 [-]: GETTABLE  R48 R48 K60  ; R48 := R48[0x860b26c6]
263 [-]: GETTABLE  R49 R47 K35  ; R49 := R47["mission"]
264 [-]: CALL      R48 2 2      ; R48 := R48(R49)
265 [-]: GETGLOBAL R49 K31      ; R49 := 0x64fb1586
266 [-]: GETTABLE  R50 R47 K32  ; R50 := R47["name"]
267 [-]: CALL      R49 2 2      ; R49 := R49(R50)
268 [-]: GETGLOBAL R50 K4       ; R50 := _T
269 [-]: GETTABLE  R50 R50 K5   ; R50 := R50["CachedSkullNodes"]
270 [-]: SETTABLE  R50 R49 R48  ; R50[R49] := R48
271 [-]: FORLOOP   R43 260      ; R43 += R45; if R43 <= R44 then begin PC := 260; R46 := R43 end
272 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 2941
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  52

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xce225efa
  2 [-]: CONST     R2 0         ; R2 := 0.000000
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K1        ; R1 := _T
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: SETTABLE  R1 K2 R2     ; R1["CachedHardModeDailyMissions"] := R2
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xffd438ab
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x34291f5c
 10 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x9718be96]
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["HARD_MODE_DAILY_MISSION_INTERVAL"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: GETGLOBAL R3 K7        ; R3 := 0x4f6851ff
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x5e35d4d6]
 19 [-]: CALL      R3 1 2       ; R3 := R3()
 20 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xc1dee03f]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 23 [-]: CONST     R6 1         ; R6 := 1.000000
 24 [-]: LEN       R7 R4        ; R7 := # R4
 25 [-]: CONST     R8 1         ; R8 := 1.000000
 26 [-]: FORPREP   R6 97        ; R6 -= R8; PC := 97
 27 [-]: GETTABLE  R10 R4 R9    ; R10 := R4[R9]
 28 [-]: GETUPVAL  R11 U0       ; R11 := U0
 29 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["REGION_ID_DOJO"]
 30 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 31 [-]: JMP       97           ; PC := 97
 32 [-]: GETUPVAL  R11 U0       ; R11 := U0
 33 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["REGION_ID_DARK_SECTOR"]
 34 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 35 [-]: JMP       97           ; PC := 97
 36 [-]: GETUPVAL  R11 U0       ; R11 := U0
 37 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["REGION_ID_DEEP_SPACE"]
 38 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 39 [-]: JMP       97           ; PC := 97
 40 [-]: GETUPVAL  R11 U0       ; R11 := U0
 41 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["REGION_ID_ZARIMAN"]
 42 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 43 [-]: JMP       97           ; PC := 97
 44 [-]: LEN       R11 R5       ; R11 := # R5
 45 [-]: ADD       R11 R11 K14  ; R11 := R11 + 1.000000
 46 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 47 [-]: SETTABLE  R5 R11 R12   ; R5[R11] := R12
 48 [-]: GETGLOBAL R12 K15      ; R12 := 0xcfc01047
 49 [-]: GETTABLE  R13 R10 K16  ; R13 := R10["sectors"]
 50 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 51 [-]: JMP       91           ; PC := 91
 52 [-]: GETTABLE  R17 R16 K17  ; R17 := R16["name"]
 53 [-]: GETTABLE  R18 R16 K18  ; R18 := R16["mission"]
 54 [-]: GETTABLE  R19 R18 K19  ; R19 := R18["missionType"]
 55 [-]: GETGLOBAL R20 K20      ; R20 := EMPTY_SYMBOL
 56 [-]: EQ        1 R17 R20    ; if R17 == R20 then PC := 91
 57 [-]: JMP       91           ; PC := 91
 58 [-]: GETTABLE  R20 R16 K21  ; R20 := R16["nodeType"]
 59 [-]: EQ        1 R20 K23    ; if R20 == 0.000000 then PC := 64
 60 [-]: JMP       64           ; PC := 64
 61 [-]: GETTABLE  R20 R16 K21  ; R20 := R16["nodeType"]
 62 [-]: EQ        0 R20 K24    ; if R20 ~= 4.000000 then PC := 91
 63 [-]: JMP       91           ; PC := 91
 64 [-]: GETTABLE  R20 R18 K25  ; R20 := R18["goalTag"]
 65 [-]: GETGLOBAL R21 K20      ; R21 := EMPTY_SYMBOL
 66 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 91
 67 [-]: JMP       91           ; PC := 91
 68 [-]: GETGLOBAL R20 K26      ; R20 := 0x7b998233
 69 [-]: GETTABLE  R21 R18 K27  ; R21 := R18["levelOverride"]
 70 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 71 [-]: TEST      R20 1        ; if R20 then PC := 91
 72 [-]: JMP       91           ; PC := 91
 73 [-]: EQ        1 R19 K28    ; if R19 == 31.000000 then PC := 91
 74 [-]: JMP       91           ; PC := 91
 75 [-]: EQ        1 R19 K29    ; if R19 == 22.000000 then PC := 91
 76 [-]: JMP       91           ; PC := 91
 77 [-]: EQ        1 R19 K30    ; if R19 == 36.000000 then PC := 91
 78 [-]: JMP       91           ; PC := 91
 79 [-]: EQ        1 R19 K31    ; if R19 == 28.000000 then PC := 91
 80 [-]: JMP       91           ; PC := 91
 81 [-]: GETGLOBAL R20 K32      ; R20 := 0x33bdd652
 82 [-]: GETTABLE  R20 R20 K33  ; R20 := R20[0x23d5322f]
 83 [-]: GETTABLE  R21 R5 R11   ; R21 := R5[R11]
 84 [-]: NEWTABLE  R22 0 2      ; R22 := {}
 85 [-]: GETGLOBAL R23 K35      ; R23 := 0x64fb1586
 86 [-]: MOVE      R24 R17      ; R24 := R17
 87 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 88 [-]: SETTABLE  R22 K34 R23  ; R22["nodeName"] := R23
 89 [-]: SETTABLE  R22 K19 R19  ; R22["missionType"] := R19
 90 [-]: CALL      R20 3 1      ; R20(R21,R22)
 91 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 52; R14 := R15 end
 92 [-]: JMP       52           ; PC := 52
 93 [-]: GETUPVAL  R20 U1       ; R20 := U1
 94 [-]: GETTABLE  R20 R20 K36  ; R20 := R20[0xb8f73de1]
 95 [-]: GETTABLE  R21 R5 R11   ; R21 := R5[R11]
 96 [-]: CALL      R20 2 1      ; R20(R21)
 97 [-]: FORLOOP   R6 27        ; R6 += R8; if R6 <= R7 then begin PC := 27; R9 := R6 end
 98 [-]: CONST     R20 5        ; R20 := 5.000000
 99 [-]: GETUPVAL  R21 U1       ; R21 := U1
100 [-]: GETTABLE  R21 R21 K37  ; R21 := R21[0x06d055f9]
101 [-]: GETUPVAL  R22 U0       ; R22 := U0
102 [-]: GETTABLE  R22 R22 K38  ; R22 := R22[0xe3ee0517]
103 [-]: CALL      R22 1 2      ; R22 := R22()
104 [-]: MOD       R22 R22 K39  ; R22 := R22 % 2.000000
105 [-]: EQ        1 R22 K23    ; if R22 == 0.000000 then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: LOADKB    R22 0 1      ; R22 := false; PC := 108
108 [-]: LOADKB    R22 1 0      ; R22 := true
109 [-]: CONST     R23 0        ; R23 := 0.000000
110 [-]: MOVE      R24 R20      ; R24 := R20
111 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
112 [-]: CONST     R22 1        ; R22 := 1.000000
113 [-]: CONST     R23 10       ; R23 := 10.000000
114 [-]: CONST     R24 1        ; R24 := 1.000000
115 [-]: FORPREP   R22 146      ; R22 -= R24; PC := 146
116 [-]: GETUPVAL  R26 U1       ; R26 := U1
117 [-]: GETTABLE  R26 R26 K36  ; R26 := R26[0xb8f73de1]
118 [-]: MOVE      R27 R5       ; R27 := R5
119 [-]: CALL      R26 2 1      ; R26(R27)
120 [-]: CONST     R26 0        ; R26 := 0.000000
121 [-]: CONST     R27 1        ; R27 := 1.000000
122 [-]: MOVE      R28 R20      ; R28 := R20
123 [-]: CONST     R29 1        ; R29 := 1.000000
124 [-]: FORPREP   R27 142      ; R27 -= R29; PC := 142
125 [-]: GETTABLE  R31 R5 R30   ; R31 := R5[R30]
126 [-]: TEST      R31 0        ; if not R31 then PC := 142
127 [-]: JMP       142          ; PC := 142
128 [-]: GETTABLE  R31 R5 R30   ; R31 := R5[R30]
129 [-]: LEN       R31 R31      ; R31 := # R31
130 [-]: LT        0 K23 R31    ; if 0.000000 >= R31 then PC := 142
131 [-]: JMP       142          ; PC := 142
132 [-]: GETTABLE  R31 R5 R30   ; R31 := R5[R30]
133 [-]: GETTABLE  R31 R31 K14  ; R31 := R31[1.000000]
134 [-]: GETTABLE  R31 R31 K19  ; R31 := R31["missionType"]
135 [-]: EQ        1 R31 K14    ; if R31 == 1.000000 then PC := 141
136 [-]: JMP       141          ; PC := 141
137 [-]: EQ        1 R31 K40    ; if R31 == 5.000000 then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: EQ        0 R31 K41    ; if R31 ~= 3.000000 then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: ADD       R26 R26 K14  ; R26 := R26 + 1.000000
142 [-]: FORLOOP   R27 125      ; R27 += R29; if R27 <= R28 then begin PC := 125; R30 := R27 end
143 [-]: LT        0 R26 K41    ; if R26 >= 3.000000 then PC := 146
144 [-]: JMP       146          ; PC := 146
145 [-]: JMP       147          ; PC := 147
146 [-]: FORLOOP   R22 116      ; R22 += R24; if R22 <= R23 then begin PC := 116; R25 := R22 end
147 [-]: SELF      R32 R0 K42   ; R33 := R0; R32 := R0[0x69727e0b]
148 [-]: CALL      R32 2 2      ; R32 := R32(R33)
149 [-]: SELF      R32 R32 K43  ; R33 := R32; R32 := R32[0x21fec8ad]
150 [-]: GETGLOBAL R34 K44      ; R34 := 0x0469f296
151 [-]: LOADK     R35 K45      ; R35 := "SteelPath"
152 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
153 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
154 [-]: TEST      R32 0        ; if not R32 then PC := 184
155 [-]: JMP       184          ; PC := 184
156 [-]: LEN       R33 R32      ; R33 := # R32
157 [-]: LT        0 K23 R33    ; if 0.000000 >= R33 then PC := 184
158 [-]: JMP       184          ; PC := 184
159 [-]: CONST     R33 1        ; R33 := 1.000000
160 [-]: LEN       R34 R32      ; R34 := # R32
161 [-]: CONST     R35 1        ; R35 := 1.000000
162 [-]: FORPREP   R33 181      ; R33 -= R35; PC := 181
163 [-]: SELF      R37 R3 K46   ; R38 := R3; R37 := R3[0x3ad9ed31]
164 [-]: GETGLOBAL R39 K44      ; R39 := 0x0469f296
165 [-]: GETTABLE  R40 R32 R36  ; R40 := R32[R36]
166 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
167 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
168 [-]: ADD       R38 R20 R36  ; R38 := R20 + R36
169 [-]: NEWTABLE  R39 1 1      ; R39 := {}
170 [-]: NEWTABLE  R40 0 2      ; R40 := {}
171 [-]: GETGLOBAL R41 K35      ; R41 := 0x64fb1586
172 [-]: GETTABLE  R42 R37 K17  ; R42 := R37["name"]
173 [-]: CALL      R41 2 2      ; R41 := R41(R42)
174 [-]: SETTABLE  R40 K34 R41  ; R40["nodeName"] := R41
175 [-]: GETTABLE  R41 R37 K18  ; R41 := R37["mission"]
176 [-]: GETTABLE  R41 R41 K19  ; R41 := R41["missionType"]
177 [-]: SETTABLE  R40 K19 R41  ; R40["missionType"] := R41
178 [-]: SETTABLE  R39 K47 K48  ; R39["forceVisible"] := true
179 [-]: SETLIST   R39 1 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 1
180 [-]: SETTABLE  R5 R38 R39   ; R5[R38] := R39
181 [-]: FORLOOP   R33 163      ; R33 += R35; if R33 <= R34 then begin PC := 163; R36 := R33 end
182 [-]: LEN       R38 R32      ; R38 := # R32
183 [-]: ADD       R20 R20 R38  ; R20 := R20 + R38
184 [-]: CONST     R38 1        ; R38 := 1.000000
185 [-]: MOVE      R39 R20      ; R39 := R20
186 [-]: CONST     R40 1        ; R40 := 1.000000
187 [-]: FORPREP   R38 311      ; R38 -= R40; PC := 311
188 [-]: GETTABLE  R42 R5 R41   ; R42 := R5[R41]
189 [-]: TEST      R42 0        ; if not R42 then PC := 311
190 [-]: JMP       311          ; PC := 311
191 [-]: GETTABLE  R42 R5 R41   ; R42 := R5[R41]
192 [-]: LEN       R42 R42      ; R42 := # R42
193 [-]: LT        0 K23 R42    ; if 0.000000 >= R42 then PC := 311
194 [-]: JMP       311          ; PC := 311
195 [-]: GETTABLE  R42 R5 R41   ; R42 := R5[R41]
196 [-]: GETTABLE  R42 R42 K14  ; R42 := R42[1.000000]
197 [-]: GETTABLE  R43 R42 K34  ; R43 := R42["nodeName"]
198 [-]: GETUPVAL  R44 U0       ; R44 := U0
199 [-]: GETTABLE  R44 R44 K49  ; R44 := R44["HARD_MODE_LEVEL_MODIFIER"]
200 [-]: GETGLOBAL R45 K44      ; R45 := 0x0469f296
201 [-]: LOADK     R46 K50      ; R46 := "HardDaily"
202 [-]: ADD       R47 R41 R21  ; R47 := R41 + R21
203 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
204 [-]: CALL      R45 2 2      ; R45 := R45(R46)
205 [-]: GETGLOBAL R46 K1       ; R46 := _T
206 [-]: GETTABLE  R46 R46 K2   ; R46 := R46["CachedHardModeDailyMissions"]
207 [-]: NEWTABLE  R47 0 2      ; R47 := {}
208 [-]: SELF      R48 R3 K46   ; R49 := R3; R48 := R3[0x3ad9ed31]
209 [-]: GETGLOBAL R50 K44      ; R50 := 0x0469f296
210 [-]: MOVE      R51 R43      ; R51 := R43
211 [-]: CALL      R50 2 0      ; R50,... := R50(R51)
212 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
213 [-]: GETTABLE  R48 R48 K18  ; R48 := R48["mission"]
214 [-]: SELF      R48 R48 K51  ; R49 := R48; R48 := R48[0x8f89d633]
215 [-]: CALL      R48 2 2      ; R48 := R48(R49)
216 [-]: SETTABLE  R47 K18 R48  ; R47["mission"] := R48
217 [-]: SELF      R48 R0 K53   ; R49 := R0; R48 := R0[0xc3150d06]
218 [-]: MOVE      R50 R45      ; R50 := R45
219 [-]: GETUPVAL  R51 U0       ; R51 := U0
220 [-]: GETTABLE  R51 R51 K6   ; R51 := R51["HARD_MODE_DAILY_MISSION_INTERVAL"]
221 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
222 [-]: TEST      R48 1        ; if R48 then PC := 225
223 [-]: JMP       225          ; PC := 225
224 [-]: GETTABLE  R48 R42 K47  ; R48 := R42["forceVisible"]
225 [-]: SETTABLE  R47 K52 R48  ; R47["isVisible"] := R48
226 [-]: SETTABLE  R46 R43 R47  ; R46[R43] := R47
227 [-]: GETGLOBAL R46 K1       ; R46 := _T
228 [-]: GETTABLE  R46 R46 K2   ; R46 := R46["CachedHardModeDailyMissions"]
229 [-]: GETTABLE  R46 R46 R43  ; R46 := R46[R43]
230 [-]: GETTABLE  R46 R46 K18  ; R46 := R46["mission"]
231 [-]: SETTABLE  R46 K54 K14  ; R46["tier"] := 1.000000
232 [-]: GETTABLE  R47 R46 K55  ; R47 := R46["missionReward"]
233 [-]: NEWTABLE  R48 0 0      ; R48 := {}
234 [-]: GETGLOBAL R49 K22      ; R49 := 0x6c97a788
235 [-]: GETTABLE  R49 R49 K57  ; R49 := R49[0x925e2bbb]
236 [-]: GETUPVAL  R50 U2       ; R50 := U2
237 [-]: GETTABLE  R50 R50 K58  ; R50 := R50["DailyMissionReward"]
238 [-]: CONST     R51 5        ; R51 := 5.000000
239 [-]: CALL      R49 3 0      ; R49,... := R49(R50,R51)
240 [-]: SETLIST   R48 0 1      ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 0
241 [-]: SETTABLE  R47 K56 R48  ; R47["countedItems"] := R48
242 [-]: GETTABLE  R47 R46 K59  ; R47 := R46["archwingRequired"]
243 [-]: TEST      R47 0        ; if not R47 then PC := 264
244 [-]: JMP       264          ; PC := 264
245 [-]: GETTABLE  R47 R46 K60  ; R47 := R46["isSharkwingMission"]
246 [-]: TEST      R47 1        ; if R47 then PC := 264
247 [-]: JMP       264          ; PC := 264
248 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
249 [-]: EQ        1 R47 K31    ; if R47 == 28.000000 then PC := 264
250 [-]: JMP       264          ; PC := 264
251 [-]: GETGLOBAL R47 K61      ; R47 := 0x7f5022cf
252 [-]: GETTABLE  R47 R47 K62  ; R47 := R47[0xa5c556b9]
253 [-]: GETGLOBAL R48 K35      ; R48 := 0x64fb1586
254 [-]: GETTABLE  R49 R46 K27  ; R49 := R46["levelOverride"]
255 [-]: SELF      R49 R49 K63  ; R50 := R49; R49 := R49[0xed4e0128]
256 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
257 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
258 [-]: LOADK     R49 K64      ; R49 := "GrineerFortress"
259 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
260 [-]: EQ        0 R47 K65    ; if R47 ~= nil then PC := 264
261 [-]: JMP       264          ; PC := 264
262 [-]: GETUPVAL  R47 U0       ; R47 := U0
263 [-]: GETTABLE  R44 R47 K66  ; R44 := R47["HARD_MODE_ARCHWING_LEVEL_MODIFIER"]
264 [-]: GETTABLE  R47 R46 K67  ; R47 := R46["minEnemyLevel"]
265 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
266 [-]: SETTABLE  R46 K67 R47  ; R46["minEnemyLevel"] := R47
267 [-]: GETTABLE  R47 R46 K68  ; R47 := R46["maxEnemyLevel"]
268 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
269 [-]: SETTABLE  R46 K68 R47  ; R46[0x7b998233] := R47
270 [-]: GETGLOBAL R47 K44      ; R47 := 0x0469f296
271 [-]: MOVE      R48 R45      ; R48 := R45
272 [-]: CALL      R47 2 2      ; R47 := R47(R48)
273 [-]: SETTABLE  R46 K69 R47  ; R46[0xbe190284] := R47
274 [-]: GETUPVAL  R47 U0       ; R47 := U0
275 [-]: GETTABLE  R47 R47 K6   ; R47 := R47["HARD_MODE_DAILY_MISSION_INTERVAL"]
276 [-]: SETTABLE  R46 K70 R47  ; R46[0xf2deaf69] := R47
277 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
278 [-]: EQ        0 R47 K39    ; if R47 ~= 2.000000 then PC := 282
279 [-]: JMP       282          ; PC := 282
280 [-]: SETTABLE  R46 K71 K40  ; R46["maxWaveNum"] := 5.000000
281 [-]: JMP       311          ; PC := 311
282 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
283 [-]: EQ        0 R47 K72    ; if R47 ~= 8.000000 then PC := 287
284 [-]: JMP       287          ; PC := 287
285 [-]: SETTABLE  R46 K71 K40  ; R46["maxWaveNum"] := 5.000000
286 [-]: JMP       311          ; PC := 311
287 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
288 [-]: EQ        0 R47 K73    ; if R47 ~= 13.000000 then PC := 292
289 [-]: JMP       292          ; PC := 292
290 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
291 [-]: JMP       311          ; PC := 311
292 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
293 [-]: EQ        0 R47 K74    ; if R47 ~= 17.000000 then PC := 297
294 [-]: JMP       297          ; PC := 297
295 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
296 [-]: JMP       311          ; PC := 311
297 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
298 [-]: EQ        0 R47 K75    ; if R47 ~= 7.000000 then PC := 302
299 [-]: JMP       302          ; PC := 302
300 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
301 [-]: JMP       311          ; PC := 311
302 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
303 [-]: EQ        0 R47 K24    ; if R47 ~= 4.000000 then PC := 307
304 [-]: JMP       307          ; PC := 307
305 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
306 [-]: JMP       311          ; PC := 311
307 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
308 [-]: EQ        0 R47 K76    ; if R47 ~= 32.000000 then PC := 311
309 [-]: JMP       311          ; PC := 311
310 [-]: SETTABLE  R46 K71 K24  ; R46["maxWaveNum"] := 4.000000
311 [-]: FORLOOP   R38 188      ; R38 += R40; if R38 <= R39 then begin PC := 188; R41 := R38 end
312 [-]: GETGLOBAL R47 K7       ; R47 := 0x4f6851ff
313 [-]: MOVE      R48 R1       ; R48 := R1
314 [-]: CALL      R47 2 1      ; R47(R48)
315 [-]: GETGLOBAL R47 K1       ; R47 := _T
316 [-]: GETUPVAL  R48 U0       ; R48 := U0
317 [-]: GETTABLE  R48 R48 K6   ; R48 := R48["HARD_MODE_DAILY_MISSION_INTERVAL"]
318 [-]: GETUPVAL  R49 U0       ; R49 := U0
319 [-]: GETTABLE  R49 R49 K78  ; R49 := R49[0xa01111a5]
320 [-]: CALL      R49 1 2      ; R49 := R49()
321 [-]: GETUPVAL  R50 U0       ; R50 := U0
322 [-]: GETTABLE  R50 R50 K6   ; R50 := R50["HARD_MODE_DAILY_MISSION_INTERVAL"]
323 [-]: MOD       R49 R49 R50  ; R49 := R49 % R50
324 [-]: SUB       R48 R48 R49  ; R48 := R48 - R49
325 [-]: SETTABLE  R47 K77 R48  ; R47["CachedHardModeDailyMissionsExpiry"] := R48
326 [-]: GETGLOBAL R47 K1       ; R47 := _T
327 [-]: GETTABLE  R47 R47 K77  ; R47 := R47["CachedHardModeDailyMissionsExpiry"]
328 [-]: RETURN    R47 2        ; return R47
329 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3065
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 26
  2 [-]: JMP       26           ; PC := 26
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R2 K0 K1     ; R2["progress"] := 1.000000
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: SETUPVAL  R2 U0        ; U82 := R0
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x76ea806b
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x3f3ae64c]
  9 [-]: CONST     R4 0         ; R4 := 0.000000
 10 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0x80563238]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 19 [-]: MOVE      R5 R3        ; R5 := R3
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3[0x24389ec3]
 24 [-]: LOADK     R6 K7        ; R6 := "OnInboxSync"
 25 [-]: CALL      R4 3 1       ; R4(R5,R6)
 26 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3079
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 51
  3 [-]: JMP       51           ; PC := 51
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 51
  8 [-]: JMP       51           ; PC := 51
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 11 [-]: GETGLOBAL R2 K3        ; R2 := gLotusSandBoxGameRulesType
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 17 [-]: GETGLOBAL R2 K4        ; R2 := gLotusPhotoBoothGameRulesType
 18 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 19 [-]: TEST      R0 0         ; if not R0 then PC := 51
 20 [-]: JMP       51           ; PC := 51
 21 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 22 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 23 [-]: GETGLOBAL R2 K5        ; R2 := gLotusGameRulesType
 24 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 25 [-]: TEST      R0 0         ; if not R0 then PC := 42
 26 [-]: JMP       42           ; PC := 42
 27 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 28 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xef893aec]
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["missionType"]
 31 [-]: EQ        1 R0 K9      ; if R0 == 11.000000 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 34 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xef893aec]
 35 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 36 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["syndicateTag"]
 37 [-]: GETGLOBAL R1 K11       ; R1 := 0x0469f296
 38 [-]: LOADK     R2 K12       ; R2 := "KahlSyndicate"
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: GETGLOBAL R0 K13       ; R0 := 0xba7dfcd2
 43 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 44 [-]: GETGLOBAL R2 K14       ; R2 := gLotusChallengeMgrType
 45 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 46 [-]: TEST      R0 0         ; if not R0 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETGLOBAL R0 K13       ; R0 := 0xba7dfcd2
 49 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0[0x83a4b16a]
 50 [-]: CALL      R0 2 1       ; R0(R1)
 51 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3090
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["RequiemLoader"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["RequiemLoader"]
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xd2d3875a]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x9ba7909f
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x230561f1]
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x68fccc59
 14 [-]: LOADK     R3 K6        ; R3 := "RequiemMovieDone"
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R0 K7        ; R0 := mTimerMgr
 18 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xbd2e96ea]
 19 [-]: CONST     R2 0         ; R2 := 0.500000
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3101
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  3 [-]: SETTABLE  R2 K1 R3     ; R2["CachedNemesisMissions"] := R3
  4 [-]: GETGLOBAL R2 K0        ; R2 := _T
  5 [-]: SETTABLE  R2 K2 K3     ; R2["CachedNemesisGenericMissionInfo"] := nil
  6 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x600a0ad6]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0xd8140b94]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 89
 11 [-]: JMP       89           ; PC := 89
 12 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mInfluenceNodes"]
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x6a965652]
 15 [-]: MOVE      R5 R2        ; R5 := R2
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: GETGLOBAL R5 K0        ; R5 := _T
 18 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 19 [-]: GETTABLE  R7 R2 K9     ; R7 := R2["mRank"]
 20 [-]: SETTABLE  R6 K8 R7     ; R6["rank"] := R7
 21 [-]: GETTABLE  R7 R4 K11    ; R7 := R4["mFaction"]
 22 [-]: SETTABLE  R6 K10 R7    ; R6["faction"] := R7
 23 [-]: GETTABLE  R7 R4 K13    ; R7 := R4["mName"]
 24 [-]: SETTABLE  R6 K12 R7    ; R6["name"] := R7
 25 [-]: SETTABLE  R5 K2 R6     ; R5["CachedNemesisGenericMissionInfo"] := R6
 26 [-]: CONST     R5 1         ; R5 := 1.000000
 27 [-]: LEN       R6 R3        ; R6 := # R3
 28 [-]: CONST     R7 1         ; R7 := 1.000000
 29 [-]: FORPREP   R5 50        ; R5 -= R7; PC := 50
 30 [-]: GETTABLE  R9 R3 R8     ; R9 := R3[R8]
 31 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["mNode"]
 32 [-]: GETUPVAL  R10 U1       ; R10 := U1
 33 [-]: GETTABLE  R10 R10 K15  ; R10 := R10[0x6c5ef17c]
 34 [-]: MOVE      R11 R9       ; R11 := R9
 35 [-]: GETTABLE  R12 R2 K9    ; R12 := R2["mRank"]
 36 [-]: GETTABLE  R13 R4 K11   ; R13 := R4["mFaction"]
 37 [-]: GETTABLE  R14 R4 K13   ; R14 := R4["mName"]
 38 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 39 [-]: GETGLOBAL R11 K0       ; R11 := _T
 40 [-]: GETTABLE  R11 R11 K1   ; R11 := R11["CachedNemesisMissions"]
 41 [-]: SELF      R12 R9 K16   ; R13 := R9; R12 := R9[0x6d604ba7]
 42 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 43 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 44 [-]: SELF      R14 R10 K18  ; R15 := R10; R14 := R10[0x8f89d633]
 45 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 46 [-]: SETTABLE  R13 K17 R14  ; R13["mMissionInfo"] := R14
 47 [-]: GETTABLE  R14 R10 K20  ; R14 := R10["uniqueName"]
 48 [-]: SETTABLE  R13 K19 R14  ; R13["missionName"] := R14
 49 [-]: SETTABLE  R11 R12 R13  ; R11[R12] := R13
 50 [-]: FORLOOP   R5 30        ; R5 += R7; if R5 <= R6 then begin PC := 30; R8 := R5 end
 51 [-]: GETGLOBAL R11 K21      ; R11 := 0x0032441c
 52 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["NumRequiemHints"]
 53 [-]: TEST      R11 0        ; if not R11 then PC := 84
 54 [-]: JMP       84           ; PC := 84
 55 [-]: GETTABLE  R12 R2 K23   ; R12 := R2["mHints"]
 56 [-]: TEST      R12 0        ; if not R12 then PC := 84
 57 [-]: JMP       84           ; PC := 84
 58 [-]: GETTABLE  R12 R2 K23   ; R12 := R2["mHints"]
 59 [-]: LEN       R12 R12      ; R12 := # R12
 60 [-]: LT        0 R11 R12    ; if R11 >= R12 then PC := 84
 61 [-]: JMP       84           ; PC := 84
 62 [-]: GETGLOBAL R12 K0       ; R12 := _T
 63 [-]: ADD       R13 R11 K25  ; R13 := R11 + 1.000000
 64 [-]: SETTABLE  R12 K24 R13  ; R12["NewRequiemHint"] := R13
 65 [-]: GETGLOBAL R12 K0       ; R12 := _T
 66 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["RequiemLoader"]
 67 [-]: TEST      R12 1        ; if R12 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: GETGLOBAL R12 K0       ; R12 := _T
 70 [-]: GETGLOBAL R13 K27      ; R13 := 0xbd496aa1
 71 [-]: GETTABLE  R13 R13 K28  ; R13 := R13[0x42645da3]
 72 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 73 [-]: GETGLOBAL R15 K29      ; R15 := 0x68fccc59
 74 [-]: SELF      R15 R15 K30  ; R16 := R15; R15 := R15[0xed4e0128]
 75 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 76 [-]: SETLIST   R14 0 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 0
 77 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 78 [-]: SETTABLE  R12 K26 R13  ; R12["RequiemLoader"] := R13
 79 [-]: GETGLOBAL R12 K31      ; R12 := mTimerMgr
 80 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12[0xbd2e96ea]
 81 [-]: CONST     R14 3        ; R14 := 3.000000
 82 [-]: GETUPVAL  R15 U2       ; R15 := U2
 83 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 84 [-]: GETGLOBAL R12 K21      ; R12 := 0x0032441c
 85 [-]: GETTABLE  R13 R2 K23   ; R13 := R2["mHints"]
 86 [-]: LEN       R13 R13      ; R13 := # R13
 87 [-]: SETTABLE  R12 K22 R13  ; R12["NumRequiemHints"] := R13
 88 [-]: JMP       91           ; PC := 91
 89 [-]: GETGLOBAL R12 K21      ; R12 := 0x0032441c
 90 [-]: SETTABLE  R12 K33 K3   ; R12["RequiemHints"] := nil
 91 [-]: GETGLOBAL R12 K21      ; R12 := 0x0032441c
 92 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["NemesisKillChoiceMade"]
 93 [-]: EQ        1 R12 K3     ; if R12 == nil then PC := 137
 94 [-]: JMP       137          ; PC := 137
 95 [-]: GETGLOBAL R12 K35      ; R12 := 0x25d99d89
 96 [-]: SELF      R12 R12 K36  ; R13 := R12; R12 := R12[0x2bc6bc3e]
 97 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 98 [-]: TEST      R1 0         ; if not R1 then PC := 137
 99 [-]: JMP       137          ; PC := 137
100 [-]: GETGLOBAL R13 K37      ; R13 := 0x7b998233
101 [-]: MOVE      R14 R12      ; R14 := R12
102 [-]: CALL      R13 2 2      ; R13 := R13(R14)
103 [-]: TEST      R13 1        ; if R13 then PC := 137
104 [-]: JMP       137          ; PC := 137
105 [-]: LEN       R13 R12      ; R13 := # R12
106 [-]: LT        0 K38 R13    ; if 0.000000 >= R13 then PC := 137
107 [-]: JMP       137          ; PC := 137
108 [-]: LEN       R13 R12      ; R13 := # R12
109 [-]: GETTABLE  R13 R12 R13  ; R13 := R12[R13]
110 [-]: GETUPVAL  R14 U0       ; R14 := U0
111 [-]: GETTABLE  R14 R14 K7   ; R14 := R14[0x6a965652]
112 [-]: MOVE      R15 R13      ; R15 := R13
113 [-]: CALL      R14 2 2      ; R14 := R14(R15)
114 [-]: GETUPVAL  R15 U3       ; R15 := U3
115 [-]: GETTABLE  R15 R15 K39  ; R15 := R15[0x06d055f9]
116 [-]: GETGLOBAL R16 K21      ; R16 := 0x0032441c
117 [-]: GETTABLE  R16 R16 K34  ; R16 := R16["NemesisKillChoiceMade"]
118 [-]: EQ        1 R16 K40    ; if R16 == true then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: LOADKB    R16 0 1      ; R16 := false; PC := 121
121 [-]: LOADKB    R16 1 0      ; R16 := true
122 [-]: LOADK     R17 K41      ; R17 := "/Lotus/Language/Kingpins/LichKilledLabel"
123 [-]: LOADK     R18 K42      ; R18 := "/Lotus/Language/Kingpins/LichConvertedLabel"
124 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
125 [-]: GETGLOBAL R16 K21      ; R16 := 0x0032441c
126 [-]: NEWTABLE  R17 0 5      ; R17 := {}
127 [-]: SETTABLE  R17 K44 K40  ; R17["OpenScreen"] := true
128 [-]: SETTABLE  R17 K45 K46  ; R17["Header"] := "/Lotus/Language/Kingpins/NemesisPopupHeader"
129 [-]: GETTABLE  R18 R14 K13  ; R18 := R14["mName"]
130 [-]: SETTABLE  R17 K47 R18  ; R17["Name"] := R18
131 [-]: GETTABLE  R18 R14 K11  ; R18 := R14["mFaction"]
132 [-]: SETTABLE  R17 K48 R18  ; R17["FactionId"] := R18
133 [-]: SETTABLE  R17 K49 R15  ; R17["Description"] := R15
134 [-]: SETTABLE  R16 K43 R17  ; R16["NemesisPopup_Info"] := R17
135 [-]: GETGLOBAL R16 K21      ; R16 := 0x0032441c
136 [-]: SETTABLE  R16 K34 K3   ; R16["NemesisKillChoiceMade"] := nil
137 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3161
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x3d106989
  8 [-]: LOADK     R2 K3        ; R2 := "updating zariman missions"
  9 [-]: CALL      R1 2 1       ; R1(R2)
 10 [-]: CONST     R1 0         ; R1 := 0.000000
 11 [-]: GETGLOBAL R2 K4        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["CachedZarimanFactionIdx"]
 13 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R2 K7        ; R2 := 0xe7f2b02f
 16 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x6923a4fa]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: EQ        1 R2 K9      ; if R2 == "" then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R2 K2        ; R2 := 0x3d106989
 21 [-]: LOADK     R3 K10       ; R3 := "using cached faction "
 22 [-]: GETGLOBAL R4 K4        ; R4 := _T
 23 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["CachedZarimanFactionIdx"]
 24 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: GETGLOBAL R2 K4        ; R2 := _T
 27 [-]: GETTABLE  R1 R2 K5     ; R1 := R2["CachedZarimanFactionIdx"]
 28 [-]: JMP       69           ; PC := 69
 29 [-]: GETGLOBAL R2 K11       ; R2 := 0x0469f296
 30 [-]: LOADK     R3 K12       ; R3 := "ZarimanSyndicate"
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
 33 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x69727e0b]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mSyndicateMissions"]
 36 [-]: CONST     R4 1         ; R4 := 1.000000
 37 [-]: LEN       R5 R3        ; R5 := # R3
 38 [-]: CONST     R6 1         ; R6 := 1.000000
 39 [-]: FORPREP   R4 68        ; R4 -= R6; PC := 68
 40 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 41 [-]: GETTABLE  R9 R8 K15    ; R9 := R8["mTag"]
 42 [-]: EQ        0 R9 R2      ; if R9 ~= R2 then PC := 68
 43 [-]: JMP       68           ; PC := 68
 44 [-]: GETGLOBAL R9 K16       ; R9 := 0x34291f5c
 45 [-]: GETTABLE  R9 R9 K17    ; R9 := R9[0x397b920f]
 46 [-]: GETTABLE  R10 R8 K18   ; R10 := R8["mActivation"]
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: LE        0 R9 K19     ; if R9 > 0.000000 then PC := 68
 49 [-]: JMP       68           ; PC := 68
 50 [-]: GETGLOBAL R9 K16       ; R9 := 0x34291f5c
 51 [-]: GETTABLE  R9 R9 K17    ; R9 := R9[0x397b920f]
 52 [-]: GETTABLE  R10 R8 K20   ; R10 := R8["mExpiry"]
 53 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 54 [-]: LT        0 K19 R9     ; if 0.000000 >= R9 then PC := 68
 55 [-]: JMP       68           ; PC := 68
 56 [-]: GETGLOBAL R9 K21       ; R9 := 0x03f57322
 57 [-]: GETGLOBAL R10 K22      ; R10 := 0x5f93cf5b
 58 [-]: GETTABLE  R11 R8 K23   ; R11 := R8["mSeed"]
 59 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 60 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 61 [-]: MOD       R1 R9 K24    ; R1 := R9 % 2.000000
 62 [-]: GETGLOBAL R9 K2        ; R9 := 0x3d106989
 63 [-]: LOADK     R10 K25      ; R10 := "using syndicate mission seed gives "
 64 [-]: MOVE      R11 R1       ; R11 := R1
 65 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 66 [-]: CALL      R9 2 1       ; R9(R10)
 67 [-]: JMP       69           ; PC := 69
 68 [-]: FORLOOP   R4 40        ; R4 += R6; if R4 <= R5 then begin PC := 40; R7 := R4 end
 69 [-]: EQ        0 R1 K26     ; if R1 ~= 1.000000 then PC := 100
 70 [-]: JMP       100          ; PC := 100
 71 [-]: GETGLOBAL R9 K2        ; R9 := 0x3d106989
 72 [-]: LOADK     R10 K27      ; R10 := "swapping to corpus"
 73 [-]: CALL      R9 2 1       ; R9(R10)
 74 [-]: GETGLOBAL R9 K28       ; R9 := 0xcfc01047
 75 [-]: MOVE      R10 R0       ; R10 := R0
 76 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 77 [-]: JMP       98           ; PC := 98
 78 [-]: GETUPVAL  R14 U0       ; R14 := U0
 79 [-]: GETTABLE  R15 R13 K29  ; R15 := R13["mission"]
 80 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["missionType"]
 81 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 82 [-]: TEST      R14 0        ; if not R14 then PC := 98
 83 [-]: JMP       98           ; PC := 98
 84 [-]: GETGLOBAL R15 K31      ; R15 := 0x6c97a788
 85 [-]: GETTABLE  R15 R15 K32  ; R15 := R15[0x57d5cada]
 86 [-]: CALL      R15 1 2      ; R15 := R15()
 87 [-]: GETTABLE  R16 R13 K34  ; R16 := R13["name"]
 88 [-]: SETTABLE  R15 K33 R16  ; R15["mNode"] := R16
 89 [-]: SETTABLE  R15 K35 K26  ; R15["mFaction"] := 1.000000
 90 [-]: GETTABLE  R16 R14 K37  ; R16 := R14["enemySpec"]
 91 [-]: SETTABLE  R15 K36 R16  ; R15["mEnemySpec"] := R16
 92 [-]: GETGLOBAL R16 K1       ; R16 := 0x25d99d89
 93 [-]: SELF      R16 R16 K13  ; R17 := R16; R16 := R16[0x69727e0b]
 94 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 95 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0x01e9ccdd]
 96 [-]: MOVE      R18 R15      ; R18 := R15
 97 [-]: CALL      R16 3 1      ; R16(R17,R18)
 98 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 78; R11 := R12 end
 99 [-]: JMP       78           ; PC := 78
100 [-]: GETGLOBAL R16 K4       ; R16 := _T
101 [-]: GETTABLE  R16 R16 K5   ; R16 := R16["CachedZarimanFactionIdx"]
102 [-]: EQ        1 R16 K6     ; if R16 == nil then PC := 108
103 [-]: JMP       108          ; PC := 108
104 [-]: GETGLOBAL R16 K4       ; R16 := _T
105 [-]: GETTABLE  R16 R16 K5   ; R16 := R16["CachedZarimanFactionIdx"]
106 [-]: EQ        1 R16 R1     ; if R16 == R1 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: GETGLOBAL R16 K2       ; R16 := 0x3d106989
109 [-]: LOADK     R17 K39      ; R17 := "signalling bounty refresh"
110 [-]: CALL      R16 2 1      ; R16(R17)
111 [-]: GETGLOBAL R16 K4       ; R16 := _T
112 [-]: SETTABLE  R16 K40 K41  ; R16["WorldStateJobsChanged"] := true
113 [-]: GETGLOBAL R16 K4       ; R16 := _T
114 [-]: SETTABLE  R16 K5 R1    ; R16["CachedZarimanFactionIdx"] := R1
115 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3212
; #Upvalues:       20
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  122

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x3d106989
  7 [-]: LOADK     R1 K3        ; R1 := "No game rules, early out"
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K4        ; R0 := _T
 11 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 12 [-]: SETTABLE  R0 K5 R1     ; R0["CachedAlerts"] := R1
 13 [-]: GETGLOBAL R0 K4        ; R0 := _T
 14 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 15 [-]: SETTABLE  R0 K6 R1     ; R0["CachedInvasionInfo"] := R1
 16 [-]: GETGLOBAL R0 K7        ; R0 := 0x0032441c
 17 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 18 [-]: SETTABLE  R0 K8 R1     ; R0["CachedGoalInfo"] := R1
 19 [-]: GETGLOBAL R0 K7        ; R0 := 0x0032441c
 20 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 21 [-]: SETTABLE  R0 K9 R1     ; R0["MergedGoalNodes"] := R1
 22 [-]: GETGLOBAL R0 K4        ; R0 := _T
 23 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 24 [-]: SETTABLE  R0 K10 R1    ; R0["CachedConstructionProjects"] := R1
 25 [-]: GETGLOBAL R0 K4        ; R0 := _T
 26 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 27 [-]: SETTABLE  R0 K11 R1    ; R0["CachedRegionStatus"] := R1
 28 [-]: GETGLOBAL R0 K4        ; R0 := _T
 29 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 30 [-]: SETTABLE  R0 K12 R1    ; R0["CachedFlashSales"] := R1
 31 [-]: GETGLOBAL R0 K4        ; R0 := _T
 32 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 33 [-]: SETTABLE  R0 K13 R1    ; R0["CachedVoidTraders"] := R1
 34 [-]: GETGLOBAL R0 K4        ; R0 := _T
 35 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 36 [-]: SETTABLE  R0 K14 R1    ; R0["CachedGlobalUpgrades"] := R1
 37 [-]: GETGLOBAL R0 K4        ; R0 := _T
 38 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 39 [-]: SETTABLE  R0 K15 R1    ; R0["CachedGoalLongDesc"] := R1
 40 [-]: GETGLOBAL R0 K4        ; R0 := _T
 41 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 42 [-]: SETTABLE  R0 K16 R1    ; R0["LockedGoalList"] := R1
 43 [-]: GETGLOBAL R0 K4        ; R0 := _T
 44 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 45 [-]: SETTABLE  R0 K17 R1    ; R0["CachedNodesPendingDestruction"] := R1
 46 [-]: GETGLOBAL R0 K4        ; R0 := _T
 47 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 48 [-]: SETTABLE  R0 K18 R1    ; R0["CachedVoidStormMissions"] := R1
 49 [-]: GETGLOBAL R0 K7        ; R0 := 0x0032441c
 50 [-]: GETTABLE  R0 R0 K19    ; R0 := R0["LoginDone"]
 51 [-]: TEST      R0 1         ; if R0 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: LOADNIL   R0 R0        ; R0 := nil
 54 [-]: RETURN    R0 2         ; return R0
 55 [-]: GETGLOBAL R0 K20       ; R0 := 0x76ea806b
 56 [-]: SELF      R0 R0 K21    ; R1 := R0; R0 := R0[0x3f3ae64c]
 57 [-]: CONST     R2 0         ; R2 := 0.000000
 58 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 59 [-]: LOADNIL   R1 R1        ; R1 := nil
 60 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 61 [-]: MOVE      R3 R0        ; R3 := R0
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: TEST      R2 1         ; if R2 then PC := 68
 64 [-]: JMP       68           ; PC := 68
 65 [-]: SELF      R2 R0 K22    ; R3 := R0; R2 := R0[0x80563238]
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: MOVE      R1 R2        ; R1 := R2
 68 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 69 [-]: MOVE      R3 R1        ; R3 := R1
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: TEST      R2 0         ; if not R2 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: LOADNIL   R2 R2        ; R2 := nil
 74 [-]: RETURN    R2 2         ; return R2
 75 [-]: SELF      R2 R1 K23    ; R3 := R1; R2 := R1[0x69727e0b]
 76 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 77 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 78 [-]: MOVE      R4 R2        ; R4 := R2
 79 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 80 [-]: TEST      R3 0         ; if not R3 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: LOADNIL   R3 R3        ; R3 := nil
 83 [-]: RETURN    R3 2         ; return R3
 84 [-]: GETUPVAL  R3 U0        ; R3 := U0
 85 [-]: EQ        0 R3 K24     ; if R3 ~= nil then PC := 91
 86 [-]: JMP       91           ; PC := 91
 87 [-]: GETUPVAL  R3 U1        ; R3 := U1
 88 [-]: GETTABLE  R3 R3 K25    ; R3 := R3[0xc00479a5]
 89 [-]: CALL      R3 1 2       ; R3 := R3()
 90 [-]: SETUPVAL  R3 U0        ; U82 := R0
 91 [-]: GETUPVAL  R3 U1        ; R3 := U1
 92 [-]: GETTABLE  R3 R3 K26    ; R3 := R3[0x5e35d4d6]
 93 [-]: CALL      R3 1 2       ; R3 := R3()
 94 [-]: SELF      R4 R3 K27    ; R5 := R3; R4 := R3[0xc1dee03f]
 95 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 96 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 97 [-]: GETGLOBAL R6 K28       ; R6 := 0x83f4e77c
 98 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 99 [-]: LOADNIL   R6 R6        ; R6 := nil
100 [-]: GETTABLE  R7 R2 K29    ; R7 := R2["mAlerts"]
101 [-]: CONST     R8 1         ; R8 := 1.000000
102 [-]: LEN       R9 R7        ; R9 := # R7
103 [-]: CONST     R10 1        ; R10 := 1.000000
104 [-]: FORPREP   R8 255       ; R8 -= R10; PC := 255
105 [-]: GETGLOBAL R12 K30      ; R12 := 0xce225efa
106 [-]: CONST     R13 0        ; R13 := 0.000000
107 [-]: CALL      R12 2 1      ; R12(R13)
108 [-]: GETTABLE  R12 R7 R11   ; R12 := R7[R11]
109 [-]: SELF      R13 R3 K31   ; R14 := R3; R13 := R3[0x3ad9ed31]
110 [-]: GETTABLE  R15 R12 K32  ; R15 := R12["mMissionInfo"]
111 [-]: GETTABLE  R15 R15 K33  ; R15 := R15["location"]
112 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
113 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
114 [-]: MOVE      R15 R13      ; R15 := R13
115 [-]: CALL      R14 2 2      ; R14 := R14(R15)
116 [-]: TEST      R14 1        ; if R14 then PC := 255
117 [-]: JMP       255          ; PC := 255
118 [-]: GETGLOBAL R14 K34      ; R14 := 0x34291f5c
119 [-]: GETTABLE  R14 R14 K35  ; R14 := R14[0x397b920f]
120 [-]: GETTABLE  R15 R12 K36  ; R15 := R12["mExpiry"]
121 [-]: CALL      R14 2 2      ; R14 := R14(R15)
122 [-]: LT        0 K37 R14    ; if 0.000000 >= R14 then PC := 255
123 [-]: JMP       255          ; PC := 255
124 [-]: GETGLOBAL R15 K38      ; R15 := 0x64fb1586
125 [-]: GETTABLE  R16 R13 K39  ; R16 := R13["name"]
126 [-]: CALL      R15 2 2      ; R15 := R15(R16)
127 [-]: MOVE      R6 R15       ; R6 := R15
128 [-]: CONST     R15 0        ; R15 := 0.000000
129 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
130 [-]: GETTABLE  R17 R12 K40  ; R17 := R12["mActivation"]
131 [-]: CALL      R16 2 2      ; R16 := R16(R17)
132 [-]: TEST      R16 1        ; if R16 then PC := 139
133 [-]: JMP       139          ; PC := 139
134 [-]: GETGLOBAL R16 K34      ; R16 := 0x34291f5c
135 [-]: GETTABLE  R16 R16 K35  ; R16 := R16[0x397b920f]
136 [-]: GETTABLE  R17 R12 K40  ; R17 := R12["mActivation"]
137 [-]: CALL      R16 2 2      ; R16 := R16(R17)
138 [-]: MOVE      R15 R16      ; R15 := R16
139 [-]: LT        0 K37 R15    ; if 0.000000 >= R15 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R16 U2       ; R16 := U2
142 [-]: MOVE      R17 R6       ; R17 := R6
143 [-]: MOVE      R18 R15      ; R18 := R15
144 [-]: CALL      R16 3 1      ; R16(R17,R18)
145 [-]: JMP       255          ; PC := 255
146 [-]: GETUPVAL  R16 U0       ; R16 := U0
147 [-]: TEST      R16 0        ; if not R16 then PC := 159
148 [-]: JMP       159          ; PC := 159
149 [-]: SELF      R16 R1 K41   ; R17 := R1; R16 := R1[0xcf6ac497]
150 [-]: GETTABLE  R18 R12 K42  ; R18 := R12["mId"]
151 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["mId"]
152 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
153 [-]: TEST      R16 0        ; if not R16 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: GETTABLE  R16 R12 K43  ; R16 := R12["mAllowReplay"]
156 [-]: JMP       159          ; PC := 159
157 [-]: LOADKB    R16 0 1      ; R16 := false; PC := 158
158 [-]: LOADKB    R16 1 0      ; R16 := true
159 [-]: LOADKB    R17 0 0      ; R17 := false
160 [-]: GETTABLE  R18 R13 K44  ; R18 := R13["region"]
161 [-]: ADD       R18 R18 K45  ; R18 := R18 + 1.000000
162 [-]: GETTABLE  R19 R4 R18   ; R19 := R4[R18]
163 [-]: TEST      R19 0        ; if not R19 then PC := 188
164 [-]: JMP       188          ; PC := 188
165 [-]: GETUPVAL  R20 U1       ; R20 := U1
166 [-]: GETTABLE  R20 R20 K46  ; R20 := R20["REGION_ID_FORTRESS"]
167 [-]: EQ        0 R18 R20    ; if R18 ~= R20 then PC := 175
168 [-]: JMP       175          ; PC := 175
169 [-]: SELF      R20 R1 K47   ; R21 := R1; R20 := R1[0x5baf7a39]
170 [-]: CALL      R20 2 2      ; R20 := R20(R21)
171 [-]: TESTSET   R17 R20 1    ; if R20 then PC := 174 else R17 := R20
172 [-]: JMP       174          ; PC := 174
173 [-]: MOVE      R17 R5       ; R17 := R5
174 [-]: JMP       188          ; PC := 188
175 [-]: SELF      R20 R19 K48  ; R21 := R19; R20 := R19[0x699fd1e2]
176 [-]: CALL      R20 2 2      ; R20 := R20(R21)
177 [-]: EQ        0 R20 K37    ; if R20 ~= 0.000000 then PC := 187
178 [-]: JMP       187          ; PC := 187
179 [-]: SELF      R20 R1 K50   ; R21 := R1; R20 := R1[0x25452953]
180 [-]: MOVE      R22 R18      ; R22 := R18
181 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
182 [-]: TESTSET   R17 R20 1    ; if R20 then PC := 188 else R17 := R20
183 [-]: JMP       188          ; PC := 188
184 [-]: MOVE      R17 R5       ; R17 := R5
185 [-]: JMP       188          ; PC := 188
186 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 187
187 [-]: LOADKB    R17 1 0      ; R17 := true
188 [-]: GETTABLE  R20 R13 K51  ; R20 := R13["unlocked"]
189 [-]: TEST      R20 1        ; if R20 then PC := 195
190 [-]: JMP       195          ; PC := 195
191 [-]: GETTABLE  R20 R12 K52  ; R20 := R12["mForceUnlock"]
192 [-]: TEST      R20 1        ; if R20 then PC := 195
193 [-]: JMP       195          ; PC := 195
194 [-]: MOVE      R20 R5       ; R20 := R5
195 [-]: TEST      R17 1        ; if R17 then PC := 202
196 [-]: JMP       202          ; PC := 202
197 [-]: GETGLOBAL R21 K4       ; R21 := _T
198 [-]: GETTABLE  R21 R21 K53  ; R21 := R21["SHOW_LOCKED_ALERTS"]
199 [-]: TEST      R21 1        ; if R21 then PC := 202
200 [-]: JMP       202          ; PC := 202
201 [-]: LOADKB    R16 0 0      ; R16 := false
202 [-]: GETGLOBAL R21 K4       ; R21 := _T
203 [-]: GETTABLE  R21 R21 K5   ; R21 := R21["CachedAlerts"]
204 [-]: NEWTABLE  R22 0 5      ; R22 := {}
205 [-]: SETTABLE  R22 K54 R12  ; R22["mAlertInfo"] := R12
206 [-]: SETTABLE  R22 K55 R18  ; R22["mRegionIdx"] := R18
207 [-]: SETTABLE  R22 K56 R16  ; R22["mVisible"] := R16
208 [-]: SETTABLE  R22 K57 R20  ; R22["mUnlocked"] := R20
209 [-]: SETTABLE  R22 K58 R17  ; R22["mRegionUnlocked"] := R17
210 [-]: SETTABLE  R21 R6 R22   ; R21[R6] := R22
211 [-]: GETGLOBAL R21 K4       ; R21 := _T
212 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
213 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
214 [-]: TEST      R21 1        ; if R21 then PC := 220
215 [-]: JMP       220          ; PC := 220
216 [-]: GETGLOBAL R21 K4       ; R21 := _T
217 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
218 [-]: NEWTABLE  R22 0 0      ; R22 := {}
219 [-]: SETTABLE  R21 R18 R22  ; R21[R18] := R22
220 [-]: GETGLOBAL R21 K4       ; R21 := _T
221 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
222 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
223 [-]: SETTABLE  R21 K59 R16  ; R21["alert"] := R16
224 [-]: GETGLOBAL R21 K0       ; R21 := 0x7b998233
225 [-]: GETTABLE  R22 R12 K60  ; R22 := R12["mIcon"]
226 [-]: CALL      R21 2 2      ; R21 := R21(R22)
227 [-]: TEST      R21 1        ; if R21 then PC := 234
228 [-]: JMP       234          ; PC := 234
229 [-]: GETGLOBAL R21 K4       ; R21 := _T
230 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
231 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
232 [-]: GETTABLE  R22 R12 K60  ; R22 := R12["mIcon"]
233 [-]: SETTABLE  R21 K61 R22  ; R21["customAlertIcon"] := R22
234 [-]: GETGLOBAL R21 K4       ; R21 := _T
235 [-]: GETTABLE  R21 R21 K5   ; R21 := R21["CachedAlerts"]
236 [-]: GETTABLE  R21 R21 R6   ; R21 := R21[R6]
237 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["mAlertInfo"]
238 [-]: GETTABLE  R21 R21 K32  ; R21 := R21["mMissionInfo"]
239 [-]: GETTABLE  R22 R21 K62  ; R22 := R21["maxEnemyLevel"]
240 [-]: LE        0 R22 K45    ; if R22 > 1.000000 then PC := 249
241 [-]: JMP       249          ; PC := 249
242 [-]: SELF      R22 R3 K63   ; R23 := R3; R22 := R3[0x18a37080]
243 [-]: GETTABLE  R24 R13 K39  ; R24 := R13["name"]
244 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
245 [-]: ADD       R23 R22 K45  ; R23 := R22 + 1.000000
246 [-]: SETTABLE  R21 K64 R23  ; R21["minEnemyLevel"] := R23
247 [-]: ADD       R23 R22 K65  ; R23 := R22 + 3.000000
248 [-]: SETTABLE  R21 K62 R23  ; R21["maxEnemyLevel"] := R23
249 [-]: GETTABLE  R23 R12 K67  ; R23 := R12["mTag"]
250 [-]: SETTABLE  R21 K66 R23  ; R21["alertTag"] := R23
251 [-]: GETUPVAL  R23 U2       ; R23 := U2
252 [-]: MOVE      R24 R6       ; R24 := R6
253 [-]: MOVE      R25 R14      ; R25 := R14
254 [-]: CALL      R23 3 1      ; R23(R24,R25)
255 [-]: FORLOOP   R8 105       ; R8 += R10; if R8 <= R9 then begin PC := 105; R11 := R8 end
256 [-]: GETTABLE  R23 R2 K68   ; R23 := R2["mInvasions"]
257 [-]: NEWTABLE  R24 0 0      ; R24 := {}
258 [-]: GETUPVAL  R25 U3       ; R25 := U3
259 [-]: GETTABLE  R25 R25 K69  ; R25 := R25[0x8d66ec64]
260 [-]: LOADK     R26 K70      ; R26 := "infinv"
261 [-]: CONST     R27 0        ; R27 := 0.000000
262 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
263 [-]: LT        1 K37 R25    ; if 0.000000 < R25 then PC := 266
264 [-]: JMP       266          ; PC := 266
265 [-]: LOADKB    R25 0 1      ; R25 := false; PC := 266
266 [-]: LOADKB    R25 1 0      ; R25 := true
267 [-]: TESTSET   R26 R25 0    ; if not R25 then PC := 278 else R26 := R25
268 [-]: JMP       278          ; PC := 278
269 [-]: GETGLOBAL R26 K71      ; R26 := 0x25d99d89
270 [-]: SELF      R26 R26 K23  ; R27 := R26; R26 := R26[0x69727e0b]
271 [-]: CALL      R26 2 2      ; R26 := R26(R27)
272 [-]: GETTABLE  R26 R26 K72  ; R26 := R26["mSeasonInfo"]
273 [-]: GETTABLE  R26 R26 K73  ; R26 := R26["mPhase"]
274 [-]: LE        1 K74 R26    ; if 4.000000 <= R26 then PC := 277
275 [-]: JMP       277          ; PC := 277
276 [-]: LOADKB    R26 0 1      ; R26 := false; PC := 277
277 [-]: LOADKB    R26 1 0      ; R26 := true
278 [-]: TEST      R25 0        ; if not R25 then PC := 286
279 [-]: JMP       286          ; PC := 286
280 [-]: GETGLOBAL R27 K4       ; R27 := _T
281 [-]: NEWTABLE  R28 0 0      ; R28 := {}
282 [-]: SETTABLE  R27 K75 R28  ; R27["WorldStateDerelictNodes"] := R28
283 [-]: GETGLOBAL R27 K4       ; R27 := _T
284 [-]: NEWTABLE  R28 0 0      ; R28 := {}
285 [-]: SETTABLE  R27 K76 R28  ; R27["WorldStateOutbreakChains"] := R28
286 [-]: CONST     R27 1        ; R27 := 1.000000
287 [-]: LEN       R28 R23      ; R28 := # R23
288 [-]: CONST     R29 1        ; R29 := 1.000000
289 [-]: FORPREP   R27 437      ; R27 -= R29; PC := 437
290 [-]: GETGLOBAL R31 K30      ; R31 := 0xce225efa
291 [-]: CONST     R32 0        ; R32 := 0.000000
292 [-]: CALL      R31 2 1      ; R31(R32)
293 [-]: GETTABLE  R31 R23 R30  ; R31 := R23[R30]
294 [-]: GETGLOBAL R32 K38      ; R32 := 0x64fb1586
295 [-]: GETTABLE  R33 R31 K77  ; R33 := R31["mNode"]
296 [-]: CALL      R32 2 2      ; R32 := R32(R33)
297 [-]: MOVE      R6 R32       ; R6 := R32
298 [-]: GETGLOBAL R32 K34      ; R32 := 0x34291f5c
299 [-]: GETTABLE  R32 R32 K35  ; R32 := R32[0x397b920f]
300 [-]: GETTABLE  R33 R31 K40  ; R33 := R31["mActivation"]
301 [-]: CALL      R32 2 2      ; R32 := R32(R33)
302 [-]: LT        0 K37 R32    ; if 0.000000 >= R32 then PC := 309
303 [-]: JMP       309          ; PC := 309
304 [-]: GETUPVAL  R33 U2       ; R33 := U2
305 [-]: MOVE      R34 R6       ; R34 := R6
306 [-]: MOVE      R35 R32      ; R35 := R32
307 [-]: CALL      R33 3 1      ; R33(R34,R35)
308 [-]: JMP       437          ; PC := 437
309 [-]: GETTABLE  R33 R31 K78  ; R33 := R31["mCompleted"]
310 [-]: TEST      R33 1        ; if R33 then PC := 437
311 [-]: JMP       437          ; PC := 437
312 [-]: SELF      R33 R3 K31   ; R34 := R3; R33 := R3[0x3ad9ed31]
313 [-]: GETTABLE  R35 R31 K77  ; R35 := R31["mNode"]
314 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
315 [-]: GETGLOBAL R34 K4       ; R34 := _T
316 [-]: GETTABLE  R34 R34 K6   ; R34 := R34["CachedInvasionInfo"]
317 [-]: GETUPVAL  R35 U4       ; R35 := U4
318 [-]: GETTABLE  R35 R35 K79  ; R35 := R35[0x62b05d23]
319 [-]: MOVE      R36 R1       ; R36 := R1
320 [-]: MOVE      R37 R31      ; R37 := R31
321 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
322 [-]: SETTABLE  R34 R6 R35   ; R34[R6] := R35
323 [-]: GETGLOBAL R34 K38      ; R34 := 0x64fb1586
324 [-]: GETTABLE  R35 R31 K80  ; R35 := R31["mEventTag"]
325 [-]: CALL      R34 2 2      ; R34 := R34(R35)
326 [-]: EQ        1 R34 K81    ; if R34 == "" then PC := 332
327 [-]: JMP       332          ; PC := 332
328 [-]: GETGLOBAL R34 K38      ; R34 := 0x64fb1586
329 [-]: GETTABLE  R35 R31 K80  ; R35 := R31["mEventTag"]
330 [-]: CALL      R34 2 2      ; R34 := R34(R35)
331 [-]: SETTABLE  R24 R34 R31  ; R24[R34] := R31
332 [-]: GETTABLE  R34 R33 K44  ; R34 := R33["region"]
333 [-]: ADD       R34 R34 K45  ; R34 := R34 + 1.000000
334 [-]: GETTABLE  R34 R4 R34   ; R34 := R4[R34]
335 [-]: GETGLOBAL R35 K0       ; R35 := 0x7b998233
336 [-]: MOVE      R36 R34      ; R36 := R34
337 [-]: CALL      R35 2 2      ; R35 := R35(R36)
338 [-]: TEST      R35 1        ; if R35 then PC := 437
339 [-]: JMP       437          ; PC := 437
340 [-]: GETUPVAL  R35 U0       ; R35 := U0
341 [-]: TEST      R35 0        ; if not R35 then PC := 357
342 [-]: JMP       357          ; PC := 357
343 [-]: SELF      R35 R34 K48  ; R36 := R34; R35 := R34[0x699fd1e2]
344 [-]: CALL      R35 2 2      ; R35 := R35(R36)
345 [-]: EQ        0 R35 K37    ; if R35 ~= 0.000000 then PC := 356
346 [-]: JMP       356          ; PC := 356
347 [-]: SELF      R35 R1 K50   ; R36 := R1; R35 := R1[0x25452953]
348 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
349 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
350 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
351 [-]: TEST      R35 1        ; if R35 then PC := 357
352 [-]: JMP       357          ; PC := 357
353 [-]: MOVE      R35 R5       ; R35 := R5
354 [-]: JMP       357          ; PC := 357
355 [-]: LOADKB    R35 0 1      ; R35 := false; PC := 356
356 [-]: LOADKB    R35 1 0      ; R35 := true
357 [-]: TEST      R35 1        ; if R35 then PC := 363
358 [-]: JMP       363          ; PC := 363
359 [-]: GETGLOBAL R36 K4       ; R36 := _T
360 [-]: GETTABLE  R36 R36 K53  ; R36 := R36["SHOW_LOCKED_ALERTS"]
361 [-]: TEST      R36 0        ; if not R36 then PC := 383
362 [-]: JMP       383          ; PC := 383
363 [-]: GETGLOBAL R36 K4       ; R36 := _T
364 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["CachedRegionStatus"]
365 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
366 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
367 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
368 [-]: TEST      R36 1        ; if R36 then PC := 376
369 [-]: JMP       376          ; PC := 376
370 [-]: GETGLOBAL R36 K4       ; R36 := _T
371 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["CachedRegionStatus"]
372 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
373 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
374 [-]: NEWTABLE  R38 0 0      ; R38 := {}
375 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
376 [-]: GETGLOBAL R36 K4       ; R36 := _T
377 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["CachedRegionStatus"]
378 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
379 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
380 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
381 [-]: GETTABLE  R37 R31 K83  ; R37 := R31["mFaction"]
382 [-]: SETTABLE  R36 K82 R37  ; R36["invasion"] := R37
383 [-]: TEST      R25 0        ; if not R25 then PC := 437
384 [-]: JMP       437          ; PC := 437
385 [-]: GETTABLE  R36 R31 K83  ; R36 := R31["mFaction"]
386 [-]: EQ        0 R36 K84    ; if R36 ~= 2.000000 then PC := 437
387 [-]: JMP       437          ; PC := 437
388 [-]: GETGLOBAL R36 K85      ; R36 := 0xcfc01047
389 [-]: GETTABLE  R37 R34 K86  ; R37 := R34["sectors"]
390 [-]: CALL      R36 2 4      ; R36,R37,R38 := R36(R37)
391 [-]: JMP       435          ; PC := 435
392 [-]: GETTABLE  R41 R40 K87  ; R41 := R40["mission"]
393 [-]: GETTABLE  R41 R41 K88  ; R41 := R41["missionType"]
394 [-]: GETGLOBAL R42 K4       ; R42 := _T
395 [-]: GETTABLE  R42 R42 K76  ; R42 := R42["WorldStateOutbreakChains"]
396 [-]: GETTABLE  R43 R34 K39  ; R43 := R34["name"]
397 [-]: GETTABLE  R42 R42 R43  ; R42 := R42[R43]
398 [-]: TEST      R42 1        ; if R42 then PC := 435
399 [-]: JMP       435          ; PC := 435
400 [-]: TEST      R26 0        ; if not R26 then PC := 404
401 [-]: JMP       404          ; PC := 404
402 [-]: EQ        1 R41 K37    ; if R41 == 0.000000 then PC := 410
403 [-]: JMP       410          ; PC := 410
404 [-]: TEST      R26 1        ; if R26 then PC := 435
405 [-]: JMP       435          ; PC := 435
406 [-]: EQ        1 R41 K37    ; if R41 == 0.000000 then PC := 435
407 [-]: JMP       435          ; PC := 435
408 [-]: EQ        1 R41 K89    ; if R41 == 20.000000 then PC := 435
409 [-]: JMP       435          ; PC := 435
410 [-]: GETGLOBAL R42 K90      ; R42 := 0x7f5022cf
411 [-]: GETTABLE  R42 R42 K91  ; R42 := R42[0xa5c556b9]
412 [-]: GETGLOBAL R43 K38      ; R43 := 0x64fb1586
413 [-]: GETTABLE  R44 R40 K39  ; R44 := R40["name"]
414 [-]: CALL      R43 2 2      ; R43 := R43(R44)
415 [-]: LOADK     R44 K92      ; R44 := "Derelict"
416 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
417 [-]: TEST      R42 0        ; if not R42 then PC := 435
418 [-]: JMP       435          ; PC := 435
419 [-]: GETGLOBAL R42 K4       ; R42 := _T
420 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["WorldStateDerelictNodes"]
421 [-]: GETGLOBAL R43 K38      ; R43 := 0x64fb1586
422 [-]: GETTABLE  R44 R40 K39  ; R44 := R40["name"]
423 [-]: CALL      R43 2 2      ; R43 := R43(R44)
424 [-]: SETTABLE  R42 R43 K93  ; R42[R43] := true
425 [-]: GETGLOBAL R42 K4       ; R42 := _T
426 [-]: GETTABLE  R42 R42 K76  ; R42 := R42["WorldStateOutbreakChains"]
427 [-]: GETTABLE  R43 R34 K39  ; R43 := R34["name"]
428 [-]: GETTABLE  R44 R31 K94  ; R44 := R31["mChainID"]
429 [-]: GETTABLE  R44 R44 K42  ; R44 := R44["mId"]
430 [-]: SETTABLE  R42 R43 R44  ; R42[R43] := R44
431 [-]: EQ        0 R41 K37    ; if R41 ~= 0.000000 then PC := 437
432 [-]: JMP       437          ; PC := 437
433 [-]: LOADKB    R26 0 0      ; R26 := false
434 [-]: JMP       437          ; PC := 437
435 [-]: TFORLOOP  R36 2        ; R39,R40 :=  R36(R37,R38); if R39 ~= nil then begin PC = 392; R38 := R39 end
436 [-]: JMP       392          ; PC := 392
437 [-]: FORLOOP   R27 290      ; R27 += R29; if R27 <= R28 then begin PC := 290; R30 := R27 end
438 [-]: GETTABLE  R42 R2 K95   ; R42 := R2["mGoals"]
439 [-]: NEWTABLE  R43 0 0      ; R43 := {}
440 [-]: GETGLOBAL R44 K0       ; R44 := 0x7b998233
441 [-]: GETGLOBAL R45 K28      ; R45 := 0x83f4e77c
442 [-]: CALL      R44 2 2      ; R44 := R44(R45)
443 [-]: GETUPVAL  R45 U5       ; R45 := U5
444 [-]: GETTABLE  R45 R45 K96  ; R45 := R45[0xbc682855]
445 [-]: MOVE      R46 R1       ; R46 := R1
446 [-]: CALL      R45 2 2      ; R45 := R45(R46)
447 [-]: CONST     R46 1        ; R46 := 1.000000
448 [-]: LEN       R47 R42      ; R47 := # R42
449 [-]: CONST     R48 1        ; R48 := 1.000000
450 [-]: FORPREP   R46 1305     ; R46 -= R48; PC := 1305
451 [-]: GETGLOBAL R50 K30      ; R50 := 0xce225efa
452 [-]: CONST     R51 0        ; R51 := 0.000000
453 [-]: CALL      R50 2 1      ; R50(R51)
454 [-]: GETTABLE  R50 R42 R49  ; R50 := R42[R49]
455 [-]: GETTABLE  R6 R50 K77   ; R6 := R50["mNode"]
456 [-]: GETGLOBAL R51 K34      ; R51 := 0x34291f5c
457 [-]: GETTABLE  R51 R51 K35  ; R51 := R51[0x397b920f]
458 [-]: GETTABLE  R52 R50 K40  ; R52 := R50["mActivation"]
459 [-]: CALL      R51 2 2      ; R51 := R51(R52)
460 [-]: LOADK     R52 K81      ; R52 := ""
461 [-]: TEST      R44 0        ; if not R44 then PC := 470
462 [-]: JMP       470          ; PC := 470
463 [-]: GETGLOBAL R53 K2       ; R53 := 0x3d106989
464 [-]: LOADK     R54 K97      ; R54 := "Goal: "
465 [-]: GETGLOBAL R55 K38      ; R55 := 0x64fb1586
466 [-]: MOVE      R56 R6       ; R56 := R6
467 [-]: CALL      R55 2 2      ; R55 := R55(R56)
468 [-]: CONCAT    R54 R54 R55  ; R54 := R54 .. R55
469 [-]: CALL      R53 2 1      ; R53(R54)
470 [-]: LT        0 K37 R51    ; if 0.000000 >= R51 then PC := 486
471 [-]: JMP       486          ; PC := 486
472 [-]: TEST      R44 0        ; if not R44 then PC := 481
473 [-]: JMP       481          ; PC := 481
474 [-]: GETGLOBAL R53 K2       ; R53 := 0x3d106989
475 [-]: LOADK     R54 K98      ; R54 := "Seconds until start: "
476 [-]: GETGLOBAL R55 K38      ; R55 := 0x64fb1586
477 [-]: MOVE      R56 R51      ; R56 := R51
478 [-]: CALL      R55 2 2      ; R55 := R55(R56)
479 [-]: CONCAT    R54 R54 R55  ; R54 := R54 .. R55
480 [-]: CALL      R53 2 1      ; R53(R54)
481 [-]: GETUPVAL  R53 U2       ; R53 := U2
482 [-]: MOVE      R54 R6       ; R54 := R6
483 [-]: MOVE      R55 R51      ; R55 := R51
484 [-]: CALL      R53 3 1      ; R53(R54,R55)
485 [-]: JMP       1305         ; PC := 1305
486 [-]: GETTABLE  R53 R50 K99  ; R53 := R50["mInvasion"]
487 [-]: TEST      R53 1        ; if R53 then PC := 575
488 [-]: JMP       575          ; PC := 575
489 [-]: GETUPVAL  R53 U0       ; R53 := U0
490 [-]: TEST      R53 0        ; if not R53 then PC := 511
491 [-]: JMP       511          ; PC := 511
492 [-]: SELF      R53 R1 K100  ; R54 := R1; R53 := R1[0x7e2a4aa9]
493 [-]: SUB       R55 R49 K45  ; R55 := R49 - 1.000000
494 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
495 [-]: TEST      R53 0        ; if not R53 then PC := 511
496 [-]: JMP       511          ; PC := 511
497 [-]: GETGLOBAL R53 K34      ; R53 := 0x34291f5c
498 [-]: GETTABLE  R53 R53 K35  ; R53 := R53[0x397b920f]
499 [-]: GETTABLE  R54 R50 K36  ; R54 := R50["mExpiry"]
500 [-]: CALL      R53 2 2      ; R53 := R53(R54)
501 [-]: LE        1 R53 K37    ; if R53 <= 0.000000 then PC := 511
502 [-]: JMP       511          ; PC := 511
503 [-]: GETTABLE  R53 R50 K67  ; R53 := R50["mTag"]
504 [-]: GETUPVAL  R54 U6       ; R54 := U6
505 [-]: EQ        0 R53 R54    ; if R53 ~= R54 then PC := 575
506 [-]: JMP       575          ; PC := 575
507 [-]: TEST      R45 1        ; if R45 then PC := 575
508 [-]: JMP       575          ; PC := 575
509 [-]: TEST      R5 1         ; if R5 then PC := 575
510 [-]: JMP       575          ; PC := 575
511 [-]: TEST      R44 0        ; if not R44 then PC := 516
512 [-]: JMP       516          ; PC := 516
513 [-]: GETGLOBAL R53 K2       ; R53 := 0x3d106989
514 [-]: LOADK     R54 K101     ; R54 := "Goal locked"
515 [-]: CALL      R53 2 1      ; R53(R54)
516 [-]: GETTABLE  R53 R50 K77  ; R53 := R50["mNode"]
517 [-]: EQ        1 R53 K81    ; if R53 == "" then PC := 552
518 [-]: JMP       552          ; PC := 552
519 [-]: GETGLOBAL R53 K90      ; R53 := 0x7f5022cf
520 [-]: GETTABLE  R53 R53 K91  ; R53 := R53[0xa5c556b9]
521 [-]: GETTABLE  R54 R50 K77  ; R54 := R50["mNode"]
522 [-]: LOADK     R55 K102     ; R55 := "Pvp"
523 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
524 [-]: TEST      R53 1        ; if R53 then PC := 552
525 [-]: JMP       552          ; PC := 552
526 [-]: GETTABLE  R53 R50 K103 ; R53 := R50["mOptionalInMission"]
527 [-]: TEST      R53 1        ; if R53 then PC := 552
528 [-]: JMP       552          ; PC := 552
529 [-]: GETTABLE  R53 R50 K104 ; R53 := R50["mRelayReconstruction"]
530 [-]: TEST      R53 1        ; if R53 then PC := 552
531 [-]: JMP       552          ; PC := 552
532 [-]: GETUPVAL  R53 U1       ; R53 := U1
533 [-]: GETTABLE  R53 R53 K26  ; R53 := R53[0x5e35d4d6]
534 [-]: CALL      R53 1 2      ; R53 := R53()
535 [-]: SELF      R53 R53 K31  ; R54 := R53; R53 := R53[0x3ad9ed31]
536 [-]: GETGLOBAL R55 K105     ; R55 := 0x0469f296
537 [-]: GETTABLE  R56 R50 K77  ; R56 := R50["mNode"]
538 [-]: CALL      R55 2 0      ; R55,... := R55(R56)
539 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
540 [-]: GETTABLE  R54 R53 K106 ; R54 := R53["nodeType"]
541 [-]: EQ        0 R54 K45    ; if R54 ~= 1.000000 then PC := 552
542 [-]: JMP       552          ; PC := 552
543 [-]: GETGLOBAL R54 K4       ; R54 := _T
544 [-]: GETTABLE  R54 R54 K16  ; R54 := R54["LockedGoalList"]
545 [-]: GETTABLE  R55 R50 K77  ; R55 := R50["mNode"]
546 [-]: NEWTABLE  R56 0 2      ; R56 := {}
547 [-]: GETTABLE  R57 R50 K107 ; R57 := R50["mDesc"]
548 [-]: SETTABLE  R56 K107 R57 ; R56["mDesc"] := R57
549 [-]: GETTABLE  R57 R50 K108 ; R57 := R50["mMissionKeyName"]
550 [-]: SETTABLE  R56 K108 R57 ; R56["mMissionKeyName"] := R57
551 [-]: SETTABLE  R54 R55 R56  ; R54[R55] := R56
552 [-]: GETTABLE  R54 R50 K109 ; R54 := R50["mFomorian"]
553 [-]: TEST      R54 0        ; if not R54 then PC := 1305
554 [-]: JMP       1305         ; PC := 1305
555 [-]: GETGLOBAL R54 K38      ; R54 := 0x64fb1586
556 [-]: GETTABLE  R55 R50 K110 ; R55 := R50["mVictimNode"]
557 [-]: CALL      R54 2 2      ; R54 := R54(R55)
558 [-]: EQ        1 R54 K81    ; if R54 == "" then PC := 1305
559 [-]: JMP       1305         ; PC := 1305
560 [-]: GETGLOBAL R55 K4       ; R55 := _T
561 [-]: GETTABLE  R55 R55 K17  ; R55 := R55["CachedNodesPendingDestruction"]
562 [-]: NEWTABLE  R56 0 2      ; R56 := {}
563 [-]: GETTABLE  R57 R50 K112 ; R57 := R50["mHealthPct"]
564 [-]: LT        1 K37 R57    ; if 0.000000 < R57 then PC := 567
565 [-]: JMP       567          ; PC := 567
566 [-]: LOADKB    R57 0 1      ; R57 := false; PC := 567
567 [-]: LOADKB    R57 1 0      ; R57 := true
568 [-]: SETTABLE  R56 K111 R57 ; R56["shouldLock"] := R57
569 [-]: GETTABLE  R57 R50 K36  ; R57 := R50["mExpiry"]
570 [-]: SELF      R57 R57 K114 ; R58 := R57; R57 := R57[0x8f89d633]
571 [-]: CALL      R57 2 2      ; R57 := R57(R58)
572 [-]: SETTABLE  R56 K113 R57 ; R56["lockTime"] := R57
573 [-]: SETTABLE  R55 R54 R56  ; R55[R54] := R56
574 [-]: JMP       1305         ; PC := 1305
575 [-]: GETTABLE  R55 R50 K115 ; R55 := R50["mSuccess"]
576 [-]: EQ        1 R55 K37    ; if R55 == 0.000000 then PC := 582
577 [-]: JMP       582          ; PC := 582
578 [-]: GETTABLE  R55 R50 K116 ; R55 := R50["mTypes"]
579 [-]: LEN       R55 R55      ; R55 := # R55
580 [-]: LT        0 K37 R55    ; if 0.000000 >= R55 then PC := 1305
581 [-]: JMP       1305         ; PC := 1305
582 [-]: LOADNIL   R55 R55      ; R55 := nil
583 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
584 [-]: GETTABLE  R57 R50 K108 ; R57 := R50["mMissionKeyName"]
585 [-]: CALL      R56 2 2      ; R56 := R56(R57)
586 [-]: TEST      R56 1        ; if R56 then PC := 674
587 [-]: JMP       674          ; PC := 674
588 [-]: GETGLOBAL R56 K4       ; R56 := _T
589 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
590 [-]: TEST      R56 1        ; if R56 then PC := 598
591 [-]: JMP       598          ; PC := 598
592 [-]: GETGLOBAL R56 K4       ; R56 := _T
593 [-]: NEWTABLE  R57 0 0      ; R57 := {}
594 [-]: SETTABLE  R56 K117 R57 ; R56["CachedGoalKeys"] := R57
595 [-]: GETGLOBAL R56 K4       ; R56 := _T
596 [-]: NEWTABLE  R57 0 0      ; R57 := {}
597 [-]: SETTABLE  R56 K118 R57 ; R56["CachedGoalKeyTypes"] := R57
598 [-]: TEST      R44 0        ; if not R44 then PC := 607
599 [-]: JMP       607          ; PC := 607
600 [-]: GETGLOBAL R56 K2       ; R56 := 0x3d106989
601 [-]: LOADK     R57 K119     ; R57 := "Adding "
602 [-]: GETGLOBAL R58 K38      ; R58 := 0x64fb1586
603 [-]: MOVE      R59 R6       ; R59 := R6
604 [-]: CALL      R58 2 2      ; R58 := R58(R59)
605 [-]: CONCAT    R57 R57 R58  ; R57 := R57 .. R58
606 [-]: CALL      R56 2 1      ; R56(R57)
607 [-]: GETGLOBAL R56 K4       ; R56 := _T
608 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
609 [-]: GETTABLE  R56 R56 R6   ; R56 := R56[R6]
610 [-]: TEST      R56 1        ; if R56 then PC := 626
611 [-]: JMP       626          ; PC := 626
612 [-]: GETGLOBAL R56 K4       ; R56 := _T
613 [-]: GETTABLE  R56 R56 K118 ; R56 := R56["CachedGoalKeyTypes"]
614 [-]: GETGLOBAL R57 K120     ; R57 := 0x88efc25e
615 [-]: GETTABLE  R58 R50 K108 ; R58 := R50["mMissionKeyName"]
616 [-]: CALL      R57 2 2      ; R57 := R57(R58)
617 [-]: SETTABLE  R56 R6 R57   ; R56[R6] := R57
618 [-]: GETGLOBAL R56 K4       ; R56 := _T
619 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
620 [-]: GETGLOBAL R57 K121     ; R57 := 0xb009bbc6
621 [-]: GETGLOBAL R58 K4       ; R58 := _T
622 [-]: GETTABLE  R58 R58 K118 ; R58 := R58["CachedGoalKeyTypes"]
623 [-]: GETTABLE  R58 R58 R6   ; R58 := R58[R6]
624 [-]: CALL      R57 2 2      ; R57 := R57(R58)
625 [-]: SETTABLE  R56 R6 R57   ; R56[R6] := R57
626 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
627 [-]: GETGLOBAL R57 K4       ; R57 := _T
628 [-]: GETTABLE  R57 R57 K117 ; R57 := R57["CachedGoalKeys"]
629 [-]: GETTABLE  R57 R57 R6   ; R57 := R57[R6]
630 [-]: CALL      R56 2 2      ; R56 := R56(R57)
631 [-]: TEST      R56 1        ; if R56 then PC := 647
632 [-]: JMP       647          ; PC := 647
633 [-]: GETGLOBAL R56 K4       ; R56 := _T
634 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
635 [-]: GETTABLE  R56 R56 R6   ; R56 := R56[R6]
636 [-]: SELF      R56 R56 K122 ; R57 := R56; R56 := R56[0xef893aec]
637 [-]: CALL      R56 2 2      ; R56 := R56(R57)
638 [-]: MOVE      R55 R56      ; R55 := R56
639 [-]: GETGLOBAL R56 K38      ; R56 := 0x64fb1586
640 [-]: GETGLOBAL R57 K4       ; R57 := _T
641 [-]: GETTABLE  R57 R57 K117 ; R57 := R57["CachedGoalKeys"]
642 [-]: GETTABLE  R57 R57 R6   ; R57 := R57[R6]
643 [-]: SELF      R57 R57 K123 ; R58 := R57; R57 := R57[0x030ae5e5]
644 [-]: CALL      R57 2 0      ; R57,... := R57(R58)
645 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
646 [-]: MOVE      R52 R56      ; R52 := R56
647 [-]: TEST      R55 0        ; if not R55 then PC := 707
648 [-]: JMP       707          ; PC := 707
649 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
650 [-]: GETTABLE  R56 R56 K64  ; R56 := R56["minEnemyLevel"]
651 [-]: LT        0 K45 R56    ; if 1.000000 >= R56 then PC := 656
652 [-]: JMP       656          ; PC := 656
653 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
654 [-]: GETTABLE  R56 R56 K64  ; R56 := R56["minEnemyLevel"]
655 [-]: SETTABLE  R55 K64 R56  ; R55["minEnemyLevel"] := R56
656 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
657 [-]: GETTABLE  R56 R56 K62  ; R56 := R56["maxEnemyLevel"]
658 [-]: LT        0 K45 R56    ; if 1.000000 >= R56 then PC := 663
659 [-]: JMP       663          ; PC := 663
660 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
661 [-]: GETTABLE  R56 R56 K62  ; R56 := R56["maxEnemyLevel"]
662 [-]: SETTABLE  R55 K62 R56  ; R55["maxEnemyLevel"] := R56
663 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
664 [-]: GETTABLE  R57 R50 K32  ; R57 := R50["mMissionInfo"]
665 [-]: GETTABLE  R57 R57 K124 ; R57 := R57["enemySpec"]
666 [-]: CALL      R56 2 2      ; R56 := R56(R57)
667 [-]: TEST      R56 1        ; if R56 then PC := 672
668 [-]: JMP       672          ; PC := 672
669 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
670 [-]: GETTABLE  R56 R56 K124 ; R56 := R56["enemySpec"]
671 [-]: SETTABLE  R55 K124 R56 ; R55["enemySpec"] := R56
672 [-]: SETTABLE  R50 K32 R55  ; R50["mMissionInfo"] := R55
673 [-]: JMP       707          ; PC := 707
674 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
675 [-]: GETTABLE  R57 R50 K32  ; R57 := R50["mMissionInfo"]
676 [-]: GETTABLE  R57 R57 K125 ; R57 := R57["levelOverride"]
677 [-]: CALL      R56 2 2      ; R56 := R56(R57)
678 [-]: TEST      R56 0        ; if not R56 then PC := 707
679 [-]: JMP       707          ; PC := 707
680 [-]: GETTABLE  R56 R50 K77  ; R56 := R50["mNode"]
681 [-]: EQ        1 R56 K81    ; if R56 == "" then PC := 707
682 [-]: JMP       707          ; PC := 707
683 [-]: GETTABLE  R56 R50 K103 ; R56 := R50["mOptionalInMission"]
684 [-]: TEST      R56 1        ; if R56 then PC := 707
685 [-]: JMP       707          ; PC := 707
686 [-]: GETUPVAL  R56 U1       ; R56 := U1
687 [-]: GETTABLE  R56 R56 K26  ; R56 := R56[0x5e35d4d6]
688 [-]: CALL      R56 1 2      ; R56 := R56()
689 [-]: SELF      R56 R56 K31  ; R57 := R56; R56 := R56[0x3ad9ed31]
690 [-]: GETGLOBAL R58 K105     ; R58 := 0x0469f296
691 [-]: GETTABLE  R59 R50 K77  ; R59 := R50["mNode"]
692 [-]: CALL      R58 2 0      ; R58,... := R58(R59)
693 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
694 [-]: GETTABLE  R57 R50 K32  ; R57 := R50["mMissionInfo"]
695 [-]: GETTABLE  R57 R57 K126 ; R57 := R57["icon"]
696 [-]: GETTABLE  R58 R56 K87  ; R58 := R56["mission"]
697 [-]: SELF      R58 R58 K114 ; R59 := R58; R58 := R58[0x8f89d633]
698 [-]: CALL      R58 2 2      ; R58 := R58(R59)
699 [-]: SETTABLE  R50 K32 R58  ; R50["mMissionInfo"] := R58
700 [-]: GETGLOBAL R58 K0       ; R58 := 0x7b998233
701 [-]: MOVE      R59 R57      ; R59 := R57
702 [-]: CALL      R58 2 2      ; R58 := R58(R59)
703 [-]: TEST      R58 1        ; if R58 then PC := 707
704 [-]: JMP       707          ; PC := 707
705 [-]: GETTABLE  R58 R50 K32  ; R58 := R50["mMissionInfo"]
706 [-]: SETTABLE  R58 K126 R57 ; R58["icon"] := R57
707 [-]: GETTABLE  R58 R50 K32  ; R58 := R50["mMissionInfo"]
708 [-]: GETTABLE  R59 R50 K42  ; R59 := R50["mId"]
709 [-]: GETTABLE  R59 R59 K42  ; R59 := R59["mId"]
710 [-]: SETTABLE  R58 K127 R59 ; R58["goalId"] := R59
711 [-]: NEWTABLE  R58 0 0      ; R58 := {}
712 [-]: CONST     R59 0        ; R59 := 0.000000
713 [-]: GETTABLE  R60 R50 K77  ; R60 := R50["mNode"]
714 [-]: EQ        1 R60 K81    ; if R60 == "" then PC := 748
715 [-]: JMP       748          ; PC := 748
716 [-]: GETTABLE  R60 R50 K103 ; R60 := R50["mOptionalInMission"]
717 [-]: TEST      R60 0        ; if not R60 then PC := 735
718 [-]: JMP       735          ; PC := 735
719 [-]: NEWTABLE  R60 0 4      ; R60 := {}
720 [-]: GETUPVAL  R61 U1       ; R61 := U1
721 [-]: GETTABLE  R61 R61 K129 ; R61 := R61["OPTIONAL_GOAL_PREFIX"]
722 [-]: GETTABLE  R62 R50 K77  ; R62 := R50["mNode"]
723 [-]: CONCAT    R61 R61 R62  ; R61 := R61 .. R62
724 [-]: SETTABLE  R60 K128 R61 ; R60["nodeName"] := R61
725 [-]: GETTABLE  R61 R50 K108 ; R61 := R50["mMissionKeyName"]
726 [-]: SETTABLE  R60 K130 R61 ; R60["missionKeyName"] := R61
727 [-]: SETTABLE  R60 K131 R55 ; R60["missionKeyInfo"] := R55
728 [-]: SETTABLE  R60 K132 R52 ; R60["longDesc"] := R52
729 [-]: GETGLOBAL R61 K133     ; R61 := 0x33bdd652
730 [-]: GETTABLE  R61 R61 K134 ; R61 := R61[0x23d5322f]
731 [-]: MOVE      R62 R58      ; R62 := R58
732 [-]: MOVE      R63 R60      ; R63 := R60
733 [-]: CALL      R61 3 1      ; R61(R62,R63)
734 [-]: JMP       782          ; PC := 782
735 [-]: NEWTABLE  R61 0 4      ; R61 := {}
736 [-]: GETTABLE  R62 R50 K77  ; R62 := R50["mNode"]
737 [-]: SETTABLE  R61 K128 R62 ; R61["nodeName"] := R62
738 [-]: GETTABLE  R62 R50 K108 ; R62 := R50["mMissionKeyName"]
739 [-]: SETTABLE  R61 K130 R62 ; R61["missionKeyName"] := R62
740 [-]: SETTABLE  R61 K131 R55 ; R61["missionKeyInfo"] := R55
741 [-]: SETTABLE  R61 K132 R52 ; R61["longDesc"] := R52
742 [-]: GETGLOBAL R62 K133     ; R62 := 0x33bdd652
743 [-]: GETTABLE  R62 R62 K134 ; R62 := R62[0x23d5322f]
744 [-]: MOVE      R63 R58      ; R63 := R58
745 [-]: MOVE      R64 R61      ; R64 := R61
746 [-]: CALL      R62 3 1      ; R62(R63,R64)
747 [-]: JMP       782          ; PC := 782
748 [-]: GETTABLE  R62 R50 K135 ; R62 := R50["mInvasionNode"]
749 [-]: GETGLOBAL R63 K136     ; R63 := EMPTY_SYMBOL
750 [-]: EQ        1 R62 R63    ; if R62 == R63 then PC := 767
751 [-]: JMP       767          ; PC := 767
752 [-]: NEWTABLE  R62 0 4      ; R62 := {}
753 [-]: GETGLOBAL R63 K38      ; R63 := 0x64fb1586
754 [-]: GETTABLE  R64 R50 K135 ; R64 := R50["mInvasionNode"]
755 [-]: CALL      R63 2 2      ; R63 := R63(R64)
756 [-]: SETTABLE  R62 K128 R63 ; R62["nodeName"] := R63
757 [-]: GETTABLE  R63 R50 K108 ; R63 := R50["mMissionKeyName"]
758 [-]: SETTABLE  R62 K130 R63 ; R62["missionKeyName"] := R63
759 [-]: SETTABLE  R62 K131 R55 ; R62["missionKeyInfo"] := R55
760 [-]: SETTABLE  R62 K132 R52 ; R62["longDesc"] := R52
761 [-]: GETGLOBAL R63 K133     ; R63 := 0x33bdd652
762 [-]: GETTABLE  R63 R63 K134 ; R63 := R63[0x23d5322f]
763 [-]: MOVE      R64 R58      ; R64 := R58
764 [-]: MOVE      R65 R62      ; R65 := R62
765 [-]: CALL      R63 3 1      ; R63(R64,R65)
766 [-]: JMP       782          ; PC := 782
767 [-]: NEWTABLE  R63 0 4      ; R63 := {}
768 [-]: GETUPVAL  R64 U1       ; R64 := U1
769 [-]: GETTABLE  R64 R64 K137 ; R64 := R64["ANY_NODE_PREFIX"]
770 [-]: MOVE      R65 R49      ; R65 := R49
771 [-]: CONCAT    R64 R64 R65  ; R64 := R64 .. R65
772 [-]: SETTABLE  R63 K128 R64 ; R63["nodeName"] := R64
773 [-]: GETTABLE  R64 R50 K108 ; R64 := R50["mMissionKeyName"]
774 [-]: SETTABLE  R63 K130 R64 ; R63["missionKeyName"] := R64
775 [-]: SETTABLE  R63 K131 R55 ; R63["missionKeyInfo"] := R55
776 [-]: SETTABLE  R63 K132 R52 ; R63["longDesc"] := R52
777 [-]: GETGLOBAL R64 K133     ; R64 := 0x33bdd652
778 [-]: GETTABLE  R64 R64 K134 ; R64 := R64[0x23d5322f]
779 [-]: MOVE      R65 R58      ; R65 := R58
780 [-]: MOVE      R66 R63      ; R66 := R63
781 [-]: CALL      R64 3 1      ; R64(R65,R66)
782 [-]: GETUPVAL  R64 U1       ; R64 := U1
783 [-]: GETTABLE  R64 R64 K138 ; R64 := R64[0x9897ecc6]
784 [-]: MOVE      R65 R50      ; R65 := R50
785 [-]: CALL      R64 2 4      ; R64,R65,R66 := R64(R65)
786 [-]: CONST     R67 1        ; R67 := 1.000000
787 [-]: GETTABLE  R68 R50 K139 ; R68 := R50["mConcurrentNodes"]
788 [-]: LEN       R68 R68      ; R68 := # R68
789 [-]: CONST     R69 1        ; R69 := 1.000000
790 [-]: FORPREP   R67 1076     ; R67 -= R69; PC := 1076
791 [-]: GETTABLE  R71 R50 K139 ; R71 := R50["mConcurrentNodes"]
792 [-]: GETTABLE  R71 R71 R70  ; R71 := R71[R70]
793 [-]: GETTABLE  R72 R50 K77  ; R72 := R50["mNode"]
794 [-]: EQ        1 R71 R72    ; if R71 == R72 then PC := 1076
795 [-]: JMP       1076         ; PC := 1076
796 [-]: EQ        1 R71 K81    ; if R71 == "" then PC := 1076
797 [-]: JMP       1076         ; PC := 1076
798 [-]: GETUPVAL  R72 U0       ; R72 := U0
799 [-]: GETTABLE  R73 R50 K140 ; R73 := R50["mConcurrentNodeReqs"]
800 [-]: LEN       R73 R73      ; R73 := # R73
801 [-]: LE        0 R70 R73    ; if R70 > R73 then PC := 819
802 [-]: JMP       819          ; PC := 819
803 [-]: GETTABLE  R73 R50 K140 ; R73 := R50["mConcurrentNodeReqs"]
804 [-]: GETTABLE  R73 R73 R70  ; R73 := R73[R70]
805 [-]: LT        0 K37 R73    ; if 0.000000 >= R73 then PC := 819
806 [-]: JMP       819          ; PC := 819
807 [-]: GETUPVAL  R73 U7       ; R73 := U7
808 [-]: GETTABLE  R73 R73 K141 ; R73 := R73[0x06d055f9]
809 [-]: GETTABLE  R74 R50 K142 ; R74 := R50["mBest"]
810 [-]: MOVE      R75 R65      ; R75 := R65
811 [-]: MOVE      R76 R64      ; R76 := R64
812 [-]: CALL      R73 4 2      ; R73 := R73(R74,R75,R76)
813 [-]: GETTABLE  R74 R50 K140 ; R74 := R50["mConcurrentNodeReqs"]
814 [-]: GETTABLE  R74 R74 R70  ; R74 := R74[R70]
815 [-]: LE        1 R74 R73    ; if R74 <= R73 then PC := 818
816 [-]: JMP       818          ; PC := 818
817 [-]: LOADKB    R72 0 1      ; R72 := false; PC := 818
818 [-]: LOADKB    R72 1 0      ; R72 := true
819 [-]: TEST      R72 0        ; if not R72 then PC := 946
820 [-]: JMP       946          ; PC := 946
821 [-]: GETTABLE  R73 R50 K108 ; R73 := R50["mMissionKeyName"]
822 [-]: MOVE      R74 R55      ; R74 := R55
823 [-]: LOADKB    R75 0 0      ; R75 := false
824 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
825 [-]: LEN       R76 R76      ; R76 := # R76
826 [-]: LE        0 R70 R76    ; if R70 > R76 then PC := 884
827 [-]: JMP       884          ; PC := 884
828 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
829 [-]: GETTABLE  R76 R76 R70  ; R76 := R76[R70]
830 [-]: TEST      R76 0        ; if not R76 then PC := 884
831 [-]: JMP       884          ; PC := 884
832 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
833 [-]: GETTABLE  R76 R76 R70  ; R76 := R76[R70]
834 [-]: EQ        1 R76 K81    ; if R76 == "" then PC := 884
835 [-]: JMP       884          ; PC := 884
836 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
837 [-]: GETTABLE  R73 R76 R70  ; R73 := R76[R70]
838 [-]: GETGLOBAL R76 K121     ; R76 := 0xb009bbc6
839 [-]: MOVE      R77 R73      ; R77 := R73
840 [-]: CALL      R76 2 2      ; R76 := R76(R77)
841 [-]: GETGLOBAL R77 K0       ; R77 := 0x7b998233
842 [-]: MOVE      R78 R76      ; R78 := R76
843 [-]: CALL      R77 2 2      ; R77 := R77(R78)
844 [-]: TEST      R77 1        ; if R77 then PC := 854
845 [-]: JMP       854          ; PC := 854
846 [-]: SELF      R77 R76 K122 ; R78 := R76; R77 := R76[0xef893aec]
847 [-]: CALL      R77 2 2      ; R77 := R77(R78)
848 [-]: MOVE      R74 R77      ; R74 := R77
849 [-]: GETGLOBAL R77 K38      ; R77 := 0x64fb1586
850 [-]: SELF      R78 R76 K123 ; R79 := R76; R78 := R76[0x030ae5e5]
851 [-]: CALL      R78 2 0      ; R78,... := R78(R79)
852 [-]: CALL      R77 0 2      ; R77 := R77(R78,...)
853 [-]: MOVE      R52 R77      ; R52 := R77
854 [-]: GETTABLE  R77 R50 K144 ; R77 := R50["mClampNodeScores"]
855 [-]: TEST      R77 0        ; if not R77 then PC := 863
856 [-]: JMP       863          ; PC := 863
857 [-]: GETTABLE  R77 R50 K140 ; R77 := R50["mConcurrentNodeReqs"]
858 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
859 [-]: GETTABLE  R78 R50 K145 ; R78 := R50["mGoal"]
860 [-]: LE        0 R78 R77    ; if R78 > R77 then PC := 863
861 [-]: JMP       863          ; PC := 863
862 [-]: LOADKB    R75 1 0      ; R75 := true
863 [-]: GETGLOBAL R77 K4       ; R77 := _T
864 [-]: GETTABLE  R77 R77 K117 ; R77 := R77["CachedGoalKeys"]
865 [-]: GETTABLE  R77 R77 R71  ; R77 := R77[R71]
866 [-]: TEST      R77 1        ; if R77 then PC := 927
867 [-]: JMP       927          ; PC := 927
868 [-]: GETGLOBAL R77 K4       ; R77 := _T
869 [-]: GETTABLE  R77 R77 K118 ; R77 := R77["CachedGoalKeyTypes"]
870 [-]: GETGLOBAL R78 K120     ; R78 := 0x88efc25e
871 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
872 [-]: GETTABLE  R79 R79 R70  ; R79 := R79[R70]
873 [-]: CALL      R78 2 2      ; R78 := R78(R79)
874 [-]: SETTABLE  R77 R71 R78  ; R77[R71] := R78
875 [-]: GETGLOBAL R77 K4       ; R77 := _T
876 [-]: GETTABLE  R77 R77 K117 ; R77 := R77["CachedGoalKeys"]
877 [-]: GETGLOBAL R78 K121     ; R78 := 0xb009bbc6
878 [-]: GETGLOBAL R79 K4       ; R79 := _T
879 [-]: GETTABLE  R79 R79 K118 ; R79 := R79["CachedGoalKeyTypes"]
880 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
881 [-]: CALL      R78 2 2      ; R78 := R78(R79)
882 [-]: SETTABLE  R77 R71 R78  ; R77[R71] := R78
883 [-]: JMP       927          ; PC := 927
884 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
885 [-]: LEN       R77 R77      ; R77 := # R77
886 [-]: LE        0 R70 R77    ; if R70 > R77 then PC := 907
887 [-]: JMP       907          ; PC := 907
888 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
889 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
890 [-]: TEST      R77 0        ; if not R77 then PC := 907
891 [-]: JMP       907          ; PC := 907
892 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
893 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
894 [-]: SELF      R77 R77 K114 ; R78 := R77; R77 := R77[0x8f89d633]
895 [-]: CALL      R77 2 2      ; R77 := R77(R78)
896 [-]: MOVE      R74 R77      ; R74 := R77
897 [-]: GETTABLE  R77 R50 K144 ; R77 := R50["mClampNodeScores"]
898 [-]: TEST      R77 0        ; if not R77 then PC := 927
899 [-]: JMP       927          ; PC := 927
900 [-]: GETTABLE  R77 R50 K140 ; R77 := R50["mConcurrentNodeReqs"]
901 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
902 [-]: GETTABLE  R78 R50 K145 ; R78 := R50["mGoal"]
903 [-]: LE        0 R78 R77    ; if R78 > R77 then PC := 927
904 [-]: JMP       927          ; PC := 927
905 [-]: LOADKB    R75 1 0      ; R75 := true
906 [-]: JMP       927          ; PC := 927
907 [-]: GETTABLE  R77 R50 K143 ; R77 := R50["mConcurrentMissionKeyNames"]
908 [-]: LEN       R77 R77      ; R77 := # R77
909 [-]: EQ        0 R77 K37    ; if R77 ~= 0.000000 then PC := 927
910 [-]: JMP       927          ; PC := 927
911 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
912 [-]: LEN       R77 R77      ; R77 := # R77
913 [-]: EQ        0 R77 K37    ; if R77 ~= 0.000000 then PC := 927
914 [-]: JMP       927          ; PC := 927
915 [-]: GETUPVAL  R77 U1       ; R77 := U1
916 [-]: GETTABLE  R77 R77 K26  ; R77 := R77[0x5e35d4d6]
917 [-]: CALL      R77 1 2      ; R77 := R77()
918 [-]: SELF      R77 R77 K31  ; R78 := R77; R77 := R77[0x3ad9ed31]
919 [-]: GETGLOBAL R79 K105     ; R79 := 0x0469f296
920 [-]: MOVE      R80 R71      ; R80 := R71
921 [-]: CALL      R79 2 0      ; R79,... := R79(R80)
922 [-]: CALL      R77 0 2      ; R77 := R77(R78,...)
923 [-]: GETTABLE  R78 R77 K87  ; R78 := R77["mission"]
924 [-]: SELF      R78 R78 K114 ; R79 := R78; R78 := R78[0x8f89d633]
925 [-]: CALL      R78 2 2      ; R78 := R78(R79)
926 [-]: MOVE      R74 R78      ; R74 := R78
927 [-]: ADD       R59 R59 K45  ; R59 := R59 + 1.000000
928 [-]: NEWTABLE  R78 0 8      ; R78 := {}
929 [-]: SETTABLE  R78 K128 R71 ; R78["nodeName"] := R71
930 [-]: SETTABLE  R78 K130 R73 ; R78["missionKeyName"] := R73
931 [-]: SETTABLE  R78 K131 R74 ; R78["missionKeyInfo"] := R74
932 [-]: SETTABLE  R78 K147 K93 ; R78["concurrent"] := true
933 [-]: SETTABLE  R78 K148 R75 ; R78["challenge"] := R75
934 [-]: ADD       R79 R59 K45  ; R79 := R59 + 1.000000
935 [-]: SETTABLE  R78 K149 R79 ; R78["concurrentNumeral"] := R79
936 [-]: GETTABLE  R79 R50 K140 ; R79 := R50["mConcurrentNodeReqs"]
937 [-]: GETTABLE  R79 R79 R70  ; R79 := R79[R70]
938 [-]: SETTABLE  R78 K150 R79 ; R78["nodeScoreReq"] := R79
939 [-]: SETTABLE  R78 K132 R52 ; R78["longDesc"] := R52
940 [-]: GETGLOBAL R79 K133     ; R79 := 0x33bdd652
941 [-]: GETTABLE  R79 R79 K134 ; R79 := R79[0x23d5322f]
942 [-]: MOVE      R80 R58      ; R80 := R58
943 [-]: MOVE      R81 R78      ; R81 := R78
944 [-]: CALL      R79 3 1      ; R79(R80,R81)
945 [-]: JMP       1076         ; PC := 1076
946 [-]: GETGLOBAL R79 K4       ; R79 := _T
947 [-]: GETTABLE  R79 R79 K16  ; R79 := R79["LockedGoalList"]
948 [-]: NEWTABLE  R80 0 1      ; R80 := {}
949 [-]: GETTABLE  R81 R50 K107 ; R81 := R50["mDesc"]
950 [-]: SETTABLE  R80 K107 R81 ; R80["mDesc"] := R81
951 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
952 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
953 [-]: TEST      R79 0        ; if not R79 then PC := 1076
954 [-]: JMP       1076         ; PC := 1076
955 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
956 [-]: LEN       R79 R79      ; R79 := # R79
957 [-]: LE        0 R70 R79    ; if R70 > R79 then PC := 1076
958 [-]: JMP       1076         ; PC := 1076
959 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
960 [-]: GETTABLE  R79 R79 R70  ; R79 := R79[R70]
961 [-]: TEST      R79 0        ; if not R79 then PC := 1076
962 [-]: JMP       1076         ; PC := 1076
963 [-]: GETGLOBAL R79 K4       ; R79 := _T
964 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
965 [-]: TEST      R79 1        ; if R79 then PC := 970
966 [-]: JMP       970          ; PC := 970
967 [-]: GETGLOBAL R79 K4       ; R79 := _T
968 [-]: NEWTABLE  R80 0 0      ; R80 := {}
969 [-]: SETTABLE  R79 K151 R80 ; R79["LockedGoalMissionInfo"] := R80
970 [-]: GETGLOBAL R79 K4       ; R79 := _T
971 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
972 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
973 [-]: TEST      R79 1        ; if R79 then PC := 1076
974 [-]: JMP       1076         ; PC := 1076
975 [-]: GETGLOBAL R79 K4       ; R79 := _T
976 [-]: GETTABLE  R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
977 [-]: TEST      R79 1        ; if R79 then PC := 985
978 [-]: JMP       985          ; PC := 985
979 [-]: GETGLOBAL R79 K4       ; R79 := _T
980 [-]: NEWTABLE  R80 0 0      ; R80 := {}
981 [-]: SETTABLE  R79 K117 R80 ; R79["CachedGoalKeys"] := R80
982 [-]: GETGLOBAL R79 K4       ; R79 := _T
983 [-]: NEWTABLE  R80 0 0      ; R80 := {}
984 [-]: SETTABLE  R79 K118 R80 ; R79["CachedGoalKeyTypes"] := R80
985 [-]: GETGLOBAL R79 K4       ; R79 := _T
986 [-]: GETTABLE  R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
987 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
988 [-]: TEST      R79 1        ; if R79 then PC := 1005
989 [-]: JMP       1005         ; PC := 1005
990 [-]: GETGLOBAL R79 K4       ; R79 := _T
991 [-]: GETTABLE  R79 R79 K118 ; R79 := R79["CachedGoalKeyTypes"]
992 [-]: GETGLOBAL R80 K120     ; R80 := 0x88efc25e
993 [-]: GETTABLE  R81 R50 K143 ; R81 := R50["mConcurrentMissionKeyNames"]
994 [-]: GETTABLE  R81 R81 R70  ; R81 := R81[R70]
995 [-]: CALL      R80 2 2      ; R80 := R80(R81)
996 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
997 [-]: GETGLOBAL R79 K4       ; R79 := _T
998 [-]: GETTABLE  R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
999 [-]: GETGLOBAL R80 K121     ; R80 := 0xb009bbc6
1000 [-]: GETGLOBAL R81 K4       ; R81 := _T
1001 [-]: GETTABLE  R81 R81 K118 ; R81 := R81["CachedGoalKeyTypes"]
1002 [-]: GETTABLE  R81 R81 R71  ; R81 := R81[R71]
1003 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1004 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
1005 [-]: GETGLOBAL R79 K0       ; R79 := 0x7b998233
1006 [-]: GETGLOBAL R80 K4       ; R80 := _T
1007 [-]: GETTABLE  R80 R80 K117 ; R80 := R80["CachedGoalKeys"]
1008 [-]: GETTABLE  R80 R80 R71  ; R80 := R80[R71]
1009 [-]: CALL      R79 2 2      ; R79 := R79(R80)
1010 [-]: TEST      R79 1        ; if R79 then PC := 1076
1011 [-]: JMP       1076         ; PC := 1076
1012 [-]: GETGLOBAL R79 K4       ; R79 := _T
1013 [-]: GETTABLE  R79 R79 K15  ; R79 := R79["CachedGoalLongDesc"]
1014 [-]: GETGLOBAL R80 K38      ; R80 := 0x64fb1586
1015 [-]: GETGLOBAL R81 K4       ; R81 := _T
1016 [-]: GETTABLE  R81 R81 K117 ; R81 := R81["CachedGoalKeys"]
1017 [-]: GETTABLE  R81 R81 R71  ; R81 := R81[R71]
1018 [-]: SELF      R81 R81 K123 ; R82 := R81; R81 := R81[0x030ae5e5]
1019 [-]: CALL      R81 2 0      ; R81,... := R81(R82)
1020 [-]: CALL      R80 0 2      ; R80 := R80(R81,...)
1021 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
1022 [-]: GETGLOBAL R79 K4       ; R79 := _T
1023 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1024 [-]: NEWTABLE  R80 0 0      ; R80 := {}
1025 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
1026 [-]: GETGLOBAL R79 K4       ; R79 := _T
1027 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1028 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1029 [-]: GETGLOBAL R80 K4       ; R80 := _T
1030 [-]: GETTABLE  R80 R80 K117 ; R80 := R80["CachedGoalKeys"]
1031 [-]: GETTABLE  R80 R80 R71  ; R80 := R80[R71]
1032 [-]: SELF      R80 R80 K122 ; R81 := R80; R80 := R80[0xef893aec]
1033 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1034 [-]: SETTABLE  R79 K32 R80  ; R79["mMissionInfo"] := R80
1035 [-]: GETGLOBAL R79 K4       ; R79 := _T
1036 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1037 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1038 [-]: GETGLOBAL R80 K152     ; R80 := 0x603636ad
1039 [-]: GETTABLE  R81 R50 K107 ; R81 := R50["mDesc"]
1040 [-]: LOADKB    R82 0 0      ; R82 := false
1041 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
1042 [-]: LOADK     R81 K153     ; R81 := " - "
1043 [-]: GETGLOBAL R82 K152     ; R82 := 0x603636ad
1044 [-]: LOADK     R83 K154     ; R83 := "/Lotus/Language/Menu/Lobby_Mission"
1045 [-]: LOADNIL   R84 R84      ; R84 := nil
1046 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
1047 [-]: LOADK     R83 K155     ; R83 := " "
1048 [-]: GETGLOBAL R84 K38      ; R84 := 0x64fb1586
1049 [-]: ADD       R85 R70 K45  ; R85 := R70 + 1.000000
1050 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1051 [-]: CONCAT    R80 R80 R84  ; R80 := R80 .. R81 .. R82 .. R83 .. R84
1052 [-]: SETTABLE  R79 K107 R80 ; R79["mDesc"] := R80
1053 [-]: GETGLOBAL R79 K4       ; R79 := _T
1054 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1055 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1056 [-]: GETGLOBAL R80 K156     ; R80 := 0x8650181f
1057 [-]: GETTABLE  R81 R50 K42  ; R81 := R50["mId"]
1058 [-]: GETTABLE  R81 R81 K42  ; R81 := R81["mId"]
1059 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1060 [-]: SETTABLE  R79 K42 R80  ; R79["mId"] := R80
1061 [-]: GETGLOBAL R79 K4       ; R79 := _T
1062 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1063 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1064 [-]: GETGLOBAL R80 K105     ; R80 := 0x0469f296
1065 [-]: GETTABLE  R81 R50 K67  ; R81 := R50["mTag"]
1066 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1067 [-]: SETTABLE  R79 K67 R80  ; R79["mTag"] := R80
1068 [-]: GETGLOBAL R79 K4       ; R79 := _T
1069 [-]: GETTABLE  R79 R79 K16  ; R79 := R79["LockedGoalList"]
1070 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1071 [-]: GETGLOBAL R80 K4       ; R80 := _T
1072 [-]: GETTABLE  R80 R80 K151 ; R80 := R80["LockedGoalMissionInfo"]
1073 [-]: GETTABLE  R80 R80 R71  ; R80 := R80[R71]
1074 [-]: GETTABLE  R80 R80 K107 ; R80 := R80["mDesc"]
1075 [-]: SETTABLE  R79 K107 R80 ; R79["mDesc"] := R80
1076 [-]: FORLOOP   R67 791      ; R67 += R69; if R67 <= R68 then begin PC := 791; R70 := R67 end
1077 [-]: CONST     R79 1        ; R79 := 1.000000
1078 [-]: LEN       R80 R58      ; R80 := # R58
1079 [-]: CONST     R81 1        ; R81 := 1.000000
1080 [-]: FORPREP   R79 1272     ; R79 -= R81; PC := 1272
1081 [-]: GETTABLE  R83 R58 R82  ; R83 := R58[R82]
1082 [-]: GETTABLE  R84 R83 K128 ; R84 := R83["nodeName"]
1083 [-]: GETGLOBAL R85 K7       ; R85 := 0x0032441c
1084 [-]: GETTABLE  R85 R85 K8   ; R85 := R85["CachedGoalInfo"]
1085 [-]: SELF      R86 R50 K114 ; R87 := R50; R86 := R50[0x8f89d633]
1086 [-]: CALL      R86 2 2      ; R86 := R86(R87)
1087 [-]: SETTABLE  R85 R84 R86  ; R85[R84] := R86
1088 [-]: GETGLOBAL R85 K7       ; R85 := 0x0032441c
1089 [-]: GETTABLE  R85 R85 K8   ; R85 := R85["CachedGoalInfo"]
1090 [-]: GETTABLE  R85 R85 R84  ; R85 := R85[R84]
1091 [-]: SETTABLE  R85 K77 R84  ; R85["mNode"] := R84
1092 [-]: GETGLOBAL R85 K4       ; R85 := _T
1093 [-]: GETTABLE  R85 R85 K15  ; R85 := R85["CachedGoalLongDesc"]
1094 [-]: GETTABLE  R86 R83 K132 ; R86 := R83["longDesc"]
1095 [-]: SETTABLE  R85 R84 R86  ; R85[R84] := R86
1096 [-]: GETGLOBAL R85 K38      ; R85 := 0x64fb1586
1097 [-]: GETTABLE  R86 R50 K110 ; R86 := R50["mVictimNode"]
1098 [-]: CALL      R85 2 2      ; R85 := R85(R86)
1099 [-]: EQ        1 R85 K81    ; if R85 == "" then PC := 1115
1100 [-]: JMP       1115         ; PC := 1115
1101 [-]: GETGLOBAL R86 K4       ; R86 := _T
1102 [-]: GETTABLE  R86 R86 K17  ; R86 := R86["CachedNodesPendingDestruction"]
1103 [-]: NEWTABLE  R87 0 2      ; R87 := {}
1104 [-]: GETTABLE  R88 R50 K112 ; R88 := R50["mHealthPct"]
1105 [-]: LT        1 K37 R88    ; if 0.000000 < R88 then PC := 1108
1106 [-]: JMP       1108         ; PC := 1108
1107 [-]: LOADKB    R88 0 1      ; R88 := false; PC := 1108
1108 [-]: LOADKB    R88 1 0      ; R88 := true
1109 [-]: SETTABLE  R87 K111 R88 ; R87["shouldLock"] := R88
1110 [-]: GETTABLE  R88 R50 K36  ; R88 := R50["mExpiry"]
1111 [-]: SELF      R88 R88 K114 ; R89 := R88; R88 := R88[0x8f89d633]
1112 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1113 [-]: SETTABLE  R87 K113 R88 ; R87["lockTime"] := R88
1114 [-]: SETTABLE  R86 R85 R87  ; R86[R85] := R87
1115 [-]: GETTABLE  R86 R83 K131 ; R86 := R83["missionKeyInfo"]
1116 [-]: TEST      R86 0        ; if not R86 then PC := 1143
1117 [-]: JMP       1143         ; PC := 1143
1118 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1119 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1120 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1121 [-]: GETTABLE  R87 R83 K130 ; R87 := R83["missionKeyName"]
1122 [-]: SETTABLE  R86 K108 R87 ; R86["mMissionKeyName"] := R87
1123 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1124 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1125 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1126 [-]: GETTABLE  R87 R83 K131 ; R87 := R83["missionKeyInfo"]
1127 [-]: SETTABLE  R86 K32 R87  ; R86["mMissionInfo"] := R87
1128 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1129 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1130 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1131 [-]: GETTABLE  R86 R86 K32  ; R86 := R86["mMissionInfo"]
1132 [-]: GETGLOBAL R87 K105     ; R87 := 0x0469f296
1133 [-]: MOVE      R88 R84      ; R88 := R84
1134 [-]: CALL      R87 2 2      ; R87 := R87(R88)
1135 [-]: SETTABLE  R86 K33 R87  ; R86["location"] := R87
1136 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1137 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1138 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1139 [-]: GETTABLE  R86 R86 K32  ; R86 := R86["mMissionInfo"]
1140 [-]: GETTABLE  R87 R50 K42  ; R87 := R50["mId"]
1141 [-]: GETTABLE  R87 R87 K42  ; R87 := R87["mId"]
1142 [-]: SETTABLE  R86 K127 R87 ; R86["goalId"] := R87
1143 [-]: GETTABLE  R86 R83 K147 ; R86 := R83["concurrent"]
1144 [-]: EQ        0 R86 K93    ; if R86 ~= true then PC := 1171
1145 [-]: JMP       1171         ; PC := 1171
1146 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1147 [-]: GETTABLE  R86 R86 K9   ; R86 := R86["MergedGoalNodes"]
1148 [-]: GETTABLE  R87 R83 K150 ; R87 := R83["nodeScoreReq"]
1149 [-]: SETTABLE  R86 R84 R87  ; R86[R84] := R87
1150 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1151 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1152 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1153 [-]: GETGLOBAL R87 K152     ; R87 := 0x603636ad
1154 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1155 [-]: GETTABLE  R88 R88 K8   ; R88 := R88["CachedGoalInfo"]
1156 [-]: GETTABLE  R88 R88 R84  ; R88 := R88[R84]
1157 [-]: GETTABLE  R88 R88 K107 ; R88 := R88["mDesc"]
1158 [-]: LOADKB    R89 0 0      ; R89 := false
1159 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1160 [-]: LOADK     R88 K153     ; R88 := " - "
1161 [-]: GETGLOBAL R89 K152     ; R89 := 0x603636ad
1162 [-]: LOADK     R90 K154     ; R90 := "/Lotus/Language/Menu/Lobby_Mission"
1163 [-]: LOADNIL   R91 R91      ; R91 := nil
1164 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
1165 [-]: LOADK     R90 K155     ; R90 := " "
1166 [-]: GETGLOBAL R91 K38      ; R91 := 0x64fb1586
1167 [-]: GETTABLE  R92 R83 K149 ; R92 := R83["concurrentNumeral"]
1168 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1169 [-]: CONCAT    R87 R87 R91  ; R87 := R87 .. R88 .. R89 .. R90 .. R91
1170 [-]: SETTABLE  R86 K107 R87 ; R86["mDesc"] := R87
1171 [-]: GETTABLE  R86 R83 K148 ; R86 := R83["challenge"]
1172 [-]: TEST      R86 0        ; if not R86 then PC := 1197
1173 [-]: JMP       1197         ; PC := 1197
1174 [-]: GETTABLE  R86 R50 K67  ; R86 := R50["mTag"]
1175 [-]: GETGLOBAL R87 K105     ; R87 := 0x0469f296
1176 [-]: LOADK     R88 K157     ; R88 := "WaterFight"
1177 [-]: CALL      R87 2 2      ; R87 := R87(R88)
1178 [-]: EQ        1 R86 R87    ; if R86 == R87 then PC := 1197
1179 [-]: JMP       1197         ; PC := 1197
1180 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1181 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1182 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1183 [-]: GETGLOBAL R87 K152     ; R87 := 0x603636ad
1184 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1185 [-]: GETTABLE  R88 R88 K8   ; R88 := R88["CachedGoalInfo"]
1186 [-]: GETTABLE  R88 R88 R84  ; R88 := R88[R84]
1187 [-]: GETTABLE  R88 R88 K107 ; R88 := R88["mDesc"]
1188 [-]: LOADKB    R89 0 0      ; R89 := false
1189 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1190 [-]: LOADK     R88 K155     ; R88 := " "
1191 [-]: GETGLOBAL R89 K152     ; R89 := 0x603636ad
1192 [-]: LOADK     R90 K158     ; R90 := "/Lotus/Language/Menu/WorldStateChallengeMode"
1193 [-]: LOADKB    R91 0 0      ; R91 := false
1194 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
1195 [-]: CONCAT    R87 R87 R89  ; R87 := R87 .. R88 .. R89
1196 [-]: SETTABLE  R86 K107 R87 ; R86["mDesc"] := R87
1197 [-]: GETGLOBAL R86 K0       ; R86 := 0x7b998233
1198 [-]: GETUPVAL  R87 U1       ; R87 := U1
1199 [-]: GETTABLE  R87 R87 K137 ; R87 := R87["ANY_NODE_PREFIX"]
1200 [-]: CALL      R86 2 2      ; R86 := R86(R87)
1201 [-]: TEST      R86 1        ; if R86 then PC := 1211
1202 [-]: JMP       1211         ; PC := 1211
1203 [-]: GETGLOBAL R86 K90      ; R86 := 0x7f5022cf
1204 [-]: GETTABLE  R86 R86 K91  ; R86 := R86[0xa5c556b9]
1205 [-]: MOVE      R87 R84      ; R87 := R84
1206 [-]: GETUPVAL  R88 U1       ; R88 := U1
1207 [-]: GETTABLE  R88 R88 K137 ; R88 := R88["ANY_NODE_PREFIX"]
1208 [-]: CALL      R86 3 2      ; R86 := R86(R87,R88)
1209 [-]: TEST      R86 1        ; if R86 then PC := 1244
1210 [-]: JMP       1244         ; PC := 1244
1211 [-]: SELF      R86 R3 K31   ; R87 := R3; R86 := R3[0x3ad9ed31]
1212 [-]: GETGLOBAL R88 K105     ; R88 := 0x0469f296
1213 [-]: MOVE      R89 R84      ; R89 := R84
1214 [-]: CALL      R88 2 0      ; R88,... := R88(R89)
1215 [-]: CALL      R86 0 2      ; R86 := R86(R87,...)
1216 [-]: GETTABLE  R87 R86 K44  ; R87 := R86["region"]
1217 [-]: ADD       R87 R87 K45  ; R87 := R87 + 1.000000
1218 [-]: GETGLOBAL R88 K4       ; R88 := _T
1219 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1220 [-]: GETTABLE  R88 R88 R87  ; R88 := R88[R87]
1221 [-]: TEST      R88 1        ; if R88 then PC := 1227
1222 [-]: JMP       1227         ; PC := 1227
1223 [-]: GETGLOBAL R88 K4       ; R88 := _T
1224 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1225 [-]: NEWTABLE  R89 0 0      ; R89 := {}
1226 [-]: SETTABLE  R88 R87 R89  ; R88[R87] := R89
1227 [-]: GETGLOBAL R88 K4       ; R88 := _T
1228 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1229 [-]: GETTABLE  R88 R88 R87  ; R88 := R88[R87]
1230 [-]: SETTABLE  R88 K159 K93 ; R88["goal"] := true
1231 [-]: GETGLOBAL R88 K4       ; R88 := _T
1232 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1233 [-]: GETTABLE  R88 R88 R87  ; R88 := R88[R87]
1234 [-]: GETUPVAL  R89 U7       ; R89 := U7
1235 [-]: GETTABLE  R89 R89 K141 ; R89 := R89[0x06d055f9]
1236 [-]: GETGLOBAL R90 K0       ; R90 := 0x7b998233
1237 [-]: GETTABLE  R91 R50 K60  ; R91 := R50["mIcon"]
1238 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1239 [-]: GETGLOBAL R91 K7       ; R91 := 0x0032441c
1240 [-]: GETTABLE  R91 R91 K161 ; R91 := R91["UITexture_Event"]
1241 [-]: GETTABLE  R92 R50 K60  ; R92 := R50["mIcon"]
1242 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
1243 [-]: SETTABLE  R88 K160 R89 ; R88["goalIcon"] := R89
1244 [-]: GETGLOBAL R88 K38      ; R88 := 0x64fb1586
1245 [-]: GETTABLE  R89 R50 K67  ; R89 := R50["mTag"]
1246 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1247 [-]: EQ        1 R88 K81    ; if R88 == "" then PC := 1264
1248 [-]: JMP       1264         ; PC := 1264
1249 [-]: GETGLOBAL R88 K38      ; R88 := 0x64fb1586
1250 [-]: GETTABLE  R89 R50 K67  ; R89 := R50["mTag"]
1251 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1252 [-]: GETTABLE  R88 R24 R88  ; R88 := R24[R88]
1253 [-]: TEST      R88 0        ; if not R88 then PC := 1264
1254 [-]: JMP       1264         ; PC := 1264
1255 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1256 [-]: GETTABLE  R88 R88 K8   ; R88 := R88["CachedGoalInfo"]
1257 [-]: GETTABLE  R88 R88 R84  ; R88 := R88[R84]
1258 [-]: GETGLOBAL R89 K38      ; R89 := 0x64fb1586
1259 [-]: GETTABLE  R90 R50 K67  ; R90 := R50["mTag"]
1260 [-]: CALL      R89 2 2      ; R89 := R89(R90)
1261 [-]: GETTABLE  R89 R24 R89  ; R89 := R24[R89]
1262 [-]: GETTABLE  R89 R89 K77  ; R89 := R89["mNode"]
1263 [-]: SETTABLE  R88 K135 R89 ; R88["mInvasionNode"] := R89
1264 [-]: GETTABLE  R88 R50 K104 ; R88 := R50["mRelayReconstruction"]
1265 [-]: TEST      R88 0        ; if not R88 then PC := 1272
1266 [-]: JMP       1272         ; PC := 1272
1267 [-]: GETGLOBAL R88 K133     ; R88 := 0x33bdd652
1268 [-]: GETTABLE  R88 R88 K134 ; R88 := R88[0x23d5322f]
1269 [-]: MOVE      R89 R43      ; R89 := R43
1270 [-]: MOVE      R90 R50      ; R90 := R50
1271 [-]: CALL      R88 3 1      ; R88(R89,R90)
1272 [-]: FORLOOP   R79 1081     ; R79 += R81; if R79 <= R80 then begin PC := 1081; R82 := R79 end
1273 [-]: GETTABLE  R88 R50 K162 ; R88 := R50["mRewardNode"]
1274 [-]: EQ        1 R88 K81    ; if R88 == "" then PC := 1295
1275 [-]: JMP       1295         ; PC := 1295
1276 [-]: LT        0 R64 R66    ; if R64 >= R66 then PC := 1289
1277 [-]: JMP       1289         ; PC := 1289
1278 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1279 [-]: GETTABLE  R89 R50 K162 ; R89 := R50["mRewardNode"]
1280 [-]: SETTABLE  R88 K163 R89 ; R88["StarChartHiddenEventNode"] := R89
1281 [-]: GETGLOBAL R88 K4       ; R88 := _T
1282 [-]: GETTABLE  R88 R88 K16  ; R88 := R88["LockedGoalList"]
1283 [-]: GETTABLE  R89 R50 K162 ; R89 := R50["mRewardNode"]
1284 [-]: NEWTABLE  R90 0 1      ; R90 := {}
1285 [-]: GETTABLE  R91 R50 K107 ; R91 := R50["mDesc"]
1286 [-]: SETTABLE  R90 K107 R91 ; R90["mDesc"] := R91
1287 [-]: SETTABLE  R88 R89 R90  ; R88[R89] := R90
1288 [-]: JMP       1295         ; PC := 1295
1289 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1290 [-]: GETTABLE  R88 R88 K163 ; R88 := R88["StarChartHiddenEventNode"]
1291 [-]: EQ        1 R88 K24    ; if R88 == nil then PC := 1295
1292 [-]: JMP       1295         ; PC := 1295
1293 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1294 [-]: SETTABLE  R88 K163 K24 ; R88["StarChartHiddenEventNode"] := nil
1295 [-]: GETGLOBAL R88 K34      ; R88 := 0x34291f5c
1296 [-]: GETTABLE  R88 R88 K35  ; R88 := R88[0x397b920f]
1297 [-]: GETTABLE  R89 R50 K36  ; R89 := R50["mExpiry"]
1298 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1299 [-]: LT        0 K37 R88    ; if 0.000000 >= R88 then PC := 1305
1300 [-]: JMP       1305         ; PC := 1305
1301 [-]: GETUPVAL  R89 U2       ; R89 := U2
1302 [-]: MOVE      R90 R6       ; R90 := R6
1303 [-]: MOVE      R91 R88      ; R91 := R88
1304 [-]: CALL      R89 3 1      ; R89(R90,R91)
1305 [-]: FORLOOP   R46 451      ; R46 += R48; if R46 <= R47 then begin PC := 451; R49 := R46 end
1306 [-]: GETGLOBAL R89 K4       ; R89 := _T
1307 [-]: GETUPVAL  R90 U8       ; R90 := U8
1308 [-]: GETTABLE  R90 R90 K164 ; R90 := R90[0xe8ee3de5]
1309 [-]: CALL      R90 1 2      ; R90 := R90()
1310 [-]: SETTABLE  R89 K10 R90  ; R89["CachedConstructionProjects"] := R90
1311 [-]: GETUPVAL  R89 U9       ; R89 := U9
1312 [-]: GETTABLE  R89 R89 K165 ; R89 := R89[0x141cee8e]
1313 [-]: MOVE      R90 R1       ; R90 := R1
1314 [-]: CALL      R89 2 2      ; R89 := R89(R90)
1315 [-]: TEST      R89 0        ; if not R89 then PC := 1327
1316 [-]: JMP       1327         ; PC := 1327
1317 [-]: GETGLOBAL R90 K34      ; R90 := 0x34291f5c
1318 [-]: GETTABLE  R90 R90 K35  ; R90 := R90[0x397b920f]
1319 [-]: MOVE      R91 R89      ; R91 := R89
1320 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1321 [-]: LT        0 K37 R90    ; if 0.000000 >= R90 then PC := 1327
1322 [-]: JMP       1327         ; PC := 1327
1323 [-]: GETUPVAL  R91 U2       ; R91 := U2
1324 [-]: LOADK     R92 K166     ; R92 := "Sortie"
1325 [-]: MOVE      R93 R90      ; R93 := R90
1326 [-]: CALL      R91 3 1      ; R91(R92,R93)
1327 [-]: GETUPVAL  R91 U10      ; R91 := U10
1328 [-]: MOVE      R92 R1       ; R92 := R1
1329 [-]: CALL      R91 2 1      ; R91(R92)
1330 [-]: GETUPVAL  R91 U11      ; R91 := U11
1331 [-]: GETTABLE  R91 R91 K167 ; R91 := R91[0x132be2ac]
1332 [-]: MOVE      R92 R1       ; R92 := R1
1333 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1334 [-]: TEST      R91 0        ; if not R91 then PC := 1346
1335 [-]: JMP       1346         ; PC := 1346
1336 [-]: GETGLOBAL R92 K34      ; R92 := 0x34291f5c
1337 [-]: GETTABLE  R92 R92 K35  ; R92 := R92[0x397b920f]
1338 [-]: MOVE      R93 R91      ; R93 := R91
1339 [-]: CALL      R92 2 2      ; R92 := R92(R93)
1340 [-]: LT        0 K37 R92    ; if 0.000000 >= R92 then PC := 1346
1341 [-]: JMP       1346         ; PC := 1346
1342 [-]: GETUPVAL  R93 U2       ; R93 := U2
1343 [-]: LOADK     R94 K168     ; R94 := "Syndicate"
1344 [-]: MOVE      R95 R92      ; R95 := R92
1345 [-]: CALL      R93 3 1      ; R93(R94,R95)
1346 [-]: GETUPVAL  R93 U12      ; R93 := U12
1347 [-]: GETTABLE  R93 R93 K169 ; R93 := R93[0x28cda05a]
1348 [-]: MOVE      R94 R1       ; R94 := R1
1349 [-]: CALL      R93 2 2      ; R93 := R93(R94)
1350 [-]: TEST      R93 0        ; if not R93 then PC := 1362
1351 [-]: JMP       1362         ; PC := 1362
1352 [-]: GETGLOBAL R94 K34      ; R94 := 0x34291f5c
1353 [-]: GETTABLE  R94 R94 K35  ; R94 := R94[0x397b920f]
1354 [-]: MOVE      R95 R93      ; R95 := R93
1355 [-]: CALL      R94 2 2      ; R94 := R94(R95)
1356 [-]: LT        0 K37 R94    ; if 0.000000 >= R94 then PC := 1362
1357 [-]: JMP       1362         ; PC := 1362
1358 [-]: GETUPVAL  R95 U2       ; R95 := U2
1359 [-]: LOADK     R96 K170     ; R96 := "ActiveMission"
1360 [-]: MOVE      R97 R94      ; R97 := R94
1361 [-]: CALL      R95 3 1      ; R95(R96,R97)
1362 [-]: GETUPVAL  R95 U13      ; R95 := U13
1363 [-]: MOVE      R96 R1       ; R96 := R1
1364 [-]: CALL      R95 2 1      ; R95(R96)
1365 [-]: GETUPVAL  R95 U14      ; R95 := U14
1366 [-]: MOVE      R96 R1       ; R96 := R1
1367 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1368 [-]: TEST      R95 0        ; if not R95 then PC := 1376
1369 [-]: JMP       1376         ; PC := 1376
1370 [-]: LT        0 K37 R95    ; if 0.000000 >= R95 then PC := 1376
1371 [-]: JMP       1376         ; PC := 1376
1372 [-]: GETUPVAL  R96 U2       ; R96 := U2
1373 [-]: LOADK     R97 K171     ; R97 := "GhostTower"
1374 [-]: MOVE      R98 R95      ; R98 := R95
1375 [-]: CALL      R96 3 1      ; R96(R97,R98)
1376 [-]: GETUPVAL  R96 U15      ; R96 := U15
1377 [-]: MOVE      R97 R1       ; R97 := R1
1378 [-]: CALL      R96 2 2      ; R96 := R96(R97)
1379 [-]: TEST      R96 0        ; if not R96 then PC := 1387
1380 [-]: JMP       1387         ; PC := 1387
1381 [-]: LT        0 K37 R96    ; if 0.000000 >= R96 then PC := 1387
1382 [-]: JMP       1387         ; PC := 1387
1383 [-]: GETUPVAL  R97 U2       ; R97 := U2
1384 [-]: LOADK     R98 K172     ; R98 := "EliteAlert"
1385 [-]: MOVE      R99 R96      ; R99 := R96
1386 [-]: CALL      R97 3 1      ; R97(R98,R99)
1387 [-]: GETUPVAL  R97 U16      ; R97 := U16
1388 [-]: MOVE      R98 R1       ; R98 := R1
1389 [-]: CALL      R97 2 2      ; R97 := R97(R98)
1390 [-]: TEST      R97 0        ; if not R97 then PC := 1398
1391 [-]: JMP       1398         ; PC := 1398
1392 [-]: LT        0 K37 R97    ; if 0.000000 >= R97 then PC := 1398
1393 [-]: JMP       1398         ; PC := 1398
1394 [-]: GETUPVAL  R98 U2       ; R98 := U2
1395 [-]: LOADK     R99 K173     ; R99 := "HardModeDaily"
1396 [-]: MOVE      R100 R97     ; R100 := R97
1397 [-]: CALL      R98 3 1      ; R98(R99,R100)
1398 [-]: GETGLOBAL R98 K4       ; R98 := _T
1399 [-]: NEWTABLE  R99 0 0      ; R99 := {}
1400 [-]: SETTABLE  R98 K12 R99  ; R98["CachedFlashSales"] := R99
1401 [-]: GETGLOBAL R98 K174     ; R98 := 0xc8802016
1402 [-]: GETTABLE  R99 R2 K175  ; R99 := R2["mFlashSales"]
1403 [-]: CALL      R98 2 4      ; R98,R99,R100 := R98(R99)
1404 [-]: JMP       1421         ; PC := 1421
1405 [-]: GETGLOBAL R103 K0      ; R103 := 0x7b998233
1406 [-]: MOVE      R104 R102    ; R104 := R102
1407 [-]: CALL      R103 2 2     ; R103 := R103(R104)
1408 [-]: TEST      R103 1       ; if R103 then PC := 1421
1409 [-]: JMP       1421         ; PC := 1421
1410 [-]: GETGLOBAL R103 K0      ; R103 := 0x7b998233
1411 [-]: GETTABLE  R104 R102 K176; R104 := R102["mTypeName"]
1412 [-]: CALL      R103 2 2     ; R103 := R103(R104)
1413 [-]: TEST      R103 1       ; if R103 then PC := 1421
1414 [-]: JMP       1421         ; PC := 1421
1415 [-]: GETGLOBAL R103 K4      ; R103 := _T
1416 [-]: GETTABLE  R103 R103 K12; R103 := R103["CachedFlashSales"]
1417 [-]: GETTABLE  R104 R102 K176; R104 := R102["mTypeName"]
1418 [-]: SELF      R104 R104 K177; R105 := R104; R104 := R104[0xed4e0128]
1419 [-]: CALL      R104 2 2     ; R104 := R104(R105)
1420 [-]: SETTABLE  R103 R104 R102; R103[R104] := R102
1421 [-]: TFORLOOP  R98 2        ; R101,R102 :=  R98(R99,R100); if R101 ~= nil then begin PC = 1405; R100 := R101 end
1422 [-]: JMP       1405         ; PC := 1405
1423 [-]: GETTABLE  R103 R2 K178 ; R103 := R2["mVoidTraders"]
1424 [-]: EQ        1 R103 K24   ; if R103 == nil then PC := 1429
1425 [-]: JMP       1429         ; PC := 1429
1426 [-]: GETGLOBAL R103 K4      ; R103 := _T
1427 [-]: GETTABLE  R104 R2 K178 ; R104 := R2["mVoidTraders"]
1428 [-]: SETTABLE  R103 K13 R104; R103["CachedVoidTraders"] := R104
1429 [-]: GETGLOBAL R103 K4      ; R103 := _T
1430 [-]: GETTABLE  R104 R2 K179 ; R104 := R2["mGlobalUpgrades"]
1431 [-]: SETTABLE  R103 K14 R104; R103["CachedGlobalUpgrades"] := R104
1432 [-]: GETTABLE  R103 R2 K180 ; R103 := R2["mVoidStorms"]
1433 [-]: CONST     R104 600     ; R104 := 600.000000
1434 [-]: CONST     R105 1       ; R105 := 1.000000
1435 [-]: LEN       R106 R103    ; R106 := # R103
1436 [-]: CONST     R107 1       ; R107 := 1.000000
1437 [-]: FORPREP   R105 1508    ; R105 -= R107; PC := 1508
1438 [-]: GETTABLE  R109 R103 R108; R109 := R103[R108]
1439 [-]: GETGLOBAL R110 K34     ; R110 := 0x34291f5c
1440 [-]: GETTABLE  R110 R110 K35; R110 := R110[0x397b920f]
1441 [-]: GETTABLE  R111 R109 K36; R111 := R109["mExpiry"]
1442 [-]: CALL      R110 2 2     ; R110 := R110(R111)
1443 [-]: GETTABLE  R111 R109 K181; R111 := R109["mActiveMissionTier"]
1444 [-]: GETTABLE  R112 R109 K42; R112 := R109["mId"]
1445 [-]: GETTABLE  R112 R112 K42; R112 := R112["mId"]
1446 [-]: UNM       R113 R104    ; R113 :=  R104
1447 [-]: LT        0 R113 R110  ; if R113 >= R110 then PC := 1508
1448 [-]: JMP       1508         ; PC := 1508
1449 [-]: SELF      R113 R3 K31  ; R114 := R3; R113 := R3[0x3ad9ed31]
1450 [-]: GETTABLE  R115 R109 K77; R115 := R109["mNode"]
1451 [-]: CALL      R113 3 2     ; R113 := R113(R114,R115)
1452 [-]: GETGLOBAL R114 K38     ; R114 := 0x64fb1586
1453 [-]: GETTABLE  R115 R113 K39; R115 := R113["name"]
1454 [-]: CALL      R114 2 2     ; R114 := R114(R115)
1455 [-]: MOVE      R6 R114      ; R6 := R114
1456 [-]: GETTABLE  R114 R113 K87; R114 := R113["mission"]
1457 [-]: SELF      R114 R114 K114; R115 := R114; R114 := R114[0x8f89d633]
1458 [-]: CALL      R114 2 2     ; R114 := R114(R115)
1459 [-]: CONST     R115 10      ; R115 := 10.000000
1460 [-]: MOVE      R116 R6      ; R116 := R6
1461 [-]: LOADK     R117 K183    ; R117 := "_"
1462 [-]: MOVE      R118 R112    ; R118 := R112
1463 [-]: CONCAT    R116 R116 R118; R116 := R116 .. R117 .. R118
1464 [-]: SETTABLE  R114 K182 R116; R114["voidStormId"] := R116
1465 [-]: GETGLOBAL R116 K105    ; R116 := 0x0469f296
1466 [-]: MOVE      R117 R111    ; R117 := R111
1467 [-]: CALL      R116 2 2     ; R116 := R116(R117)
1468 [-]: SETTABLE  R114 K184 R116; R114["activeMissionTag"] := R116
1469 [-]: GETTABLE  R116 R114 K64; R116 := R114["minEnemyLevel"]
1470 [-]: ADD       R116 R116 R115; R116 := R116 + R115
1471 [-]: SETTABLE  R114 K64 R116; R114["minEnemyLevel"] := R116
1472 [-]: GETTABLE  R116 R114 K62; R116 := R114["maxEnemyLevel"]
1473 [-]: ADD       R116 R116 R115; R116 := R116 + R115
1474 [-]: SETTABLE  R114 K62 R116; R114["maxEnemyLevel"] := R116
1475 [-]: GETTABLE  R116 R114 K185; R116 := R114["minSpaceEnemyLevel"]
1476 [-]: ADD       R116 R116 R115; R116 := R116 + R115
1477 [-]: SETTABLE  R114 K185 R116; R114["minSpaceEnemyLevel"] := R116
1478 [-]: GETTABLE  R116 R114 K186; R116 := R114["maxSpaceEnemyLevel"]
1479 [-]: ADD       R116 R116 R115; R116 := R116 + R115
1480 [-]: SETTABLE  R114 K186 R116; R114["maxSpaceEnemyLevel"] := R116
1481 [-]: GETTABLE  R116 R113 K51; R116 := R113["unlocked"]
1482 [-]: TEST      R116 1       ; if R116 then PC := 1485
1483 [-]: JMP       1485         ; PC := 1485
1484 [-]: LOADKB    R116 0 0     ; R116 := false
1485 [-]: GETGLOBAL R117 K4      ; R117 := _T
1486 [-]: GETTABLE  R117 R117 K18; R117 := R117["CachedVoidStormMissions"]
1487 [-]: GETTABLE  R118 R109 K77; R118 := R109["mNode"]
1488 [-]: SELF      R118 R118 K187; R119 := R118; R118 := R118[0x6d604ba7]
1489 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1490 [-]: NEWTABLE  R119 0 7     ; R119 := {}
1491 [-]: GETTABLE  R120 R109 K40; R120 := R109["mActivation"]
1492 [-]: SELF      R120 R120 K114; R121 := R120; R120 := R120[0x8f89d633]
1493 [-]: CALL      R120 2 2     ; R120 := R120(R121)
1494 [-]: SETTABLE  R119 K40 R120; R119["mActivation"] := R120
1495 [-]: GETTABLE  R120 R109 K36; R120 := R109["mExpiry"]
1496 [-]: SELF      R120 R120 K114; R121 := R120; R120 := R120[0x8f89d633]
1497 [-]: CALL      R120 2 2     ; R120 := R120(R121)
1498 [-]: SETTABLE  R119 K36 R120; R119["mExpiry"] := R120
1499 [-]: GETGLOBAL R120 K105    ; R120 := 0x0469f296
1500 [-]: MOVE      R121 R111    ; R121 := R111
1501 [-]: CALL      R120 2 2     ; R120 := R120(R121)
1502 [-]: SETTABLE  R119 K188 R120; R119["tier"] := R120
1503 [-]: SETTABLE  R119 K189 K190; R119["enemyLevelIncrease"] := 10.000000
1504 [-]: SETTABLE  R119 K32 R114; R119["mMissionInfo"] := R114
1505 [-]: SETTABLE  R119 K57 R116; R119["mUnlocked"] := R116
1506 [-]: SETTABLE  R119 K58 R116; R119["mRegionUnlocked"] := R116
1507 [-]: SETTABLE  R117 R118 R119; R117[R118] := R119
1508 [-]: FORLOOP   R105 1438    ; R105 += R107; if R105 <= R106 then begin PC := 1438; R108 := R105 end
1509 [-]: GETUPVAL  R117 U3      ; R117 := U3
1510 [-]: GETTABLE  R117 R117 K191; R117 := R117[0x5273af13]
1511 [-]: LOADK     R118 K192    ; R118 := "dce"
1512 [-]: LOADKB    R119 1 0     ; R119 := true
1513 [-]: CALL      R117 3 2     ; R117 := R117(R118,R119)
1514 [-]: TEST      R117 1       ; if R117 then PC := 1520
1515 [-]: JMP       1520         ; PC := 1520
1516 [-]: GETGLOBAL R118 K193    ; R118 := 0xe7f2b02f
1517 [-]: SELF      R118 R118 K194; R119 := R118; R118 := R118[0x0da40368]
1518 [-]: LOADK     R120 K81     ; R120 := ""
1519 [-]: CALL      R118 3 1     ; R118(R119,R120)
1520 [-]: GETGLOBAL R118 K0      ; R118 := 0x7b998233
1521 [-]: GETGLOBAL R119 K4      ; R119 := _T
1522 [-]: GETTABLE  R119 R119 K195; R119 := R119["NeedsGoalCheck"]
1523 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1524 [-]: TEST      R118 0       ; if not R118 then PC := 1528
1525 [-]: JMP       1528         ; PC := 1528
1526 [-]: GETGLOBAL R118 K4      ; R118 := _T
1527 [-]: SETTABLE  R118 K195 K93; R118["NeedsGoalCheck"] := true
1528 [-]: GETUPVAL  R118 U17     ; R118 := U17
1529 [-]: CALL      R118 1 1     ; R118()
1530 [-]: GETUPVAL  R118 U1      ; R118 := U1
1531 [-]: GETTABLE  R118 R118 K196; R118 := R118[0xcf1fcba4]
1532 [-]: CALL      R118 1 2     ; R118 := R118()
1533 [-]: TEST      R118 1       ; if R118 then PC := 1540
1534 [-]: JMP       1540         ; PC := 1540
1535 [-]: GETGLOBAL R118 K1      ; R118 := 0xbe190284
1536 [-]: SELF      R118 R118 K197; R119 := R118; R118 := R118[0x99f38c13]
1537 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1538 [-]: TEST      R118 0       ; if not R118 then PC := 1543
1539 [-]: JMP       1543         ; PC := 1543
1540 [-]: GETUPVAL  R118 U18     ; R118 := U18
1541 [-]: MOVE      R119 R1      ; R119 := R1
1542 [-]: CALL      R118 2 1     ; R118(R119)
1543 [-]: GETUPVAL  R118 U19     ; R118 := U19
1544 [-]: GETUPVAL  R119 U1      ; R119 := U1
1545 [-]: GETTABLE  R119 R119 K198; R119 := R119["REGION_ID_ZARIMAN"]
1546 [-]: GETTABLE  R119 R4 R119 ; R119 := R4[R119]
1547 [-]: GETTABLE  R119 R119 K86; R119 := R119["sectors"]
1548 [-]: CALL      R118 2 1     ; R118(R119)
1549 [-]: GETGLOBAL R118 K0      ; R118 := 0x7b998233
1550 [-]: GETGLOBAL R119 K28     ; R119 := 0x83f4e77c
1551 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1552 [-]: TEST      R118 1       ; if R118 then PC := 1559
1553 [-]: JMP       1559         ; PC := 1559
1554 [-]: GETGLOBAL R118 K199    ; R118 := 0x9ba7909f
1555 [-]: SELF      R118 R118 K200; R119 := R118; R118 := R118[0x7e17ae26]
1556 [-]: LOADK     R120 K201    ; R120 := "OnWorldStateChanged"
1557 [-]: LOADK     R121 K81     ; R121 := ""
1558 [-]: CALL      R118 4 1     ; R118(R119,R120,R121)
1559 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3779
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0xe0cba3ca]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3783
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3787
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 45
  5 [-]: JMP       45           ; PC := 45
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x600a0ad6]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0xf56f3887]
 10 [-]: LOADK     R4 K4        ; R4 := "ShowScanStatus"
 11 [-]: NEWTABLE  R5 5 0       ; R5 := {}
 12 [-]: GETGLOBAL R6 K5        ; R6 := 0x603636ad
 13 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Game/KuvaMurmur"
 14 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 15 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 16 [-]: GETGLOBAL R7 K7        ; R7 := 0x64fb1586
 17 [-]: GETTABLE  R8 R1 K8     ; R8 := R1["mHints"]
 18 [-]: GETGLOBAL R9 K9        ; R9 := _T
 19 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["NewRequiemHint"]
 20 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 21 [-]: ADD       R8 R8 K11    ; R8 := R8 + 1.000000
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: LOADK     R8 K12       ; R8 := "0"
 24 [-]: LOADK     R9 K13       ; R9 := "false"
 25 [-]: LOADK     R10 K14      ; R10 := "NEMESIS_HINT"
 26 [-]: SETLIST   R5 5 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 5
 27 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 28 [-]: GETGLOBAL R2 K9        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["NewRequiemHint"]
 30 [-]: GETGLOBAL R3 K15       ; R3 := 0x0032441c
 31 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["NumRequiemHints"]
 32 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 45
 33 [-]: JMP       45           ; PC := 45
 34 [-]: GETGLOBAL R2 K9        ; R2 := _T
 35 [-]: GETGLOBAL R3 K9        ; R3 := _T
 36 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["NewRequiemHint"]
 37 [-]: ADD       R3 R3 K11    ; R3 := R3 + 1.000000
 38 [-]: SETTABLE  R2 K10 R3    ; R2["NewRequiemHint"] := R3
 39 [-]: GETGLOBAL R2 K17       ; R2 := mTimerMgr
 40 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xbd2e96ea]
 41 [-]: CONST     R4 6         ; R4 := 6.000000
 42 [-]: GETUPVAL  R5 U0        ; R5 := U0
 43 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: GETGLOBAL R2 K9        ; R2 := _T
 46 [-]: SETTABLE  R2 K19 K20   ; R2["RequiemLoader"] := nil
 47 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3802
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 39
  2 [-]: JMP       39           ; PC := 39
  3 [-]: GETGLOBAL R2 K0        ; R2 := mFoundryNotification
  4 [-]: SETTABLE  R2 K1 K2     ; R2["Refresh"] := true
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x22828de3]
  7 [-]: LOADKB    R3 0 0       ; R3 := false
  8 [-]: CALL      R2 2 1       ; R2(R3)
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x76ea806b
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x3f3ae64c]
 11 [-]: CONST     R4 0         ; R4 := 0.000000
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: GETGLOBAL R3 K6        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 39
 17 [-]: JMP       39           ; PC := 39
 18 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0x80563238]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0x7b998233
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 39
 24 [-]: JMP       39           ; PC := 39
 25 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3[0x464542fe]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: LEN       R4 R4        ; R4 := # R4
 28 [-]: LT        0 K9 R4      ; if 0.000000 >= R4 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R4 K10       ; R4 := 0x9ba7909f
 31 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0x7e17ae26]
 32 [-]: LOADK     R6 K12       ; R6 := "CouponAwarded"
 33 [-]: LOADK     R7 K13       ; R7 := ""
 34 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 35 [-]: GETUPVAL  R4 U1        ; R4 := U1
 36 [-]: MOVE      R5 R3        ; R5 := R3
 37 [-]: LOADKB    R6 1 0       ; R6 := true
 38 [-]: CALL      R4 3 1       ; R4(R5,R6)
 39 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3821
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  2 [-]: LOADK     R3 K1        ; R3 := "Background: world state refreshed from db"
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: EQ        1 R1 K2      ; if R1 == "" then PC := 91
  5 [-]: JMP       91           ; PC := 91
  6 [-]: GETGLOBAL R2 K3        ; R2 := mCurrentMode
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UI_MODE_IN_GAME"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 87
 10 [-]: JMP       87           ; PC := 87
 11 [-]: LOADKB    R2 0 0       ; R2 := false
 12 [-]: GETGLOBAL R3 K5        ; R3 := 0xa94df70b
 13 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xf87f9433]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: TEST      R3 0         ; if not R3 then PC := 55
 16 [-]: JMP       55           ; PC := 55
 17 [-]: GETUPVAL  R3 U1        ; R3 := U1
 18 [-]: LT        0 K7 R3      ; if 0.000000 >= R3 then PC := 50
 19 [-]: JMP       50           ; PC := 50
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: GETUPVAL  R4 U2        ; R4 := U2
 22 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 23 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 24 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 1         ; if R4 then PC := 46
 27 [-]: JMP       46           ; PC := 46
 28 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 29 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x42b04007]
 30 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableCountdown"
 31 [-]: LOADKB    R7 0 0       ; R7 := false
 32 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 33 [-]: SETTABLE  R8 K12 R3    ; R8["MINUTES"] := R3
 34 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 35 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 36 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x42b04007]
 37 [-]: LOADK     R7 K13       ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
 38 [-]: LOADKB    R8 0 0       ; R8 := false
 39 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 40 [-]: LOADK     R6 K14       ; R6 := "\r\n\r\n"
 41 [-]: MOVE      R7 R4        ; R7 := R4
 42 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 43 [-]: GETUPVAL  R6 U3        ; R6 := U3
 44 [-]: MOVE      R7 R5        ; R7 := R5
 45 [-]: CALL      R6 2 1       ; R6(R7)
 46 [-]: GETUPVAL  R6 U1        ; R6 := U1
 47 [-]: SUB       R6 R6 K15    ; R6 := R6 - 1.000000
 48 [-]: SETUPVAL  R6 U1        ; U82 := R1
 49 [-]: JMP       53           ; PC := 53
 50 [-]: LOADKB    R6 1 0       ; R6 := true
 51 [-]: SETUPVAL  R6 U4        ; U82 := R4
 52 [-]: RETURN    R0 1         ; return 
 53 [-]: LOADKB    R2 1 0       ; R2 := true
 54 [-]: JMP       73           ; PC := 73
 55 [-]: GETGLOBAL R6 K5        ; R6 := 0xa94df70b
 56 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0x751e7461]
 57 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 58 [-]: TEST      R6 0         ; if not R6 then PC := 73
 59 [-]: JMP       73           ; PC := 73
 60 [-]: GETGLOBAL R6 K8        ; R6 := 0x7b998233
 61 [-]: GETGLOBAL R7 K9        ; R7 := 0xae91e43b
 62 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 63 [-]: TEST      R6 1         ; if R6 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETUPVAL  R6 U3        ; R6 := U3
 66 [-]: GETGLOBAL R7 K9        ; R7 := 0xae91e43b
 67 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0x42b04007]
 68 [-]: LOADK     R9 K17       ; R9 := "/Lotus/Language/Menu/MainMenu_BugReportPending"
 69 [-]: LOADKB    R10 0 0      ; R10 := false
 70 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 71 [-]: CALL      R6 0 1       ; R6(R7,...)
 72 [-]: LOADKB    R2 1 0       ; R2 := true
 73 [-]: TEST      R2 0         ; if not R2 then PC := 87
 74 [-]: JMP       87           ; PC := 87
 75 [-]: GETGLOBAL R6 K8        ; R6 := 0x7b998233
 76 [-]: GETGLOBAL R7 K18       ; R7 := _T
 77 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["SquadOverlay"]
 78 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 79 [-]: TEST      R6 1         ; if R6 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETGLOBAL R6 K18       ; R6 := _T
 82 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["SquadOverlay"]
 83 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0xe4162eed]
 84 [-]: LOADK     R8 K21       ; R8 := "LeaveSquadUI"
 85 [-]: LOADK     R9 K2        ; R9 := ""
 86 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 87 [-]: TEST      R0 0         ; if not R0 then PC := 91
 88 [-]: JMP       91           ; PC := 91
 89 [-]: GETUPVAL  R6 U5        ; R6 := U5
 90 [-]: CALL      R6 1 1       ; R6()
 91 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3863
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mWorldStateCallbackRegistered"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: TEST      R0 1         ; if R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K1        ; R1 := 0x76ea806b
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x3f3ae64c]
 10 [-]: CONST     R3 0         ; R3 := 0.000000
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x80563238]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 1         ; if R3 then PC := 32
 23 [-]: JMP       32           ; PC := 32
 24 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0x0e0439c0]
 25 [-]: LOADK     R5 K6        ; R5 := "OnSyncWorldState"
 26 [-]: GETUPVAL  R6 U0        ; R6 := U0
 27 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["WORLD_STATE_CALLBACK_IDENTIFIER"]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: SETTABLE  R3 K0 K8     ; R3["mWorldStateCallbackRegistered"] := true
 32 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3878
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x80563238]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x92ca4c2e]
 18 [-]: LOADK     R4 K5        ; R4 := "OnInventorySyncCallback"
 19 [-]: CALL      R2 3 1       ; R2(R3,R4)
 20 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3888
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x06d055f9]
  3 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADKB    R2 1 0       ; R2 := true
  7 [-]: LOADKB    R3 1 0       ; R3 := true
  8 [-]: LOADKB    R4 0 0       ; R4 := false
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3893
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x3d106989
  7 [-]: LOADK     R5 K2        ; R5 := "Error: Transmissions set is borked"
  8 [-]: CALL      R4 2 1       ; R4(R5)
  9 [-]: LOADKB    R4 0 0       ; R4 := false
 10 [-]: RETURN    R4 2         ; return R4
 11 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R2 R4 K4     ; R2 := R4["DEFAULT"]
 15 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: CONST     R3 0         ; R3 := 0.000000
 18 [-]: GETGLOBAL R4 K5        ; R4 := 0x33bdd652
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4[0x23d5322f]
 20 [-]: GETUPVAL  R5 U1        ; R5 := U1
 21 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Callbacks"]
 22 [-]: MOVE      R6 R3        ; R6 := R3
 23 [-]: CALL      R4 3 1       ; R4(R5,R6)
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["OVERRIDE"]
 26 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: GETUPVAL  R4 U0        ; R4 := U0
 29 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["DEFAULT"]
 30 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 42
 31 [-]: JMP       42           ; PC := 42
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["DEFAULT"]
 34 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 76
 35 [-]: JMP       76           ; PC := 76
 36 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 37 [-]: GETUPVAL  R5 U1        ; R5 := U1
 38 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["SoundInst"]
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: TEST      R4 1         ; if R4 then PC := 76
 41 [-]: JMP       76           ; PC := 76
 42 [-]: GETUPVAL  R4 U0        ; R4 := U0
 43 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["FORCE_QUEUE"]
 44 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 56
 45 [-]: JMP       56           ; PC := 56
 46 [-]: CONST     R4 1         ; R4 := 1.000000
 47 [-]: GETUPVAL  R5 U1        ; R5 := U1
 48 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["WaitingTransmissions"]
 49 [-]: LEN       R5 R5        ; R5 := # R5
 50 [-]: CONST     R6 1         ; R6 := 1.000000
 51 [-]: FORPREP   R4 55        ; R4 -= R6; PC := 55
 52 [-]: GETUPVAL  R8 U1        ; R8 := U1
 53 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["WaitingTransmissions"]
 54 [-]: SETTABLE  R8 R7 K3     ; R8[R7] := nil
 55 [-]: FORLOOP   R4 52        ; R4 += R6; if R4 <= R5 then begin PC := 52; R7 := R4 end
 56 [-]: GETUPVAL  R8 U0        ; R8 := U0
 57 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["QUEUE"]
 58 [-]: EQ        1 R2 R8      ; if R2 == R8 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R8 U0        ; R8 := U0
 61 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["FORCE_QUEUE"]
 62 [-]: EQ        0 R2 R8      ; if R2 ~= R8 then PC := 74
 63 [-]: JMP       74           ; PC := 74
 64 [-]: GETGLOBAL R8 K5        ; R8 := 0x33bdd652
 65 [-]: GETTABLE  R8 R8 K6     ; R8 := R8[0x23d5322f]
 66 [-]: GETUPVAL  R9 U1        ; R9 := U1
 67 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["WaitingTransmissions"]
 68 [-]: SELF      R10 R1 K13   ; R11 := R1; R10 := R1[0x10c9eef2]
 69 [-]: GETGLOBAL R12 K14      ; R12 := 0x0469f296
 70 [-]: MOVE      R13 R0       ; R13 := R0
 71 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 72 [-]: CALL      R10 0 0      ; R10,... := R10(R11,...)
 73 [-]: CALL      R8 0 1       ; R8(R9,...)
 74 [-]: LOADKB    R8 0 0       ; R8 := false
 75 [-]: RETURN    R8 2         ; return R8
 76 [-]: GETUPVAL  R8 U1        ; R8 := U1
 77 [-]: SELF      R9 R1 K13    ; R10 := R1; R9 := R1[0x10c9eef2]
 78 [-]: GETGLOBAL R11 K14      ; R11 := 0x0469f296
 79 [-]: MOVE      R12 R0       ; R12 := R0
 80 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 81 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 82 [-]: SETTABLE  R8 K15 R9    ; R8["QueuedTransmission"] := R9
 83 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 84 [-]: GETUPVAL  R9 U1        ; R9 := U1
 85 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["QueuedTransmission"]
 86 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 87 [-]: TEST      R8 1         ; if R8 then PC := 102
 88 [-]: JMP       102          ; PC := 102
 89 [-]: GETUPVAL  R8 U1        ; R8 := U1
 90 [-]: GETGLOBAL R9 K17       ; R9 := 0xbd496aa1
 91 [-]: GETTABLE  R9 R9 K18    ; R9 := R9[0x42645da3]
 92 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 93 [-]: GETUPVAL  R11 U1       ; R11 := U1
 94 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["QueuedTransmission"]
 95 [-]: SELF      R11 R11 K19  ; R12 := R11; R11 := R11[0xed4e0128]
 96 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 97 [-]: SETLIST   R10 0 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
 98 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 99 [-]: SETTABLE  R8 K16 R9    ; R8["Loader"] := R9
100 [-]: GETUPVAL  R8 U1        ; R8 := U1
101 [-]: SETTABLE  R8 K20 K21   ; R8["IsLoading"] := true
102 [-]: LOADKB    R8 1 0       ; R8 := true
103 [-]: RETURN    R8 2         ; return R8
104 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3930
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3936
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 R0     ; R2["Avatar"] := R0
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R2 K1 R1     ; R2[0x0000005a] := R1
  5 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3941
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe4162eed]
  8 [-]: LOADK     R4 K2        ; R4 := "CloseDiorama"
  9 [-]: LOADK     R5 K3        ; R5 := ""
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: SETUPVAL  R2 U0        ; U82 := R0
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 47
 17 [-]: JMP       47           ; PC := 47
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x9ba7909f
 19 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xcfba257f]
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0xe0c4d91f
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: SETUPVAL  R2 U0        ; U82 := R0
 23 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 29 [-]: GETGLOBAL R3 K7        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: TEST      R2 1         ; if R2 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETUPVAL  R2 U0        ; R2 := U0
 35 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe4162eed]
 36 [-]: LOADK     R4 K8        ; R4 := "SetLoadedCallback"
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 39 [-]: GETUPVAL  R2 U0        ; R2 := U0
 40 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe4162eed]
 41 [-]: LOADK     R4 K9        ; R4 := "LoadDiorama"
 42 [-]: GETGLOBAL R5 K10       ; R5 := 0x64fb1586
 43 [-]: SELF      R6 R0 K11    ; R7 := R0; R6 := R0[0xed4e0128]
 44 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 45 [-]: CALL      R5 0 0       ; R5,... := R5(R6,...)
 46 [-]: CALL      R2 0 1       ; R2(R3,...)
 47 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3955
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x1044f972]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: GETTABLE  R3 R2 K1     ; R3 := R2["level"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: MOVE      R6 R1        ; R6 := R1
  7 [-]: CALL      R4 3 1       ; R4(R5,R6)
  8 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3961
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        1 R0 K0      ; if R0 == true then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: EQ        0 R0 K1      ; if R0 ~= "true" then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x4248b498
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: JMP       22           ; PC := 22
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xe4162eed]
 17 [-]: LOADK     R4 K5        ; R4 := "CloseDiorama"
 18 [-]: LOADK     R5 K6        ; R5 := ""
 19 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 20 [-]: LOADNIL   R2 R2        ; R2 := nil
 21 [-]: SETUPVAL  R2 U1        ; U82 := R1
 22 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3970
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe7f2b02f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0b6ebd5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 39
  5 [-]: JMP       39           ; PC := 39
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIMovie_EndOfQuestMovie"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 39
 14 [-]: JMP       39           ; PC := 39
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 39
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x1fd6abd0]
 21 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
 22 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UIMovie_EndOfQuestMovie"]
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 1         ; if R2 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xe4162eed]
 30 [-]: LOADK     R4 K9        ; R4 := "SetQuestType"
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 33 [-]: GETUPVAL  R2 U2        ; R2 := U2
 34 [-]: GETGLOBAL R3 K10       ; R3 := 0x25d99d89
 35 [-]: LOADKB    R4 1 0       ; R4 := true
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: LOADNIL   R2 R2        ; R2 := nil
 38 [-]: SETUPVAL  R2 U0        ; U82 := R0
 39 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 3987
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["NeedsGoalCheck"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["NeedsGoalCheck"]
  9 [-]: TEST      R0 1         ; if R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R0 K3        ; R0 := 0x76ea806b
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x3f3ae64c]
 14 [-]: CONST     R2 0         ; R2 := 0.000000
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 0         ; if not R1 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0x80563238]
 23 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 24 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 0         ; if not R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0x4b0ebe0c]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: SELF      R3 R1 K7     ; R4 := R1; R3 := R1[0x69727e0b]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 35 [-]: MOVE      R5 R3        ; R5 := R3
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 0         ; if not R4 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: LOADNIL   R4 R4        ; R4 := nil
 40 [-]: RETURN    R4 2         ; return R4
 41 [-]: CONST     R4 1         ; R4 := 1.000000
 42 [-]: GETTABLE  R5 R3 K8     ; R5 := R3["mGoals"]
 43 [-]: LEN       R5 R5        ; R5 := # R5
 44 [-]: CONST     R6 1         ; R6 := 1.000000
 45 [-]: FORPREP   R4 63        ; R4 -= R6; PC := 63
 46 [-]: GETTABLE  R8 R3 K8     ; R8 := R3["mGoals"]
 47 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 48 [-]: GETTABLE  R9 R8 K9     ; R9 := R8["mTag"]
 49 [-]: GETGLOBAL R10 K10      ; R10 := 0x0469f296
 50 [-]: LOADK     R11 K11      ; R11 := "OldWorldSalvage"
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 63
 53 [-]: JMP       63           ; PC := 63
 54 [-]: GETUPVAL  R9 U0        ; R9 := U0
 55 [-]: GETTABLE  R9 R9 K12    ; R9 := R9[0x9897ecc6]
 56 [-]: MOVE      R10 R8       ; R10 := R8
 57 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 58 [-]: EQ        0 R2 K13     ; if R2 ~= "SolNode333" then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: EQ        0 R9 K14     ; if R9 ~= 1.000000 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: JMP       64           ; PC := 64
 63 [-]: FORLOOP   R4 46        ; R4 += R6; if R4 <= R5 then begin PC := 46; R7 := R4 end
 64 [-]: EQ        0 R2 K15     ; if R2 ~= "SolNode332" then PC := 85
 65 [-]: JMP       85           ; PC := 85
 66 [-]: SELF      R12 R1 K16   ; R13 := R1; R12 := R1[0xb407484d]
 67 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 68 [-]: CONST     R13 1        ; R13 := 1.000000
 69 [-]: LEN       R14 R12      ; R14 := # R12
 70 [-]: CONST     R15 1        ; R15 := 1.000000
 71 [-]: FORPREP   R13 84       ; R13 -= R15; PC := 84
 72 [-]: GETTABLE  R17 R12 R16  ; R17 := R12[R16]
 73 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["mTag"]
 74 [-]: GETGLOBAL R18 K10      ; R18 := 0x0469f296
 75 [-]: LOADK     R19 K15      ; R19 := "SolNode332"
 76 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 77 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 84
 78 [-]: JMP       84           ; PC := 84
 79 [-]: GETTABLE  R17 R12 R16  ; R17 := R12[R16]
 80 [-]: GETTABLE  R17 R17 K17  ; R17 := R17["mCompletes"]
 81 [-]: EQ        0 R17 K14    ; if R17 ~= 1.000000 then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: JMP       85           ; PC := 85
 84 [-]: FORLOOP   R13 72       ; R13 += R15; if R13 <= R14 then begin PC := 72; R16 := R13 end
 85 [-]: GETGLOBAL R17 K1       ; R17 := _T
 86 [-]: SETTABLE  R17 K2 K18   ; R17["NeedsGoalCheck"] := false
 87 [-]: GETGLOBAL R17 K19      ; R17 := 0x3d106989
 88 [-]: LOADK     R18 K20      ; R18 := "Goal check is now false"
 89 [-]: CALL      R17 2 1      ; R17(R18)
 90 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 4034
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: TEST      R0 0         ; if not R0 then PC := 101
  2 [-]: JMP       101          ; PC := 101
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x76ea806b
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x3f3ae64c]
  5 [-]: CONST     R4 0         ; R4 := 0.000000
  6 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x80563238]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 0         ; if not R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R4 K4        ; R4 := 0x9ba7909f
 22 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xbcfb64ab]
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: GETTABLE  R6 R6 K6     ; R6 := R6[0xc472e470]
 25 [-]: CALL      R6 1 0       ; R6,... := R6()
 26 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 27 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 28 [-]: MOVE      R6 R4        ; R6 := R4
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: TEST      R5 1         ; if R5 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: SELF      R5 R4 K7     ; R6 := R4; R5 := R4[0xe4162eed]
 33 [-]: LOADK     R7 K8        ; R7 := "UpdateOmegaSuggestTree"
 34 [-]: LOADK     R8 K9        ; R8 := ""
 35 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 36 [-]: SELF      R5 R3 K10    ; R6 := R3; R5 := R3[0x25a6e75e]
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0x98b1bb53]
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 41 [-]: GETGLOBAL R8 K12       ; R8 := cjson
 42 [-]: GETTABLE  R8 R8 K13    ; R8 := R8[0x7ab914d8]
 43 [-]: MOVE      R9 R1        ; R9 := R1
 44 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 45 [-]: GETTABLE  R9 R8 K14    ; R9 := R8["changes"]
 46 [-]: EQ        1 R9 K15     ; if R9 == nil then PC := 72
 47 [-]: JMP       72           ; PC := 72
 48 [-]: GETGLOBAL R9 K16       ; R9 := 0xc8802016
 49 [-]: GETTABLE  R10 R8 K14   ; R10 := R8["changes"]
 50 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 51 [-]: JMP       70           ; PC := 70
 52 [-]: GETTABLE  R14 R13 K17  ; R14 := R13["ItemId"]
 53 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["$oid"]
 54 [-]: GETGLOBAL R15 K16      ; R15 := 0xc8802016
 55 [-]: MOVE      R16 R6       ; R16 := R6
 56 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 57 [-]: JMP       68           ; PC := 68
 58 [-]: GETTABLE  R20 R19 K19  ; R20 := R19["mItemId"]
 59 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["mId"]
 60 [-]: EQ        0 R14 R20    ; if R14 ~= R20 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETGLOBAL R21 K21      ; R21 := 0x33bdd652
 63 [-]: GETTABLE  R21 R21 K22  ; R21 := R21[0x23d5322f]
 64 [-]: MOVE      R22 R7       ; R22 := R7
 65 [-]: MOVE      R23 R19      ; R23 := R19
 66 [-]: CALL      R21 3 1      ; R21(R22,R23)
 67 [-]: JMP       70           ; PC := 70
 68 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 58; R17 := R18 end
 69 [-]: JMP       58           ; PC := 58
 70 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 52; R11 := R12 end
 71 [-]: JMP       52           ; PC := 52
 72 [-]: GETGLOBAL R21 K23      ; R21 := _T
 73 [-]: SETTABLE  R21 K24 K25  ; R21["boosterUpgradeInfoMode"] := true
 74 [-]: GETGLOBAL R21 K23      ; R21 := _T
 75 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 76 [-]: SETTABLE  R21 K26 R22  ; R21["boosterPackCards"] := R22
 77 [-]: GETGLOBAL R21 K23      ; R21 := _T
 78 [-]: SETTABLE  R21 K27 K25  ; R21["boosterOmegaMode"] := true
 79 [-]: GETGLOBAL R21 K16      ; R21 := 0xc8802016
 80 [-]: MOVE      R22 R7       ; R22 := R7
 81 [-]: CALL      R21 2 4      ; R21,R22,R23 := R21(R22)
 82 [-]: JMP       92           ; PC := 92
 83 [-]: GETGLOBAL R26 K21      ; R26 := 0x33bdd652
 84 [-]: GETTABLE  R26 R26 K22  ; R26 := R26[0x23d5322f]
 85 [-]: GETGLOBAL R27 K23      ; R27 := _T
 86 [-]: GETTABLE  R27 R27 K26  ; R27 := R27["boosterPackCards"]
 87 [-]: NEWTABLE  R28 2 0      ; R28 := {}
 88 [-]: MOVE      R29 R25      ; R29 := R25
 89 [-]: LOADK     R30 K9       ; R30 := ""
 90 [-]: SETLIST   R28 2 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
 91 [-]: CALL      R26 3 1      ; R26(R27,R28)
 92 [-]: TFORLOOP  R21 2        ; R24,R25 :=  R21(R22,R23); if R24 ~= nil then begin PC = 83; R23 := R24 end
 93 [-]: JMP       83           ; PC := 83
 94 [-]: LOADKB    R26 0 0      ; R26 := false
 95 [-]: SETGLOBAL R26 K28      ; mShowingIdentifiedOmegaModsDiorama := R26
 96 [-]: LOADKB    R26 1 0      ; R26 := true
 97 [-]: SETGLOBAL R26 K29      ; mShouldShowDiorama := R26
 98 [-]: LOADNIL   R26 R26      ; R26 := nil
 99 [-]: SETGLOBAL R26 K30      ; mCheckingForIdentifiedOmegaMods := R26
100 [-]: JMP       101          ; PC := 101
101 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 4137
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xe4162eed]
  8 [-]: LOADK     R3 K2        ; R3 := "CloseDiorama"
  9 [-]: LOADK     R4 K3        ; R4 := ""
 10 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 11 [-]: LOADNIL   R1 R1        ; R1 := nil
 12 [-]: SETUPVAL  R1 U0        ; U82 := R0
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: SETGLOBAL R1 K4        ; mShowingIdentifiedOmegaModsDiorama := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 4145
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe7f2b02f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0b6ebd5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 228
  5 [-]: JMP       228          ; PC := 228
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIMovie_EndOfQuestMovie"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 228
 11 [-]: JMP       228          ; PC := 228
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 228
 14 [-]: JMP       228          ; PC := 228
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 228
 18 [-]: JMP       228          ; PC := 228
 19 [-]: GETGLOBAL R1 K6        ; R1 := mCheckingForIdentifiedOmegaMods
 20 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 72
 21 [-]: JMP       72           ; PC := 72
 22 [-]: GETGLOBAL R1 K7        ; R1 := mShowingIdentifiedOmegaModsDiorama
 23 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 72
 24 [-]: JMP       72           ; PC := 72
 25 [-]: GETGLOBAL R1 K8        ; R1 := mOmegaWithPendingFingerprints
 26 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 72
 27 [-]: JMP       72           ; PC := 72
 28 [-]: GETGLOBAL R1 K9        ; R1 := mProcessingOmegaWithPendingFingerprint
 29 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 72
 30 [-]: JMP       72           ; PC := 72
 31 [-]: GETGLOBAL R1 K8        ; R1 := mOmegaWithPendingFingerprints
 32 [-]: LEN       R1 R1        ; R1 := # R1
 33 [-]: LT        0 K10 R1     ; if 0.000000 >= R1 then PC := 69
 34 [-]: JMP       69           ; PC := 69
 35 [-]: GETGLOBAL R1 K11       ; R1 := 0x33bdd652
 36 [-]: GETTABLE  R1 R1 K12    ; R1 := R1[0x9c1f3b5a]
 37 [-]: GETGLOBAL R2 K8        ; R2 := mOmegaWithPendingFingerprints
 38 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 39 [-]: SETGLOBAL R1 K9        ; mProcessingOmegaWithPendingFingerprint := R1
 40 [-]: GETGLOBAL R1 K13       ; R1 := _T
 41 [-]: GETGLOBAL R2 K9        ; R2 := mProcessingOmegaWithPendingFingerprint
 42 [-]: SETTABLE  R1 K14 R2    ; R1["OmegaRerollChoice"] := R2
 43 [-]: GETGLOBAL R1 K13       ; R1 := _T
 44 [-]: CLOSURE   R2 0         ; R2 := closure(Function #102.1)
 45 [-]: SETTABLE  R1 K15 R2    ; R1["OmegaRerollDone"] := R2
 46 [-]: GETGLOBAL R1 K13       ; R1 := _T
 47 [-]: CLOSURE   R2 1         ; R2 := closure(Function #102.2)
 48 [-]: SETTABLE  R1 K16 R2    ; R1["OmegaRerollCanceled"] := R2
 49 [-]: GETGLOBAL R1 K17       ; R1 := 0xae91e43b
 50 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1[0x1fd6abd0]
 51 [-]: GETGLOBAL R3 K19       ; R3 := 0x7ed0a956
 52 [-]: LOADK     R4 K20       ; R4 := "/Lotus/Interface/OmegaRerollSelection.swf"
 53 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 54 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 55 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 56 [-]: MOVE      R3 R1        ; R3 := R1
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 1         ; if R2 then PC := 228
 59 [-]: JMP       228          ; PC := 228
 60 [-]: SELF      R2 R1 K21    ; R3 := R1; R2 := R1[0xe4162eed]
 61 [-]: LOADK     R4 K22       ; R4 := "SetCallBack"
 62 [-]: LOADK     R5 K15       ; R5 := "OmegaRerollDone"
 63 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 64 [-]: SELF      R2 R1 K21    ; R3 := R1; R2 := R1[0xe4162eed]
 65 [-]: LOADK     R4 K23       ; R4 := "SetCancelCallBack"
 66 [-]: LOADK     R5 K16       ; R5 := "OmegaRerollCanceled"
 67 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 68 [-]: JMP       228          ; PC := 228
 69 [-]: LOADNIL   R2 R2        ; R2 := nil
 70 [-]: SETGLOBAL R2 K8        ; mOmegaWithPendingFingerprints := R2
 71 [-]: JMP       228          ; PC := 228
 72 [-]: GETGLOBAL R2 K6        ; R2 := mCheckingForIdentifiedOmegaMods
 73 [-]: TEST      R2 0         ; if not R2 then PC := 182
 74 [-]: JMP       182          ; PC := 182
 75 [-]: GETGLOBAL R2 K24       ; R2 := 0x76ea806b
 76 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2[0x3f3ae64c]
 77 [-]: CONST     R4 0         ; R4 := 0.000000
 78 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 79 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 80 [-]: MOVE      R4 R2        ; R4 := R2
 81 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 82 [-]: TEST      R3 0         ; if not R3 then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: RETURN    R0 1         ; return 
 85 [-]: SELF      R3 R2 K26    ; R4 := R2; R3 := R2[0x80563238]
 86 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 87 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 88 [-]: MOVE      R5 R3        ; R5 := R3
 89 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 90 [-]: TEST      R4 0         ; if not R4 then PC := 93
 91 [-]: JMP       93           ; PC := 93
 92 [-]: RETURN    R0 1         ; return 
 93 [-]: SELF      R4 R3 K27    ; R5 := R3; R4 := R3[0x25a6e75e]
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: SELF      R5 R4 K28    ; R6 := R4; R5 := R4[0x98b1bb53]
 96 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 97 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 98 [-]: GETGLOBAL R7 K29       ; R7 := 0xc8802016
 99 [-]: MOVE      R8 R5        ; R8 := R5
100 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
101 [-]: JMP       113          ; PC := 113
102 [-]: GETTABLE  R12 R11 K30  ; R12 := R11["mItemType"]
103 [-]: SELF      R13 R12 K31  ; R14 := R12; R13 := R12[0xf2deaf69]
104 [-]: GETGLOBAL R15 K32      ; R15 := gRandomizedArtifactUpgradeType
105 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
106 [-]: TEST      R13 0        ; if not R13 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: GETGLOBAL R13 K11      ; R13 := 0x33bdd652
109 [-]: GETTABLE  R13 R13 K33  ; R13 := R13[0x23d5322f]
110 [-]: MOVE      R14 R6       ; R14 := R6
111 [-]: MOVE      R15 R11      ; R15 := R11
112 [-]: CALL      R13 3 1      ; R13(R14,R15)
113 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 102; R9 := R10 end
114 [-]: JMP       102          ; PC := 102
115 [-]: GETUPVAL  R13 U2       ; R13 := U2
116 [-]: LEN       R14 R6       ; R14 := # R6
117 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 168
118 [-]: JMP       168          ; PC := 168
119 [-]: GETUPVAL  R13 U2       ; R13 := U2
120 [-]: GETTABLE  R13 R6 R13   ; R13 := R6[R13]
121 [-]: GETTABLE  R14 R13 K30  ; R14 := R13["mItemType"]
122 [-]: GETTABLE  R15 R13 K34  ; R15 := R13["mInstance"]
123 [-]: GETTABLE  R16 R13 K35  ; R16 := R13["mUpgradeFingerprint"]
124 [-]: GETTABLE  R17 R13 K36  ; R17 := R13["mPendingRerollFingerprint"]
125 [-]: GETGLOBAL R18 K2       ; R18 := 0x7b998233
126 [-]: SELF      R19 R15 K37  ; R20 := R15; R19 := R15[0xd08fa3ab]
127 [-]: MOVE      R21 R16      ; R21 := R16
128 [-]: CALL      R19 3 0      ; R19,... := R19(R20,R21)
129 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
130 [-]: TEST      R18 1        ; if R18 then PC := 147
131 [-]: JMP       147          ; PC := 147
132 [-]: SELF      R18 R15 K38  ; R19 := R15; R18 := R15[0x4dd96fc5]
133 [-]: MOVE      R20 R16      ; R20 := R16
134 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
135 [-]: SELF      R19 R15 K39  ; R20 := R15; R19 := R15[0xfb6b8cc5]
136 [-]: MOVE      R21 R16      ; R21 := R16
137 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
138 [-]: LE        0 R19 R18    ; if R19 > R18 then PC := 147
139 [-]: JMP       147          ; PC := 147
140 [-]: GETGLOBAL R18 K11      ; R18 := 0x33bdd652
141 [-]: GETTABLE  R18 R18 K33  ; R18 := R18[0x23d5322f]
142 [-]: GETGLOBAL R19 K40      ; R19 := mNewIdentifiedOmegaMods
143 [-]: GETTABLE  R20 R13 K41  ; R20 := R13["mItemId"]
144 [-]: GETTABLE  R20 R20 K42  ; R20 := R20["mId"]
145 [-]: CALL      R18 3 1      ; R18(R19,R20)
146 [-]: JMP       160          ; PC := 160
147 [-]: EQ        1 R17 K43    ; if R17 == "" then PC := 160
148 [-]: JMP       160          ; PC := 160
149 [-]: GETGLOBAL R18 K11      ; R18 := 0x33bdd652
150 [-]: GETTABLE  R18 R18 K33  ; R18 := R18[0x23d5322f]
151 [-]: GETGLOBAL R19 K8       ; R19 := mOmegaWithPendingFingerprints
152 [-]: NEWTABLE  R20 0 4      ; R20 := {}
153 [-]: GETTABLE  R21 R13 K41  ; R21 := R13["mItemId"]
154 [-]: GETTABLE  R21 R21 K42  ; R21 := R21["mId"]
155 [-]: SETTABLE  R20 K44 R21  ; R20["Id"] := R21
156 [-]: SETTABLE  R20 K45 R14  ; R20["Type"] := R14
157 [-]: SETTABLE  R20 K46 R16  ; R20["Fingerprint"] := R16
158 [-]: SETTABLE  R20 K47 R17  ; R20["RerollFingerprint"] := R17
159 [-]: CALL      R18 3 1      ; R18(R19,R20)
160 [-]: GETUPVAL  R18 U2       ; R18 := U2
161 [-]: LEN       R19 R6       ; R19 := # R6
162 [-]: LT        0 R18 R19    ; if R18 >= R19 then PC := 168
163 [-]: JMP       168          ; PC := 168
164 [-]: GETUPVAL  R18 U2       ; R18 := U2
165 [-]: ADD       R18 R18 K48  ; R18 := R18 + 1.000000
166 [-]: SETUPVAL  R18 U2       ; U82 := R2
167 [-]: RETURN    R0 1         ; return 
168 [-]: LOADKB    R18 0 0      ; R18 := false
169 [-]: SETGLOBAL R18 K6       ; mCheckingForIdentifiedOmegaMods := R18
170 [-]: GETGLOBAL R18 K40      ; R18 := mNewIdentifiedOmegaMods
171 [-]: LEN       R18 R18      ; R18 := # R18
172 [-]: EQ        0 R18 K10    ; if R18 ~= 0.000000 then PC := 177
173 [-]: JMP       177          ; PC := 177
174 [-]: LOADNIL   R18 R18      ; R18 := nil
175 [-]: SETGLOBAL R18 K6       ; mCheckingForIdentifiedOmegaMods := R18
176 [-]: RETURN    R0 1         ; return 
177 [-]: SELF      R18 R3 K49   ; R19 := R3; R18 := R3[0x924e816a]
178 [-]: GETGLOBAL R20 K40      ; R20 := mNewIdentifiedOmegaMods
179 [-]: LOADK     R21 K50      ; R21 := "OnRerollsCompleted"
180 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
181 [-]: JMP       228          ; PC := 228
182 [-]: GETGLOBAL R18 K51      ; R18 := mShouldShowDiorama
183 [-]: TEST      R18 0        ; if not R18 then PC := 195
184 [-]: JMP       195          ; PC := 195
185 [-]: LOADNIL   R18 R18      ; R18 := nil
186 [-]: SETGLOBAL R18 K51      ; mShouldShowDiorama := R18
187 [-]: GETGLOBAL R18 K13      ; R18 := _T
188 [-]: CLOSURE   R19 2        ; R19 := closure(Function #102.3)
189 [-]: SETTABLE  R18 K52 R19  ; R18["OnDioramaLoaded"] := R19
190 [-]: GETUPVAL  R18 U3       ; R18 := U3
191 [-]: GETGLOBAL R19 K53      ; R19 := 0x4248b498
192 [-]: LOADK     R20 K52      ; R20 := "OnDioramaLoaded"
193 [-]: CALL      R18 3 1      ; R18(R19,R20)
194 [-]: JMP       228          ; PC := 228
195 [-]: GETGLOBAL R18 K7       ; R18 := mShowingIdentifiedOmegaModsDiorama
196 [-]: TEST      R18 0        ; if not R18 then PC := 228
197 [-]: JMP       228          ; PC := 228
198 [-]: LOADKB    R18 0 0      ; R18 := false
199 [-]: SETGLOBAL R18 K7       ; mShowingIdentifiedOmegaModsDiorama := R18
200 [-]: GETGLOBAL R18 K13      ; R18 := _T
201 [-]: SETTABLE  R18 K52 K5   ; R18["OnDioramaLoaded"] := nil
202 [-]: LOADNIL   R18 R18      ; R18 := nil
203 [-]: GETGLOBAL R19 K54      ; R19 := 0x4ec73e73
204 [-]: GETGLOBAL R20 K13      ; R20 := _T
205 [-]: GETTABLE  R20 R20 K55  ; R20 := R20["boosterPackCards"]
206 [-]: CALL      R19 2 2      ; R19 := R19(R20)
207 [-]: TEST      R19 0        ; if not R19 then PC := 228
208 [-]: JMP       228          ; PC := 228
209 [-]: GETGLOBAL R19 K17      ; R19 := 0xae91e43b
210 [-]: SELF      R19 R19 K18  ; R20 := R19; R19 := R19[0x1fd6abd0]
211 [-]: GETGLOBAL R21 K56      ; R21 := 0x39803e25
212 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
213 [-]: MOVE      R18 R19      ; R18 := R19
214 [-]: SELF      R19 R18 K57  ; R20 := R18; R19 := R18[0xf56f3887]
215 [-]: LOADK     R21 K58      ; R21 := "SetText"
216 [-]: NEWTABLE  R22 1 0      ; R22 := {}
217 [-]: LOADK     R23 K43      ; R23 := ""
218 [-]: SETLIST   R22 1 1      ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
219 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
220 [-]: SELF      R19 R18 K21  ; R20 := R18; R19 := R18[0xe4162eed]
221 [-]: LOADK     R21 K59      ; R21 := "SetNumOptions"
222 [-]: CONST     R22 1        ; R22 := 1.000000
223 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
224 [-]: SELF      R19 R18 K21  ; R20 := R18; R19 := R18[0xe4162eed]
225 [-]: LOADK     R21 K60      ; R21 := "SetCallback"
226 [-]: LOADK     R22 K61      ; R22 := "OnFinishedShowingIdentifiedOmegas"
227 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
228 [-]: RETURN    R0 1         ; return 


; Function #102.1:
;
; Name:            
; Defined at line: 4154
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #102.2:
;
; Name:            
; Defined at line: 4157
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["OmegaRerollDone"] := nil
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: SETTABLE  R0 K3 K2     ; R0["OmegaRerollCanceled"] := nil
  5 [-]: LOADNIL   R0 R0        ; R0 := nil
  6 [-]: SETGLOBAL R0 K4        ; mProcessingOmegaWithPendingFingerprint := R0
  7 [-]: RETURN    R0 1         ; return 


; Function #102.3:
;
; Name:            
; Defined at line: 4228
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mShowingIdentifiedOmegaModsDiorama := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 4247
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe7f2b02f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0b6ebd5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: TEST      R1 0         ; if not R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIMovie_EndOfQuestMovie"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 28
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: LOADKB    R2 1 0       ; R2 := true
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETUPVAL  R1 U3        ; R1 := U3
 24 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x8c71bcf4]
 25 [-]: CALL      R1 1 1       ; R1()
 26 [-]: LOADKB    R1 0 0       ; R1 := false
 27 [-]: SETUPVAL  R1 U0        ; U82 := R0
 28 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 4261
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x83f4e77c
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 87
  5 [-]: JMP       87           ; PC := 87
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0x89326c93
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x29ef273d]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: MOVE      R0 R1        ; R0 := R1
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xa6f182de]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 25
 25 [-]: LOADKB    R1 1 0       ; R1 := true
 26 [-]: GETGLOBAL R2 K1        ; R2 := 0x83f4e77c
 27 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x67e75582]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: TEST      R2 1         ; if R2 then PC := 73
 30 [-]: JMP       73           ; PC := 73
 31 [-]: GETGLOBAL R2 K6        ; R2 := mFadeInStarted
 32 [-]: TEST      R2 1         ; if R2 then PC := 73
 33 [-]: JMP       73           ; PC := 73
 34 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: GETTABLE  R3 R3 K7     ; R3 := R3[0xa9882367]
 37 [-]: LOADK     R4 K8        ; R4 := "StarChartRoot"
 38 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 39 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 40 [-]: TEST      R2 0         ; if not R2 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETGLOBAL R2 K9        ; R2 := mCurrentMode
 43 [-]: GETUPVAL  R3 U1        ; R3 := U1
 44 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
 45 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 73
 46 [-]: JMP       73           ; PC := 73
 47 [-]: TEST      R1 0         ; if not R1 then PC := 73
 48 [-]: JMP       73           ; PC := 73
 49 [-]: GETUPVAL  R2 U2        ; R2 := U2
 50 [-]: CALL      R2 1 1       ; R2()
 51 [-]: GETUPVAL  R2 U0        ; R2 := U0
 52 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0xa9882367]
 53 [-]: LOADK     R3 K11       ; R3 := "SuitAvatarSpawner"
 54 [-]: GETUPVAL  R4 U0        ; R4 := U0
 55 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x06d055f9]
 56 [-]: GETUPVAL  R5 U1        ; R5 := U1
 57 [-]: GETTABLE  R5 R5 K13    ; R5 := R5[0xcf1fcba4]
 58 [-]: CALL      R5 1 2       ; R5 := R5()
 59 [-]: GETGLOBAL R6 K14       ; R6 := 0x1211d00f
 60 [-]: LOADNIL   R7 R7        ; R7 := nil
 61 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 62 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 63 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 64 [-]: MOVE      R4 R2        ; R4 := R2
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: TEST      R3 1         ; if R3 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: SELF      R3 R2 K15    ; R4 := R2; R3 := R2[0x8eb2112d]
 69 [-]: LOADK     R5 K16       ; R5 := "Start"
 70 [-]: CALL      R3 3 1       ; R3(R4,R5)
 71 [-]: LOADKB    R3 1 0       ; R3 := true
 72 [-]: SETGLOBAL R3 K6        ; mFadeInStarted := R3
 73 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 74 [-]: GETGLOBAL R4 K17       ; R4 := mMenuSuitAvatar
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: TEST      R3 1         ; if R3 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: GETGLOBAL R3 K18       ; R3 := mMenuSuitAvatarVisible
 79 [-]: TEST      R3 1         ; if R3 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETUPVAL  R3 U3        ; R3 := U3
 82 [-]: CALL      R3 1 2       ; R3 := R3()
 83 [-]: TEST      R3 0         ; if not R3 then PC := 87
 84 [-]: JMP       87           ; PC := 87
 85 [-]: GETUPVAL  R3 U4        ; R3 := U4
 86 [-]: CALL      R3 1 1       ; R3()
 87 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 88 [-]: GETGLOBAL R4 K19       ; R4 := queuedMovie
 89 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 90 [-]: TEST      R3 1         ; if R3 then PC := 200
 91 [-]: JMP       200          ; PC := 200
 92 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 93 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: TEST      R3 1         ; if R3 then PC := 100
 96 [-]: JMP       100          ; PC := 100
 97 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
 98 [-]: EQ        0 R3 K21     ; if R3 ~= "LoadOut" then PC := 200
 99 [-]: JMP       200          ; PC := 200
100 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
101 [-]: EQ        0 R3 K22     ; if R3 ~= "ItemBrowsing" then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: GETGLOBAL R3 K23       ; R3 := _T
104 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["starChartDone"]
105 [-]: TEST      R3 0         ; if not R3 then PC := 200
106 [-]: JMP       200          ; PC := 200
107 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
108 [-]: GETGLOBAL R4 K25       ; R4 := movies
109 [-]: GETGLOBAL R5 K19       ; R5 := queuedMovie
110 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
111 [-]: CALL      R3 2 2       ; R3 := R3(R4)
112 [-]: TEST      R3 1         ; if R3 then PC := 189
113 [-]: JMP       189          ; PC := 189
114 [-]: GETGLOBAL R3 K26       ; R3 := 0x3d106989
115 [-]: GETUPVAL  R4 U5        ; R4 := U5
116 [-]: LOADK     R5 K27       ; R5 := "PushChildMovie("
117 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
118 [-]: LOADK     R7 K28       ; R7 := ")"
119 [-]: CONCAT    R4 R4 R7     ; R4 := R4 .. R5 .. R6 .. R7
120 [-]: CALL      R3 2 1       ; R3(R4)
121 [-]: GETGLOBAL R3 K29       ; R3 := 0x9ba7909f
122 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0xbcfb64ab]
123 [-]: GETGLOBAL R5 K25       ; R5 := movies
124 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
125 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
126 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
127 [-]: SETGLOBAL R3 K20       ; mChildMovie := R3
128 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
129 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
130 [-]: CALL      R3 2 2       ; R3 := R3(R4)
131 [-]: TEST      R3 1         ; if R3 then PC := 163
132 [-]: JMP       163          ; PC := 163
133 [-]: GETGLOBAL R3 K20       ; R3 := mChildMovie
134 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3[0x368ad758]
135 [-]: LOADKB    R5 1 0       ; R5 := true
136 [-]: CALL      R3 3 1       ; R3(R4,R5)
137 [-]: GETGLOBAL R3 K20       ; R3 := mChildMovie
138 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3[0xe4162eed]
139 [-]: LOADK     R5 K33       ; R5 := "OnChildScreenClosed"
140 [-]: GETGLOBAL R6 K34       ; R6 := mPreviousScreen
141 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
142 [-]: LOADNIL   R3 R3        ; R3 := nil
143 [-]: SETGLOBAL R3 K34       ; mPreviousScreen := R3
144 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
145 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
146 [-]: CALL      R3 2 2       ; R3 := R3(R4)
147 [-]: TEST      R3 1         ; if R3 then PC := 170
148 [-]: JMP       170          ; PC := 170
149 [-]: GETGLOBAL R3 K35       ; R3 := 0x25312c9b
150 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
151 [-]: LOADK     R5 K36       ; R5 := "_root"
152 [-]: CONST     R6 0         ; R6 := 0.000000
153 [-]: NEWTABLE  R7 1 0       ; R7 := {}
154 [-]: CONST     R8 10        ; R8 := 10.000000
155 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
156 [-]: NEWTABLE  R8 1 0       ; R8 := {}
157 [-]: CONST     R9 100       ; R9 := 100.000000
158 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
159 [-]: LOADK     R9 K38       ; R9 := 0.200000
160 [-]: LOADK     R10 K39      ; R10 := 0.300000
161 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
162 [-]: JMP       170          ; PC := 170
163 [-]: GETGLOBAL R3 K40       ; R3 := 0xae91e43b
164 [-]: SELF      R3 R3 K41    ; R4 := R3; R3 := R3[0x1fd6abd0]
165 [-]: GETGLOBAL R5 K25       ; R5 := movies
166 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
167 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
168 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
169 [-]: SETGLOBAL R3 K20       ; mChildMovie := R3
170 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
171 [-]: EQ        1 R3 K42     ; if R3 == "MainMenu" then PC := 176
172 [-]: JMP       176          ; PC := 176
173 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
174 [-]: EQ        0 R3 K43     ; if R3 ~= "Default" then PC := 178
175 [-]: JMP       178          ; PC := 178
176 [-]: LOADNIL   R3 R3        ; R3 := nil
177 [-]: SETGLOBAL R3 K20       ; mChildMovie := R3
178 [-]: GETGLOBAL R3 K44       ; R3 := queuedMovieCallback
179 [-]: EQ        1 R3 K45     ; if R3 == nil then PC := 186
180 [-]: JMP       186          ; PC := 186
181 [-]: GETGLOBAL R3 K46       ; R3 := 0xd920f066
182 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
183 [-]: CALL      R3 2 1       ; R3(R4)
184 [-]: LOADNIL   R3 R3        ; R3 := nil
185 [-]: SETGLOBAL R3 K44       ; queuedMovieCallback := R3
186 [-]: LOADNIL   R3 R3        ; R3 := nil
187 [-]: SETGLOBAL R3 K19       ; queuedMovie := R3
188 [-]: JMP       200          ; PC := 200
189 [-]: GETGLOBAL R3 K26       ; R3 := 0x3d106989
190 [-]: LOADK     R4 K47       ; R4 := "ERROR: Queued unrecognized screen ["
191 [-]: GETGLOBAL R5 K48       ; R5 := 0x64fb1586
192 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
193 [-]: CALL      R5 2 2       ; R5 := R5(R6)
194 [-]: LOADK     R6 K49       ; R6 := "] Check your spelling."
195 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
196 [-]: CALL      R3 2 1       ; R3(R4)
197 [-]: GETGLOBAL R3 K50       ; R3 := 0x60cce7b4
198 [-]: LOADKB    R4 0 0       ; R4 := false
199 [-]: CALL      R3 2 1       ; R3(R4)
200 [-]: GETGLOBAL R3 K51       ; R3 := 0xe7f2b02f
201 [-]: SELF      R3 R3 K52    ; R4 := R3; R3 := R3[0x0b6ebd5b]
202 [-]: CALL      R3 2 2       ; R3 := R3(R4)
203 [-]: TEST      R3 1         ; if R3 then PC := 243
204 [-]: JMP       243          ; PC := 243
205 [-]: GETGLOBAL R4 K53       ; R4 := mQueuedGoToScreen
206 [-]: EQ        1 R4 K45     ; if R4 == nil then PC := 219
207 [-]: JMP       219          ; PC := 219
208 [-]: GETGLOBAL R4 K53       ; R4 := mQueuedGoToScreen
209 [-]: GETTABLE  R4 R4 K54    ; R4 := R4["screen"]
210 [-]: GETGLOBAL R5 K53       ; R5 := mQueuedGoToScreen
211 [-]: GETTABLE  R5 R5 K55    ; R5 := R5["callback"]
212 [-]: LOADNIL   R6 R6        ; R6 := nil
213 [-]: SETGLOBAL R6 K53       ; mQueuedGoToScreen := R6
214 [-]: GETGLOBAL R6 K23       ; R6 := _T
215 [-]: GETTABLE  R6 R6 K56    ; R6 := R6[0xbf0443a1]
216 [-]: MOVE      R7 R4        ; R7 := R4
217 [-]: MOVE      R8 R5        ; R8 := R5
218 [-]: CALL      R6 3 1       ; R6(R7,R8)
219 [-]: GETGLOBAL R6 K57       ; R6 := mQueuedGoToPreviousScreen
220 [-]: EQ        1 R6 K45     ; if R6 == nil then PC := 230
221 [-]: JMP       230          ; PC := 230
222 [-]: GETGLOBAL R6 K57       ; R6 := mQueuedGoToPreviousScreen
223 [-]: GETTABLE  R6 R6 K58    ; R6 := R6["skip"]
224 [-]: LOADNIL   R7 R7        ; R7 := nil
225 [-]: SETGLOBAL R7 K57       ; mQueuedGoToPreviousScreen := R7
226 [-]: GETGLOBAL R7 K23       ; R7 := _T
227 [-]: GETTABLE  R7 R7 K59    ; R7 := R7[0x4e4e6b0c]
228 [-]: MOVE      R8 R6        ; R8 := R6
229 [-]: CALL      R7 2 1       ; R7(R8)
230 [-]: GETGLOBAL R7 K60       ; R7 := mQueuedLogoff
231 [-]: TEST      R7 0         ; if not R7 then PC := 235
232 [-]: JMP       235          ; PC := 235
233 [-]: GETUPVAL  R7 U6        ; R7 := U6
234 [-]: CALL      R7 1 1       ; R7()
235 [-]: GETGLOBAL R7 K61       ; R7 := mUnblockWhenAsyncDone
236 [-]: TEST      R7 0         ; if not R7 then PC := 243
237 [-]: JMP       243          ; PC := 243
238 [-]: GETUPVAL  R7 U7        ; R7 := U7
239 [-]: CONST     R8 0         ; R8 := 0.000000
240 [-]: CALL      R7 2 1       ; R7(R8)
241 [-]: LOADKB    R7 0 0       ; R7 := false
242 [-]: SETGLOBAL R7 K61       ; mUnblockWhenAsyncDone := R7
243 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 4345
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x568748e0]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 4349
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xb6efad5f]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4353
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SoundInst"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 17
  6 [-]: JMP       17           ; PC := 17
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x9da884af]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SoundInst"]
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x89326c93
 12 [-]: LOADKB    R4 1 0       ; R4 := true
 13 [-]: GETGLOBAL R5 K4        ; R5 := _T
 14 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LypSyncDeco"]
 15 [-]: LOADKB    R6 0 0       ; R6 := false
 16 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 17 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4359
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["FortressLocation"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 37
  4 [-]: JMP       37           ; PC := 37
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["FortressLocation"]
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Initialized"]
  8 [-]: EQ        0 R0 K4      ; if R0 ~= true then PC := 37
  9 [-]: JMP       37           ; PC := 37
 10 [-]: GETGLOBAL R0 K0        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["FortressLocation"]
 12 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["Progress"]
 13 [-]: GETGLOBAL R1 K6        ; R1 := 0xb693b6c1
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: GETGLOBAL R2 K0        ; R2 := _T
 16 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FortressLocation"]
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Velocity"]
 18 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 19 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 20 [-]: LE        0 K8 R0      ; if 1.000000 > R0 then PC := 33
 21 [-]: JMP       33           ; PC := 33
 22 [-]: GETGLOBAL R1 K0        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["FortressLocation"]
 24 [-]: GETGLOBAL R2 K0        ; R2 := _T
 25 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FortressLocation"]
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["SplineIndex"]
 27 [-]: GETGLOBAL R3 K0        ; R3 := _T
 28 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["FortressLocation"]
 29 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["MaxSplines"]
 30 [-]: MOD       R2 R2 R3     ; R2 := R2 % R3
 31 [-]: ADD       R2 K8 R2     ; R2 := 1.000000 + R2
 32 [-]: SETTABLE  R1 K9 R2     ; R1["SplineIndex"] := R2
 33 [-]: GETGLOBAL R1 K0        ; R1 := _T
 34 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["FortressLocation"]
 35 [-]: MOD       R2 R0 K8     ; R2 := R0 % 1.000000
 36 [-]: SETTABLE  R1 K5 R2     ; R1["Progress"] := R2
 37 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4372
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: SETGLOBAL R1 K0        ; mFriendRequestActiveNotification := R1
  4 [-]: JMP       25           ; PC := 25
  5 [-]: GETGLOBAL R2 K0        ; R2 := mFriendRequestActiveNotification
  6 [-]: EQ        0 R2 R1      ; if R2 ~= R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADNIL   R2 R2        ; R2 := nil
  9 [-]: SETGLOBAL R2 K0        ; mFriendRequestActiveNotification := R2
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x25d99d89
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETGLOBAL R2 K3        ; R2 := mFriendRequests
 16 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 17 [-]: TEST      R2 0         ; if not R2 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R2 K3        ; R2 := mFriendRequests
 20 [-]: SETTABLE  R2 R1 K4     ; R2[R1] := nil
 21 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
 22 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xadb51265]
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4386
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: LOADKB    R0 0 0       ; R0 := false
  2 [-]: TEST      R0 1         ; if R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADKB    R0 0 0       ; R0 := false
  5 [-]: TEST      R0 0         ; if not R0 then PC := 78
  6 [-]: JMP       78           ; PC := 78
  7 [-]: GETGLOBAL R1 K0        ; R1 := mNewFriendRequests
  8 [-]: TEST      R1 0         ; if not R1 then PC := 78
  9 [-]: JMP       78           ; PC := 78
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 11 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 78
 14 [-]: JMP       78           ; PC := 78
 15 [-]: GETGLOBAL R1 K3        ; R1 := _T
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ShowNotification"]
 17 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 78
 18 [-]: JMP       78           ; PC := 78
 19 [-]: LOADKB    R1 0 0       ; R1 := false
 20 [-]: SETGLOBAL R1 K0        ; mNewFriendRequests := R1
 21 [-]: GETGLOBAL R1 K2        ; R1 := 0x25d99d89
 22 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x31842110]
 23 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 24 [-]: CONST     R2 1         ; R2 := 1.000000
 25 [-]: LEN       R3 R1        ; R3 := # R1
 26 [-]: CONST     R4 1         ; R4 := 1.000000
 27 [-]: FORPREP   R2 77        ; R2 -= R4; PC := 77
 28 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 29 [-]: GETTABLE  R7 R6 K7     ; R7 := R6["mDisplayName"]
 30 [-]: GETTABLE  R8 R6 K8     ; R8 := R6["mNewRequest"]
 31 [-]: TEST      R8 0         ; if not R8 then PC := 77
 32 [-]: JMP       77           ; PC := 77
 33 [-]: GETGLOBAL R8 K9        ; R8 := 0x89326c93
 34 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0x78298275]
 35 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 36 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
 37 [-]: MOVE      R10 R8       ; R10 := R8
 38 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 39 [-]: TEST      R9 1         ; if R9 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: SELF      R9 R8 K11    ; R10 := R8; R9 := R8[0xd3a01177]
 42 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 43 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xcc998df1]
 44 [-]: LOADK     R11 K13      ; R11 := "FriendNotificationSelected"
 45 [-]: CALL      R9 3 1       ; R9(R10,R11)
 46 [-]: GETGLOBAL R9 K14       ; R9 := mFriendRequests
 47 [-]: SETTABLE  R9 R7 R6     ; R9[R7] := R6
 48 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
 49 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x42b04007]
 50 [-]: LOADK     R11 K17      ; R11 := "/Lotus/Language/Menu/Lobby_FriendInvite"
 51 [-]: LOADKB    R12 0 0      ; R12 := false
 52 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 53 [-]: SETTABLE  R13 K18 R7   ; R13["USER"] := R7
 54 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 55 [-]: LOADK     R10 K19      ; R10 := "\r\r"
 56 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
 57 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11[0x42b04007]
 58 [-]: LOADK     R13 K20      ; R13 := "<NEXT_INV>"
 59 [-]: LOADKB    R14 1 0      ; R14 := true
 60 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 61 [-]: GETGLOBAL R12 K15      ; R12 := 0xae91e43b
 62 [-]: SELF      R12 R12 K16  ; R13 := R12; R12 := R12[0x42b04007]
 63 [-]: LOADK     R14 K21      ; R14 := "/Lotus/Language/Menu/Details"
 64 [-]: LOADKB    R15 0 0      ; R15 := false
 65 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 66 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 67 [-]: GETGLOBAL R10 K3       ; R10 := _T
 68 [-]: GETTABLE  R10 R10 K22  ; R10 := R10[0x7dce37bc]
 69 [-]: MOVE      R11 R9       ; R11 := R9
 70 [-]: LOADK     R12 K23      ; R12 := "SquadMemberJoined"
 71 [-]: LOADKB    R13 0 0      ; R13 := false
 72 [-]: CONST     R14 8        ; R14 := 8.000000
 73 [-]: LOADNIL   R15 R16      ; R15 := R16 := nil
 74 [-]: GETUPVAL  R17 U0       ; R17 := U0
 75 [-]: MOVE      R18 R7       ; R18 := R7
 76 [-]: CALL      R10 9 1      ; R10(R11,R12,R13,R14,R15,R16,R17,R18)
 77 [-]: FORLOOP   R2 28        ; R2 += R4; if R2 <= R3 then begin PC := 28; R5 := R2 end
 78 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4410
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mNewFriendRequests := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4414
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mFriendRequestActiveNotification
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 53
  5 [-]: JMP       53           ; PC := 53
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0x41c97c15]
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: GETGLOBAL R0 K4        ; R0 := mFriendRequests
 10 [-]: GETGLOBAL R1 K1        ; R1 := mFriendRequestActiveNotification
 11 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 12 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 13 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0xe27b35bb]
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: SETTABLE  R1 K7 K8     ; R1["dialogType"] := 5.000000
 16 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 18 [-]: LOADK     R4 K12       ; R4 := "/Lotus/Language/Menu/Lobby_FriendInviteDetails"
 19 [-]: LOADKB    R5 0 0       ; R5 := false
 20 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 21 [-]: GETGLOBAL R7 K1        ; R7 := mFriendRequestActiveNotification
 22 [-]: SETTABLE  R6 K13 R7    ; R6["USER"] := R7
 23 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 24 [-]: LOADK     R3 K14       ; R3 := "\r\r"
 25 [-]: GETTABLE  R4 R0 K15    ; R4 := R0["mNote"]
 26 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 27 [-]: SETTABLE  R1 K9 R2     ; R1["locString"] := R2
 28 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 29 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 30 [-]: LOADK     R4 K17       ; R4 := "/Lotus/Language/Menu/Global_Accept"
 31 [-]: LOADKB    R5 0 0       ; R5 := false
 32 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 33 [-]: SETTABLE  R1 K16 R2    ; R1["firstString"] := R2
 34 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 35 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 36 [-]: LOADK     R4 K19       ; R4 := "/Lotus/Language/Menu/Global_Decline"
 37 [-]: LOADKB    R5 0 0       ; R5 := false
 38 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 39 [-]: SETTABLE  R1 K18 R2    ; R1["secondString"] := R2
 40 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 41 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 42 [-]: LOADK     R4 K21       ; R4 := "/Lotus/Language/Menu/NavBar_Cancel"
 43 [-]: LOADKB    R5 0 0       ; R5 := false
 44 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 45 [-]: SETTABLE  R1 K20 R2    ; R1["thirdString"] := R2
 46 [-]: SELF      R2 R1 K22    ; R3 := R1; R2 := R1[0xe6ccc5b9]
 47 [-]: LOADK     R4 K23       ; R4 := "FriendRequestOptionChosen"
 48 [-]: CALL      R2 3 1       ; R2(R3,R4)
 49 [-]: GETUPVAL  R2 U0        ; R2 := U0
 50 [-]: GETTABLE  R2 R2 K24    ; R2 := R2[0xe99b84e7]
 51 [-]: MOVE      R3 R1        ; R3 := R1
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4431
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 39
  5 [-]: JMP       39           ; PC := 39
  6 [-]: GETGLOBAL R1 K2        ; R1 := mFriendRequests
  7 [-]: GETGLOBAL R2 K3        ; R2 := mFriendRequestActiveNotification
  8 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 35
 13 [-]: JMP       35           ; PC := 35
 14 [-]: GETGLOBAL R2 K4        ; R2 := 0x03f57322
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: EQ        0 R2 K6      ; if R2 ~= 4.000000 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xad1be9ba]
 21 [-]: GETTABLE  R4 R1 K8     ; R4 := R1["mId"]
 22 [-]: LOADK     R5 K9        ; R5 := "OnConfirmFriendResult"
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: JMP       35           ; PC := 35
 25 [-]: GETGLOBAL R2 K4        ; R2 := 0x03f57322
 26 [-]: MOVE      R3 R0        ; R3 := R0
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: EQ        0 R2 K10     ; if R2 ~= 6.000000 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
 31 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x4818a526]
 32 [-]: GETTABLE  R4 R1 K8     ; R4 := R1["mId"]
 33 [-]: LOADK     R5 K12       ; R5 := "OnRemoveFriendResult"
 34 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: LOADKB    R3 0 0       ; R3 := false
 37 [-]: GETGLOBAL R4 K3        ; R4 := mFriendRequestActiveNotification
 38 [-]: CALL      R2 3 1       ; R2(R3,R4)
 39 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4445
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xe0cba3ca]
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x3230dc3e]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  9 [-]: CALL      R2 0 1       ; R2(R3,...)
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4452
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 1         ; if R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0xe0cba3ca]
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K1     ; R4 := R4[0x3230dc3e]
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  9 [-]: CALL      R3 0 1       ; R3(R4,...)
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0xe0cba3ca]
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CALL      R3 2 1       ; R3(R4)
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 16 [-]: GETGLOBAL R4 K3        ; R4 := 0x25d99d89
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: GETGLOBAL R3 K3        ; R3 := 0x25d99d89
 21 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x50f18d6c]
 22 [-]: LOADK     R5 K5        ; R5 := "OnGetFriendsResult"
 23 [-]: CALL      R3 3 1       ; R3(R4,R5)
 24 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4465
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K0        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendConfirmed"
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4469
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K0        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendRemoveConfirm"
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4476
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe0cba3ca]
  3 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/HostDojoFailureDownload"
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4480
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  50

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0xbe190284
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: SETUPVAL  R0 U0        ; U82 := R0
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0x76ea806b
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x3f3ae64c]
 10 [-]: CONST     R4 0         ; R4 := 0.000000
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xe52f5b15]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 204
 15 [-]: JMP       204          ; PC := 204
 16 [-]: GETGLOBAL R3 K5        ; R3 := 0x7f5022cf
 17 [-]: GETTABLE  R3 R3 K6     ; R3 := R3[0xa5c556b9]
 18 [-]: GETGLOBAL R4 K5        ; R4 := 0x7f5022cf
 19 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x04981ab3]
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: LOADK     R5 K8        ; R5 := "trade"
 23 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 24 [-]: GETGLOBAL R4 K9        ; R4 := 0xe7f2b02f
 25 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xb6b65f09]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: LOADNIL   R5 R5        ; R5 := nil
 28 [-]: EQ        1 R4 K11     ; if R4 == "" then PC := 53
 29 [-]: JMP       53           ; PC := 53
 30 [-]: CONST     R6 1         ; R6 := 1.000000
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["MATCH_MAKING_FAMILY_SUFFIX"]
 33 [-]: LEN       R7 R7        ; R7 := # R7
 34 [-]: CONST     R8 1         ; R8 := 1.000000
 35 [-]: FORPREP   R6 51        ; R6 -= R8; PC := 51
 36 [-]: CONST     R10 0        ; R10 := 0.000000
 37 [-]: SELF      R11 R4 K13   ; R12 := R4; R11 := R4[0x66edf04f]
 38 [-]: GETUPVAL  R13 U1       ; R13 := U1
 39 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["MATCH_MAKING_FAMILY_SUFFIX"]
 40 [-]: GETTABLE  R13 R13 R9   ; R13 := R13[R9]
 41 [-]: LOADK     R14 K11      ; R14 := ""
 42 [-]: CALL      R11 4 3      ; R11,R12 := R11(R12,R13,R14)
 43 [-]: MOVE      R10 R12      ; R10 := R12
 44 [-]: MOVE      R4 R11       ; R4 := R11
 45 [-]: LT        0 K14 R10    ; if 0.000000 >= R10 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: GETUPVAL  R11 U1       ; R11 := U1
 48 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["MATCH_MAKING_FAMILY_SUFFIX"]
 49 [-]: GETTABLE  R5 R11 R9    ; R5 := R11[R9]
 50 [-]: JMP       84           ; PC := 84
 51 [-]: FORLOOP   R6 36        ; R6 += R8; if R6 <= R7 then begin PC := 36; R9 := R6 end
 52 [-]: JMP       84           ; PC := 84
 53 [-]: GETGLOBAL R11 K9       ; R11 := 0xe7f2b02f
 54 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11[0x6d0aa187]
 55 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 56 [-]: LOADNIL   R12 R12      ; R12 := nil
 57 [-]: LOADKB    R13 1 0      ; R13 := true
 58 [-]: CONST     R14 1        ; R14 := 1.000000
 59 [-]: LEN       R15 R11      ; R15 := # R11
 60 [-]: CONST     R16 1        ; R16 := 1.000000
 61 [-]: FORPREP   R14 71       ; R14 -= R16; PC := 71
 62 [-]: GETTABLE  R18 R11 R17  ; R18 := R11[R17]
 63 [-]: GETTABLE  R19 R18 K16  ; R19 := R18["isHost"]
 64 [-]: TEST      R19 0        ; if not R19 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: GETTABLE  R12 R18 K17  ; R12 := R18["platform"]
 67 [-]: GETTABLE  R19 R18 K18  ; R19 := R18["crossPlatformMP"]
 68 [-]: TEST      R19 1        ; if R19 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: LOADKB    R13 0 0      ; R13 := false
 71 [-]: FORLOOP   R14 62       ; R14 += R16; if R14 <= R15 then begin PC := 62; R17 := R14 end
 72 [-]: TEST      R3 1         ; if R3 then PC := 76
 73 [-]: JMP       76           ; PC := 76
 74 [-]: TEST      R13 1        ; if R13 then PC := 84
 75 [-]: JMP       84           ; PC := 84
 76 [-]: GETUPVAL  R19 U1       ; R19 := U1
 77 [-]: GETTABLE  R19 R19 K12  ; R19 := R19["MATCH_MAKING_FAMILY_SUFFIX"]
 78 [-]: GETUPVAL  R20 U1       ; R20 := U1
 79 [-]: GETTABLE  R20 R20 K19  ; R20 := R20[0x21d5408a]
 80 [-]: MOVE      R21 R12      ; R21 := R12
 81 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 82 [-]: ADD       R20 R20 K20  ; R20 := R20 + 1.000000
 83 [-]: GETTABLE  R5 R19 R20   ; R5 := R19[R20]
 84 [-]: LOADNIL   R19 R19      ; R19 := nil
 85 [-]: GETGLOBAL R20 K21      ; R20 := 0x34291f5c
 86 [-]: GETTABLE  R20 R20 K22  ; R20 := R20[0x143e1971]
 87 [-]: CALL      R20 1 2      ; R20 := R20()
 88 [-]: TEST      R3 1         ; if R3 then PC := 98
 89 [-]: JMP       98           ; PC := 98
 90 [-]: GETGLOBAL R21 K2       ; R21 := 0x76ea806b
 91 [-]: SELF      R21 R21 K3   ; R22 := R21; R21 := R21[0x3f3ae64c]
 92 [-]: CONST     R23 0        ; R23 := 0.000000
 93 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 94 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21[0x13ed4306]
 95 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 96 [-]: TEST      R21 1        ; if R21 then PC := 102
 97 [-]: JMP       102          ; PC := 102
 98 [-]: GETUPVAL  R21 U1       ; R21 := U1
 99 [-]: GETTABLE  R21 R21 K12  ; R21 := R21["MATCH_MAKING_FAMILY_SUFFIX"]
100 [-]: ADD       R22 R20 K20  ; R22 := R20 + 1.000000
101 [-]: GETTABLE  R19 R21 R22  ; R19 := R21[R22]
102 [-]: EQ        1 R19 R5     ; if R19 == R5 then PC := 204
103 [-]: JMP       204          ; PC := 204
104 [-]: LOADKB    R21 1 0      ; R21 := true
105 [-]: EQ        0 R19 K24    ; if R19 ~= nil then PC := 114
106 [-]: JMP       114          ; PC := 114
107 [-]: GETUPVAL  R22 U1       ; R22 := U1
108 [-]: GETTABLE  R22 R22 K12  ; R22 := R22["MATCH_MAKING_FAMILY_SUFFIX"]
109 [-]: ADD       R23 R20 K20  ; R23 := R20 + 1.000000
110 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
111 [-]: EQ        0 R22 R5     ; if R22 ~= R5 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: LOADKB    R21 0 0      ; R21 := false
114 [-]: TEST      R21 0        ; if not R21 then PC := 204
115 [-]: JMP       204          ; PC := 204
116 [-]: GETGLOBAL R22 K25      ; R22 := 0x3d106989
117 [-]: LOADK     R23 K26      ; R23 := "Hub mismatch: "
118 [-]: GETGLOBAL R24 K27      ; R24 := 0x64fb1586
119 [-]: MOVE      R25 R19      ; R25 := R19
120 [-]: CALL      R24 2 2      ; R24 := R24(R25)
121 [-]: LOADK     R25 K28      ; R25 := " vs "
122 [-]: GETGLOBAL R26 K27      ; R26 := 0x64fb1586
123 [-]: MOVE      R27 R5       ; R27 := R5
124 [-]: CALL      R26 2 2      ; R26 := R26(R27)
125 [-]: CONCAT    R23 R23 R26  ; R23 := R23 .. R24 .. R25 .. R26
126 [-]: CALL      R22 2 1      ; R22(R23)
127 [-]: GETGLOBAL R22 K9       ; R22 := 0xe7f2b02f
128 [-]: SELF      R22 R22 K29  ; R23 := R22; R22 := R22[0x3b62d69a]
129 [-]: LOADK     R24 K11      ; R24 := ""
130 [-]: CALL      R22 3 1      ; R22(R23,R24)
131 [-]: GETGLOBAL R22 K9       ; R22 := 0xe7f2b02f
132 [-]: SELF      R22 R22 K30  ; R23 := R22; R22 := R22[0xeb82aa5d]
133 [-]: LOADK     R24 K11      ; R24 := ""
134 [-]: CALL      R22 3 1      ; R22(R23,R24)
135 [-]: GETGLOBAL R22 K9       ; R22 := 0xe7f2b02f
136 [-]: SELF      R22 R22 K31  ; R23 := R22; R22 := R22[0x8229d239]
137 [-]: LOADK     R24 K11      ; R24 := ""
138 [-]: CALL      R22 3 1      ; R22(R23,R24)
139 [-]: TEST      R3 0         ; if not R3 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R22 U2       ; R22 := U2
142 [-]: GETTABLE  R22 R22 K32  ; R22 := R22[0xe0cba3ca]
143 [-]: LOADK     R23 K33      ; R23 := "/Lotus/Language/Multiplayer/SocialOverlay_CrossplaySquadFailToJoinMaroo"
144 [-]: CALL      R22 2 1      ; R22(R23)
145 [-]: JMP       185          ; PC := 185
146 [-]: LOADK     R22 K34      ; R22 := "/Lotus/Language/Menu/Chat_HubTitle"
147 [-]: GETGLOBAL R23 K5       ; R23 := 0x7f5022cf
148 [-]: GETTABLE  R23 R23 K6   ; R23 := R23[0xa5c556b9]
149 [-]: GETGLOBAL R24 K5       ; R24 := 0x7f5022cf
150 [-]: GETTABLE  R24 R24 K7   ; R24 := R24[0x04981ab3]
151 [-]: MOVE      R25 R0       ; R25 := R0
152 [-]: CALL      R24 2 2      ; R24 := R24(R25)
153 [-]: LOADK     R25 K35      ; R25 := "dojo"
154 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
155 [-]: EQ        1 R23 K24    ; if R23 == nil then PC := 158
156 [-]: JMP       158          ; PC := 158
157 [-]: LOADK     R22 K36      ; R22 := "/Lotus/Language/Game/Presence_Dojo"
158 [-]: EQ        0 R19 K24    ; if R19 ~= nil then PC := 173
159 [-]: JMP       173          ; PC := 173
160 [-]: GETUPVAL  R23 U2       ; R23 := U2
161 [-]: GETTABLE  R23 R23 K32  ; R23 := R23[0xe0cba3ca]
162 [-]: GETGLOBAL R24 K37      ; R24 := 0x603636ad
163 [-]: LOADK     R25 K38      ; R25 := "/Lotus/Language/Multiplayer/SocialOverlay_CrossplaySquadFailToJoinPlatformRelay"
164 [-]: NEWTABLE  R26 0 1      ; R26 := {}
165 [-]: GETGLOBAL R27 K37      ; R27 := 0x603636ad
166 [-]: MOVE      R28 R22      ; R28 := R22
167 [-]: NEWTABLE  R29 0 0      ; R29 := {}
168 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
169 [-]: SETTABLE  R26 K39 R27  ; R26["LOCATION"] := R27
170 [-]: CALL      R24 3 0      ; R24,... := R24(R25,R26)
171 [-]: CALL      R23 0 1      ; R23(R24,...)
172 [-]: JMP       185          ; PC := 185
173 [-]: GETUPVAL  R23 U2       ; R23 := U2
174 [-]: GETTABLE  R23 R23 K32  ; R23 := R23[0xe0cba3ca]
175 [-]: GETGLOBAL R24 K37      ; R24 := 0x603636ad
176 [-]: LOADK     R25 K40      ; R25 := "/Lotus/Language/Multiplayer/SocialOverlay_CrossplaySquadFailToJoinCrossPlatformRelay"
177 [-]: NEWTABLE  R26 0 1      ; R26 := {}
178 [-]: GETGLOBAL R27 K37      ; R27 := 0x603636ad
179 [-]: MOVE      R28 R22      ; R28 := R22
180 [-]: NEWTABLE  R29 0 0      ; R29 := {}
181 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
182 [-]: SETTABLE  R26 K39 R27  ; R26["LOCATION"] := R27
183 [-]: CALL      R24 3 0      ; R24,... := R24(R25,R26)
184 [-]: CALL      R23 0 1      ; R23(R24,...)
185 [-]: GETGLOBAL R23 K41      ; R23 := 0x9ba7909f
186 [-]: SELF      R23 R23 K42  ; R24 := R23; R23 := R23[0xbcfb64ab]
187 [-]: GETGLOBAL R25 K43      ; R25 := 0x0032441c
188 [-]: GETTABLE  R25 R25 K44  ; R25 := R25["UIMovie_SolarMap"]
189 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
190 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
191 [-]: MOVE      R25 R23      ; R25 := R23
192 [-]: CALL      R24 2 2      ; R24 := R24(R25)
193 [-]: TEST      R24 1        ; if R24 then PC := 203
194 [-]: JMP       203          ; PC := 203
195 [-]: SELF      R24 R23 K45  ; R25 := R23; R24 := R23[0xf56f3887]
196 [-]: LOADK     R26 K46      ; R26 := "TransitionOut"
197 [-]: NEWTABLE  R27 3 0      ; R27 := {}
198 [-]: LOADK     R28 K47      ; R28 := "true"
199 [-]: LOADK     R29 K48      ; R29 := "false"
200 [-]: LOADK     R30 K48      ; R30 := "false"
201 [-]: SETLIST   R27 3 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 3
202 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
203 [-]: RETURN    R0 1         ; return 
204 [-]: MOVE      R24 R0       ; R24 := R0
205 [-]: GETGLOBAL R25 K5       ; R25 := 0x7f5022cf
206 [-]: GETTABLE  R25 R25 K6   ; R25 := R25[0xa5c556b9]
207 [-]: MOVE      R26 R24      ; R26 := R24
208 [-]: GETUPVAL  R27 U3       ; R27 := U3
209 [-]: GETTABLE  R27 R27 K49  ; R27 := R27["TAG_SEPERATOR"]
210 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
211 [-]: TEST      R25 0        ; if not R25 then PC := 220
212 [-]: JMP       220          ; PC := 220
213 [-]: GETGLOBAL R26 K5       ; R26 := 0x7f5022cf
214 [-]: GETTABLE  R26 R26 K50  ; R26 := R26[0x1a94c9cc]
215 [-]: MOVE      R27 R24      ; R27 := R24
216 [-]: CONST     R28 1        ; R28 := 1.000000
217 [-]: SUB       R29 R25 K20  ; R29 := R25 - 1.000000
218 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
219 [-]: MOVE      R24 R26      ; R24 := R26
220 [-]: GETGLOBAL R26 K51      ; R26 := 0x0469f296
221 [-]: MOVE      R27 R24      ; R27 := R24
222 [-]: CALL      R26 2 2      ; R26 := R26(R27)
223 [-]: GETUPVAL  R27 U3       ; R27 := U3
224 [-]: GETTABLE  R27 R27 K52  ; R27 := R27[0x5e35d4d6]
225 [-]: CALL      R27 1 2      ; R27 := R27()
226 [-]: SELF      R28 R27 K53  ; R29 := R27; R28 := R27[0xc18bf6f0]
227 [-]: MOVE      R30 R26      ; R30 := R26
228 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
229 [-]: GETGLOBAL R29 K5       ; R29 := 0x7f5022cf
230 [-]: GETTABLE  R29 R29 K6   ; R29 := R29[0xa5c556b9]
231 [-]: MOVE      R30 R0       ; R30 := R0
232 [-]: GETUPVAL  R31 U3       ; R31 := U3
233 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["KEY_TAG"]
234 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
235 [-]: TEST      R29 0        ; if not R29 then PC := 246
236 [-]: JMP       246          ; PC := 246
237 [-]: GETGLOBAL R29 K55      ; R29 := 0xb009bbc6
238 [-]: MOVE      R30 R24      ; R30 := R24
239 [-]: CALL      R29 2 2      ; R29 := R29(R30)
240 [-]: SELF      R30 R29 K56  ; R31 := R29; R30 := R29[0xef893aec]
241 [-]: CALL      R30 2 2      ; R30 := R30(R31)
242 [-]: SELF      R30 R30 K57  ; R31 := R30; R30 := R30[0x8f89d633]
243 [-]: CALL      R30 2 2      ; R30 := R30(R31)
244 [-]: MOVE      R28 R30      ; R28 := R30
245 [-]: JMP       281          ; PC := 281
246 [-]: GETTABLE  R30 R28 K58  ; R30 := R28["levelOverride"]
247 [-]: TEST      R30 1        ; if R30 then PC := 281
248 [-]: JMP       281          ; PC := 281
249 [-]: LOADKB    R30 0 0      ; R30 := false
250 [-]: TEST      R30 0        ; if not R30 then PC := 281
251 [-]: JMP       281          ; PC := 281
252 [-]: NEWTABLE  R30 0 0      ; R30 := {}
253 [-]: GETUPVAL  R31 U3       ; R31 := U3
254 [-]: GETTABLE  R31 R31 K59  ; R31 := R31[0x2196d0b1]
255 [-]: MOVE      R32 R30      ; R32 := R30
256 [-]: LOADNIL   R33 R33      ; R33 := nil
257 [-]: GETGLOBAL R34 K1       ; R34 := 0xbe190284
258 [-]: SELF      R34 R34 K60  ; R35 := R34; R34 := R34[0xa1c390fe]
259 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
260 [-]: CALL      R31 0 1      ; R31(R32,...)
261 [-]: CONST     R31 1        ; R31 := 1.000000
262 [-]: LEN       R32 R30      ; R32 := # R30
263 [-]: CONST     R33 1        ; R33 := 1.000000
264 [-]: FORPREP   R31 280      ; R31 -= R33; PC := 280
265 [-]: GETGLOBAL R35 K61      ; R35 := 0xce225efa
266 [-]: CONST     R36 0        ; R36 := 0.000000
267 [-]: CALL      R35 2 1      ; R35(R36)
268 [-]: GETTABLE  R35 R30 R34  ; R35 := R30[R34]
269 [-]: GETTABLE  R36 R35 K62  ; R36 := R35["Type"]
270 [-]: SELF      R37 R36 K63  ; R38 := R36; R37 := R36[0xed4e0128]
271 [-]: CALL      R37 2 2      ; R37 := R37(R38)
272 [-]: EQ        0 R37 R24    ; if R37 ~= R24 then PC := 280
273 [-]: JMP       280          ; PC := 280
274 [-]: SELF      R37 R36 K56  ; R38 := R36; R37 := R36[0xef893aec]
275 [-]: CALL      R37 2 2      ; R37 := R37(R38)
276 [-]: SELF      R37 R37 K57  ; R38 := R37; R37 := R37[0x8f89d633]
277 [-]: CALL      R37 2 2      ; R37 := R37(R38)
278 [-]: MOVE      R28 R37      ; R28 := R37
279 [-]: JMP       281          ; PC := 281
280 [-]: FORLOOP   R31 265      ; R31 += R33; if R31 <= R32 then begin PC := 265; R34 := R31 end
281 [-]: GETUPVAL  R37 U3       ; R37 := U3
282 [-]: GETTABLE  R37 R37 K64  ; R37 := R37[0xb73d420f]
283 [-]: CALL      R37 1 2      ; R37 := R37()
284 [-]: GETUPVAL  R38 U3       ; R38 := U3
285 [-]: GETTABLE  R38 R38 K65  ; R38 := R38["UI_MODE_IN_SPACE_HUB"]
286 [-]: EQ        0 R37 R38    ; if R37 ~= R38 then PC := 305
287 [-]: JMP       305          ; PC := 305
288 [-]: GETGLOBAL R38 K1       ; R38 := 0xbe190284
289 [-]: SELF      R38 R38 K56  ; R39 := R38; R38 := R38[0xef893aec]
290 [-]: CALL      R38 2 2      ; R38 := R38(R39)
291 [-]: GETTABLE  R39 R38 K66  ; R39 := R38["location"]
292 [-]: EQ        0 R39 R26    ; if R39 ~= R26 then PC := 305
293 [-]: JMP       305          ; PC := 305
294 [-]: TEST      R1 1         ; if R1 then PC := 300
295 [-]: JMP       300          ; PC := 300
296 [-]: GETGLOBAL R39 K25      ; R39 := 0x3d106989
297 [-]: LOADK     R40 K67      ; R40 := "Received message to join a hub-squad while already in a hub. Staying put and hoping everyone's in the same location/instance."
298 [-]: CALL      R39 2 1      ; R39(R40)
299 [-]: RETURN    R0 1         ; return 
300 [-]: GETGLOBAL R39 K9       ; R39 := 0xe7f2b02f
301 [-]: SELF      R39 R39 K29  ; R40 := R39; R39 := R39[0x3b62d69a]
302 [-]: MOVE      R41 R0       ; R41 := R0
303 [-]: LOADKB    R42 1 0      ; R42 := true
304 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
305 [-]: EQ        0 R24 K68    ; if R24 ~= "DojoHUB" then PC := 409
306 [-]: JMP       409          ; PC := 409
307 [-]: GETGLOBAL R39 K2       ; R39 := 0x76ea806b
308 [-]: SELF      R39 R39 K3   ; R40 := R39; R39 := R39[0x3f3ae64c]
309 [-]: CONST     R41 0        ; R41 := 0.000000
310 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
311 [-]: SELF      R40 R39 K69  ; R41 := R39; R40 := R39[0x300348b9]
312 [-]: CALL      R40 2 2      ; R40 := R40(R41)
313 [-]: TEST      R40 1        ; if R40 then PC := 319
314 [-]: JMP       319          ; PC := 319
315 [-]: GETGLOBAL R40 K25      ; R40 := 0x3d106989
316 [-]: LOADK     R41 K70      ; R41 := "UGC restrictions in joining Dojo"
317 [-]: CALL      R40 2 1      ; R40(R41)
318 [-]: RETURN    R0 1         ; return 
319 [-]: GETGLOBAL R40 K5       ; R40 := 0x7f5022cf
320 [-]: GETTABLE  R40 R40 K6   ; R40 := R40[0xa5c556b9]
321 [-]: MOVE      R41 R0       ; R41 := R0
322 [-]: GETUPVAL  R42 U3       ; R42 := U3
323 [-]: GETTABLE  R42 R42 K49  ; R42 := R42["TAG_SEPERATOR"]
324 [-]: ADD       R43 R25 K20  ; R43 := R25 + 1.000000
325 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
326 [-]: TEST      R40 0        ; if not R40 then PC := 346
327 [-]: JMP       346          ; PC := 346
328 [-]: GETGLOBAL R41 K71      ; R41 := _T
329 [-]: NEWTABLE  R42 0 1      ; R42 := {}
330 [-]: SETTABLE  R42 K73 K74  ; R42["Invite"] := true
331 [-]: SETTABLE  R41 K72 R42  ; R41["gDojoData"] := R42
332 [-]: GETGLOBAL R41 K71      ; R41 := _T
333 [-]: GETTABLE  R41 R41 K72  ; R41 := R41["gDojoData"]
334 [-]: GETGLOBAL R42 K5       ; R42 := 0x7f5022cf
335 [-]: GETTABLE  R42 R42 K50  ; R42 := R42[0x1a94c9cc]
336 [-]: MOVE      R43 R0       ; R43 := R0
337 [-]: ADD       R44 R40 K20  ; R44 := R40 + 1.000000
338 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
339 [-]: SETTABLE  R41 K75 R42  ; R41["GuildId"] := R42
340 [-]: GETGLOBAL R41 K71      ; R41 := _T
341 [-]: GETTABLE  R41 R41 K72  ; R41 := R41["gDojoData"]
342 [-]: GETGLOBAL R42 K9       ; R42 := 0xe7f2b02f
343 [-]: SELF      R42 R42 K77  ; R43 := R42; R42 := R42[0x10d2c544]
344 [-]: CALL      R42 2 2      ; R42 := R42(R43)
345 [-]: SETTABLE  R41 K76 R42  ; R41["ContentURL"] := R42
346 [-]: GETGLOBAL R41 K78      ; R41 := 0x3584dca2
347 [-]: CALL      R41 1 2      ; R41 := R41()
348 [-]: GETGLOBAL R42 K71      ; R42 := _T
349 [-]: GETTABLE  R42 R42 K72  ; R42 := R42["gDojoData"]
350 [-]: EQ        1 R42 K24    ; if R42 == nil then PC := 364
351 [-]: JMP       364          ; PC := 364
352 [-]: GETGLOBAL R42 K71      ; R42 := _T
353 [-]: GETTABLE  R42 R42 K72  ; R42 := R42["gDojoData"]
354 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["GuildId"]
355 [-]: EQ        1 R42 K24    ; if R42 == nil then PC := 364
356 [-]: JMP       364          ; PC := 364
357 [-]: SELF      R42 R41 K79  ; R43 := R41; R42 := R41[0x46e9d221]
358 [-]: GETGLOBAL R44 K71      ; R44 := _T
359 [-]: GETTABLE  R44 R44 K72  ; R44 := R44["gDojoData"]
360 [-]: GETTABLE  R44 R44 K75  ; R44 := R44["GuildId"]
361 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
362 [-]: TEST      R42 1        ; if R42 then PC := 376
363 [-]: JMP       376          ; PC := 376
364 [-]: GETGLOBAL R42 K25      ; R42 := 0x3d106989
365 [-]: LOADK     R43 K80      ; R43 := "Couldn't find GuildId in the hubName, bailing!"
366 [-]: CALL      R42 2 1      ; R42(R43)
367 [-]: GETGLOBAL R42 K9       ; R42 := 0xe7f2b02f
368 [-]: SELF      R42 R42 K29  ; R43 := R42; R42 := R42[0x3b62d69a]
369 [-]: LOADK     R44 K11      ; R44 := ""
370 [-]: CALL      R42 3 1      ; R42(R43,R44)
371 [-]: GETGLOBAL R42 K9       ; R42 := 0xe7f2b02f
372 [-]: SELF      R42 R42 K31  ; R43 := R42; R42 := R42[0x8229d239]
373 [-]: LOADK     R44 K81      ; R44 := "OnLeaveDojoSquadDone"
374 [-]: CALL      R42 3 1      ; R42(R43,R44)
375 [-]: RETURN    R0 1         ; return 
376 [-]: GETUPVAL  R42 U3       ; R42 := U3
377 [-]: GETTABLE  R42 R42 K82  ; R42 := R42["UI_MODE_IN_DOJO"]
378 [-]: EQ        0 R37 R42    ; if R37 ~= R42 then PC := 392
379 [-]: JMP       392          ; PC := 392
380 [-]: GETGLOBAL R42 K71      ; R42 := _T
381 [-]: GETTABLE  R42 R42 K72  ; R42 := R42["gDojoData"]
382 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["GuildId"]
383 [-]: GETGLOBAL R43 K1       ; R43 := 0xbe190284
384 [-]: SELF      R43 R43 K83  ; R44 := R43; R43 := R43[0x713ce380]
385 [-]: CALL      R43 2 2      ; R43 := R43(R44)
386 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 392
387 [-]: JMP       392          ; PC := 392
388 [-]: GETGLOBAL R42 K25      ; R42 := 0x3d106989
389 [-]: LOADK     R43 K84      ; R43 := "Received message to join a Dojo-squad while already in the same Dojo. Staying put and hoping everyone's in the same location/instance."
390 [-]: CALL      R42 2 1      ; R42(R43)
391 [-]: RETURN    R0 1         ; return 
392 [-]: GETGLOBAL R42 K0       ; R42 := 0x7b998233
393 [-]: GETGLOBAL R43 K71      ; R43 := _T
394 [-]: GETTABLE  R43 R43 K85  ; R43 := R43["SquadOverlay"]
395 [-]: CALL      R42 2 2      ; R42 := R42(R43)
396 [-]: TEST      R42 1        ; if R42 then PC := 465
397 [-]: JMP       465          ; PC := 465
398 [-]: GETGLOBAL R42 K71      ; R42 := _T
399 [-]: GETTABLE  R42 R42 K85  ; R42 := R42["SquadOverlay"]
400 [-]: SELF      R42 R42 K86  ; R43 := R42; R42 := R42[0xe4162eed]
401 [-]: LOADK     R44 K87      ; R44 := "InitiateDojoVisit"
402 [-]: GETGLOBAL R45 K71      ; R45 := _T
403 [-]: GETTABLE  R45 R45 K72  ; R45 := R45["gDojoData"]
404 [-]: GETTABLE  R45 R45 K75  ; R45 := R45["GuildId"]
405 [-]: LOADK     R46 K88      ; R46 := ",true"
406 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
407 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
408 [-]: JMP       465          ; PC := 465
409 [-]: GETUPVAL  R42 U4       ; R42 := U4
410 [-]: GETTABLE  R42 R42 K89  ; R42 := R42[0x05b69533]
411 [-]: GETGLOBAL R43 K51      ; R43 := 0x0469f296
412 [-]: MOVE      R44 R0       ; R44 := R0
413 [-]: CALL      R43 2 2      ; R43 := R43(R44)
414 [-]: MOVE      R44 R28      ; R44 := R28
415 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
416 [-]: GETGLOBAL R43 K0       ; R43 := 0x7b998233
417 [-]: MOVE      R44 R42      ; R44 := R42
418 [-]: CALL      R43 2 2      ; R43 := R43(R44)
419 [-]: TEST      R43 0        ; if not R43 then PC := 425
420 [-]: JMP       425          ; PC := 425
421 [-]: GETGLOBAL R43 K25      ; R43 := 0x3d106989
422 [-]: LOADK     R44 K90      ; R44 := "LevelArgs are null, cannot open level"
423 [-]: CALL      R43 2 1      ; R43(R44)
424 [-]: RETURN    R0 1         ; return 
425 [-]: SETTABLE  R42 K91 K92  ; R42["loadFromLobby"] := false
426 [-]: GETGLOBAL R43 K93      ; R43 := 0x89326c93
427 [-]: SELF      R43 R43 K94  ; R44 := R43; R43 := R43[0x18d05d30]
428 [-]: CALL      R43 2 2      ; R43 := R43(R44)
429 [-]: TEST      R43 1        ; if R43 then PC := 461
430 [-]: JMP       461          ; PC := 461
431 [-]: GETGLOBAL R43 K1       ; R43 := 0xbe190284
432 [-]: SELF      R43 R43 K95  ; R44 := R43; R43 := R43[0xf2deaf69]
433 [-]: GETGLOBAL R45 K96      ; R45 := gLotusAttractModeGameRulesType
434 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
435 [-]: TEST      R43 0        ; if not R43 then PC := 461
436 [-]: JMP       461          ; PC := 461
437 [-]: SETTABLE  R42 K97 K74  ; R42["loadToLobby"] := true
438 [-]: SETTABLE  R42 K98 K74  ; R42["isLobby"] := true
439 [-]: GETGLOBAL R43 K2       ; R43 := 0x76ea806b
440 [-]: SELF      R43 R43 K3   ; R44 := R43; R43 := R43[0x3f3ae64c]
441 [-]: CONST     R45 0        ; R45 := 0.000000
442 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
443 [-]: SELF      R44 R43 K99  ; R45 := R43; R44 := R43[0x80563238]
444 [-]: CALL      R44 2 2      ; R44 := R44(R45)
445 [-]: SELF      R45 R44 K100 ; R46 := R44; R45 := R44[0xe4b15c4a]
446 [-]: MOVE      R47 R42      ; R47 := R42
447 [-]: MOVE      R48 R0       ; R48 := R0
448 [-]: GETUPVAL  R49 U3       ; R49 := U3
449 [-]: GETTABLE  R49 R49 K101 ; R49 := R49["HUB_TAG"]
450 [-]: CONCAT    R48 R48 R49  ; R48 := R48 .. R49
451 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
452 [-]: GETGLOBAL R45 K9       ; R45 := 0xe7f2b02f
453 [-]: SELF      R45 R45 K29  ; R46 := R45; R45 := R45[0x3b62d69a]
454 [-]: MOVE      R47 R0       ; R47 := R0
455 [-]: CALL      R45 3 1      ; R45(R46,R47)
456 [-]: GETGLOBAL R45 K21      ; R45 := 0x34291f5c
457 [-]: GETTABLE  R45 R45 K102 ; R45 := R45[0x8ee24660]
458 [-]: LOADKB    R46 1 0      ; R46 := true
459 [-]: CALL      R45 2 1      ; R45(R46)
460 [-]: RETURN    R0 1         ; return 
461 [-]: GETGLOBAL R45 K21      ; R45 := 0x34291f5c
462 [-]: GETTABLE  R45 R45 K103 ; R45 := R45[0x4e0a1dfc]
463 [-]: MOVE      R46 R42      ; R46 := R42
464 [-]: CALL      R45 2 1      ; R45(R46)
465 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 4678
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: NEWTABLE  R0 14 0      ; R0 := {}
  2 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  3 [-]: SETTABLE  R1 K0 K1     ; R1["Collection"] := "weekly.accounts.ZephyrScore"
  4 [-]: GETGLOBAL R2 K3        ; R2 := 0x603636ad
  5 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Language/Menu/Profile_ZephyrLeaderboard"
  6 [-]: LOADNIL   R4 R4        ; R4 := nil
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: SETTABLE  R1 K2 R2     ; R1["Title"] := R2
  9 [-]: SETTABLE  R1 K5 K6     ; R1["Weekly"] := true
 10 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 11 [-]: SETTABLE  R2 K0 K7     ; R2["Collection"] := "weekly.accounts.SentinelGameScore"
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x603636ad
 13 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/Profile_SentinelGameLeaderboard"
 14 [-]: LOADNIL   R5 R5        ; R5 := nil
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: SETTABLE  R2 K2 R3     ; R2["Title"] := R3
 17 [-]: SETTABLE  R2 K5 K6     ; R2["Weekly"] := true
 18 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 19 [-]: SETTABLE  R3 K0 K9     ; R3["Collection"] := "weekly.accounts.DojoObstacleScore"
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x603636ad
 21 [-]: LOADK     R5 K10       ; R5 := "/Lotus/Language/Menu/Profile_ObstacleScoreLeaderboard"
 22 [-]: LOADNIL   R6 R6        ; R6 := nil
 23 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 24 [-]: SETTABLE  R3 K2 R4     ; R3["Title"] := R4
 25 [-]: SETTABLE  R3 K5 K6     ; R3["Weekly"] := true
 26 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 27 [-]: SETTABLE  R4 K0 K11    ; R4["Collection"] := "weekly.speedball.accounts.SB_WINS"
 28 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
 29 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x42b04007]
 30 [-]: LOADK     R7 K14       ; R7 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 31 [-]: LOADKB    R8 1 0       ; R8 := true
 32 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 33 [-]: GETGLOBAL R10 K3       ; R10 := 0x603636ad
 34 [-]: LOADK     R11 K16      ; R11 := "/Lotus/Language/Menu/Profile_SpeedballWins"
 35 [-]: LOADNIL   R12 R12      ; R12 := nil
 36 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 37 [-]: SETTABLE  R9 K15 R10   ; R9["TYPE"] := R10
 38 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 39 [-]: SETTABLE  R4 K2 R5     ; R4["Title"] := R5
 40 [-]: SETTABLE  R4 K5 K6     ; R4["Weekly"] := true
 41 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 42 [-]: SETTABLE  R5 K0 K17    ; R5["Collection"] := "weekly.speedball.accounts.SB_POINTS"
 43 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
 44 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x42b04007]
 45 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 46 [-]: LOADKB    R9 1 0       ; R9 := true
 47 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 48 [-]: GETGLOBAL R11 K3       ; R11 := 0x603636ad
 49 [-]: LOADK     R12 K18      ; R12 := "/Lotus/Language/Menu/Profile_SpeedballPoints"
 50 [-]: LOADNIL   R13 R13      ; R13 := nil
 51 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 52 [-]: SETTABLE  R10 K15 R11  ; R10["TYPE"] := R11
 53 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 54 [-]: SETTABLE  R5 K2 R6     ; R5["Title"] := R6
 55 [-]: SETTABLE  R5 K5 K6     ; R5["Weekly"] := true
 56 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 57 [-]: SETTABLE  R6 K0 K19    ; R6["Collection"] := "weekly.speedball.accounts.SB_GOALS"
 58 [-]: GETGLOBAL R7 K12       ; R7 := 0xae91e43b
 59 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0x42b04007]
 60 [-]: LOADK     R9 K14       ; R9 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 61 [-]: LOADKB    R10 1 0      ; R10 := true
 62 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 63 [-]: GETGLOBAL R12 K3       ; R12 := 0x603636ad
 64 [-]: LOADK     R13 K20      ; R13 := "/Lotus/Language/Menu/Profile_SpeedballGoals"
 65 [-]: LOADNIL   R14 R14      ; R14 := nil
 66 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 67 [-]: SETTABLE  R11 K15 R12  ; R11["TYPE"] := R12
 68 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 69 [-]: SETTABLE  R6 K2 R7     ; R6["Title"] := R7
 70 [-]: SETTABLE  R6 K5 K6     ; R6["Weekly"] := true
 71 [-]: NEWTABLE  R7 0 3       ; R7 := {}
 72 [-]: SETTABLE  R7 K0 K21    ; R7["Collection"] := "weekly.speedball.accounts.SB_ASSISTS"
 73 [-]: GETGLOBAL R8 K12       ; R8 := 0xae91e43b
 74 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x42b04007]
 75 [-]: LOADK     R10 K14      ; R10 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 76 [-]: LOADKB    R11 1 0      ; R11 := true
 77 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 78 [-]: GETGLOBAL R13 K3       ; R13 := 0x603636ad
 79 [-]: LOADK     R14 K22      ; R14 := "/Lotus/Language/Menu/Profile_SpeedballAssists"
 80 [-]: LOADNIL   R15 R15      ; R15 := nil
 81 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 82 [-]: SETTABLE  R12 K15 R13  ; R12["TYPE"] := R13
 83 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 84 [-]: SETTABLE  R7 K2 R8     ; R7["Title"] := R8
 85 [-]: SETTABLE  R7 K5 K6     ; R7["Weekly"] := true
 86 [-]: NEWTABLE  R8 0 3       ; R8 := {}
 87 [-]: SETTABLE  R8 K0 K23    ; R8["Collection"] := "weekly.speedball.accounts.SB_REBOUNDS"
 88 [-]: GETGLOBAL R9 K12       ; R9 := 0xae91e43b
 89 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0x42b04007]
 90 [-]: LOADK     R11 K14      ; R11 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 91 [-]: LOADKB    R12 1 0      ; R12 := true
 92 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 93 [-]: GETGLOBAL R14 K3       ; R14 := 0x603636ad
 94 [-]: LOADK     R15 K24      ; R15 := "/Lotus/Language/Menu/Profile_SpeedballRebounds"
 95 [-]: LOADNIL   R16 R16      ; R16 := nil
 96 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 97 [-]: SETTABLE  R13 K15 R14  ; R13["TYPE"] := R14
 98 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 99 [-]: SETTABLE  R8 K2 R9     ; R8["Title"] := R9
100 [-]: SETTABLE  R8 K5 K6     ; R8["Weekly"] := true
101 [-]: NEWTABLE  R9 0 3       ; R9 := {}
102 [-]: SETTABLE  R9 K0 K25    ; R9["Collection"] := "weekly.speedball.accounts.SB_SAVES"
103 [-]: GETGLOBAL R10 K12      ; R10 := 0xae91e43b
104 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0x42b04007]
105 [-]: LOADK     R12 K14      ; R12 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
106 [-]: LOADKB    R13 1 0      ; R13 := true
107 [-]: NEWTABLE  R14 0 1      ; R14 := {}
108 [-]: GETGLOBAL R15 K3       ; R15 := 0x603636ad
109 [-]: LOADK     R16 K26      ; R16 := "/Lotus/Language/Menu/Profile_SpeedballSaves"
110 [-]: LOADNIL   R17 R17      ; R17 := nil
111 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
112 [-]: SETTABLE  R14 K15 R15  ; R14["TYPE"] := R15
113 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
114 [-]: SETTABLE  R9 K2 R10    ; R9["Title"] := R10
115 [-]: SETTABLE  R9 K5 K6     ; R9["Weekly"] := true
116 [-]: NEWTABLE  R10 0 3      ; R10 := {}
117 [-]: SETTABLE  R10 K0 K27   ; R10["Collection"] := "weekly.speedball.accounts.SB_PASSES"
118 [-]: GETGLOBAL R11 K12      ; R11 := 0xae91e43b
119 [-]: SELF      R11 R11 K13  ; R12 := R11; R11 := R11[0x42b04007]
120 [-]: LOADK     R13 K14      ; R13 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
121 [-]: LOADKB    R14 1 0      ; R14 := true
122 [-]: NEWTABLE  R15 0 1      ; R15 := {}
123 [-]: GETGLOBAL R16 K3       ; R16 := 0x603636ad
124 [-]: LOADK     R17 K28      ; R17 := "/Lotus/Language/Menu/Profile_SpeedballPasses"
125 [-]: LOADNIL   R18 R18      ; R18 := nil
126 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
127 [-]: SETTABLE  R15 K15 R16  ; R15["TYPE"] := R16
128 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
129 [-]: SETTABLE  R10 K2 R11   ; R10["Title"] := R11
130 [-]: SETTABLE  R10 K5 K6    ; R10["Weekly"] := true
131 [-]: NEWTABLE  R11 0 3      ; R11 := {}
132 [-]: SETTABLE  R11 K0 K29   ; R11["Collection"] := "weekly.speedball.accounts.SB_CATCHES"
133 [-]: GETGLOBAL R12 K12      ; R12 := 0xae91e43b
134 [-]: SELF      R12 R12 K13  ; R13 := R12; R12 := R12[0x42b04007]
135 [-]: LOADK     R14 K14      ; R14 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
136 [-]: LOADKB    R15 1 0      ; R15 := true
137 [-]: NEWTABLE  R16 0 1      ; R16 := {}
138 [-]: GETGLOBAL R17 K3       ; R17 := 0x603636ad
139 [-]: LOADK     R18 K30      ; R18 := "/Lotus/Language/Menu/Profile_SpeedballCatches"
140 [-]: LOADNIL   R19 R19      ; R19 := nil
141 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
142 [-]: SETTABLE  R16 K15 R17  ; R16["TYPE"] := R17
143 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
144 [-]: SETTABLE  R11 K2 R12   ; R11["Title"] := R12
145 [-]: SETTABLE  R11 K5 K6    ; R11["Weekly"] := true
146 [-]: NEWTABLE  R12 0 3      ; R12 := {}
147 [-]: SETTABLE  R12 K0 K31   ; R12["Collection"] := "weekly.speedball.accounts.SB_INTERCEPTIONS"
148 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
149 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13[0x42b04007]
150 [-]: LOADK     R15 K14      ; R15 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
151 [-]: LOADKB    R16 1 0      ; R16 := true
152 [-]: NEWTABLE  R17 0 1      ; R17 := {}
153 [-]: GETGLOBAL R18 K3       ; R18 := 0x603636ad
154 [-]: LOADK     R19 K32      ; R19 := "/Lotus/Language/Menu/Profile_SpeedballInterceptions"
155 [-]: LOADNIL   R20 R20      ; R20 := nil
156 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
157 [-]: SETTABLE  R17 K15 R18  ; R17["TYPE"] := R18
158 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
159 [-]: SETTABLE  R12 K2 R13   ; R12["Title"] := R13
160 [-]: SETTABLE  R12 K5 K6    ; R12["Weekly"] := true
161 [-]: NEWTABLE  R13 0 3      ; R13 := {}
162 [-]: SETTABLE  R13 K0 K33   ; R13["Collection"] := "weekly.speedball.accounts.SB_CHECKS"
163 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
164 [-]: SELF      R14 R14 K13  ; R15 := R14; R14 := R14[0x42b04007]
165 [-]: LOADK     R16 K14      ; R16 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
166 [-]: LOADKB    R17 1 0      ; R17 := true
167 [-]: NEWTABLE  R18 0 1      ; R18 := {}
168 [-]: GETGLOBAL R19 K3       ; R19 := 0x603636ad
169 [-]: LOADK     R20 K34      ; R20 := "/Lotus/Language/Menu/Profile_SpeedballChecks"
170 [-]: LOADNIL   R21 R21      ; R21 := nil
171 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
172 [-]: SETTABLE  R18 K15 R19  ; R18["TYPE"] := R19
173 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
174 [-]: SETTABLE  R13 K2 R14   ; R13["Title"] := R14
175 [-]: SETTABLE  R13 K5 K6    ; R13["Weekly"] := true
176 [-]: NEWTABLE  R14 0 3      ; R14 := {}
177 [-]: SETTABLE  R14 K0 K35   ; R14["Collection"] := "weekly.speedball.accounts.SB_STEALS"
178 [-]: GETGLOBAL R15 K12      ; R15 := 0xae91e43b
179 [-]: SELF      R15 R15 K13  ; R16 := R15; R15 := R15[0x42b04007]
180 [-]: LOADK     R17 K14      ; R17 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
181 [-]: LOADKB    R18 1 0      ; R18 := true
182 [-]: NEWTABLE  R19 0 1      ; R19 := {}
183 [-]: GETGLOBAL R20 K3       ; R20 := 0x603636ad
184 [-]: LOADK     R21 K36      ; R21 := "/Lotus/Language/Menu/Profile_SpeedballSteals"
185 [-]: LOADNIL   R22 R22      ; R22 := nil
186 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
187 [-]: SETTABLE  R19 K15 R20  ; R19["TYPE"] := R20
188 [-]: CALL      R15 5 2      ; R15 := R15(R16,R17,R18,R19)
189 [-]: SETTABLE  R14 K2 R15   ; R14["Title"] := R15
190 [-]: SETTABLE  R14 K5 K6    ; R14["Weekly"] := true
191 [-]: SETLIST   R0 14 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 14
192 [-]: GETUPVAL  R1 U0        ; R1 := U0
193 [-]: GETTABLE  R1 R1 K37    ; R1 := R1[0x5e35d4d6]
194 [-]: CALL      R1 1 2       ; R1 := R1()
195 [-]: SELF      R2 R1 K38    ; R3 := R1; R2 := R1[0xd13b47be]
196 [-]: CALL      R2 2 2       ; R2 := R2(R3)
197 [-]: SELF      R3 R1 K39    ; R4 := R1; R3 := R1[0xc1dee03f]
198 [-]: CALL      R3 2 2       ; R3 := R3(R4)
199 [-]: CONST     R4 1         ; R4 := 1.000000
200 [-]: LEN       R5 R3        ; R5 := # R3
201 [-]: CONST     R6 1         ; R6 := 1.000000
202 [-]: FORPREP   R4 289       ; R4 -= R6; PC := 289
203 [-]: GETGLOBAL R8 K40       ; R8 := 0xce225efa
204 [-]: CONST     R9 0         ; R9 := 0.000000
205 [-]: CALL      R8 2 1       ; R8(R9)
206 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
207 [-]: CONST     R9 1         ; R9 := 1.000000
208 [-]: LEN       R10 R2       ; R10 := # R2
209 [-]: CONST     R11 1        ; R11 := 1.000000
210 [-]: FORPREP   R9 288       ; R9 -= R11; PC := 288
211 [-]: GETTABLE  R13 R2 R12   ; R13 := R2[R12]
212 [-]: GETTABLE  R14 R13 K41  ; R14 := R13["region"]
213 [-]: ADD       R14 R14 K42  ; R14 := R14 + 1.000000
214 [-]: EQ        0 R14 R7     ; if R14 ~= R7 then PC := 288
215 [-]: JMP       288          ; PC := 288
216 [-]: GETTABLE  R14 R13 K43  ; R14 := R13["name"]
217 [-]: SELF      R14 R14 K44  ; R15 := R14; R14 := R14[0x56c01834]
218 [-]: CALL      R14 2 2      ; R14 := R14(R15)
219 [-]: TEST      R14 0        ; if not R14 then PC := 288
220 [-]: JMP       288          ; PC := 288
221 [-]: GETTABLE  R14 R13 K45  ; R14 := R13["nodeType"]
222 [-]: EQ        1 R14 K47    ; if R14 == 0.000000 then PC := 227
223 [-]: JMP       227          ; PC := 227
224 [-]: GETTABLE  R14 R13 K45  ; R14 := R13["nodeType"]
225 [-]: EQ        0 R14 K48    ; if R14 ~= 4.000000 then PC := 288
226 [-]: JMP       288          ; PC := 288
227 [-]: SELF      R14 R1 K49   ; R15 := R1; R14 := R1[0xc18bf6f0]
228 [-]: GETTABLE  R16 R13 K43  ; R16 := R13["name"]
229 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
230 [-]: GETTABLE  R15 R14 K50  ; R15 := R14["missionType"]
231 [-]: EQ        0 R15 K51    ; if R15 ~= 8.000000 then PC := 236
232 [-]: JMP       236          ; PC := 236
233 [-]: GETTABLE  R16 R14 K52  ; R16 := R14["maxWaveNum"]
234 [-]: EQ        1 R16 K47    ; if R16 == 0.000000 then PC := 254
235 [-]: JMP       254          ; PC := 254
236 [-]: EQ        1 R15 K53    ; if R15 == 2.000000 then PC := 254
237 [-]: JMP       254          ; PC := 254
238 [-]: EQ        1 R15 K54    ; if R15 == 13.000000 then PC := 254
239 [-]: JMP       254          ; PC := 254
240 [-]: EQ        1 R15 K55    ; if R15 == 17.000000 then PC := 254
241 [-]: JMP       254          ; PC := 254
242 [-]: EQ        1 R15 K56    ; if R15 == 27.000000 then PC := 254
243 [-]: JMP       254          ; PC := 254
244 [-]: EQ        1 R15 K57    ; if R15 == 30.000000 then PC := 254
245 [-]: JMP       254          ; PC := 254
246 [-]: EQ        1 R15 K58    ; if R15 == 32.000000 then PC := 254
247 [-]: JMP       254          ; PC := 254
248 [-]: EQ        1 R15 K59    ; if R15 == 33.000000 then PC := 254
249 [-]: JMP       254          ; PC := 254
250 [-]: EQ        1 R15 K60    ; if R15 == 34.000000 then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: EQ        0 R15 K61    ; if R15 ~= 35.000000 then PC := 288
253 [-]: JMP       288          ; PC := 288
254 [-]: GETGLOBAL R16 K12      ; R16 := 0xae91e43b
255 [-]: SELF      R16 R16 K13  ; R17 := R16; R16 := R16[0x42b04007]
256 [-]: GETTABLE  R18 R8 K43   ; R18 := R8["name"]
257 [-]: LOADKB    R19 1 0      ; R19 := true
258 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
259 [-]: GETGLOBAL R17 K12      ; R17 := 0xae91e43b
260 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17[0x42b04007]
261 [-]: GETTABLE  R19 R13 K62  ; R19 := R13["locTag"]
262 [-]: SELF      R19 R19 K63  ; R20 := R19; R19 := R19[0x6d604ba7]
263 [-]: CALL      R19 2 2      ; R19 := R19(R20)
264 [-]: LOADKB    R20 1 0      ; R20 := true
265 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
266 [-]: GETGLOBAL R18 K12      ; R18 := 0xae91e43b
267 [-]: SELF      R18 R18 K13  ; R19 := R18; R18 := R18[0x42b04007]
268 [-]: LOADK     R20 K64      ; R20 := "/Lotus/Language/Menu/RegionNode"
269 [-]: LOADKB    R21 1 0      ; R21 := true
270 [-]: NEWTABLE  R22 0 2      ; R22 := {}
271 [-]: SETTABLE  R22 K65 R16  ; R22["REGION"] := R16
272 [-]: SETTABLE  R22 K66 R17  ; R22["NODE"] := R17
273 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
274 [-]: NEWTABLE  R19 0 3      ; R19 := {}
275 [-]: LOADK     R20 K67      ; R20 := "weekly.accounts."
276 [-]: GETTABLE  R21 R13 K43  ; R21 := R13["name"]
277 [-]: SELF      R21 R21 K63  ; R22 := R21; R21 := R21[0x6d604ba7]
278 [-]: CALL      R21 2 2      ; R21 := R21(R22)
279 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
280 [-]: SETTABLE  R19 K0 R20   ; R19["Collection"] := R20
281 [-]: SETTABLE  R19 K2 R18   ; R19["Title"] := R18
282 [-]: SETTABLE  R19 K5 K6    ; R19["Weekly"] := true
283 [-]: GETGLOBAL R20 K68      ; R20 := 0x33bdd652
284 [-]: GETTABLE  R20 R20 K69  ; R20 := R20[0x23d5322f]
285 [-]: MOVE      R21 R0       ; R21 := R0
286 [-]: MOVE      R22 R19      ; R22 := R19
287 [-]: CALL      R20 3 1      ; R20(R21,R22)
288 [-]: FORLOOP   R9 211       ; R9 += R11; if R9 <= R10 then begin PC := 211; R12 := R9 end
289 [-]: FORLOOP   R4 203       ; R4 += R6; if R4 <= R5 then begin PC := 203; R7 := R4 end
290 [-]: RETURN    R0 2         ; return R0
291 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 4737
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xcb79539e
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 69
  5 [-]: JMP       69           ; PC := 69
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ShowNotification"]
  8 [-]: EQ        1 R0 K4      ; if R0 == nil then PC := 69
  9 [-]: JMP       69           ; PC := 69
 10 [-]: GETGLOBAL R0 K1        ; R0 := 0xcb79539e
 11 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x3689bfc7]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 69
 14 [-]: JMP       69           ; PC := 69
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: CALL      R0 1 2       ; R0 := R0()
 17 [-]: GETGLOBAL R1 K1        ; R1 := 0xcb79539e
 18 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x366febf1]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: CONST     R2 1         ; R2 := 1.000000
 21 [-]: LEN       R3 R1        ; R3 := # R1
 22 [-]: CONST     R4 1         ; R4 := 1.000000
 23 [-]: FORPREP   R2 65        ; R2 -= R4; PC := 65
 24 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 25 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["leaderboard"]
 26 [-]: GETTABLE  R7 R1 R5     ; R7 := R1[R5]
 27 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["rank"]
 28 [-]: CONST     R8 1         ; R8 := 1.000000
 29 [-]: LEN       R9 R0        ; R9 := # R0
 30 [-]: CONST     R10 1        ; R10 := 1.000000
 31 [-]: FORPREP   R8 64        ; R8 -= R10; PC := 64
 32 [-]: GETTABLE  R12 R0 R11   ; R12 := R0[R11]
 33 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Collection"]
 34 [-]: EQ        0 R12 R6     ; if R12 ~= R6 then PC := 64
 35 [-]: JMP       64           ; PC := 64
 36 [-]: LOADK     R12 K10      ; R12 := "/Lotus/Language/Menu/LeaderboardPlacement"
 37 [-]: GETTABLE  R13 R0 R11   ; R13 := R0[R11]
 38 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["Weekly"]
 39 [-]: TEST      R13 0        ; if not R13 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADK     R12 K12      ; R12 := "/Lotus/Language/Menu/LeaderboardPlacementWeekly"
 42 [-]: GETGLOBAL R13 K13      ; R13 := 0xae91e43b
 43 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13[0x42b04007]
 44 [-]: MOVE      R15 R12      ; R15 := R12
 45 [-]: LOADKB    R16 1 0      ; R16 := true
 46 [-]: NEWTABLE  R17 0 2      ; R17 := {}
 47 [-]: SETTABLE  R17 K15 R7   ; R17["RANK"] := R7
 48 [-]: GETTABLE  R18 R0 R11   ; R18 := R0[R11]
 49 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["Title"]
 50 [-]: SETTABLE  R17 K16 R18  ; R17["LEADERBOARD"] := R18
 51 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
 52 [-]: GETGLOBAL R14 K2       ; R14 := _T
 53 [-]: GETTABLE  R14 R14 K18  ; R14 := R14[0x7dce37bc]
 54 [-]: MOVE      R15 R13      ; R15 := R13
 55 [-]: LOADK     R16 K19      ; R16 := "Leaderboard"
 56 [-]: CALL      R14 3 1      ; R14(R15,R16)
 57 [-]: GETGLOBAL R14 K20      ; R14 := 0x3d106989
 58 [-]: LOADK     R15 K21      ; R15 := "LB Placement: \""
 59 [-]: MOVE      R16 R13      ; R16 := R13
 60 [-]: LOADK     R17 K22      ; R17 := "\""
 61 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
 62 [-]: CALL      R14 2 1      ; R14(R15)
 63 [-]: JMP       65           ; PC := 65
 64 [-]: FORLOOP   R8 32        ; R8 += R10; if R8 <= R9 then begin PC := 32; R11 := R8 end
 65 [-]: FORLOOP   R2 24        ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
 66 [-]: GETGLOBAL R14 K1       ; R14 := 0xcb79539e
 67 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14[0x72876f0a]
 68 [-]: CALL      R14 2 1      ; R14(R15)
 69 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 4761
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xff9d1292]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: LOADKB    R1 1 0       ; R1 := true
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  6 [-]: GETGLOBAL R3 K2        ; R3 := mStyleBackgroundMovie
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 28
  9 [-]: JMP       28           ; PC := 28
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETGLOBAL R2 K2        ; R2 := mStyleBackgroundMovie
 16 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x492f9da2]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x7ed0a956
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: LOADKB    R1 0 0       ; R1 := false
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R2 K2        ; R2 := mStyleBackgroundMovie
 26 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x32302b4a]
 27 [-]: CALL      R2 2 1       ; R2(R3)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 31 [-]: MOVE      R3 R0        ; R3 := R0
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 42
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETGLOBAL R2 K6        ; R2 := _T
 36 [-]: SETTABLE  R2 K7 K8     ; R2["BackgroundVisible"] := nil
 37 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 38 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x1fd6abd0]
 39 [-]: MOVE      R4 R0        ; R4 := R0
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: SETGLOBAL R2 K2        ; mStyleBackgroundMovie := R2
 42 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 4779
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xced66ef6]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 186
  8 [-]: JMP       186          ; PC := 186
  9 [-]: CLOSURE   R1 0         ; R1 := closure(Function #123.1)
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CONST     R4 0         ; R4 := 0.000000
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SETTABLE  R2 K3 R3     ; R2[0x056bfe8b] := R3
 16 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CONST     R4 1         ; R4 := 1.000000
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: SETTABLE  R2 K5 R3     ; R2["UISound_Close"] := R3
 21 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CONST     R4 2         ; R4 := 2.000000
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: SETTABLE  R2 K6 R3     ; R2["UISound_HudAchievement"] := R3
 26 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CONST     R4 3         ; R4 := 3.000000
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: SETTABLE  R2 K7 R3     ; R2[0x63a9c319] := R3
 31 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CONST     R4 4         ; R4 := 4.000000
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SETTABLE  R2 K8 R3     ; R2["UISound_Unfocus"] := R3
 36 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: CONST     R4 5         ; R4 := 5.000000
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: SETTABLE  R2 K9 R3     ; R2["UISound_Select"] := R3
 41 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 42 [-]: MOVE      R3 R1        ; R3 := R1
 43 [-]: CONST     R4 6         ; R4 := 6.000000
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: SETTABLE  R2 K10 R3    ; R2["UISound_Scroll"] := R3
 46 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 47 [-]: MOVE      R3 R1        ; R3 := R1
 48 [-]: CONST     R4 7         ; R4 := 7.000000
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: SETTABLE  R2 K11 R3    ; R2["UISound_Purchase"] := R3
 51 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 52 [-]: MOVE      R3 R1        ; R3 := R1
 53 [-]: CONST     R4 8         ; R4 := 8.000000
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: SETTABLE  R2 K12 R3    ; R2["UISound_Error"] := R3
 56 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 57 [-]: MOVE      R3 R1        ; R3 := R1
 58 [-]: CONST     R4 9         ; R4 := 9.000000
 59 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 60 [-]: SETTABLE  R2 K13 R3    ; R2[0x37ab0747] := R3
 61 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 62 [-]: MOVE      R3 R1        ; R3 := R1
 63 [-]: CONST     R4 10        ; R4 := 10.000000
 64 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 65 [-]: SETTABLE  R2 K14 R3    ; R2["UISound_SearchType"] := R3
 66 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 67 [-]: MOVE      R3 R1        ; R3 := R1
 68 [-]: CONST     R4 11        ; R4 := 11.000000
 69 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 70 [-]: SETTABLE  R2 K15 R3    ; R2[0x5f64dde3] := R3
 71 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 72 [-]: MOVE      R3 R1        ; R3 := R1
 73 [-]: CONST     R4 12        ; R4 := 12.000000
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: SETTABLE  R2 K16 R3    ; R2["UISound_GridOpenTwo"] := R3
 76 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 77 [-]: MOVE      R3 R1        ; R3 := R1
 78 [-]: CONST     R4 13        ; R4 := 13.000000
 79 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 80 [-]: SETTABLE  R2 K17 R3    ; R2["UISound_GridRow"] := R3
 81 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 82 [-]: MOVE      R3 R1        ; R3 := R1
 83 [-]: CONST     R4 14        ; R4 := 14.000000
 84 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 85 [-]: SETTABLE  R2 K18 R3    ; R2[0xcab30b25] := R3
 86 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 87 [-]: MOVE      R3 R1        ; R3 := R1
 88 [-]: CONST     R4 15        ; R4 := 15.000000
 89 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 90 [-]: SETTABLE  R2 K19 R3    ; R2[0xca33ff41] := R3
 91 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 92 [-]: MOVE      R3 R1        ; R3 := R1
 93 [-]: CONST     R4 16        ; R4 := 16.000000
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: SETTABLE  R2 K20 R3    ; R2["UISound_Countdown"] := R3
 96 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 97 [-]: MOVE      R3 R1        ; R3 := R1
 98 [-]: CONST     R4 17        ; R4 := 17.000000
 99 [-]: CALL      R3 2 2       ; R3 := R3(R4)
100 [-]: SETTABLE  R2 K21 R3    ; R2["UISound_ItemTip"] := R3
101 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
102 [-]: MOVE      R3 R1        ; R3 := R1
103 [-]: CONST     R4 18        ; R4 := 18.000000
104 [-]: CALL      R3 2 2       ; R3 := R3(R4)
105 [-]: SETTABLE  R2 K22 R3    ; R2[0x659d451f] := R3
106 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
107 [-]: MOVE      R3 R1        ; R3 := R1
108 [-]: CONST     R4 19        ; R4 := 19.000000
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: SETTABLE  R2 K23 R3    ; R2[0xbd368681] := R3
111 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
112 [-]: MOVE      R3 R1        ; R3 := R1
113 [-]: CONST     R4 20        ; R4 := 20.000000
114 [-]: CALL      R3 2 2       ; R3 := R3(R4)
115 [-]: SETTABLE  R2 K24 R3    ; R2[0x0cde6e4f] := R3
116 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
117 [-]: MOVE      R3 R1        ; R3 := R1
118 [-]: CONST     R4 21        ; R4 := 21.000000
119 [-]: CALL      R3 2 2       ; R3 := R3(R4)
120 [-]: SETTABLE  R2 K25 R3    ; R2["UISound_SweetenerOne"] := R3
121 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
122 [-]: MOVE      R3 R1        ; R3 := R1
123 [-]: CONST     R4 22        ; R4 := 22.000000
124 [-]: CALL      R3 2 2       ; R3 := R3(R4)
125 [-]: SETTABLE  R2 K26 R3    ; R2[0x4ec73e73] := R3
126 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
127 [-]: MOVE      R3 R1        ; R3 := R1
128 [-]: CONST     R4 23        ; R4 := 23.000000
129 [-]: CALL      R3 2 2       ; R3 := R3(R4)
130 [-]: SETTABLE  R2 K27 R3    ; R2["UISound_WindowOpen"] := R3
131 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
132 [-]: MOVE      R3 R1        ; R3 := R1
133 [-]: CONST     R4 24        ; R4 := 24.000000
134 [-]: CALL      R3 2 2       ; R3 := R3(R4)
135 [-]: SETTABLE  R2 K28 R3    ; R2["UISound_WindowClose"] := R3
136 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
137 [-]: MOVE      R3 R1        ; R3 := R1
138 [-]: CONST     R4 25        ; R4 := 25.000000
139 [-]: CALL      R3 2 2       ; R3 := R3(R4)
140 [-]: SETTABLE  R2 K29 R3    ; R2[0x33bdd652] := R3
141 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
142 [-]: MOVE      R3 R1        ; R3 := R1
143 [-]: CONST     R4 26        ; R4 := 26.000000
144 [-]: CALL      R3 2 2       ; R3 := R3(R4)
145 [-]: SETTABLE  R2 K30 R3    ; R2[0x9c1f3b5a] := R3
146 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
147 [-]: MOVE      R3 R1        ; R3 := R1
148 [-]: CONST     R4 27        ; R4 := 27.000000
149 [-]: CALL      R3 2 2       ; R3 := R3(R4)
150 [-]: SETTABLE  R2 K31 R3    ; R2["UISound_VotingStarted"] := R3
151 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
152 [-]: MOVE      R3 R1        ; R3 := R1
153 [-]: CONST     R4 28        ; R4 := 28.000000
154 [-]: CALL      R3 2 2       ; R3 := R3(R4)
155 [-]: SETTABLE  R2 K32 R3    ; R2["UISound_LogoTransition"] := R3
156 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
157 [-]: MOVE      R3 R1        ; R3 := R1
158 [-]: CONST     R4 29        ; R4 := 29.000000
159 [-]: CALL      R3 2 2       ; R3 := R3(R4)
160 [-]: SETTABLE  R2 K33 R3    ; R2[0x98776060] := R3
161 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
162 [-]: MOVE      R3 R1        ; R3 := R1
163 [-]: CONST     R4 30        ; R4 := 30.000000
164 [-]: CALL      R3 2 2       ; R3 := R3(R4)
165 [-]: SETTABLE  R2 K34 R3    ; R2["UISound_ChatDM"] := R3
166 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
167 [-]: MOVE      R3 R1        ; R3 := R1
168 [-]: CONST     R4 31        ; R4 := 31.000000
169 [-]: CALL      R3 2 2       ; R3 := R3(R4)
170 [-]: SETTABLE  R2 K35 R3    ; R2["UISound_ChatSquad"] := R3
171 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
172 [-]: MOVE      R3 R1        ; R3 := R1
173 [-]: CONST     R4 32        ; R4 := 32.000000
174 [-]: CALL      R3 2 2       ; R3 := R3(R4)
175 [-]: SETTABLE  R2 K36 R3    ; R2[0x7c1a0374] := R3
176 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
177 [-]: MOVE      R3 R1        ; R3 := R1
178 [-]: CONST     R4 33        ; R4 := 33.000000
179 [-]: CALL      R3 2 2       ; R3 := R3(R4)
180 [-]: SETTABLE  R2 K37 R3    ; R2["UISound_EndDrag"] := R3
181 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
182 [-]: MOVE      R3 R1        ; R3 := R1
183 [-]: CONST     R4 34        ; R4 := 34.000000
184 [-]: CALL      R3 2 2       ; R3 := R3(R4)
185 [-]: SETTABLE  R2 K38 R3    ; R2[0xb6df3e50] := R3
186 [-]: RETURN    R0 1         ; return 


; Function #123.1:
;
; Name:            
; Defined at line: 4784
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADNIL   R1 R1        ; R1 := nil
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: ADD       R2 R0 K1     ; R2 := R0 + 1.000000
  7 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 4830
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x9ba7909f
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0x3d106989
  8 [-]: LOADK     R1 K3        ; R1 := "UISTYLE: Style changed callback called"
  9 [-]: CALL      R0 2 1       ; R0(R1)
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0x58803cb6]
 12 [-]: CALL      R0 1 1       ; R0()
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: CALL      R0 1 1       ; R0()
 15 [-]: GETUPVAL  R0 U2        ; R0 := U2
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0x9ba7909f
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x7e17ae26]
 19 [-]: LOADK     R2 K6        ; R2 := "OnStyleChangedCallback"
 20 [-]: LOADK     R3 K7        ; R3 := ""
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 4844
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 4848
; #Upvalues:       37
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  37

  1 [-]: GETGLOBAL R0 K0        ; R0 := mControl
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Initialized"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K3        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["BackgroundMovie"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R0 K3        ; R0 := _T
 18 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 19 [-]: SETTABLE  R0 K4 R1     ; R0["BackgroundMovie"] := R1
 20 [-]: GETGLOBAL R0 K0        ; R0 := mControl
 21 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["StyleInit"]
 22 [-]: TEST      R0 1         ; if R0 then PC := 28
 23 [-]: JMP       28           ; PC := 28
 24 [-]: GETUPVAL  R0 U0        ; R0 := U0
 25 [-]: CALL      R0 1 1       ; R0()
 26 [-]: GETGLOBAL R0 K0        ; R0 := mControl
 27 [-]: SETTABLE  R0 K6 K7     ; R0["StyleInit"] := true
 28 [-]: GETUPVAL  R0 U1        ; R0 := U1
 29 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["IsLoading"]
 30 [-]: TEST      R0 0         ; if not R0 then PC := 98
 31 [-]: JMP       98           ; PC := 98
 32 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
 33 [-]: GETUPVAL  R1 U1        ; R1 := U1
 34 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["Loader"]
 35 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 36 [-]: TEST      R0 1         ; if R0 then PC := 98
 37 [-]: JMP       98           ; PC := 98
 38 [-]: GETUPVAL  R0 U1        ; R0 := U1
 39 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["Loader"]
 40 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0xd2d3875a]
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: TEST      R0 0         ; if not R0 then PC := 98
 43 [-]: JMP       98           ; PC := 98
 44 [-]: GETUPVAL  R0 U1        ; R0 := U1
 45 [-]: SETTABLE  R0 K8 K11    ; R0["IsLoading"] := false
 46 [-]: LOADK     R0 K12       ; R0 := ""
 47 [-]: CONST     R1 1         ; R1 := 1.000000
 48 [-]: GETUPVAL  R2 U1        ; R2 := U1
 49 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["Upgrades"]
 50 [-]: LEN       R2 R2        ; R2 := # R2
 51 [-]: CONST     R3 1         ; R3 := 1.000000
 52 [-]: FORPREP   R1 95        ; R1 -= R3; PC := 95
 53 [-]: GETGLOBAL R5 K14       ; R5 := 0xb009bbc6
 54 [-]: GETUPVAL  R6 U1        ; R6 := U1
 55 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Upgrades"]
 56 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 57 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 58 [-]: SELF      R6 R5 K15    ; R7 := R5; R6 := R5[0xce30fcd8]
 59 [-]: LOADK     R8 K12       ; R8 := ""
 60 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 61 [-]: GETTABLE  R7 R6 K16    ; R7 := R6["affixes"]
 62 [-]: EQ        1 R7 K17     ; if R7 == nil then PC := 84
 63 [-]: JMP       84           ; PC := 84
 64 [-]: CONST     R7 1         ; R7 := 1.000000
 65 [-]: GETTABLE  R8 R6 K16    ; R8 := R6["affixes"]
 66 [-]: LEN       R8 R8        ; R8 := # R8
 67 [-]: CONST     R9 1         ; R9 := 1.000000
 68 [-]: FORPREP   R7 82        ; R7 -= R9; PC := 82
 69 [-]: MOVE      R11 R0       ; R11 := R0
 70 [-]: GETUPVAL  R12 U2       ; R12 := U2
 71 [-]: GETTABLE  R12 R12 K18  ; R12 := R12[0x06d055f9]
 72 [-]: EQ        1 R0 K12     ; if R0 == "" then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 75
 75 [-]: LOADKB    R13 1 0      ; R13 := true
 76 [-]: LOADK     R14 K12      ; R14 := ""
 77 [-]: LOADK     R15 K19      ; R15 := "\r\n"
 78 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 79 [-]: GETTABLE  R13 R6 K16   ; R13 := R6["affixes"]
 80 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 81 [-]: CONCAT    R0 R11 R13   ; R0 := R11 .. R12 .. R13
 82 [-]: FORLOOP   R7 69        ; R7 += R9; if R7 <= R8 then begin PC := 69; R10 := R7 end
 83 [-]: JMP       95           ; PC := 95
 84 [-]: MOVE      R11 R0       ; R11 := R0
 85 [-]: LOADK     R12 K19      ; R12 := "\r\n"
 86 [-]: GETGLOBAL R13 K5       ; R13 := 0xae91e43b
 87 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13[0x42b04007]
 88 [-]: GETGLOBAL R15 K21      ; R15 := 0x64fb1586
 89 [-]: SELF      R16 R5 K22   ; R17 := R5; R16 := R5[0x5ba460ac]
 90 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
 91 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 92 [-]: LOADKB    R16 0 0      ; R16 := false
 93 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 94 [-]: CONCAT    R0 R11 R13   ; R0 := R11 .. R12 .. R13
 95 [-]: FORLOOP   R1 53        ; R1 += R3; if R1 <= R2 then begin PC := 53; R4 := R1 end
 96 [-]: GETGLOBAL R11 K3       ; R11 := _T
 97 [-]: SETTABLE  R11 K23 R0   ; R11["CurrentInvigoration"] := R0
 98 [-]: GETUPVAL  R11 U3       ; R11 := U3
 99 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["IsLoading"]
100 [-]: TEST      R11 0        ; if not R11 then PC := 131
101 [-]: JMP       131          ; PC := 131
102 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
103 [-]: GETGLOBAL R12 K24      ; R12 := 0x89326c93
104 [-]: CALL      R11 2 2      ; R11 := R11(R12)
105 [-]: TEST      R11 1        ; if R11 then PC := 131
106 [-]: JMP       131          ; PC := 131
107 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
108 [-]: GETUPVAL  R12 U3       ; R12 := U3
109 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Loader"]
110 [-]: CALL      R11 2 2      ; R11 := R11(R12)
111 [-]: TEST      R11 1        ; if R11 then PC := 131
112 [-]: JMP       131          ; PC := 131
113 [-]: GETUPVAL  R11 U3       ; R11 := U3
114 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["Loader"]
115 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0xd2d3875a]
116 [-]: CALL      R11 2 2      ; R11 := R11(R12)
117 [-]: TEST      R11 0        ; if not R11 then PC := 131
118 [-]: JMP       131          ; PC := 131
119 [-]: GETUPVAL  R11 U3       ; R11 := U3
120 [-]: SETTABLE  R11 K8 K11   ; R11["IsLoading"] := false
121 [-]: GETGLOBAL R11 K24      ; R11 := 0x89326c93
122 [-]: SELF      R11 R11 K25  ; R12 := R11; R11 := R11[0x05909209]
123 [-]: GETGLOBAL R13 K26      ; R13 := 0x88efc25e
124 [-]: GETGLOBAL R14 K27      ; R14 := 0x95a2efe1
125 [-]: SELF      R14 R14 K28  ; R15 := R14; R14 := R14[0xed4e0128]
126 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
127 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
128 [-]: GETGLOBAL R14 K29      ; R14 := ZERO_VECTOR
129 [-]: GETGLOBAL R15 K30      ; R15 := ZERO_ROTATION
130 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
131 [-]: GETGLOBAL R11 K31      ; R11 := 0xb693b6c1
132 [-]: CALL      R11 1 2      ; R11 := R11()
133 [-]: GETGLOBAL R12 K5       ; R12 := 0xae91e43b
134 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12[0x8a8c8d5a]
135 [-]: MOVE      R14 R11      ; R14 := R11
136 [-]: CALL      R12 3 1      ; R12(R13,R14)
137 [-]: GETGLOBAL R12 K2       ; R12 := 0x7b998233
138 [-]: GETGLOBAL R13 K33      ; R13 := mTimerMgr
139 [-]: CALL      R12 2 2      ; R12 := R12(R13)
140 [-]: TEST      R12 1        ; if R12 then PC := 146
141 [-]: JMP       146          ; PC := 146
142 [-]: GETGLOBAL R12 K33      ; R12 := mTimerMgr
143 [-]: SELF      R12 R12 K34  ; R13 := R12; R12 := R12[0xfaa69527]
144 [-]: MOVE      R14 R11      ; R14 := R11
145 [-]: CALL      R12 3 1      ; R12(R13,R14)
146 [-]: GETGLOBAL R12 K35      ; R12 := mQuestsNeedChecking
147 [-]: TEST      R12 0        ; if not R12 then PC := 157
148 [-]: JMP       157          ; PC := 157
149 [-]: GETGLOBAL R12 K3       ; R12 := _T
150 [-]: GETTABLE  R12 R12 K36  ; R12 := R12["ActiveQuestLoaded"]
151 [-]: TEST      R12 0        ; if not R12 then PC := 157
152 [-]: JMP       157          ; PC := 157
153 [-]: GETUPVAL  R12 U4       ; R12 := U4
154 [-]: CALL      R12 1 3      ; R12,R13 := R12()
155 [-]: NOT       R14 R13      ; R14 :=  R13
156 [-]: SETGLOBAL R14 K35      ; mQuestsNeedChecking := R14
157 [-]: GETUPVAL  R14 U5       ; R14 := U5
158 [-]: GETTABLE  R14 R14 K34  ; R14 := R14[0xfaa69527]
159 [-]: CALL      R14 1 1      ; R14()
160 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
161 [-]: GETGLOBAL R15 K3       ; R15 := _T
162 [-]: GETTABLE  R15 R15 K37  ; R15 := R15["DojoMgr"]
163 [-]: CALL      R14 2 2      ; R14 := R14(R15)
164 [-]: TEST      R14 1        ; if R14 then PC := 170
165 [-]: JMP       170          ; PC := 170
166 [-]: GETGLOBAL R14 K3       ; R14 := _T
167 [-]: GETTABLE  R14 R14 K37  ; R14 := R14["DojoMgr"]
168 [-]: SELF      R14 R14 K34  ; R15 := R14; R14 := R14[0xfaa69527]
169 [-]: CALL      R14 2 1      ; R14(R15)
170 [-]: GETUPVAL  R14 U6       ; R14 := U6
171 [-]: TEST      R14 0        ; if not R14 then PC := 190
172 [-]: JMP       190          ; PC := 190
173 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
174 [-]: GETGLOBAL R15 K38      ; R15 := 0x76ea806b
175 [-]: CALL      R14 2 2      ; R14 := R14(R15)
176 [-]: TEST      R14 1        ; if R14 then PC := 190
177 [-]: JMP       190          ; PC := 190
178 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
179 [-]: GETGLOBAL R15 K39      ; R15 := 0x25d99d89
180 [-]: CALL      R14 2 2      ; R14 := R14(R15)
181 [-]: TEST      R14 1        ; if R14 then PC := 190
182 [-]: JMP       190          ; PC := 190
183 [-]: GETGLOBAL R14 K39      ; R14 := 0x25d99d89
184 [-]: SELF      R14 R14 K40  ; R15 := R14; R14 := R14[0x000daadd]
185 [-]: CONST     R16 0        ; R16 := 0.000000
186 [-]: LOADK     R17 K41      ; R17 := "OnTrainingResultUploaded"
187 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
188 [-]: LOADKB    R14 0 0      ; R14 := false
189 [-]: SETUPVAL  R14 U6       ; U82 := R6
190 [-]: GETGLOBAL R14 K42      ; R14 := mCurrentMode
191 [-]: EQ        1 R14 K17    ; if R14 == nil then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: GETGLOBAL R14 K43      ; R14 := mCurrentGameRules
194 [-]: GETGLOBAL R15 K44      ; R15 := 0xbe190284
195 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 333
196 [-]: JMP       333          ; PC := 333
197 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
198 [-]: GETGLOBAL R15 K44      ; R15 := 0xbe190284
199 [-]: CALL      R14 2 2      ; R14 := R14(R15)
200 [-]: TEST      R14 0        ; if not R14 then PC := 203
201 [-]: JMP       203          ; PC := 203
202 [-]: RETURN    R0 1         ; return 
203 [-]: GETGLOBAL R14 K44      ; R14 := 0xbe190284
204 [-]: SETGLOBAL R14 K43      ; mCurrentGameRules := R14
205 [-]: GETUPVAL  R14 U7       ; R14 := U7
206 [-]: GETTABLE  R14 R14 K45  ; R14 := R14[0xb73d420f]
207 [-]: CALL      R14 1 2      ; R14 := R14()
208 [-]: SETGLOBAL R14 K42      ; mCurrentMode := R14
209 [-]: GETGLOBAL R14 K42      ; R14 := mCurrentMode
210 [-]: GETUPVAL  R15 U7       ; R15 := U7
211 [-]: GETTABLE  R15 R15 K46  ; R15 := R15["UI_MODE_IN_SPACE_SHIP"]
212 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 219
213 [-]: JMP       219          ; PC := 219
214 [-]: GETGLOBAL R14 K44      ; R14 := 0xbe190284
215 [-]: SELF      R14 R14 K47  ; R15 := R14; R14 := R14[0x23ddc82a]
216 [-]: CALL      R14 2 2      ; R14 := R14(R15)
217 [-]: TEST      R14 0        ; if not R14 then PC := 224
218 [-]: JMP       224          ; PC := 224
219 [-]: GETGLOBAL R14 K42      ; R14 := mCurrentMode
220 [-]: GETUPVAL  R15 U7       ; R15 := U7
221 [-]: GETTABLE  R15 R15 K48  ; R15 := R15["UI_MODE_IN_SPACE_HUB"]
222 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 284
223 [-]: JMP       284          ; PC := 284
224 [-]: GETGLOBAL R14 K38      ; R14 := 0x76ea806b
225 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0x3f3ae64c]
226 [-]: CONST     R16 0        ; R16 := 0.000000
227 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
228 [-]: GETGLOBAL R15 K38      ; R15 := 0x76ea806b
229 [-]: SELF      R15 R15 K50  ; R16 := R15; R15 := R15[0x8792aaab]
230 [-]: CALL      R15 2 2      ; R15 := R15(R16)
231 [-]: TEST      R15 0        ; if not R15 then PC := 284
232 [-]: JMP       284          ; PC := 284
233 [-]: GETGLOBAL R15 K2       ; R15 := 0x7b998233
234 [-]: MOVE      R16 R14      ; R16 := R14
235 [-]: CALL      R15 2 2      ; R15 := R15(R16)
236 [-]: TEST      R15 1        ; if R15 then PC := 284
237 [-]: JMP       284          ; PC := 284
238 [-]: GETGLOBAL R15 K51      ; R15 := 0x3d106989
239 [-]: LOADK     R16 K52      ; R16 := "return to ship: initial sync"
240 [-]: CALL      R15 2 1      ; R15(R16)
241 [-]: GETGLOBAL R15 K3       ; R15 := _T
242 [-]: SETTABLE  R15 K53 K7   ; R15["syncingInventory"] := true
243 [-]: SELF      R15 R14 K54  ; R16 := R14; R15 := R14[0x80563238]
244 [-]: CALL      R15 2 2      ; R15 := R15(R16)
245 [-]: SELF      R16 R15 K55  ; R17 := R15; R16 := R15[0x08ead34d]
246 [-]: LOADK     R18 K56      ; R18 := "OnInitialInventorySync"
247 [-]: LOADKB    R19 1 0      ; R19 := true
248 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
249 [-]: SELF      R16 R15 K57  ; R17 := R15; R16 := R15[0x24389ec3]
250 [-]: LOADK     R18 K58      ; R18 := "OnInboxSync"
251 [-]: CALL      R16 3 1      ; R16(R17,R18)
252 [-]: GETGLOBAL R16 K42      ; R16 := mCurrentMode
253 [-]: GETUPVAL  R17 U7       ; R17 := U7
254 [-]: GETTABLE  R17 R17 K46  ; R17 := R17["UI_MODE_IN_SPACE_SHIP"]
255 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 282
256 [-]: JMP       282          ; PC := 282
257 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
258 [-]: GETGLOBAL R17 K3       ; R17 := _T
259 [-]: GETTABLE  R17 R17 K59  ; R17 := R17["EndOfQuestOpen"]
260 [-]: CALL      R16 2 2      ; R16 := R16(R17)
261 [-]: TEST      R16 1        ; if R16 then PC := 267
262 [-]: JMP       267          ; PC := 267
263 [-]: GETGLOBAL R16 K3       ; R16 := _T
264 [-]: GETTABLE  R16 R16 K59  ; R16 := R16["EndOfQuestOpen"]
265 [-]: TEST      R16 1        ; if R16 then PC := 282
266 [-]: JMP       282          ; PC := 282
267 [-]: SELF      R16 R15 K60  ; R17 := R15; R16 := R15[0x8c21a288]
268 [-]: CALL      R16 2 2      ; R16 := R16(R17)
269 [-]: GETGLOBAL R17 K61      ; R17 := 0x34291f5c
270 [-]: GETTABLE  R17 R17 K62  ; R17 := R17[0x397b920f]
271 [-]: MOVE      R18 R16      ; R18 := R16
272 [-]: CALL      R17 2 2      ; R17 := R17(R18)
273 [-]: GETGLOBAL R18 K63      ; R18 := 0x5bced4c4
274 [-]: GETTABLE  R18 R18 K64  ; R18 := R18[0xe4a5b3ca]
275 [-]: MOVE      R19 R17      ; R19 := R17
276 [-]: CALL      R18 2 2      ; R18 := R18(R19)
277 [-]: LE        0 K65 R18    ; if 86400.000000 > R18 then PC := 282
278 [-]: JMP       282          ; PC := 282
279 [-]: SELF      R18 R15 K66  ; R19 := R15; R18 := R15[0xfe249742]
280 [-]: LOADK     R20 K67      ; R20 := "OnLoginRewardSync"
281 [-]: CALL      R18 3 1      ; R18(R19,R20)
282 [-]: GETUPVAL  R18 U8       ; R18 := U8
283 [-]: SETTABLE  R18 K68 K7   ; R18["mForceRefreshWorldStatePostLogin"] := true
284 [-]: GETGLOBAL R18 K42      ; R18 := mCurrentMode
285 [-]: GETUPVAL  R19 U7       ; R19 := U7
286 [-]: GETTABLE  R19 R19 K46  ; R19 := R19["UI_MODE_IN_SPACE_SHIP"]
287 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 299
288 [-]: JMP       299          ; PC := 299
289 [-]: GETGLOBAL R18 K42      ; R18 := mCurrentMode
290 [-]: GETUPVAL  R19 U7       ; R19 := U7
291 [-]: GETTABLE  R19 R19 K48  ; R19 := R19["UI_MODE_IN_SPACE_HUB"]
292 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 299
293 [-]: JMP       299          ; PC := 299
294 [-]: GETGLOBAL R18 K42      ; R18 := mCurrentMode
295 [-]: GETUPVAL  R19 U7       ; R19 := U7
296 [-]: GETTABLE  R19 R19 K69  ; R19 := R19["UI_MODE_IN_DOJO"]
297 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 311
298 [-]: JMP       311          ; PC := 311
299 [-]: GETUPVAL  R18 U3       ; R18 := U3
300 [-]: GETGLOBAL R19 K70      ; R19 := 0xbd496aa1
301 [-]: GETTABLE  R19 R19 K71  ; R19 := R19[0x42645da3]
302 [-]: NEWTABLE  R20 0 0      ; R20 := {}
303 [-]: GETGLOBAL R21 K27      ; R21 := 0x95a2efe1
304 [-]: SELF      R21 R21 K28  ; R22 := R21; R21 := R21[0xed4e0128]
305 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
306 [-]: SETLIST   R20 0 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 0
307 [-]: CALL      R19 2 2      ; R19 := R19(R20)
308 [-]: SETTABLE  R18 K9 R19   ; R18["Loader"] := R19
309 [-]: GETUPVAL  R18 U3       ; R18 := U3
310 [-]: SETTABLE  R18 K8 K7    ; R18["IsLoading"] := true
311 [-]: GETGLOBAL R18 K42      ; R18 := mCurrentMode
312 [-]: GETUPVAL  R19 U7       ; R19 := U7
313 [-]: GETTABLE  R19 R19 K46  ; R19 := R19["UI_MODE_IN_SPACE_SHIP"]
314 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 318
315 [-]: JMP       318          ; PC := 318
316 [-]: GETUPVAL  R18 U9       ; R18 := U9
317 [-]: CALL      R18 1 1      ; R18()
318 [-]: LOADKB    R18 1 0      ; R18 := true
319 [-]: SETGLOBAL R18 K72      ; mFadeInStarted := R18
320 [-]: GETGLOBAL R18 K5       ; R18 := 0xae91e43b
321 [-]: SELF      R18 R18 K73  ; R19 := R18; R18 := R18[0x58bec6d6]
322 [-]: CONST     R20 0        ; R20 := 0.000000
323 [-]: CALL      R18 3 1      ; R18(R19,R20)
324 [-]: GETUPVAL  R18 U10      ; R18 := U10
325 [-]: CALL      R18 1 1      ; R18()
326 [-]: GETUPVAL  R18 U7       ; R18 := U7
327 [-]: GETTABLE  R18 R18 K74  ; R18 := R18[0xd342d13d]
328 [-]: CALL      R18 1 2      ; R18 := R18()
329 [-]: TEST      R18 0        ; if not R18 then PC := 333
330 [-]: JMP       333          ; PC := 333
331 [-]: GETUPVAL  R18 U11      ; R18 := U11
332 [-]: CALL      R18 1 1      ; R18()
333 [-]: GETGLOBAL R18 K75      ; R18 := mAdditionalScreenCreated
334 [-]: EQ        0 R18 K11    ; if R18 ~= false then PC := 347
335 [-]: JMP       347          ; PC := 347
336 [-]: GETUPVAL  R18 U7       ; R18 := U7
337 [-]: GETTABLE  R18 R18 K74  ; R18 := R18[0xd342d13d]
338 [-]: CALL      R18 1 2      ; R18 := R18()
339 [-]: TEST      R18 1        ; if R18 then PC := 347
340 [-]: JMP       347          ; PC := 347
341 [-]: GETGLOBAL R18 K3       ; R18 := _T
342 [-]: GETTABLE  R18 R18 K76  ; R18 := R18["gShowingLoginScreen"]
343 [-]: EQ        0 R18 K11    ; if R18 ~= false then PC := 347
344 [-]: JMP       347          ; PC := 347
345 [-]: GETUPVAL  R18 U11      ; R18 := U11
346 [-]: CALL      R18 1 1      ; R18()
347 [-]: GETGLOBAL R18 K42      ; R18 := mCurrentMode
348 [-]: GETUPVAL  R19 U7       ; R19 := U7
349 [-]: GETTABLE  R19 R19 K77  ; R19 := R19["UI_MODE_IN_GAME"]
350 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 353
351 [-]: JMP       353          ; PC := 353
352 [-]: LOADKB    R18 0 1      ; R18 := false; PC := 353
353 [-]: LOADKB    R18 1 0      ; R18 := true
354 [-]: LOADNIL   R19 R19      ; R19 := nil
355 [-]: TEST      R18 0        ; if not R18 then PC := 359
356 [-]: JMP       359          ; PC := 359
357 [-]: GETGLOBAL R19 K39      ; R19 := 0x25d99d89
358 [-]: JMP       375          ; PC := 375
359 [-]: GETGLOBAL R20 K38      ; R20 := 0x76ea806b
360 [-]: SELF      R20 R20 K49  ; R21 := R20; R20 := R20[0x3f3ae64c]
361 [-]: CONST     R22 0        ; R22 := 0.000000
362 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
363 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
364 [-]: MOVE      R22 R20      ; R22 := R20
365 [-]: CALL      R21 2 2      ; R21 := R21(R22)
366 [-]: TEST      R21 1        ; if R21 then PC := 375
367 [-]: JMP       375          ; PC := 375
368 [-]: SELF      R21 R20 K78  ; R22 := R20; R21 := R20[0x22de02e1]
369 [-]: CALL      R21 2 2      ; R21 := R21(R22)
370 [-]: TEST      R21 0        ; if not R21 then PC := 375
371 [-]: JMP       375          ; PC := 375
372 [-]: SELF      R21 R20 K54  ; R22 := R20; R21 := R20[0x80563238]
373 [-]: CALL      R21 2 2      ; R21 := R21(R22)
374 [-]: MOVE      R19 R21      ; R19 := R21
375 [-]: GETUPVAL  R21 U12      ; R21 := U12
376 [-]: MOVE      R22 R11      ; R22 := R11
377 [-]: MOVE      R23 R19      ; R23 := R19
378 [-]: MOVE      R24 R18      ; R24 := R18
379 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
380 [-]: TEST      R18 1        ; if R18 then PC := 587
381 [-]: JMP       587          ; PC := 587
382 [-]: GETGLOBAL R21 K42      ; R21 := mCurrentMode
383 [-]: GETUPVAL  R22 U7       ; R22 := U7
384 [-]: GETTABLE  R22 R22 K46  ; R22 := R22["UI_MODE_IN_SPACE_SHIP"]
385 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 392
386 [-]: JMP       392          ; PC := 392
387 [-]: GETUPVAL  R21 U7       ; R21 := U7
388 [-]: GETTABLE  R21 R21 K79  ; R21 := R21[0xcf1fcba4]
389 [-]: CALL      R21 1 2      ; R21 := R21()
390 [-]: TEST      R21 0        ; if not R21 then PC := 402
391 [-]: JMP       402          ; PC := 402
392 [-]: GETUPVAL  R21 U13      ; R21 := U13
393 [-]: CALL      R21 1 1      ; R21()
394 [-]: GETUPVAL  R21 U14      ; R21 := U14
395 [-]: CALL      R21 1 1      ; R21()
396 [-]: GETUPVAL  R21 U15      ; R21 := U15
397 [-]: CALL      R21 1 1      ; R21()
398 [-]: GETUPVAL  R21 U16      ; R21 := U16
399 [-]: CALL      R21 1 1      ; R21()
400 [-]: GETUPVAL  R21 U17      ; R21 := U17
401 [-]: CALL      R21 1 1      ; R21()
402 [-]: GETGLOBAL R21 K42      ; R21 := mCurrentMode
403 [-]: GETUPVAL  R22 U7       ; R22 := U7
404 [-]: GETTABLE  R22 R22 K46  ; R22 := R22["UI_MODE_IN_SPACE_SHIP"]
405 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 461
406 [-]: JMP       461          ; PC := 461
407 [-]: GETGLOBAL R21 K3       ; R21 := _T
408 [-]: GETTABLE  R21 R21 K80  ; R21 := R21["uiConsoleTriggersInitialized"]
409 [-]: TEST      R21 0        ; if not R21 then PC := 461
410 [-]: JMP       461          ; PC := 461
411 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
412 [-]: GETGLOBAL R22 K81      ; R22 := 0x0032441c
413 [-]: GETTABLE  R22 R22 K82  ; R22 := R22["JunctionComplete"]
414 [-]: CALL      R21 2 2      ; R21 := R21(R22)
415 [-]: TEST      R21 1        ; if R21 then PC := 461
416 [-]: JMP       461          ; PC := 461
417 [-]: GETGLOBAL R21 K81      ; R21 := 0x0032441c
418 [-]: GETTABLE  R21 R21 K82  ; R21 := R21["JunctionComplete"]
419 [-]: GETTABLE  R21 R21 K83  ; R21 := R21["transitioning"]
420 [-]: TEST      R21 1        ; if R21 then PC := 461
421 [-]: JMP       461          ; PC := 461
422 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
423 [-]: GETGLOBAL R22 K24      ; R22 := 0x89326c93
424 [-]: SELF      R22 R22 K84  ; R23 := R22; R22 := R22[0x78298275]
425 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
426 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
427 [-]: TEST      R21 1        ; if R21 then PC := 461
428 [-]: JMP       461          ; PC := 461
429 [-]: GETGLOBAL R21 K3       ; R21 := _T
430 [-]: GETTABLE  R21 R21 K85  ; R21 := R21[0x1c5b5b33]
431 [-]: LOADK     R22 K86      ; R22 := "MissionStats"
432 [-]: CALL      R21 2 2      ; R21 := R21(R22)
433 [-]: TEST      R21 1        ; if R21 then PC := 461
434 [-]: JMP       461          ; PC := 461
435 [-]: GETGLOBAL R21 K3       ; R21 := _T
436 [-]: GETTABLE  R21 R21 K87  ; R21 := R21["missionStatsPending"]
437 [-]: TEST      R21 1        ; if R21 then PC := 461
438 [-]: JMP       461          ; PC := 461
439 [-]: GETGLOBAL R21 K88      ; R21 := 0x9ba7909f
440 [-]: SELF      R21 R21 K89  ; R22 := R21; R21 := R21[0x5374b92e]
441 [-]: GETGLOBAL R23 K90      ; R23 := 0x99b0a3fe
442 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
443 [-]: TEST      R21 1        ; if R21 then PC := 461
444 [-]: JMP       461          ; PC := 461
445 [-]: GETGLOBAL R21 K3       ; R21 := _T
446 [-]: SETTABLE  R21 K91 K92  ; R21["triggeredConsoleTag"] := "SolarMapOrigin"
447 [-]: GETUPVAL  R21 U2       ; R21 := U2
448 [-]: GETTABLE  R21 R21 K93  ; R21 := R21[0xa9882367]
449 [-]: LOADK     R22 K94      ; R22 := "ConsoleTeleportAndActivate"
450 [-]: CALL      R21 2 2      ; R21 := R21(R22)
451 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
452 [-]: MOVE      R23 R21      ; R23 := R21
453 [-]: CALL      R22 2 2      ; R22 := R22(R23)
454 [-]: TEST      R22 1        ; if R22 then PC := 458
455 [-]: JMP       458          ; PC := 458
456 [-]: SELF      R22 R21 K95  ; R23 := R21; R22 := R21[0xd91e1179]
457 [-]: CALL      R22 2 1      ; R22(R23)
458 [-]: GETGLOBAL R22 K81      ; R22 := 0x0032441c
459 [-]: GETTABLE  R22 R22 K82  ; R22 := R22["JunctionComplete"]
460 [-]: SETTABLE  R22 K83 K7   ; R22["transitioning"] := true
461 [-]: GETUPVAL  R22 U18      ; R22 := U18
462 [-]: CALL      R22 1 1      ; R22()
463 [-]: GETUPVAL  R22 U19      ; R22 := U19
464 [-]: CALL      R22 1 1      ; R22()
465 [-]: GETUPVAL  R22 U20      ; R22 := U20
466 [-]: GETTABLE  R22 R22 K96  ; R22 := R22["InviteQueued"]
467 [-]: LE        0 K97 R22    ; if 0.000000 > R22 then PC := 508
468 [-]: JMP       508          ; PC := 508
469 [-]: GETUPVAL  R22 U20      ; R22 := U20
470 [-]: GETGLOBAL R23 K63      ; R23 := 0x5bced4c4
471 [-]: GETTABLE  R23 R23 K98  ; R23 := R23[0xb62ecfe0]
472 [-]: GETUPVAL  R24 U20      ; R24 := U20
473 [-]: GETTABLE  R24 R24 K96  ; R24 := R24["InviteQueued"]
474 [-]: GETGLOBAL R25 K99      ; R25 := 0x67652851
475 [-]: CALL      R25 1 2      ; R25 := R25()
476 [-]: SUB       R24 R24 R25  ; R24 := R24 - R25
477 [-]: CONST     R25 0        ; R25 := 0.000000
478 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
479 [-]: SETTABLE  R22 K96 R23  ; R22["InviteQueued"] := R23
480 [-]: GETUPVAL  R22 U20      ; R22 := U20
481 [-]: GETTABLE  R22 R22 K96  ; R22 := R22["InviteQueued"]
482 [-]: EQ        0 R22 K97    ; if R22 ~= 0.000000 then PC := 508
483 [-]: JMP       508          ; PC := 508
484 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
485 [-]: GETGLOBAL R23 K24      ; R23 := 0x89326c93
486 [-]: SELF      R23 R23 K100 ; R24 := R23; R23 := R23[0xdd25e9d1]
487 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
488 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
489 [-]: TEST      R22 0        ; if not R22 then PC := 508
490 [-]: JMP       508          ; PC := 508
491 [-]: GETUPVAL  R22 U7       ; R22 := U7
492 [-]: GETTABLE  R22 R22 K101 ; R22 := R22[0x0deacd54]
493 [-]: CALL      R22 1 2      ; R22 := R22()
494 [-]: TEST      R22 1        ; if R22 then PC := 508
495 [-]: JMP       508          ; PC := 508
496 [-]: GETUPVAL  R22 U20      ; R22 := U20
497 [-]: SETTABLE  R22 K96 K102 ; R22["InviteQueued"] := -1.000000
498 [-]: GETUPVAL  R22 U7       ; R22 := U7
499 [-]: GETTABLE  R22 R22 K103 ; R22 := R22[0x1f60d532]
500 [-]: GETUPVAL  R23 U20      ; R23 := U20
501 [-]: GETTABLE  R23 R23 K104 ; R23 := R23["Transmission"]
502 [-]: CALL      R22 2 1      ; R22(R23)
503 [-]: GETGLOBAL R22 K39      ; R22 := 0x25d99d89
504 [-]: SELF      R22 R22 K105 ; R23 := R22; R22 := R22[0xbf6c9575]
505 [-]: GETUPVAL  R24 U20      ; R24 := U20
506 [-]: GETTABLE  R24 R24 K106 ; R24 := R24["NodeSymbol"]
507 [-]: CALL      R22 3 1      ; R22(R23,R24)
508 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
509 [-]: MOVE      R23 R19      ; R23 := R19
510 [-]: CALL      R22 2 2      ; R22 := R22(R23)
511 [-]: TEST      R22 1        ; if R22 then PC := 525
512 [-]: JMP       525          ; PC := 525
513 [-]: GETUPVAL  R22 U21      ; R22 := U21
514 [-]: SELF      R23 R19 K107 ; R24 := R19; R23 := R19[0x1e11a6d0]
515 [-]: CALL      R23 2 2      ; R23 := R23(R24)
516 [-]: SELF      R24 R19 K108 ; R25 := R19; R24 := R19[0x9b466ee3]
517 [-]: CALL      R24 2 2      ; R24 := R24(R25)
518 [-]: SELF      R25 R19 K109 ; R26 := R19; R25 := R19[0x4ce20fca]
519 [-]: CALL      R25 2 2      ; R25 := R25(R26)
520 [-]: SELF      R26 R19 K110 ; R27 := R19; R26 := R19[0xbd6729ff]
521 [-]: CALL      R26 2 2      ; R26 := R26(R27)
522 [-]: SELF      R27 R19 K111 ; R28 := R19; R27 := R19[0xa59dbd63]
523 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
524 [-]: CALL      R22 0 1      ; R22(R23,...)
525 [-]: GETUPVAL  R22 U22      ; R22 := U22
526 [-]: TEST      R22 0        ; if not R22 then PC := 558
527 [-]: JMP       558          ; PC := 558
528 [-]: LOADKB    R22 0 0      ; R22 := false
529 [-]: SETUPVAL  R22 U22      ; U82 := R22
530 [-]: GETGLOBAL R22 K5       ; R22 := 0xae91e43b
531 [-]: SELF      R22 R22 K20  ; R23 := R22; R22 := R22[0x42b04007]
532 [-]: LOADK     R24 K112     ; R24 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
533 [-]: LOADKB    R25 0 0      ; R25 := false
534 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
535 [-]: LOADK     R23 K113     ; R23 := "\r\n\r\n"
536 [-]: GETGLOBAL R24 K5       ; R24 := 0xae91e43b
537 [-]: SELF      R24 R24 K20  ; R25 := R24; R24 := R24[0x42b04007]
538 [-]: LOADK     R26 K114     ; R26 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableKicked"
539 [-]: LOADKB    R27 0 0      ; R27 := false
540 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
541 [-]: CONCAT    R22 R22 R24  ; R22 := R22 .. R23 .. R24
542 [-]: GETUPVAL  R23 U23      ; R23 := U23
543 [-]: CALL      R23 1 1      ; R23()
544 [-]: GETUPVAL  R23 U24      ; R23 := U24
545 [-]: MOVE      R24 R22      ; R24 := R22
546 [-]: CALL      R23 2 1      ; R23(R24)
547 [-]: GETGLOBAL R23 K61      ; R23 := 0x34291f5c
548 [-]: GETTABLE  R23 R23 K115 ; R23 := R23[0x056bfe8b]
549 [-]: CALL      R23 1 2      ; R23 := R23()
550 [-]: TEST      R23 1        ; if R23 then PC := 558
551 [-]: JMP       558          ; PC := 558
552 [-]: GETGLOBAL R23 K88      ; R23 := 0x9ba7909f
553 [-]: SELF      R23 R23 K116 ; R24 := R23; R23 := R23[0xf37bdbf9]
554 [-]: GETGLOBAL R25 K14      ; R25 := 0xb009bbc6
555 [-]: LOADK     R26 K117     ; R26 := "/EE/Editor/ToolMenus/Commands/CmdRelaunch"
556 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
557 [-]: CALL      R23 0 1      ; R23(R24,...)
558 [-]: GETGLOBAL R23 K2       ; R23 := 0x7b998233
559 [-]: MOVE      R24 R19      ; R24 := R19
560 [-]: CALL      R23 2 2      ; R23 := R23(R24)
561 [-]: TEST      R23 1        ; if R23 then PC := 581
562 [-]: JMP       581          ; PC := 581
563 [-]: GETGLOBAL R23 K118     ; R23 := mRefreshHighPriorityMessages
564 [-]: LE        0 R23 K97    ; if R23 > 0.000000 then PC := 581
565 [-]: JMP       581          ; PC := 581
566 [-]: SELF      R23 R19 K119 ; R24 := R19; R23 := R19[0x63a9c319]
567 [-]: CALL      R23 2 2      ; R23 := R23(R24)
568 [-]: LT        0 K97 R23    ; if 0.000000 >= R23 then PC := 578
569 [-]: JMP       578          ; PC := 578
570 [-]: GETGLOBAL R24 K3       ; R24 := _T
571 [-]: GETTABLE  R24 R24 K120 ; R24 := R24["gLastHighPriorityMessageCount"]
572 [-]: EQ        1 R24 R23    ; if R24 == R23 then PC := 578
573 [-]: JMP       578          ; PC := 578
574 [-]: GETGLOBAL R24 K3       ; R24 := _T
575 [-]: SETTABLE  R24 K121 K7  ; R24["gQueueMailbox"] := true
576 [-]: GETGLOBAL R24 K3       ; R24 := _T
577 [-]: SETTABLE  R24 K120 R23 ; R24["gLastHighPriorityMessageCount"] := R23
578 [-]: GETGLOBAL R24 K122     ; R24 := mHighPriorityMessageDelay
579 [-]: SETGLOBAL R24 K118     ; mRefreshHighPriorityMessages := R24
580 [-]: JMP       610          ; PC := 610
581 [-]: GETGLOBAL R24 K118     ; R24 := mRefreshHighPriorityMessages
582 [-]: GETGLOBAL R25 K99      ; R25 := 0x67652851
583 [-]: CALL      R25 1 2      ; R25 := R25()
584 [-]: SUB       R24 R24 R25  ; R24 := R24 - R25
585 [-]: SETGLOBAL R24 K118     ; mRefreshHighPriorityMessages := R24
586 [-]: JMP       610          ; PC := 610
587 [-]: GETGLOBAL R24 K3       ; R24 := _T
588 [-]: GETTABLE  R24 R24 K123 ; R24 := R24["InSimulacrum"]
589 [-]: TEST      R24 0        ; if not R24 then PC := 610
590 [-]: JMP       610          ; PC := 610
591 [-]: GETUPVAL  R24 U13      ; R24 := U13
592 [-]: CALL      R24 1 1      ; R24()
593 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
594 [-]: MOVE      R25 R19      ; R25 := R19
595 [-]: CALL      R24 2 2      ; R24 := R24(R25)
596 [-]: TEST      R24 1        ; if R24 then PC := 610
597 [-]: JMP       610          ; PC := 610
598 [-]: GETUPVAL  R24 U21      ; R24 := U21
599 [-]: SELF      R25 R19 K107 ; R26 := R19; R25 := R19[0x1e11a6d0]
600 [-]: CALL      R25 2 2      ; R25 := R25(R26)
601 [-]: SELF      R26 R19 K108 ; R27 := R19; R26 := R19[0x9b466ee3]
602 [-]: CALL      R26 2 2      ; R26 := R26(R27)
603 [-]: SELF      R27 R19 K109 ; R28 := R19; R27 := R19[0x4ce20fca]
604 [-]: CALL      R27 2 2      ; R27 := R27(R28)
605 [-]: SELF      R28 R19 K110 ; R29 := R19; R28 := R19[0xbd6729ff]
606 [-]: CALL      R28 2 2      ; R28 := R28(R29)
607 [-]: SELF      R29 R19 K111 ; R30 := R19; R29 := R19[0xa59dbd63]
608 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
609 [-]: CALL      R24 0 1      ; R24(R25,...)
610 [-]: GETGLOBAL R24 K3       ; R24 := _T
611 [-]: GETTABLE  R24 R24 K124 ; R24 := R24["PendingMissionReqErrorDialog"]
612 [-]: TEST      R24 0        ; if not R24 then PC := 619
613 [-]: JMP       619          ; PC := 619
614 [-]: GETGLOBAL R24 K3       ; R24 := _T
615 [-]: GETTABLE  R24 R24 K125 ; R24 := R24[0x37ab0747]
616 [-]: CALL      R24 1 1      ; R24()
617 [-]: GETGLOBAL R24 K3       ; R24 := _T
618 [-]: SETTABLE  R24 K124 K17 ; R24["PendingMissionReqErrorDialog"] := nil
619 [-]: GETGLOBAL R24 K3       ; R24 := _T
620 [-]: GETTABLE  R24 R24 K126 ; R24 := R24["Jukebox"]
621 [-]: EQ        1 R24 K17    ; if R24 == nil then PC := 626
622 [-]: JMP       626          ; PC := 626
623 [-]: GETUPVAL  R24 U25      ; R24 := U25
624 [-]: GETTABLE  R24 R24 K127 ; R24 := R24[0x5f64dde3]
625 [-]: CALL      R24 1 1      ; R24()
626 [-]: GETUPVAL  R24 U26      ; R24 := U26
627 [-]: GETTABLE  R24 R24 K128 ; R24 := R24["DelayTime"]
628 [-]: LT        0 K97 R24    ; if 0.000000 >= R24 then PC := 637
629 [-]: JMP       637          ; PC := 637
630 [-]: GETUPVAL  R24 U26      ; R24 := U26
631 [-]: GETUPVAL  R25 U26      ; R25 := U26
632 [-]: GETTABLE  R25 R25 K128 ; R25 := R25["DelayTime"]
633 [-]: GETGLOBAL R26 K31      ; R26 := 0xb693b6c1
634 [-]: CALL      R26 1 2      ; R26 := R26()
635 [-]: SUB       R25 R25 R26  ; R25 := R25 - R26
636 [-]: SETTABLE  R24 K128 R25 ; R24["DelayTime"] := R25
637 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
638 [-]: GETUPVAL  R25 U26      ; R25 := U26
639 [-]: GETTABLE  R25 R25 K9   ; R25 := R25["Loader"]
640 [-]: CALL      R24 2 2      ; R24 := R24(R25)
641 [-]: TEST      R24 1        ; if R24 then PC := 734
642 [-]: JMP       734          ; PC := 734
643 [-]: GETUPVAL  R24 U26      ; R24 := U26
644 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["Loader"]
645 [-]: SELF      R24 R24 K10  ; R25 := R24; R24 := R24[0xd2d3875a]
646 [-]: CALL      R24 2 2      ; R24 := R24(R25)
647 [-]: TEST      R24 0        ; if not R24 then PC := 734
648 [-]: JMP       734          ; PC := 734
649 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
650 [-]: GETUPVAL  R25 U26      ; R25 := U26
651 [-]: GETTABLE  R25 R25 K129 ; R25 := R25["QueuedTransmission"]
652 [-]: CALL      R24 2 2      ; R24 := R24(R25)
653 [-]: TEST      R24 1        ; if R24 then PC := 734
654 [-]: JMP       734          ; PC := 734
655 [-]: GETUPVAL  R24 U26      ; R24 := U26
656 [-]: GETTABLE  R24 R24 K8   ; R24 := R24["IsLoading"]
657 [-]: TEST      R24 0        ; if not R24 then PC := 673
658 [-]: JMP       673          ; PC := 673
659 [-]: GETUPVAL  R24 U26      ; R24 := U26
660 [-]: SETTABLE  R24 K8 K11   ; R24["IsLoading"] := false
661 [-]: GETUPVAL  R24 U26      ; R24 := U26
662 [-]: GETGLOBAL R25 K14      ; R25 := 0xb009bbc6
663 [-]: GETUPVAL  R26 U26      ; R26 := U26
664 [-]: GETTABLE  R26 R26 K129 ; R26 := R26["QueuedTransmission"]
665 [-]: CALL      R25 2 2      ; R25 := R25(R26)
666 [-]: SETTABLE  R24 K129 R25 ; R24["QueuedTransmission"] := R25
667 [-]: GETUPVAL  R24 U26      ; R24 := U26
668 [-]: GETUPVAL  R25 U26      ; R25 := U26
669 [-]: GETTABLE  R25 R25 K129 ; R25 := R25["QueuedTransmission"]
670 [-]: SELF      R25 R25 K130 ; R26 := R25; R25 := R25[0xcab30b25]
671 [-]: CALL      R25 2 2      ; R25 := R25(R26)
672 [-]: SETTABLE  R24 K128 R25 ; R24["DelayTime"] := R25
673 [-]: GETUPVAL  R24 U26      ; R24 := U26
674 [-]: GETTABLE  R24 R24 K128 ; R24 := R24["DelayTime"]
675 [-]: LE        0 R24 K97    ; if R24 > 0.000000 then PC := 734
676 [-]: JMP       734          ; PC := 734
677 [-]: GETUPVAL  R24 U26      ; R24 := U26
678 [-]: GETGLOBAL R25 K14      ; R25 := 0xb009bbc6
679 [-]: GETUPVAL  R26 U26      ; R26 := U26
680 [-]: GETTABLE  R26 R26 K129 ; R26 := R26["QueuedTransmission"]
681 [-]: CALL      R25 2 2      ; R25 := R25(R26)
682 [-]: SETTABLE  R24 K129 R25 ; R24["QueuedTransmission"] := R25
683 [-]: GETUPVAL  R24 U27      ; R24 := U27
684 [-]: SELF      R24 R24 K131 ; R25 := R24; R24 := R24[0xca33ff41]
685 [-]: GETUPVAL  R26 U26      ; R26 := U26
686 [-]: GETTABLE  R26 R26 K129 ; R26 := R26["QueuedTransmission"]
687 [-]: CALL      R24 3 3      ; R24,R25 := R24(R25,R26)
688 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
689 [-]: GETGLOBAL R27 K3       ; R27 := _T
690 [-]: GETTABLE  R27 R27 K132 ; R27 := R27["LypSyncDeco"]
691 [-]: CALL      R26 2 2      ; R26 := R26(R27)
692 [-]: TEST      R26 1        ; if R26 then PC := 707
693 [-]: JMP       707          ; PC := 707
694 [-]: GETUPVAL  R26 U26      ; R26 := U26
695 [-]: GETGLOBAL R27 K3       ; R27 := _T
696 [-]: GETTABLE  R27 R27 K132 ; R27 := R27["LypSyncDeco"]
697 [-]: SELF      R27 R27 K134 ; R28 := R27; R27 := R27[0x659d451f]
698 [-]: GETUPVAL  R29 U26      ; R29 := U26
699 [-]: GETTABLE  R29 R29 K129 ; R29 := R29["QueuedTransmission"]
700 [-]: SELF      R29 R29 K135 ; R30 := R29; R29 := R29[0xbd368681]
701 [-]: MOVE      R31 R25      ; R31 := R25
702 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
703 [-]: LOADKB    R30 0 0      ; R30 := false
704 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
705 [-]: SETTABLE  R26 K133 R27 ; R26["SoundInst"] := R27
706 [-]: JMP       717          ; PC := 717
707 [-]: GETUPVAL  R26 U26      ; R26 := U26
708 [-]: GETUPVAL  R27 U2       ; R27 := U2
709 [-]: GETTABLE  R27 R27 K134 ; R27 := R27[0x659d451f]
710 [-]: GETUPVAL  R28 U26      ; R28 := U26
711 [-]: GETTABLE  R28 R28 K129 ; R28 := R28["QueuedTransmission"]
712 [-]: SELF      R28 R28 K135 ; R29 := R28; R28 := R28[0xbd368681]
713 [-]: MOVE      R30 R25      ; R30 := R25
714 [-]: CALL      R28 3 0      ; R28,... := R28(R29,R30)
715 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
716 [-]: SETTABLE  R26 K133 R27 ; R26["SoundInst"] := R27
717 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
718 [-]: GETUPVAL  R27 U26      ; R27 := U26
719 [-]: GETTABLE  R27 R27 K133 ; R27 := R27["SoundInst"]
720 [-]: CALL      R26 2 2      ; R26 := R26(R27)
721 [-]: TEST      R26 1        ; if R26 then PC := 730
722 [-]: JMP       730          ; PC := 730
723 [-]: GETGLOBAL R26 K24      ; R26 := 0x89326c93
724 [-]: SELF      R26 R26 K136 ; R27 := R26; R26 := R26[0x0cde6e4f]
725 [-]: GETUPVAL  R28 U26      ; R28 := U26
726 [-]: GETTABLE  R28 R28 K133 ; R28 := R28["SoundInst"]
727 [-]: MOVE      R29 R24      ; R29 := R24
728 [-]: LOADKB    R30 1 0      ; R30 := true
729 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
730 [-]: GETUPVAL  R26 U26      ; R26 := U26
731 [-]: SETTABLE  R26 K9 K17   ; R26["Loader"] := nil
732 [-]: GETUPVAL  R26 U26      ; R26 := U26
733 [-]: SETTABLE  R26 K129 K17 ; R26["QueuedTransmission"] := nil
734 [-]: GETUPVAL  R26 U26      ; R26 := U26
735 [-]: GETTABLE  R26 R26 K137 ; R26 := R26["Playing"]
736 [-]: TEST      R26 0        ; if not R26 then PC := 767
737 [-]: JMP       767          ; PC := 767
738 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
739 [-]: GETUPVAL  R27 U26      ; R27 := U26
740 [-]: GETTABLE  R27 R27 K133 ; R27 := R27["SoundInst"]
741 [-]: CALL      R26 2 2      ; R26 := R26(R27)
742 [-]: TEST      R26 0        ; if not R26 then PC := 767
743 [-]: JMP       767          ; PC := 767
744 [-]: GETUPVAL  R26 U26      ; R26 := U26
745 [-]: SETTABLE  R26 K137 K11 ; R26["Playing"] := false
746 [-]: GETGLOBAL R26 K138     ; R26 := 0x4ec73e73
747 [-]: GETUPVAL  R27 U26      ; R27 := U26
748 [-]: GETTABLE  R27 R27 K139 ; R27 := R27["Callbacks"]
749 [-]: CALL      R26 2 2      ; R26 := R26(R27)
750 [-]: EQ        1 R26 K17    ; if R26 == nil then PC := 761
751 [-]: JMP       761          ; PC := 761
752 [-]: GETUPVAL  R26 U26      ; R26 := U26
753 [-]: GETTABLE  R26 R26 K139 ; R26 := R26["Callbacks"]
754 [-]: GETTABLE  R26 R26 K140 ; R26 := R26[1.000000]
755 [-]: EQ        1 R26 K97    ; if R26 == 0.000000 then PC := 761
756 [-]: JMP       761          ; PC := 761
757 [-]: GETUPVAL  R26 U26      ; R26 := U26
758 [-]: GETTABLE  R26 R26 K139 ; R26 := R26["Callbacks"]
759 [-]: GETTABLE  R26 R26 K140 ; R26 := R26[1.000000]
760 [-]: CALL      R26 1 1      ; R26()
761 [-]: GETGLOBAL R26 K141     ; R26 := 0x33bdd652
762 [-]: GETTABLE  R26 R26 K142 ; R26 := R26[0x9c1f3b5a]
763 [-]: GETUPVAL  R27 U26      ; R27 := U26
764 [-]: GETTABLE  R27 R27 K139 ; R27 := R27["Callbacks"]
765 [-]: CONST     R28 1        ; R28 := 1.000000
766 [-]: CALL      R26 3 1      ; R26(R27,R28)
767 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
768 [-]: GETUPVAL  R27 U26      ; R27 := U26
769 [-]: GETTABLE  R27 R27 K133 ; R27 := R27["SoundInst"]
770 [-]: CALL      R26 2 2      ; R26 := R26(R27)
771 [-]: TEST      R26 1        ; if R26 then PC := 778
772 [-]: JMP       778          ; PC := 778
773 [-]: GETUPVAL  R26 U26      ; R26 := U26
774 [-]: SETTABLE  R26 K137 K7  ; R26["Playing"] := true
775 [-]: GETUPVAL  R26 U28      ; R26 := U28
776 [-]: CALL      R26 1 1      ; R26()
777 [-]: JMP       813          ; PC := 813
778 [-]: GETUPVAL  R26 U26      ; R26 := U26
779 [-]: GETTABLE  R26 R26 K8   ; R26 := R26["IsLoading"]
780 [-]: TEST      R26 1        ; if R26 then PC := 813
781 [-]: JMP       813          ; PC := 813
782 [-]: GETUPVAL  R26 U26      ; R26 := U26
783 [-]: GETTABLE  R26 R26 K128 ; R26 := R26["DelayTime"]
784 [-]: LE        0 R26 K97    ; if R26 > 0.000000 then PC := 813
785 [-]: JMP       813          ; PC := 813
786 [-]: GETGLOBAL R26 K138     ; R26 := 0x4ec73e73
787 [-]: GETUPVAL  R27 U26      ; R27 := U26
788 [-]: GETTABLE  R27 R27 K143 ; R27 := R27["WaitingTransmissions"]
789 [-]: CALL      R26 2 2      ; R26 := R26(R27)
790 [-]: EQ        1 R26 K17    ; if R26 == nil then PC := 813
791 [-]: JMP       813          ; PC := 813
792 [-]: GETUPVAL  R26 U26      ; R26 := U26
793 [-]: GETGLOBAL R27 K141     ; R27 := 0x33bdd652
794 [-]: GETTABLE  R27 R27 K142 ; R27 := R27[0x9c1f3b5a]
795 [-]: GETUPVAL  R28 U26      ; R28 := U26
796 [-]: GETTABLE  R28 R28 K143 ; R28 := R28["WaitingTransmissions"]
797 [-]: CONST     R29 1        ; R29 := 1.000000
798 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
799 [-]: SETTABLE  R26 K129 R27 ; R26["QueuedTransmission"] := R27
800 [-]: GETUPVAL  R26 U26      ; R26 := U26
801 [-]: GETGLOBAL R27 K70      ; R27 := 0xbd496aa1
802 [-]: GETTABLE  R27 R27 K71  ; R27 := R27[0x42645da3]
803 [-]: NEWTABLE  R28 0 0      ; R28 := {}
804 [-]: GETUPVAL  R29 U26      ; R29 := U26
805 [-]: GETTABLE  R29 R29 K129 ; R29 := R29["QueuedTransmission"]
806 [-]: SELF      R29 R29 K28  ; R30 := R29; R29 := R29[0xed4e0128]
807 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
808 [-]: SETLIST   R28 0 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 0
809 [-]: CALL      R27 2 2      ; R27 := R27(R28)
810 [-]: SETTABLE  R26 K9 R27   ; R26["Loader"] := R27
811 [-]: GETUPVAL  R26 U26      ; R26 := U26
812 [-]: SETTABLE  R26 K8 K7    ; R26["IsLoading"] := true
813 [-]: GETUPVAL  R26 U26      ; R26 := U26
814 [-]: GETTABLE  R26 R26 K8   ; R26 := R26["IsLoading"]
815 [-]: TEST      R26 1        ; if R26 then PC := 829
816 [-]: JMP       829          ; PC := 829
817 [-]: GETUPVAL  R26 U26      ; R26 := U26
818 [-]: GETTABLE  R26 R26 K128 ; R26 := R26["DelayTime"]
819 [-]: LE        0 R26 K97    ; if R26 > 0.000000 then PC := 829
820 [-]: JMP       829          ; PC := 829
821 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
822 [-]: GETUPVAL  R27 U26      ; R27 := U26
823 [-]: GETTABLE  R27 R27 K133 ; R27 := R27["SoundInst"]
824 [-]: CALL      R26 2 2      ; R26 := R26(R27)
825 [-]: TEST      R26 0        ; if not R26 then PC := 829
826 [-]: JMP       829          ; PC := 829
827 [-]: GETGLOBAL R26 K3       ; R26 := _T
828 [-]: SETTABLE  R26 K132 K17 ; R26["LypSyncDeco"] := nil
829 [-]: GETUPVAL  R26 U29      ; R26 := U29
830 [-]: GETTABLE  R26 R26 K144 ; R26 := R26["Avatar"]
831 [-]: EQ        1 R26 K17    ; if R26 == nil then PC := 839
832 [-]: JMP       839          ; PC := 839
833 [-]: GETUPVAL  R26 U29      ; R26 := U29
834 [-]: GETTABLE  R26 R26 K144 ; R26 := R26["Avatar"]
835 [-]: SELF      R26 R26 K145 ; R27 := R26; R26 := R26[0x98776060]
836 [-]: GETUPVAL  R28 U29      ; R28 := U29
837 [-]: GETTABLE  R28 R28 K146 ; R28 := R28["TargetPos"]
838 [-]: CALL      R26 3 1      ; R26(R27,R28)
839 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
840 [-]: GETGLOBAL R27 K44      ; R27 := 0xbe190284
841 [-]: CALL      R26 2 2      ; R26 := R26(R27)
842 [-]: TEST      R26 1        ; if R26 then PC := 853
843 [-]: JMP       853          ; PC := 853
844 [-]: GETUPVAL  R26 U30      ; R26 := U30
845 [-]: EQ        1 R26 K17    ; if R26 == nil then PC := 853
846 [-]: JMP       853          ; PC := 853
847 [-]: GETUPVAL  R26 U30      ; R26 := U30
848 [-]: LOADNIL   R27 R27      ; R27 := nil
849 [-]: SETUPVAL  R27 U30      ; U82 := R30
850 [-]: GETUPVAL  R27 U31      ; R27 := U31
851 [-]: MOVE      R28 R26      ; R28 := R26
852 [-]: CALL      R27 2 1      ; R27(R28)
853 [-]: GETGLOBAL R27 K2       ; R27 := 0x7b998233
854 [-]: GETGLOBAL R28 K24      ; R28 := 0x89326c93
855 [-]: CALL      R27 2 2      ; R27 := R27(R28)
856 [-]: TEST      R27 1        ; if R27 then PC := 932
857 [-]: JMP       932          ; PC := 932
858 [-]: GETUPVAL  R27 U32      ; R27 := U32
859 [-]: GETTABLE  R27 R27 K147 ; R27 := R27["Timer"]
860 [-]: LE        0 K97 R27    ; if 0.000000 > R27 then PC := 932
861 [-]: JMP       932          ; PC := 932
862 [-]: GETGLOBAL R27 K24      ; R27 := 0x89326c93
863 [-]: SELF      R27 R27 K148 ; R28 := R27; R27 := R27[0x7c1a0374]
864 [-]: CALL      R27 2 2      ; R27 := R27(R28)
865 [-]: GETGLOBAL R28 K2       ; R28 := 0x7b998233
866 [-]: MOVE      R29 R27      ; R29 := R27
867 [-]: CALL      R28 2 2      ; R28 := R28(R29)
868 [-]: TEST      R28 1        ; if R28 then PC := 932
869 [-]: JMP       932          ; PC := 932
870 [-]: GETUPVAL  R28 U32      ; R28 := U32
871 [-]: GETUPVAL  R29 U32      ; R29 := U32
872 [-]: GETTABLE  R29 R29 K147 ; R29 := R29["Timer"]
873 [-]: GETGLOBAL R30 K99      ; R30 := 0x67652851
874 [-]: CALL      R30 1 2      ; R30 := R30()
875 [-]: ADD       R29 R29 R30  ; R29 := R29 + R30
876 [-]: SETTABLE  R28 K147 R29 ; R28["Timer"] := R29
877 [-]: GETUPVAL  R28 U32      ; R28 := U32
878 [-]: GETTABLE  R28 R28 K147 ; R28 := R28["Timer"]
879 [-]: GETUPVAL  R29 U32      ; R29 := U32
880 [-]: GETTABLE  R29 R29 K149 ; R29 := R29["InTime"]
881 [-]: LE        0 R28 R29    ; if R28 > R29 then PC := 894
882 [-]: JMP       894          ; PC := 894
883 [-]: GETUPVAL  R28 U32      ; R28 := U32
884 [-]: GETTABLE  R28 R28 K147 ; R28 := R28["Timer"]
885 [-]: GETUPVAL  R29 U32      ; R29 := U32
886 [-]: GETTABLE  R29 R29 K149 ; R29 := R29["InTime"]
887 [-]: DIV       R28 R28 R29  ; R28 := R28 / R29
888 [-]: SELF      R29 R27 K150 ; R30 := R27; R29 := R27[0xb6df3e50]
889 [-]: GETUPVAL  R31 U32      ; R31 := U32
890 [-]: GETTABLE  R31 R31 K151 ; R31 := R31["FinalVal"]
891 [-]: MUL       R31 R28 R31  ; R31 := R28 * R31
892 [-]: CALL      R29 3 1      ; R29(R30,R31)
893 [-]: JMP       932          ; PC := 932
894 [-]: GETUPVAL  R29 U32      ; R29 := U32
895 [-]: GETTABLE  R29 R29 K147 ; R29 := R29["Timer"]
896 [-]: GETUPVAL  R30 U32      ; R30 := U32
897 [-]: GETTABLE  R30 R30 K149 ; R30 := R30["InTime"]
898 [-]: GETUPVAL  R31 U32      ; R31 := U32
899 [-]: GETTABLE  R31 R31 K152 ; R31 := R31["OutTime"]
900 [-]: ADD       R30 R30 R31  ; R30 := R30 + R31
901 [-]: LE        0 R29 R30    ; if R29 > R30 then PC := 927
902 [-]: JMP       927          ; PC := 927
903 [-]: GETUPVAL  R29 U32      ; R29 := U32
904 [-]: GETTABLE  R29 R29 K153 ; R29 := R29["FullCallback"]
905 [-]: EQ        1 R29 K17    ; if R29 == nil then PC := 912
906 [-]: JMP       912          ; PC := 912
907 [-]: GETUPVAL  R29 U32      ; R29 := U32
908 [-]: GETTABLE  R29 R29 K154 ; R29 := R29[0x91b51300]
909 [-]: CALL      R29 1 1      ; R29()
910 [-]: GETUPVAL  R29 U32      ; R29 := U32
911 [-]: SETTABLE  R29 K153 K17 ; R29["FullCallback"] := nil
912 [-]: GETUPVAL  R29 U32      ; R29 := U32
913 [-]: GETTABLE  R29 R29 K147 ; R29 := R29["Timer"]
914 [-]: GETUPVAL  R30 U32      ; R30 := U32
915 [-]: GETTABLE  R30 R30 K149 ; R30 := R30["InTime"]
916 [-]: SUB       R29 R29 R30  ; R29 := R29 - R30
917 [-]: GETUPVAL  R30 U32      ; R30 := U32
918 [-]: GETTABLE  R30 R30 K152 ; R30 := R30["OutTime"]
919 [-]: DIV       R29 R29 R30  ; R29 := R29 / R30
920 [-]: SUB       R29 K140 R29 ; R29 := 1.000000 - R29
921 [-]: SELF      R30 R27 K150 ; R31 := R27; R30 := R27[0xb6df3e50]
922 [-]: GETUPVAL  R32 U32      ; R32 := U32
923 [-]: GETTABLE  R32 R32 K151 ; R32 := R32["FinalVal"]
924 [-]: MUL       R32 R29 R32  ; R32 := R29 * R32
925 [-]: CALL      R30 3 1      ; R30(R31,R32)
926 [-]: JMP       932          ; PC := 932
927 [-]: GETUPVAL  R30 U32      ; R30 := U32
928 [-]: SETTABLE  R30 K147 K102; R30["Timer"] := -1.000000
929 [-]: SELF      R30 R27 K150 ; R31 := R27; R30 := R27[0xb6df3e50]
930 [-]: CONST     R32 0        ; R32 := 0.000000
931 [-]: CALL      R30 3 1      ; R30(R31,R32)
932 [-]: GETGLOBAL R30 K2       ; R30 := 0x7b998233
933 [-]: GETGLOBAL R31 K24      ; R31 := 0x89326c93
934 [-]: CALL      R30 2 2      ; R30 := R30(R31)
935 [-]: TEST      R30 1        ; if R30 then PC := 963
936 [-]: JMP       963          ; PC := 963
937 [-]: GETGLOBAL R30 K3       ; R30 := _T
938 [-]: GETTABLE  R30 R30 K155 ; R30 := R30["QuestStartCinPlaying"]
939 [-]: TEST      R30 1        ; if R30 then PC := 963
940 [-]: JMP       963          ; PC := 963
941 [-]: GETGLOBAL R30 K24      ; R30 := 0x89326c93
942 [-]: SELF      R30 R30 K148 ; R31 := R30; R30 := R30[0x7c1a0374]
943 [-]: CALL      R30 2 2      ; R30 := R30(R31)
944 [-]: GETGLOBAL R31 K2       ; R31 := 0x7b998233
945 [-]: MOVE      R32 R30      ; R32 := R30
946 [-]: CALL      R31 2 2      ; R31 := R31(R32)
947 [-]: TEST      R31 1        ; if R31 then PC := 963
948 [-]: JMP       963          ; PC := 963
949 [-]: SELF      R31 R30 K156 ; R32 := R30; R31 := R30[0x65c7544c]
950 [-]: CALL      R31 2 2      ; R31 := R31(R32)
951 [-]: GETUPVAL  R32 U33      ; R32 := U33
952 [-]: EQ        1 R32 K17    ; if R32 == nil then PC := 957
953 [-]: JMP       957          ; PC := 957
954 [-]: GETUPVAL  R32 U33      ; R32 := U33
955 [-]: EQ        1 R32 R31    ; if R32 == R31 then PC := 963
956 [-]: JMP       963          ; PC := 963
957 [-]: SETUPVAL  R31 U33      ; U82 := R33
958 [-]: GETGLOBAL R32 K88      ; R32 := 0x9ba7909f
959 [-]: SELF      R32 R32 K157 ; R33 := R32; R32 := R32[0x103453dc]
960 [-]: MUL       R34 R31 R31  ; R34 := R31 * R31
961 [-]: SUB       R34 K140 R34 ; R34 := 1.000000 - R34
962 [-]: CALL      R32 3 1      ; R32(R33,R34)
963 [-]: GETGLOBAL R32 K3       ; R32 := _T
964 [-]: GETTABLE  R32 R32 K158 ; R32 := R32["DelayedCall"]
965 [-]: EQ        1 R32 K17    ; if R32 == nil then PC := 972
966 [-]: JMP       972          ; PC := 972
967 [-]: GETGLOBAL R32 K3       ; R32 := _T
968 [-]: GETTABLE  R32 R32 K159 ; R32 := R32[0xc3ff3268]
969 [-]: CALL      R32 1 1      ; R32()
970 [-]: GETGLOBAL R32 K3       ; R32 := _T
971 [-]: SETTABLE  R32 K158 K17 ; R32["DelayedCall"] := nil
972 [-]: GETUPVAL  R32 U34      ; R32 := U34
973 [-]: TEST      R32 0        ; if not R32 then PC := 984
974 [-]: JMP       984          ; PC := 984
975 [-]: GETGLOBAL R32 K3       ; R32 := _T
976 [-]: GETTABLE  R32 R32 K160 ; R32 := R32["SquadOverlay"]
977 [-]: TEST      R32 0        ; if not R32 then PC := 984
978 [-]: JMP       984          ; PC := 984
979 [-]: GETUPVAL  R32 U35      ; R32 := U35
980 [-]: GETUPVAL  R33 U34      ; R33 := U34
981 [-]: CALL      R32 2 1      ; R32(R33)
982 [-]: LOADNIL   R32 R32      ; R32 := nil
983 [-]: SETUPVAL  R32 U34      ; U82 := R34
984 [-]: GETUPVAL  R32 U36      ; R32 := U36
985 [-]: CALL      R32 1 1      ; R32()
986 [-]: GETGLOBAL R32 K3       ; R32 := _T
987 [-]: GETTABLE  R32 R32 K161 ; R32 := R32["PendingScenarioHubName"]
988 [-]: TEST      R32 0        ; if not R32 then PC := 1012
989 [-]: JMP       1012         ; PC := 1012
990 [-]: GETGLOBAL R32 K3       ; R32 := _T
991 [-]: GETTABLE  R32 R32 K162 ; R32 := R32["ScenarioHubStarted"]
992 [-]: TEST      R32 1        ; if R32 then PC := 1009
993 [-]: JMP       1009         ; PC := 1009
994 [-]: GETGLOBAL R32 K51      ; R32 := 0x3d106989
995 [-]: LOADK     R33 K163     ; R33 := "Connecting to scenario hub "
996 [-]: GETGLOBAL R34 K3       ; R34 := _T
997 [-]: GETTABLE  R34 R34 K161 ; R34 := R34["PendingScenarioHubName"]
998 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
999 [-]: CALL      R32 2 1      ; R32(R33)
1000 [-]: GETGLOBAL R32 K3       ; R32 := _T
1001 [-]: SETTABLE  R32 K162 K7  ; R32["ScenarioHubStarted"] := true
1002 [-]: GETGLOBAL R32 K44      ; R32 := 0xbe190284
1003 [-]: SELF      R32 R32 K164 ; R33 := R32; R32 := R32[0xf53075e2]
1004 [-]: GETGLOBAL R34 K165     ; R34 := 0x0469f296
1005 [-]: GETGLOBAL R35 K3       ; R35 := _T
1006 [-]: GETTABLE  R35 R35 K161 ; R35 := R35["PendingScenarioHubName"]
1007 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
1008 [-]: CALL      R32 0 1      ; R32(R33,...)
1009 [-]: GETGLOBAL R32 K3       ; R32 := _T
1010 [-]: SETTABLE  R32 K161 K17 ; R32["PendingScenarioHubName"] := nil
1011 [-]: JMP       1022         ; PC := 1022
1012 [-]: GETGLOBAL R32 K3       ; R32 := _T
1013 [-]: GETTABLE  R32 R32 K166 ; R32 := R32["PendingScenarioHubShutdown"]
1014 [-]: TEST      R32 0        ; if not R32 then PC := 1022
1015 [-]: JMP       1022         ; PC := 1022
1016 [-]: GETGLOBAL R32 K3       ; R32 := _T
1017 [-]: SETTABLE  R32 K166 K17 ; R32["PendingScenarioHubShutdown"] := nil
1018 [-]: GETGLOBAL R32 K44      ; R32 := 0xbe190284
1019 [-]: SELF      R32 R32 K167 ; R33 := R32; R32 := R32[0x39c667a9]
1020 [-]: LOADKB    R34 1 0      ; R34 := true
1021 [-]: CALL      R32 3 1      ; R32(R33,R34)
1022 [-]: GETGLOBAL R32 K2       ; R32 := 0x7b998233
1023 [-]: GETGLOBAL R33 K168     ; R33 := 0x83f4e77c
1024 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1025 [-]: TEST      R32 1        ; if R32 then PC := 1053
1026 [-]: JMP       1053         ; PC := 1053
1027 [-]: GETGLOBAL R32 K169     ; R32 := 0xe7f2b02f
1028 [-]: SELF      R32 R32 K170 ; R33 := R32; R32 := R32[0xeaad7523]
1029 [-]: GETGLOBAL R34 K168     ; R34 := 0x83f4e77c
1030 [-]: SELF      R34 R34 K171 ; R35 := R34; R34 := R34[0xac0a30b1]
1031 [-]: CALL      R34 2 2      ; R34 := R34(R35)
1032 [-]: TEST      R34 0        ; if not R34 then PC := 1052
1033 [-]: JMP       1052         ; PC := 1052
1034 [-]: GETGLOBAL R34 K2       ; R34 := 0x7b998233
1035 [-]: GETGLOBAL R35 K44      ; R35 := 0xbe190284
1036 [-]: CALL      R34 2 2      ; R34 := R34(R35)
1037 [-]: TEST      R34 1        ; if R34 then PC := 1050
1038 [-]: JMP       1050         ; PC := 1050
1039 [-]: GETGLOBAL R34 K44      ; R34 := 0xbe190284
1040 [-]: SELF      R34 R34 K172 ; R35 := R34; R34 := R34[0xf2deaf69]
1041 [-]: GETGLOBAL R36 K173     ; R36 := gLotusAttractModeGameRulesType
1042 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
1043 [-]: TEST      R34 1        ; if R34 then PC := 1052
1044 [-]: JMP       1052         ; PC := 1052
1045 [-]: GETGLOBAL R34 K44      ; R34 := 0xbe190284
1046 [-]: SELF      R34 R34 K172 ; R35 := R34; R34 := R34[0xf2deaf69]
1047 [-]: GETGLOBAL R36 K174     ; R36 := gLotusHubGameRulesType
1048 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
1049 [-]: JMP       1052         ; PC := 1052
1050 [-]: LOADKB    R34 0 1      ; R34 := false; PC := 1051
1051 [-]: LOADKB    R34 1 0      ; R34 := true
1052 [-]: CALL      R32 3 1      ; R32(R33,R34)
1053 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 5192
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: CONST     R1 1         ; R1 := 1.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: CONST     R3 1         ; R3 := 1.000000
  5 [-]: FORPREP   R1 12        ; R1 -= R3; PC := 12
  6 [-]: GETGLOBAL R5 K0        ; R5 := screenStack
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADKB    R5 1 0       ; R5 := true
 11 [-]: RETURN    R5 2         ; return R5
 12 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 13 [-]: LOADKB    R5 0 0       ; R5 := false
 14 [-]: RETURN    R5 2         ; return R5
 15 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5201
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LOADK     R3 K1        ; R3 := "ForceIntoStack()"
  4 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5206
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LOADK     R3 K1        ; R3 := "ForceOutOfStack()"
  4 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K2        ; R1 := screenStack
  7 [-]: LEN       R1 R1        ; R1 := # R1
  8 [-]: CONST     R2 1         ; R2 := 1.000000
  9 [-]: CONST     R3 -1        ; R3 := -1.000000
 10 [-]: FORPREP   R1 19        ; R1 -= R3; PC := 19
 11 [-]: GETGLOBAL R5 K2        ; R5 := screenStack
 12 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 13 [-]: EQ        0 R5 R0      ; if R5 ~= R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R5 U1        ; R5 := U1
 16 [-]: MOVE      R6 R4        ; R6 := R4
 17 [-]: CALL      R5 2 1       ; R5(R6)
 18 [-]: JMP       20           ; PC := 20
 19 [-]: FORLOOP   R1 11        ; R1 += R3; if R1 <= R2 then begin PC := 11; R4 := R1 end
 20 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5218
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LOADK     R2 K1        ; R2 := "ForceClearChildMovie()"
  4 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: SETGLOBAL R0 K2        ; mChildMovie := R0
  8 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 5224
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := mOpenScreenAsyncInfo
  2 [-]: SETTABLE  R1 K1 K2     ; R1["IsLoading"] := false
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x3d106989
  4 [-]: LOADK     R2 K4        ; R2 := "Background: MovieLoaded"
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CONST     R2 0         ; R2 := 0.000000
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K0        ; R2 := mOpenScreenAsyncInfo
 11 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Callback"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K0        ; R1 := mOpenScreenAsyncInfo
 16 [-]: GETTABLE  R1 R1 K7     ; R1 := R1[0x75afeb61]
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 5235
; #Upvalues:       4
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x3d106989
  2 [-]: GETUPVAL  R5 U0        ; R5 := U0
  3 [-]: LOADK     R6 K1        ; R6 := "OpenScreen(screenName="
  4 [-]: GETGLOBAL R7 K2        ; R7 := 0x64fb1586
  5 [-]: MOVE      R8 R0        ; R8 := R0
  6 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  7 [-]: LOADK     R8 K3        ; R8 := ", openFromMovie="
  8 [-]: GETGLOBAL R9 K2        ; R9 := 0x64fb1586
  9 [-]: MOVE      R10 R1       ; R10 := R1
 10 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 11 [-]: LOADK     R10 K4       ; R10 := ", ignoreIfOpen="
 12 [-]: GETGLOBAL R11 K2       ; R11 := 0x64fb1586
 13 [-]: MOVE      R12 R2       ; R12 := R2
 14 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 15 [-]: LOADK     R12 K5       ; R12 := ", openAsAsync="
 16 [-]: GETGLOBAL R13 K2       ; R13 := 0x64fb1586
 17 [-]: MOVE      R14 R3       ; R14 := R3
 18 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 19 [-]: LOADK     R14 K6       ; R14 := ")"
 20 [-]: CONCAT    R5 R5 R14    ; R5 := R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11 .. R12 .. R13 .. R14
 21 [-]: CALL      R4 2 1       ; R4(R5)
 22 [-]: GETGLOBAL R4 K7        ; R4 := movies
 23 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 24 [-]: EQ        1 R4 K8      ; if R4 == nil then PC := 100
 25 [-]: JMP       100          ; PC := 100
 26 [-]: GETUPVAL  R4 U1        ; R4 := U1
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 0         ; if not R4 then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: TEST      R2 0         ; if not R2 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0x9ba7909f
 35 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xbcfb64ab]
 36 [-]: GETGLOBAL R6 K7        ; R6 := movies
 37 [-]: GETTABLE  R6 R6 R0     ; R6 := R6[R0]
 38 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 39 [-]: GETGLOBAL R5 K11       ; R5 := 0x7b998233
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: TEST      R5 1         ; if R5 then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: SELF      R5 R4 K12    ; R6 := R4; R5 := R4[0x32302b4a]
 45 [-]: CALL      R5 2 1       ; R5(R6)
 46 [-]: LOADNIL   R5 R5        ; R5 := nil
 47 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 48 [-]: MOVE      R7 R1        ; R7 := R1
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: TEST      R6 1         ; if R6 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R5 R1        ; R5 := R1
 53 [-]: JMP       67           ; PC := 67
 54 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 55 [-]: GETGLOBAL R7 K13       ; R7 := mChildMovie
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: TEST      R6 1         ; if R6 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: GETGLOBAL R5 K13       ; R5 := mChildMovie
 60 [-]: JMP       67           ; PC := 67
 61 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 62 [-]: GETGLOBAL R7 K14       ; R7 := 0xae91e43b
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: TEST      R6 1         ; if R6 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: GETGLOBAL R5 K14       ; R5 := 0xae91e43b
 67 [-]: TEST      R3 0         ; if not R3 then PC := 85
 68 [-]: JMP       85           ; PC := 85
 69 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 70 [-]: MOVE      R7 R5        ; R7 := R5
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: TEST      R6 1         ; if R6 then PC := 111
 73 [-]: JMP       111          ; PC := 111
 74 [-]: GETUPVAL  R6 U2        ; R6 := U2
 75 [-]: CONST     R7 2         ; R7 := 2.000000
 76 [-]: CALL      R6 2 1       ; R6(R7)
 77 [-]: GETGLOBAL R6 K15       ; R6 := mOpenScreenAsyncInfo
 78 [-]: SETTABLE  R6 K16 K17   ; R6["IsLoading"] := true
 79 [-]: SELF      R6 R5 K18    ; R7 := R5; R6 := R5[0xbf3e8f54]
 80 [-]: GETGLOBAL R8 K7        ; R8 := movies
 81 [-]: GETTABLE  R8 R8 R0     ; R8 := R8[R0]
 82 [-]: LOADK     R9 K19       ; R9 := "OnMovieLoaded"
 83 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 84 [-]: JMP       111          ; PC := 111
 85 [-]: LOADNIL   R6 R6        ; R6 := nil
 86 [-]: GETGLOBAL R7 K11       ; R7 := 0x7b998233
 87 [-]: MOVE      R8 R5        ; R8 := R5
 88 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 89 [-]: TEST      R7 1         ; if R7 then PC := 96
 90 [-]: JMP       96           ; PC := 96
 91 [-]: SELF      R7 R5 K20    ; R8 := R5; R7 := R5[0x1fd6abd0]
 92 [-]: GETGLOBAL R9 K7        ; R9 := movies
 93 [-]: GETTABLE  R9 R9 R0     ; R9 := R9[R0]
 94 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 95 [-]: MOVE      R6 R7        ; R6 := R7
 96 [-]: GETUPVAL  R7 U3        ; R7 := U3
 97 [-]: CALL      R7 1 1       ; R7()
 98 [-]: RETURN    R6 2         ; return R6
 99 [-]: JMP       111          ; PC := 111
100 [-]: GETGLOBAL R7 K0        ; R7 := 0x3d106989
101 [-]: LOADK     R8 K21       ; R8 := "ERROR: Tried to open unrecognized screen ["
102 [-]: GETGLOBAL R9 K2        ; R9 := 0x64fb1586
103 [-]: MOVE      R10 R0       ; R10 := R0
104 [-]: CALL      R9 2 2       ; R9 := R9(R10)
105 [-]: LOADK     R10 K22      ; R10 := "] Check your spelling."
106 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
107 [-]: CALL      R7 2 1       ; R7(R8)
108 [-]: GETGLOBAL R7 K23       ; R7 := 0x60cce7b4
109 [-]: LOADKB    R8 0 0       ; R8 := false
110 [-]: CALL      R7 2 1       ; R7(R8)
111 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 5280
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K0        ; R1 := mOpenScreenAsyncInfo
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ScreenName"]
  4 [-]: GETGLOBAL R2 K0        ; R2 := mOpenScreenAsyncInfo
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["OpenFromMovie"]
  6 [-]: GETGLOBAL R3 K0        ; R3 := mOpenScreenAsyncInfo
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["IgnoreIfOpen"]
  8 [-]: LOADKB    R4 1 0       ; R4 := true
  9 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 5284
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
  2 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["IsLoading"]
  3 [-]: TEST      R4 1         ; if R4 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 0         ; if not R4 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 12 [-]: SETTABLE  R4 K4 R0     ; R4[0x32302b4a] := R0
 13 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 14 [-]: SETTABLE  R4 K5 R1     ; R4["OpenFromMovie"] := R1
 15 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 16 [-]: SETTABLE  R4 K6 R2     ; R4["IgnoreIfOpen"] := R2
 17 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 18 [-]: SETTABLE  R4 K7 R3     ; R4["Callback"] := R3
 19 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 20 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xe4162eed]
 21 [-]: LOADK     R6 K9        ; R6 := "OpenScreenAsyncContextReset"
 22 [-]: LOADK     R7 K10       ; R7 := ""
 23 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 24 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 5298
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mAbortingQuickMatch
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x83f4e77c
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xac0a30b1]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: LOADKB    R0 1 0       ; R0 := true
 10 [-]: SETGLOBAL R0 K0        ; mAbortingQuickMatch := R0
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: CONST     R1 1         ; R1 := 1.000000
 13 [-]: CALL      R0 2 1       ; R0(R1)
 14 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 5305
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 5309
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x609b196e]
  9 [-]: GETGLOBAL R3 K1        ; R3 := screenStack
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
 12 [-]: CALL      R1 0 1       ; R1(R2,...)
 13 [-]: GETGLOBAL R1 K2        ; R1 := 0x9ba7909f
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbcfb64ab]
 15 [-]: GETGLOBAL R3 K4        ; R3 := movies
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0xe4162eed]
 24 [-]: LOADK     R4 K7        ; R4 := "TransitionOut"
 25 [-]: LOADK     R5 K8        ; R5 := ""
 26 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 5320
; #Upvalues:       8
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xd342d13d]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: TEST      R2 0         ; if not R2 then PC := 31
  5 [-]: JMP       31           ; PC := 31
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xcf1fcba4]
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: TEST      R2 1         ; if R2 then PC := 31
 10 [-]: JMP       31           ; PC := 31
 11 [-]: GETGLOBAL R2 K2        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["InSimulacrum"]
 13 [-]: TEST      R2 1         ; if R2 then PC := 31
 14 [-]: JMP       31           ; PC := 31
 15 [-]: GETGLOBAL R2 K4        ; R2 := 0x9ba7909f
 16 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xbcfb64ab]
 17 [-]: GETGLOBAL R4 K6        ; R4 := movies
 18 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 19 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 20 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 0         ; if not R3 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R3 K4        ; R3 := 0x9ba7909f
 26 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x6dd7aa66]
 27 [-]: GETGLOBAL R5 K6        ; R5 := movies
 28 [-]: GETTABLE  R5 R5 R0     ; R5 := R5[R0]
 29 [-]: CALL      R3 3 1       ; R3(R4,R5)
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R3 K9        ; R3 := 0xe7f2b02f
 32 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x0b6ebd5b]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 0         ; if not R3 then PC := 58
 35 [-]: JMP       58           ; PC := 58
 36 [-]: CONST     R3 1         ; R3 := 1.000000
 37 [-]: GETGLOBAL R4 K11       ; R4 := screenStack
 38 [-]: LEN       R4 R4        ; R4 := # R4
 39 [-]: CONST     R5 1         ; R5 := 1.000000
 40 [-]: FORPREP   R3 57        ; R3 -= R5; PC := 57
 41 [-]: GETUPVAL  R7 U1        ; R7 := U1
 42 [-]: GETGLOBAL R8 K11       ; R8 := screenStack
 43 [-]: GETTABLE  R8 R8 R6     ; R8 := R8[R6]
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: TEST      R7 0         ; if not R7 then PC := 57
 46 [-]: JMP       57           ; PC := 57
 47 [-]: GETGLOBAL R7 K12       ; R7 := mQueuedGoToScreen
 48 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 51 [-]: SETTABLE  R7 K14 R0    ; R7["screen"] := R0
 52 [-]: SETTABLE  R7 K15 R1    ; R7["callback"] := R1
 53 [-]: SETGLOBAL R7 K12       ; mQueuedGoToScreen := R7
 54 [-]: GETUPVAL  R7 U2        ; R7 := U2
 55 [-]: CALL      R7 1 1       ; R7()
 56 [-]: RETURN    R0 1         ; return 
 57 [-]: FORLOOP   R3 41        ; R3 += R5; if R3 <= R4 then begin PC := 41; R6 := R3 end
 58 [-]: GETGLOBAL R7 K11       ; R7 := screenStack
 59 [-]: GETGLOBAL R8 K11       ; R8 := screenStack
 60 [-]: LEN       R8 R8        ; R8 := # R8
 61 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 62 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: GETGLOBAL R8 K16       ; R8 := 0x3d106989
 66 [-]: GETUPVAL  R9 U3        ; R9 := U3
 67 [-]: LOADK     R10 K17      ; R10 := "GoToScreen(screenName="
 68 [-]: GETGLOBAL R11 K18      ; R11 := 0x64fb1586
 69 [-]: MOVE      R12 R0       ; R12 := R0
 70 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 71 [-]: LOADK     R12 K19      ; R12 := ")"
 72 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 73 [-]: CALL      R8 2 1       ; R8(R9)
 74 [-]: GETGLOBAL R8 K20       ; R8 := 0xae91e43b
 75 [-]: GETGLOBAL R9 K7        ; R9 := 0x7b998233
 76 [-]: GETGLOBAL R10 K21      ; R10 := mChildMovie
 77 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 78 [-]: TEST      R9 1         ; if R9 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: GETGLOBAL R8 K21       ; R8 := mChildMovie
 81 [-]: GETGLOBAL R9 K7        ; R9 := 0x7b998233
 82 [-]: GETGLOBAL R10 K6       ; R10 := movies
 83 [-]: GETTABLE  R10 R10 R0   ; R10 := R10[R0]
 84 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 85 [-]: TEST      R9 1         ; if R9 then PC := 132
 86 [-]: JMP       132          ; PC := 132
 87 [-]: GETUPVAL  R9 U4        ; R9 := U4
 88 [-]: MOVE      R10 R0       ; R10 := R0
 89 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 90 [-]: TEST      R9 0         ; if not R9 then PC := 111
 91 [-]: JMP       111          ; PC := 111
 92 [-]: GETGLOBAL R9 K4        ; R9 := 0x9ba7909f
 93 [-]: SELF      R9 R9 K5     ; R10 := R9; R9 := R9[0xbcfb64ab]
 94 [-]: GETGLOBAL R11 K6       ; R11 := movies
 95 [-]: GETTABLE  R11 R11 R0   ; R11 := R11[R0]
 96 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 97 [-]: GETGLOBAL R10 K7       ; R10 := 0x7b998233
 98 [-]: MOVE      R11 R9       ; R11 := R9
 99 [-]: CALL      R10 2 2      ; R10 := R10(R11)
100 [-]: TEST      R10 1        ; if R10 then PC := 104
101 [-]: JMP       104          ; PC := 104
102 [-]: SELF      R10 R9 K22   ; R11 := R9; R10 := R9[0x32302b4a]
103 [-]: CALL      R10 2 1      ; R10(R11)
104 [-]: GETUPVAL  R10 U5       ; R10 := U5
105 [-]: GETUPVAL  R11 U6       ; R11 := U6
106 [-]: GETTABLE  R11 R11 K23  ; R11 := R11[0x609b196e]
107 [-]: GETGLOBAL R12 K11      ; R12 := screenStack
108 [-]: MOVE      R13 R0       ; R13 := R0
109 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
110 [-]: CALL      R10 0 1      ; R10(R11,...)
111 [-]: GETGLOBAL R10 K7       ; R10 := 0x7b998233
112 [-]: GETGLOBAL R11 K21      ; R11 := mChildMovie
113 [-]: CALL      R10 2 2      ; R10 := R10(R11)
114 [-]: TEST      R10 1        ; if R10 then PC := 126
115 [-]: JMP       126          ; PC := 126
116 [-]: EQ        0 R0 K24     ; if R0 ~= "Menu" then PC := 121
117 [-]: JMP       121          ; PC := 121
118 [-]: LOADNIL   R10 R10      ; R10 := nil
119 [-]: SETGLOBAL R10 K21      ; mChildMovie := R10
120 [-]: JMP       126          ; PC := 126
121 [-]: GETGLOBAL R10 K21      ; R10 := mChildMovie
122 [-]: SELF      R10 R10 K25  ; R11 := R10; R10 := R10[0xe4162eed]
123 [-]: LOADK     R12 K26      ; R12 := "TransitionOut"
124 [-]: LOADK     R13 K27      ; R13 := ""
125 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
126 [-]: GETUPVAL  R10 U7       ; R10 := U7
127 [-]: MOVE      R11 R0       ; R11 := R0
128 [-]: CALL      R10 2 1      ; R10(R11)
129 [-]: SETGLOBAL R0 K28       ; queuedMovie := R0
130 [-]: SETGLOBAL R1 K29       ; queuedMovieCallback := R1
131 [-]: JMP       143          ; PC := 143
132 [-]: GETGLOBAL R10 K16      ; R10 := 0x3d106989
133 [-]: LOADK     R11 K30      ; R11 := "ERROR: Tried to open unrecognized screen ["
134 [-]: GETGLOBAL R12 K18      ; R12 := 0x64fb1586
135 [-]: MOVE      R13 R0       ; R13 := R0
136 [-]: CALL      R12 2 2      ; R12 := R12(R13)
137 [-]: LOADK     R13 K31      ; R13 := "] Check your spelling."
138 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
139 [-]: CALL      R10 2 1      ; R10(R11)
140 [-]: GETGLOBAL R10 K32      ; R10 := 0x60cce7b4
141 [-]: LOADKB    R11 0 0      ; R11 := false
142 [-]: CALL      R10 2 1      ; R10(R11)
143 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 5381
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := screenStack
  2 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  5 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x3d106989
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: LOADK     R4 K2        ; R4 := "ScreenOpened(screenName="
 11 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
 12 [-]: MOVE      R6 R0        ; R6 := R0
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: LOADK     R6 K4        ; R6 := ")"
 15 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 18 [-]: GETGLOBAL R3 K6        ; R3 := movies
 19 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 65
 22 [-]: JMP       65           ; PC := 65
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0x9ba7909f
 24 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xbcfb64ab]
 25 [-]: GETGLOBAL R4 K6        ; R4 := movies
 26 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 27 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 28 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 29 [-]: MOVE      R4 R2        ; R4 := R2
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: TEST      R3 1         ; if R3 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 34 [-]: GETGLOBAL R4 K9        ; R4 := mChildMovie
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: TEST      R3 1         ; if R3 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: EQ        0 R0 K10     ; if R0 ~= "Menu" then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADNIL   R3 R3        ; R3 := nil
 41 [-]: SETGLOBAL R3 K9        ; mChildMovie := R3
 42 [-]: JMP       48           ; PC := 48
 43 [-]: GETGLOBAL R3 K9        ; R3 := mChildMovie
 44 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xe4162eed]
 45 [-]: LOADK     R5 K12       ; R5 := "TransitionOut"
 46 [-]: LOADK     R6 K13       ; R6 := ""
 47 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 48 [-]: SETGLOBAL R2 K9        ; mChildMovie := R2
 49 [-]: GETUPVAL  R3 U1        ; R3 := U1
 50 [-]: MOVE      R4 R0        ; R4 := R0
 51 [-]: CALL      R3 2 1       ; R3(R4)
 52 [-]: JMP       76           ; PC := 76
 53 [-]: GETGLOBAL R3 K1        ; R3 := 0x3d106989
 54 [-]: LOADK     R4 K14       ; R4 := "ERROR: Screen opened called on ["
 55 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
 56 [-]: MOVE      R6 R0        ; R6 := R0
 57 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 58 [-]: LOADK     R6 K15       ; R6 := "], said screen doesn't exist."
 59 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 60 [-]: CALL      R3 2 1       ; R3(R4)
 61 [-]: GETGLOBAL R3 K16       ; R3 := 0x60cce7b4
 62 [-]: LOADKB    R4 0 0       ; R4 := false
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: JMP       76           ; PC := 76
 65 [-]: GETGLOBAL R3 K1        ; R3 := 0x3d106989
 66 [-]: LOADK     R4 K17       ; R4 := "ERROR: Tried to open unrecognized screen ["
 67 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
 68 [-]: MOVE      R6 R0        ; R6 := R0
 69 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 70 [-]: LOADK     R6 K18       ; R6 := "] Check your spelling."
 71 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 72 [-]: CALL      R3 2 1       ; R3(R4)
 73 [-]: GETGLOBAL R3 K16       ; R3 := 0x60cce7b4
 74 [-]: LOADKB    R4 0 0       ; R4 := false
 75 [-]: CALL      R3 2 1       ; R3(R4)
 76 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 5412
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := movies
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: RETURN    R1 2         ; return R1
  4 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 5416
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 1 0       ; R0 := {}
  2 [-]: LOADK     R1 K1        ; R1 := "Default"
  3 [-]: SETLIST   R0 1 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
  4 [-]: SETGLOBAL R0 K0        ; screenStack := R0
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 5421
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := screenStack
  2 [-]: GETGLOBAL R1 K0        ; R1 := screenStack
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  5 [-]: GETGLOBAL R1 K1        ; R1 := movies
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x9ba7909f
 14 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0xbcfb64ab]
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: MOVE      R2 R3        ; R2 := R3
 18 [-]: MOVE      R3 R2        ; R3 := R2
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: RETURN    R3 3         ; return R3,R4
 21 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 5431
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1[0xe4162eed]
  9 [-]: LOADK     R4 K2        ; R4 := "HandleCanBeClosed"
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: EQ        0 R2 K3      ; if R2 ~= true then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R3 K4        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: LOADKB    R4 1 0       ; R4 := true
 18 [-]: CALL      R3 2 1       ; R3(R4)
 19 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 5444
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: TEST      R1 1         ; if R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R1 K0        ; R1 := ""
  4 [-]: TEST      R0 1         ; if R0 then PC := 33
  5 [-]: JMP       33           ; PC := 33
  6 [-]: GETGLOBAL R2 K1        ; R2 := screenStack
  7 [-]: LEN       R2 R2        ; R2 := # R2
  8 [-]: CONST     R3 1         ; R3 := 1.000000
  9 [-]: CONST     R4 -1        ; R4 := -1.000000
 10 [-]: FORPREP   R2 32        ; R2 -= R4; PC := 32
 11 [-]: GETGLOBAL R6 K2        ; R6 := 0x9ba7909f
 12 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0xbcfb64ab]
 13 [-]: GETGLOBAL R8 K4        ; R8 := movies
 14 [-]: GETGLOBAL R9 K1        ; R9 := screenStack
 15 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 16 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 17 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 18 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 32
 19 [-]: JMP       32           ; PC := 32
 20 [-]: GETGLOBAL R7 K1        ; R7 := screenStack
 21 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 22 [-]: EQ        1 R7 K6      ; if R7 == "Default" then PC := 32
 23 [-]: JMP       32           ; PC := 32
 24 [-]: GETGLOBAL R7 K1        ; R7 := screenStack
 25 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 26 [-]: EQ        1 R7 K7      ; if R7 == "MainMenu" then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: SELF      R7 R6 K8     ; R8 := R6; R7 := R6[0xe4162eed]
 29 [-]: LOADK     R9 K9        ; R9 := "TransitionOut"
 30 [-]: MOVE      R10 R1       ; R10 := R1
 31 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 32 [-]: FORLOOP   R2 11        ; R2 += R4; if R2 <= R3 then begin PC := 11; R5 := R2 end
 33 [-]: LOADK     R7 K6        ; R7 := "Default"
 34 [-]: SETGLOBAL R7 K10       ; queuedMovie := R7
 35 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 36 [-]: LOADK     R8 K6        ; R8 := "Default"
 37 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 38 [-]: SETGLOBAL R7 K1        ; screenStack := R7
 39 [-]: GETGLOBAL R7 K2        ; R7 := 0x9ba7909f
 40 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0x7e17ae26]
 41 [-]: LOADK     R9 K12       ; R9 := "ScreenStackUpdated"
 42 [-]: CONST     R10 1        ; R10 := 1.000000
 43 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 44 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 5463
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 5467
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: CLOSURE   R3 0         ; R3 := closure(Function #146.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: SETTABLE  R2 K1 R3     ; R2["CanScreenBeClosedCallback"] := R3
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: LOADK     R3 K1        ; R3 := "CanScreenBeClosedCallback"
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #146.1:
;
; Name:            
; Defined at line: 5469
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 0         ; if not R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: LOADKB    R2 1 0       ; R2 := true
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: GETUPVAL  R3 U3        ; R3 := U3
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: SETTABLE  R1 K1 K2     ; R1["CanScreenBeClosedCallback"] := nil
 12 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 5480
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xe7f2b02f
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x0b6ebd5b]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETGLOBAL R3 K2        ; R3 := screenStack
  8 [-]: GETGLOBAL R4 K2        ; R4 := screenStack
  9 [-]: LEN       R4 R4        ; R4 := # R4
 10 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETGLOBAL R2 K3        ; R2 := mQueuedGoToPreviousScreen
 15 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: NEWTABLE  R2 0 1       ; R2 := {}
 18 [-]: SETTABLE  R2 K5 R0     ; R2[0x00000001] := R0
 19 [-]: SETGLOBAL R2 K3        ; mQueuedGoToPreviousScreen := R2
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: CALL      R2 1 1       ; R2()
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0x3d106989
 24 [-]: GETUPVAL  R3 U2        ; R3 := U2
 25 [-]: LOADK     R4 K7        ; R4 := "GoToPreviousScreen(skipScreens="
 26 [-]: GETGLOBAL R5 K8        ; R5 := 0x64fb1586
 27 [-]: MOVE      R6 R0        ; R6 := R0
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: LOADK     R6 K9        ; R6 := ")"
 30 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 31 [-]: CALL      R2 2 1       ; R2(R3)
 32 [-]: GETGLOBAL R2 K10       ; R2 := 0x7b998233
 33 [-]: MOVE      R3 R0        ; R3 := R0
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 0         ; if not R2 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: CONST     R0 1         ; R0 := 1.000000
 38 [-]: GETGLOBAL R2 K11       ; R2 := 0x03f57322
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: MOVE      R0 R2        ; R0 := R2
 42 [-]: LT        0 R0 K12     ; if R0 >= 1.000000 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: CONST     R0 1         ; R0 := 1.000000
 45 [-]: GETGLOBAL R2 K10       ; R2 := 0x7b998233
 46 [-]: MOVE      R3 R1        ; R3 := R1
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 0         ; if not R2 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADKB    R1 0 0       ; R1 := false
 51 [-]: TEST      R1 1         ; if R1 then PC := 66
 52 [-]: JMP       66           ; PC := 66
 53 [-]: GETGLOBAL R2 K2        ; R2 := screenStack
 54 [-]: LEN       R2 R2        ; R2 := # R2
 55 [-]: LE        0 R2 R0      ; if R2 > R0 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETGLOBAL R2 K6        ; R2 := 0x3d106989
 58 [-]: LOADK     R3 K13       ; R3 := "ERROR: There's not "
 59 [-]: GETGLOBAL R4 K8        ; R4 := 0x64fb1586
 60 [-]: MOVE      R5 R0        ; R5 := R0
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: LOADK     R5 K14       ; R5 := " screens to back up over!"
 63 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 64 [-]: CALL      R2 2 1       ; R2(R3)
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: CONST     R2 1         ; R2 := 1.000000
 67 [-]: MOVE      R3 R0        ; R3 := R0
 68 [-]: CONST     R4 1         ; R4 := 1.000000
 69 [-]: FORPREP   R2 83        ; R2 -= R4; PC := 83
 70 [-]: GETGLOBAL R6 K2        ; R6 := screenStack
 71 [-]: LEN       R6 R6        ; R6 := # R6
 72 [-]: LT        0 K15 R6     ; if 0.000000 >= R6 then PC := 83
 73 [-]: JMP       83           ; PC := 83
 74 [-]: GETGLOBAL R6 K2        ; R6 := screenStack
 75 [-]: GETGLOBAL R7 K2        ; R7 := screenStack
 76 [-]: LEN       R7 R7        ; R7 := # R7
 77 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 78 [-]: SETGLOBAL R6 K16       ; mPreviousScreen := R6
 79 [-]: GETUPVAL  R6 U3        ; R6 := U3
 80 [-]: GETGLOBAL R7 K2        ; R7 := screenStack
 81 [-]: LEN       R7 R7        ; R7 := # R7
 82 [-]: CALL      R6 2 1       ; R6(R7)
 83 [-]: FORLOOP   R2 70        ; R2 += R4; if R2 <= R3 then begin PC := 70; R5 := R2 end
 84 [-]: GETGLOBAL R6 K2        ; R6 := screenStack
 85 [-]: GETGLOBAL R7 K2        ; R7 := screenStack
 86 [-]: LEN       R7 R7        ; R7 := # R7
 87 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 88 [-]: SETGLOBAL R6 K17       ; queuedMovie := R6
 89 [-]: GETGLOBAL R6 K10       ; R6 := 0x7b998233
 90 [-]: GETGLOBAL R7 K18       ; R7 := mChildMovie
 91 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 92 [-]: TEST      R6 1         ; if R6 then PC := 99
 93 [-]: JMP       99           ; PC := 99
 94 [-]: GETGLOBAL R6 K18       ; R6 := mChildMovie
 95 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0xe4162eed]
 96 [-]: LOADK     R8 K20       ; R8 := "TransitionOut"
 97 [-]: LOADK     R9 K21       ; R9 := ""
 98 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 99 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 5523
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  3 [-]: SETTABLE  R1 K0 R0     ; R1["mElements"] := R0
  4 [-]: NEWTABLE  R2 16 0      ; R2 := {}
  5 [-]: LOADK     R3 K1        ; R3 := "TASK"
  6 [-]: LOADK     R4 K2        ; R4 := "MAIL"
  7 [-]: LOADK     R5 K3        ; R5 := "FOUNDRY"
  8 [-]: LOADK     R6 K4        ; R6 := "MARKET"
  9 [-]: LOADK     R7 K5        ; R7 := "INC_FRIENDS"
 10 [-]: LOADK     R8 K6        ; R8 := "UMBRA_ECHO"
 11 [-]: LOADK     R9 K7        ; R9 := "INVIGORATION"
 12 [-]: LOADK     R10 K8       ; R10 := "ATTACK_POLARITY"
 13 [-]: LOADK     R11 K9       ; R11 := "DEFENSE_POLARITY"
 14 [-]: LOADK     R12 K10      ; R12 := "TACTIC_POLARITY"
 15 [-]: LOADK     R13 K11      ; R13 := "POWER_POLARITY"
 16 [-]: LOADK     R14 K12      ; R14 := "WARD_POLARITY"
 17 [-]: LOADK     R15 K13      ; R15 := "DOUBLE_CREDIT"
 18 [-]: LOADK     R16 K14      ; R16 := "DOUBLE_AFFINITY"
 19 [-]: LOADK     R17 K15      ; R17 := "DOUBLE_PICKUP"
 20 [-]: LOADK     R18 K16      ; R18 := "EVOLVING_WEAPON"
 21 [-]: SETLIST   R2 16 1      ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 16
 22 [-]: LEN       R3 R2        ; R3 := # R2
 23 [-]: SETTABLE  R1 K17 R3    ; R1["BOOSTER_ID_BASE"] := R3
 24 [-]: CLOSURE   R3 0         ; R3 := closure(Function #148.1)
 25 [-]: SETTABLE  R1 K18 R3    ; R1["GetStatus"] := R3
 26 [-]: CLOSURE   R3 1         ; R3 := closure(Function #148.2)
 27 [-]: SETTABLE  R1 K19 R3    ; R1["GetCurrentNotifications"] := R3
 28 [-]: CONST     R3 1         ; R3 := 1.000000
 29 [-]: LEN       R4 R2        ; R4 := # R2
 30 [-]: CONST     R5 1         ; R5 := 1.000000
 31 [-]: FORPREP   R3 40        ; R3 -= R5; PC := 40
 32 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 33 [-]: SETTABLE  R1 R7 R6     ; R1[R7] := R6
 34 [-]: GETGLOBAL R7 K20       ; R7 := 0x33bdd652
 35 [-]: GETTABLE  R7 R7 K21    ; R7 := R7[0x23d5322f]
 36 [-]: MOVE      R8 R0        ; R8 := R0
 37 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 38 [-]: SETTABLE  R9 K22 R6    ; R9["Id"] := R6
 39 [-]: CALL      R7 3 1       ; R7(R8,R9)
 40 [-]: FORLOOP   R3 32        ; R3 += R5; if R3 <= R4 then begin PC := 32; R6 := R3 end
 41 [-]: GETTABLE  R7 R1 K2     ; R7 := R1["MAIL"]
 42 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 43 [-]: SETTABLE  R7 K23 K24   ; R7["Value"] := 0.000000
 44 [-]: GETTABLE  R7 R1 K3     ; R7 := R1["FOUNDRY"]
 45 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 46 [-]: SETTABLE  R7 K23 K24   ; R7["Value"] := 0.000000
 47 [-]: GETTABLE  R7 R1 K5     ; R7 := R1["INC_FRIENDS"]
 48 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 49 [-]: SETTABLE  R7 K23 K24   ; R7["Value"] := 0.000000
 50 [-]: GETTABLE  R7 R1 K8     ; R7 := R1["ATTACK_POLARITY"]
 51 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 52 [-]: SETTABLE  R7 K25 K27   ; R7["Polarity"] := 1.000000
 53 [-]: GETTABLE  R7 R1 K9     ; R7 := R1["DEFENSE_POLARITY"]
 54 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 55 [-]: SETTABLE  R7 K25 K28   ; R7["Polarity"] := 2.000000
 56 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["TACTIC_POLARITY"]
 57 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 58 [-]: SETTABLE  R7 K25 K29   ; R7["Polarity"] := 3.000000
 59 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["POWER_POLARITY"]
 60 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 61 [-]: SETTABLE  R7 K25 K30   ; R7["Polarity"] := 4.000000
 62 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["WARD_POLARITY"]
 63 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 64 [-]: SETTABLE  R7 K25 K31   ; R7["Polarity"] := 7.000000
 65 [-]: GETGLOBAL R7 K32       ; R7 := _T
 66 [-]: SETTABLE  R7 K33 R1    ; R7["Notifications"] := R1
 67 [-]: RETURN    R0 1         ; return 


; Function #148.1:
;
; Name:            
; Defined at line: 5549
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: CONST     R2 0         ; R2 := 0.000000
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: CONST     R3 1         ; R3 := 1.000000
  5 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mElements"]
  6 [-]: LEN       R4 R4        ; R4 := # R4
  7 [-]: CONST     R5 1         ; R5 := 1.000000
  8 [-]: FORPREP   R3 18        ; R3 -= R5; PC := 18
  9 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mElements"]
 10 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 11 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Id"]
 12 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mElements"]
 15 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 16 [-]: GETTABLE  R2 R7 K3     ; R2 := R7["Value"]
 17 [-]: JMP       19           ; PC := 19
 18 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #148.2:
;
; Name:            
; Defined at line: 5564
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mElements"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 5587
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbf9494fc]
  3 [-]: LOADK     R3 K2        ; R3 := "Lotus.EnableTraceLogging"
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 21
  6 [-]: JMP       21           ; PC := 21
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x3d106989
  8 [-]: LOADK     R2 K4        ; R2 := "EnableUIInput("
  9 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: LOADK     R4 K6        ; R4 := "), last state = "
 13 [-]: GETGLOBAL R5 K5        ; R5 := 0x64fb1586
 14 [-]: GETGLOBAL R6 K7        ; R6 := _T
 15 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["UIInputEnabled"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: GETGLOBAL R1 K9        ; R1 := 0xab19f327
 20 [-]: CALL      R1 1 1       ; R1()
 21 [-]: GETGLOBAL R1 K10       ; R1 := mUIInputEnableTimer
 22 [-]: EQ        1 R1 K11     ; if R1 == nil then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETGLOBAL R1 K12       ; R1 := mTimerMgr
 25 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x775c858b]
 26 [-]: GETGLOBAL R3 K10       ; R3 := mUIInputEnableTimer
 27 [-]: CALL      R1 3 1       ; R1(R2,R3)
 28 [-]: LOADNIL   R1 R1        ; R1 := nil
 29 [-]: SETGLOBAL R1 K10       ; mUIInputEnableTimer := R1
 30 [-]: GETGLOBAL R1 K7        ; R1 := _T
 31 [-]: SETTABLE  R1 K8 K14    ; R1["UIInputEnabled"] := true
 32 [-]: GETGLOBAL R1 K7        ; R1 := _T
 33 [-]: GETUPVAL  R2 U0        ; R2 := U0
 34 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0x06d055f9]
 35 [-]: EQ        0 R0 K11     ; if R0 ~= nil then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 38
 38 [-]: LOADKB    R3 1 0       ; R3 := true
 39 [-]: MOVE      R4 R0        ; R4 := R0
 40 [-]: LOADKB    R5 0 0       ; R5 := false
 41 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 42 [-]: SETTABLE  R1 K15 R2    ; R1["HideMoneyOverlay"] := R2
 43 [-]: GETGLOBAL R1 K17       ; R1 := mCurrentMode
 44 [-]: GETUPVAL  R2 U1        ; R2 := U1
 45 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 46 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETGLOBAL R1 K7        ; R1 := _T
 49 [-]: SETTABLE  R1 K19 K14   ; R1["HideMarkers"] := true
 50 [-]: GETGLOBAL R1 K17       ; R1 := mCurrentMode
 51 [-]: GETUPVAL  R2 U1        ; R2 := U1
 52 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 53 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 75
 54 [-]: JMP       75           ; PC := 75
 55 [-]: GETGLOBAL R1 K7        ; R1 := _T
 56 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["HideMoneyOverlay"]
 57 [-]: TEST      R1 1         ; if R1 then PC := 75
 58 [-]: JMP       75           ; PC := 75
 59 [-]: GETGLOBAL R1 K20       ; R1 := 0x7b998233
 60 [-]: GETGLOBAL R2 K21       ; R2 := 0xae91e43b
 61 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 62 [-]: TEST      R1 1         ; if R1 then PC := 75
 63 [-]: JMP       75           ; PC := 75
 64 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
 65 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0x5374b92e]
 66 [-]: GETGLOBAL R3 K23       ; R3 := 0xe44a533a
 67 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 68 [-]: TEST      R1 1         ; if R1 then PC := 75
 69 [-]: JMP       75           ; PC := 75
 70 [-]: GETGLOBAL R1 K21       ; R1 := 0xae91e43b
 71 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x1fd6abd0]
 72 [-]: GETGLOBAL R3 K23       ; R3 := 0xe44a533a
 73 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 74 [-]: SETGLOBAL R1 K24       ; mNotificationsMovie := R1
 75 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
 76 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0x7e17ae26]
 77 [-]: LOADK     R3 K27       ; R3 := "EnableInput"
 78 [-]: LOADK     R4 K28       ; R4 := ""
 79 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 80 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 5613
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbf9494fc]
  3 [-]: LOADK     R2 K2        ; R2 := "Lotus.EnableTraceLogging"
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 17
  6 [-]: JMP       17           ; PC := 17
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x3d106989
  8 [-]: LOADK     R1 K4        ; R1 := "DisableUIInput(), last state = "
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0x64fb1586
 10 [-]: GETGLOBAL R3 K6        ; R3 := _T
 11 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UIInputEnabled"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: GETGLOBAL R0 K8        ; R0 := 0xab19f327
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: GETGLOBAL R0 K6        ; R0 := _T
 18 [-]: SETTABLE  R0 K7 K9     ; R0["UIInputEnabled"] := false
 19 [-]: GETGLOBAL R0 K10       ; R0 := mControl
 20 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["Shutdown"]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
 24 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x7e17ae26]
 25 [-]: LOADK     R2 K13       ; R2 := "DisableInput"
 26 [-]: LOADK     R3 K14       ; R3 := ""
 27 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETGLOBAL R0 K16       ; R0 := mTimerMgr
 30 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0[0xbd2e96ea]
 31 [-]: LOADK     R2 K18       ; R2 := 0.200000
 32 [-]: CLOSURE   R3 0         ; R3 := closure(Function #150.1)
 33 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 34 [-]: SETGLOBAL R0 K15       ; mUIInputEnableTimer := R0
 35 [-]: GETGLOBAL R0 K6        ; R0 := _T
 36 [-]: SETTABLE  R0 K19 K9    ; R0["HideMoneyOverlay"] := false
 37 [-]: GETGLOBAL R0 K20       ; R0 := mCurrentMode
 38 [-]: GETUPVAL  R1 U0        ; R1 := U0
 39 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 40 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: GETGLOBAL R0 K6        ; R0 := _T
 43 [-]: SETTABLE  R0 K22 K9    ; R0["HideMarkers"] := false
 44 [-]: GETGLOBAL R0 K23       ; R0 := 0x7b998233
 45 [-]: GETGLOBAL R1 K24       ; R1 := mNotificationsMovie
 46 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 47 [-]: TEST      R0 1         ; if R0 then PC := 57
 48 [-]: JMP       57           ; PC := 57
 49 [-]: GETGLOBAL R0 K20       ; R0 := mCurrentMode
 50 [-]: GETUPVAL  R1 U0        ; R1 := U0
 51 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 52 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETGLOBAL R0 K24       ; R0 := mNotificationsMovie
 55 [-]: SELF      R0 R0 K25    ; R1 := R0; R0 := R0[0x32302b4a]
 56 [-]: CALL      R0 2 1       ; R0(R1)
 57 [-]: RETURN    R0 1         ; return 


; Function #150.1:
;
; Name:            
; Defined at line: 5624
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SETGLOBAL R0 K0        ; mUIInputEnableTimer := R0
  2 [-]: GETGLOBAL R0 K1        ; R0 := 0x9ba7909f
  3 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x7e17ae26]
  4 [-]: LOADK     R2 K3        ; R2 := "DisableInput"
  5 [-]: LOADK     R3 K4        ; R3 := ""
  6 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 5640
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xf37bdbf9]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x9e5e1b85
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 5644
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 25
  5 [-]: JMP       25           ; PC := 25
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0x3d106989
  7 [-]: LOADK     R3 K3        ; R3 := "Showing WeGame popup due to status "
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: EQ        0 R1 K4      ; if R1 ~= 40.000000 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 15 [-]: LOADK     R3 K6        ; R3 := "/Lotus/Language/Changyou/WeGameAntiAddictionKick"
 16 [-]: LOADK     R4 K7        ; R4 := "OnFcmKickOut"
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: JMP       48           ; PC := 48
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 21 [-]: LOADK     R3 K8        ; R3 := "/Lotus/Language/Changyou/WeGamePlatformOffline"
 22 [-]: LOADK     R4 K7        ; R4 := "OnFcmKickOut"
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: JMP       48           ; PC := 48
 25 [-]: EQ        1 R0 K9      ; if R0 == "" then PC := 48
 26 [-]: JMP       48           ; PC := 48
 27 [-]: GETGLOBAL R2 K10       ; R2 := cjson
 28 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0x7ab914d8]
 29 [-]: MOVE      R3 R0        ; R3 := R0
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: GETTABLE  R3 R2 K12    ; R3 := R2["title"]
 32 [-]: LOADK     R4 K13       ; R4 := "\r\n\r\n"
 33 [-]: GETTABLE  R5 R2 K14    ; R5 := R2["desc"]
 34 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 35 [-]: GETGLOBAL R4 K15       ; R4 := 0x34291f5c
 36 [-]: GETTABLE  R4 R4 K16    ; R4 := R4[0xe27b35bb]
 37 [-]: CALL      R4 1 2       ; R4 := R4()
 38 [-]: SETTABLE  R4 K17 K18   ; R4["dialogType"] := 0.000000
 39 [-]: SETTABLE  R4 K19 R3    ; R4["locString"] := R3
 40 [-]: GETTABLE  R5 R2 K21    ; R5 := R2["confirm_button"]
 41 [-]: SETTABLE  R4 K20 R5    ; R4["firstString"] := R5
 42 [-]: GETGLOBAL R5 K22       ; R5 := 0x83f4e77c
 43 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0x7d63f19c]
 44 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 45 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5[0x69e5aa4f]
 46 [-]: MOVE      R7 R4        ; R7 := R4
 47 [-]: CALL      R5 3 1       ; R5(R6,R7)
 48 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 5666
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["timeOpen"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["timeToCheckDelay"]
 10 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 11 [-]: SETTABLE  R0 K1 R1     ; R0["timeOpen"] := R1
 12 [-]: GETGLOBAL R0 K3        ; R0 := 0x34291f5c
 13 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xd27f8079]
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: TEST      R0 0         ; if not R0 then PC := 33
 16 [-]: JMP       33           ; PC := 33
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
 19 [-]: TEST      R0 1         ; if R0 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 23 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x6dd7aa66]
 24 [-]: GETGLOBAL R3 K7        ; R3 := 0xe8d2b0d8
 25 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 26 [-]: SETTABLE  R0 K0 R1     ; R0["movie"] := R1
 27 [-]: GETUPVAL  R0 U0        ; R0 := U0
 28 [-]: SETTABLE  R0 K1 K8     ; R0["timeOpen"] := 0.000000
 29 [-]: GETGLOBAL R0 K9        ; R0 := 0xe7f2b02f
 30 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x9971ad47]
 31 [-]: CALL      R0 2 1       ; R0(R1)
 32 [-]: JMP       49           ; PC := 49
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
 35 [-]: TEST      R0 0         ; if not R0 then PC := 49
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["timeOpen"]
 39 [-]: GETUPVAL  R1 U0        ; R1 := U0
 40 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["minimumDisplayTime"]
 41 [-]: LE        0 R1 R0      ; if R1 > R0 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETUPVAL  R0 U0        ; R0 := U0
 44 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
 45 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x32302b4a]
 46 [-]: CALL      R0 2 1       ; R0(R1)
 47 [-]: GETUPVAL  R0 U0        ; R0 := U0
 48 [-]: SETTABLE  R0 K0 K13    ; R0["movie"] := nil
 49 [-]: GETGLOBAL R0 K14       ; R0 := 0x7b998233
 50 [-]: GETUPVAL  R1 U0        ; R1 := U0
 51 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["timerId"]
 52 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 53 [-]: TEST      R0 1         ; if R0 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R0 K16       ; R0 := mTimerMgr
 56 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0[0x775c858b]
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["timerId"]
 59 [-]: CALL      R0 3 1       ; R0(R1,R2)
 60 [-]: GETUPVAL  R0 U0        ; R0 := U0
 61 [-]: GETGLOBAL R1 K16       ; R1 := mTimerMgr
 62 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1[0xbd2e96ea]
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["timeToCheckDelay"]
 65 [-]: GETUPVAL  R4 U1        ; R4 := U1
 66 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 67 [-]: SETTABLE  R0 K15 R1    ; R0["timerId"] := R1
 68 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 5695
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x8e9f5fee]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 5699
; #Upvalues:       33
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x368ad758]
  8 [-]: LOADKB    R2 0 0       ; R2 := false
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 11 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5f56eeab]
 12 [-]: LOADK     R2 K4        ; R2 := "RobotoRegular17"
 13 [-]: CONST     R3 29        ; R3 := 29.000000
 14 [-]: LOADK     R4 K5        ; R4 := "Filler text"
 15 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 16 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 17 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5f56eeab]
 18 [-]: LOADK     R2 K6        ; R2 := "RobotoBold17"
 19 [-]: CONST     R3 29        ; R3 := 29.000000
 20 [-]: LOADK     R4 K5        ; R4 := "Filler text"
 21 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: CALL      R0 1 1       ; R0()
 24 [-]: GETUPVAL  R0 U1        ; R0 := U1
 25 [-]: GETTABLE  R0 R0 K7     ; R0 := R0[0x8024bd2d]
 26 [-]: CALL      R0 1 1       ; R0()
 27 [-]: GETUPVAL  R0 U2        ; R0 := U2
 28 [-]: GETTABLE  R0 R0 K8     ; R0 := R0[0x8094be43]
 29 [-]: CALL      R0 1 1       ; R0()
 30 [-]: GETGLOBAL R0 K9        ; R0 := 0x0032441c
 31 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["CachedGoalInfo"]
 32 [-]: EQ        0 R0 K11     ; if R0 ~= nil then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETGLOBAL R0 K9        ; R0 := 0x0032441c
 35 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 36 [-]: SETTABLE  R0 K10 R1    ; R0["CachedGoalInfo"] := R1
 37 [-]: GETGLOBAL R0 K9        ; R0 := 0x0032441c
 38 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 39 [-]: SETTABLE  R0 K12 R1    ; R0["MergedGoalNodes"] := R1
 40 [-]: GETGLOBAL R0 K13       ; R0 := _T
 41 [-]: CLOSURE   R1 0         ; R1 := closure(Function #155.1)
 42 [-]: GETUPVAL  R0 U1        ; R0 := U1
 43 [-]: GETUPVAL  R0 U3        ; R0 := U3
 44 [-]: SETTABLE  R0 K14 R1    ; R0["gOpenWeaponRecoveryMission"] := R1
 45 [-]: GETGLOBAL R0 K15       ; R0 := 0x34291f5c
 46 [-]: GETTABLE  R0 R0 K16    ; R0 := R0[0xa7a2e381]
 47 [-]: CALL      R0 1 2       ; R0 := R0()
 48 [-]: TEST      R0 0         ; if not R0 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: GETGLOBAL R0 K15       ; R0 := 0x34291f5c
 51 [-]: GETTABLE  R0 R0 K17    ; R0 := R0[0x65b1a965]
 52 [-]: LOADK     R1 K18       ; R1 := "OnWeGamePopUp"
 53 [-]: CALL      R0 2 1       ; R0(R1)
 54 [-]: GETGLOBAL R0 K19       ; R0 := 0x2d0fad09
 55 [-]: LOADK     R1 K20       ; R1 := "Lotus.Interface.Libs.TimerMgr"
 56 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 57 [-]: GETTABLE  R1 R0 K22    ; R1 := R0[0xde474187]
 58 [-]: CALL      R1 1 2       ; R1 := R1()
 59 [-]: SETGLOBAL R1 K21       ; mTimerMgr := R1
 60 [-]: GETGLOBAL R1 K13       ; R1 := _T
 61 [-]: CLOSURE   R2 1         ; R2 := closure(Function #155.2)
 62 [-]: SETTABLE  R1 K23 R2    ; R1["AddToBackgroundTimer"] := R2
 63 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 64 [-]: GETGLOBAL R2 K24       ; R2 := 0x4c5fdf9c
 65 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 66 [-]: TEST      R1 1         ; if R1 then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: GETGLOBAL R1 K25       ; R1 := 0x9ba7909f
 69 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0x6dd7aa66]
 70 [-]: GETGLOBAL R3 K24       ; R3 := 0x4c5fdf9c
 71 [-]: CALL      R1 3 1       ; R1(R2,R3)
 72 [-]: NEWTABLE  R1 6 0       ; R1 := {}
 73 [-]: GETGLOBAL R2 K27       ; R2 := 0xe1380899
 74 [-]: GETGLOBAL R3 K28       ; R3 := 0x420192be
 75 [-]: GETGLOBAL R4 K29       ; R4 := 0xc813104a
 76 [-]: GETGLOBAL R5 K30       ; R5 := 0x8fa91b7b
 77 [-]: GETGLOBAL R6 K31       ; R6 := 0x65bc0e9e
 78 [-]: GETGLOBAL R7 K32       ; R7 := 0x0ef37382
 79 [-]: SETLIST   R1 6 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 6
 80 [-]: SETUPVAL  R1 U4        ; U82 := R4
 81 [-]: GETGLOBAL R1 K33       ; R1 := movies
 82 [-]: GETGLOBAL R2 K35       ; R2 := 0x5465532c
 83 [-]: SETTABLE  R1 K34 R2    ; R1["Default"] := R2
 84 [-]: GETGLOBAL R1 K33       ; R1 := movies
 85 [-]: GETGLOBAL R2 K35       ; R2 := 0x5465532c
 86 [-]: SETTABLE  R1 K36 R2    ; R1["MainMenu"] := R2
 87 [-]: GETGLOBAL R1 K33       ; R1 := movies
 88 [-]: GETGLOBAL R2 K38       ; R2 := 0xbdad5a54
 89 [-]: SETTABLE  R1 K37 R2    ; R1["LoadOut"] := R2
 90 [-]: GETGLOBAL R1 K33       ; R1 := movies
 91 [-]: GETGLOBAL R2 K40       ; R2 := 0x6030f79f
 92 [-]: SETTABLE  R1 K39 R2    ; R1["LoadOutCrewShip"] := R2
 93 [-]: GETGLOBAL R1 K33       ; R1 := movies
 94 [-]: GETGLOBAL R2 K42       ; R2 := 0x5ffeed32
 95 [-]: SETTABLE  R1 K41 R2    ; R1["Inventory"] := R2
 96 [-]: GETGLOBAL R1 K33       ; R1 := movies
 97 [-]: GETGLOBAL R2 K44       ; R2 := 0x66d4e2ca
 98 [-]: SETTABLE  R1 K43 R2    ; R1["StyleManager"] := R2
 99 [-]: GETGLOBAL R1 K33       ; R1 := movies
100 [-]: GETGLOBAL R2 K46       ; R2 := 0xba5a7939
101 [-]: SETTABLE  R1 K45 R2    ; R1["Profile"] := R2
102 [-]: GETGLOBAL R1 K33       ; R1 := movies
103 [-]: GETGLOBAL R2 K48       ; R2 := 0xa106c3ae
104 [-]: SETTABLE  R1 K47 R2    ; R1["Leaderboards"] := R2
105 [-]: GETGLOBAL R1 K33       ; R1 := movies
106 [-]: GETGLOBAL R2 K27       ; R2 := 0xe1380899
107 [-]: SETTABLE  R1 K49 R2    ; R1["MissionStats"] := R2
108 [-]: GETGLOBAL R1 K33       ; R1 := movies
109 [-]: GETGLOBAL R2 K51       ; R2 := 0x295e8761
110 [-]: SETTABLE  R1 K50 R2    ; R1["Settings"] := R2
111 [-]: GETGLOBAL R1 K33       ; R1 := movies
112 [-]: GETGLOBAL R2 K53       ; R2 := 0x0ba97bb4
113 [-]: SETTABLE  R1 K52 R2    ; R1["Bindings"] := R2
114 [-]: GETGLOBAL R1 K33       ; R1 := movies
115 [-]: GETGLOBAL R2 K55       ; R2 := 0xdc45943d
116 [-]: SETTABLE  R1 K54 R2    ; R1["Store"] := R2
117 [-]: GETGLOBAL R1 K33       ; R1 := movies
118 [-]: GETGLOBAL R2 K57       ; R2 := 0x900feed6
119 [-]: SETTABLE  R1 K56 R2    ; R1[0x34291f5c] := R2
120 [-]: GETGLOBAL R1 K33       ; R1 := movies
121 [-]: GETGLOBAL R2 K59       ; R2 := 0xe3808980
122 [-]: SETTABLE  R1 K58 R2    ; R1["LobbyPVP"] := R2
123 [-]: GETGLOBAL R1 K33       ; R1 := movies
124 [-]: GETGLOBAL R2 K61       ; R2 := 0x420fe829
125 [-]: SETTABLE  R1 K60 R2    ; R1["ColorPicker"] := R2
126 [-]: GETGLOBAL R1 K33       ; R1 := movies
127 [-]: GETGLOBAL R2 K63       ; R2 := 0x80fe1846
128 [-]: SETTABLE  R1 K62 R2    ; R1["Intel"] := R2
129 [-]: GETGLOBAL R1 K33       ; R1 := movies
130 [-]: GETGLOBAL R2 K65       ; R2 := 0x748b755d
131 [-]: SETTABLE  R1 K64 R2    ; R1["UpgradeCards"] := R2
132 [-]: GETGLOBAL R1 K33       ; R1 := movies
133 [-]: GETGLOBAL R2 K67       ; R2 := 0xf07cbb7c
134 [-]: SETTABLE  R1 K66 R2    ; R1["MemberRole"] := R2
135 [-]: GETGLOBAL R1 K33       ; R1 := movies
136 [-]: GETGLOBAL R2 K69       ; R2 := 0x6a400c4e
137 [-]: SETTABLE  R1 K68 R2    ; R1["Menu"] := R2
138 [-]: GETGLOBAL R1 K33       ; R1 := movies
139 [-]: GETGLOBAL R2 K31       ; R2 := 0x65bc0e9e
140 [-]: SETTABLE  R1 K70 R2    ; R1["Inbox"] := R2
141 [-]: GETGLOBAL R1 K33       ; R1 := movies
142 [-]: GETGLOBAL R2 K9        ; R2 := 0x0032441c
143 [-]: GETTABLE  R2 R2 K72    ; R2 := R2["UIMovie_ItemBrowsingMovie"]
144 [-]: SETTABLE  R1 K71 R2    ; R1["ItemBrowsing"] := R2
145 [-]: GETGLOBAL R1 K33       ; R1 := movies
146 [-]: GETGLOBAL R2 K74       ; R2 := 0xef1adc3a
147 [-]: SETTABLE  R1 K73 R2    ; R1["AllianceView"] := R2
148 [-]: GETGLOBAL R1 K33       ; R1 := movies
149 [-]: GETGLOBAL R2 K76       ; R2 := 0x37779262
150 [-]: SETTABLE  R1 K75 R2    ; R1["Clan"] := R2
151 [-]: GETGLOBAL R1 K33       ; R1 := movies
152 [-]: GETGLOBAL R2 K78       ; R2 := 0x7384bada
153 [-]: SETTABLE  R1 K77 R2    ; R1["ClanSearch"] := R2
154 [-]: GETGLOBAL R1 K33       ; R1 := movies
155 [-]: GETGLOBAL R2 K80       ; R2 := 0x8d3c3891
156 [-]: SETTABLE  R1 K79 R2    ; R1["Friends"] := R2
157 [-]: GETGLOBAL R1 K33       ; R1 := movies
158 [-]: GETGLOBAL R2 K82       ; R2 := 0xdbf8fb8c
159 [-]: SETTABLE  R1 K81 R2    ; R1["SquadOverlay"] := R2
160 [-]: GETGLOBAL R1 K33       ; R1 := movies
161 [-]: GETGLOBAL R2 K84       ; R2 := 0xe465ca95
162 [-]: SETTABLE  R1 K83 R2    ; R1[0x0032441c] := R2
163 [-]: GETGLOBAL R1 K33       ; R1 := movies
164 [-]: GETGLOBAL R2 K86       ; R2 := 0x8a9373f5
165 [-]: SETTABLE  R1 K85 R2    ; R1["Spectres"] := R2
166 [-]: GETGLOBAL R1 K33       ; R1 := movies
167 [-]: GETGLOBAL R2 K88       ; R2 := 0xc55bde47
168 [-]: SETTABLE  R1 K87 R2    ; R1["DiegeticArtifactCards"] := R2
169 [-]: GETGLOBAL R1 K33       ; R1 := movies
170 [-]: GETGLOBAL R2 K90       ; R2 := 0xb071c019
171 [-]: SETTABLE  R1 K89 R2    ; R1["AbilityProgression"] := R2
172 [-]: GETGLOBAL R1 K33       ; R1 := movies
173 [-]: GETGLOBAL R2 K92       ; R2 := 0x69749ee5
174 [-]: SETTABLE  R1 K91 R2    ; R1["GiftUnwrap"] := R2
175 [-]: GETGLOBAL R1 K33       ; R1 := movies
176 [-]: GETGLOBAL R2 K94       ; R2 := 0x71e6d95f
177 [-]: SETTABLE  R1 K93 R2    ; R1["InvasionSelection"] := R2
178 [-]: GETGLOBAL R1 K33       ; R1 := movies
179 [-]: GETGLOBAL R2 K96       ; R2 := 0x23f370a1
180 [-]: SETTABLE  R1 K95 R2    ; R1["CustomizeTenno"] := R2
181 [-]: GETGLOBAL R1 K33       ; R1 := movies
182 [-]: GETGLOBAL R2 K98       ; R2 := 0x89567b1a
183 [-]: SETTABLE  R1 K97 R2    ; R1["OperatorLoadout"] := R2
184 [-]: GETGLOBAL R1 K33       ; R1 := movies
185 [-]: GETGLOBAL R2 K9        ; R2 := 0x0032441c
186 [-]: GETTABLE  R2 R2 K100   ; R2 := R2["UIMovie_DetailedPurchaseDialog"]
187 [-]: SETTABLE  R1 K99 R2    ; R1["DetailedPurchaseDialog"] := R2
188 [-]: GETGLOBAL R1 K33       ; R1 := movies
189 [-]: GETGLOBAL R2 K102      ; R2 := 0x005a373c
190 [-]: SETTABLE  R1 K101 R2   ; R1["DarvoDeal"] := R2
191 [-]: GETGLOBAL R1 K33       ; R1 := movies
192 [-]: GETGLOBAL R2 K104      ; R2 := 0x4baca03a
193 [-]: SETTABLE  R1 K103 R2   ; R1["GenericSettings"] := R2
194 [-]: GETGLOBAL R1 K33       ; R1 := movies
195 [-]: GETGLOBAL R2 K106      ; R2 := 0x08a5afb4
196 [-]: SETTABLE  R1 K105 R2   ; R1["GenericMenu"] := R2
197 [-]: GETGLOBAL R1 K33       ; R1 := movies
198 [-]: GETGLOBAL R2 K108      ; R2 := 0x0150fb92
199 [-]: SETTABLE  R1 K107 R2   ; R1["BeaconAccept"] := R2
200 [-]: GETGLOBAL R1 K33       ; R1 := movies
201 [-]: GETGLOBAL R2 K110      ; R2 := 0x5228d2b2
202 [-]: SETTABLE  R1 K109 R2   ; R1["Intrinsics"] := R2
203 [-]: GETGLOBAL R1 K33       ; R1 := movies
204 [-]: GETGLOBAL R2 K112      ; R2 := 0x7fe64efa
205 [-]: SETTABLE  R1 K111 R2   ; R1["DrifterIntrinsics"] := R2
206 [-]: GETGLOBAL R1 K33       ; R1 := movies
207 [-]: GETGLOBAL R2 K114      ; R2 := 0x7286a683
208 [-]: SETTABLE  R1 K113 R2   ; R1["KeyboardRendereriOS"] := R2
209 [-]: GETGLOBAL R1 K33       ; R1 := movies
210 [-]: GETGLOBAL R2 K116      ; R2 := 0x808ea68d
211 [-]: SETTABLE  R1 K115 R2   ; R1["ClanAdvertisement"] := R2
212 [-]: GETGLOBAL R1 K33       ; R1 := movies
213 [-]: GETGLOBAL R2 K118      ; R2 := 0xae7cd1d5
214 [-]: SETTABLE  R1 K117 R2   ; R1["LotusLoadOut"] := R2
215 [-]: GETGLOBAL R1 K33       ; R1 := movies
216 [-]: GETGLOBAL R2 K120      ; R2 := 0x481ccf68
217 [-]: SETTABLE  R1 K119 R2   ; R1["Challenges"] := R2
218 [-]: GETGLOBAL R1 K33       ; R1 := movies
219 [-]: GETGLOBAL R2 K122      ; R2 := 0xdbcad52e
220 [-]: SETTABLE  R1 K121 R2   ; R1["ArcaneManager"] := R2
221 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
222 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
223 [-]: CALL      R1 2 2       ; R1 := R1(R2)
224 [-]: TEST      R1 1         ; if R1 then PC := 238
225 [-]: JMP       238          ; PC := 238
226 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
227 [-]: SELF      R1 R1 K123   ; R2 := R1; R1 := R1[0xc6a10ab1]
228 [-]: CONST     R3 0         ; R3 := 0.000000
229 [-]: CALL      R1 3 1       ; R1(R2,R3)
230 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
231 [-]: SELF      R1 R1 K124   ; R2 := R1; R1 := R1[0x58bec6d6]
232 [-]: CONST     R3 0         ; R3 := 0.000000
233 [-]: CALL      R1 3 1       ; R1(R2,R3)
234 [-]: GETGLOBAL R1 K25       ; R1 := 0x9ba7909f
235 [-]: SELF      R1 R1 K125   ; R2 := R1; R1 := R1[0x8b966b9b]
236 [-]: LOADKB    R3 1 0       ; R3 := true
237 [-]: CALL      R1 3 1       ; R1(R2,R3)
238 [-]: LOADKB    R1 0 0       ; R1 := false
239 [-]: SETGLOBAL R1 K126      ; mFadeInStarted := R1
240 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
241 [-]: GETGLOBAL R2 K127      ; R2 := mChildMovie
242 [-]: CALL      R1 2 2       ; R1 := R1(R2)
243 [-]: TEST      R1 1         ; if R1 then PC := 248
244 [-]: JMP       248          ; PC := 248
245 [-]: GETGLOBAL R1 K127      ; R1 := mChildMovie
246 [-]: SELF      R1 R1 K128   ; R2 := R1; R1 := R1[0x32302b4a]
247 [-]: CALL      R1 2 1       ; R1(R2)
248 [-]: GETGLOBAL R1 K13       ; R1 := _T
249 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
250 [-]: SETTABLE  R1 K129 R2   ; R1["BackgroundMovie"] := R2
251 [-]: GETGLOBAL R1 K13       ; R1 := _T
252 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
253 [-]: GETGLOBAL R3 K131      ; R3 := 0xbe190284
254 [-]: CALL      R2 2 2       ; R2 := R2(R3)
255 [-]: TEST      R2 1         ; if R2 then PC := 262
256 [-]: JMP       262          ; PC := 262
257 [-]: GETGLOBAL R2 K131      ; R2 := 0xbe190284
258 [-]: SELF      R2 R2 K132   ; R3 := R2; R2 := R2[0xf2deaf69]
259 [-]: GETGLOBAL R4 K133      ; R4 := gLotusSandBoxGameRulesType
260 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
261 [-]: JMP       264          ; PC := 264
262 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 263
263 [-]: LOADKB    R2 1 0       ; R2 := true
264 [-]: SETTABLE  R1 K130 R2   ; R1["InSimulacrum"] := R2
265 [-]: GETGLOBAL R1 K13       ; R1 := _T
266 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
267 [-]: GETGLOBAL R3 K131      ; R3 := 0xbe190284
268 [-]: CALL      R2 2 2       ; R2 := R2(R3)
269 [-]: TEST      R2 1         ; if R2 then PC := 276
270 [-]: JMP       276          ; PC := 276
271 [-]: GETGLOBAL R2 K131      ; R2 := 0xbe190284
272 [-]: SELF      R2 R2 K132   ; R3 := R2; R2 := R2[0xf2deaf69]
273 [-]: GETGLOBAL R4 K135      ; R4 := gLotusDojoGameRulesType
274 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
275 [-]: JMP       278          ; PC := 278
276 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 277
277 [-]: LOADKB    R2 1 0       ; R2 := true
278 [-]: SETTABLE  R1 K134 R2   ; R1["InDojo"] := R2
279 [-]: GETGLOBAL R1 K13       ; R1 := _T
280 [-]: SETTABLE  R1 K136 K11  ; R1["CachedZarimanFactionIdx"] := nil
281 [-]: GETGLOBAL R1 K13       ; R1 := _T
282 [-]: CLOSURE   R2 2         ; R2 := closure(Function #155.3)
283 [-]: GETUPVAL  R0 U5        ; R0 := U5
284 [-]: SETTABLE  R1 K137 R2   ; R1["DoPurchase"] := R2
285 [-]: GETGLOBAL R1 K13       ; R1 := _T
286 [-]: CLOSURE   R2 3         ; R2 := closure(Function #155.4)
287 [-]: GETUPVAL  R0 U1        ; R0 := U1
288 [-]: GETUPVAL  R0 U6        ; R0 := U6
289 [-]: SETTABLE  R1 K138 R2   ; R1["BuyItem"] := R2
290 [-]: GETUPVAL  R1 U7        ; R1 := U7
291 [-]: CALL      R1 1 1       ; R1()
292 [-]: LOADNIL   R1 R1        ; R1 := nil
293 [-]: SETGLOBAL R1 K139      ; mCurrentMode := R1
294 [-]: GETGLOBAL R1 K140      ; R1 := mControl
295 [-]: SETTABLE  R1 K141 K142 ; R1["Initialized"] := true
296 [-]: GETGLOBAL R1 K15       ; R1 := 0x34291f5c
297 [-]: GETTABLE  R1 R1 K143   ; R1 := R1[0xa6cf258d]
298 [-]: LOADK     R2 K144      ; R2 := "HttpRequestFailureCallback"
299 [-]: CALL      R1 2 1       ; R1(R2)
300 [-]: GETGLOBAL R1 K15       ; R1 := 0x34291f5c
301 [-]: GETTABLE  R1 R1 K145   ; R1 := R1[0x164ca1b3]
302 [-]: LOADK     R2 K146      ; R2 := "HttpRequestAuthFailureCallback"
303 [-]: CALL      R1 2 1       ; R1(R2)
304 [-]: GETUPVAL  R1 U8        ; R1 := U8
305 [-]: CALL      R1 1 1       ; R1()
306 [-]: GETGLOBAL R1 K13       ; R1 := _T
307 [-]: GETUPVAL  R2 U9        ; R2 := U9
308 [-]: SETTABLE  R1 K147 R2   ; R1["OpenScreen"] := R2
309 [-]: GETGLOBAL R1 K13       ; R1 := _T
310 [-]: GETUPVAL  R2 U10       ; R2 := U10
311 [-]: SETTABLE  R1 K148 R2   ; R1["OpenScreenAsync"] := R2
312 [-]: GETGLOBAL R1 K13       ; R1 := _T
313 [-]: GETUPVAL  R2 U11       ; R2 := U11
314 [-]: SETTABLE  R1 K149 R2   ; R1["GoToScreen"] := R2
315 [-]: GETGLOBAL R1 K13       ; R1 := _T
316 [-]: GETUPVAL  R2 U12       ; R2 := U12
317 [-]: SETTABLE  R1 K150 R2   ; R1["ChangeScreen"] := R2
318 [-]: GETGLOBAL R1 K13       ; R1 := _T
319 [-]: GETUPVAL  R2 U13       ; R2 := U13
320 [-]: SETTABLE  R1 K151 R2   ; R1["GoToPreviousScreen"] := R2
321 [-]: GETGLOBAL R1 K13       ; R1 := _T
322 [-]: GETUPVAL  R2 U14       ; R2 := U14
323 [-]: SETTABLE  R1 K152 R2   ; R1["CloseScreen"] := R2
324 [-]: GETGLOBAL R1 K13       ; R1 := _T
325 [-]: GETUPVAL  R2 U15       ; R2 := U15
326 [-]: SETTABLE  R1 K153 R2   ; R1["IsInScreenStack"] := R2
327 [-]: GETGLOBAL R1 K13       ; R1 := _T
328 [-]: GETUPVAL  R2 U16       ; R2 := U16
329 [-]: SETTABLE  R1 K154 R2   ; R1["IsScreenOpen"] := R2
330 [-]: GETGLOBAL R1 K13       ; R1 := _T
331 [-]: GETUPVAL  R2 U17       ; R2 := U17
332 [-]: SETTABLE  R1 K155 R2   ; R1["GetTopScreen"] := R2
333 [-]: GETGLOBAL R1 K13       ; R1 := _T
334 [-]: GETUPVAL  R2 U18       ; R2 := U18
335 [-]: SETTABLE  R1 K156 R2   ; R1["ScreenOpened"] := R2
336 [-]: GETGLOBAL R1 K13       ; R1 := _T
337 [-]: GETUPVAL  R2 U19       ; R2 := U19
338 [-]: SETTABLE  R1 K157 R2   ; R1["GetScreenRes"] := R2
339 [-]: GETGLOBAL R1 K13       ; R1 := _T
340 [-]: GETUPVAL  R2 U20       ; R2 := U20
341 [-]: SETTABLE  R1 K158 R2   ; R1["ForceIntoStack"] := R2
342 [-]: GETGLOBAL R1 K13       ; R1 := _T
343 [-]: GETUPVAL  R2 U21       ; R2 := U21
344 [-]: SETTABLE  R1 K159 R2   ; R1["ForceOutOfStack"] := R2
345 [-]: GETGLOBAL R1 K13       ; R1 := _T
346 [-]: GETUPVAL  R2 U22       ; R2 := U22
347 [-]: SETTABLE  R1 K160 R2   ; R1["ForceClearScreenStack"] := R2
348 [-]: GETGLOBAL R1 K13       ; R1 := _T
349 [-]: GETUPVAL  R2 U23       ; R2 := U23
350 [-]: SETTABLE  R1 K161 R2   ; R1["EnableUIInput"] := R2
351 [-]: GETGLOBAL R1 K13       ; R1 := _T
352 [-]: GETUPVAL  R2 U24       ; R2 := U24
353 [-]: SETTABLE  R1 K162 R2   ; R1["DisableUIInput"] := R2
354 [-]: GETGLOBAL R1 K13       ; R1 := _T
355 [-]: GETGLOBAL R2 K164      ; R2 := 0xbcd84083
356 [-]: SETTABLE  R1 K163 R2   ; R1["CachedTennoAvatar"] := R2
357 [-]: GETGLOBAL R1 K13       ; R1 := _T
358 [-]: GETUPVAL  R2 U25       ; R2 := U25
359 [-]: SETTABLE  R1 K165 R2   ; R1["CompareInfoPopup"] := R2
360 [-]: GETGLOBAL R1 K13       ; R1 := _T
361 [-]: CLOSURE   R2 4         ; R2 := closure(Function #155.5)
362 [-]: GETUPVAL  R0 U26       ; R0 := U26
363 [-]: SETTABLE  R1 K166 R2   ; R1["PlayBackgroundTransmission"] := R2
364 [-]: GETGLOBAL R1 K13       ; R1 := _T
365 [-]: CLOSURE   R2 5         ; R2 := closure(Function #155.6)
366 [-]: GETUPVAL  R0 U27       ; R0 := U27
367 [-]: SETTABLE  R1 K167 R2   ; R1["SetAvatarLookAt"] := R2
368 [-]: GETGLOBAL R1 K168      ; R1 := 0x76ea806b
369 [-]: SELF      R1 R1 K169   ; R2 := R1; R1 := R1[0x12b342e0]
370 [-]: LOADK     R3 K170      ; R3 := "OnUserChangedCallback"
371 [-]: CALL      R1 3 1       ; R1(R2,R3)
372 [-]: GETGLOBAL R1 K171      ; R1 := 0xe7f2b02f
373 [-]: SELF      R1 R1 K172   ; R2 := R1; R1 := R1[0x592621b6]
374 [-]: LOADK     R3 K173      ; R3 := "OnLoadHubMessage"
375 [-]: CALL      R1 3 1       ; R1(R2,R3)
376 [-]: GETGLOBAL R1 K171      ; R1 := 0xe7f2b02f
377 [-]: SELF      R1 R1 K174   ; R2 := R1; R1 := R1[0xb1d1a0e2]
378 [-]: LOADK     R3 K175      ; R3 := "OnLoadOrbiterMessage"
379 [-]: CALL      R1 3 1       ; R1(R2,R3)
380 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
381 [-]: GETGLOBAL R2 K176      ; R2 := 0x83f4e77c
382 [-]: CALL      R1 2 2       ; R1 := R1(R2)
383 [-]: TEST      R1 1         ; if R1 then PC := 399
384 [-]: JMP       399          ; PC := 399
385 [-]: GETGLOBAL R1 K176      ; R1 := 0x83f4e77c
386 [-]: SELF      R1 R1 K177   ; R2 := R1; R1 := R1[0x7d63f19c]
387 [-]: CALL      R1 2 2       ; R1 := R1(R2)
388 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
389 [-]: MOVE      R3 R1        ; R3 := R1
390 [-]: CALL      R2 2 2       ; R2 := R2(R3)
391 [-]: TEST      R2 1         ; if R2 then PC := 399
392 [-]: JMP       399          ; PC := 399
393 [-]: GETGLOBAL R2 K178      ; R2 := 0x3d106989
394 [-]: LOADK     R3 K179      ; R3 := "UISTYLE: Style changed callback registered"
395 [-]: CALL      R2 2 1       ; R2(R3)
396 [-]: SELF      R2 R1 K180   ; R3 := R1; R2 := R1[0x97b2b307]
397 [-]: LOADK     R4 K181      ; R4 := "StyleChangedCallback"
398 [-]: CALL      R2 3 1       ; R2(R3,R4)
399 [-]: GETGLOBAL R2 K168      ; R2 := 0x76ea806b
400 [-]: SELF      R2 R2 K182   ; R3 := R2; R2 := R2[0x3f3ae64c]
401 [-]: CONST     R4 0         ; R4 := 0.000000
402 [-]: LOADKB    R5 0 0       ; R5 := false
403 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
404 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
405 [-]: MOVE      R4 R2        ; R4 := R2
406 [-]: CALL      R3 2 2       ; R3 := R3(R4)
407 [-]: TEST      R3 1         ; if R3 then PC := 472
408 [-]: JMP       472          ; PC := 472
409 [-]: SELF      R3 R2 K183   ; R4 := R2; R3 := R2[0x80563238]
410 [-]: CALL      R3 2 2       ; R3 := R3(R4)
411 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
412 [-]: MOVE      R5 R3        ; R5 := R3
413 [-]: CALL      R4 2 2       ; R4 := R4(R5)
414 [-]: TEST      R4 1         ; if R4 then PC := 472
415 [-]: JMP       472          ; PC := 472
416 [-]: SELF      R4 R3 K184   ; R5 := R3; R4 := R3[0x25a6e75e]
417 [-]: CALL      R4 2 2       ; R4 := R4(R5)
418 [-]: SELF      R4 R4 K185   ; R5 := R4; R4 := R4[0x8e7c3b5e]
419 [-]: CALL      R4 2 2       ; R4 := R4(R5)
420 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
421 [-]: MOVE      R6 R4        ; R6 := R4
422 [-]: CALL      R5 2 2       ; R5 := R5(R6)
423 [-]: TEST      R5 1         ; if R5 then PC := 441
424 [-]: JMP       441          ; PC := 441
425 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
426 [-]: GETGLOBAL R6 K131      ; R6 := 0xbe190284
427 [-]: CALL      R5 2 2       ; R5 := R5(R6)
428 [-]: TEST      R5 0         ; if not R5 then PC := 434
429 [-]: JMP       434          ; PC := 434
430 [-]: GETGLOBAL R5 K186      ; R5 := 0xcbd666e1
431 [-]: CONST     R6 0         ; R6 := 0.000000
432 [-]: CALL      R5 2 1       ; R5(R6)
433 [-]: JMP       425          ; PC := 425
434 [-]: GETGLOBAL R5 K131      ; R5 := 0xbe190284
435 [-]: SELF      R5 R5 K187   ; R6 := R5; R5 := R5[0x8e07e77f]
436 [-]: SELF      R7 R4 K188   ; R8 := R4; R7 := R4[0xed4e0128]
437 [-]: CALL      R7 2 2       ; R7 := R7(R8)
438 [-]: LOADK     R8 K189      ; R8 := "ActiveQuestLoaded"
439 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
440 [-]: JMP       443          ; PC := 443
441 [-]: GETGLOBAL R5 K13       ; R5 := _T
442 [-]: SETTABLE  R5 K189 K142 ; R5["ActiveQuestLoaded"] := true
443 [-]: GETGLOBAL R5 K190      ; R5 := 0x89326c93
444 [-]: SELF      R5 R5 K191   ; R6 := R5; R5 := R5[0xca9ea368]
445 [-]: CALL      R5 2 2       ; R5 := R5(R6)
446 [-]: GETGLOBAL R6 K192      ; R6 := 0xa94df70b
447 [-]: SELF      R6 R6 K193   ; R7 := R6; R6 := R6[0x85de842a]
448 [-]: MOVE      R8 R5        ; R8 := R5
449 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
450 [-]: TEST      R6 1         ; if R6 then PC := 472
451 [-]: JMP       472          ; PC := 472
452 [-]: GETUPVAL  R6 U28       ; R6 := U28
453 [-]: CALL      R6 1 1       ; R6()
454 [-]: GETGLOBAL R6 K13       ; R6 := _T
455 [-]: GETTABLE  R6 R6 K194   ; R6 := R6["BackgroundInitialized"]
456 [-]: EQ        1 R6 K142    ; if R6 == true then PC := 459
457 [-]: JMP       459          ; PC := 459
458 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 459
459 [-]: LOADKB    R6 1 0       ; R6 := true
460 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
461 [-]: GETGLOBAL R8 K176      ; R8 := 0x83f4e77c
462 [-]: CALL      R7 2 2       ; R7 := R7(R8)
463 [-]: TEST      R7 1         ; if R7 then PC := 467
464 [-]: JMP       467          ; PC := 467
465 [-]: TEST      R6 0         ; if not R6 then PC := 472
466 [-]: JMP       472          ; PC := 472
467 [-]: GETUPVAL  R7 U29       ; R7 := U29
468 [-]: LOADKB    R8 0 0       ; R8 := false
469 [-]: CALL      R7 2 1       ; R7(R8)
470 [-]: GETUPVAL  R7 U30       ; R7 := U30
471 [-]: SETTABLE  R7 K195 K196 ; R7["mForceRefreshWorldStatePostLogin"] := false
472 [-]: GETUPVAL  R7 U31       ; R7 := U31
473 [-]: GETTABLE  R7 R7 K197   ; R7 := R7[0x36fcc811]
474 [-]: CALL      R7 1 1       ; R7()
475 [-]: GETGLOBAL R7 K13       ; R7 := _T
476 [-]: GETUPVAL  R8 U32       ; R8 := U32
477 [-]: SETTABLE  R7 K198 R8   ; R7["ShowDioramaLevel"] := R8
478 [-]: GETGLOBAL R7 K13       ; R7 := _T
479 [-]: SETTABLE  R7 K194 K142 ; R7["BackgroundInitialized"] := true
480 [-]: GETGLOBAL R7 K178      ; R7 := 0x3d106989
481 [-]: LOADK     R8 K199      ; R8 := "Background.lua: Initialize"
482 [-]: CALL      R7 2 1       ; R7(R8)
483 [-]: RETURN    R0 1         ; return 


; Function #155.1:
;
; Name:            
; Defined at line: 5717
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x80563238]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x1dd7e0dd]
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x34291f5c
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0x68d83431]
 11 [-]: CALL      R1 1 2       ; R1 := R1()
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0xa6e1fb01]
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xbfa0067d]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: SELF      R4 R1 K8     ; R5 := R1; R4 := R1[0xeaa7e8dc]
 18 [-]: MOVE      R6 R3        ; R6 := R3
 19 [-]: CALL      R4 3 1       ; R4(R5,R6)
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: GETTABLE  R4 R4 K9     ; R4 := R4[0x6c3b4854]
 22 [-]: MOVE      R5 R1        ; R5 := R1
 23 [-]: MOVE      R6 R2        ; R6 := R2
 24 [-]: CALL      R4 3 1       ; R4(R5,R6)
 25 [-]: GETGLOBAL R4 K11       ; R4 := 0x161c62c5
 26 [-]: SETTABLE  R1 K10 R4    ; R1["level"] := R4
 27 [-]: GETGLOBAL R4 K4        ; R4 := 0x34291f5c
 28 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x4e0a1dfc]
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: CALL      R4 2 1       ; R4(R5)
 31 [-]: RETURN    R0 1         ; return 


; Function #155.2:
;
; Name:            
; Defined at line: 5739
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := mTimerMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbd2e96ea]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #155.3:
;
; Name:            
; Defined at line: 5814
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SETGLOBAL R0 K0        ; mPurchaseParams := R0
  2 [-]: SETUPVAL  R1 U0        ; U82 := R0
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
  5 [-]: LOADK     R4 K3        ; R4 := "BuyItem"
  6 [-]: LOADK     R5 K4        ; R5 := ""
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #155.4:
;
; Name:            
; Defined at line: 5821
; #Upvalues:       2
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x6c97a788
  2 [-]: GETTABLE  R5 R5 K1     ; R5 := R5[0xf89a99f3]
  3 [-]: CALL      R5 1 2       ; R5 := R5()
  4 [-]: GETUPVAL  R6 U0        ; R6 := U0
  5 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[0x6a6c9d79]
  6 [-]: CALL      R6 1 2       ; R6 := R6()
  7 [-]: SETTABLE  R5 K2 R6     ; R5["mSource"] := R6
  8 [-]: GETGLOBAL R6 K5        ; R6 := 0xb009bbc6
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 11 [-]: SETTABLE  R5 K4 R6     ; R5["mStoreItem"] := R6
 12 [-]: GETUPVAL  R6 U1        ; R6 := U1
 13 [-]: GETTABLE  R6 R6 K7     ; R6 := R6[0x06d055f9]
 14 [-]: MOVE      R7 R2        ; R7 := R2
 15 [-]: MOVE      R8 R2        ; R8 := R2
 16 [-]: CONST     R9 1         ; R9 := 1.000000
 17 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 18 [-]: SETTABLE  R5 K6 R6     ; R5["mQuantity"] := R6
 19 [-]: EQ        1 R3 K9      ; if R3 == true then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 22
 22 [-]: LOADKB    R6 1 0       ; R6 := true
 23 [-]: SETTABLE  R5 K8 R6     ; R5["mSkipConfirm"] := R6
 24 [-]: EQ        1 R4 K10     ; if R4 == nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: SETTABLE  R5 K11 R4    ; R5["mConfirmMsgOverride"] := R4
 27 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["mSource"]
 28 [-]: EQ        0 R6 K12     ; if R6 ~= 0.000000 then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETGLOBAL R6 K13       ; R6 := 0x7b998233
 31 [-]: GETGLOBAL R7 K14       ; R7 := _T
 32 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["CurrentStorePage"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: TEST      R6 1         ; if R6 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: GETGLOBAL R6 K14       ; R6 := _T
 37 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["CurrentStorePage"]
 38 [-]: SETTABLE  R5 K16 R6    ; R5["mStorePage"] := R6
 39 [-]: GETGLOBAL R6 K13       ; R6 := 0x7b998233
 40 [-]: GETGLOBAL R7 K14       ; R7 := _T
 41 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["CurrentSearchTerm"]
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: TEST      R6 1         ; if R6 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETGLOBAL R6 K14       ; R6 := _T
 46 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["CurrentSearchTerm"]
 47 [-]: SETTABLE  R5 K18 R6    ; R5["mSearchTerm"] := R6
 48 [-]: GETGLOBAL R6 K14       ; R6 := _T
 49 [-]: GETTABLE  R6 R6 K19    ; R6 := R6[0xfeca41e4]
 50 [-]: MOVE      R7 R5        ; R7 := R5
 51 [-]: MOVE      R8 R1        ; R8 := R1
 52 [-]: CALL      R6 3 1       ; R6(R7,R8)
 53 [-]: RETURN    R0 1         ; return 


; Function #155.5:
;
; Name:            
; Defined at line: 5874
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #155.6:
;
; Name:            
; Defined at line: 5879
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 5932
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xf616a184]
  3 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/MainMenu_LogoffConfirm"
  4 [-]: LOADK     R2 K2        ; R2 := "ConfirmLogoff"
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 5936
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xc92b1e03]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := _T
  5 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["BackgroundMovie"]
  6 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xf56f3887]
  7 [-]: LOADK     R2 K5        ; R2 := "ConfirmLogoff"
  8 [-]: NEWTABLE  R3 1 0       ; R3 := {}
  9 [-]: CONST     R4 4         ; R4 := 4.000000
 10 [-]: SETLIST   R3 1 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
 11 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 5941
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0xe7f2b02f
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x0b6ebd5b]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R1 K5        ; R1 := 0x3d106989
 12 [-]: LOADK     R2 K6        ; R2 := "ConfirmLogoff - IsBlockingTaskPending, waiting"
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: CALL      R1 1 1       ; R1()
 16 [-]: LOADKB    R1 1 0       ; R1 := true
 17 [-]: SETGLOBAL R1 K7        ; mQueuedLogoff := R1
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x3d106989
 20 [-]: LOADK     R2 K8        ; R2 := "Background.lua - ConfirmLogoff -> _FadeInOut -> _DoLogoff"
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: LOADK     R2 K9        ; R2 := 0.000100
 24 [-]: CONST     R3 20        ; R3 := 20.000000
 25 [-]: CONST     R4 1         ; R4 := 1.000000
 26 [-]: GETUPVAL  R5 U2        ; R5 := U2
 27 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 28 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 5954
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       3
; Max Stack Size:  15

  1 [-]: GETGLOBAL R3 K0        ; R3 := movies
  2 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  4 [-]: MOVE      R5 R3        ; R5 := R3
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 35
  7 [-]: JMP       35           ; PC := 35
  8 [-]: GETGLOBAL R4 K2        ; R4 := 0x9ba7909f
  9 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xbcfb64ab]
 10 [-]: MOVE      R6 R3        ; R6 := R3
 11 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 12 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 35
 16 [-]: JMP       35           ; PC := 35
 17 [-]: LOADK     R5 K4        ; R5 := ""
 18 [-]: GETGLOBAL R6 K5        ; R6 := 0xc8802016
 19 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 20 [-]: VARARG    R8 0         ; R8 := ...
 21 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 22 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 23 [-]: JMP       28           ; PC := 28
 24 [-]: MOVE      R11 R5       ; R11 := R5
 25 [-]: LOADK     R12 K6       ; R12 := ","
 26 [-]: MOVE      R13 R10      ; R13 := R10
 27 [-]: CONCAT    R5 R11 R13   ; R5 := R11 .. R12 .. R13
 28 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 24; R8 := R9 end
 29 [-]: JMP       24           ; PC := 24
 30 [-]: SELF      R11 R4 K7    ; R12 := R4; R11 := R4[0xe4162eed]
 31 [-]: MOVE      R13 R1       ; R13 := R1
 32 [-]: MOVE      R14 R5       ; R14 := R5
 33 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 34 [-]: RETURN    R11 2        ; return R11
 35 [-]: LOADKB    R11 0 0      ; R11 := false
 36 [-]: RETURN    R11 2        ; return R11
 37 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 5969
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       3
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: VARARG    R6 0         ; R6 := ...
  5 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 5973
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := movies
  2 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  4 [-]: MOVE      R5 R3        ; R5 := R3
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 22
  7 [-]: JMP       22           ; PC := 22
  8 [-]: GETGLOBAL R4 K2        ; R4 := 0x9ba7909f
  9 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xbcfb64ab]
 10 [-]: MOVE      R6 R3        ; R6 := R3
 11 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 12 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: SELF      R5 R4 K4     ; R6 := R4; R5 := R4[0xe4162eed]
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: MOVE      R8 R2        ; R8 := R2
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: RETURN    R5 2         ; return R5
 22 [-]: LOADKB    R5 0 0       ; R5 := false
 23 [-]: RETURN    R5 2         ; return R5
 24 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 5984
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       3
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  2 [-]: GETGLOBAL R3 K0        ; R3 := screenStack
  3 [-]: LEN       R3 R3        ; R3 := # R3
  4 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: VARARG    R6 0         ; R6 := ...
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 5989
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  6 [-]: GETGLOBAL R2 K2        ; R2 := mStyleBackgroundMovie
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R1 K2        ; R1 := mStyleBackgroundMovie
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x2d6bad65]
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x06d055f9]
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: GETGLOBAL R5 K5        ; R5 := 0x0c4ff375
 16 [-]: GETGLOBAL R6 K6        ; R6 := 0xd80c3870
 17 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 5996
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xbdad5a54
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xe4162eed]
 11 [-]: LOADK     R3 K5        ; R3 := "UpdatePurchases"
 12 [-]: LOADK     R4 K6        ; R4 := ""
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
 15 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbcfb64ab]
 16 [-]: GETGLOBAL R3 K7        ; R3 := 0xe44a533a
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xe4162eed]
 24 [-]: LOADK     R4 K8        ; R4 := "RefreshBoosters"
 25 [-]: LOADK     R5 K6        ; R5 := ""
 26 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 6008
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xbdad5a54
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0x32302b4a]
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 6015
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CONST     R2 2         ; R2 := 2.000000
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 6019
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CONST     R1 0         ; R1 := 0.000000
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 6023
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  3 [-]: SETTABLE  R0 K1 R1     ; R0[0x33bdd652] := R1
  4 [-]: CONST     R0 1         ; R0 := 1.000000
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mNumberOfCardsInPack"]
  7 [-]: CONST     R2 1         ; R2 := 1.000000
  8 [-]: FORPREP   R0 23        ; R0 -= R2; PC := 23
  9 [-]: GETGLOBAL R4 K3        ; R4 := 0x33bdd652
 10 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0x23d5322f]
 11 [-]: GETGLOBAL R5 K0        ; R5 := _T
 12 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["boosterPackCards"]
 13 [-]: GETUPVAL  R6 U0        ; R6 := U0
 14 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mBoosterPackResults"]
 15 [-]: GETTABLE  R6 R6 K6     ; R6 := R6[1.000000]
 16 [-]: CALL      R4 3 1       ; R4(R5,R6)
 17 [-]: GETGLOBAL R4 K3        ; R4 := 0x33bdd652
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x9c1f3b5a]
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mBoosterPackResults"]
 21 [-]: CONST     R6 1         ; R6 := 1.000000
 22 [-]: CALL      R4 3 1       ; R4(R5,R6)
 23 [-]: FORLOOP   R0 9         ; R0 += R2; if R0 <= R1 then begin PC := 9; R3 := R0 end
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mNumberOfPacksToProcess"]
 27 [-]: SUB       R5 R5 K6     ; R5 := R5 - 1.000000
 28 [-]: SETTABLE  R4 K8 R5     ; R4[0x303eb010] := R5
 29 [-]: GETGLOBAL R4 K0        ; R4 := _T
 30 [-]: GETUPVAL  R5 U1        ; R5 := U1
 31 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x06d055f9]
 32 [-]: GETUPVAL  R6 U0        ; R6 := U0
 33 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mNumberOfPacksToProcess"]
 34 [-]: EQ        1 R6 K11     ; if R6 == 0.000000 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 37
 37 [-]: LOADKB    R6 1 0       ; R6 := true
 38 [-]: LOADNIL   R7 R7        ; R7 := nil
 39 [-]: GETUPVAL  R8 U0        ; R8 := U0
 40 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mNumberOfPacksToProcess"]
 41 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 42 [-]: SETTABLE  R4 K9 R5     ; R4["queuedBoosterPacks"] := R5
 43 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 44 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x1fd6abd0]
 45 [-]: GETGLOBAL R6 K14       ; R6 := 0x39803e25
 46 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 47 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
 48 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0x42b04007]
 49 [-]: LOADK     R7 K16       ; R7 := "/Lotus/Language/Menu/Store_GetRandomItem"
 50 [-]: LOADKB    R8 0 0       ; R8 := false
 51 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 52 [-]: GETUPVAL  R10 U0       ; R10 := U0
 53 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["mBoosterPackItemString"]
 54 [-]: SETTABLE  R9 K17 R10   ; R9[0xbe190284] := R10
 55 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 56 [-]: GETUPVAL  R6 U1        ; R6 := U1
 57 [-]: GETTABLE  R6 R6 K19    ; R6 := R6[0x659d451f]
 58 [-]: GETGLOBAL R7 K20       ; R7 := 0x0032441c
 59 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["UISound_Purchase"]
 60 [-]: CALL      R6 2 1       ; R6(R7)
 61 [-]: SELF      R6 R4 K22    ; R7 := R4; R6 := R4[0xf56f3887]
 62 [-]: LOADK     R8 K23       ; R8 := "SetText"
 63 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 64 [-]: MOVE      R10 R5       ; R10 := R5
 65 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 66 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 67 [-]: GETUPVAL  R6 U0        ; R6 := U0
 68 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mNumberOfPacksToProcess"]
 69 [-]: LT        0 R6 K6      ; if R6 >= 1.000000 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: SELF      R6 R4 K24    ; R7 := R4; R6 := R4[0xe4162eed]
 72 [-]: LOADK     R8 K25       ; R8 := "SetCallback"
 73 [-]: LOADK     R9 K26       ; R9 := "ConfirmPopup"
 74 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 75 [-]: JMP       80           ; PC := 80
 76 [-]: SELF      R6 R4 K24    ; R7 := R4; R6 := R4[0xe4162eed]
 77 [-]: LOADK     R8 K25       ; R8 := "SetCallback"
 78 [-]: LOADK     R9 K27       ; R9 := "ProcessBoosterPacks"
 79 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 80 [-]: GETUPVAL  R6 U0        ; R6 := U0
 81 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["mTotalPacksToProcess"]
 82 [-]: LT        0 K6 R6      ; if 1.000000 >= R6 then PC := 102
 83 [-]: JMP       102          ; PC := 102
 84 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
 85 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x42b04007]
 86 [-]: LOADK     R8 K29       ; R8 := "/Lotus/Language/Menu/Pack_Display_Count"
 87 [-]: LOADKB    R9 0 0       ; R9 := false
 88 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 89 [-]: GETGLOBAL R7 K30       ; R7 := 0x7f5022cf
 90 [-]: GETTABLE  R7 R7 K31    ; R7 := R7[0xe8072ded]
 91 [-]: MOVE      R8 R6        ; R8 := R6
 92 [-]: GETUPVAL  R9 U0        ; R9 := U0
 93 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["mCurrentPack"]
 94 [-]: GETUPVAL  R10 U0       ; R10 := U0
 95 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["mTotalPacksToProcess"]
 96 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 97 [-]: MOVE      R6 R7        ; R6 := R7
 98 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xe4162eed]
 99 [-]: LOADK     R9 K33       ; R9 := "SetCaption"
100 [-]: MOVE      R10 R6       ; R10 := R6
101 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
102 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xe4162eed]
103 [-]: LOADK     R9 K34       ; R9 := "SetNumOptions"
104 [-]: CONST     R10 1        ; R10 := 1.000000
105 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
106 [-]: GETUPVAL  R7 U0        ; R7 := U0
107 [-]: GETUPVAL  R8 U0        ; R8 := U0
108 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mCurrentPack"]
109 [-]: ADD       R8 R8 K6     ; R8 := R8 + 1.000000
110 [-]: SETTABLE  R7 K32 R8    ; R7["mCurrentPack"] := R8
111 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 6050
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 6054
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  3 [-]: SETTABLE  R3 K0 R4     ; R3["mBoosterPackResults"] := R4
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: SETTABLE  R3 K1 K2     ; R3["mBoosterPackItemString"] := ""
  6 [-]: LOADKB    R3 0 0       ; R3 := false
  7 [-]: GETGLOBAL R4 K3        ; R4 := 0x76ea806b
  8 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x3f3ae64c]
  9 [-]: CONST     R6 0         ; R6 := 0.000000
 10 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 11 [-]: SELF      R5 R4 K5     ; R6 := R4; R5 := R4[0x80563238]
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 14 [-]: LEN       R7 R1        ; R7 := # R1
 15 [-]: EQ        0 R7 K6      ; if R7 ~= 0.000000 then PC := 43
 16 [-]: JMP       43           ; PC := 43
 17 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["KubrowPetEggs"]
 18 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADKB    R3 1 0       ; R3 := true
 21 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["MiscItems"]
 22 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 162
 23 [-]: JMP       162          ; PC := 162
 24 [-]: CONST     R7 1         ; R7 := 1.000000
 25 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["MiscItems"]
 26 [-]: LEN       R8 R8        ; R8 := # R8
 27 [-]: CONST     R9 1         ; R9 := 1.000000
 28 [-]: FORPREP   R7 41        ; R7 -= R9; PC := 41
 29 [-]: GETGLOBAL R11 K10      ; R11 := 0x7ed0a956
 30 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["MiscItems"]
 31 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
 32 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["ItemType"]
 33 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 34 [-]: SELF      R12 R11 K12  ; R13 := R11; R12 := R11[0xf2deaf69]
 35 [-]: GETGLOBAL R14 K13      ; R14 := 0x2fb8423c
 36 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 37 [-]: TEST      R12 0        ; if not R12 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: LOADKB    R12 1 0      ; R12 := true
 40 [-]: SETGLOBAL R12 K14      ; mBoughtShipFeatureItem := R12
 41 [-]: FORLOOP   R7 29        ; R7 += R9; if R7 <= R8 then begin PC := 29; R10 := R7 end
 42 [-]: JMP       162          ; PC := 162
 43 [-]: CONST     R12 1        ; R12 := 1.000000
 44 [-]: LEN       R13 R1       ; R13 := # R1
 45 [-]: CONST     R14 1        ; R14 := 1.000000
 46 [-]: FORPREP   R12 152      ; R12 -= R14; PC := 152
 47 [-]: GETGLOBAL R16 K15      ; R16 := 0x015284cd
 48 [-]: LOADK     R17 K16      ; R17 := ","
 49 [-]: GETTABLE  R18 R1 R15   ; R18 := R1[R15]
 50 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 51 [-]: LEN       R17 R16      ; R17 := # R16
 52 [-]: EQ        0 R17 K17    ; if R17 ~= 1.000000 then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: GETGLOBAL R17 K18      ; R17 := 0x3d106989
 55 [-]: LOADK     R18 K19      ; R18 := "Parse failure: "
 56 [-]: MOVE      R19 R2       ; R19 := R2
 57 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 58 [-]: CALL      R17 2 1      ; R17(R18)
 59 [-]: GETUPVAL  R17 U1       ; R17 := U1
 60 [-]: LOADKB    R18 0 0      ; R18 := false
 61 [-]: CALL      R17 2 1      ; R17(R18)
 62 [-]: GETUPVAL  R17 U2       ; R17 := U2
 63 [-]: CALL      R17 1 1      ; R17()
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: JMP       152          ; PC := 152
 66 [-]: LEN       R17 R16      ; R17 := # R16
 67 [-]: LE        0 K20 R17    ; if 2.000000 > R17 then PC := 152
 68 [-]: JMP       152          ; PC := 152
 69 [-]: GETTABLE  R17 R16 K17  ; R17 := R16[1.000000]
 70 [-]: GETTABLE  R18 R16 K20  ; R18 := R16[2.000000]
 71 [-]: GETGLOBAL R19 K21      ; R19 := 0xb009bbc6
 72 [-]: MOVE      R20 R17      ; R20 := R17
 73 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 74 [-]: GETGLOBAL R20 K22      ; R20 := 0x7b998233
 75 [-]: MOVE      R21 R19      ; R21 := R19
 76 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 77 [-]: TEST      R20 1        ; if R20 then PC := 152
 78 [-]: JMP       152          ; PC := 152
 79 [-]: SELF      R20 R19 K23  ; R21 := R19; R20 := R19[0xf278f8a1]
 80 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 81 [-]: SELF      R20 R20 K12  ; R21 := R20; R20 := R20[0xf2deaf69]
 82 [-]: GETGLOBAL R22 K24      ; R22 := gLotusArtifactUpgradeType
 83 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 84 [-]: TEST      R20 0        ; if not R20 then PC := 118
 85 [-]: JMP       118          ; PC := 118
 86 [-]: GETGLOBAL R20 K25      ; R20 := 0x6c97a788
 87 [-]: GETTABLE  R20 R20 K26  ; R20 := R20[0x1aba4d9e]
 88 [-]: CALL      R20 1 2      ; R20 := R20()
 89 [-]: SELF      R21 R19 K23  ; R22 := R19; R21 := R19[0xf278f8a1]
 90 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 91 [-]: SETTABLE  R20 K27 R21  ; R20["mItemType"] := R21
 92 [-]: SETTABLE  R20 K28 K17  ; R20["mItemCount"] := 1.000000
 93 [-]: LOADKB    R21 0 0      ; R21 := false
 94 [-]: CONST     R22 1        ; R22 := 1.000000
 95 [-]: LEN       R23 R6       ; R23 := # R6
 96 [-]: CONST     R24 1        ; R24 := 1.000000
 97 [-]: FORPREP   R22 110      ; R22 -= R24; PC := 110
 98 [-]: GETTABLE  R26 R6 R25   ; R26 := R6[R25]
 99 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["mItemType"]
100 [-]: GETTABLE  R27 R20 K27  ; R27 := R20["mItemType"]
101 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 110
102 [-]: JMP       110          ; PC := 110
103 [-]: GETTABLE  R26 R6 R25   ; R26 := R6[R25]
104 [-]: GETTABLE  R27 R6 R25   ; R27 := R6[R25]
105 [-]: GETTABLE  R27 R27 K28  ; R27 := R27["mItemCount"]
106 [-]: ADD       R27 R27 K17  ; R27 := R27 + 1.000000
107 [-]: SETTABLE  R26 K28 R27  ; R26["mItemCount"] := R27
108 [-]: LOADKB    R21 1 0      ; R21 := true
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R22 98       ; R22 += R24; if R22 <= R23 then begin PC := 98; R25 := R22 end
111 [-]: TEST      R21 1        ; if R21 then PC := 118
112 [-]: JMP       118          ; PC := 118
113 [-]: GETGLOBAL R26 K29      ; R26 := 0x33bdd652
114 [-]: GETTABLE  R26 R26 K30  ; R26 := R26[0x23d5322f]
115 [-]: MOVE      R27 R6       ; R27 := R6
116 [-]: MOVE      R28 R20      ; R28 := R20
117 [-]: CALL      R26 3 1      ; R26(R27,R28)
118 [-]: GETGLOBAL R26 K29      ; R26 := 0x33bdd652
119 [-]: GETTABLE  R26 R26 K30  ; R26 := R26[0x23d5322f]
120 [-]: GETUPVAL  R27 U0       ; R27 := U0
121 [-]: GETTABLE  R27 R27 K0   ; R27 := R27["mBoosterPackResults"]
122 [-]: NEWTABLE  R28 2 0      ; R28 := {}
123 [-]: MOVE      R29 R19      ; R29 := R19
124 [-]: MOVE      R30 R18      ; R30 := R18
125 [-]: SETLIST   R28 2 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
126 [-]: CALL      R26 3 1      ; R26(R27,R28)
127 [-]: GETGLOBAL R26 K31      ; R26 := 0xae91e43b
128 [-]: SELF      R26 R26 K32  ; R27 := R26; R26 := R26[0x42b04007]
129 [-]: GETGLOBAL R28 K33      ; R28 := 0x64fb1586
130 [-]: SELF      R29 R19 K34  ; R30 := R19; R29 := R19[0xd3a9d01f]
131 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
132 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
133 [-]: LOADKB    R29 0 0      ; R29 := false
134 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
135 [-]: GETUPVAL  R27 U0       ; R27 := U0
136 [-]: GETTABLE  R27 R27 K0   ; R27 := R27["mBoosterPackResults"]
137 [-]: LEN       R27 R27      ; R27 := # R27
138 [-]: LT        0 K17 R27    ; if 1.000000 >= R27 then PC := 146
139 [-]: JMP       146          ; PC := 146
140 [-]: GETUPVAL  R27 U0       ; R27 := U0
141 [-]: GETUPVAL  R28 U0       ; R28 := U0
142 [-]: GETTABLE  R28 R28 K1   ; R28 := R28["mBoosterPackItemString"]
143 [-]: LOADK     R29 K35      ; R29 := "\\,"
144 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
145 [-]: SETTABLE  R27 K1 R28   ; R27["mBoosterPackItemString"] := R28
146 [-]: GETUPVAL  R27 U0       ; R27 := U0
147 [-]: GETUPVAL  R28 U0       ; R28 := U0
148 [-]: GETTABLE  R28 R28 K1   ; R28 := R28["mBoosterPackItemString"]
149 [-]: MOVE      R29 R26      ; R29 := R26
150 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
151 [-]: SETTABLE  R27 K1 R28   ; R27["mBoosterPackItemString"] := R28
152 [-]: FORLOOP   R12 47       ; R12 += R14; if R12 <= R13 then begin PC := 47; R15 := R12 end
153 [-]: CONST     R27 1        ; R27 := 1.000000
154 [-]: LEN       R28 R6       ; R28 := # R6
155 [-]: CONST     R29 1        ; R29 := 1.000000
156 [-]: FORPREP   R27 161      ; R27 -= R29; PC := 161
157 [-]: SELF      R31 R5 K36   ; R32 := R5; R31 := R5[0x303eb010]
158 [-]: GETTABLE  R33 R6 R30   ; R33 := R6[R30]
159 [-]: LOADKB    R34 1 0      ; R34 := true
160 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
161 [-]: FORLOOP   R27 157      ; R27 += R29; if R27 <= R28 then begin PC := 157; R30 := R27 end
162 [-]: GETUPVAL  R31 U0       ; R31 := U0
163 [-]: GETTABLE  R31 R31 K0   ; R31 := R31["mBoosterPackResults"]
164 [-]: LEN       R31 R31      ; R31 := # R31
165 [-]: LT        0 K6 R31     ; if 0.000000 >= R31 then PC := 187
166 [-]: JMP       187          ; PC := 187
167 [-]: GETUPVAL  R31 U0       ; R31 := U0
168 [-]: GETGLOBAL R32 K38      ; R32 := mQuantityToReceive
169 [-]: SETTABLE  R31 K37 R32  ; R31["mTotalPacksToProcess"] := R32
170 [-]: GETUPVAL  R31 U0       ; R31 := U0
171 [-]: GETUPVAL  R32 U0       ; R32 := U0
172 [-]: GETTABLE  R32 R32 K0   ; R32 := R32["mBoosterPackResults"]
173 [-]: LEN       R32 R32      ; R32 := # R32
174 [-]: GETUPVAL  R33 U0       ; R33 := U0
175 [-]: GETTABLE  R33 R33 K37  ; R33 := R33["mTotalPacksToProcess"]
176 [-]: DIV       R32 R32 R33  ; R32 := R32 / R33
177 [-]: SETTABLE  R31 K39 R32  ; R31["mNumberOfCardsInPack"] := R32
178 [-]: GETUPVAL  R31 U0       ; R31 := U0
179 [-]: SETTABLE  R31 K40 K17  ; R31["mCurrentPack"] := 1.000000
180 [-]: GETUPVAL  R31 U0       ; R31 := U0
181 [-]: GETUPVAL  R32 U0       ; R32 := U0
182 [-]: GETTABLE  R32 R32 K37  ; R32 := R32["mTotalPacksToProcess"]
183 [-]: SETTABLE  R31 K41 R32  ; R31[0x42b04007] := R32
184 [-]: GETUPVAL  R31 U3       ; R31 := U3
185 [-]: CALL      R31 1 1      ; R31()
186 [-]: JMP       192          ; PC := 192
187 [-]: GETGLOBAL R31 K31      ; R31 := 0xae91e43b
188 [-]: SELF      R31 R31 K43  ; R32 := R31; R31 := R31[0x1fd6abd0]
189 [-]: GETGLOBAL R33 K44      ; R33 := 0x09de914d
190 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
191 [-]: SETGLOBAL R31 K42      ; mPurchasePopupMovie := R31
192 [-]: TEST      R3 0         ; if not R3 then PC := 219
193 [-]: JMP       219          ; PC := 219
194 [-]: GETGLOBAL R31 K45      ; R31 := 0xbe190284
195 [-]: SELF      R31 R31 K12  ; R32 := R31; R31 := R31[0xf2deaf69]
196 [-]: GETGLOBAL R33 K46      ; R33 := gLotusAttractModeGameRulesType
197 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
198 [-]: TEST      R31 0        ; if not R31 then PC := 219
199 [-]: JMP       219          ; PC := 219
200 [-]: GETGLOBAL R31 K45      ; R31 := 0xbe190284
201 [-]: SELF      R31 R31 K47  ; R32 := R31; R31 := R31[0x7cf8123f]
202 [-]: CONST     R33 1        ; R33 := 1.000000
203 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
204 [-]: GETGLOBAL R32 K22      ; R32 := 0x7b998233
205 [-]: MOVE      R33 R31      ; R33 := R31
206 [-]: CALL      R32 2 2      ; R32 := R32(R33)
207 [-]: TEST      R32 0        ; if not R32 then PC := 219
208 [-]: JMP       219          ; PC := 219
209 [-]: GETGLOBAL R32 K48      ; R32 := _T
210 [-]: GETTABLE  R32 R32 K49  ; R32 := R32["domeCommands"]
211 [-]: TEST      R32 0        ; if not R32 then PC := 219
212 [-]: JMP       219          ; PC := 219
213 [-]: GETGLOBAL R32 K48      ; R32 := _T
214 [-]: GETTABLE  R32 R32 K49  ; R32 := R32["domeCommands"]
215 [-]: GETTABLE  R32 R32 K50  ; R32 := R32["Cycle"]
216 [-]: NEWTABLE  R33 0 1      ; R33 := {}
217 [-]: SETTABLE  R33 K51 K52  ; R33["opaque"] := true
218 [-]: CALL      R32 2 1      ; R32(R33)
219 [-]: GETUPVAL  R32 U2       ; R32 := U2
220 [-]: CALL      R32 1 1      ; R32()
221 [-]: GETGLOBAL R32 K14      ; R32 := mBoughtShipFeatureItem
222 [-]: TEST      R32 0        ; if not R32 then PC := 230
223 [-]: JMP       230          ; PC := 230
224 [-]: GETUPVAL  R32 U4       ; R32 := U4
225 [-]: GETTABLE  R32 R32 K53  ; R32 := R32[0x22828de3]
226 [-]: LOADKB    R33 0 0      ; R33 := false
227 [-]: CALL      R32 2 1      ; R32(R33)
228 [-]: LOADKB    R32 0 0      ; R32 := false
229 [-]: SETGLOBAL R32 K14      ; mBoughtShipFeatureItem := R32
230 [-]: GETUPVAL  R32 U1       ; R32 := U1
231 [-]: LOADKB    R33 1 0      ; R33 := true
232 [-]: CALL      R32 2 1      ; R32(R33)
233 [-]: GETTABLE  R32 R0 K54   ; R32 := R0["QuestKeys"]
234 [-]: EQ        1 R32 K8     ; if R32 == nil then PC := 240
235 [-]: JMP       240          ; PC := 240
236 [-]: GETUPVAL  R32 U4       ; R32 := U4
237 [-]: GETTABLE  R32 R32 K55  ; R32 := R32[0x7c37aeec]
238 [-]: LOADKB    R33 1 0      ; R33 := true
239 [-]: CALL      R32 2 1      ; R32(R33)
240 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 6163
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: TEST      R0 1         ; if R0 then PC := 85
  2 [-]: JMP       85           ; PC := 85
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R2 1 1       ; R2()
 10 [-]: LOADK     R2 K2        ; R2 := "PurchaseFailure_UnknownError"
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 52
 15 [-]: JMP       52           ; PC := 52
 16 [-]: EQ        0 R3 K5      ; if R3 ~= 6.000000 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R2 K6        ; R2 := "PurchaseFailure_InvalidItem"
 19 [-]: JMP       59           ; PC := 59
 20 [-]: EQ        0 R3 K7      ; if R3 ~= 5.000000 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R2 K8        ; R2 := "PurchaseFailure_InsufficientSlots"
 23 [-]: JMP       59           ; PC := 59
 24 [-]: EQ        0 R3 K9      ; if R3 ~= 4.000000 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: LOADK     R2 K10       ; R2 := "PurchaseFailure_InvalidAccount"
 27 [-]: JMP       59           ; PC := 59
 28 [-]: EQ        0 R3 K11     ; if R3 ~= 3.000000 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADK     R2 K12       ; R2 := "PurchaseFailure_AuthenticationFailed"
 31 [-]: JMP       59           ; PC := 59
 32 [-]: EQ        0 R3 K13     ; if R3 ~= 2.000000 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: LOADK     R2 K14       ; R2 := "PurchaseFailure_InsufficientXP"
 35 [-]: JMP       59           ; PC := 59
 36 [-]: EQ        0 R3 K15     ; if R3 ~= 1.000000 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: LOADK     R2 K16       ; R2 := "PurchaseFailure_InsufficientFunds"
 39 [-]: JMP       59           ; PC := 59
 40 [-]: EQ        0 R3 K17     ; if R3 ~= 13.000000 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADK     R2 K18       ; R2 := "PurchaseFailure_OutOfStock"
 43 [-]: JMP       59           ; PC := 59
 44 [-]: EQ        0 R3 K19     ; if R3 ~= 15.000000 then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: LOADK     R2 K20       ; R2 := "PurchaseFailure_NewBuild"
 47 [-]: JMP       59           ; PC := 59
 48 [-]: EQ        0 R3 K21     ; if R3 ~= 21.000000 then PC := 59
 49 [-]: JMP       59           ; PC := 59
 50 [-]: LOADK     R2 K22       ; R2 := "Store_AlreadyOwned_Switch"
 51 [-]: JMP       59           ; PC := 59
 52 [-]: GETUPVAL  R4 U1        ; R4 := U1
 53 [-]: GETTABLE  R4 R4 K23    ; R4 := R4[0x7b3cf471]
 54 [-]: MOVE      R5 R1        ; R5 := R1
 55 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 56 [-]: TEST      R4 0         ; if not R4 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: LOADK     R2 K24       ; R2 := "PurchaseFailure_ConnectionError"
 59 [-]: GETGLOBAL R4 K25       ; R4 := 0xae91e43b
 60 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4[0x42b04007]
 61 [-]: LOADK     R6 K27       ; R6 := "/Lotus/Language/Menu/PurchaseFailure"
 62 [-]: LOADKB    R7 1 0       ; R7 := true
 63 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 64 [-]: GETGLOBAL R5 K25       ; R5 := 0xae91e43b
 65 [-]: SELF      R5 R5 K26    ; R6 := R5; R5 := R5[0x42b04007]
 66 [-]: LOADK     R7 K28       ; R7 := "/Lotus/Language/Menu/"
 67 [-]: MOVE      R8 R2        ; R8 := R2
 68 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 69 [-]: LOADKB    R8 1 0       ; R8 := true
 70 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 71 [-]: MOVE      R6 R4        ; R6 := R4
 72 [-]: LOADK     R7 K29       ; R7 := " ("
 73 [-]: MOVE      R8 R5        ; R8 := R5
 74 [-]: LOADK     R9 K30       ; R9 := ")"
 75 [-]: CONCAT    R4 R6 R9     ; R4 := R6 .. R7 .. R8 .. R9
 76 [-]: GETUPVAL  R6 U1        ; R6 := U1
 77 [-]: GETTABLE  R6 R6 K31    ; R6 := R6[0xe0cba3ca]
 78 [-]: MOVE      R7 R4        ; R7 := R4
 79 [-]: LOADK     R8 K32       ; R8 := "ConfirmPopup"
 80 [-]: CALL      R6 3 1       ; R6(R7,R8)
 81 [-]: GETUPVAL  R6 U2        ; R6 := U2
 82 [-]: LOADKB    R7 0 0       ; R7 := false
 83 [-]: CALL      R6 2 1       ; R6(R7)
 84 [-]: RETURN    R0 1         ; return 
 85 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 86 [-]: GETGLOBAL R7 K33       ; R7 := cjson
 87 [-]: GETTABLE  R7 R7 K34    ; R7 := R7[0x7ab914d8]
 88 [-]: MOVE      R8 R1        ; R8 := R1
 89 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 90 [-]: GETTABLE  R8 R7 K35    ; R8 := R7["BoosterPackItems"]
 91 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 98
 92 [-]: JMP       98           ; PC := 98
 93 [-]: GETGLOBAL R8 K36       ; R8 := 0x015284cd
 94 [-]: LOADK     R9 K37       ; R9 := ";"
 95 [-]: GETTABLE  R10 R7 K35   ; R10 := R7["BoosterPackItems"]
 96 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 97 [-]: MOVE      R6 R8        ; R6 := R8
 98 [-]: GETUPVAL  R8 U3        ; R8 := U3
 99 [-]: GETTABLE  R9 R7 K38    ; R9 := R7["InventoryChanges"]
100 [-]: MOVE      R10 R6       ; R10 := R6
101 [-]: MOVE      R11 R1       ; R11 := R1
102 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
103 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 6211
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADNIL   R2 R2        ; R2 := nil
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 6215
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADNIL   R2 R2        ; R2 := nil
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: LOADK     R1 K0        ; R1 := ""
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0xcb79539e
  6 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETGLOBAL R2 K3        ; R2 := mBaseSourceType
  9 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R2 K3        ; R2 := mBaseSourceType
 12 [-]: EQ        1 R2 K0      ; if R2 == "" then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETGLOBAL R3 K3        ; R3 := mBaseSourceType
 16 [-]: ADD       R3 R3 K4     ; R3 := R3 + 1.000000
 17 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
 18 [-]: JMP       20           ; PC := 20
 19 [-]: GETGLOBAL R1 K5        ; R1 := mPurchaseOrigin
 20 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: LOADK     R1 K0        ; R1 := ""
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0x03f57322
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: EQ        0 R2 K8      ; if R2 ~= 4.000000 then PC := 94
 27 [-]: JMP       94           ; PC := 94
 28 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 29 [-]: GETGLOBAL R3 K1        ; R3 := 0xcb79539e
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: TEST      R2 1         ; if R2 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETGLOBAL R2 K1        ; R2 := 0xcb79539e
 34 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x8b8fb8b7]
 35 [-]: GETGLOBAL R4 K11       ; R4 := 0x0469f296
 36 [-]: LOADK     R5 K12       ; R5 := "INSUFFICIENT_PLAT_POPUP"
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: MOVE      R5 R1        ; R5 := R1
 39 [-]: LOADK     R6 K13       ; R6 := "_YES"
 40 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 41 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 42 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 43 [-]: GETTABLE  R2 R2 K14    ; R2 := R2[0x9e503547]
 44 [-]: CALL      R2 1 2       ; R2 := R2()
 45 [-]: TEST      R2 0         ; if not R2 then PC := 52
 46 [-]: JMP       52           ; PC := 52
 47 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 48 [-]: GETTABLE  R2 R2 K15    ; R2 := R2[0xbcd06415]
 49 [-]: CALL      R2 1 2       ; R2 := R2()
 50 [-]: TEST      R2 1         ; if R2 then PC := 71
 51 [-]: JMP       71           ; PC := 71
 52 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 53 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0x49d4c6fc]
 54 [-]: CALL      R2 1 2       ; R2 := R2()
 55 [-]: TEST      R2 0         ; if not R2 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETGLOBAL R2 K17       ; R2 := 0x76ea806b
 58 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0x3f3ae64c]
 59 [-]: CONST     R4 0         ; R4 := 0.000000
 60 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 61 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xfe6131c3]
 62 [-]: LOADK     R4 K20       ; R4 := "steam_market"
 63 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 64 [-]: TEST      R2 1         ; if R2 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 67 [-]: GETTABLE  R2 R2 K21    ; R2 := R2[0x9ad21ae9]
 68 [-]: CALL      R2 1 2       ; R2 := R2()
 69 [-]: TEST      R2 0         ; if not R2 then PC := 78
 70 [-]: JMP       78           ; PC := 78
 71 [-]: GETGLOBAL R2 K22       ; R2 := 0x2d0fad09
 72 [-]: LOADK     R3 K23       ; R3 := "Lotus.Interface.StoreItemUtilities"
 73 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 74 [-]: GETTABLE  R3 R2 K24    ; R3 := R2[0x80d045d2]
 75 [-]: GETGLOBAL R4 K25       ; R4 := 0xae91e43b
 76 [-]: CALL      R3 2 1       ; R3(R4)
 77 [-]: JMP       108          ; PC := 108
 78 [-]: GETGLOBAL R3 K17       ; R3 := 0x76ea806b
 79 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0x3f3ae64c]
 80 [-]: CONST     R5 0         ; R5 := 0.000000
 81 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 82 [-]: SELF      R4 R3 K19    ; R5 := R3; R4 := R3[0xfe6131c3]
 83 [-]: LOADK     R6 K26       ; R6 := "direct_platinum"
 84 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 85 [-]: TEST      R4 0         ; if not R4 then PC := 90
 86 [-]: JMP       90           ; PC := 90
 87 [-]: GETUPVAL  R4 U2        ; R4 := U2
 88 [-]: CALL      R4 1 1       ; R4()
 89 [-]: JMP       108          ; PC := 108
 90 [-]: GETUPVAL  R4 U3        ; R4 := U3
 91 [-]: MOVE      R5 R1        ; R5 := R1
 92 [-]: CALL      R4 2 1       ; R4(R5)
 93 [-]: JMP       108          ; PC := 108
 94 [-]: GETGLOBAL R4 K9        ; R4 := 0x7b998233
 95 [-]: GETGLOBAL R5 K1        ; R5 := 0xcb79539e
 96 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 97 [-]: TEST      R4 1         ; if R4 then PC := 108
 98 [-]: JMP       108          ; PC := 108
 99 [-]: GETGLOBAL R4 K1        ; R4 := 0xcb79539e
100 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x8b8fb8b7]
101 [-]: GETGLOBAL R6 K11       ; R6 := 0x0469f296
102 [-]: LOADK     R7 K12       ; R7 := "INSUFFICIENT_PLAT_POPUP"
103 [-]: CALL      R6 2 2       ; R6 := R6(R7)
104 [-]: MOVE      R7 R1        ; R7 := R1
105 [-]: LOADK     R8 K27       ; R8 := "_NO"
106 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
107 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
108 [-]: LOADK     R4 K0        ; R4 := ""
109 [-]: SETGLOBAL R4 K3        ; mBaseSourceType := R4
110 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 6252
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UpgradeDurabilityCallback"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 26
  9 [-]: JMP       26           ; PC := 26
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 11 [-]: GETGLOBAL R2 K2        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UpgradeDurabilityCallbackMovie"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R1 K2        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["UpgradeDurabilityCallbackMovie"]
 18 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xe4162eed]
 19 [-]: GETGLOBAL R3 K2        ; R3 := _T
 20 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UpgradeDurabilityCallback"]
 21 [-]: GETGLOBAL R4 K6        ; R4 := 0x64fb1586
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 24 [-]: CALL      R1 0 1       ; R1(R2,...)
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: GETGLOBAL R1 K7        ; R1 := 0x03f57322
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: EQ        0 R1 K9      ; if R1 ~= 5.000000 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: CALL      R1 2 1       ; R1(R2)
 34 [-]: RETURN    R0 1         ; return 
 35 [-]: GETGLOBAL R1 K7        ; R1 := 0x03f57322
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: EQ        0 R1 K10     ; if R1 ~= 4.000000 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETGLOBAL R1 K11       ; R1 := mPurchaseParams
 41 [-]: SETTABLE  R1 K12 K14   ; R1["mDurability"] := 0.000000
 42 [-]: JMP       53           ; PC := 53
 43 [-]: GETGLOBAL R1 K7        ; R1 := 0x03f57322
 44 [-]: MOVE      R2 R0        ; R2 := R0
 45 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 46 [-]: EQ        0 R1 K15     ; if R1 ~= 6.000000 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETGLOBAL R1 K11       ; R1 := mPurchaseParams
 49 [-]: SETTABLE  R1 K12 K16   ; R1["mDurability"] := 1.000000
 50 [-]: JMP       53           ; PC := 53
 51 [-]: GETGLOBAL R1 K11       ; R1 := mPurchaseParams
 52 [-]: SETTABLE  R1 K12 K17   ; R1["mDurability"] := 2.000000
 53 [-]: GETUPVAL  R1 U1        ; R1 := U1
 54 [-]: GETGLOBAL R2 K11       ; R2 := mPurchaseParams
 55 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 56 [-]: SETGLOBAL R3 K20       ; mPurchaseQuantityMultiplier := R3
 57 [-]: SETGLOBAL R2 K19       ; mPurchaseUnitPrice := R2
 58 [-]: SETGLOBAL R1 K18       ; mPurchaseTotalPrice := R1
 59 [-]: GETGLOBAL R1 K18       ; R1 := mPurchaseTotalPrice
 60 [-]: EQ        0 R1 K21     ; if R1 ~= nil then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETUPVAL  R1 U0        ; R1 := U0
 63 [-]: LOADKB    R2 0 0       ; R2 := false
 64 [-]: CALL      R1 2 1       ; R1(R2)
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETUPVAL  R1 U2        ; R1 := U2
 67 [-]: CALL      R1 1 1       ; R1()
 68 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 6285
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 6288
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.StoreItemUtilities"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0[0x80d045d2]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  6 [-]: LOADKB    R3 1 0       ; R3 := true
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 6293
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K1      ; if R0 == 27.000000 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: EQ        1 R0 K2      ; if R0 == 28.000000 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: EQ        1 R0 K3      ; if R0 == 29.000000 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: EQ        1 R0 K4      ; if R0 == 42.000000 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 10
 10 [-]: LOADKB    R1 1 0       ; R1 := true
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 6297
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K1      ; if R0 == 48.000000 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 4
  4 [-]: LOADKB    R1 1 0       ; R1 := true
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 6301
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x9dbbea0a]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: TEST      R2 0         ; if not R2 then PC := 29
  4 [-]: JMP       29           ; PC := 29
  5 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0x7b060e36]
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: CONST     R3 1         ; R3 := 1.000000
  8 [-]: LEN       R4 R2        ; R4 := # R2
  9 [-]: CONST     R5 1         ; R5 := 1.000000
 10 [-]: FORPREP   R3 27        ; R3 -= R5; PC := 27
 11 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 12 [-]: GETTABLE  R8 R2 R6     ; R8 := R2[R6]
 13 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mTypeName"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: TEST      R7 1         ; if R7 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: MOVE      R7 R1        ; R7 := R1
 18 [-]: GETTABLE  R8 R2 R6     ; R8 := R2[R6]
 19 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mTypeName"]
 20 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8[0xfe9eb1a5]
 21 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 22 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 23 [-]: TEST      R7 0         ; if not R7 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADKB    R7 1 0       ; R7 := true
 26 [-]: RETURN    R7 2         ; return R7
 27 [-]: FORLOOP   R3 11        ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
 28 [-]: JMP       47           ; PC := 47
 29 [-]: SELF      R7 R0 K5     ; R8 := R0; R7 := R0[0xf278f8a1]
 30 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 31 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xf2deaf69]
 32 [-]: GETGLOBAL R9 K7        ; R9 := gRecipeItemType
 33 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 34 [-]: TEST      R7 0         ; if not R7 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: MOVE      R7 R1        ; R7 := R1
 37 [-]: SELF      R8 R0 K8     ; R9 := R0; R8 := R0[0x9abeadd7]
 38 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 39 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 40 [-]: RETURN    R7 2         ; return R7
 41 [-]: JMP       47           ; PC := 47
 42 [-]: MOVE      R7 R1        ; R7 := R1
 43 [-]: SELF      R8 R0 K4     ; R9 := R0; R8 := R0[0xfe9eb1a5]
 44 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 45 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 46 [-]: RETURN    R7 2         ; return R7
 47 [-]: LOADKB    R7 0 0       ; R7 := false
 48 [-]: RETURN    R7 2         ; return R7
 49 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 6318
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 111
  5 [-]: JMP       111          ; PC := 111
  6 [-]: GETGLOBAL R1 K3        ; R1 := mPurchaseParams
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mStoreItem"]
  8 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 111
  9 [-]: JMP       111          ; PC := 111
 10 [-]: GETGLOBAL R1 K3        ; R1 := mPurchaseParams
 11 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mStoreItem"]
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xc3bbc5cb]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K7        ; R2 := 0x76ea806b
 15 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x3f3ae64c]
 16 [-]: CONST     R4 0         ; R4 := 0.000000
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x80563238]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: LOADK     R4 K10       ; R4 := ""
 21 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 22 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 23 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x9dbbea0a]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: TEST      R5 0         ; if not R5 then PC := 33
 26 [-]: JMP       33           ; PC := 33
 27 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 28 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 29 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xed4e0128]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: MOVE      R4 R5        ; R4 := R5
 32 [-]: JMP       38           ; PC := 38
 33 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 34 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 35 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x170c5cfa]
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: MOVE      R4 R5        ; R4 := R5
 38 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 39 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mSource"]
 40 [-]: EQ        1 R5 K16     ; if R5 == 18.000000 then PC := 85
 41 [-]: JMP       85           ; PC := 85
 42 [-]: SELF      R5 R3 K17    ; R6 := R3; R5 := R3[0xc192c12e]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: TEST      R5 1         ; if R5 then PC := 63
 45 [-]: JMP       63           ; PC := 63
 46 [-]: GETUPVAL  R5 U0        ; R5 := U0
 47 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
 48 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
 49 [-]: GETUPVAL  R7 U1        ; R7 := U1
 50 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 51 [-]: TEST      R5 0         ; if not R5 then PC := 63
 52 [-]: JMP       63           ; PC := 63
 53 [-]: GETUPVAL  R5 U2        ; R5 := U2
 54 [-]: GETTABLE  R5 R5 K18    ; R5 := R5[0xe0cba3ca]
 55 [-]: LOADK     R6 K19       ; R6 := "/Lotus/Language/Menu/ArchwingFailurePurchase"
 56 [-]: LOADK     R7 K20       ; R7 := "ConfirmErrorPopup"
 57 [-]: CALL      R5 3 1       ; R5(R6,R7)
 58 [-]: GETUPVAL  R5 U3        ; R5 := U3
 59 [-]: LOADNIL   R6 R6        ; R6 := nil
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: RETURN    R0 1         ; return 
 62 [-]: JMP       85           ; PC := 85
 63 [-]: GETUPVAL  R5 U0        ; R5 := U0
 64 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
 65 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
 66 [-]: GETUPVAL  R7 U4        ; R7 := U4
 67 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 68 [-]: TEST      R5 0         ; if not R5 then PC := 85
 69 [-]: JMP       85           ; PC := 85
 70 [-]: GETUPVAL  R5 U5        ; R5 := U5
 71 [-]: GETTABLE  R5 R5 K21    ; R5 := R5[0x52fb05b3]
 72 [-]: GETGLOBAL R6 K22       ; R6 := 0x0747e0de
 73 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 74 [-]: TEST      R5 1         ; if R5 then PC := 85
 75 [-]: JMP       85           ; PC := 85
 76 [-]: GETUPVAL  R5 U2        ; R5 := U2
 77 [-]: GETTABLE  R5 R5 K18    ; R5 := R5[0xe0cba3ca]
 78 [-]: LOADK     R6 K23       ; R6 := "/Lotus/Language/Store/MechPurchaseFailure"
 79 [-]: LOADK     R7 K20       ; R7 := "ConfirmErrorPopup"
 80 [-]: CALL      R5 3 1       ; R5(R6,R7)
 81 [-]: GETUPVAL  R5 U3        ; R5 := U3
 82 [-]: LOADNIL   R6 R6        ; R6 := nil
 83 [-]: CALL      R5 2 1       ; R5(R6)
 84 [-]: RETURN    R0 1         ; return 
 85 [-]: GETGLOBAL R5 K24       ; R5 := 0x9ba7909f
 86 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5[0xbcfb64ab]
 87 [-]: GETGLOBAL R7 K26       ; R7 := movies
 88 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["LoadOut"]
 89 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 90 [-]: GETGLOBAL R6 K28       ; R6 := 0x7b998233
 91 [-]: MOVE      R7 R5        ; R7 := R5
 92 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 93 [-]: TEST      R6 1         ; if R6 then PC := 99
 94 [-]: JMP       99           ; PC := 99
 95 [-]: SELF      R6 R5 K29    ; R7 := R5; R6 := R5[0xe4162eed]
 96 [-]: LOADK     R8 K30       ; R8 := "NotifyPurchase"
 97 [-]: LOADK     R9 K10       ; R9 := ""
 98 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 99 [-]: GETUPVAL  R6 U6        ; R6 := U6
100 [-]: LOADK     R7 K31       ; R7 := "/Lotus/Language/Menu/PurchaseInProgress"
101 [-]: CALL      R6 2 1       ; R6(R7)
102 [-]: TEST      R1 1         ; if R1 then PC := 106
103 [-]: JMP       106          ; PC := 106
104 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
105 [-]: SETTABLE  R6 K32 K2    ; R6["mDurability"] := 4.000000
106 [-]: SELF      R6 R3 K33    ; R7 := R3; R6 := R3[0xa98ff345]
107 [-]: GETGLOBAL R8 K3        ; R8 := mPurchaseParams
108 [-]: LOADK     R9 K34       ; R9 := "OnPurchaseResults"
109 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
110 [-]: JMP       114          ; PC := 114
111 [-]: GETUPVAL  R6 U3        ; R6 := U3
112 [-]: LOADNIL   R7 R7        ; R7 := nil
113 [-]: CALL      R6 2 1       ; R6(R7)
114 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 6362
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mQuantity"]
  7 [-]: SETGLOBAL R1 K1        ; mQuantityToReceive := R1
  8 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mStoreItem"]
 10 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xc3bbc5cb]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: CALL      R1 1 1       ; R1()
 16 [-]: JMP       208          ; PC := 208
 17 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 18 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 19 [-]: EQ        1 R1 K8      ; if R1 == 0.000000 then PC := 78
 20 [-]: JMP       78           ; PC := 78
 21 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 22 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 23 [-]: EQ        1 R1 K9      ; if R1 == 4.000000 then PC := 78
 24 [-]: JMP       78           ; PC := 78
 25 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 26 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 27 [-]: EQ        1 R1 K10     ; if R1 == 5.000000 then PC := 78
 28 [-]: JMP       78           ; PC := 78
 29 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 30 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 31 [-]: EQ        1 R1 K11     ; if R1 == 6.000000 then PC := 78
 32 [-]: JMP       78           ; PC := 78
 33 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 34 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 35 [-]: EQ        1 R1 K12     ; if R1 == 8.000000 then PC := 78
 36 [-]: JMP       78           ; PC := 78
 37 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 38 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 39 [-]: EQ        1 R1 K13     ; if R1 == 10.000000 then PC := 78
 40 [-]: JMP       78           ; PC := 78
 41 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 42 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 43 [-]: EQ        1 R1 K14     ; if R1 == 11.000000 then PC := 78
 44 [-]: JMP       78           ; PC := 78
 45 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 46 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 47 [-]: EQ        1 R1 K15     ; if R1 == 12.000000 then PC := 78
 48 [-]: JMP       78           ; PC := 78
 49 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 50 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 51 [-]: EQ        1 R1 K16     ; if R1 == 13.000000 then PC := 78
 52 [-]: JMP       78           ; PC := 78
 53 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 54 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 55 [-]: EQ        1 R1 K17     ; if R1 == 14.000000 then PC := 78
 56 [-]: JMP       78           ; PC := 78
 57 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 58 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 59 [-]: EQ        1 R1 K18     ; if R1 == 15.000000 then PC := 78
 60 [-]: JMP       78           ; PC := 78
 61 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 62 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 63 [-]: EQ        1 R1 K19     ; if R1 == 16.000000 then PC := 78
 64 [-]: JMP       78           ; PC := 78
 65 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 66 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 67 [-]: EQ        1 R1 K20     ; if R1 == 17.000000 then PC := 78
 68 [-]: JMP       78           ; PC := 78
 69 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 70 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 71 [-]: EQ        1 R1 K21     ; if R1 == 19.000000 then PC := 78
 72 [-]: JMP       78           ; PC := 78
 73 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 74 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 75 [-]: EQ        1 R1 K22     ; if R1 == 20.000000 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 78
 78 [-]: LOADKB    R1 1 0       ; R1 := true
 79 [-]: TEST      R1 0         ; if not R1 then PC := 178
 80 [-]: JMP       178          ; PC := 178
 81 [-]: TEST      R0 1         ; if R0 then PC := 178
 82 [-]: JMP       178          ; PC := 178
 83 [-]: GETUPVAL  R2 U1        ; R2 := U1
 84 [-]: GETTABLE  R2 R2 K23    ; R2 := R2[0xcd71f5a1]
 85 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 86 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mStoreItem"]
 87 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 88 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 89 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["mCouponId"]
 90 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["mId"]
 91 [-]: EQ        0 R3 K26     ; if R3 ~= "" then PC := 114
 92 [-]: JMP       114          ; PC := 114
 93 [-]: TEST      R2 0         ; if not R2 then PC := 114
 94 [-]: JMP       114          ; PC := 114
 95 [-]: GETTABLE  R3 R2 K27    ; R3 := R2["mBogoBuy"]
 96 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 114
 97 [-]: JMP       114          ; PC := 114
 98 [-]: GETTABLE  R3 R2 K28    ; R3 := R2["mBogoGet"]
 99 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 114
100 [-]: JMP       114          ; PC := 114
101 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
102 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mQuantity"]
103 [-]: GETGLOBAL R4 K29       ; R4 := 0x5bced4c4
104 [-]: GETTABLE  R4 R4 K30    ; R4 := R4[0x55f27c30]
105 [-]: GETGLOBAL R5 K2        ; R5 := mPurchaseParams
106 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["mQuantity"]
107 [-]: GETTABLE  R6 R2 K27    ; R6 := R2["mBogoBuy"]
108 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
109 [-]: CALL      R4 2 2       ; R4 := R4(R5)
110 [-]: GETTABLE  R5 R2 K28    ; R5 := R2["mBogoGet"]
111 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
112 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
113 [-]: SETGLOBAL R3 K1        ; mQuantityToReceive := R3
114 [-]: GETUPVAL  R3 U1        ; R3 := U1
115 [-]: GETTABLE  R3 R3 K31    ; R3 := R3[0xe9947039]
116 [-]: GETGLOBAL R4 K2        ; R4 := mPurchaseParams
117 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mStoreItem"]
118 [-]: LOADNIL   R5 R6        ; R5 := R6 := nil
119 [-]: GETGLOBAL R7 K32       ; R7 := _T
120 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["purchasedItems"]
121 [-]: CALL      R3 5 3       ; R3,R4 := R3(R4,R5,R6,R7)
122 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 172
123 [-]: JMP       172          ; PC := 172
124 [-]: LT        0 K8 R4      ; if 0.000000 >= R4 then PC := 172
125 [-]: JMP       172          ; PC := 172
126 [-]: GETGLOBAL R5 K34       ; R5 := 0xae91e43b
127 [-]: SELF      R5 R5 K35    ; R6 := R5; R5 := R5[0x42b04007]
128 [-]: GETGLOBAL R7 K36       ; R7 := 0x64fb1586
129 [-]: GETGLOBAL R8 K2        ; R8 := mPurchaseParams
130 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["mStoreItem"]
131 [-]: SELF      R8 R8 K37    ; R9 := R8; R8 := R8[0xd3a9d01f]
132 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
133 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
134 [-]: LOADKB    R8 0 0       ; R8 := false
135 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
136 [-]: GETGLOBAL R6 K34       ; R6 := 0xae91e43b
137 [-]: SELF      R6 R6 K35    ; R7 := R6; R6 := R6[0x42b04007]
138 [-]: LOADK     R8 K38       ; R8 := "/Lotus/Language/Menu/Popup_BuyItem"
139 [-]: LOADKB    R9 1 0       ; R9 := true
140 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
141 [-]: GETGLOBAL R7 K39       ; R7 := 0x7f5022cf
142 [-]: GETTABLE  R7 R7 K40    ; R7 := R7[0xe8072ded]
143 [-]: MOVE      R8 R6        ; R8 := R6
144 [-]: MOVE      R9 R5        ; R9 := R5
145 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
146 [-]: MOVE      R6 R7        ; R6 := R7
147 [-]: LOADK     R7 K41       ; R7 := "<PLATINUM_CREDITS>"
148 [-]: MOVE      R8 R4        ; R8 := R4
149 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
150 [-]: LOADK     R8 K42       ; R8 := "<CREDITS>"
151 [-]: MOVE      R9 R3        ; R9 := R3
152 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
153 [-]: GETGLOBAL R9 K43       ; R9 := 0x34291f5c
154 [-]: GETTABLE  R9 R9 K44    ; R9 := R9[0xe27b35bb]
155 [-]: CALL      R9 1 2       ; R9 := R9()
156 [-]: SETTABLE  R9 K45 K10   ; R9["dialogType"] := 5.000000
157 [-]: SETTABLE  R9 K46 R6    ; R9["locString"] := R6
158 [-]: SETTABLE  R9 K47 R8    ; R9["firstString"] := R8
159 [-]: SETTABLE  R9 K48 R7    ; R9["secondString"] := R7
160 [-]: SETTABLE  R9 K49 K50   ; R9["thirdString"] := "/Lotus/Language/Menu/ItemSelection_Cancel"
161 [-]: SELF      R10 R9 K51   ; R11 := R9; R10 := R9[0xe6ccc5b9]
162 [-]: LOADK     R12 K52      ; R12 := "ConfirmCurrency"
163 [-]: CALL      R10 3 1      ; R10(R11,R12)
164 [-]: GETUPVAL  R10 U2       ; R10 := U2
165 [-]: GETTABLE  R10 R10 K53  ; R10 := R10[0xe99b84e7]
166 [-]: MOVE      R11 R9       ; R11 := R9
167 [-]: CALL      R10 2 1      ; R10(R11)
168 [-]: GETGLOBAL R10 K32      ; R10 := _T
169 [-]: SETTABLE  R10 K54 K55  ; R10["PurchaseSuccessLocOverride"] := nil
170 [-]: RETURN    R0 1         ; return 
171 [-]: JMP       178          ; PC := 178
172 [-]: GETGLOBAL R10 K2       ; R10 := mPurchaseParams
173 [-]: LT        1 K8 R4      ; if 0.000000 < R4 then PC := 176
174 [-]: JMP       176          ; PC := 176
175 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 176
176 [-]: LOADKB    R11 1 0      ; R11 := true
177 [-]: SETTABLE  R10 K56 R11  ; R10["mUsePremium"] := R11
178 [-]: GETUPVAL  R10 U3       ; R10 := U3
179 [-]: GETGLOBAL R11 K2       ; R11 := mPurchaseParams
180 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
181 [-]: SETGLOBAL R12 K59      ; mPurchaseQuantityMultiplier := R12
182 [-]: SETGLOBAL R11 K58      ; mPurchaseUnitPrice := R11
183 [-]: SETGLOBAL R10 K57      ; mPurchaseTotalPrice := R10
184 [-]: GETGLOBAL R10 K57      ; R10 := mPurchaseTotalPrice
185 [-]: EQ        0 R10 K55    ; if R10 ~= nil then PC := 191
186 [-]: JMP       191          ; PC := 191
187 [-]: GETUPVAL  R10 U4       ; R10 := U4
188 [-]: LOADNIL   R11 R11      ; R11 := nil
189 [-]: CALL      R10 2 1      ; R10(R11)
190 [-]: RETURN    R0 1         ; return 
191 [-]: TEST      R1 0         ; if not R1 then PC := 206
192 [-]: JMP       206          ; PC := 206
193 [-]: GETUPVAL  R10 U2       ; R10 := U2
194 [-]: GETTABLE  R10 R10 K60  ; R10 := R10[0x06d055f9]
195 [-]: GETGLOBAL R11 K2       ; R11 := mPurchaseParams
196 [-]: GETTABLE  R11 R11 K56  ; R11 := R11["mUsePremium"]
197 [-]: GETUPVAL  R12 U5       ; R12 := U5
198 [-]: GETTABLE  R12 R12 K61  ; R12 := R12["PREMIUM_CREDITS"]
199 [-]: GETUPVAL  R13 U5       ; R13 := U5
200 [-]: GETTABLE  R13 R13 K62  ; R13 := R13["REGULAR_CREDITS"]
201 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
202 [-]: GETGLOBAL R11 K2       ; R11 := mPurchaseParams
203 [-]: GETGLOBAL R12 K57      ; R12 := mPurchaseTotalPrice
204 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
205 [-]: SETTABLE  R11 K63 R12  ; R11["mExpectedPrice"] := R12
206 [-]: GETUPVAL  R11 U6       ; R11 := U6
207 [-]: CALL      R11 1 1      ; R11()
208 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 6430
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADKB    R1 0 0       ; R1 := false
  3 [-]: LOADK     R2 K0        ; R2 := "invite"
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0x9ba7909f
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xbcfb64ab]
  7 [-]: GETGLOBAL R2 K3        ; R2 := movies
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["MainMenu"]
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0x32302b4a]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: LOADK     R2 K4        ; R2 := "MainMenu"
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 6440
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 29
  6 [-]: JMP       29           ; PC := 29
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Status"]
 10 [-]: EQ        1 R0 K4      ; if R0 == 0.000000 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K1        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Status"]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 0         ; if not R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0x3d106989
 20 [-]: LOADK     R1 K6        ; R1 := "open pod"
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: GETGLOBAL R0 K1        ; R0 := _T
 23 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 24 [-]: GETGLOBAL R1 K8        ; R1 := 0x6b06b155
 25 [-]: SETTABLE  R0 K7 R1     ; R0["PendingAnimation"] := R1
 26 [-]: GETGLOBAL R0 K1        ; R0 := _T
 27 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 28 [-]: SETTABLE  R0 K3 K9     ; R0["Status"] := 2.000000
 29 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 6448
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 29
  6 [-]: JMP       29           ; PC := 29
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  8 [-]: GETGLOBAL R1 K1        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Status"]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 1         ; if R0 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETGLOBAL R0 K1        ; R0 := _T
 15 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 16 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Status"]
 17 [-]: LT        0 K4 R0      ; if 0.000000 >= R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0x3d106989
 20 [-]: LOADK     R1 K6        ; R1 := "close pod"
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: GETGLOBAL R0 K1        ; R0 := _T
 23 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 24 [-]: GETGLOBAL R1 K8        ; R1 := 0xb2b63f87
 25 [-]: SETTABLE  R0 K7 R1     ; R0["PendingAnimation"] := R1
 26 [-]: GETGLOBAL R0 K1        ; R0 := _T
 27 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 28 [-]: SETTABLE  R0 K3 K4     ; R0["Status"] := 0.000000
 29 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 6456
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x659d451f]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x620d6b95
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 6460
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 6466
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADKB    R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mNeedsToRespawnMenuAvatars := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 6470
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x659d451f]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x0032441c
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UISound_Focus"]
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 6474
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 6477
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 21
  2 [-]: JMP       21           ; PC := 21
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K1 K2     ; R2["ActiveQuestLoaded"] := true
  5 [-]: GETGLOBAL R2 K0        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Jukebox"]
  7 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0xb009bbc6
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0xac62edc0]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 0         ; if not R3 then PC := 28
 15 [-]: JMP       28           ; PC := 28
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3[0x348f9680]
 18 [-]: LOADKB    R4 1 0       ; R4 := true
 19 [-]: CALL      R3 2 1       ; R3(R4)
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R3 K0        ; R3 := _T
 22 [-]: SETTABLE  R3 K1 K8     ; R3["ActiveQuestLoaded"] := false
 23 [-]: GETGLOBAL R3 K9        ; R3 := 0x3d106989
 24 [-]: LOADK     R4 K10       ; R4 := "Couldn't load quest: "
 25 [-]: MOVE      R5 R1        ; R5 := R1
 26 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 27 [-]: CALL      R3 2 1       ; R3(R4)
 28 [-]: GETGLOBAL R3 K9        ; R3 := 0x3d106989
 29 [-]: LOADK     R4 K11       ; R4 := "ActiveQuestLoaded="
 30 [-]: GETGLOBAL R5 K12       ; R5 := 0x64fb1586
 31 [-]: GETGLOBAL R6 K0        ; R6 := _T
 32 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["ActiveQuestLoaded"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 35 [-]: CALL      R3 2 1       ; R3(R4)
 36 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 6494
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := connectionFailurePopup
  2 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x76ea806b
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x8792aaab]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xe0cba3ca]
 11 [-]: LOADK     R1 K5        ; R1 := "/Lotus/Language/Menu/BackgroundError_UserNameChanged"
 12 [-]: LOADK     R2 K6        ; R2 := "DoLogoff"
 13 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 14 [-]: SETGLOBAL R0 K0        ; connectionFailurePopup := R0
 15 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 6500
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "CheckForAvailableRankUp()"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := mCurrentMode
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
  7 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0x76ea806b
 11 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x3f3ae64c]
 12 [-]: CONST     R2 0         ; R2 := 0.000000
 13 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 14 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0x80563238]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 1         ; if R2 then PC := 83
 26 [-]: JMP       83           ; PC := 83
 27 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xde2d1b82]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1[0xefee6c91]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: SELF      R4 R1 K10    ; R5 := R1; R4 := R1[0xa59dbd63]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: SELF      R5 R1 K11    ; R6 := R1; R5 := R1[0x82499e82]
 34 [-]: ADD       R7 R3 K12    ; R7 := R3 + 1.000000
 35 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 36 [-]: LE        0 R5 R4      ; if R5 > R4 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: LE        1 R2 K13     ; if R2 <= 0.000000 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 41
 41 [-]: LOADKB    R6 1 0       ; R6 := true
 42 [-]: TEST      R6 0         ; if not R6 then PC := 83
 43 [-]: JMP       83           ; PC := 83
 44 [-]: GETGLOBAL R7 K14       ; R7 := _T
 45 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["ShowNotification"]
 46 [-]: EQ        1 R7 K16     ; if R7 == nil then PC := 83
 47 [-]: JMP       83           ; PC := 83
 48 [-]: GETGLOBAL R7 K17       ; R7 := 0xae91e43b
 49 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x42b04007]
 50 [-]: GETGLOBAL R9 K19       ; R9 := 0x64fb1586
 51 [-]: GETGLOBAL R10 K20      ; R10 := 0xa94df70b
 52 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10[0x8a513cba]
 53 [-]: ADD       R12 R3 K12   ; R12 := R3 + 1.000000
 54 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 55 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 56 [-]: LOADKB    R10 0 0      ; R10 := false
 57 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 58 [-]: GETGLOBAL R8 K14       ; R8 := _T
 59 [-]: GETTABLE  R8 R8 K22    ; R8 := R8[0x7dce37bc]
 60 [-]: GETGLOBAL R9 K17       ; R9 := 0xae91e43b
 61 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9[0x42b04007]
 62 [-]: LOADK     R11 K23      ; R11 := "/Lotus/Language/Menu/Notification_LevelUpAvailable"
 63 [-]: LOADKB    R12 1 0      ; R12 := true
 64 [-]: NEWTABLE  R13 0 3      ; R13 := {}
 65 [-]: GETGLOBAL R14 K17      ; R14 := 0xae91e43b
 66 [-]: SELF      R14 R14 K18  ; R15 := R14; R14 := R14[0x42b04007]
 67 [-]: LOADK     R16 K25      ; R16 := "<RANK_"
 68 [-]: ADD       R17 R3 K12   ; R17 := R3 + 1.000000
 69 [-]: LOADK     R18 K26      ; R18 := ">"
 70 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
 71 [-]: LOADKB    R17 1 0      ; R17 := true
 72 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 73 [-]: SETTABLE  R13 K24 R14  ; R13["RANK_ICON"] := R14
 74 [-]: GETUPVAL  R14 U0       ; R14 := U0
 75 [-]: GETTABLE  R14 R14 K28  ; R14 := R14[0x0199c230]
 76 [-]: ADD       R15 R3 K12   ; R15 := R3 + 1.000000
 77 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 78 [-]: SETTABLE  R13 K27 R14  ; R13["RANK_NUMBER"] := R14
 79 [-]: SETTABLE  R13 K29 R7   ; R13["RANK_NAME"] := R7
 80 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 81 [-]: LOADK     R10 K30      ; R10 := "LevelUpAvailable"
 82 [-]: CALL      R8 3 1       ; R8(R9,R10)
 83 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 6528
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf03cd640]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: CONST     R2 1         ; R2 := 1.000000
  5 [-]: LEN       R3 R1        ; R3 := # R1
  6 [-]: CONST     R4 1         ; R4 := 1.000000
  7 [-]: FORPREP   R2 63        ; R2 -= R4; PC := 63
  8 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
  9 [-]: GETGLOBAL R7 K2        ; R7 := 0x34291f5c
 10 [-]: GETTABLE  R7 R7 K3     ; R7 := R7[0x397b920f]
 11 [-]: GETTABLE  R8 R6 K4     ; R8 := R6["date"]
 12 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 13 [-]: LE        0 R7 K5      ; if R7 > 0.000000 then PC := 58
 14 [-]: JMP       58           ; PC := 58
 15 [-]: GETGLOBAL R8 K6        ; R8 := 0x89326c93
 16 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0xc7fcada9]
 17 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
 18 [-]: LOADK     R11 K9       ; R11 := "SHIPEVENT_"
 19 [-]: GETTABLE  R12 R6 K10   ; R12 := R6["tag"]
 20 [-]: SELF      R12 R12 K11  ; R13 := R12; R12 := R12[0x6d604ba7]
 21 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 22 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 23 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 24 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 25 [-]: TEST      R8 0         ; if not R8 then PC := 47
 26 [-]: JMP       47           ; PC := 47
 27 [-]: GETGLOBAL R9 K12       ; R9 := 0xc8802016
 28 [-]: MOVE      R10 R8       ; R10 := R8
 29 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 30 [-]: JMP       44           ; PC := 44
 31 [-]: GETGLOBAL R14 K13      ; R14 := 0x7b998233
 32 [-]: MOVE      R15 R13      ; R15 := R13
 33 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 34 [-]: TEST      R14 1        ; if R14 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: SELF      R14 R13 K14  ; R15 := R13; R14 := R13[0xf2deaf69]
 37 [-]: GETGLOBAL R16 K15      ; R16 := gScriptTriggerType
 38 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 39 [-]: TEST      R14 0        ; if not R14 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: SELF      R14 R13 K16  ; R15 := R13; R14 := R13[0x8eb2112d]
 42 [-]: LOADK     R16 K17      ; R16 := "Execute"
 43 [-]: CALL      R14 3 1      ; R14(R15,R16)
 44 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 31; R11 := R12 end
 45 [-]: JMP       31           ; PC := 31
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETUPVAL  R14 U0       ; R14 := U0
 48 [-]: GETTABLE  R14 R14 K18  ; R14 := R14[0xe0cba3ca]
 49 [-]: GETGLOBAL R15 K19      ; R15 := 0x64fb1586
 50 [-]: GETTABLE  R16 R6 K10   ; R16 := R6["tag"]
 51 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 52 [-]: CALL      R14 0 1      ; R14(R15,...)
 53 [-]: GETGLOBAL R14 K0       ; R14 := 0x25d99d89
 54 [-]: SELF      R14 R14 K20  ; R15 := R14; R14 := R14[0xcad9bf76]
 55 [-]: GETTABLE  R16 R6 K10   ; R16 := R6["tag"]
 56 [-]: CALL      R14 3 1      ; R14(R15,R16)
 57 [-]: JMP       63           ; PC := 63
 58 [-]: EQ        1 R0 K21     ; if R0 == nil then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: LT        0 R7 R0      ; if R7 >= R0 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: MOVE      R0 R7        ; R0 := R7
 63 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 64 [-]: EQ        1 R0 K21     ; if R0 == nil then PC := 74
 65 [-]: JMP       74           ; PC := 74
 66 [-]: LT        0 K5 R0      ; if 0.000000 >= R0 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: GETGLOBAL R14 K22      ; R14 := mTimerMgr
 69 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14[0xbd2e96ea]
 70 [-]: MOVE      R16 R0       ; R16 := R0
 71 [-]: GETUPVAL  R17 U1       ; R17 := U1
 72 [-]: LOADKB    R18 0 0      ; R18 := false
 73 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 74 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 6558
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "Background::OnLoginDone()"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x0032441c
  5 [-]: SETTABLE  R0 K3 K4     ; R0["LoginDone"] := true
  6 [-]: GETGLOBAL R0 K5        ; R0 := 0x76ea806b
  7 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x3f3ae64c]
  8 [-]: CONST     R2 0         ; R2 := 0.000000
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
 16 [-]: LOADK     R2 K8        ; R2 := "Background::OnLoginDone() playerProfile == nil"
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: SELF      R1 R0 K9     ; R2 := R0; R1 := R0[0xcac617c9]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: GETGLOBAL R2 K10       ; R2 := _T
 22 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["PreviousLoggedInAccountId"]
 23 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: GETGLOBAL R2 K10       ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["PreviousLoggedInAccountId"]
 27 [-]: EQ        1 R2 R1      ; if R2 == R1 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
 30 [-]: LOADK     R3 K13       ; R3 := "Logging in with a new user, disconnecting"
 31 [-]: CALL      R2 2 1       ; R2(R3)
 32 [-]: GETGLOBAL R2 K14       ; R2 := 0x34291f5c
 33 [-]: GETTABLE  R2 R2 K15    ; R2 := R2[0x8ee24660]
 34 [-]: LOADKB    R3 1 0       ; R3 := true
 35 [-]: CALL      R2 2 1       ; R2(R3)
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0xc00479a5]
 39 [-]: CALL      R2 1 2       ; R2 := R2()
 40 [-]: SETUPVAL  R2 U0        ; U82 := R0
 41 [-]: GETGLOBAL R2 K10       ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["QueueNewWarRecap"]
 43 [-]: GETGLOBAL R3 K10       ; R3 := _T
 44 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["gActiveCameraSpot"]
 45 [-]: EQ        0 R3 K19     ; if R3 ~= "LoginNoSuit" then PC := 57
 46 [-]: JMP       57           ; PC := 57
 47 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
 48 [-]: LOADK     R4 K20       ; R4 := "Login: No Suit"
 49 [-]: CALL      R3 2 1       ; R3(R4)
 50 [-]: GETUPVAL  R3 U2        ; R3 := U2
 51 [-]: CONST     R4 0         ; R4 := 0.750000
 52 [-]: CONST     R5 0         ; R5 := 0.750000
 53 [-]: CONST     R6 1         ; R6 := 1.000000
 54 [-]: GETUPVAL  R7 U3        ; R7 := U3
 55 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 56 [-]: JMP       87           ; PC := 87
 57 [-]: GETGLOBAL R3 K10       ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HasDailyTribute"]
 59 [-]: TEST      R3 1         ; if R3 then PC := 73
 60 [-]: JMP       73           ; PC := 73
 61 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
 62 [-]: LOADK     R4 K22       ; R4 := "Login: No Daily"
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: GETUPVAL  R3 U3        ; R3 := U3
 65 [-]: CONST     R4 0         ; R4 := 0.500000
 66 [-]: CALL      R3 2 1       ; R3(R4)
 67 [-]: GETGLOBAL R3 K23       ; R3 := mTimerMgr
 68 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xbd2e96ea]
 69 [-]: CONST     R5 2         ; R5 := 2.000000
 70 [-]: CLOSURE   R6 0         ; R6 := closure(Function #194.1)
 71 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 72 [-]: JMP       87           ; PC := 87
 73 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
 74 [-]: LOADK     R4 K25       ; R4 := "Login: Daily"
 75 [-]: CALL      R3 2 1       ; R3(R4)
 76 [-]: LOADKB    R2 0 0       ; R2 := false
 77 [-]: GETGLOBAL R3 K10       ; R3 := _T
 78 [-]: SETTABLE  R3 K26 K27   ; R3["DailyTributeLoginState"] := 2.000000
 79 [-]: GETGLOBAL R3 K10       ; R3 := _T
 80 [-]: GETGLOBAL R4 K23       ; R4 := mTimerMgr
 81 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xbd2e96ea]
 82 [-]: CONST     R6 2         ; R6 := 2.000000
 83 [-]: CLOSURE   R7 1         ; R7 := closure(Function #194.2)
 84 [-]: LOADKB    R8 1 0       ; R8 := true
 85 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 86 [-]: SETTABLE  R3 K28 R4    ; R3["DailyTributeLoginTimerId"] := R4
 87 [-]: GETGLOBAL R3 K29       ; R3 := 0x9ba7909f
 88 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x7e17ae26]
 89 [-]: LOADK     R5 K31       ; R5 := "OnLoginComplete"
 90 [-]: LOADK     R6 K32       ; R6 := ""
 91 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 92 [-]: LOADKB    R3 0 0       ; R3 := false
 93 [-]: SETGLOBAL R3 K33       ; mNeedsToRespawnMenuAvatars := R3
 94 [-]: GETUPVAL  R3 U4        ; R3 := U4
 95 [-]: CALL      R3 1 1       ; R3()
 96 [-]: GETGLOBAL R3 K5        ; R3 := 0x76ea806b
 97 [-]: SELF      R3 R3 K34    ; R4 := R3; R3 := R3[0xa75c5137]
 98 [-]: LOADK     R5 K35       ; R5 := "OnAccountNameChangedCallback"
 99 [-]: CALL      R3 3 1       ; R3(R4,R5)
100 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
101 [-]: GETGLOBAL R4 K36       ; R4 := 0x25d99d89
102 [-]: CALL      R3 2 2       ; R3 := R3(R4)
103 [-]: TEST      R3 0         ; if not R3 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: RETURN    R0 1         ; return 
106 [-]: GETGLOBAL R3 K36       ; R3 := 0x25d99d89
107 [-]: SELF      R3 R3 K37    ; R4 := R3; R3 := R3[0x188fedab]
108 [-]: LOADK     R5 K38       ; R5 := "FriendRequestReceived"
109 [-]: CALL      R3 3 1       ; R3(R4,R5)
110 [-]: LOADKB    R3 1 0       ; R3 := true
111 [-]: SETGLOBAL R3 K39       ; mNewFriendRequests := R3
112 [-]: GETUPVAL  R3 U1        ; R3 := U1
113 [-]: GETTABLE  R3 R3 K40    ; R3 := R3[0x52fb05b3]
114 [-]: GETGLOBAL R4 K41       ; R4 := 0x7ed0a956
115 [-]: LOADK     R5 K42       ; R5 := "/Lotus/Types/Keys/OrokinMoonQuest/OrokinMoonQuestKeyChain"
116 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
117 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
118 [-]: TEST      R3 0         ; if not R3 then PC := 173
119 [-]: JMP       173          ; PC := 173
120 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
121 [-]: GETGLOBAL R5 K36       ; R5 := 0x25d99d89
122 [-]: SELF      R5 R5 K43    ; R6 := R5; R5 := R5[0xa340c0e2]
123 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
124 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
125 [-]: TEST      R4 0         ; if not R4 then PC := 173
126 [-]: JMP       173          ; PC := 173
127 [-]: GETGLOBAL R4 K29       ; R4 := 0x9ba7909f
128 [-]: SELF      R4 R4 K44    ; R5 := R4; R4 := R4[0xcfba257f]
129 [-]: GETGLOBAL R6 K45       ; R6 := 0xcffd3193
130 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
131 [-]: GETGLOBAL R5 K7        ; R5 := 0x7b998233
132 [-]: MOVE      R6 R4        ; R6 := R4
133 [-]: CALL      R5 2 2       ; R5 := R5(R6)
134 [-]: TEST      R5 1         ; if R5 then PC := 173
135 [-]: JMP       173          ; PC := 173
136 [-]: SELF      R5 R4 K46    ; R6 := R4; R5 := R4[0xe4162eed]
137 [-]: LOADK     R7 K47       ; R7 := "SetWayInMovie"
138 [-]: LOADK     R8 K48       ; R8 := "true"
139 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
140 [-]: NEWTABLE  R5 0 5       ; R5 := {}
141 [-]: SETTABLE  R5 K49 K50   ; R5["NARAMON"] := 1.000000
142 [-]: SETTABLE  R5 K51 K27   ; R5["ZENURIK"] := 2.000000
143 [-]: SETTABLE  R5 K52 K53   ; R5["VAZARIN"] := 3.000000
144 [-]: SETTABLE  R5 K54 K55   ; R5["UNAIRU"] := 4.000000
145 [-]: SETTABLE  R5 K56 K57   ; R5["MADURAI"] := 5.000000
146 [-]: GETGLOBAL R6 K10       ; R6 := _T
147 [-]: GETTABLE  R6 R6 K58    ; R6 := R6[0xd73ffe73]
148 [-]: MOVE      R7 R5        ; R7 := R5
149 [-]: CALL      R6 2 1       ; R6(R7)
150 [-]: NEWTABLE  R6 0 0       ; R6 := {}
151 [-]: GETTABLE  R7 R5 K49    ; R7 := R5["NARAMON"]
152 [-]: GETTABLE  R8 R5 K56    ; R8 := R5["MADURAI"]
153 [-]: CONST     R9 1         ; R9 := 1.000000
154 [-]: FORPREP   R7 162       ; R7 -= R9; PC := 162
155 [-]: GETGLOBAL R11 K59      ; R11 := 0x33bdd652
156 [-]: GETTABLE  R11 R11 K60  ; R11 := R11[0x23d5322f]
157 [-]: MOVE      R12 R6       ; R12 := R6
158 [-]: NEWTABLE  R13 0 2      ; R13 := {}
159 [-]: SETTABLE  R13 K61 R10  ; R13["Clan"] := R10
160 [-]: SETTABLE  R13 K62 K63  ; R13["Count"] := 0.000000
161 [-]: CALL      R11 3 1      ; R11(R12,R13)
162 [-]: FORLOOP   R7 155       ; R7 += R9; if R7 <= R8 then begin PC := 155; R10 := R7 end
163 [-]: GETGLOBAL R11 K7       ; R11 := 0x7b998233
164 [-]: GETGLOBAL R12 K10      ; R12 := _T
165 [-]: GETTABLE  R12 R12 K64  ; R12 := R12["SetCurrentResults"]
166 [-]: CALL      R11 2 2      ; R11 := R11(R12)
167 [-]: TEST      R11 1        ; if R11 then PC := 173
168 [-]: JMP       173          ; PC := 173
169 [-]: GETGLOBAL R11 K10      ; R11 := _T
170 [-]: GETTABLE  R11 R11 K65  ; R11 := R11[0xce3bbe2f]
171 [-]: MOVE      R12 R6       ; R12 := R6
172 [-]: CALL      R11 2 1      ; R11(R12)
173 [-]: GETGLOBAL R11 K36      ; R11 := 0x25d99d89
174 [-]: SELF      R11 R11 K66  ; R12 := R11; R11 := R11[0x25a6e75e]
175 [-]: CALL      R11 2 2      ; R11 := R11(R12)
176 [-]: SELF      R11 R11 K67  ; R12 := R11; R11 := R11[0x8e7c3b5e]
177 [-]: CALL      R11 2 2      ; R11 := R11(R12)
178 [-]: GETGLOBAL R12 K7       ; R12 := 0x7b998233
179 [-]: MOVE      R13 R11      ; R13 := R11
180 [-]: CALL      R12 2 2      ; R12 := R12(R13)
181 [-]: TEST      R12 1        ; if R12 then PC := 199
182 [-]: JMP       199          ; PC := 199
183 [-]: GETGLOBAL R12 K10      ; R12 := _T
184 [-]: GETTABLE  R12 R12 K68  ; R12 := R12["ActiveQuestLoaded"]
185 [-]: TEST      R12 1        ; if R12 then PC := 199
186 [-]: JMP       199          ; PC := 199
187 [-]: GETGLOBAL R12 K7       ; R12 := 0x7b998233
188 [-]: GETGLOBAL R13 K69      ; R13 := 0xbe190284
189 [-]: CALL      R12 2 2      ; R12 := R12(R13)
190 [-]: TEST      R12 1        ; if R12 then PC := 205
191 [-]: JMP       205          ; PC := 205
192 [-]: GETGLOBAL R12 K69      ; R12 := 0xbe190284
193 [-]: SELF      R12 R12 K70  ; R13 := R12; R12 := R12[0x8e07e77f]
194 [-]: SELF      R14 R11 K71  ; R15 := R11; R14 := R11[0xed4e0128]
195 [-]: CALL      R14 2 2      ; R14 := R14(R15)
196 [-]: LOADK     R15 K68      ; R15 := "ActiveQuestLoaded"
197 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
198 [-]: JMP       205          ; PC := 205
199 [-]: GETGLOBAL R12 K10      ; R12 := _T
200 [-]: SETTABLE  R12 K68 K4   ; R12["ActiveQuestLoaded"] := true
201 [-]: GETUPVAL  R12 U5       ; R12 := U5
202 [-]: CALL      R12 1 3      ; R12,R13 := R12()
203 [-]: NOT       R14 R13      ; R14 :=  R13
204 [-]: SETGLOBAL R14 K72      ; mQuestsNeedChecking := R14
205 [-]: GETUPVAL  R14 U6       ; R14 := U6
206 [-]: GETTABLE  R14 R14 K73  ; R14 := R14["mForceRefreshWorldStatePostLogin"]
207 [-]: TEST      R14 0        ; if not R14 then PC := 211
208 [-]: JMP       211          ; PC := 211
209 [-]: GETUPVAL  R14 U7       ; R14 := U7
210 [-]: CALL      R14 1 1      ; R14()
211 [-]: GETUPVAL  R14 U8       ; R14 := U8
212 [-]: GETUPVAL  R15 U6       ; R15 := U6
213 [-]: GETTABLE  R15 R15 K73  ; R15 := R15["mForceRefreshWorldStatePostLogin"]
214 [-]: CALL      R14 2 1      ; R14(R15)
215 [-]: GETUPVAL  R14 U6       ; R14 := U6
216 [-]: SETTABLE  R14 K73 K74  ; R14["mForceRefreshWorldStatePostLogin"] := false
217 [-]: GETGLOBAL R14 K36      ; R14 := 0x25d99d89
218 [-]: SELF      R14 R14 K75  ; R15 := R14; R14 := R14[0x1bddce2c]
219 [-]: LOADK     R16 K76      ; R16 := "OnSyncTwitchDrops"
220 [-]: CALL      R14 3 1      ; R14(R15,R16)
221 [-]: GETGLOBAL R14 K36      ; R14 := 0x25d99d89
222 [-]: SELF      R14 R14 K77  ; R15 := R14; R14 := R14[0x5826c749]
223 [-]: LOADK     R16 K78      ; R16 := "OnSyncAmazonEntitlemments"
224 [-]: CALL      R14 3 1      ; R14(R15,R16)
225 [-]: GETUPVAL  R14 U9       ; R14 := U9
226 [-]: CALL      R14 1 1      ; R14()
227 [-]: GETUPVAL  R14 U10      ; R14 := U10
228 [-]: CALL      R14 1 1      ; R14()
229 [-]: GETGLOBAL R14 K79      ; R14 := mFoundryNotification
230 [-]: SETTABLE  R14 K80 K4   ; R14["Refresh"] := true
231 [-]: GETGLOBAL R14 K10      ; R14 := _T
232 [-]: SETTABLE  R14 K81 K74  ; R14["syncingInventory"] := false
233 [-]: GETUPVAL  R14 U11      ; R14 := U11
234 [-]: GETGLOBAL R15 K36      ; R15 := 0x25d99d89
235 [-]: CALL      R14 2 1      ; R14(R15)
236 [-]: GETGLOBAL R14 K2       ; R14 := 0x0032441c
237 [-]: GETTABLE  R14 R14 K82  ; R14 := R14["checkAutoLaunchMission"]
238 [-]: EQ        1 R14 K74    ; if R14 == false then PC := 250
239 [-]: JMP       250          ; PC := 250
240 [-]: GETGLOBAL R14 K29      ; R14 := 0x9ba7909f
241 [-]: SELF      R14 R14 K83  ; R15 := R14; R14 := R14[0x0b1c45c5]
242 [-]: LOADK     R16 K84      ; R16 := "LotusGameRules.AutoLaunchMission"
243 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
244 [-]: EQ        1 R14 K32    ; if R14 == "" then PC := 250
245 [-]: JMP       250          ; PC := 250
246 [-]: SETUPVAL  R14 U12      ; U82 := R12
247 [-]: LOADKB    R2 0 0       ; R2 := false
248 [-]: GETGLOBAL R15 K2       ; R15 := 0x0032441c
249 [-]: SETTABLE  R15 K82 K74  ; R15["checkAutoLaunchMission"] := false
250 [-]: TEST      R2 0         ; if not R2 then PC := 263
251 [-]: JMP       263          ; PC := 263
252 [-]: GETGLOBAL R15 K10      ; R15 := _T
253 [-]: SETTABLE  R15 K17 K12  ; R15["QueueNewWarRecap"] := nil
254 [-]: GETGLOBAL R15 K7       ; R15 := 0x7b998233
255 [-]: GETGLOBAL R16 K85      ; R16 := 0x56df9f48
256 [-]: CALL      R15 2 2      ; R15 := R15(R16)
257 [-]: TEST      R15 1        ; if R15 then PC := 263
258 [-]: JMP       263          ; PC := 263
259 [-]: GETGLOBAL R15 K29      ; R15 := 0x9ba7909f
260 [-]: SELF      R15 R15 K86  ; R16 := R15; R15 := R15[0x6dd7aa66]
261 [-]: GETGLOBAL R17 K85      ; R17 := 0x56df9f48
262 [-]: CALL      R15 3 1      ; R15(R16,R17)
263 [-]: GETUPVAL  R15 U1       ; R15 := U1
264 [-]: GETTABLE  R15 R15 K87  ; R15 := R15[0xc14d48af]
265 [-]: CALL      R15 1 2      ; R15 := R15()
266 [-]: TEST      R15 0        ; if not R15 then PC := 298
267 [-]: JMP       298          ; PC := 298
268 [-]: GETGLOBAL R16 K7       ; R16 := 0x7b998233
269 [-]: GETGLOBAL R17 K88      ; R17 := 0xa94df70b
270 [-]: CALL      R16 2 2      ; R16 := R16(R17)
271 [-]: TEST      R16 1        ; if R16 then PC := 298
272 [-]: JMP       298          ; PC := 298
273 [-]: GETGLOBAL R16 K7       ; R16 := 0x7b998233
274 [-]: GETGLOBAL R17 K36      ; R17 := 0x25d99d89
275 [-]: CALL      R16 2 2      ; R16 := R16(R17)
276 [-]: TEST      R16 1        ; if R16 then PC := 298
277 [-]: JMP       298          ; PC := 298
278 [-]: GETGLOBAL R16 K36      ; R16 := 0x25d99d89
279 [-]: SELF      R16 R16 K89  ; R17 := R16; R16 := R16[0xcd57f819]
280 [-]: LOADKB    R18 1 0      ; R18 := true
281 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
282 [-]: GETTABLE  R16 R16 K90  ; R16 := R16["mBootLocation"]
283 [-]: EQ        0 R16 K50    ; if R16 ~= 1.000000 then PC := 292
284 [-]: JMP       292          ; PC := 292
285 [-]: GETGLOBAL R17 K88      ; R17 := 0xa94df70b
286 [-]: SELF      R17 R17 K92  ; R18 := R17; R17 := R17[0x2b0141b8]
287 [-]: GETGLOBAL R19 K41      ; R19 := 0x7ed0a956
288 [-]: LOADK     R20 K93      ; R20 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/TNWDrifterCampMain"
289 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
290 [-]: CALL      R17 0 1      ; R17(R18,...)
291 [-]: JMP       298          ; PC := 298
292 [-]: GETGLOBAL R17 K88      ; R17 := 0xa94df70b
293 [-]: SELF      R17 R17 K92  ; R18 := R17; R17 := R17[0x2b0141b8]
294 [-]: GETGLOBAL R19 K41      ; R19 := 0x7ed0a956
295 [-]: LOADK     R20 K94      ; R20 := "/Lotus/Levels/Proc/PlayerShip"
296 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
297 [-]: CALL      R17 0 1      ; R17(R18,...)
298 [-]: RETURN    R0 1         ; return 


; Function #194.1:
;
; Name:            
; Defined at line: 6586
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMenuSuitAvatar
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K1        ; R0 := mMenuSuitAvatar
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x044b7be8]
  8 [-]: LOADKB    R2 0 0       ; R2 := false
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0x3d106989
 11 [-]: LOADK     R1 K4        ; R1 := "Login: Setup 1 Done"
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: GETGLOBAL R0 K3        ; R0 := 0x3d106989
 14 [-]: LOADK     R1 K5        ; R1 := "Login: Setup 2 Done"
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #194.2:
;
; Name:            
; Defined at line: 6598
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HasDailyTribute"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["DailyTributeLoginState"]
  7 [-]: EQ        0 R0 K3      ; if R0 ~= 2.000000 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: SETTABLE  R0 K2 K4     ; R0["DailyTributeLoginState"] := 1.000000
 11 [-]: JMP       56           ; PC := 56
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["DailyTributeLoginState"]
 14 [-]: EQ        0 R0 K4      ; if R0 ~= 1.000000 then PC := 56
 15 [-]: JMP       56           ; PC := 56
 16 [-]: GETGLOBAL R0 K5        ; R0 := 0x7b998233
 17 [-]: GETGLOBAL R1 K6        ; R1 := mMenuSuitAvatar
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: TEST      R0 1         ; if R0 then PC := 38
 20 [-]: JMP       38           ; PC := 38
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: SETTABLE  R0 K2 K7     ; R0["DailyTributeLoginState"] := nil
 23 [-]: GETGLOBAL R0 K6        ; R0 := mMenuSuitAvatar
 24 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x044b7be8]
 25 [-]: LOADKB    R2 0 0       ; R2 := false
 26 [-]: CALL      R0 3 1       ; R0(R1,R2)
 27 [-]: GETGLOBAL R0 K9        ; R0 := mTimerMgr
 28 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x775c858b]
 29 [-]: GETGLOBAL R2 K0        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["DailyTributeLoginTimerId"]
 31 [-]: CALL      R0 3 1       ; R0(R1,R2)
 32 [-]: GETGLOBAL R0 K0        ; R0 := _T
 33 [-]: SETTABLE  R0 K11 K7    ; R0["DailyTributeLoginTimerId"] := nil
 34 [-]: GETGLOBAL R0 K12       ; R0 := 0x3d106989
 35 [-]: LOADK     R1 K13       ; R1 := "Login: Daily Done"
 36 [-]: CALL      R0 2 1       ; R0(R1)
 37 [-]: JMP       41           ; PC := 41
 38 [-]: GETGLOBAL R0 K12       ; R0 := 0x3d106989
 39 [-]: LOADK     R1 K14       ; R1 := "Login: Setup missing avatar"
 40 [-]: CALL      R0 2 1       ; R0(R1)
 41 [-]: GETGLOBAL R0 K0        ; R0 := _T
 42 [-]: GETTABLE  R0 R0 K15    ; R0 := R0["QueueNewWarRecap"]
 43 [-]: TEST      R0 0         ; if not R0 then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: GETGLOBAL R0 K0        ; R0 := _T
 46 [-]: SETTABLE  R0 K15 K7    ; R0["QueueNewWarRecap"] := nil
 47 [-]: GETGLOBAL R0 K5        ; R0 := 0x7b998233
 48 [-]: GETGLOBAL R1 K16       ; R1 := 0x56df9f48
 49 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 50 [-]: TEST      R0 1         ; if R0 then PC := 56
 51 [-]: JMP       56           ; PC := 56
 52 [-]: GETGLOBAL R0 K17       ; R0 := 0x9ba7909f
 53 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0[0x6dd7aa66]
 54 [-]: GETGLOBAL R2 K16       ; R2 := 0x56df9f48
 55 [-]: CALL      R0 3 1       ; R0(R1,R2)
 56 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 6718
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["InviteQueued"] := 5.000000
  3 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 6722
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: LOADK     R2 K1        ; R2 := "DoLogoff"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: LOADNIL   R1 R1        ; R1 := nil
  5 [-]: SETGLOBAL R1 K2        ; connectionFailurePopup := R1
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: EQ        1 R0 K3      ; if R0 == "true" then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 10
 10 [-]: LOADKB    R2 1 0       ; R2 := true
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 6728
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := connectionFailurePopup
  2 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 34
  3 [-]: JMP       34           ; PC := 34
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x76ea806b
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x8792aaab]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 34
  8 [-]: JMP       34           ; PC := 34
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xd342d13d]
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: TEST      R0 0         ; if not R0 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETGLOBAL R0 K5        ; R0 := 0x9ba7909f
 15 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x5374b92e]
 16 [-]: GETGLOBAL R2 K7        ; R2 := 0xe1380899
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: TEST      R0 1         ; if R0 then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETGLOBAL R1 K8        ; R1 := 0x34291f5c
 21 [-]: GETTABLE  R1 R1 K9     ; R1 := R1[0x056bfe8b]
 22 [-]: CALL      R1 1 2       ; R1 := R1()
 23 [-]: TEST      R1 0         ; if not R1 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R1 K2        ; R1 := 0x76ea806b
 26 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x2e5dbf9d]
 27 [-]: CALL      R1 2 1       ; R1(R2)
 28 [-]: GETUPVAL  R1 U1        ; R1 := U1
 29 [-]: GETTABLE  R1 R1 K11    ; R1 := R1[0xe0cba3ca]
 30 [-]: LOADK     R2 K12       ; R2 := "/Lotus/Language/Menu/BackgroundError_FailedToConnect"
 31 [-]: LOADK     R3 K13       ; R3 := "DoLogoff"
 32 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 33 [-]: SETGLOBAL R1 K0        ; connectionFailurePopup := R1
 34 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 6740
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x056bfe8b]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 1         ; if R1 then PC := 129
  5 [-]: JMP       129          ; PC := 129
  6 [-]: GETGLOBAL R1 K2        ; R1 := connectionFailurePopup
  7 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 129
  8 [-]: JMP       129          ; PC := 129
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x76ea806b
 10 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x8792aaab]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 129
 13 [-]: JMP       129          ; PC := 129
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0xa7a2e381]
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 123
 18 [-]: JMP       123          ; PC := 123
 19 [-]: GETGLOBAL R1 K7        ; R1 := 0x7f5022cf
 20 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0xa5c556b9]
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: LOADK     R3 K9        ; R3 := "|"
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: TEST      R1 0         ; if not R1 then PC := 123
 25 [-]: JMP       123          ; PC := 123
 26 [-]: GETGLOBAL R2 K7        ; R2 := 0x7f5022cf
 27 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0x1a94c9cc]
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: ADD       R4 R1 K11    ; R4 := R1 + 1.000000
 30 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 31 [-]: GETGLOBAL R3 K12       ; R3 := cjson
 32 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0x7ab914d8]
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 123
 36 [-]: JMP       123          ; PC := 123
 37 [-]: GETTABLE  R4 R3 K14    ; R4 := R3["SuspendDate"]
 38 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 70
 39 [-]: JMP       70           ; PC := 70
 40 [-]: GETGLOBAL R4 K15       ; R4 := 0xae91e43b
 41 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x42b04007]
 42 [-]: LOADK     R6 K17       ; R6 := "/Lotus/Language/Launcher/LoginFailedSuspended"
 43 [-]: LOADKB    R7 1 0       ; R7 := true
 44 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 45 [-]: LOADK     R5 K18       ; R5 := "/Lotus/Language/Launcher/SuspendReason_"
 46 [-]: GETTABLE  R6 R3 K19    ; R6 := R3["SuspendReason"]
 47 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 48 [-]: GETGLOBAL R6 K15       ; R6 := 0xae91e43b
 49 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0x42b04007]
 50 [-]: MOVE      R8 R5        ; R8 := R5
 51 [-]: LOADKB    R9 1 0       ; R9 := true
 52 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 53 [-]: EQ        0 R6 R5      ; if R6 ~= R5 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: GETTABLE  R6 R3 K19    ; R6 := R3["SuspendReason"]
 56 [-]: GETGLOBAL R7 K7        ; R7 := 0x7f5022cf
 57 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[0xe8072ded]
 58 [-]: MOVE      R8 R4        ; R8 := R4
 59 [-]: GETTABLE  R9 R3 K14    ; R9 := R3["SuspendDate"]
 60 [-]: MOVE      R10 R6       ; R10 := R6
 61 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 62 [-]: GETUPVAL  R8 U0        ; R8 := U0
 63 [-]: GETTABLE  R8 R8 K21    ; R8 := R8[0xe0cba3ca]
 64 [-]: MOVE      R9 R7        ; R9 := R7
 65 [-]: LOADK     R10 K22      ; R10 := "OnFcmKickOut"
 66 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 67 [-]: SETGLOBAL R8 K2        ; connectionFailurePopup := R8
 68 [-]: RETURN    R0 1         ; return 
 69 [-]: JMP       123          ; PC := 123
 70 [-]: GETTABLE  R8 R3 K23    ; R8 := R3["ChatBanDate"]
 71 [-]: EQ        1 R8 K3      ; if R8 == nil then PC := 91
 72 [-]: JMP       91           ; PC := 91
 73 [-]: GETGLOBAL R8 K15       ; R8 := 0xae91e43b
 74 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x42b04007]
 75 [-]: LOADK     R10 K24      ; R10 := "/Lotus/Language/Changyou/WeGameChatBan"
 76 [-]: LOADKB    R11 0 0      ; R11 := false
 77 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 78 [-]: GETTABLE  R13 R3 K23   ; R13 := R3["ChatBanDate"]
 79 [-]: SETTABLE  R12 K25 R13  ; R12["BAN_TIME"] := R13
 80 [-]: GETTABLE  R13 R3 K27   ; R13 := R3["ChatBannedReason"]
 81 [-]: SETTABLE  R12 K26 R13  ; R12["BAN_REASON"] := R13
 82 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 83 [-]: GETUPVAL  R9 U0        ; R9 := U0
 84 [-]: GETTABLE  R9 R9 K21    ; R9 := R9[0xe0cba3ca]
 85 [-]: MOVE      R10 R8       ; R10 := R8
 86 [-]: LOADK     R11 K28      ; R11 := "DoLogoff"
 87 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 88 [-]: SETGLOBAL R9 K2        ; connectionFailurePopup := R9
 89 [-]: RETURN    R0 1         ; return 
 90 [-]: JMP       123          ; PC := 123
 91 [-]: GETTABLE  R9 R3 K29    ; R9 := R3["KickReason"]
 92 [-]: EQ        1 R9 K3      ; if R9 == nil then PC := 110
 93 [-]: JMP       110          ; PC := 110
 94 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
 95 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x42b04007]
 96 [-]: LOADK     R11 K30      ; R11 := "/Lotus/Language/Changyou/WeGameKick"
 97 [-]: LOADKB    R12 0 0      ; R12 := false
 98 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 99 [-]: GETTABLE  R14 R3 K29   ; R14 := R3["KickReason"]
100 [-]: SETTABLE  R13 K31 R14  ; R13["KICK_REASON"] := R14
101 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
102 [-]: GETUPVAL  R10 U0       ; R10 := U0
103 [-]: GETTABLE  R10 R10 K21  ; R10 := R10[0xe0cba3ca]
104 [-]: MOVE      R11 R9       ; R11 := R9
105 [-]: LOADK     R12 K22      ; R12 := "OnFcmKickOut"
106 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
107 [-]: SETGLOBAL R10 K2       ; connectionFailurePopup := R10
108 [-]: RETURN    R0 1         ; return 
109 [-]: JMP       123          ; PC := 123
110 [-]: GETTABLE  R10 R3 K32   ; R10 := R3["WarningReason"]
111 [-]: EQ        1 R10 K3     ; if R10 == nil then PC := 123
112 [-]: JMP       123          ; PC := 123
113 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
114 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10[0x42b04007]
115 [-]: GETTABLE  R12 R3 K32   ; R12 := R3["WarningReason"]
116 [-]: LOADKB    R13 0 0      ; R13 := false
117 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
118 [-]: GETUPVAL  R11 U0       ; R11 := U0
119 [-]: GETTABLE  R11 R11 K21  ; R11 := R11[0xe0cba3ca]
120 [-]: MOVE      R12 R10      ; R12 := R10
121 [-]: CALL      R11 2 1      ; R11(R12)
122 [-]: RETURN    R0 1         ; return 
123 [-]: GETUPVAL  R11 U0       ; R11 := U0
124 [-]: GETTABLE  R11 R11 K21  ; R11 := R11[0xe0cba3ca]
125 [-]: LOADK     R12 K33      ; R12 := "/Lotus/Language/Menu/BackgroundError_FailedToConnect"
126 [-]: LOADK     R13 K28      ; R13 := "DoLogoff"
127 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
128 [-]: SETGLOBAL R11 K2       ; connectionFailurePopup := R11
129 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 6783
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "Background.lua: OnUserChangedCallback"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x9ba7909f
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x7e17ae26]
  6 [-]: LOADK     R2 K4        ; R2 := "OnUserChangedFunction"
  7 [-]: LOADK     R3 K5        ; R3 := ""
  8 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  9 [-]: GETGLOBAL R0 K6        ; R0 := 0xbe190284
 10 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0xd342d13d]
 17 [-]: CALL      R1 1 2       ; R1 := R1()
 18 [-]: TEST      R1 1         ; if R1 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETGLOBAL R1 K6        ; R1 := 0xbe190284
 21 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xf2deaf69]
 22 [-]: GETGLOBAL R3 K10       ; R3 := gLotusHubGameRulesType
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 26
 26 [-]: LOADKB    R1 1 0       ; R1 := true
 27 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
 28 [-]: LOADK     R3 K11       ; R3 := "OnUserChangedCallback"
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: GETGLOBAL R2 K12       ; R2 := 0x0032441c
 31 [-]: SETTABLE  R2 K13 K14   ; R2["JunctionComplete"] := nil
 32 [-]: GETGLOBAL R2 K15       ; R2 := 0x76ea806b
 33 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x8792aaab]
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 0         ; if not R2 then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: TEST      R1 1         ; if R1 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: LOADNIL   R2 R2        ; R2 := nil
 40 [-]: SETGLOBAL R2 K17       ; connectionFailurePopup := R2
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: CALL      R2 1 1       ; R2()
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R2 K18       ; R2 := 0x34291f5c
 45 [-]: GETTABLE  R2 R2 K19    ; R2 := R2[0x8ee24660]
 46 [-]: LOADKB    R3 1 0       ; R3 := true
 47 [-]: CALL      R2 2 1       ; R2(R3)
 48 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 6805
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADKB    R0 0 0       ; R0 := false
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gDialogDeviceID"]
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: GETGLOBAL R2 K0        ; R2 := _T
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gDialogDeviceID"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R0 K3        ; R0 := ""
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0x89326c93
 13 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x785f144d]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x89326c93
 18 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xcf9f3db6]
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: CALL      R1 3 1       ; R1(R2,R3)
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R1 K4        ; R1 := 0x89326c93
 23 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xca216d11]
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: LOADKB    R4 0 0       ; R4 := false
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 6819
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: SETUPVAL  R0 U0        ; U82 := R0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe0cba3ca]
  8 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/ConnectController_XBone"
  9 [-]: LOADK     R2 K2        ; R2 := "OnConfirmation"
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 6826
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: SETUPVAL  R0 U0        ; U82 := R0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe0cba3ca]
  8 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/ConnectController_Switch"
  9 [-]: LOADK     R2 K2        ; R2 := "OnConfirmation"
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 6833
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := connectionFailurePopup
  2 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xe0cba3ca]
  6 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/Menu/ConnectionError_LoginExpired"
  7 [-]: LOADK     R4 K4        ; R4 := "DoLogoff"
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 6839
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 6842
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x900feed6
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xe4162eed]
 11 [-]: LOADK     R3 K5        ; R3 := "OnOnlinePlayTypeChanged"
 12 [-]: LOADK     R4 K6        ; R4 := ""
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 6849
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbcfb64ab]
  3 [-]: GETGLOBAL R3 K2        ; R3 := movies
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MissionDeck"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xe4162eed]
 12 [-]: LOADK     R4 K6        ; R4 := "GlobalSelectRegion"
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 6856
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x8024bd2d]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: GETGLOBAL R0 K1        ; R0 := _T
  5 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Jukebox"]
  6 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xfce6fd2b]
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: GETGLOBAL R0 K1        ; R0 := _T
 13 [-]: SETTABLE  R0 K6 K7     ; R0["IntelIconCacheFlushed"] := true
 14 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 6868
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADKB    R1 0 0       ; R1 := false
  2 [-]: SETUPVAL  R1 U0        ; U82 := R0
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xfb64e76c]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x5ca33548]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x03f57322
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: EQ        0 R2 K5      ; if R2 ~= 4.000000 then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R2 K6        ; R2 := 0xe7f2b02f
 14 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x0eb3b79c]
 15 [-]: CONST     R4 3         ; R4 := 3.000000
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: CONST     R2 0         ; R2 := 0.000000
 19 [-]: SETUPVAL  R2 U1        ; U82 := R1
 20 [-]: CONST     R2 0         ; R2 := 0.000000
 21 [-]: SETUPVAL  R2 U2        ; U82 := R2
 22 [-]: JMP       37           ; PC := 37
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0xe7f2b02f
 24 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x0eb3b79c]
 25 [-]: CONST     R4 4         ; R4 := 4.000000
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: ADD       R2 R2 K8     ; R2 := R2 + 1.000000
 30 [-]: SETUPVAL  R2 U1        ; U82 := R1
 31 [-]: GETGLOBAL R2 K9        ; R2 := 0x55156ff7
 32 [-]: CALL      R2 1 2       ; R2 := R2()
 33 [-]: GETUPVAL  R3 U1        ; R3 := U1
 34 [-]: MUL       R3 K10 R3    ; R3 := 15.000000 * R3
 35 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 36 [-]: SETUPVAL  R2 U2        ; U82 := R2
 37 [-]: RETURN    R0 1         ; return 


; Function #209:
;
; Name:            
; Defined at line: 6883
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  5 [-]: LOADK     R2 K1        ; R2 := "Ignoring Orbiter Invitation while pending"
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETGLOBAL R2 K2        ; R2 := 0x55156ff7
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
 14 [-]: LOADK     R2 K3        ; R2 := "Ignoring Orbiter Invitation after rejection"
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0xbe190284
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 38
 21 [-]: JMP       38           ; PC := 38
 22 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0x89326c93
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETGLOBAL R1 K5        ; R1 := 0xbe190284
 28 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xf2deaf69]
 29 [-]: GETGLOBAL R3 K8        ; R3 := gLotusAttractModeGameRulesType
 30 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 31 [-]: TEST      R1 0         ; if not R1 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETGLOBAL R1 K6        ; R1 := 0x89326c93
 34 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x18d05d30]
 35 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 36 [-]: TEST      R1 1         ; if R1 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: RETURN    R0 1         ; return 
 39 [-]: GETGLOBAL R1 K10       ; R1 := 0xe7f2b02f
 40 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x565be9ee]
 41 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 42 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 43 [-]: MOVE      R3 R1        ; R3 := R1
 44 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 45 [-]: TEST      R2 1         ; if R2 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 48 [-]: GETGLOBAL R3 K6        ; R3 := 0x89326c93
 49 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xfb64e76c]
 50 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 51 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 52 [-]: TEST      R2 0         ; if not R2 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R2 K6        ; R2 := 0x89326c93
 56 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0xfb64e76c]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x5ca33548]
 59 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 60 [-]: EQ        1 R2 R0      ; if R2 == R0 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: RETURN    R0 1         ; return 
 63 [-]: SELF      R3 R1 K14    ; R4 := R1; R3 := R1[0x2fb816cf]
 64 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 65 [-]: GETGLOBAL R4 K15       ; R4 := 0x76ea806b
 66 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x3f3ae64c]
 67 [-]: CONST     R6 0         ; R6 := 0.000000
 68 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 69 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 70 [-]: MOVE      R6 R4        ; R6 := R4
 71 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 72 [-]: TEST      R5 0         ; if not R5 then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: RETURN    R0 1         ; return 
 75 [-]: SELF      R5 R4 K17    ; R6 := R4; R5 := R4[0x80563238]
 76 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 77 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 78 [-]: MOVE      R7 R5        ; R7 := R5
 79 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 80 [-]: TEST      R6 0         ; if not R6 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: RETURN    R0 1         ; return 
 83 [-]: SELF      R6 R5 K18    ; R7 := R5; R6 := R5[0x273a2275]
 84 [-]: MOVE      R8 R3        ; R8 := R3
 85 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 86 [-]: TEST      R6 0         ; if not R6 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: RETURN    R0 1         ; return 
 89 [-]: SELF      R6 R4 K19    ; R7 := R4; R6 := R4[0x300348b9]
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 94
 92 [-]: JMP       94           ; PC := 94
 93 [-]: RETURN    R0 1         ; return 
 94 [-]: GETGLOBAL R6 K10       ; R6 := 0xe7f2b02f
 95 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0x6d0aa187]
 96 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 97 [-]: GETUPVAL  R7 U2        ; R7 := U2
 98 [-]: GETTABLE  R7 R7 K21    ; R7 := R7[0x34b70990]
 99 [-]: MOVE      R8 R3        ; R8 := R3
100 [-]: MOVE      R9 R6        ; R9 := R6
101 [-]: LOADK     R10 K22      ; R10 := "name"
102 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
103 [-]: GETGLOBAL R8 K10       ; R8 := 0xe7f2b02f
104 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8[0x0eb3b79c]
105 [-]: CONST     R10 2        ; R10 := 2.000000
106 [-]: MOVE      R11 R2       ; R11 := R2
107 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
108 [-]: LOADKB    R8 1 0       ; R8 := true
109 [-]: SETUPVAL  R8 U0        ; U82 := R0
110 [-]: GETGLOBAL R8 K24       ; R8 := 0x34291f5c
111 [-]: GETTABLE  R8 R8 K25    ; R8 := R8[0xe27b35bb]
112 [-]: CALL      R8 1 2       ; R8 := R8()
113 [-]: SETTABLE  R8 K26 K27   ; R8["dialogType"] := 1.000000
114 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
115 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x42b04007]
116 [-]: LOADK     R11 K31      ; R11 := "/Lotus/Language/Menu/InvitedToOrbiter"
117 [-]: LOADKB    R12 0 0      ; R12 := false
118 [-]: NEWTABLE  R13 0 1      ; R13 := {}
119 [-]: SETTABLE  R13 K32 R7   ; R13["NAME"] := R7
120 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
121 [-]: SETTABLE  R8 K28 R9    ; R8["locString"] := R9
122 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
123 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x42b04007]
124 [-]: LOADK     R11 K34      ; R11 := "/Lotus/Language/Menu/Global_Accept"
125 [-]: LOADKB    R12 0 0      ; R12 := false
126 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
127 [-]: SETTABLE  R8 K33 R9    ; R8["firstString"] := R9
128 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
129 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x42b04007]
130 [-]: LOADK     R11 K36      ; R11 := "/Lotus/Language/Menu/Global_Decline"
131 [-]: LOADKB    R12 0 0      ; R12 := false
132 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
133 [-]: SETTABLE  R8 K35 R9    ; R8["secondString"] := R9
134 [-]: SELF      R9 R8 K37    ; R10 := R8; R9 := R8[0xe6ccc5b9]
135 [-]: LOADK     R11 K38      ; R11 := "ConfirmLoadOrbiterMessage"
136 [-]: CALL      R9 3 1       ; R9(R10,R11)
137 [-]: GETUPVAL  R9 U3        ; R9 := U3
138 [-]: GETTABLE  R9 R9 K39    ; R9 := R9[0xe99b84e7]
139 [-]: MOVE      R10 R8       ; R10 := R8
140 [-]: CALL      R9 2 1       ; R9(R10)
141 [-]: RETURN    R0 1         ; return 


; Function #210:
;
; Name:            
; Defined at line: 6947
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #211:
;
; Name:            
; Defined at line: 6951
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/InviteToOrbiterReceived"
  4 [-]: LOADKB    R4 0 0       ; R4 := false
  5 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  6 [-]: SETTABLE  R5 K3 R0     ; R5["NAME"] := R0
  7 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
  8 [-]: GETGLOBAL R2 K4        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x7dce37bc]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: LOADK     R4 K6        ; R4 := "SquadMemberJoined"
 12 [-]: CALL      R2 3 1       ; R2(R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #212:
;
; Name:            
; Defined at line: 6956
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/InviteToOrbiterRejected"
  4 [-]: LOADKB    R4 0 0       ; R4 := false
  5 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  6 [-]: SETTABLE  R5 K3 R0     ; R5["NAME"] := R0
  7 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
  8 [-]: GETGLOBAL R2 K4        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x7dce37bc]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: LOADK     R4 K6        ; R4 := "SquadMemberLeft"
 12 [-]: CALL      R2 3 1       ; R2(R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #213:
;
; Name:            
; Defined at line: 6961
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/InviteToOrbiterAccepted"
  4 [-]: LOADKB    R4 0 0       ; R4 := false
  5 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  6 [-]: SETTABLE  R5 K3 R0     ; R5["NAME"] := R0
  7 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
  8 [-]: GETGLOBAL R2 K4        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x7dce37bc]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: LOADK     R4 K6        ; R4 := "SquadMemberJoined"
 12 [-]: CALL      R2 3 1       ; R2(R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #214:
;
; Name:            
; Defined at line: 6966
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf56f3887]
  4 [-]: LOADK     R4 K3        ; R4 := "ConfirmLogoff"
  5 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  6 [-]: MOVE      R6 R0        ; R6 := R0
  7 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
  8 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  9 [-]: RETURN    R0 1         ; return 


; Function #215:
;
; Name:            
; Defined at line: 6970
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 1.000000 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: JMP       24           ; PC := 24
  7 [-]: EQ        0 R0 K2      ; if R0 ~= 2.000000 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: JMP       24           ; PC := 24
 13 [-]: EQ        0 R0 K3      ; if R0 ~= 4.000000 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R2 U2        ; R2 := U2
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: JMP       24           ; PC := 24
 19 [-]: EQ        0 R0 K4      ; if R0 ~= 3.000000 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R2 U3        ; R2 := U3
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 1       ; R2(R3)
 24 [-]: RETURN    R0 1         ; return 


; Function #216:
;
; Name:            
; Defined at line: 6982
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 30
  2 [-]: JMP       30           ; PC := 30
  3 [-]: EQ        1 R1 K0      ; if R1 == "WEGAME_ACCOUNT_ACTIVATED" then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: EQ        0 R1 K1      ; if R1 ~= "IOS_ACCOUNT_ACTIVATED" then PC := 24
  6 [-]: JMP       24           ; PC := 24
  7 [-]: GETGLOBAL R2 K2        ; R2 := _T
  8 [-]: SETTABLE  R2 K3 K4     ; R2["gWeGameAccount"] := nil
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0x9ba7909f
 10 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xbcfb64ab]
 11 [-]: GETGLOBAL R4 K7        ; R4 := movies
 12 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["MainMenu"]
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: GETGLOBAL R3 K9        ; R3 := 0x7b998233
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 1         ; if R3 then PC := 55
 18 [-]: JMP       55           ; PC := 55
 19 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2[0xe4162eed]
 20 [-]: LOADK     R5 K11       ; R5 := "OnAccountNamed"
 21 [-]: LOADK     R6 K12       ; R6 := ""
 22 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 23 [-]: JMP       55           ; PC := 55
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0xf616a184]
 26 [-]: LOADK     R4 K14       ; R4 := "/Lotus/Language/Menu/Profile_AccountRenameSuccess"
 27 [-]: LOADK     R5 K15       ; R5 := "OnAccountRenameRelogConfirm"
 28 [-]: CALL      R3 3 1       ; R3(R4,R5)
 29 [-]: JMP       55           ; PC := 55
 30 [-]: LOADK     R3 K16       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail"
 31 [-]: EQ        0 R1 K17     ; if R1 ~= "RESTRICTED_NAME" then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: LOADK     R3 K18       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_RESTRICTED_NAME"
 34 [-]: JMP       42           ; PC := 42
 35 [-]: EQ        0 R1 K19     ; if R1 ~= "INSUFFICIENT_FUNDS" then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: LOADK     R3 K20       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_INSUFFICIENT_FUNDS"
 38 [-]: JMP       42           ; PC := 42
 39 [-]: EQ        0 R1 K21     ; if R1 ~= "NAME_USED" then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADK     R3 K22       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_NAME_USED"
 42 [-]: GETGLOBAL R4 K23       ; R4 := 0x603636ad
 43 [-]: MOVE      R5 R3        ; R5 := R3
 44 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 45 [-]: GETGLOBAL R7 K2        ; R7 := _T
 46 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["gPendingAccountRename"]
 47 [-]: SETTABLE  R6 K24 R7    ; R6["NEW_NAME"] := R7
 48 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 49 [-]: MOVE      R3 R4        ; R3 := R4
 50 [-]: GETUPVAL  R4 U0        ; R4 := U0
 51 [-]: GETTABLE  R4 R4 K26    ; R4 := R4[0xe0cba3ca]
 52 [-]: MOVE      R5 R3        ; R5 := R3
 53 [-]: LOADK     R6 K27       ; R6 := "OnBadNewNameAcknowledged"
 54 [-]: CALL      R4 3 1       ; R4(R5,R6)
 55 [-]: GETGLOBAL R4 K2        ; R4 := _T
 56 [-]: SETTABLE  R4 K25 K12   ; R4["gPendingAccountRename"] := ""
 57 [-]: RETURN    R0 1         ; return 


; Function #217:
;
; Name:            
; Defined at line: 7011
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 54
  5 [-]: JMP       54           ; PC := 54
  6 [-]: GETGLOBAL R1 K3        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["gWeGameAccount"]
  8 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x5ef16644]
 12 [-]: GETGLOBAL R2 K3        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["gPendingAccountRename"]
 14 [-]: GETGLOBAL R3 K3        ; R3 := _T
 15 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["gWeGameAccount"]
 16 [-]: LOADK     R4 K8        ; R4 := "OnAccountRename"
 17 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 18 [-]: JMP       90           ; PC := 90
 19 [-]: GETGLOBAL R1 K3        ; R1 := _T
 20 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["giOsAccount"]
 21 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETGLOBAL R1 K10       ; R1 := 0x76ea806b
 24 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x951c03ce]
 25 [-]: GETGLOBAL R3 K3        ; R3 := _T
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["gPendingAccountRename"]
 27 [-]: GETGLOBAL R4 K3        ; R4 := _T
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["giOsAccount"]
 29 [-]: LOADK     R5 K8        ; R5 := "OnAccountRename"
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: JMP       90           ; PC := 90
 32 [-]: GETGLOBAL R1 K10       ; R1 := 0x76ea806b
 33 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0x3f3ae64c]
 34 [-]: CONST     R3 0         ; R3 := 0.000000
 35 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 36 [-]: GETGLOBAL R2 K13       ; R2 := 0x7b998233
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: TEST      R2 1         ; if R2 then PC := 90
 40 [-]: JMP       90           ; PC := 90
 41 [-]: SELF      R2 R1 K14    ; R3 := R1; R2 := R1[0x80563238]
 42 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 43 [-]: GETGLOBAL R3 K13       ; R3 := 0x7b998233
 44 [-]: MOVE      R4 R2        ; R4 := R2
 45 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 46 [-]: TEST      R3 1         ; if R3 then PC := 90
 47 [-]: JMP       90           ; PC := 90
 48 [-]: SELF      R3 R2 K15    ; R4 := R2; R3 := R2[0xddb81687]
 49 [-]: GETGLOBAL R5 K3        ; R5 := _T
 50 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["gPendingAccountRename"]
 51 [-]: LOADK     R6 K8        ; R6 := "OnAccountRename"
 52 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 53 [-]: JMP       90           ; PC := 90
 54 [-]: GETGLOBAL R3 K3        ; R3 := _T
 55 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["gWeGameAccount"]
 56 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 72
 57 [-]: JMP       72           ; PC := 72
 58 [-]: GETGLOBAL R3 K3        ; R3 := _T
 59 [-]: SETTABLE  R3 K7 K16    ; R3["gPendingAccountRename"] := ""
 60 [-]: GETUPVAL  R3 U0        ; R3 := U0
 61 [-]: GETTABLE  R3 R3 K17    ; R3 := R3[0xef3e3165]
 62 [-]: GETGLOBAL R4 K18       ; R4 := 0xae91e43b
 63 [-]: LOADK     R5 K19       ; R5 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
 64 [-]: LOADK     R6 K16       ; R6 := ""
 65 [-]: CONST     R7 24        ; R7 := 24.000000
 66 [-]: LOADK     R8 K20       ; R8 := "AccountRename"
 67 [-]: LOADK     R9 K21       ; R9 := "OSKAccountRename"
 68 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 69 [-]: SETTABLE  R10 K22 K23  ; R10["isMultiline"] := false
 70 [-]: SETTABLE  R10 K24 K25  ; R10["cancelDisabled"] := true
 71 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 72 [-]: GETGLOBAL R3 K3        ; R3 := _T
 73 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["giOsAccount"]
 74 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: GETGLOBAL R3 K3        ; R3 := _T
 77 [-]: SETTABLE  R3 K7 K16    ; R3["gPendingAccountRename"] := ""
 78 [-]: GETUPVAL  R3 U0        ; R3 := U0
 79 [-]: GETTABLE  R3 R3 K17    ; R3 := R3[0xef3e3165]
 80 [-]: GETGLOBAL R4 K18       ; R4 := 0xae91e43b
 81 [-]: LOADK     R5 K26       ; R5 := "/Lotus/Language/Gdpr/IOS_AccountRenameTitle"
 82 [-]: LOADK     R6 K16       ; R6 := ""
 83 [-]: CONST     R7 24        ; R7 := 24.000000
 84 [-]: LOADK     R8 K20       ; R8 := "AccountRename"
 85 [-]: LOADK     R9 K21       ; R9 := "OSKAccountRename"
 86 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 87 [-]: SETTABLE  R10 K22 K23  ; R10["isMultiline"] := false
 88 [-]: SETTABLE  R10 K24 K25  ; R10["cancelDisabled"] := true
 89 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 90 [-]: RETURN    R0 1         ; return 


; Function #218:
;
; Name:            
; Defined at line: 7042
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gWeGameAccount"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 17
  4 [-]: JMP       17           ; PC := 17
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0xef3e3165]
  7 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
  8 [-]: LOADK     R2 K5        ; R2 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
  9 [-]: LOADK     R3 K6        ; R3 := ""
 10 [-]: CONST     R4 24        ; R4 := 24.000000
 11 [-]: LOADK     R5 K7        ; R5 := "AccountRename"
 12 [-]: LOADK     R6 K8        ; R6 := "OSKAccountRename"
 13 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 14 [-]: SETTABLE  R7 K9 K10    ; R7["isMultiline"] := false
 15 [-]: SETTABLE  R7 K11 K12   ; R7["cancelDisabled"] := true
 16 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 17 [-]: GETGLOBAL R0 K0        ; R0 := _T
 18 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["giOsAccount"]
 19 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 33
 20 [-]: JMP       33           ; PC := 33
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0xef3e3165]
 23 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 24 [-]: LOADK     R2 K14       ; R2 := "/Lotus/Language/Gdpr/IOS_AccountRenameTitle"
 25 [-]: LOADK     R3 K6        ; R3 := ""
 26 [-]: CONST     R4 24        ; R4 := 24.000000
 27 [-]: LOADK     R5 K7        ; R5 := "AccountRename"
 28 [-]: LOADK     R6 K8        ; R6 := "OSKAccountRename"
 29 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 30 [-]: SETTABLE  R7 K9 K10    ; R7["isMultiline"] := false
 31 [-]: SETTABLE  R7 K11 K12   ; R7["cancelDisabled"] := true
 32 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 33 [-]: RETURN    R0 1         ; return 


; Function #219:
;
; Name:            
; Defined at line: 7053
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 18
  2 [-]: JMP       18           ; PC := 18
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x9ba7909f
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbcfb64ab]
  5 [-]: GETGLOBAL R3 K3        ; R3 := movies
  6 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["MainMenu"]
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0xe4162eed]
 14 [-]: LOADK     R4 K7        ; R4 := "OnWeGameAccountNameCancelled"
 15 [-]: LOADK     R5 K8        ; R5 := ""
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: EQ        0 R0 K8      ; if R0 ~= "" then PC := 53
 19 [-]: JMP       53           ; PC := 53
 20 [-]: GETGLOBAL R2 K9        ; R2 := _T
 21 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["gWeGameAccount"]
 22 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0xef3e3165]
 26 [-]: GETGLOBAL R3 K12       ; R3 := 0xae91e43b
 27 [-]: LOADK     R4 K13       ; R4 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
 28 [-]: LOADK     R5 K8        ; R5 := ""
 29 [-]: CONST     R6 24        ; R6 := 24.000000
 30 [-]: LOADK     R7 K14       ; R7 := "AccountRename"
 31 [-]: LOADK     R8 K15       ; R8 := "OSKAccountRename"
 32 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 33 [-]: SETTABLE  R9 K16 K17   ; R9["isMultiline"] := false
 34 [-]: SETTABLE  R9 K18 K19   ; R9["cancelDisabled"] := true
 35 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 36 [-]: GETGLOBAL R2 K9        ; R2 := _T
 37 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["giOsAccount"]
 38 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 52
 39 [-]: JMP       52           ; PC := 52
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0xef3e3165]
 42 [-]: GETGLOBAL R3 K12       ; R3 := 0xae91e43b
 43 [-]: LOADK     R4 K21       ; R4 := "/Lotus/Language/Gdpr/IOS_AccountRenameTitle"
 44 [-]: LOADK     R5 K8        ; R5 := ""
 45 [-]: CONST     R6 24        ; R6 := 24.000000
 46 [-]: LOADK     R7 K14       ; R7 := "AccountRename"
 47 [-]: LOADK     R8 K15       ; R8 := "OSKAccountRename"
 48 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 49 [-]: SETTABLE  R9 K16 K17   ; R9["isMultiline"] := false
 50 [-]: SETTABLE  R9 K18 K19   ; R9["cancelDisabled"] := true
 51 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 52 [-]: RETURN    R0 1         ; return 
 53 [-]: GETUPVAL  R2 U1        ; R2 := U1
 54 [-]: GETTABLE  R2 R2 K22    ; R2 := R2[0x5d3d561a]
 55 [-]: MOVE      R3 R0        ; R3 := R0
 56 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 57 [-]: LT        0 K23 R2     ; if 0.000000 >= R2 then PC := 75
 58 [-]: JMP       75           ; PC := 75
 59 [-]: GETUPVAL  R3 U1        ; R3 := U1
 60 [-]: GETTABLE  R3 R3 K24    ; R3 := R3[0xe0cba3ca]
 61 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 62 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0x42b04007]
 63 [-]: LOADK     R6 K26       ; R6 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
 64 [-]: LOADKB    R7 0 0       ; R7 := false
 65 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 66 [-]: GETGLOBAL R5 K27       ; R5 := 0x68b0afb4
 67 [-]: MOVE      R6 R0        ; R6 := R0
 68 [-]: MOVE      R7 R2        ; R7 := R2
 69 [-]: MOVE      R8 R2        ; R8 := R2
 70 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 71 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 72 [-]: LOADK     R5 K28       ; R5 := "OnBadNewNameAcknowledged"
 73 [-]: CALL      R3 3 1       ; R3(R4,R5)
 74 [-]: RETURN    R0 1         ; return 
 75 [-]: GETGLOBAL R3 K29       ; R3 := 0x7f5022cf
 76 [-]: GETTABLE  R3 R3 K30    ; R3 := R3[0x41e2ae25]
 77 [-]: MOVE      R4 R0        ; R4 := R0
 78 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 79 [-]: LT        0 K31 R3     ; if 24.000000 >= R3 then PC := 91
 80 [-]: JMP       91           ; PC := 91
 81 [-]: GETUPVAL  R3 U1        ; R3 := U1
 82 [-]: GETTABLE  R3 R3 K24    ; R3 := R3[0xe0cba3ca]
 83 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 84 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0x42b04007]
 85 [-]: LOADK     R6 K32       ; R6 := "/Lotus/Language/Menu/Profile_AccountRenameFail_TOO_LONG"
 86 [-]: LOADKB    R7 0 0       ; R7 := false
 87 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 88 [-]: LOADK     R5 K28       ; R5 := "OnBadNewNameAcknowledged"
 89 [-]: CALL      R3 3 1       ; R3(R4,R5)
 90 [-]: RETURN    R0 1         ; return 
 91 [-]: GETGLOBAL R3 K29       ; R3 := 0x7f5022cf
 92 [-]: GETTABLE  R3 R3 K30    ; R3 := R3[0x41e2ae25]
 93 [-]: MOVE      R4 R0        ; R4 := R0
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: LT        0 R3 K33     ; if R3 >= 4.000000 then PC := 107
 96 [-]: JMP       107          ; PC := 107
 97 [-]: GETUPVAL  R3 U1        ; R3 := U1
 98 [-]: GETTABLE  R3 R3 K24    ; R3 := R3[0xe0cba3ca]
 99 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
100 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0x42b04007]
101 [-]: LOADK     R6 K34       ; R6 := "/Lotus/Language/Menu/Profile_AccountNameFail_TOO_SHORT"
102 [-]: LOADKB    R7 0 0       ; R7 := false
103 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
104 [-]: LOADK     R5 K28       ; R5 := "OnBadNewNameAcknowledged"
105 [-]: CALL      R3 3 1       ; R3(R4,R5)
106 [-]: RETURN    R0 1         ; return 
107 [-]: GETGLOBAL R3 K35       ; R3 := 0x7db5f856
108 [-]: MOVE      R4 R0        ; R4 := R0
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: MOVE      R0 R3        ; R0 := R3
111 [-]: GETGLOBAL R3 K36       ; R3 := 0x09423272
112 [-]: MOVE      R4 R0        ; R4 := R0
113 [-]: CONST     R5 1         ; R5 := 1.000000
114 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
115 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 123
116 [-]: JMP       123          ; PC := 123
117 [-]: GETUPVAL  R4 U1        ; R4 := U1
118 [-]: GETTABLE  R4 R4 K24    ; R4 := R4[0xe0cba3ca]
119 [-]: LOADK     R5 K38       ; R5 := "/Lotus/Language/Menu/Profile_AccountRenameFail_CENSORED"
120 [-]: LOADK     R6 K28       ; R6 := "OnBadNewNameAcknowledged"
121 [-]: CALL      R4 3 1       ; R4(R5,R6)
122 [-]: RETURN    R0 1         ; return 
123 [-]: GETGLOBAL R4 K9        ; R4 := _T
124 [-]: SETTABLE  R4 K39 R0    ; R4["gPendingAccountRename"] := R0
125 [-]: GETGLOBAL R4 K9        ; R4 := _T
126 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["gWeGameAccount"]
127 [-]: EQ        0 R4 K0      ; if R4 ~= nil then PC := 133
128 [-]: JMP       133          ; PC := 133
129 [-]: GETGLOBAL R4 K9        ; R4 := _T
130 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["giOsAccount"]
131 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 147
132 [-]: JMP       147          ; PC := 147
133 [-]: NEWTABLE  R4 0 1       ; R4 := {}
134 [-]: SETTABLE  R4 K40 R0    ; R4["NEW_NAME"] := R0
135 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
136 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5[0x42b04007]
137 [-]: LOADK     R7 K41       ; R7 := "/Lotus/Language/Changyou/AliasNameConfirm"
138 [-]: LOADKB    R8 1 0       ; R8 := true
139 [-]: MOVE      R9 R4        ; R9 := R4
140 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
141 [-]: GETUPVAL  R6 U1        ; R6 := U1
142 [-]: GETTABLE  R6 R6 K42    ; R6 := R6[0xf616a184]
143 [-]: MOVE      R7 R5        ; R7 := R5
144 [-]: LOADK     R8 K43       ; R8 := "OnAccountRenameConfirm"
145 [-]: CALL      R6 3 1       ; R6(R7,R8)
146 [-]: RETURN    R0 1         ; return 
147 [-]: GETGLOBAL R6 K44       ; R6 := 0x76ea806b
148 [-]: SELF      R6 R6 K45    ; R7 := R6; R6 := R6[0x3f3ae64c]
149 [-]: CONST     R8 0         ; R8 := 0.000000
150 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
151 [-]: GETGLOBAL R7 K5        ; R7 := 0x7b998233
152 [-]: MOVE      R8 R6        ; R8 := R6
153 [-]: CALL      R7 2 2       ; R7 := R7(R8)
154 [-]: TEST      R7 1         ; if R7 then PC := 192
155 [-]: JMP       192          ; PC := 192
156 [-]: SELF      R7 R6 K46    ; R8 := R6; R7 := R6[0x5ca33548]
157 [-]: LOADKB    R9 1 0       ; R9 := true
158 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
159 [-]: EQ        1 R7 R0      ; if R7 == R0 then PC := 184
160 [-]: JMP       184          ; PC := 184
161 [-]: GETUPVAL  R7 U1        ; R7 := U1
162 [-]: GETTABLE  R7 R7 K47    ; R7 := R7[0x06d055f9]
163 [-]: GETGLOBAL R8 K48       ; R8 := 0x34291f5c
164 [-]: GETTABLE  R8 R8 K49    ; R8 := R8[0xa7a2e381]
165 [-]: CALL      R8 1 2       ; R8 := R8()
166 [-]: CONST     R9 50        ; R9 := 50.000000
167 [-]: CONST     R10 200      ; R10 := 200.000000
168 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
169 [-]: NEWTABLE  R8 0 2       ; R8 := {}
170 [-]: SETTABLE  R8 K40 R0    ; R8["NEW_NAME"] := R0
171 [-]: SETTABLE  R8 K50 R7    ; R8["RENAME_COST"] := R7
172 [-]: GETGLOBAL R9 K12       ; R9 := 0xae91e43b
173 [-]: SELF      R9 R9 K25    ; R10 := R9; R9 := R9[0x42b04007]
174 [-]: LOADK     R11 K51      ; R11 := "/Lotus/Language/Menu/Profile_AccountRenameConfirm"
175 [-]: LOADKB    R12 1 0      ; R12 := true
176 [-]: MOVE      R13 R8       ; R13 := R8
177 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
178 [-]: GETUPVAL  R10 U1       ; R10 := U1
179 [-]: GETTABLE  R10 R10 K42  ; R10 := R10[0xf616a184]
180 [-]: MOVE      R11 R9       ; R11 := R9
181 [-]: LOADK     R12 K43      ; R12 := "OnAccountRenameConfirm"
182 [-]: CALL      R10 3 1      ; R10(R11,R12)
183 [-]: JMP       192          ; PC := 192
184 [-]: GETUPVAL  R10 U1       ; R10 := U1
185 [-]: GETTABLE  R10 R10 K24  ; R10 := R10[0xe0cba3ca]
186 [-]: GETGLOBAL R11 K52      ; R11 := 0x603636ad
187 [-]: LOADK     R12 K53      ; R12 := "/Lotus/Language/Menu/Profile_AccountRenameFail_NO_CHANGE"
188 [-]: NEWTABLE  R13 0 1      ; R13 := {}
189 [-]: SETTABLE  R13 K40 R0   ; R13["NEW_NAME"] := R0
190 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
191 [-]: CALL      R10 0 1      ; R10(R11,...)
192 [-]: RETURN    R0 1         ; return 


; Function #220:
;
; Name:            
; Defined at line: 7129
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0x03f57322
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: EQ        0 R3 K3      ; if R3 ~= 4.000000 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 1       ; R3(R4)
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: LOADNIL   R4 R4        ; R4 := nil
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #221:
;
; Name:            
; Defined at line: 7137
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 1         ; if R0 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: LOADNIL   R3 R3        ; R3 := nil
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #222:
;
; Name:            
; Defined at line: 7145
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xe6b41adb]
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: TEST      R1 0         ; if not R1 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0xef3e3165]
 12 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 13 [-]: LOADK     R3 K5        ; R3 := "/Lotus/Language/Gdpr/IOS_AccountRenameTitle"
 14 [-]: LOADK     R4 K6        ; R4 := ""
 15 [-]: CONST     R5 24        ; R5 := 24.000000
 16 [-]: LOADK     R6 K7        ; R6 := "AccountRename"
 17 [-]: LOADK     R7 K8        ; R7 := "OSKAccountRename"
 18 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 19 [-]: SETTABLE  R8 K9 K10    ; R8["isMultiline"] := false
 20 [-]: SETTABLE  R8 K11 R0    ; R8["cancelDisabled"] := R0
 21 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0xef3e3165]
 25 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 26 [-]: LOADK     R3 K12       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
 27 [-]: LOADK     R4 K6        ; R4 := ""
 28 [-]: CONST     R5 24        ; R5 := 24.000000
 29 [-]: LOADK     R6 K7        ; R6 := "AccountRename"
 30 [-]: LOADK     R7 K8        ; R7 := "OSKAccountRename"
 31 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 32 [-]: SETTABLE  R8 K9 K10    ; R8["isMultiline"] := false
 33 [-]: SETTABLE  R8 K11 R0    ; R8["cancelDisabled"] := R0
 34 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 35 [-]: RETURN    R0 1         ; return 


; Function #223:
;
; Name:            
; Defined at line: 7154
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  72

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: CONST     R1 30        ; R1 := 30.000000
  6 [-]: CONST     R2 0         ; R2 := 0.000000
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 27
 13 [-]: JMP       27           ; PC := 27
 14 [-]: GETGLOBAL R3 K3        ; R3 := 0x3d106989
 15 [-]: LOADK     R4 K4        ; R4 := "failed to initialize region challenges: no player profile"
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: ADD       R2 R2 K5     ; R2 := R2 + 1.000000
 18 [-]: GETGLOBAL R3 K6        ; R3 := 0xcbd666e1
 19 [-]: LOADK     R4 K7        ; R4 := 0.100000
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETGLOBAL R3 K0        ; R3 := 0x76ea806b
 22 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x3f3ae64c]
 23 [-]: CONST     R5 0         ; R5 := 0.000000
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: MOVE      R0 R3        ; R0 := R3
 26 [-]: JMP       7            ; PC := 7
 27 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: CONST     R2 0         ; R2 := 0.000000
 31 [-]: SELF      R3 R0 K8     ; R4 := R0; R3 := R0[0x80563238]
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 34 [-]: MOVE      R5 R3        ; R5 := R3
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: TEST      R4 0         ; if not R4 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 51
 39 [-]: JMP       51           ; PC := 51
 40 [-]: GETGLOBAL R4 K3        ; R4 := 0x3d106989
 41 [-]: LOADK     R5 K9        ; R5 := "failed to initialize region challenges: no game data"
 42 [-]: CALL      R4 2 1       ; R4(R5)
 43 [-]: ADD       R2 R2 K5     ; R2 := R2 + 1.000000
 44 [-]: GETGLOBAL R4 K6        ; R4 := 0xcbd666e1
 45 [-]: LOADK     R5 K7        ; R5 := 0.100000
 46 [-]: CALL      R4 2 1       ; R4(R5)
 47 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0[0x80563238]
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: MOVE      R3 R4        ; R3 := R4
 50 [-]: JMP       33           ; PC := 33
 51 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETGLOBAL R4 K3        ; R4 := 0x3d106989
 54 [-]: LOADK     R5 K10       ; R5 := "bailing from region challenges."
 55 [-]: CALL      R4 2 1       ; R4(R5)
 56 [-]: RETURN    R0 1         ; return 
 57 [-]: GETGLOBAL R4 K3        ; R4 := 0x3d106989
 58 [-]: LOADK     R5 K11       ; R5 := "initializing region challenges"
 59 [-]: CALL      R4 2 1       ; R4(R5)
 60 [-]: GETUPVAL  R4 U0        ; R4 := U0
 61 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x5e35d4d6]
 62 [-]: CALL      R4 1 2       ; R4 := R4()
 63 [-]: SELF      R5 R4 K13    ; R6 := R4; R5 := R4[0xc1dee03f]
 64 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 65 [-]: GETUPVAL  R6 U0        ; R6 := U0
 66 [-]: GETTABLE  R6 R6 K14    ; R6 := R6[0xd342d13d]
 67 [-]: CALL      R6 1 2       ; R6 := R6()
 68 [-]: CONST     R7 0         ; R7 := 0.000000
 69 [-]: LOADKB    R8 0 0       ; R8 := false
 70 [-]: TEST      R6 0         ; if not R6 then PC := 125
 71 [-]: JMP       125          ; PC := 125
 72 [-]: GETGLOBAL R9 K15       ; R9 := 0x89326c93
 73 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0xca9ea368]
 74 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 75 [-]: GETGLOBAL R10 K17      ; R10 := 0xa94df70b
 76 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0x85de842a]
 77 [-]: MOVE      R12 R9       ; R12 := R9
 78 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 79 [-]: TEST      R10 0        ; if not R10 then PC := 84
 80 [-]: JMP       84           ; PC := 84
 81 [-]: CONST     R7 3         ; R7 := 3.000000
 82 [-]: LOADKB    R8 1 0       ; R8 := true
 83 [-]: JMP       125          ; PC := 125
 84 [-]: GETGLOBAL R10 K19      ; R10 := 0xbe190284
 85 [-]: SELF      R10 R10 K20  ; R11 := R10; R10 := R10[0xef893aec]
 86 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 87 [-]: GETTABLE  R11 R10 K21  ; R11 := R10["syndicateTag"]
 88 [-]: GETGLOBAL R12 K22      ; R12 := 0x0469f296
 89 [-]: LOADK     R13 K23      ; R13 := "KahlSyndicate"
 90 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 91 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 97
 92 [-]: JMP       97           ; PC := 97
 93 [-]: GETGLOBAL R11 K3       ; R11 := 0x3d106989
 94 [-]: LOADK     R12 K24      ; R12 := "Skipping region challenges for Kahl mission"
 95 [-]: CALL      R11 2 1      ; R11(R12)
 96 [-]: RETURN    R0 1         ; return 
 97 [-]: GETTABLE  R11 R10 K25  ; R11 := R10["levelKeyName"]
 98 [-]: GETGLOBAL R12 K2       ; R12 := 0x7b998233
 99 [-]: MOVE      R13 R11      ; R13 := R11
100 [-]: CALL      R12 2 2      ; R12 := R12(R13)
101 [-]: TEST      R12 1        ; if R12 then PC := 115
102 [-]: JMP       115          ; PC := 115
103 [-]: GETGLOBAL R12 K26      ; R12 := 0xb009bbc6
104 [-]: MOVE      R13 R11      ; R13 := R11
105 [-]: CALL      R12 2 2      ; R12 := R12(R13)
106 [-]: GETGLOBAL R13 K2       ; R13 := 0x7b998233
107 [-]: MOVE      R14 R12      ; R14 := R12
108 [-]: CALL      R13 2 2      ; R13 := R13(R14)
109 [-]: TEST      R13 1        ; if R13 then PC := 125
110 [-]: JMP       125          ; PC := 125
111 [-]: SELF      R13 R12 K27  ; R14 := R12; R13 := R12[0x6c053909]
112 [-]: CALL      R13 2 2      ; R13 := R13(R14)
113 [-]: MOVE      R7 R13       ; R7 := R13
114 [-]: JMP       125          ; PC := 125
115 [-]: GETTABLE  R13 R10 K28  ; R13 := R10["location"]
116 [-]: SELF      R14 R13 K29  ; R15 := R13; R14 := R13[0x56c01834]
117 [-]: CALL      R14 2 2      ; R14 := R14(R15)
118 [-]: TEST      R14 0        ; if not R14 then PC := 125
119 [-]: JMP       125          ; PC := 125
120 [-]: SELF      R14 R4 K30   ; R15 := R4; R14 := R4[0x3ad9ed31]
121 [-]: MOVE      R16 R13      ; R16 := R13
122 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
123 [-]: GETTABLE  R15 R14 K31  ; R15 := R14["region"]
124 [-]: ADD       R7 R15 K5    ; R7 := R15 + 1.000000
125 [-]: GETGLOBAL R15 K22      ; R15 := 0x0469f296
126 [-]: LOADK     R16 K32      ; R16 := "QUEST_COMPLETE"
127 [-]: CALL      R15 2 2      ; R15 := R15(R16)
128 [-]: GETGLOBAL R16 K33      ; R16 := 0x7ed0a956
129 [-]: LOADK     R17 K34      ; R17 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
130 [-]: CALL      R16 2 2      ; R16 := R16(R17)
131 [-]: GETGLOBAL R17 K33      ; R17 := 0x7ed0a956
132 [-]: LOADK     R18 K35      ; R18 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
133 [-]: CALL      R17 2 2      ; R17 := R17(R18)
134 [-]: LOADNIL   R18 R18      ; R18 := nil
135 [-]: GETGLOBAL R19 K15      ; R19 := 0x89326c93
136 [-]: SELF      R19 R19 K36  ; R20 := R19; R19 := R19[0xfb64e76c]
137 [-]: CALL      R19 2 2      ; R19 := R19(R20)
138 [-]: LOADKB    R20 0 0      ; R20 := false
139 [-]: GETGLOBAL R21 K3       ; R21 := 0x3d106989
140 [-]: LOADK     R22 K37      ; R22 := "regions: "
141 [-]: LEN       R23 R5       ; R23 := # R5
142 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
143 [-]: CALL      R21 2 1      ; R21(R22)
144 [-]: CONST     R21 1        ; R21 := 1.000000
145 [-]: LEN       R22 R5       ; R22 := # R5
146 [-]: CONST     R23 1        ; R23 := 1.000000
147 [-]: FORPREP   R21 242      ; R21 -= R23; PC := 242
148 [-]: GETTABLE  R25 R5 R24   ; R25 := R5[R24]
149 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
150 [-]: MOVE      R27 R25      ; R27 := R25
151 [-]: CALL      R26 2 2      ; R26 := R26(R27)
152 [-]: TEST      R26 1        ; if R26 then PC := 242
153 [-]: JMP       242          ; PC := 242
154 [-]: GETGLOBAL R26 K38      ; R26 := 0xcfc01047
155 [-]: GETTABLE  R27 R25 K39  ; R27 := R25["challenges"]
156 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
157 [-]: JMP       240          ; PC := 240
158 [-]: GETGLOBAL R31 K40      ; R31 := 0xba7dfcd2
159 [-]: SELF      R31 R31 K41  ; R32 := R31; R31 := R31[0xd87c0114]
160 [-]: SELF      R33 R30 K42  ; R34 := R30; R33 := R30[0xe223e2b1]
161 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
162 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
163 [-]: SELF      R32 R30 K43  ; R33 := R30; R32 := R30[0x2f5d21d2]
164 [-]: CALL      R32 2 2      ; R32 := R32(R33)
165 [-]: LE        1 R32 R31    ; if R32 <= R31 then PC := 168
166 [-]: JMP       168          ; PC := 168
167 [-]: LOADKB    R33 0 1      ; R33 := false; PC := 168
168 [-]: LOADKB    R33 1 0      ; R33 := true
169 [-]: TEST      R33 1        ; if R33 then PC := 240
170 [-]: JMP       240          ; PC := 240
171 [-]: TEST      R6 0         ; if not R6 then PC := 179
172 [-]: JMP       179          ; PC := 179
173 [-]: EQ        1 R24 R7     ; if R24 == R7 then PC := 179
174 [-]: JMP       179          ; PC := 179
175 [-]: SELF      R34 R30 K44  ; R35 := R30; R34 := R30[0xf4ba463e]
176 [-]: CALL      R34 2 2      ; R34 := R34(R35)
177 [-]: TEST      R34 0        ; if not R34 then PC := 240
178 [-]: JMP       240          ; PC := 240
179 [-]: GETGLOBAL R34 K40      ; R34 := 0xba7dfcd2
180 [-]: SELF      R34 R34 K45  ; R35 := R34; R34 := R34[0x9252175f]
181 [-]: GETGLOBAL R36 K15      ; R36 := 0x89326c93
182 [-]: SELF      R36 R36 K46  ; R37 := R36; R36 := R36[0x765dad71]
183 [-]: GETGLOBAL R38 K47      ; R38 := 0x88efc25e
184 [-]: MOVE      R39 R30      ; R39 := R30
185 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
186 [-]: CALL      R36 0 0      ; R36,... := R36(R37,...)
187 [-]: CALL      R34 0 1      ; R34(R35,...)
188 [-]: GETGLOBAL R34 K2       ; R34 := 0x7b998233
189 [-]: MOVE      R35 R19      ; R35 := R19
190 [-]: CALL      R34 2 2      ; R34 := R34(R35)
191 [-]: TEST      R34 1        ; if R34 then PC := 240
192 [-]: JMP       240          ; PC := 240
193 [-]: SELF      R34 R30 K48  ; R35 := R30; R34 := R30[0xd8e82278]
194 [-]: CALL      R34 2 2      ; R34 := R34(R35)
195 [-]: EQ        0 R34 R15    ; if R34 ~= R15 then PC := 240
196 [-]: JMP       240          ; PC := 240
197 [-]: EQ        0 R18 K49    ; if R18 ~= nil then PC := 204
198 [-]: JMP       204          ; PC := 204
199 [-]: SELF      R34 R3 K50   ; R35 := R3; R34 := R3[0x25a6e75e]
200 [-]: CALL      R34 2 2      ; R34 := R34(R35)
201 [-]: SELF      R34 R34 K51  ; R35 := R34; R34 := R34[0xe9768ed0]
202 [-]: CALL      R34 2 2      ; R34 := R34(R35)
203 [-]: MOVE      R18 R34      ; R18 := R34
204 [-]: SELF      R34 R30 K52  ; R35 := R30; R34 := R30[0xcac7abc9]
205 [-]: CALL      R34 2 2      ; R34 := R34(R35)
206 [-]: GETGLOBAL R35 K53      ; R35 := 0xc8802016
207 [-]: MOVE      R36 R18      ; R36 := R18
208 [-]: CALL      R35 2 4      ; R35,R36,R37 := R35(R36)
209 [-]: JMP       238          ; PC := 238
210 [-]: GETTABLE  R40 R39 K54  ; R40 := R39["mItemType"]
211 [-]: EQ        0 R34 R40    ; if R34 ~= R40 then PC := 225
212 [-]: JMP       225          ; PC := 225
213 [-]: GETTABLE  R40 R39 K55  ; R40 := R39["mCompleted"]
214 [-]: TEST      R40 0        ; if not R40 then PC := 225
215 [-]: JMP       225          ; PC := 225
216 [-]: GETGLOBAL R40 K40      ; R40 := 0xba7dfcd2
217 [-]: SELF      R40 R40 K56  ; R41 := R40; R40 := R40[0xf056b179]
218 [-]: MOVE      R42 R19      ; R42 := R19
219 [-]: MOVE      R43 R15      ; R43 := R15
220 [-]: LOADNIL   R44 R44      ; R44 := nil
221 [-]: GETTABLE  R45 R39 K54  ; R45 := R39["mItemType"]
222 [-]: CALL      R40 6 1      ; R40(R41,R42,R43,R44,R45)
223 [-]: LOADKB    R20 1 0      ; R20 := true
224 [-]: JMP       238          ; PC := 238
225 [-]: EQ        0 R34 R17    ; if R34 ~= R17 then PC := 238
226 [-]: JMP       238          ; PC := 238
227 [-]: GETTABLE  R40 R39 K54  ; R40 := R39["mItemType"]
228 [-]: EQ        0 R40 R16    ; if R40 ~= R16 then PC := 238
229 [-]: JMP       238          ; PC := 238
230 [-]: GETGLOBAL R40 K40      ; R40 := 0xba7dfcd2
231 [-]: SELF      R40 R40 K56  ; R41 := R40; R40 := R40[0xf056b179]
232 [-]: MOVE      R42 R19      ; R42 := R19
233 [-]: MOVE      R43 R15      ; R43 := R15
234 [-]: LOADNIL   R44 R44      ; R44 := nil
235 [-]: MOVE      R45 R17      ; R45 := R17
236 [-]: CALL      R40 6 1      ; R40(R41,R42,R43,R44,R45)
237 [-]: LOADKB    R20 1 0      ; R20 := true
238 [-]: TFORLOOP  R35 2        ; R38,R39 :=  R35(R36,R37); if R38 ~= nil then begin PC = 210; R37 := R38 end
239 [-]: JMP       210          ; PC := 210
240 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 158; R28 := R29 end
241 [-]: JMP       158          ; PC := 158
242 [-]: FORLOOP   R21 148      ; R21 += R23; if R21 <= R22 then begin PC := 148; R24 := R21 end
243 [-]: GETUPVAL  R40 U1       ; R40 := U1
244 [-]: EQ        0 R40 K49    ; if R40 ~= nil then PC := 250
245 [-]: JMP       250          ; PC := 250
246 [-]: GETUPVAL  R40 U0       ; R40 := U0
247 [-]: GETTABLE  R40 R40 K57  ; R40 := R40[0xc00479a5]
248 [-]: CALL      R40 1 2      ; R40 := R40()
249 [-]: SETUPVAL  R40 U1       ; U82 := R1
250 [-]: GETUPVAL  R40 U2       ; R40 := U2
251 [-]: CALL      R40 1 1      ; R40()
252 [-]: GETGLOBAL R40 K58      ; R40 := 0x0032441c
253 [-]: GETTABLE  R40 R40 K59  ; R40 := R40["PlayedFightingGame"]
254 [-]: TEST      R40 0        ; if not R40 then PC := 268
255 [-]: JMP       268          ; PC := 268
256 [-]: GETGLOBAL R40 K40      ; R40 := 0xba7dfcd2
257 [-]: SELF      R40 R40 K56  ; R41 := R40; R40 := R40[0xf056b179]
258 [-]: MOVE      R42 R19      ; R42 := R19
259 [-]: GETGLOBAL R43 K22      ; R43 := 0x0469f296
260 [-]: LOADK     R44 K60      ; R44 := "PLAY_MINIGAME"
261 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
262 [-]: CALL      R40 0 1      ; R40(R41,...)
263 [-]: GETGLOBAL R40 K61      ; R40 := 0x25d99d89
264 [-]: SELF      R40 R40 K62  ; R41 := R40; R40 := R40[0xd723c617]
265 [-]: CALL      R40 2 1      ; R40(R41)
266 [-]: GETGLOBAL R40 K58      ; R40 := 0x0032441c
267 [-]: SETTABLE  R40 K59 K49  ; R40["PlayedFightingGame"] := nil
268 [-]: GETGLOBAL R40 K22      ; R40 := 0x0469f296
269 [-]: LOADK     R41 K63      ; R41 := "LORE_FRAGMENT_SCAN"
270 [-]: CALL      R40 2 2      ; R40 := R40(R41)
271 [-]: GETGLOBAL R41 K40      ; R41 := 0xba7dfcd2
272 [-]: SELF      R41 R41 K41  ; R42 := R41; R41 := R41[0xd87c0114]
273 [-]: LOADK     R43 K64      ; R43 := "MPCephFragments"
274 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
275 [-]: SELF      R42 R3 K50   ; R43 := R3; R42 := R3[0x25a6e75e]
276 [-]: CALL      R42 2 2      ; R42 := R42(R43)
277 [-]: SELF      R42 R42 K65  ; R43 := R42; R42 := R42[0x2b7da058]
278 [-]: CALL      R42 2 2      ; R42 := R42(R43)
279 [-]: GETGLOBAL R43 K38      ; R43 := 0xcfc01047
280 [-]: MOVE      R44 R42      ; R44 := R42
281 [-]: CALL      R43 2 4      ; R43,R44,R45 := R43(R44)
282 [-]: JMP       298          ; PC := 298
283 [-]: GETTABLE  R48 R47 K66  ; R48 := R47["mRegion"]
284 [-]: EQ        0 R48 K67    ; if R48 ~= "/Lotus/Language/Locations/Mars" then PC := 298
285 [-]: JMP       298          ; PC := 298
286 [-]: GETTABLE  R48 R47 K68  ; R48 := R47["mItemCount"]
287 [-]: SUB       R48 R48 R41  ; R48 := R48 - R41
288 [-]: LT        0 K69 R48    ; if 0.000000 >= R48 then PC := 298
289 [-]: JMP       298          ; PC := 298
290 [-]: GETGLOBAL R49 K40      ; R49 := 0xba7dfcd2
291 [-]: SELF      R49 R49 K70  ; R50 := R49; R49 := R49[0xd8da7235]
292 [-]: MOVE      R51 R19      ; R51 := R19
293 [-]: MOVE      R52 R40      ; R52 := R40
294 [-]: MOVE      R53 R48      ; R53 := R48
295 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
296 [-]: LOADKB    R20 1 0      ; R20 := true
297 [-]: JMP       300          ; PC := 300
298 [-]: TFORLOOP  R43 2        ; R46,R47 :=  R43(R44,R45); if R46 ~= nil then begin PC = 283; R45 := R46 end
299 [-]: JMP       283          ; PC := 283
300 [-]: TEST      R20 0        ; if not R20 then PC := 304
301 [-]: JMP       304          ; PC := 304
302 [-]: SELF      R49 R3 K62   ; R50 := R3; R49 := R3[0xd723c617]
303 [-]: CALL      R49 2 1      ; R49(R50)
304 [-]: GETGLOBAL R49 K71      ; R49 := _T
305 [-]: GETTABLE  R49 R49 K72  ; R49 := R49["CachedConstructionProjects"]
306 [-]: TEST      R49 1        ; if R49 then PC := 313
307 [-]: JMP       313          ; PC := 313
308 [-]: GETGLOBAL R49 K71      ; R49 := _T
309 [-]: GETUPVAL  R50 U3       ; R50 := U3
310 [-]: GETTABLE  R50 R50 K73  ; R50 := R50[0xe8ee3de5]
311 [-]: CALL      R50 1 2      ; R50 := R50()
312 [-]: SETTABLE  R49 K72 R50  ; R49["CachedConstructionProjects"] := R50
313 [-]: GETGLOBAL R49 K71      ; R49 := _T
314 [-]: GETTABLE  R49 R49 K72  ; R49 := R49["CachedConstructionProjects"]
315 [-]: CONST     R50 1        ; R50 := 1.000000
316 [-]: LEN       R51 R49      ; R51 := # R49
317 [-]: CONST     R52 1        ; R52 := 1.000000
318 [-]: FORPREP   R50 374      ; R50 -= R52; PC := 374
319 [-]: GETTABLE  R54 R49 R53  ; R54 := R49[R53]
320 [-]: GETTABLE  R55 R54 K74  ; R55 := R54["goalId"]
321 [-]: GETTABLE  R56 R54 K75  ; R56 := R54["progress"]
322 [-]: EQ        0 R56 K69    ; if R56 ~= 0.000000 then PC := 374
323 [-]: JMP       374          ; PC := 374
324 [-]: GETTABLE  R56 R54 K76  ; R56 := R54["info"]
325 [-]: GETTABLE  R57 R56 K77  ; R57 := R56["mTasks"]
326 [-]: LOADKB    R58 1 0      ; R58 := true
327 [-]: GETGLOBAL R59 K38      ; R59 := 0xcfc01047
328 [-]: MOVE      R60 R57      ; R60 := R57
329 [-]: CALL      R59 2 4      ; R59,R60,R61 := R59(R60)
330 [-]: JMP       365          ; PC := 365
331 [-]: GETGLOBAL R64 K2       ; R64 := 0x7b998233
332 [-]: MOVE      R65 R63      ; R65 := R63
333 [-]: CALL      R64 2 2      ; R64 := R64(R65)
334 [-]: TEST      R64 1        ; if R64 then PC := 365
335 [-]: JMP       365          ; PC := 365
336 [-]: GETGLOBAL R64 K40      ; R64 := 0xba7dfcd2
337 [-]: SELF      R64 R64 K41  ; R65 := R64; R64 := R64[0xd87c0114]
338 [-]: SELF      R66 R63 K42  ; R67 := R63; R66 := R63[0xe223e2b1]
339 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
340 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
341 [-]: GETGLOBAL R65 K26      ; R65 := 0xb009bbc6
342 [-]: MOVE      R66 R63      ; R66 := R63
343 [-]: CALL      R65 2 2      ; R65 := R65(R66)
344 [-]: SELF      R66 R65 K43  ; R67 := R65; R66 := R65[0x2f5d21d2]
345 [-]: CALL      R66 2 2      ; R66 := R66(R67)
346 [-]: LT        0 R64 R66    ; if R64 >= R66 then PC := 365
347 [-]: JMP       365          ; PC := 365
348 [-]: GETGLOBAL R67 K15      ; R67 := 0x89326c93
349 [-]: SELF      R67 R67 K46  ; R68 := R67; R67 := R67[0x765dad71]
350 [-]: GETGLOBAL R69 K47      ; R69 := 0x88efc25e
351 [-]: MOVE      R70 R63      ; R70 := R63
352 [-]: CALL      R69 2 0      ; R69,... := R69(R70)
353 [-]: CALL      R67 0 2      ; R67 := R67(R68,...)
354 [-]: GETGLOBAL R68 K40      ; R68 := 0xba7dfcd2
355 [-]: SELF      R68 R68 K45  ; R69 := R68; R68 := R68[0x9252175f]
356 [-]: MOVE      R70 R67      ; R70 := R67
357 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
358 [-]: TEST      R68 1        ; if R68 then PC := 364
359 [-]: JMP       364          ; PC := 364
360 [-]: GETGLOBAL R68 K15      ; R68 := 0x89326c93
361 [-]: SELF      R68 R68 K78  ; R69 := R68; R68 := R68[0x59c96e77]
362 [-]: MOVE      R70 R67      ; R70 := R67
363 [-]: CALL      R68 3 1      ; R68(R69,R70)
364 [-]: LOADKB    R58 0 0      ; R58 := false
365 [-]: TFORLOOP  R59 2        ; R62,R63 :=  R59(R60,R61); if R62 ~= nil then begin PC = 331; R61 := R62 end
366 [-]: JMP       331          ; PC := 331
367 [-]: TEST      R58 0        ; if not R58 then PC := 374
368 [-]: JMP       374          ; PC := 374
369 [-]: SETUPVAL  R54 U4       ; U82 := R4
370 [-]: SELF      R68 R3 K79   ; R69 := R3; R68 := R3[0x39ff07d9]
371 [-]: MOVE      R70 R55      ; R70 := R55
372 [-]: LOADK     R71 K80      ; R71 := "OnClaimRelayTasksComplete"
373 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
374 [-]: FORLOOP   R50 319      ; R50 += R52; if R50 <= R51 then begin PC := 319; R53 := R50 end
375 [-]: RETURN    R0 1         ; return 


; Function #224:
;
; Name:            
; Defined at line: 7339
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #225:
;
; Name:            
; Defined at line: 7343
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x09de914d
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x1fd6abd0]
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x09de914d
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: SETGLOBAL R0 K2        ; mPurchasePopupMovie := R0
 11 [-]: RETURN    R0 1         ; return 


; Function #226:
;
; Name:            
; Defined at line: 7349
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe61f87f7]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


; Function #227:
;
; Name:            
; Defined at line: 7353
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #228:
;
; Name:            
; Defined at line: 7356
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #229:
;
; Name:            
; Defined at line: 7359
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["KEY_TAG"]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0xb009bbc6
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K2        ; R5 := ""
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[0x5e35d4d6]
  9 [-]: CALL      R6 1 2       ; R6 := R6()
 10 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 11 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x04981ab3]
 12 [-]: MOVE      R8 R0        ; R8 := R0
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: EQ        1 R7 K6      ; if R7 == "dojo" then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 17 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x04981ab3]
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: EQ        0 R7 K7      ; if R7 ~= "drydock" then PC := 39
 21 [-]: JMP       39           ; PC := 39
 22 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 23 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x04981ab3]
 24 [-]: MOVE      R8 R0        ; R8 := R0
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: EQ        0 R7 K7      ; if R7 ~= "drydock" then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETGLOBAL R7 K8        ; R7 := 0x0032441c
 29 [-]: SETTABLE  R7 K9 K10    ; R7["ForceTeleportToDrydock"] := true
 30 [-]: GETGLOBAL R7 K11       ; R7 := _T
 31 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
 32 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
 33 [-]: LOADK     R9 K14       ; R9 := "InitiateDojoVisit"
 34 [-]: LOADK     R10 K2       ; R10 := ""
 35 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 36 [-]: LOADKB    R7 1 0       ; R7 := true
 37 [-]: RETURN    R7 2         ; return R7
 38 [-]: JMP       62           ; PC := 62
 39 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 40 [-]: MOVE      R8 R4        ; R8 := R4
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 54
 43 [-]: JMP       54           ; PC := 54
 44 [-]: SELF      R7 R4 K16    ; R8 := R4; R7 := R4[0xf2deaf69]
 45 [-]: GETGLOBAL R9 K17       ; R9 := gKeyItemType
 46 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 47 [-]: TEST      R7 0         ; if not R7 then PC := 54
 48 [-]: JMP       54           ; PC := 54
 49 [-]: SELF      R7 R4 K18    ; R8 := R4; R7 := R4[0xef893aec]
 50 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 51 [-]: MOVE      R2 R7        ; R2 := R7
 52 [-]: MOVE      R5 R0        ; R5 := R0
 53 [-]: JMP       62           ; PC := 62
 54 [-]: SELF      R7 R6 K19    ; R8 := R6; R7 := R6[0x3ad9ed31]
 55 [-]: GETGLOBAL R9 K20       ; R9 := 0x0469f296
 56 [-]: MOVE      R10 R0       ; R10 := R0
 57 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 58 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 59 [-]: GETTABLE  R2 R7 K21    ; R2 := R7["mission"]
 60 [-]: LOADK     R3 K2        ; R3 := ""
 61 [-]: LOADNIL   R5 R5        ; R5 := nil
 62 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 63 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["levelOverride"]
 64 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 65 [-]: TEST      R7 0         ; if not R7 then PC := 84
 66 [-]: JMP       84           ; PC := 84
 67 [-]: TEST      R0 0         ; if not R0 then PC := 84
 68 [-]: JMP       84           ; PC := 84
 69 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 70 [-]: GETTABLE  R7 R7 K23    ; R7 := R7[0xa5c556b9]
 71 [-]: MOVE      R8 R0        ; R8 := R0
 72 [-]: LOADK     R9 K24       ; R9 := ".level"
 73 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 74 [-]: TEST      R7 0         ; if not R7 then PC := 84
 75 [-]: JMP       84           ; PC := 84
 76 [-]: GETGLOBAL R7 K25       ; R7 := 0x6c97a788
 77 [-]: GETTABLE  R7 R7 K26    ; R7 := R7[0x6e0e9f85]
 78 [-]: CALL      R7 1 2       ; R7 := R7()
 79 [-]: MOVE      R2 R7        ; R2 := R7
 80 [-]: GETGLOBAL R7 K27       ; R7 := 0x7ed0a956
 81 [-]: MOVE      R8 R0        ; R8 := R0
 82 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 83 [-]: SETTABLE  R2 K22 R7    ; R2["levelOverride"] := R7
 84 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 85 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["levelOverride"]
 86 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 87 [-]: TEST      R7 1         ; if R7 then PC := 225
 88 [-]: JMP       225          ; PC := 225
 89 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 90 [-]: MOVE      R8 R1        ; R8 := R1
 91 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 92 [-]: TEST      R7 1         ; if R7 then PC := 98
 93 [-]: JMP       98           ; PC := 98
 94 [-]: GETGLOBAL R7 K27       ; R7 := 0x7ed0a956
 95 [-]: MOVE      R8 R1        ; R8 := R1
 96 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 97 [-]: SETTABLE  R2 K28 R7    ; R2["keyChainName"] := R7
 98 [-]: EQ        0 R5 K29     ; if R5 ~= nil then PC := 116
 99 [-]: JMP       116          ; PC := 116
100 [-]: GETTABLE  R7 R2 K30    ; R7 := R2["missionType"]
101 [-]: EQ        0 R7 K31     ; if R7 ~= 31.000000 then PC := 116
102 [-]: JMP       116          ; PC := 116
103 [-]: GETGLOBAL R7 K11       ; R7 := _T
104 [-]: NEWTABLE  R8 0 2       ; R8 := {}
105 [-]: SETTABLE  R8 K33 K10   ; R8["teleportNeeded"] := true
106 [-]: SETTABLE  R8 K34 R0    ; R8["name"] := R0
107 [-]: SETTABLE  R7 K32 R8    ; R7["RailjackAutoLaunchPending"] := R8
108 [-]: GETGLOBAL R7 K11       ; R7 := _T
109 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
110 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
111 [-]: LOADK     R9 K35       ; R9 := "AutoLaunchRailjackMission"
112 [-]: LOADK     R10 K2       ; R10 := ""
113 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
114 [-]: LOADKB    R7 1 0       ; R7 := true
115 [-]: RETURN    R7 2         ; return R7
116 [-]: GETTABLE  R7 R2 K36    ; R7 := R2["soloMode"]
117 [-]: TEST      R7 1         ; if R7 then PC := 158
118 [-]: JMP       158          ; PC := 158
119 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
120 [-]: GETGLOBAL R8 K37       ; R8 := 0xe7f2b02f
121 [-]: SELF      R8 R8 K38    ; R9 := R8; R8 := R8[0x565be9ee]
122 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
123 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
124 [-]: TEST      R7 0         ; if not R7 then PC := 158
125 [-]: JMP       158          ; PC := 158
126 [-]: GETGLOBAL R7 K11       ; R7 := _T
127 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
128 [-]: TEST      R7 0         ; if not R7 then PC := 158
129 [-]: JMP       158          ; PC := 158
130 [-]: GETGLOBAL R7 K11       ; R7 := _T
131 [-]: GETTABLE  R7 R7 K39    ; R7 := R7["gActiveMatchMakingMode"]
132 [-]: GETGLOBAL R8 K11       ; R8 := _T
133 [-]: GETTABLE  R8 R8 K40    ; R8 := R8["MATCHMAKING_OFFLINE_GAMEMODE"]
134 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 158
135 [-]: JMP       158          ; PC := 158
136 [-]: GETGLOBAL R7 K41       ; R7 := 0x76ea806b
137 [-]: SELF      R7 R7 K42    ; R8 := R7; R7 := R7[0x8792aaab]
138 [-]: CALL      R7 2 2       ; R7 := R7(R8)
139 [-]: TEST      R7 0         ; if not R7 then PC := 158
140 [-]: JMP       158          ; PC := 158
141 [-]: GETGLOBAL R7 K11       ; R7 := _T
142 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
143 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
144 [-]: LOADK     R9 K43       ; R9 := "HostLobby"
145 [-]: LOADK     R10 K2       ; R10 := ""
146 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
147 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
148 [-]: GETGLOBAL R8 K37       ; R8 := 0xe7f2b02f
149 [-]: SELF      R8 R8 K38    ; R9 := R8; R8 := R8[0x565be9ee]
150 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
151 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
152 [-]: TEST      R7 0         ; if not R7 then PC := 158
153 [-]: JMP       158          ; PC := 158
154 [-]: GETGLOBAL R7 K44       ; R7 := 0xcbd666e1
155 [-]: CONST     R8 0         ; R8 := 0.000000
156 [-]: CALL      R7 2 1       ; R7(R8)
157 [-]: JMP       147          ; PC := 147
158 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
159 [-]: GETTABLE  R7 R7 K23    ; R7 := R7[0xa5c556b9]
160 [-]: MOVE      R8 R0        ; R8 := R0
161 [-]: LOADK     R9 K45       ; R9 := "Wareframe"
162 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
163 [-]: TEST      R7 0         ; if not R7 then PC := 180
164 [-]: JMP       180          ; PC := 180
165 [-]: GETGLOBAL R7 K11       ; R7 := _T
166 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
167 [-]: TEST      R7 0         ; if not R7 then PC := 180
168 [-]: JMP       180          ; PC := 180
169 [-]: GETGLOBAL R7 K11       ; R7 := _T
170 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
171 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
172 [-]: LOADK     R9 K46       ; R9 := "LoadAutonomousMultiplayerMission"
173 [-]: MOVE      R10 R0       ; R10 := R0
174 [-]: MOVE      R11 R3       ; R11 := R3
175 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
176 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
177 [-]: LOADKB    R7 1 0       ; R7 := true
178 [-]: RETURN    R7 2         ; return R7
179 [-]: JMP       225          ; PC := 225
180 [-]: GETUPVAL  R7 U1        ; R7 := U1
181 [-]: GETTABLE  R7 R7 K47    ; R7 := R7[0x05b69533]
182 [-]: GETGLOBAL R8 K20       ; R8 := 0x0469f296
183 [-]: MOVE      R9 R0        ; R9 := R0
184 [-]: MOVE      R10 R3       ; R10 := R3
185 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
186 [-]: CALL      R8 2 2       ; R8 := R8(R9)
187 [-]: MOVE      R9 R2        ; R9 := R2
188 [-]: GETGLOBAL R10 K27      ; R10 := 0x7ed0a956
189 [-]: MOVE      R11 R5       ; R11 := R5
190 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
191 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
192 [-]: TEST      R7 0         ; if not R7 then PC := 225
193 [-]: JMP       225          ; PC := 225
194 [-]: GETGLOBAL R8 K15       ; R8 := 0x7b998233
195 [-]: GETGLOBAL R9 K37       ; R9 := 0xe7f2b02f
196 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9[0x565be9ee]
197 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
198 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
199 [-]: TEST      R8 1         ; if R8 then PC := 219
200 [-]: JMP       219          ; PC := 219
201 [-]: GETUPVAL  R8 U0        ; R8 := U0
202 [-]: GETTABLE  R8 R8 K48    ; R8 := R8[0x7155f039]
203 [-]: MOVE      R9 R0        ; R9 := R0
204 [-]: MOVE      R10 R3       ; R10 := R3
205 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
206 [-]: MOVE      R10 R6       ; R10 := R6
207 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
208 [-]: GETGLOBAL R9 K37       ; R9 := 0xe7f2b02f
209 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9[0x565be9ee]
210 [-]: CALL      R9 2 2       ; R9 := R9(R10)
211 [-]: SELF      R9 R9 K49    ; R10 := R9; R9 := R9[0xfdd3576f]
212 [-]: CALL      R9 2 2       ; R9 := R9(R10)
213 [-]: SETTABLE  R9 K50 R8    ; R9["gameModeId"] := R8
214 [-]: GETGLOBAL R10 K37      ; R10 := 0xe7f2b02f
215 [-]: SELF      R10 R10 K51  ; R11 := R10; R10 := R10[0xee2f24fc]
216 [-]: MOVE      R12 R9       ; R12 := R9
217 [-]: LOADK     R13 K52      ; R13 := "OnUpdateSessionSettings"
218 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
219 [-]: GETGLOBAL R10 K53      ; R10 := 0x34291f5c
220 [-]: GETTABLE  R10 R10 K54  ; R10 := R10[0x4e0a1dfc]
221 [-]: MOVE      R11 R7       ; R11 := R7
222 [-]: CALL      R10 2 1      ; R10(R11)
223 [-]: LOADKB    R10 1 0      ; R10 := true
224 [-]: RETURN    R10 2        ; return R10
225 [-]: LOADKB    R10 0 0      ; R10 := false
226 [-]: RETURN    R10 2        ; return R10
227 [-]: RETURN    R0 1         ; return 


; Function #230:
;
; Name:            
; Defined at line: 7427
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #231:
;
; Name:            
; Defined at line: 7431
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K3        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x297e93ca]
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #232:
;
; Name:            
; Defined at line: 7437
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TEST      R0 0         ; if not R0 then PC := 12
  2 [-]: JMP       12           ; PC := 12
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x25d99d89
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xefee6c91]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0x0c9eedd2]
  8 [-]: ADD       R4 R2 K3     ; R4 := R2 + 1.000000
  9 [-]: LOADKB    R5 0 0       ; R5 := false
 10 [-]: CALL      R3 3 1       ; R3(R4,R5)
 11 [-]: JMP       73           ; PC := 73
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x7f5022cf
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3[0xa5c556b9]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: LOADK     R5 K6        ; R5 := "No daily retries remaining"
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 44
 18 [-]: JMP       44           ; PC := 44
 19 [-]: GETGLOBAL R3 K0        ; R3 := 0x25d99d89
 20 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xde2d1b82]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4[0x817b1503]
 24 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 25 [-]: MOVE      R6 R3        ; R6 := R3
 26 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 27 [-]: GETGLOBAL R5 K10       ; R5 := 0x603636ad
 28 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
 29 [-]: LOADKB    R7 0 0       ; R7 := false
 30 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 31 [-]: GETGLOBAL R6 K4        ; R6 := 0x7f5022cf
 32 [-]: GETTABLE  R6 R6 K12    ; R6 := R6[0xe8072ded]
 33 [-]: MOVE      R7 R5        ; R7 := R5
 34 [-]: MOVE      R8 R4        ; R8 := R4
 35 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 36 [-]: GETUPVAL  R7 U1        ; R7 := U1
 37 [-]: CONST     R8 0         ; R8 := 0.000000
 38 [-]: CALL      R7 2 1       ; R7(R8)
 39 [-]: GETUPVAL  R7 U2        ; R7 := U2
 40 [-]: GETTABLE  R7 R7 K13    ; R7 := R7[0xe0cba3ca]
 41 [-]: MOVE      R8 R6        ; R8 := R6
 42 [-]: CALL      R7 2 1       ; R7(R8)
 43 [-]: JMP       73           ; PC := 73
 44 [-]: EQ        0 R1 K14     ; if R1 ~= "1" then PC := 58
 45 [-]: JMP       58           ; PC := 58
 46 [-]: GETUPVAL  R7 U1        ; R7 := U1
 47 [-]: CONST     R8 0         ; R8 := 0.000000
 48 [-]: CALL      R7 2 1       ; R7(R8)
 49 [-]: GETUPVAL  R7 U3        ; R7 := U3
 50 [-]: LOADK     R8 K15       ; R8 := "Platinum"
 51 [-]: LOADK     R9 K16       ; R9 := "0"
 52 [-]: GETGLOBAL R10 K10      ; R10 := 0x603636ad
 53 [-]: LOADK     R11 K17      ; R11 := "/Lotus/Language/Menu/RankupRetry"
 54 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 55 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 56 [-]: CALL      R7 0 1       ; R7(R8,...)
 57 [-]: JMP       73           ; PC := 73
 58 [-]: GETUPVAL  R7 U4        ; R7 := U4
 59 [-]: LT        0 R7 K18     ; if R7 >= 2.000000 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: LOADKB    R7 1 0       ; R7 := true
 62 [-]: SETUPVAL  R7 U5        ; U82 := R5
 63 [-]: GETUPVAL  R7 U4        ; R7 := U4
 64 [-]: ADD       R7 R7 K3     ; R7 := R7 + 1.000000
 65 [-]: SETUPVAL  R7 U4        ; U82 := R4
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETGLOBAL R7 K19       ; R7 := 0x3d106989
 68 [-]: LOADK     R8 K20       ; R8 := "Failed to submit training result too many times. Aborting."
 69 [-]: CALL      R7 2 1       ; R7(R8)
 70 [-]: GETUPVAL  R7 U1        ; R7 := U1
 71 [-]: CONST     R8 0         ; R8 := 0.000000
 72 [-]: CALL      R7 2 1       ; R7(R8)
 73 [-]: RETURN    R0 1         ; return 


; Function #233:
;
; Name:            
; Defined at line: 7467
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x25a6e75e]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mPremiumCredits"]
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0x7773bdcf]
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: LT        0 R0 R1      ; if R0 >= R1 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: LOADK     R1 K4        ; R1 := "Platinum"
 12 [-]: LOADK     R2 K5        ; R2 := "0"
 13 [-]: GETGLOBAL R3 K6        ; R3 := 0x603636ad
 14 [-]: LOADK     R4 K7        ; R4 := "/Lotus/Language/Menu/RankupRetry"
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 17 [-]: CALL      R0 0 1       ; R0(R1,...)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: CONST     R1 1         ; R1 := 1.000000
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: LOADKB    R0 1 0       ; R0 := true
 23 [-]: SETUPVAL  R0 U3        ; U82 := R3
 24 [-]: CONST     R0 0         ; R0 := 0.000000
 25 [-]: SETUPVAL  R0 U4        ; U82 := R4
 26 [-]: RETURN    R0 1         ; return 


; Function #234:
;
; Name:            
; Defined at line: 7479
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #235:
;
; Name:            
; Defined at line: 7483
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #236:
;
; Name:            
; Defined at line: 7489
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x8c8051c7]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  4 [-]: LOADKB    R2 0 0       ; R2 := false
  5 [-]: CALL      R0 3 4       ; R0,R1,R2 := R0(R1,R2)
  6 [-]: TEST      R0 1         ; if R0 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: TEST      R2 0         ; if not R2 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0xf616a184]
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: LOADK     R5 K3        ; R5 := "LevelUpRetryConfirm"
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0xe0cba3ca]
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: CALL      R3 2 1       ; R3(R4)
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
 22 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x652b21b9]
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 0         ; if not R3 then PC := 36
 25 [-]: JMP       36           ; PC := 36
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0xf616a184]
 28 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 29 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x42b04007]
 30 [-]: LOADK     R6 K8        ; R6 := "/Lotus/Language/Menu/RetrieveLockedWeapons"
 31 [-]: LOADKB    R7 0 0       ; R7 := false
 32 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 33 [-]: LOADK     R5 K9        ; R5 := "ConfirmWeaponRetrieve"
 34 [-]: CALL      R3 3 1       ; R3(R4,R5)
 35 [-]: RETURN    R0 1         ; return 
 36 [-]: GETUPVAL  R3 U2        ; R3 := U2
 37 [-]: CONST     R4 1         ; R4 := 1.000000
 38 [-]: CALL      R3 2 1       ; R3(R4)
 39 [-]: LOADKB    R3 1 0       ; R3 := true
 40 [-]: SETUPVAL  R3 U3        ; U82 := R3
 41 [-]: CONST     R3 0         ; R3 := 0.000000
 42 [-]: SETUPVAL  R3 U4        ; U82 := R4
 43 [-]: RETURN    R0 1         ; return 


; Function #237:
;
; Name:            
; Defined at line: 7511
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["gQueueMailbox"] := true
  3 [-]: RETURN    R0 1         ; return 


; Function #238:
;
; Name:            
; Defined at line: 7515
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #239:
;
; Name:            
; Defined at line: 7519
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ShowingQuitGameDialog"] := nil
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x03f57322
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: EQ        0 R1 K5      ; if R1 ~= 4.000000 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETGLOBAL R1 K6        ; R1 := 0x9ba7909f
  9 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xf37bdbf9]
 10 [-]: GETGLOBAL R3 K8        ; R3 := 0x9e5e1b85
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #240:
;
; Name:            
; Defined at line: 7526
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x0dbe8d3a
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xc0300d9d]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: MOVE      R0 R1        ; R0 := R1
 15 [-]: LEN       R1 R0        ; R1 := # R0
 16 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 18
 17 [-]: JMP       18           ; PC := 18
 18 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 19 [-]: GETGLOBAL R2 K2        ; R2 := 0x0dbe8d3a
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 34
 22 [-]: JMP       34           ; PC := 34
 23 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xbcfb64ab]
 25 [-]: GETGLOBAL R3 K2        ; R3 := 0x0dbe8d3a
 26 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 30 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xf37bdbf9]
 31 [-]: GETGLOBAL R3 K8        ; R3 := 0x9e5e1b85
 32 [-]: CALL      R1 3 1       ; R1(R2,R3)
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: GETGLOBAL R1 K9        ; R1 := _T
 35 [-]: SETTABLE  R1 K10 K11   ; R1["ShowingQuitGameDialog"] := true
 36 [-]: GETGLOBAL R1 K12       ; R1 := mCurrentMode
 37 [-]: GETUPVAL  R2 U0        ; R2 := U0
 38 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 39 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 61
 40 [-]: JMP       61           ; PC := 61
 41 [-]: LEN       R1 R0        ; R1 := # R0
 42 [-]: LT        0 K4 R1      ; if 0.000000 >= R1 then PC := 54
 43 [-]: JMP       54           ; PC := 54
 44 [-]: GETTABLE  R1 R0 K14    ; R1 := R0[1.000000]
 45 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["mSurveyLocation"]
 46 [-]: EQ        0 R1 K16     ; if R1 ~= "EXIT" then PC := 54
 47 [-]: JMP       54           ; PC := 54
 48 [-]: GETGLOBAL R1 K18       ; R1 := 0xae91e43b
 49 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1[0x1fd6abd0]
 50 [-]: GETGLOBAL R3 K2        ; R3 := 0x0dbe8d3a
 51 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 52 [-]: SETGLOBAL R1 K17       ; mChildMovie := R1
 53 [-]: JMP       90           ; PC := 90
 54 [-]: GETUPVAL  R1 U1        ; R1 := U1
 55 [-]: GETTABLE  R1 R1 K20    ; R1 := R1[0xdedfded7]
 56 [-]: LOADK     R2 K21       ; R2 := "/Lotus/Language/Menu/QuitGameConfirm"
 57 [-]: LOADK     R3 K22       ; R3 := "QuitGameConfirm"
 58 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 59 [-]: SETGLOBAL R1 K17       ; mChildMovie := R1
 60 [-]: JMP       90           ; PC := 90
 61 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 62 [-]: GETGLOBAL R2 K23       ; R2 := 0xbe190284
 63 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 64 [-]: TEST      R1 1         ; if R1 then PC := 84
 65 [-]: JMP       84           ; PC := 84
 66 [-]: GETGLOBAL R1 K23       ; R1 := 0xbe190284
 67 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0xf2deaf69]
 68 [-]: GETGLOBAL R3 K25       ; R3 := gLotusGameRulesType
 69 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 70 [-]: TEST      R1 0         ; if not R1 then PC := 84
 71 [-]: JMP       84           ; PC := 84
 72 [-]: GETGLOBAL R1 K23       ; R1 := 0xbe190284
 73 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0xb744c15d]
 74 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 75 [-]: TEST      R1 0         ; if not R1 then PC := 84
 76 [-]: JMP       84           ; PC := 84
 77 [-]: GETUPVAL  R1 U1        ; R1 := U1
 78 [-]: GETTABLE  R1 R1 K20    ; R1 := R1[0xdedfded7]
 79 [-]: LOADK     R2 K27       ; R2 := "/Lotus/Language/Menu/QuitGameConfirmMissionKey"
 80 [-]: LOADK     R3 K22       ; R3 := "QuitGameConfirm"
 81 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 82 [-]: SETGLOBAL R1 K17       ; mChildMovie := R1
 83 [-]: JMP       90           ; PC := 90
 84 [-]: GETUPVAL  R1 U1        ; R1 := U1
 85 [-]: GETTABLE  R1 R1 K20    ; R1 := R1[0xdedfded7]
 86 [-]: LOADK     R2 K28       ; R2 := "/Lotus/Language/Menu/QuitGameConfirmMission"
 87 [-]: LOADK     R3 K22       ; R3 := "QuitGameConfirm"
 88 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 89 [-]: SETGLOBAL R1 K17       ; mChildMovie := R1
 90 [-]: LOADKB    R1 1 0       ; R1 := true
 91 [-]: RETURN    R1 2         ; return R1
 92 [-]: RETURN    R0 1         ; return 


; Function #241:
;
; Name:            
; Defined at line: 7554
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x600a0ad6]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0xd8140b94]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0x6a965652]
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 14 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 15 [-]: SETTABLE  R2 K5 R3     ; R2["NemesisTauntCooldowns"] := R3
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["NemesisTauntCooldowns"]
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Created"]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 22 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["NemesisTauntCooldowns"]
 23 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Created"]
 24 [-]: ADD       R2 R2 K7     ; R2 := R2 + 1200.000000
 25 [-]: GETGLOBAL R3 K8        ; R3 := 0xbe190284
 26 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x715c5d7f]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 45
 29 [-]: JMP       45           ; PC := 45
 30 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 31 [-]: GETGLOBAL R3 K11       ; R3 := 0x0469f296
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xd89d6ea2]
 34 [-]: MOVE      R6 R0        ; R6 := R0
 35 [-]: MOVE      R7 R1        ; R7 := R1
 36 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 37 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 38 [-]: SETTABLE  R2 K10 R3    ; R2["NemesisTaunt"] := R3
 39 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 40 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["NemesisTauntCooldowns"]
 41 [-]: GETGLOBAL R3 K8        ; R3 := 0xbe190284
 42 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x715c5d7f]
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: SETTABLE  R2 K6 R3     ; R2["Created"] := R3
 45 [-]: GETGLOBAL R2 K13       ; R2 := 0x7b998233
 46 [-]: GETGLOBAL R3 K14       ; R3 := 0xcb79539e
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 65
 49 [-]: JMP       65           ; PC := 65
 50 [-]: GETGLOBAL R2 K14       ; R2 := 0xcb79539e
 51 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x8b8fb8b7]
 52 [-]: GETGLOBAL R4 K16       ; R4 := 0x6c97a788
 53 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["NEMESIS_CREATED"]
 54 [-]: GETTABLE  R5 R1 K18    ; R5 := R1["mAgent"]
 55 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5[0xed4e0128]
 56 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 57 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["mKillingSuit"]
 58 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0xed4e0128]
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: CONST     R7 1         ; R7 := 1.000000
 61 [-]: GETGLOBAL R8 K21       ; R8 := 0xa421af95
 62 [-]: CALL      R8 1 2       ; R8 := R8()
 63 [-]: GETTABLE  R9 R1 K22    ; R9 := R1["mName"]
 64 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 65 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 66 [-]: NEWTABLE  R3 0 6       ; R3 := {}
 67 [-]: SETTABLE  R3 K24 K25   ; R3["IsCreationPopup"] := true
 68 [-]: SETTABLE  R3 K26 K25   ; R3["OpenScreen"] := true
 69 [-]: SETTABLE  R3 K27 K28   ; R3["Header"] := "/Lotus/Language/Kingpins/NemesisPopupHeader"
 70 [-]: GETTABLE  R4 R1 K22    ; R4 := R1["mName"]
 71 [-]: SETTABLE  R3 K29 R4    ; R3["Name"] := R4
 72 [-]: GETTABLE  R4 R1 K31    ; R4 := R1["mFaction"]
 73 [-]: SETTABLE  R3 K30 R4    ; R3["FactionId"] := R4
 74 [-]: SETTABLE  R3 K32 K33   ; R3["Description"] := "/Lotus/Language/Kingpins/NemesisPopupBirthLabel"
 75 [-]: SETTABLE  R2 K23 R3    ; R2["NemesisPopup_Info"] := R3
 76 [-]: RETURN    R0 1         ; return 


; Function #242:
;
; Name:            
; Defined at line: 7584
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mFoundryNotification
  2 [-]: SETTABLE  R0 K1 K2     ; R0["Refresh"] := true
  3 [-]: RETURN    R0 1         ; return 


