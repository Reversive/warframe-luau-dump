; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  189

  1 [-]: NEWTABLE  R0 0 5       ; R0 := {}
  2 [-]: SETTABLE  R0 K0 K1     ; R0["INVALID32"] := 4294967296.000000
  3 [-]: SETTABLE  R0 K2 K3     ; R0["PVP_XP_PER_LEVEL"] := 150.000000
  4 [-]: SETTABLE  R0 K4 K5     ; R0["MAX_LOG_FADE_TIME"] := 0.350000
  5 [-]: SETTABLE  R0 K6 K7     ; R0["LEVEL_ABBREV"] := ""
  6 [-]: SETTABLE  R0 K8 K9     ; R0["HUD_BUFF_ICON_SIZE"] := 35.000000
  7 [-]: NEWTABLE  R1 0 4       ; R1 := {}
  8 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  9 [-]: SETTABLE  R2 K11 K12   ; R2["X"] := -75.000000
 10 [-]: SETTABLE  R2 K13 K14   ; R2["Y"] := 13.000000
 11 [-]: SETTABLE  R1 K10 R2    ; R1["A"] := R2
 12 [-]: NEWTABLE  R2 0 2       ; R2 := {}
 13 [-]: SETTABLE  R2 K11 K15   ; R2["X"] := -126.000000
 14 [-]: SETTABLE  R2 K13 K16   ; R2["Y"] := -37.000000
 15 [-]: SETTABLE  R1 K11 R2    ; R1["X"] := R2
 16 [-]: NEWTABLE  R2 0 2       ; R2 := {}
 17 [-]: SETTABLE  R2 K11 K18   ; R2["X"] := -23.000000
 18 [-]: SETTABLE  R2 K13 K16   ; R2["Y"] := -37.000000
 19 [-]: SETTABLE  R1 K17 R2    ; R1["B"] := R2
 20 [-]: NEWTABLE  R2 0 2       ; R2 := {}
 21 [-]: SETTABLE  R2 K11 K12   ; R2["X"] := -75.000000
 22 [-]: SETTABLE  R2 K13 K19   ; R2["Y"] := -91.000000
 23 [-]: SETTABLE  R1 K13 R2    ; R1["Y"] := R2
 24 [-]: NEWTABLE  R2 4 0       ; R2 := {}
 25 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 26 [-]: SETTABLE  R3 K20 K21   ; R3["Ability"] := "ACTIVATE_ABILITY_MENU_0"
 27 [-]: SETTABLE  R3 K11 K22   ; R3["X"] := -131.000000
 28 [-]: SETTABLE  R3 K13 K23   ; R3["Y"] := 18.000000
 29 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 30 [-]: SETTABLE  R4 K20 K24   ; R4["Ability"] := "ACTIVATE_ABILITY_MENU_1"
 31 [-]: SETTABLE  R4 K11 K25   ; R4["X"] := -93.750000
 32 [-]: SETTABLE  R4 K13 K23   ; R4["Y"] := 18.000000
 33 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 34 [-]: SETTABLE  R5 K20 K26   ; R5["Ability"] := "ACTIVATE_ABILITY_MENU_2"
 35 [-]: SETTABLE  R5 K11 K27   ; R5["X"] := -56.000000
 36 [-]: SETTABLE  R5 K13 K23   ; R5["Y"] := 18.000000
 37 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 38 [-]: SETTABLE  R6 K20 K28   ; R6["Ability"] := "ACTIVATE_ABILITY_MENU_3"
 39 [-]: SETTABLE  R6 K11 K29   ; R6["X"] := -19.000000
 40 [-]: SETTABLE  R6 K13 K23   ; R6["Y"] := 18.000000
 41 [-]: SETLIST   R2 4 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
 42 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 43 [-]: NEWTABLE  R4 0 21      ; R4 := {}
 44 [-]: SETTABLE  R4 K30 K31   ; R4["mScreenDuck"] := 0.000000
 45 [-]: SETTABLE  R4 K32 K33   ; R4["mTransOnRightSide"] := false
 46 [-]: SETTABLE  R4 K34 K33   ; R4["mPlayingWithController"] := false
 47 [-]: SETTABLE  R4 K35 K33   ; R4["mDispatchingQueuedFuncs"] := false
 48 [-]: SETTABLE  R4 K36 K33   ; R4["mWasSpectating"] := false
 49 [-]: SETTABLE  R4 K37 K33   ; R4["mSpaceMode"] := false
 50 [-]: SETTABLE  R4 K38 K31   ; R4["mImpactMessageFrame"] := 0.000000
 51 [-]: SETTABLE  R4 K39 K40   ; R4["mImpactMessageScale"] := 100.000000
 52 [-]: SETTABLE  R4 K41 K40   ; R4["mImpactMessageTransitionScale"] := 100.000000
 53 [-]: SETTABLE  R4 K42 K33   ; R4["IsSpectating"] := false
 54 [-]: SETTABLE  R4 K43 K33   ; R4["IsOperator"] := false
 55 [-]: SETTABLE  R4 K44 K33   ; R4["Initialized"] := false
 56 [-]: SETTABLE  R4 K45 K33   ; R4["UIMode"] := false
 57 [-]: SETTABLE  R4 K46 K33   ; R4["IsInConclave"] := false
 58 [-]: SETTABLE  R4 K47 K48   ; R4["mProfileMovie"] := nil
 59 [-]: SETTABLE  R4 K49 K48   ; R4["mHudMarkersMovie"] := nil
 60 [-]: SETTABLE  R4 K50 K51   ; R4["mDistanceFieldMiniMap"] := true
 61 [-]: SETTABLE  R4 K52 K33   ; R4["PlayerListHasChanged"] := false
 62 [-]: SETTABLE  R4 K53 K54   ; R4["MissionType"] := -1.000000
 63 [-]: SETTABLE  R4 K55 K33   ; R4["StalkerMode"] := false
 64 [-]: SETTABLE  R4 K56 K33   ; R4["IsAlternateHud"] := false
 65 [-]: SETTABLE  R4 K57 K51   ; R4["mEnergyVisible"] := true
 66 [-]: SETTABLE  R4 K58 K33   ; R4["mMiniMapHidden"] := false
 67 [-]: SETTABLE  R4 K59 K33   ; R4["mAbilityFxPlayed"] := false
 68 [-]: SETTABLE  R4 K60 K33   ; R4["RootInitialized"] := false
 69 [-]: SETTABLE  R4 K61 K33   ; R4["IsInvulnerableHud"] := false
 70 [-]: GETGLOBAL R5 K62       ; R5 := 0x2d0fad09
 71 [-]: LOADK     R6 K63       ; R6 := "Lotus.Interface.UIUtilities"
 72 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 73 [-]: GETGLOBAL R6 K62       ; R6 := 0x2d0fad09
 74 [-]: LOADK     R7 K64       ; R7 := "Lotus.Interface.CrossPlatformUtilities"
 75 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 76 [-]: GETGLOBAL R7 K62       ; R7 := 0x2d0fad09
 77 [-]: LOADK     R8 K65       ; R8 := "Lotus.Interface.LotusUtilities"
 78 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 79 [-]: GETGLOBAL R8 K62       ; R8 := 0x2d0fad09
 80 [-]: LOADK     R9 K66       ; R9 := "Lotus.Interface.LotusNetworkUtilities"
 81 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 82 [-]: GETGLOBAL R9 K62       ; R9 := 0x2d0fad09
 83 [-]: LOADK     R10 K67      ; R10 := "EE.Interface.Utilities"
 84 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 85 [-]: GETGLOBAL R10 K62      ; R10 := 0x2d0fad09
 86 [-]: LOADK     R11 K68      ; R11 := "Lotus.Interface.UIStyleUtilities"
 87 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 88 [-]: GETGLOBAL R11 K62      ; R11 := 0x2d0fad09
 89 [-]: LOADK     R12 K69      ; R12 := "EE.Interface.AnchorMgr"
 90 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 91 [-]: GETGLOBAL R12 K62      ; R12 := 0x2d0fad09
 92 [-]: LOADK     R13 K70      ; R13 := "Lotus.Scripts.HudTrackers"
 93 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 94 [-]: GETGLOBAL R13 K62      ; R13 := 0x2d0fad09
 95 [-]: LOADK     R14 K71      ; R14 := "Lotus.Interface.CardUtilitiesRedux"
 96 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 97 [-]: GETGLOBAL R14 K62      ; R14 := 0x2d0fad09
 98 [-]: LOADK     R15 K72      ; R15 := "Lotus.Interface.Components.HealthAndShieldDisplay"
 99 [-]: CALL      R14 2 2      ; R14 := R14(R15)
100 [-]: GETGLOBAL R15 K62      ; R15 := 0x2d0fad09
101 [-]: LOADK     R16 K73      ; R16 := "Lotus.Scripts.Libs.LandscapeLib"
102 [-]: CALL      R15 2 2      ; R15 := R15(R16)
103 [-]: LOADNIL   R16 R16      ; R16 := nil
104 [-]: NEWTABLE  R17 0 5      ; R17 := {}
105 [-]: SETTABLE  R17 K74 K48  ; R17["Fade"] := nil
106 [-]: SETTABLE  R17 K75 K51  ; R17["WaitingForProgressMovie"] := true
107 [-]: SETTABLE  R17 K76 K33  ; R17["TopMenuOpen"] := false
108 [-]: SETTABLE  R17 K77 K51  ; R17["mCanControlPlayerPanel"] := true
109 [-]: SETTABLE  R17 K78 K48  ; R17["HidePlayerPanel"] := nil
110 [-]: NEWTABLE  R18 0 1      ; R18 := {}
111 [-]: SETTABLE  R18 K79 K80  ; R18["offsetX"] := 125.000000
112 [-]: LOADNIL   R19 R19      ; R19 := nil
113 [-]: NEWTABLE  R20 0 4      ; R20 := {}
114 [-]: SETTABLE  R20 K81 K48  ; R20["InventoryController"] := nil
115 [-]: SETTABLE  R20 K82 K48  ; R20["DamageController"] := nil
116 [-]: SETTABLE  R20 K83 K48  ; R20["CameraController"] := nil
117 [-]: SETTABLE  R20 K84 K48  ; R20["InputController"] := nil
118 [-]: LOADNIL   R21 R22      ; R21 := R22 := nil
119 [-]: NEWTABLE  R23 0 0      ; R23 := {}
120 [-]: NEWTABLE  R24 0 3      ; R24 := {}
121 [-]: SETTABLE  R24 K85 K33  ; R24["mVisible"] := false
122 [-]: SETTABLE  R24 K86 K31  ; R24["mProgress"] := 0.000000
123 [-]: SETTABLE  R24 K87 K48  ; R24["mList"] := nil
124 [-]: NEWTABLE  R25 0 0      ; R25 := {}
125 [-]: NEWTABLE  R26 0 0      ; R26 := {}
126 [-]: LOADNIL   R27 R29      ; R27 := R28 := R29 := nil
127 [-]: LOADKB    R30 1 0      ; R30 := true
128 [-]: LOADNIL   R31 R36      ; R31 := R32 := R33 := R34 := R35 := R36 := nil
129 [-]: NEWTABLE  R37 0 0      ; R37 := {}
130 [-]: LOADKB    R38 0 0      ; R38 := false
131 [-]: NEWTABLE  R39 0 2      ; R39 := {}
132 [-]: NEWTABLE  R40 2 0      ; R40 := {}
133 [-]: CONST     R41 0        ; R41 := 0.000000
134 [-]: CONST     R42 0        ; R42 := 0.000000
135 [-]: SETLIST   R40 2 1      ; R40[(1-1)*FPF+i] := R(40+i), 1 <= i <= 2
136 [-]: SETTABLE  R39 K88 R40  ; R39["HudScalePadding"] := R40
137 [-]: SETTABLE  R39 K89 K90  ; R39["HudScale"] := 1.000000
138 [-]: NEWTABLE  R40 0 0      ; R40 := {}
139 [-]: NEWTABLE  R41 0 2      ; R41 := {}
140 [-]: SETTABLE  R41 K91 K48  ; R41["Health"] := nil
141 [-]: SETTABLE  R41 K92 K48  ; R41["Shield"] := nil
142 [-]: NEWTABLE  R42 0 2      ; R42 := {}
143 [-]: SETTABLE  R42 K93 K48  ; R42["ptr"] := nil
144 [-]: SETTABLE  R42 K94 K48  ; R42["impactBehavior"] := nil
145 [-]: NEWTABLE  R43 0 6      ; R43 := {}
146 [-]: SETTABLE  R43 K95 K33  ; R43["isEnabled"] := false
147 [-]: SETTABLE  R43 K96 K48  ; R43["timer"] := nil
148 [-]: SETTABLE  R43 K97 K31  ; R43["timerId"] := 0.000000
149 [-]: SETTABLE  R43 K98 K54  ; R43["prevMinute"] := -1.000000
150 [-]: SETTABLE  R43 K99 K31  ; R43["mTotalTime"] := 0.000000
151 [-]: SETTABLE  R43 K100 K7  ; R43["currentText"] := ""
152 [-]: NEWTABLE  R44 0 0      ; R44 := {}
153 [-]: LOADNIL   R45 R46      ; R45 := R46 := nil
154 [-]: NEWTABLE  R47 0 0      ; R47 := {}
155 [-]: NEWTABLE  R48 0 0      ; R48 := {}
156 [-]: LOADNIL   R49 R49      ; R49 := nil
157 [-]: NEWTABLE  R50 0 3      ; R50 := {}
158 [-]: SETTABLE  R50 K101 K33 ; R50["hasCheckedForStatusEffects"] := false
159 [-]: SETTABLE  R50 K102 K103; R50["effectCheckRetry"] := 5.000000
160 [-]: SETTABLE  R50 K104 K48 ; R50["effectOverride"] := nil
161 [-]: NEWTABLE  R51 0 0      ; R51 := {}
162 [-]: LOADNIL   R52 R52      ; R52 := nil
163 [-]: NEWTABLE  R53 0 0      ; R53 := {}
164 [-]: LOADNIL   R54 R55      ; R54 := R55 := nil
165 [-]: NEWTABLE  R56 0 2      ; R56 := {}
166 [-]: NEWTABLE  R57 0 0      ; R57 := {}
167 [-]: SETTABLE  R56 K105 R57 ; R56["Buffs"] := R57
168 [-]: SETTABLE  R56 K106 K33 ; R56["Cached"] := false
169 [-]: NEWTABLE  R57 0 0      ; R57 := {}
170 [-]: LOADNIL   R58 R59      ; R58 := R59 := nil
171 [-]: NEWTABLE  R60 0 0      ; R60 := {}
172 [-]: NEWTABLE  R61 0 0      ; R61 := {}
173 [-]: LOADNIL   R62 R62      ; R62 := nil
174 [-]: CONST     R63 0        ; R63 := 0.000000
175 [-]: NEWTABLE  R64 13 0     ; R64 := {}
176 [-]: LOADK     R65 K107     ; R65 := "DT_IMPACT"
177 [-]: LOADK     R66 K108     ; R66 := "DT_PUNCTURE"
178 [-]: LOADK     R67 K109     ; R67 := "DT_SLASH"
179 [-]: LOADK     R68 K110     ; R68 := "DT_FIRE"
180 [-]: LOADK     R69 K111     ; R69 := "DT_FREEZE"
181 [-]: LOADK     R70 K112     ; R70 := "DT_ELECTRICITY"
182 [-]: LOADK     R71 K113     ; R71 := "DT_POISON"
183 [-]: LOADK     R72 K114     ; R72 := "DT_EXPLOSION"
184 [-]: LOADK     R73 K115     ; R73 := "DT_RADIATION"
185 [-]: LOADK     R74 K116     ; R74 := "DT_GAS"
186 [-]: LOADK     R75 K117     ; R75 := "DT_MAGNETIC"
187 [-]: LOADK     R76 K118     ; R76 := "DT_VIRAL"
188 [-]: LOADK     R77 K119     ; R77 := "DT_CORROSIVE"
189 [-]: SETLIST   R64 13 1     ; R64[(1-1)*FPF+i] := R(64+i), 1 <= i <= 13
190 [-]: LOADKB    R65 0 0      ; R65 := false
191 [-]: LOADKB    R66 0 0      ; R66 := false
192 [-]: LOADNIL   R67 R67      ; R67 := nil
193 [-]: NEWTABLE  R68 0 2      ; R68 := {}
194 [-]: SETTABLE  R68 K120 K48 ; R68["CurrentValue"] := nil
195 [-]: SETTABLE  R68 K121 K33 ; R68["Draining"] := false
196 [-]: LOADNIL   R69 R69      ; R69 := nil
197 [-]: CONST     R70 0        ; R70 := 0.000000
198 [-]: LOADNIL   R71 R72      ; R71 := R72 := nil
199 [-]: LOADKB    R73 0 0      ; R73 := false
200 [-]: NEWTABLE  R74 0 5      ; R74 := {}
201 [-]: SETTABLE  R74 K122 K33 ; R74["Enabled"] := false
202 [-]: NEWTABLE  R75 0 0      ; R75 := {}
203 [-]: SETTABLE  R74 K123 R75 ; R74["Faded"] := R75
204 [-]: NEWTABLE  R75 0 0      ; R75 := {}
205 [-]: SETTABLE  R74 K124 R75 ; R74["Interpolating"] := R75
206 [-]: NEWTABLE  R75 24 0     ; R75 := {}
207 [-]: LOADK     R76 K126     ; R76 := "MiniMapContainer"
208 [-]: LOADK     R77 K127     ; R77 := "HudTracker"
209 [-]: LOADK     R78 K128     ; R78 := "HealthAndShield"
210 [-]: LOADK     R79 K129     ; R79 := "WeaponFrame"
211 [-]: LOADK     R80 K130     ; R80 := "AbilityPanel"
212 [-]: LOADK     R81 K131     ; R81 := "Card"
213 [-]: LOADK     R82 K132     ; R82 := "StandingGain"
214 [-]: LOADK     R83 K133     ; R83 := "PvPHeldFlagTimer"
215 [-]: LOADK     R84 K134     ; R84 := "MiniGameScore"
216 [-]: LOADK     R85 K135     ; R85 := "BorderBox"
217 [-]: LOADK     R86 K136     ; R86 := "QuestMessage"
218 [-]: LOADK     R87 K137     ; R87 := "GenericMessage"
219 [-]: LOADK     R88 K138     ; R88 := "LogMessageContainer"
220 [-]: LOADK     R89 K139     ; R89 := "Prompt"
221 [-]: LOADK     R90 K140     ; R90 := "DamageIndicator"
222 [-]: LOADK     R91 K141     ; R91 := "Reticle"
223 [-]: LOADK     R92 K142     ; R92 := "Reticle.Arm1"
224 [-]: LOADK     R93 K143     ; R93 := "ReticleCustom"
225 [-]: LOADK     R94 K144     ; R94 := "SuccessfulHitNotification"
226 [-]: LOADK     R95 K145     ; R95 := "reloadTimer"
227 [-]: LOADK     R96 K146     ; R96 := "AbilityChargeProgress"
228 [-]: LOADK     R97 K147     ; R97 := "AbilityDots"
229 [-]: LOADK     R98 K148     ; R98 := "Stamina"
230 [-]: LOADK     R99 K149     ; R99 := "GameplayMessage"
231 [-]: LOADK     R100 K150    ; R100 := "PainLeft"
232 [-]: LOADK     R101 K151    ; R101 := "PainRight"
233 [-]: LOADK     R102 K152    ; R102 := "PainTop"
234 [-]: LOADK     R103 K153    ; R103 := "PainBottom"
235 [-]: LOADK     R104 K154    ; R104 := "SlamIndicator"
236 [-]: LOADK     R105 K155    ; R105 := "MiniMapOverlayMsg"
237 [-]: LOADK     R106 K156    ; R106 := "StancePanel"
238 [-]: SETLIST   R75 31 1     ; R75[(1-1)*FPF+i] := R(75+i), 1 <= i <= 31
239 [-]: SETTABLE  R74 K125 R75 ; R74["Clips"] := R75
240 [-]: NEWTABLE  R75 0 4      ; R75 := {}
241 [-]: SETTABLE  R75 K150 K51 ; R75["PainLeft"] := true
242 [-]: SETTABLE  R75 K151 K51 ; R75["PainRight"] := true
243 [-]: SETTABLE  R75 K152 K51 ; R75["PainTop"] := true
244 [-]: SETTABLE  R75 K153 K51 ; R75["PainBottom"] := true
245 [-]: SETTABLE  R74 K157 R75 ; R74["AutoClips"] := R75
246 [-]: NEWTABLE  R75 0 4      ; R75 := {}
247 [-]: SETTABLE  R75 K158 K48 ; R75["VoidTearTracker"] := nil
248 [-]: SETTABLE  R75 K159 K48 ; R75["VoidTearTitleTracker"] := nil
249 [-]: SETTABLE  R75 K160 K48 ; R75["VoidTearListTracker"] := nil
250 [-]: SETTABLE  R75 K161 K48 ; R75["TimerOfInterest"] := nil
251 [-]: NEWTABLE  R76 0 2      ; R76 := {}
252 [-]: SETTABLE  R76 K162 K33 ; R76["DarkSector"] := false
253 [-]: SETTABLE  R76 K163 K33 ; R76["PhotoBooth"] := false
254 [-]: LOADNIL   R77 R77      ; R77 := nil
255 [-]: CONST     R78 0        ; R78 := 0.000000
256 [-]: NEWTABLE  R79 0 7      ; R79 := {}
257 [-]: SETTABLE  R79 K164 K33 ; R79["Active"] := false
258 [-]: SETTABLE  R79 K165 K48 ; R79["IsNight"] := nil
259 [-]: SETTABLE  R79 K166 K90 ; R79["TransitionEpsilon"] := 1.000000
260 [-]: SETTABLE  R79 K167 K33 ; R79["Visible"] := false
261 [-]: SETTABLE  R79 K168 K33 ; R79["Landscape"] := false
262 [-]: SETTABLE  R79 K169 K31 ; R79["DayCount"] := 0.000000
263 [-]: SETTABLE  R79 K170 K31 ; R79["GameTimeAtDusk"] := 0.000000
264 [-]: NEWTABLE  R80 0 8      ; R80 := {}
265 [-]: SETTABLE  R80 K171 K48 ; R80["deco"] := nil
266 [-]: SETTABLE  R80 K172 K48 ; R80["avatar"] := nil
267 [-]: SETTABLE  R80 K173 K48 ; R80["hitProxy"] := nil
268 [-]: SETTABLE  R80 K174 K33 ; R80["valid"] := false
269 [-]: SETTABLE  R80 K175 K48 ; R80["name"] := nil
270 [-]: SETTABLE  R80 K176 K48 ; R80["player"] := nil
271 [-]: SETTABLE  R80 K177 K33 ; R80["sameFaction"] := false
272 [-]: SETTABLE  R80 K178 K48 ; R80["desc"] := nil
273 [-]: GETGLOBAL R81 K179     ; R81 := 0x0469f296
274 [-]: LOADK     R82 K180     ; R82 := "Hostage"
275 [-]: CALL      R81 2 2      ; R81 := R81(R82)
276 [-]: LOADNIL   R82 R85      ; R82 := R83 := R84 := R85 := nil
277 [-]: CLOSURE   R86 0        ; R86 := closure(Function #1)
278 [-]: MOVE      R0 R47       ; R0 := R47
279 [-]: SETGLOBAL R86 K181     ; GetCards := R86
280 [-]: CLOSURE   R86 1        ; R86 := closure(Function #2)
281 [-]: SETGLOBAL R86 K182     ; GetSelectedCards := R86
282 [-]: CLOSURE   R86 2        ; R86 := closure(Function #3)
283 [-]: MOVE      R0 R12       ; R0 := R12
284 [-]: CLOSURE   R87 3        ; R87 := closure(Function #4)
285 [-]: MOVE      R0 R4        ; R0 := R4
286 [-]: MOVE      R0 R3        ; R0 := R3
287 [-]: CLOSURE   R88 4        ; R88 := closure(Function #5)
288 [-]: CLOSURE   R89 5        ; R89 := closure(Function #6)
289 [-]: MOVE      R0 R35       ; R0 := R35
290 [-]: CLOSURE   R90 6        ; R90 := closure(Function #7)
291 [-]: MOVE      R0 R34       ; R0 := R34
292 [-]: MOVE      R0 R78       ; R0 := R78
293 [-]: MOVE      R0 R26       ; R0 := R26
294 [-]: CLOSURE   R91 7        ; R91 := closure(Function #8)
295 [-]: MOVE      R0 R12       ; R0 := R12
296 [-]: SETGLOBAL R91 K183     ; SortHudTrackers := R91
297 [-]: CLOSURE   R91 8        ; R91 := closure(Function #9)
298 [-]: MOVE      R0 R12       ; R0 := R12
299 [-]: CLOSURE   R92 9        ; R92 := closure(Function #10)
300 [-]: MOVE      R0 R12       ; R0 := R12
301 [-]: CLOSURE   R93 10       ; R93 := closure(Function #11)
302 [-]: MOVE      R0 R9        ; R0 := R9
303 [-]: SETGLOBAL R93 K184     ; ShowQuestMessage := R93
304 [-]: CLOSURE   R93 11       ; R93 := closure(Function #12)
305 [-]: SETGLOBAL R93 K185     ; HideQuestMessage := R93
306 [-]: CLOSURE   R93 12       ; R93 := closure(Function #13)
307 [-]: MOVE      R0 R9        ; R0 := R9
308 [-]: CLOSURE   R94 13       ; R94 := closure(Function #14)
309 [-]: MOVE      R0 R43       ; R0 := R43
310 [-]: MOVE      R0 R19       ; R0 := R19
311 [-]: CLOSURE   R95 14       ; R95 := closure(Function #15)
312 [-]: MOVE      R0 R43       ; R0 := R43
313 [-]: MOVE      R0 R9        ; R0 := R9
314 [-]: MOVE      R0 R33       ; R0 := R33
315 [-]: MOVE      R0 R94       ; R0 := R94
316 [-]: MOVE      R0 R19       ; R0 := R19
317 [-]: MOVE      R0 R86       ; R0 := R86
318 [-]: CLOSURE   R96 15       ; R96 := closure(Function #16)
319 [-]: MOVE      R0 R9        ; R0 := R9
320 [-]: SETGLOBAL R96 K186     ; AnimateTyping := R96
321 [-]: CLOSURE   R96 16       ; R96 := closure(Function #17)
322 [-]: MOVE      R0 R18       ; R0 := R18
323 [-]: CLOSURE   R97 17       ; R97 := closure(Function #18)
324 [-]: MOVE      R0 R27       ; R0 := R27
325 [-]: SETGLOBAL R97 K187     ; HideReticle := R97
326 [-]: CLOSURE   R97 18       ; R97 := closure(Function #19)
327 [-]: MOVE      R0 R27       ; R0 := R27
328 [-]: MOVE      R0 R20       ; R0 := R20
329 [-]: CLOSURE   R98 19       ; R98 := closure(Function #20)
330 [-]: MOVE      R0 R97       ; R0 := R97
331 [-]: SETGLOBAL R98 K188     ; ShowReticle := R98
332 [-]: CLOSURE   R98 20       ; R98 := closure(Function #21)
333 [-]: MOVE      R0 R4        ; R0 := R4
334 [-]: MOVE      R0 R27       ; R0 := R27
335 [-]: SETGLOBAL R98 K189     ; SetReticleVisible := R98
336 [-]: CLOSURE   R98 21       ; R98 := closure(Function #22)
337 [-]: MOVE      R0 R28       ; R0 := R28
338 [-]: SETGLOBAL R98 K190     ; SuppressDamageIndicators := R98
339 [-]: CLOSURE   R98 22       ; R98 := closure(Function #23)
340 [-]: SETGLOBAL R98 K191     ; HideAffinity := R98
341 [-]: CLOSURE   R98 23       ; R98 := closure(Function #24)
342 [-]: SETGLOBAL R98 K192     ; ShowAffinity := R98
343 [-]: CLOSURE   R98 24       ; R98 := closure(Function #25)
344 [-]: MOVE      R0 R28       ; R0 := R28
345 [-]: SETGLOBAL R98 K193     ; HideAbilityDots := R98
346 [-]: CLOSURE   R98 25       ; R98 := closure(Function #26)
347 [-]: MOVE      R0 R28       ; R0 := R28
348 [-]: SETGLOBAL R98 K194     ; ShowAbilityDots := R98
349 [-]: CLOSURE   R98 26       ; R98 := closure(Function #27)
350 [-]: MOVE      R0 R39       ; R0 := R39
351 [-]: MOVE      R0 R5        ; R0 := R5
352 [-]: MOVE      R0 R16       ; R0 := R16
353 [-]: MOVE      R0 R28       ; R0 := R28
354 [-]: MOVE      R0 R26       ; R0 := R26
355 [-]: CLOSURE   R99 27       ; R99 := closure(Function #28)
356 [-]: MOVE      R0 R39       ; R0 := R39
357 [-]: CLOSURE   R100 28      ; R100 := closure(Function #29)
358 [-]: MOVE      R0 R99       ; R0 := R99
359 [-]: MOVE      R0 R19       ; R0 := R19
360 [-]: MOVE      R0 R98       ; R0 := R98
361 [-]: SETGLOBAL R100 K195    ; onViewportSizeChanged := R100
362 [-]: CLOSURE   R100 29      ; R100 := closure(Function #30)
363 [-]: CLOSURE   R101 30      ; R101 := closure(Function #31)
364 [-]: MOVE      R0 R60       ; R0 := R60
365 [-]: MOVE      R0 R100      ; R0 := R100
366 [-]: SETTABLE  R60 K196 R101; R60["IsBuffEqual"] := R101
367 [-]: CLOSURE   R101 31      ; R101 := closure(Function #32)
368 [-]: MOVE      R0 R54       ; R0 := R54
369 [-]: MOVE      R0 R31       ; R0 := R31
370 [-]: MOVE      R0 R29       ; R0 := R29
371 [-]: MOVE      R0 R60       ; R0 := R60
372 [-]: MOVE      R0 R38       ; R0 := R38
373 [-]: MOVE      R0 R52       ; R0 := R52
374 [-]: CLOSURE   R102 32      ; R102 := closure(Function #33)
375 [-]: MOVE      R0 R54       ; R0 := R54
376 [-]: MOVE      R0 R31       ; R0 := R31
377 [-]: MOVE      R0 R100      ; R0 := R100
378 [-]: MOVE      R0 R52       ; R0 := R52
379 [-]: CLOSURE   R103 33      ; R103 := closure(Function #34)
380 [-]: MOVE      R0 R28       ; R0 := R28
381 [-]: CLOSURE   R104 34      ; R104 := closure(Function #35)
382 [-]: MOVE      R0 R28       ; R0 := R28
383 [-]: CLOSURE   R105 35      ; R105 := closure(Function #36)
384 [-]: MOVE      R0 R7        ; R0 := R7
385 [-]: SETGLOBAL R105 K197    ; PlayFocusActivatedFX := R105
386 [-]: CLOSURE   R105 36      ; R105 := closure(Function #37)
387 [-]: MOVE      R0 R28       ; R0 := R28
388 [-]: CLOSURE   R106 37      ; R106 := closure(Function #38)
389 [-]: MOVE      R0 R4        ; R0 := R4
390 [-]: MOVE      R0 R88       ; R0 := R88
391 [-]: MOVE      R0 R27       ; R0 := R27
392 [-]: MOVE      R0 R28       ; R0 := R28
393 [-]: MOVE      R0 R58       ; R0 := R58
394 [-]: MOVE      R0 R59       ; R0 := R59
395 [-]: MOVE      R0 R12       ; R0 := R12
396 [-]: MOVE      R0 R52       ; R0 := R52
397 [-]: SETGLOBAL R106 K198    ; Shutdown := R106
398 [-]: CLOSURE   R106 38      ; R106 := closure(Function #39)
399 [-]: MOVE      R0 R28       ; R0 := R28
400 [-]: CLOSURE   R107 39      ; R107 := closure(Function #40)
401 [-]: MOVE      R0 R6        ; R0 := R6
402 [-]: MOVE      R0 R29       ; R0 := R29
403 [-]: MOVE      R0 R28       ; R0 := R28
404 [-]: MOVE      R0 R106      ; R0 := R106
405 [-]: CLOSURE   R108 40      ; R108 := closure(Function #41)
406 [-]: SETGLOBAL R108 K199    ; OnIconReady := R108
407 [-]: CLOSURE   R108 41      ; R108 := closure(Function #42)
408 [-]: SETGLOBAL R108 K200    ; ForceShowMysteryPrize := R108
409 [-]: CLOSURE   R108 42      ; R108 := closure(Function #43)
410 [-]: MOVE      R0 R87       ; R0 := R87
411 [-]: SETGLOBAL R108 K201    ; ShowEncounterReward := R108
412 [-]: CLOSURE   R108 43      ; R108 := closure(Function #44)
413 [-]: MOVE      R0 R33       ; R0 := R33
414 [-]: CLOSURE   R109 44      ; R109 := closure(Function #45)
415 [-]: MOVE      R0 R16       ; R0 := R16
416 [-]: SETGLOBAL R109 K202    ; UpdateLogMessageContainerY := R109
417 [-]: CLOSURE   R109 45      ; R109 := closure(Function #46)
418 [-]: MOVE      R0 R40       ; R0 := R40
419 [-]: SETGLOBAL R109 K203    ; ShowGameplayMessage := R109
420 [-]: NEWTABLE  R109 0 0     ; R109 := {}
421 [-]: CLOSURE   R110 46      ; R110 := closure(Function #47)
422 [-]: MOVE      R0 R109      ; R0 := R109
423 [-]: SETGLOBAL R110 K204    ; ResetBuddyEffects := R110
424 [-]: CLOSURE   R110 47      ; R110 := closure(Function #48)
425 [-]: MOVE      R0 R110      ; R0 := R110
426 [-]: CLOSURE   R82 48       ; R82 := closure(Function #49)
427 [-]: MOVE      R0 R4        ; R0 := R4
428 [-]: MOVE      R0 R7        ; R0 := R7
429 [-]: CLOSURE   R111 49      ; R111 := closure(Function #50)
430 [-]: MOVE      R0 R33       ; R0 := R33
431 [-]: MOVE      R0 R4        ; R0 := R4
432 [-]: MOVE      R0 R7        ; R0 := R7
433 [-]: MOVE      R0 R82       ; R0 := R82
434 [-]: MOVE      R0 R12       ; R0 := R12
435 [-]: CLOSURE   R112 50      ; R112 := closure(Function #51)
436 [-]: MOVE      R0 R28       ; R0 := R28
437 [-]: MOVE      R0 R42       ; R0 := R42
438 [-]: MOVE      R0 R4        ; R0 := R4
439 [-]: CLOSURE   R113 51      ; R113 := closure(Function #52)
440 [-]: MOVE      R0 R28       ; R0 := R28
441 [-]: MOVE      R0 R42       ; R0 := R42
442 [-]: MOVE      R0 R112      ; R0 := R112
443 [-]: MOVE      R0 R84       ; R0 := R84
444 [-]: MOVE      R0 R27       ; R0 := R27
445 [-]: MOVE      R0 R17       ; R0 := R17
446 [-]: MOVE      R0 R9        ; R0 := R9
447 [-]: MOVE      R0 R7        ; R0 := R7
448 [-]: MOVE      R0 R58       ; R0 := R58
449 [-]: CLOSURE   R114 52      ; R114 := closure(Function #53)
450 [-]: MOVE      R0 R64       ; R0 := R64
451 [-]: CLOSURE   R115 53      ; R115 := closure(Function #54)
452 [-]: MOVE      R0 R53       ; R0 := R53
453 [-]: MOVE      R0 R9        ; R0 := R9
454 [-]: MOVE      R0 R114      ; R0 := R114
455 [-]: MOVE      R0 R20       ; R0 := R20
456 [-]: MOVE      R0 R31       ; R0 := R31
457 [-]: MOVE      R0 R54       ; R0 := R54
458 [-]: MOVE      R0 R64       ; R0 := R64
459 [-]: MOVE      R0 R22       ; R0 := R22
460 [-]: MOVE      R0 R21       ; R0 := R21
461 [-]: CLOSURE   R116 54      ; R116 := closure(Function #55)
462 [-]: MOVE      R0 R56       ; R0 := R56
463 [-]: MOVE      R0 R54       ; R0 := R54
464 [-]: MOVE      R0 R4        ; R0 := R4
465 [-]: MOVE      R0 R38       ; R0 := R38
466 [-]: MOVE      R0 R27       ; R0 := R27
467 [-]: MOVE      R0 R101      ; R0 := R101
468 [-]: MOVE      R0 R102      ; R0 := R102
469 [-]: MOVE      R0 R31       ; R0 := R31
470 [-]: MOVE      R0 R9        ; R0 := R9
471 [-]: MOVE      R0 R108      ; R0 := R108
472 [-]: CLOSURE   R117 55      ; R117 := closure(Function #56)
473 [-]: SETGLOBAL R117 K205    ; SetForceLocalRespawn := R117
474 [-]: CLOSURE   R117 56      ; R117 := closure(Function #57)
475 [-]: MOVE      R0 R16       ; R0 := R16
476 [-]: SETGLOBAL R117 K206    ; RegisterToAnchorMgr := R117
477 [-]: CLOSURE   R117 57      ; R117 := closure(Function #58)
478 [-]: MOVE      R0 R16       ; R0 := R16
479 [-]: SETGLOBAL R117 K207    ; UnregisterFromAnchorMgr := R117
480 [-]: CLOSURE   R117 58      ; R117 := closure(Function #59)
481 [-]: MOVE      R0 R53       ; R0 := R53
482 [-]: CLOSURE   R118 59      ; R118 := closure(Function #60)
483 [-]: MOVE      R0 R53       ; R0 := R53
484 [-]: CLOSURE   R119 60      ; R119 := closure(Function #61)
485 [-]: MOVE      R0 R21       ; R0 := R21
486 [-]: MOVE      R0 R20       ; R0 := R20
487 [-]: MOVE      R0 R50       ; R0 := R50
488 [-]: MOVE      R0 R55       ; R0 := R55
489 [-]: MOVE      R0 R118      ; R0 := R118
490 [-]: MOVE      R0 R117      ; R0 := R117
491 [-]: CLOSURE   R120 61      ; R120 := closure(Function #62)
492 [-]: MOVE      R0 R117      ; R0 := R117
493 [-]: MOVE      R0 R118      ; R0 := R118
494 [-]: SETGLOBAL R120 K208    ; ConditionalUpgradeChanged := R120
495 [-]: LOADNIL   R120 R120    ; R120 := nil
496 [-]: CLOSURE   R121 62      ; R121 := closure(Function #63)
497 [-]: MOVE      R0 R120      ; R0 := R120
498 [-]: MOVE      R0 R28       ; R0 := R28
499 [-]: CLOSURE   R122 63      ; R122 := closure(Function #64)
500 [-]: MOVE      R0 R47       ; R0 := R47
501 [-]: MOVE      R0 R13       ; R0 := R13
502 [-]: MOVE      R0 R48       ; R0 := R48
503 [-]: MOVE      R0 R9        ; R0 := R9
504 [-]: MOVE      R0 R28       ; R0 := R28
505 [-]: CLOSURE   R123 64      ; R123 := closure(Function #65)
506 [-]: MOVE      R0 R120      ; R0 := R120
507 [-]: CLOSURE   R124 65      ; R124 := closure(Function #66)
508 [-]: MOVE      R0 R123      ; R0 := R123
509 [-]: SETGLOBAL R124 K209    ; HandleModFound := R124
510 [-]: CLOSURE   R124 66      ; R124 := closure(Function #67)
511 [-]: MOVE      R0 R120      ; R0 := R120
512 [-]: MOVE      R0 R4        ; R0 := R4
513 [-]: MOVE      R0 R122      ; R0 := R122
514 [-]: MOVE      R0 R48       ; R0 := R48
515 [-]: MOVE      R0 R13       ; R0 := R13
516 [-]: MOVE      R0 R121      ; R0 := R121
517 [-]: CLOSURE   R125 67      ; R125 := closure(Function #68)
518 [-]: MOVE      R0 R4        ; R0 := R4
519 [-]: MOVE      R0 R7        ; R0 := R7
520 [-]: SETGLOBAL R125 K210    ; CreateNotificationParticles := R125
521 [-]: CLOSURE   R125 68      ; R125 := closure(Function #69)
522 [-]: MOVE      R0 R4        ; R0 := R4
523 [-]: MOVE      R0 R28       ; R0 := R28
524 [-]: SETGLOBAL R125 K211    ; ShowNotification := R125
525 [-]: CLOSURE   R125 69      ; R125 := closure(Function #70)
526 [-]: MOVE      R0 R18       ; R0 := R18
527 [-]: CLOSURE   R126 70      ; R126 := closure(Function #71)
528 [-]: MOVE      R0 R18       ; R0 := R18
529 [-]: MOVE      R0 R125      ; R0 := R125
530 [-]: CLOSURE   R127 71      ; R127 := closure(Function #72)
531 [-]: MOVE      R0 R126      ; R0 := R126
532 [-]: SETGLOBAL R127 K212    ; NotifyAbilityChange := R127
533 [-]: CLOSURE   R127 72      ; R127 := closure(Function #73)
534 [-]: MOVE      R0 R43       ; R0 := R43
535 [-]: MOVE      R0 R19       ; R0 := R19
536 [-]: CLOSURE   R128 73      ; R128 := closure(Function #74)
537 [-]: MOVE      R0 R126      ; R0 := R126
538 [-]: MOVE      R0 R9        ; R0 := R9
539 [-]: MOVE      R0 R57       ; R0 := R57
540 [-]: MOVE      R0 R4        ; R0 := R4
541 [-]: MOVE      R0 R30       ; R0 := R30
542 [-]: MOVE      R0 R43       ; R0 := R43
543 [-]: MOVE      R0 R127      ; R0 := R127
544 [-]: SETGLOBAL R128 K213    ; NotifyAbilityActivate := R128
545 [-]: CLOSURE   R128 74      ; R128 := closure(Function #75)
546 [-]: MOVE      R0 R126      ; R0 := R126
547 [-]: MOVE      R0 R28       ; R0 := R28
548 [-]: MOVE      R0 R9        ; R0 := R9
549 [-]: SETGLOBAL R128 K214    ; NotifyAbilityActivateError := R128
550 [-]: CLOSURE   R128 75      ; R128 := closure(Function #76)
551 [-]: MOVE      R0 R4        ; R0 := R4
552 [-]: MOVE      R0 R9        ; R0 := R9
553 [-]: MOVE      R0 R57       ; R0 := R57
554 [-]: SETGLOBAL R128 K215    ; OnAbilityHighlight := R128
555 [-]: CLOSURE   R128 76      ; R128 := closure(Function #77)
556 [-]: MOVE      R0 R4        ; R0 := R4
557 [-]: CLOSURE   R129 77      ; R129 := closure(Function #78)
558 [-]: MOVE      R0 R4        ; R0 := R4
559 [-]: MOVE      R0 R9        ; R0 := R9
560 [-]: CLOSURE   R130 78      ; R130 := closure(Function #79)
561 [-]: MOVE      R0 R4        ; R0 := R4
562 [-]: MOVE      R0 R28       ; R0 := R28
563 [-]: CLOSURE   R131 79      ; R131 := closure(Function #80)
564 [-]: MOVE      R0 R16       ; R0 := R16
565 [-]: MOVE      R0 R39       ; R0 := R39
566 [-]: CLOSURE   R132 80      ; R132 := closure(Function #81)
567 [-]: MOVE      R0 R60       ; R0 := R60
568 [-]: MOVE      R0 R41       ; R0 := R41
569 [-]: CLOSURE   R133 81      ; R133 := closure(Function #82)
570 [-]: MOVE      R0 R16       ; R0 := R16
571 [-]: MOVE      R0 R68       ; R0 := R68
572 [-]: MOVE      R0 R9        ; R0 := R9
573 [-]: MOVE      R0 R28       ; R0 := R28
574 [-]: MOVE      R0 R131      ; R0 := R131
575 [-]: MOVE      R0 R39       ; R0 := R39
576 [-]: MOVE      R0 R26       ; R0 := R26
577 [-]: SETGLOBAL R133 K216    ; UpdateFocusAnchor := R133
578 [-]: CLOSURE   R133 82      ; R133 := closure(Function #83)
579 [-]: MOVE      R0 R4        ; R0 := R4
580 [-]: MOVE      R0 R34       ; R0 := R34
581 [-]: MOVE      R0 R65       ; R0 := R65
582 [-]: MOVE      R0 R28       ; R0 := R28
583 [-]: MOVE      R0 R31       ; R0 := R31
584 [-]: CLOSURE   R134 83      ; R134 := closure(Function #84)
585 [-]: MOVE      R0 R4        ; R0 := R4
586 [-]: MOVE      R0 R28       ; R0 := R28
587 [-]: MOVE      R0 R65       ; R0 := R65
588 [-]: MOVE      R0 R34       ; R0 := R34
589 [-]: CLOSURE   R135 84      ; R135 := closure(Function #85)
590 [-]: MOVE      R0 R52       ; R0 := R52
591 [-]: MOVE      R0 R28       ; R0 := R28
592 [-]: CLOSURE   R136 85      ; R136 := closure(Function #86)
593 [-]: MOVE      R0 R9        ; R0 := R9
594 [-]: SETGLOBAL R136 K217    ; ToggleChatWindow := R136
595 [-]: CLOSURE   R136 86      ; R136 := closure(Function #87)
596 [-]: MOVE      R0 R6        ; R0 := R6
597 [-]: CLOSURE   R137 87      ; R137 := closure(Function #88)
598 [-]: MOVE      R0 R4        ; R0 := R4
599 [-]: SETGLOBAL R137 K218    ; OnPlayersChanged := R137
600 [-]: CLOSURE   R137 88      ; R137 := closure(Function #89)
601 [-]: MOVE      R0 R4        ; R0 := R4
602 [-]: MOVE      R0 R52       ; R0 := R52
603 [-]: MOVE      R0 R33       ; R0 := R33
604 [-]: MOVE      R0 R44       ; R0 := R44
605 [-]: MOVE      R0 R28       ; R0 := R28
606 [-]: MOVE      R0 R23       ; R0 := R23
607 [-]: MOVE      R0 R60       ; R0 := R60
608 [-]: MOVE      R0 R136      ; R0 := R136
609 [-]: MOVE      R0 R7        ; R0 := R7
610 [-]: MOVE      R0 R9        ; R0 := R9
611 [-]: MOVE      R0 R27       ; R0 := R27
612 [-]: CLOSURE   R138 89      ; R138 := closure(Function #90)
613 [-]: MOVE      R0 R29       ; R0 := R29
614 [-]: MOVE      R0 R75       ; R0 := R75
615 [-]: MOVE      R0 R92       ; R0 := R92
616 [-]: MOVE      R0 R7        ; R0 := R7
617 [-]: MOVE      R0 R19       ; R0 := R19
618 [-]: MOVE      R0 R86       ; R0 := R86
619 [-]: MOVE      R0 R91       ; R0 := R91
620 [-]: CLOSURE   R139 90      ; R139 := closure(Function #91)
621 [-]: MOVE      R0 R7        ; R0 := R7
622 [-]: MOVE      R0 R28       ; R0 := R28
623 [-]: MOVE      R0 R4        ; R0 := R4
624 [-]: SETGLOBAL R139 K219    ; ShowTransmission := R139
625 [-]: CLOSURE   R139 91      ; R139 := closure(Function #92)
626 [-]: CLOSURE   R140 92      ; R140 := closure(Function #93)
627 [-]: MOVE      R0 R29       ; R0 := R29
628 [-]: MOVE      R0 R80       ; R0 := R80
629 [-]: MOVE      R0 R4        ; R0 := R4
630 [-]: MOVE      R0 R7        ; R0 := R7
631 [-]: MOVE      R0 R81       ; R0 := R81
632 [-]: MOVE      R0 R139      ; R0 := R139
633 [-]: MOVE      R0 R82       ; R0 := R82
634 [-]: MOVE      R0 R33       ; R0 := R33
635 [-]: MOVE      R0 R136      ; R0 := R136
636 [-]: MOVE      R0 R23       ; R0 := R23
637 [-]: CLOSURE   R141 93      ; R141 := closure(Function #94)
638 [-]: MOVE      R0 R29       ; R0 := R29
639 [-]: MOVE      R0 R80       ; R0 := R80
640 [-]: MOVE      R0 R7        ; R0 := R7
641 [-]: MOVE      R0 R140      ; R0 := R140
642 [-]: CLOSURE   R142 94      ; R142 := closure(Function #95)
643 [-]: MOVE      R0 R31       ; R0 := R31
644 [-]: MOVE      R0 R20       ; R0 := R20
645 [-]: MOVE      R0 R42       ; R0 := R42
646 [-]: MOVE      R0 R28       ; R0 := R28
647 [-]: MOVE      R0 R9        ; R0 := R9
648 [-]: CLOSURE   R143 95      ; R143 := closure(Function #96)
649 [-]: MOVE      R0 R142      ; R0 := R142
650 [-]: SETGLOBAL R143 K220    ; UpdateScanUpdateParams := R143
651 [-]: CLOSURE   R143 96      ; R143 := closure(Function #97)
652 [-]: MOVE      R0 R75       ; R0 := R75
653 [-]: MOVE      R0 R92       ; R0 := R92
654 [-]: MOVE      R0 R7        ; R0 := R7
655 [-]: MOVE      R0 R9        ; R0 := R9
656 [-]: CLOSURE   R144 97      ; R144 := closure(Function #98)
657 [-]: MOVE      R0 R9        ; R0 := R9
658 [-]: MOVE      R0 R75       ; R0 := R75
659 [-]: CLOSURE   R145 98      ; R145 := closure(Function #99)
660 [-]: MOVE      R0 R75       ; R0 := R75
661 [-]: MOVE      R0 R91       ; R0 := R91
662 [-]: MOVE      R0 R24       ; R0 := R24
663 [-]: MOVE      R0 R143      ; R0 := R143
664 [-]: MOVE      R0 R144      ; R0 := R144
665 [-]: MOVE      R0 R92       ; R0 := R92
666 [-]: MOVE      R0 R7        ; R0 := R7
667 [-]: CLOSURE   R146 99      ; R146 := closure(Function #100)
668 [-]: MOVE      R0 R75       ; R0 := R75
669 [-]: MOVE      R0 R92       ; R0 := R92
670 [-]: MOVE      R0 R7        ; R0 := R7
671 [-]: MOVE      R0 R24       ; R0 := R24
672 [-]: CLOSURE   R147 100     ; R147 := closure(Function #101)
673 [-]: MOVE      R0 R4        ; R0 := R4
674 [-]: MOVE      R0 R7        ; R0 := R7
675 [-]: MOVE      R0 R49       ; R0 := R49
676 [-]: MOVE      R0 R92       ; R0 := R92
677 [-]: MOVE      R0 R91       ; R0 := R91
678 [-]: MOVE      R0 R75       ; R0 := R75
679 [-]: MOVE      R0 R145      ; R0 := R145
680 [-]: MOVE      R0 R146      ; R0 := R146
681 [-]: CLOSURE   R148 101     ; R148 := closure(Function #102)
682 [-]: MOVE      R0 R32       ; R0 := R32
683 [-]: MOVE      R0 R9        ; R0 := R9
684 [-]: CLOSURE   R149 102     ; R149 := closure(Function #103)
685 [-]: MOVE      R0 R51       ; R0 := R51
686 [-]: MOVE      R0 R9        ; R0 := R9
687 [-]: CLOSURE   R150 103     ; R150 := closure(Function #104)
688 [-]: MOVE      R0 R31       ; R0 := R31
689 [-]: MOVE      R0 R34       ; R0 := R34
690 [-]: MOVE      R0 R65       ; R0 := R65
691 [-]: MOVE      R0 R73       ; R0 := R73
692 [-]: MOVE      R0 R41       ; R0 := R41
693 [-]: MOVE      R0 R149      ; R0 := R149
694 [-]: MOVE      R0 R40       ; R0 := R40
695 [-]: MOVE      R0 R60       ; R0 := R60
696 [-]: MOVE      R0 R9        ; R0 := R9
697 [-]: MOVE      R0 R16       ; R0 := R16
698 [-]: MOVE      R0 R39       ; R0 := R39
699 [-]: MOVE      R0 R29       ; R0 := R29
700 [-]: CLOSURE   R151 104     ; R151 := closure(Function #105)
701 [-]: MOVE      R0 R33       ; R0 := R33
702 [-]: MOVE      R0 R111      ; R0 := R111
703 [-]: MOVE      R0 R29       ; R0 := R29
704 [-]: MOVE      R0 R34       ; R0 := R34
705 [-]: MOVE      R0 R65       ; R0 := R65
706 [-]: MOVE      R0 R20       ; R0 := R20
707 [-]: MOVE      R0 R4        ; R0 := R4
708 [-]: MOVE      R0 R36       ; R0 := R36
709 [-]: MOVE      R0 R27       ; R0 := R27
710 [-]: MOVE      R0 R31       ; R0 := R31
711 [-]: MOVE      R0 R7        ; R0 := R7
712 [-]: MOVE      R0 R56       ; R0 := R56
713 [-]: MOVE      R0 R60       ; R0 := R60
714 [-]: MOVE      R0 R41       ; R0 := R41
715 [-]: MOVE      R0 R28       ; R0 := R28
716 [-]: MOVE      R0 R54       ; R0 := R54
717 [-]: MOVE      R0 R52       ; R0 := R52
718 [-]: MOVE      R0 R101      ; R0 := R101
719 [-]: MOVE      R0 R32       ; R0 := R32
720 [-]: MOVE      R0 R148      ; R0 := R148
721 [-]: MOVE      R0 R9        ; R0 := R9
722 [-]: MOVE      R0 R97       ; R0 := R97
723 [-]: MOVE      R0 R23       ; R0 := R23
724 [-]: MOVE      R0 R66       ; R0 := R66
725 [-]: CLOSURE   R152 105     ; R152 := closure(Function #106)
726 [-]: CLOSURE   R153 106     ; R153 := closure(Function #107)
727 [-]: CLOSURE   R154 107     ; R154 := closure(Function #108)
728 [-]: MOVE      R0 R1        ; R0 := R1
729 [-]: MOVE      R0 R35       ; R0 := R35
730 [-]: MOVE      R0 R152      ; R0 := R152
731 [-]: MOVE      R0 R69       ; R0 := R69
732 [-]: MOVE      R0 R4        ; R0 := R4
733 [-]: MOVE      R0 R153      ; R0 := R153
734 [-]: CLOSURE   R155 108     ; R155 := closure(Function #109)
735 [-]: MOVE      R0 R4        ; R0 := R4
736 [-]: MOVE      R0 R17       ; R0 := R17
737 [-]: MOVE      R0 R154      ; R0 := R154
738 [-]: MOVE      R0 R76       ; R0 := R76
739 [-]: MOVE      R0 R31       ; R0 := R31
740 [-]: MOVE      R0 R33       ; R0 := R33
741 [-]: MOVE      R0 R74       ; R0 := R74
742 [-]: MOVE      R0 R7        ; R0 := R7
743 [-]: MOVE      R0 R27       ; R0 := R27
744 [-]: MOVE      R0 R28       ; R0 := R28
745 [-]: CLOSURE   R156 109     ; R156 := closure(Function #110)
746 [-]: MOVE      R0 R155      ; R0 := R155
747 [-]: SETGLOBAL R156 K221    ; UpdateFade := R156
748 [-]: CLOSURE   R156 110     ; R156 := closure(Function #111)
749 [-]: MOVE      R0 R4        ; R0 := R4
750 [-]: MOVE      R0 R85       ; R0 := R85
751 [-]: MOVE      R0 R19       ; R0 := R19
752 [-]: MOVE      R0 R77       ; R0 := R77
753 [-]: MOVE      R0 R151      ; R0 := R151
754 [-]: MOVE      R0 R3        ; R0 := R3
755 [-]: MOVE      R0 R137      ; R0 := R137
756 [-]: MOVE      R0 R7        ; R0 := R7
757 [-]: MOVE      R0 R33       ; R0 := R33
758 [-]: MOVE      R0 R46       ; R0 := R46
759 [-]: MOVE      R0 R28       ; R0 := R28
760 [-]: MOVE      R0 R29       ; R0 := R29
761 [-]: MOVE      R0 R59       ; R0 := R59
762 [-]: MOVE      R0 R9        ; R0 := R9
763 [-]: MOVE      R0 R60       ; R0 := R60
764 [-]: MOVE      R0 R31       ; R0 := R31
765 [-]: MOVE      R0 R20       ; R0 := R20
766 [-]: MOVE      R0 R41       ; R0 := R41
767 [-]: MOVE      R0 R21       ; R0 := R21
768 [-]: MOVE      R0 R50       ; R0 := R50
769 [-]: MOVE      R0 R141      ; R0 := R141
770 [-]: MOVE      R0 R155      ; R0 := R155
771 [-]: MOVE      R0 R27       ; R0 := R27
772 [-]: MOVE      R0 R113      ; R0 := R113
773 [-]: MOVE      R0 R79       ; R0 := R79
774 [-]: MOVE      R0 R15       ; R0 := R15
775 [-]: MOVE      R0 R115      ; R0 := R115
776 [-]: MOVE      R0 R124      ; R0 := R124
777 [-]: MOVE      R0 R150      ; R0 := R150
778 [-]: MOVE      R0 R25       ; R0 := R25
779 [-]: MOVE      R0 R17       ; R0 := R17
780 [-]: MOVE      R0 R52       ; R0 := R52
781 [-]: MOVE      R0 R135      ; R0 := R135
782 [-]: MOVE      R0 R57       ; R0 := R57
783 [-]: MOVE      R0 R116      ; R0 := R116
784 [-]: MOVE      R0 R119      ; R0 := R119
785 [-]: MOVE      R0 R12       ; R0 := R12
786 [-]: MOVE      R0 R76       ; R0 := R76
787 [-]: MOVE      R0 R32       ; R0 := R32
788 [-]: MOVE      R0 R138      ; R0 := R138
789 [-]: MOVE      R0 R147      ; R0 := R147
790 [-]: MOVE      R0 R45       ; R0 := R45
791 [-]: SETGLOBAL R156 K222    ; Update := R156
792 [-]: CLOSURE   R156 111     ; R156 := closure(Function #112)
793 [-]: MOVE      R0 R25       ; R0 := R25
794 [-]: MOVE      R0 R4        ; R0 := R4
795 [-]: MOVE      R0 R33       ; R0 := R33
796 [-]: MOVE      R0 R29       ; R0 := R29
797 [-]: MOVE      R0 R9        ; R0 := R9
798 [-]: MOVE      R0 R7        ; R0 := R7
799 [-]: CLOSURE   R157 112     ; R157 := closure(Function #113)
800 [-]: MOVE      R0 R46       ; R0 := R46
801 [-]: MOVE      R0 R52       ; R0 := R52
802 [-]: MOVE      R0 R9        ; R0 := R9
803 [-]: MOVE      R0 R4        ; R0 := R4
804 [-]: MOVE      R0 R38       ; R0 := R38
805 [-]: MOVE      R0 R7        ; R0 := R7
806 [-]: MOVE      R0 R157      ; R0 := R157
807 [-]: CLOSURE   R158 113     ; R158 := closure(Function #114)
808 [-]: SETGLOBAL R158 K223    ; ForceShowMinimapProgressBar := R158
809 [-]: CLOSURE   R158 114     ; R158 := closure(Function #115)
810 [-]: SETGLOBAL R158 K224    ; ForceHideMinimapProgressBar := R158
811 [-]: CLOSURE   R158 115     ; R158 := closure(Function #116)
812 [-]: SETGLOBAL R158 K225    ; SetMinimapProgressText := R158
813 [-]: LOADNIL   R158 R158    ; R158 := nil
814 [-]: CLOSURE   R159 116     ; R159 := closure(Function #117)
815 [-]: MOVE      R0 R158      ; R0 := R158
816 [-]: MOVE      R0 R14       ; R0 := R14
817 [-]: SETGLOBAL R159 K226    ; SetMinimapProgressValue := R159
818 [-]: CLOSURE   R159 117     ; R159 := closure(Function #118)
819 [-]: MOVE      R0 R4        ; R0 := R4
820 [-]: MOVE      R0 R71       ; R0 := R71
821 [-]: MOVE      R0 R67       ; R0 := R67
822 [-]: CLOSURE   R160 118     ; R160 := closure(Function #119)
823 [-]: MOVE      R0 R33       ; R0 := R33
824 [-]: MOVE      R0 R69       ; R0 := R69
825 [-]: MOVE      R0 R153      ; R0 := R153
826 [-]: MOVE      R0 R9        ; R0 := R9
827 [-]: MOVE      R0 R41       ; R0 := R41
828 [-]: MOVE      R0 R4        ; R0 := R4
829 [-]: MOVE      R0 R71       ; R0 := R71
830 [-]: MOVE      R0 R19       ; R0 := R19
831 [-]: MOVE      R0 R159      ; R0 := R159
832 [-]: MOVE      R0 R7        ; R0 := R7
833 [-]: MOVE      R0 R40       ; R0 := R40
834 [-]: MOVE      R0 R67       ; R0 := R67
835 [-]: CLOSURE   R161 119     ; R161 := closure(Function #120)
836 [-]: MOVE      R0 R160      ; R0 := R160
837 [-]: SETGLOBAL R161 K227    ; ShowBasicImpactMessage := R161
838 [-]: CLOSURE   R161 120     ; R161 := closure(Function #121)
839 [-]: MOVE      R0 R16       ; R0 := R16
840 [-]: MOVE      R0 R70       ; R0 := R70
841 [-]: MOVE      R0 R39       ; R0 := R39
842 [-]: CLOSURE   R162 121     ; R162 := closure(Function #122)
843 [-]: MOVE      R0 R33       ; R0 := R33
844 [-]: MOVE      R0 R16       ; R0 := R16
845 [-]: CLOSURE   R83 122      ; R83 := closure(Function #123)
846 [-]: MOVE      R0 R72       ; R0 := R72
847 [-]: MOVE      R0 R19       ; R0 := R19
848 [-]: MOVE      R0 R83       ; R0 := R83
849 [-]: CLOSURE   R163 123     ; R163 := closure(Function #124)
850 [-]: MOVE      R0 R28       ; R0 := R28
851 [-]: MOVE      R0 R29       ; R0 := R29
852 [-]: SETGLOBAL R163 K228    ; RefreshGlowEffectsEnabled := R163
853 [-]: CLOSURE   R163 124     ; R163 := closure(Function #125)
854 [-]: MOVE      R0 R35       ; R0 := R35
855 [-]: MOVE      R0 R52       ; R0 := R52
856 [-]: MOVE      R0 R17       ; R0 := R17
857 [-]: MOVE      R0 R40       ; R0 := R40
858 [-]: MOVE      R0 R12       ; R0 := R12
859 [-]: MOVE      R0 R39       ; R0 := R39
860 [-]: MOVE      R0 R30       ; R0 := R30
861 [-]: MOVE      R0 R28       ; R0 := R28
862 [-]: MOVE      R0 R29       ; R0 := R29
863 [-]: MOVE      R0 R27       ; R0 := R27
864 [-]: MOVE      R0 R98       ; R0 := R98
865 [-]: MOVE      R0 R99       ; R0 := R99
866 [-]: MOVE      R0 R148      ; R0 := R148
867 [-]: CLOSURE   R164 125     ; R164 := closure(Function #126)
868 [-]: MOVE      R0 R28       ; R0 := R28
869 [-]: MOVE      R0 R4        ; R0 := R4
870 [-]: MOVE      R0 R42       ; R0 := R42
871 [-]: MOVE      R0 R9        ; R0 := R9
872 [-]: MOVE      R0 R152      ; R0 := R152
873 [-]: MOVE      R0 R1        ; R0 := R1
874 [-]: MOVE      R0 R2        ; R0 := R2
875 [-]: CLOSURE   R165 126     ; R165 := closure(Function #127)
876 [-]: MOVE      R0 R54       ; R0 := R54
877 [-]: SETGLOBAL R165 K229    ; SetStatEffectColumns := R165
878 [-]: CLOSURE   R165 127     ; R165 := closure(Function #128)
879 [-]: MOVE      R0 R54       ; R0 := R54
880 [-]: MOVE      R0 R19       ; R0 := R19
881 [-]: MOVE      R0 R9        ; R0 := R9
882 [-]: MOVE      R0 R40       ; R0 := R40
883 [-]: MOVE      R0 R108      ; R0 := R108
884 [-]: MOVE      R0 R0        ; R0 := R0
885 [-]: CLOSURE   R166 128     ; R166 := closure(Function #129)
886 [-]: MOVE      R0 R163      ; R0 := R163
887 [-]: MOVE      R0 R52       ; R0 := R52
888 [-]: MOVE      R0 R54       ; R0 := R54
889 [-]: SETGLOBAL R166 K230    ; OnProfileSaved := R166
890 [-]: CLOSURE   R166 129     ; R166 := closure(Function #130)
891 [-]: MOVE      R0 R24       ; R0 := R24
892 [-]: CLOSURE   R167 130     ; R167 := closure(Function #131)
893 [-]: MOVE      R0 R9        ; R0 := R9
894 [-]: CLOSURE   R168 131     ; R168 := closure(Function #132)
895 [-]: MOVE      R0 R9        ; R0 := R9
896 [-]: CLOSURE   R169 132     ; R169 := closure(Function #133)
897 [-]: MOVE      R0 R27       ; R0 := R27
898 [-]: CLOSURE   R170 133     ; R170 := closure(Function #134)
899 [-]: MOVE      R0 R74       ; R0 := R74
900 [-]: CLOSURE   R171 134     ; R171 := closure(Function #135)
901 [-]: CLOSURE   R172 135     ; R172 := closure(Function #136)
902 [-]: MOVE      R0 R28       ; R0 := R28
903 [-]: CLOSURE   R173 136     ; R173 := closure(Function #137)
904 [-]: MOVE      R0 R28       ; R0 := R28
905 [-]: CLOSURE   R174 137     ; R174 := closure(Function #138)
906 [-]: MOVE      R0 R9        ; R0 := R9
907 [-]: MOVE      R0 R57       ; R0 := R57
908 [-]: MOVE      R0 R40       ; R0 := R40
909 [-]: CLOSURE   R175 138     ; R175 := closure(Function #139)
910 [-]: MOVE      R0 R174      ; R0 := R174
911 [-]: SETGLOBAL R175 K231    ; AbilityTimerComplete := R175
912 [-]: CLOSURE   R175 139     ; R175 := closure(Function #140)
913 [-]: CLOSURE   R85 140      ; R85 := closure(Function #141)
914 [-]: MOVE      R0 R87       ; R0 := R87
915 [-]: MOVE      R0 R128      ; R0 := R128
916 [-]: MOVE      R0 R130      ; R0 := R130
917 [-]: MOVE      R0 R129      ; R0 := R129
918 [-]: MOVE      R0 R105      ; R0 := R105
919 [-]: MOVE      R0 R106      ; R0 := R106
920 [-]: MOVE      R0 R107      ; R0 := R107
921 [-]: MOVE      R0 R160      ; R0 := R160
922 [-]: MOVE      R0 R159      ; R0 := R159
923 [-]: MOVE      R0 R161      ; R0 := R161
924 [-]: MOVE      R0 R83       ; R0 := R83
925 [-]: MOVE      R0 R166      ; R0 := R166
926 [-]: MOVE      R0 R167      ; R0 := R167
927 [-]: MOVE      R0 R168      ; R0 := R168
928 [-]: MOVE      R0 R169      ; R0 := R169
929 [-]: MOVE      R0 R170      ; R0 := R170
930 [-]: MOVE      R0 R171      ; R0 := R171
931 [-]: MOVE      R0 R172      ; R0 := R172
932 [-]: MOVE      R0 R133      ; R0 := R133
933 [-]: MOVE      R0 R134      ; R0 := R134
934 [-]: MOVE      R0 R91       ; R0 := R91
935 [-]: MOVE      R0 R173      ; R0 := R173
936 [-]: MOVE      R0 R174      ; R0 := R174
937 [-]: MOVE      R0 R175      ; R0 := R175
938 [-]: MOVE      R0 R103      ; R0 := R103
939 [-]: MOVE      R0 R104      ; R0 := R104
940 [-]: MOVE      R0 R16       ; R0 := R16
941 [-]: MOVE      R0 R89       ; R0 := R89
942 [-]: MOVE      R0 R12       ; R0 := R12
943 [-]: MOVE      R0 R39       ; R0 := R39
944 [-]: CLOSURE   R176 141     ; R176 := closure(Function #142)
945 [-]: MOVE      R0 R37       ; R0 := R37
946 [-]: MOVE      R0 R10       ; R0 := R10
947 [-]: MOVE      R0 R9        ; R0 := R9
948 [-]: MOVE      R0 R40       ; R0 := R40
949 [-]: CLOSURE   R84 142      ; R84 := closure(Function #143)
950 [-]: MOVE      R0 R42       ; R0 := R42
951 [-]: MOVE      R0 R112      ; R0 := R112
952 [-]: MOVE      R0 R149      ; R0 := R149
953 [-]: MOVE      R0 R9        ; R0 := R9
954 [-]: CLOSURE   R177 143     ; R177 := closure(Function #144)
955 [-]: MOVE      R0 R84       ; R0 := R84
956 [-]: SETGLOBAL R177 K232    ; UpdateAmmo := R177
957 [-]: CLOSURE   R177 144     ; R177 := closure(Function #145)
958 [-]: MOVE      R0 R16       ; R0 := R16
959 [-]: MOVE      R0 R41       ; R0 := R41
960 [-]: MOVE      R0 R39       ; R0 := R39
961 [-]: CLOSURE   R178 145     ; R178 := closure(Function #146)
962 [-]: MOVE      R0 R41       ; R0 := R41
963 [-]: MOVE      R0 R61       ; R0 := R61
964 [-]: MOVE      R0 R177      ; R0 := R177
965 [-]: CLOSURE   R179 146     ; R179 := closure(Function #147)
966 [-]: MOVE      R0 R41       ; R0 := R41
967 [-]: MOVE      R0 R40       ; R0 := R40
968 [-]: MOVE      R0 R177      ; R0 := R177
969 [-]: CLOSURE   R180 147     ; R180 := closure(Function #148)
970 [-]: MOVE      R0 R16       ; R0 := R16
971 [-]: MOVE      R0 R39       ; R0 := R39
972 [-]: MOVE      R0 R179      ; R0 := R179
973 [-]: MOVE      R0 R178      ; R0 := R178
974 [-]: MOVE      R0 R74       ; R0 := R74
975 [-]: MOVE      R0 R41       ; R0 := R41
976 [-]: MOVE      R0 R2        ; R0 := R2
977 [-]: MOVE      R0 R1        ; R0 := R1
978 [-]: MOVE      R0 R84       ; R0 := R84
979 [-]: CLOSURE   R181 148     ; R181 := closure(Function #149)
980 [-]: MOVE      R0 R17       ; R0 := R17
981 [-]: MOVE      R0 R88       ; R0 := R88
982 [-]: MOVE      R0 R4        ; R0 := R4
983 [-]: MOVE      R0 R111      ; R0 := R111
984 [-]: MOVE      R0 R33       ; R0 := R33
985 [-]: MOVE      R0 R163      ; R0 := R163
986 [-]: MOVE      R0 R7        ; R0 := R7
987 [-]: MOVE      R0 R79       ; R0 := R79
988 [-]: MOVE      R0 R24       ; R0 := R24
989 [-]: MOVE      R0 R96       ; R0 := R96
990 [-]: MOVE      R0 R95       ; R0 := R95
991 [-]: MOVE      R0 R16       ; R0 := R16
992 [-]: MOVE      R0 R11       ; R0 := R11
993 [-]: MOVE      R0 R39       ; R0 := R39
994 [-]: MOVE      R0 R77       ; R0 := R77
995 [-]: MOVE      R0 R70       ; R0 := R70
996 [-]: MOVE      R0 R176      ; R0 := R176
997 [-]: MOVE      R0 R156      ; R0 := R156
998 [-]: MOVE      R0 R157      ; R0 := R157
999 [-]: MOVE      R0 R49       ; R0 := R49
1000 [-]: MOVE      R0 R9        ; R0 := R9
1001 [-]: MOVE      R0 R28       ; R0 := R28
1002 [-]: MOVE      R0 R26       ; R0 := R26
1003 [-]: MOVE      R0 R5        ; R0 := R5
1004 [-]: MOVE      R0 R78       ; R0 := R78
1005 [-]: MOVE      R0 R12       ; R0 := R12
1006 [-]: MOVE      R0 R19       ; R0 := R19
1007 [-]: MOVE      R0 R35       ; R0 := R35
1008 [-]: MOVE      R0 R87       ; R0 := R87
1009 [-]: MOVE      R0 R90       ; R0 := R90
1010 [-]: MOVE      R0 R180      ; R0 := R180
1011 [-]: MOVE      R0 R154      ; R0 := R154
1012 [-]: MOVE      R0 R45       ; R0 := R45
1013 [-]: MOVE      R0 R93       ; R0 := R93
1014 [-]: MOVE      R0 R0        ; R0 := R0
1015 [-]: MOVE      R0 R162      ; R0 := R162
1016 [-]: MOVE      R0 R64       ; R0 := R64
1017 [-]: MOVE      R0 R165      ; R0 := R165
1018 [-]: MOVE      R0 R85       ; R0 := R85
1019 [-]: MOVE      R0 R76       ; R0 := R76
1020 [-]: SETGLOBAL R181 K233    ; Initialize := R181
1021 [-]: CLOSURE   R181 149     ; R181 := closure(Function #150)
1022 [-]: MOVE      R0 R4        ; R0 := R4
1023 [-]: SETGLOBAL R181 K234    ; ScreenDuck := R181
1024 [-]: CLOSURE   R181 150     ; R181 := closure(Function #151)
1025 [-]: MOVE      R0 R50       ; R0 := R50
1026 [-]: SETGLOBAL R181 K235    ; StatusEffectChanged := R181
1027 [-]: CLOSURE   R181 151     ; R181 := closure(Function #152)
1028 [-]: MOVE      R0 R50       ; R0 := R50
1029 [-]: SETGLOBAL R181 K236    ; OnPlayerInventoryChanged := R181
1030 [-]: CLOSURE   R181 152     ; R181 := closure(Function #153)
1031 [-]: MOVE      R0 R52       ; R0 := R52
1032 [-]: MOVE      R0 R17       ; R0 := R17
1033 [-]: SETGLOBAL R181 K237    ; ToggleSquad := R181
1034 [-]: CLOSURE   R181 153     ; R181 := closure(Function #154)
1035 [-]: MOVE      R0 R16       ; R0 := R16
1036 [-]: MOVE      R0 R39       ; R0 := R39
1037 [-]: MOVE      R0 R26       ; R0 := R26
1038 [-]: MOVE      R0 R28       ; R0 := R28
1039 [-]: SETGLOBAL R181 K238    ; onHudMarginsChanged := R181
1040 [-]: CLOSURE   R181 154     ; R181 := closure(Function #155)
1041 [-]: MOVE      R0 R16       ; R0 := R16
1042 [-]: SETGLOBAL R181 K239    ; HideAllExceptImpact := R181
1043 [-]: CLOSURE   R181 155     ; R181 := closure(Function #156)
1044 [-]: MOVE      R0 R74       ; R0 := R74
1045 [-]: SETGLOBAL R181 K240    ; SetPartialFadeValues := R181
1046 [-]: CLOSURE   R181 156     ; R181 := closure(Function #157)
1047 [-]: MOVE      R0 R63       ; R0 := R63
1048 [-]: MOVE      R0 R62       ; R0 := R62
1049 [-]: MOVE      R0 R9        ; R0 := R9
1050 [-]: MOVE      R0 R7        ; R0 := R7
1051 [-]: SETGLOBAL R181 K241    ; OnComboHitMultiplier := R181
1052 [-]: LOADNIL   R181 R181    ; R181 := nil
1053 [-]: LOADKB    R182 0 0     ; R182 := false
1054 [-]: CLOSURE   R183 157     ; R183 := closure(Function #158)
1055 [-]: MOVE      R0 R182      ; R0 := R182
1056 [-]: SETGLOBAL R183 K242    ; Close_Dialog := R183
1057 [-]: CLOSURE   R183 158     ; R183 := closure(Function #159)
1058 [-]: MOVE      R0 R181      ; R0 := R181
1059 [-]: CLOSURE   R184 159     ; R184 := closure(Function #160)
1060 [-]: MOVE      R0 R8        ; R0 := R8
1061 [-]: MOVE      R0 R183      ; R0 := R183
1062 [-]: MOVE      R0 R182      ; R0 := R182
1063 [-]: MOVE      R0 R9        ; R0 := R9
1064 [-]: SETGLOBAL R184 K243    ; HUD_OnFindExternalSessionComplete := R184
1065 [-]: CLOSURE   R184 160     ; R184 := closure(Function #161)
1066 [-]: MOVE      R0 R182      ; R0 := R182
1067 [-]: MOVE      R0 R181      ; R0 := R181
1068 [-]: MOVE      R0 R9        ; R0 := R9
1069 [-]: SETGLOBAL R184 K244    ; HUD_ExternalGameReady := R184
1070 [-]: CLOSURE   R184 161     ; R184 := closure(Function #162)
1071 [-]: MOVE      R0 R20       ; R0 := R20
1072 [-]: MOVE      R0 R6        ; R0 := R6
1073 [-]: SETGLOBAL R184 K245    ; SwitchSpectator := R184
1074 [-]: CLOSURE   R184 162     ; R184 := closure(Function #163)
1075 [-]: MOVE      R0 R131      ; R0 := R131
1076 [-]: SETGLOBAL R184 K246    ; SetiOSLayout := R184
1077 [-]: CLOSURE   R184 163     ; R184 := closure(Function #164)
1078 [-]: MOVE      R0 R132      ; R0 := R132
1079 [-]: SETGLOBAL R184 K247    ; SetiOSCustomLayout := R184
1080 [-]: CLOSURE   R184 164     ; R184 := closure(Function #165)
1081 [-]: SETGLOBAL R184 K248    ; SetMiniGameScore := R184
1082 [-]: CLOSURE   R184 165     ; R184 := closure(Function #166)
1083 [-]: MOVE      R0 R28       ; R0 := R28
1084 [-]: CLOSURE   R185 166     ; R185 := closure(Function #167)
1085 [-]: MOVE      R0 R87       ; R0 := R87
1086 [-]: MOVE      R0 R184      ; R0 := R184
1087 [-]: SETGLOBAL R185 K249    ; InitMiniGameMode := R185
1088 [-]: CLOSURE   R185 167     ; R185 := closure(Function #168)
1089 [-]: MOVE      R0 R43       ; R0 := R43
1090 [-]: SETGLOBAL R185 K250    ; IsMissionTimerUp := R185
1091 [-]: CLOSURE   R185 168     ; R185 := closure(Function #169)
1092 [-]: SETGLOBAL R185 K251    ; ForceOpenScreenFromTopMenu := R185
1093 [-]: CLOSURE   R185 169     ; R185 := closure(Function #170)
1094 [-]: MOVE      R0 R164      ; R0 := R164
1095 [-]: MOVE      R0 R28       ; R0 := R28
1096 [-]: SETGLOBAL R185 K252    ; OnPowerModifierHeld := R185
1097 [-]: CLOSURE   R185 170     ; R185 := closure(Function #171)
1098 [-]: MOVE      R0 R7        ; R0 := R7
1099 [-]: SETGLOBAL R185 K253    ; Disconnect := R185
1100 [-]: CLOSURE   R185 171     ; R185 := closure(Function #172)
1101 [-]: MOVE      R0 R4        ; R0 := R4
1102 [-]: CLOSURE   R186 172     ; R186 := closure(Function #173)
1103 [-]: MOVE      R0 R28       ; R0 := R28
1104 [-]: MOVE      R0 R80       ; R0 := R80
1105 [-]: MOVE      R0 R82       ; R0 := R82
1106 [-]: MOVE      R0 R4        ; R0 := R4
1107 [-]: MOVE      R0 R7        ; R0 := R7
1108 [-]: MOVE      R0 R139      ; R0 := R139
1109 [-]: MOVE      R0 R33       ; R0 := R33
1110 [-]: MOVE      R0 R185      ; R0 := R185
1111 [-]: SETGLOBAL R186 K254    ; OnInspect := R186
1112 [-]: CLOSURE   R186 173     ; R186 := closure(Function #174)
1113 [-]: CLOSURE   R187 174     ; R187 := closure(Function #175)
1114 [-]: MOVE      R0 R7        ; R0 := R7
1115 [-]: SETGLOBAL R187 K255    ; SyndicatePowerUp := R187
1116 [-]: CLOSURE   R187 175     ; R187 := closure(Function #176)
1117 [-]: MOVE      R0 R7        ; R0 := R7
1118 [-]: MOVE      R0 R19       ; R0 := R19
1119 [-]: MOVE      R0 R186      ; R0 := R186
1120 [-]: SETGLOBAL R187 K256    ; SyndicatePowerActivated := R187
1121 [-]: CLOSURE   R187 176     ; R187 := closure(Function #177)
1122 [-]: CLOSURE   R188 177     ; R188 := closure(Function #178)
1123 [-]: SETGLOBAL R188 K257    ; SimarisScanChallengeHack := R188
1124 [-]: CLOSURE   R188 178     ; R188 := closure(Function #179)
1125 [-]: MOVE      R0 R9        ; R0 := R9
1126 [-]: MOVE      R0 R187      ; R0 := R187
1127 [-]: SETGLOBAL R188 K258    ; ShowStandingEarned := R188
1128 [-]: CLOSURE   R188 179     ; R188 := closure(Function #180)
1129 [-]: MOVE      R0 R64       ; R0 := R64
1130 [-]: MOVE      R0 R4        ; R0 := R4
1131 [-]: MOVE      R0 R21       ; R0 := R21
1132 [-]: MOVE      R0 R28       ; R0 := R28
1133 [-]: MOVE      R0 R42       ; R0 := R42
1134 [-]: SETGLOBAL R188 K259    ; IconCacheFlushed := R188
1135 [-]: CLOSURE   R188 180     ; R188 := closure(Function #181)
1136 [-]: MOVE      R0 R60       ; R0 := R60
1137 [-]: MOVE      R0 R92       ; R0 := R92
1138 [-]: MOVE      R0 R7        ; R0 := R7
1139 [-]: SETGLOBAL R188 K260    ; CreateTreasureHuntFailTimer := R188
1140 [-]: CLOSURE   R188 181     ; R188 := closure(Function #182)
1141 [-]: MOVE      R0 R91       ; R0 := R91
1142 [-]: MOVE      R0 R60       ; R0 := R60
1143 [-]: SETGLOBAL R188 K261    ; DestroyTreasureHuntFailTimer := R188
1144 [-]: CLOSURE   R188 182     ; R188 := closure(Function #183)
1145 [-]: MOVE      R0 R37       ; R0 := R37
1146 [-]: MOVE      R0 R9        ; R0 := R9
1147 [-]: MOVE      R0 R23       ; R0 := R23
1148 [-]: SETGLOBAL R188 K262    ; OnPreDeath := R188
1149 [-]: CLOSURE   R188 183     ; R188 := closure(Function #184)
1150 [-]: MOVE      R0 R27       ; R0 := R27
1151 [-]: MOVE      R0 R39       ; R0 := R39
1152 [-]: SETGLOBAL R188 K263    ; OnNewReticleMovie := R188
1153 [-]: CLOSURE   R188 184     ; R188 := closure(Function #185)
1154 [-]: SETGLOBAL R188 K264    ; OnFrameEnter := R188
1155 [-]: CLOSURE   R188 185     ; R188 := closure(Function #186)
1156 [-]: MOVE      R0 R9        ; R0 := R9
1157 [-]: MOVE      R0 R39       ; R0 := R39
1158 [-]: MOVE      R0 R7        ; R0 := R7
1159 [-]: SETGLOBAL R188 K265    ; OnPerfectReload := R188
1160 [-]: CLOSURE   R188 186     ; R188 := closure(Function #187)
1161 [-]: MOVE      R0 R154      ; R0 := R154
1162 [-]: MOVE      R0 R72       ; R0 := R72
1163 [-]: MOVE      R0 R83       ; R0 := R83
1164 [-]: MOVE      R0 R19       ; R0 := R19
1165 [-]: MOVE      R0 R61       ; R0 := R61
1166 [-]: MOVE      R0 R178      ; R0 := R178
1167 [-]: SETGLOBAL R188 K266    ; OnGamepadTransition := R188
1168 [-]: CLOSURE   R188 187     ; R188 := closure(Function #188)
1169 [-]: MOVE      R0 R87       ; R0 := R87
1170 [-]: SETGLOBAL R188 K267    ; SetGenericMessageScale := R188
1171 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 324
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 329
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 333
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x4fccd182]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 337
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       3
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Initialized"]
  3 [-]: TEST      R2 1         ; if R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mDispatchingQueuedFuncs"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: VARARG    R3 0         ; R3 := ...
 12 [-]: CALL      R2 0 1       ; R2(R3,...)
 13 [-]: JMP       35           ; PC := 35
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0x33bdd652
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x23d5322f]
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: VARARG    R6 0         ; R6 := ...
 20 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 21 [-]: CALL      R2 3 1       ; R2(R3,R4)
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: LEN       R2 R2        ; R2 := # R2
 24 [-]: LT        0 K4 R2      ; if 400.000000 >= R2 then PC := 35
 25 [-]: JMP       35           ; PC := 35
 26 [-]: GETGLOBAL R2 K5        ; R2 := 0x0032441c
 27 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["functionQueueOverflow"]
 28 [-]: EQ        0 R2 K7      ; if R2 ~= nil then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R2 K8        ; R2 := 0x484742b6
 31 [-]: LOADK     R3 K9        ; R3 := "HudRedux queue overflow"
 32 [-]: CALL      R2 2 1       ; R2(R3)
 33 [-]: GETGLOBAL R2 K5        ; R2 := 0x0032441c
 34 [-]: SETTABLE  R2 K6 K10    ; R2["functionQueueOverflow"] := true
 35 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 354
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x76ea806b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x3f3ae64c]
  3 [-]: CONST     R3 0         ; R3 := 0.000000
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 51
  9 [-]: JMP       51           ; PC := 51
 10 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1[0x40e9c32b]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x957b8ee0]
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 16 [-]: GETGLOBAL R4 K5        ; R4 := 0x89326c93
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 51
 19 [-]: JMP       51           ; PC := 51
 20 [-]: GETGLOBAL R3 K5        ; R3 := 0x89326c93
 21 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x7f8e810c]
 22 [-]: GETGLOBAL R5 K7        ; R5 := gHealthShieldDisplayType
 23 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 24 [-]: GETGLOBAL R4 K8        ; R4 := 0xc8802016
 25 [-]: MOVE      R5 R3        ; R5 := R3
 26 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 27 [-]: JMP       30           ; PC := 30
 28 [-]: SELF      R9 R8 K9     ; R10 := R8; R9 := R8[0x087cbd3f]
 29 [-]: CALL      R9 2 1       ; R9(R10)
 30 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 28; R6 := R7 end
 31 [-]: JMP       28           ; PC := 28
 32 [-]: GETGLOBAL R9 K5        ; R9 := 0x89326c93
 33 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0xfb64e76c]
 34 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 35 [-]: GETGLOBAL R10 K2       ; R10 := 0x7b998233
 36 [-]: MOVE      R11 R9       ; R11 := R9
 37 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 38 [-]: TEST      R10 1        ; if R10 then PC := 51
 39 [-]: JMP       51           ; PC := 51
 40 [-]: SELF      R10 R9 K11   ; R11 := R9; R10 := R9[0x474501e1]
 41 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 42 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
 43 [-]: MOVE      R12 R10      ; R12 := R10
 44 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 45 [-]: TEST      R11 1        ; if R11 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: SELF      R11 R10 K12  ; R12 := R10; R11 := R10[0xacf046ff]
 48 [-]: CALL      R11 2 1      ; R11(R12)
 49 [-]: SELF      R11 R10 K13  ; R12 := R10; R11 := R10[0x3b6bd6b1]
 50 [-]: CALL      R11 2 1      ; R11(R12)
 51 [-]: GETGLOBAL R11 K14      ; R11 := 0x53a48847
 52 [-]: GETGLOBAL R12 K15      ; R12 := 0x25d99d89
 53 [-]: LOADK     R13 K16      ; R13 := "OnProfileSaved"
 54 [-]: CALL      R11 3 1      ; R11(R12,R13)
 55 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 382
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xef9a3ee6]
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 10 [-]: RETURN    R1 0         ; return R1,...
 11 [-]: GETGLOBAL R1 K2        ; R1 := 0x0032441c
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["UIColor_White"]
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 389
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: CONST     R1 0         ; R1 := 0.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x33bdd652
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xf21b1d8e]
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["List"]
  5 [-]: CLOSURE   R4 0         ; R4 := closure(Function #7.1)
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0xc8802016
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["List"]
  9 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 10 [-]: JMP       89           ; PC := 89
 11 [-]: GETTABLE  R7 R6 K4     ; R7 := R6["NeedsInit"]
 12 [-]: TEST      R7 1         ; if R7 then PC := 89
 13 [-]: JMP       89           ; PC := 89
 14 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["Removing"]
 15 [-]: TEST      R7 1         ; if R7 then PC := 89
 16 [-]: JMP       89           ; PC := 89
 17 [-]: GETTABLE  R7 R6 K6     ; R7 := R6["Data"]
 18 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["IgnoreStacking"]
 19 [-]: TEST      R7 1         ; if R7 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETTABLE  R7 R6 K6     ; R7 := R6["Data"]
 22 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["Visible"]
 23 [-]: EQ        0 R7 K9      ; if R7 ~= false then PC := 47
 24 [-]: JMP       47           ; PC := 47
 25 [-]: GETTABLE  R7 R6 K6     ; R7 := R6["Data"]
 26 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["OffsetY"]
 27 [-]: GETTABLE  R8 R6 K6     ; R8 := R6["Data"]
 28 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["Static"]
 29 [-]: TEST      R8 0         ; if not R8 then PC := 40
 30 [-]: JMP       40           ; PC := 40
 31 [-]: GETUPVAL  R8 U0        ; R8 := U0
 32 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0xf4ed1581]
 33 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 34 [-]: TEST      R8 0         ; if not R8 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: GETUPVAL  R8 U0        ; R8 := U0
 37 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x14959e23]
 38 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 39 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 40 [-]: GETGLOBAL R8 K14       ; R8 := 0xae91e43b
 41 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0x67bc869f]
 42 [-]: GETTABLE  R10 R6 K16   ; R10 := R6["ClipName"]
 43 [-]: CONST     R11 1        ; R11 := 1.000000
 44 [-]: MOVE      R12 R7       ; R12 := R7
 45 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 46 [-]: JMP       76           ; PC := 76
 47 [-]: GETTABLE  R8 R6 K6     ; R8 := R6["Data"]
 48 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["OffsetY"]
 49 [-]: ADD       R8 R1 R8     ; R8 := R1 + R8
 50 [-]: GETGLOBAL R9 K14       ; R9 := 0xae91e43b
 51 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x67bc869f]
 52 [-]: GETTABLE  R11 R6 K16   ; R11 := R6["ClipName"]
 53 [-]: CONST     R12 1        ; R12 := 1.000000
 54 [-]: MOVE      R13 R8       ; R13 := R8
 55 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 56 [-]: GETTABLE  R9 R6 K6     ; R9 := R6["Data"]
 57 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["Height"]
 58 [-]: GETTABLE  R10 R6 K6    ; R10 := R6["Data"]
 59 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["OffsetY"]
 60 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
 61 [-]: LE        0 K18 R9     ; if 0.000000 > R9 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: GETTABLE  R9 R6 K6     ; R9 := R6["Data"]
 64 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["Height"]
 65 [-]: ADD       R9 R1 R9     ; R9 := R1 + R9
 66 [-]: GETTABLE  R10 R6 K6    ; R10 := R6["Data"]
 67 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["OffsetY"]
 68 [-]: ADD       R1 R9 R10    ; R1 := R9 + R10
 69 [-]: GETTABLE  R9 R6 K6     ; R9 := R6["Data"]
 70 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["Padding"]
 71 [-]: EQ        1 R9 K20     ; if R9 == nil then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: GETTABLE  R9 R6 K6     ; R9 := R6["Data"]
 74 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["Padding"]
 75 [-]: ADD       R1 R1 R9     ; R1 := R1 + R9
 76 [-]: GETTABLE  R9 R6 K6     ; R9 := R6["Data"]
 77 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["OffsetX"]
 78 [-]: EQ        1 R9 K18     ; if R9 == 0.000000 then PC := 89
 79 [-]: JMP       89           ; PC := 89
 80 [-]: GETGLOBAL R9 K14       ; R9 := 0xae91e43b
 81 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x67bc869f]
 82 [-]: GETTABLE  R11 R6 K16   ; R11 := R6["ClipName"]
 83 [-]: CONST     R12 0        ; R12 := 0.000000
 84 [-]: GETTABLE  R13 R6 K22   ; R13 := R6["BaseX"]
 85 [-]: GETTABLE  R14 R6 K6    ; R14 := R6["Data"]
 86 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["OffsetX"]
 87 [-]: ADD       R13 R13 R14  ; R13 := R13 + R14
 88 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 89 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 11; R4 := R5 end
 90 [-]: JMP       11           ; PC := 11
 91 [-]: GETUPVAL  R9 U1        ; R9 := U1
 92 [-]: EQ        1 R9 R1      ; if R9 == R1 then PC := 114
 93 [-]: JMP       114          ; PC := 114
 94 [-]: SETUPVAL  R1 U1        ; U82 := R1
 95 [-]: GETGLOBAL R9 K23       ; R9 := 0xcfc01047
 96 [-]: GETUPVAL  R10 U2       ; R10 := U2
 97 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 98 [-]: JMP       112          ; PC := 112
 99 [-]: GETTABLE  R14 R13 K24  ; R14 := R13["ApplyTrackerOffset"]
100 [-]: TEST      R14 0        ; if not R14 then PC := 112
101 [-]: JMP       112          ; PC := 112
102 [-]: GETGLOBAL R14 K25      ; R14 := 0x7b998233
103 [-]: GETTABLE  R15 R13 K26  ; R15 := R13["Movie"]
104 [-]: CALL      R14 2 2      ; R14 := R14(R15)
105 [-]: TEST      R14 1        ; if R14 then PC := 112
106 [-]: JMP       112          ; PC := 112
107 [-]: GETTABLE  R14 R13 K26  ; R14 := R13["Movie"]
108 [-]: SELF      R14 R14 K27  ; R15 := R14; R14 := R14[0xe4162eed]
109 [-]: LOADK     R16 K24      ; R16 := "ApplyTrackerOffset"
110 [-]: MOVE      R17 R1       ; R17 := R1
111 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
112 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 99; R11 := R12 end
113 [-]: JMP       99           ; PC := 99
114 [-]: RETURN    R0 1         ; return 


; Function #7.1:
;
; Name:            
; Defined at line: 392
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Data"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SortPriority"]
  3 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Data"]
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["SortPriority"]
  5 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["Index"]
  8 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["Index"]
  9 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 12
 12 [-]: LOADKB    R2 1 0       ; R2 := true
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Data"]
 16 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SortPriority"]
 17 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Data"]
 18 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["SortPriority"]
 19 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 22
 22 [-]: LOADKB    R2 1 0       ; R2 := true
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 433
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x6f72d56e]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 437
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x1a41a3c1]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 441
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: GETTABLE  R7 R7 K0     ; R7 := R7[0x8ee923fe]
  3 [-]: MOVE      R8 R0        ; R8 := R0
  4 [-]: MOVE      R9 R1        ; R9 := R1
  5 [-]: MOVE      R10 R2       ; R10 := R2
  6 [-]: MOVE      R11 R3       ; R11 := R3
  7 [-]: MOVE      R12 R4       ; R12 := R4
  8 [-]: MOVE      R13 R5       ; R13 := R5
  9 [-]: MOVE      R14 R6       ; R14 := R6
 10 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 11 [-]: RETURN    R7 0         ; return R7,...
 12 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 447
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADKB    R4 1 0       ; R4 := true
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x20b98db3]
  9 [-]: LOADK     R3 K3        ; R3 := "QuestMessage.Text.text"
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x91a24e4b]
 14 [-]: LOADK     R3 K5        ; R3 := "QuestMessage.Text"
 15 [-]: CONST     R4 33        ; R4 := 33.000000
 16 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 17 [-]: MUL       R2 R1 K6     ; R2 := R1 * 1.450000
 18 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 19 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x5f56eeab]
 20 [-]: LOADK     R5 K5        ; R5 := "QuestMessage.Text"
 21 [-]: CONST     R6 29        ; R6 := 29.000000
 22 [-]: LOADK     R7 K8        ; R7 := ""
 23 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 24 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 25 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x67bc869f]
 26 [-]: LOADK     R5 K10       ; R5 := "QuestMessage"
 27 [-]: CONST     R6 5         ; R6 := 5.000000
 28 [-]: CONST     R7 100       ; R7 := 100.000000
 29 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 30 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 31 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x67bc869f]
 32 [-]: LOADK     R5 K10       ; R5 := "QuestMessage"
 33 [-]: CONST     R6 6         ; R6 := 6.000000
 34 [-]: CONST     R7 100       ; R7 := 100.000000
 35 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 36 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 37 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x67bc869f]
 38 [-]: LOADK     R5 K11       ; R5 := "QuestMessage.Line"
 39 [-]: CONST     R6 12        ; R6 := 12.000000
 40 [-]: CONST     R7 1         ; R7 := 1.000000
 41 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 42 [-]: GETUPVAL  R3 U0        ; R3 := U0
 43 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0xf6e70fb6]
 44 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 45 [-]: LOADNIL   R5 R5        ; R5 := nil
 46 [-]: LOADK     R6 K5        ; R6 := "QuestMessage.Text"
 47 [-]: MOVE      R7 R0        ; R7 := R0
 48 [-]: LOADNIL   R8 R8        ; R8 := nil
 49 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 50 [-]: GETGLOBAL R3 K13       ; R3 := 0x25312c9b
 51 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 52 [-]: LOADK     R5 K10       ; R5 := "QuestMessage"
 53 [-]: CONST     R6 8         ; R6 := 8.000000
 54 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 55 [-]: CONST     R8 10        ; R8 := 10.000000
 56 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 57 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 58 [-]: CONST     R9 100       ; R9 := 100.000000
 59 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 60 [-]: LOADK     R9 K15       ; R9 := 0.350000
 61 [-]: CONST     R10 0        ; R10 := 0.000000
 62 [-]: LOADNIL   R11 R11      ; R11 := nil
 63 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 64 [-]: GETGLOBAL R3 K13       ; R3 := 0x25312c9b
 65 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 66 [-]: LOADK     R5 K11       ; R5 := "QuestMessage.Line"
 67 [-]: CONST     R6 8         ; R6 := 8.000000
 68 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 69 [-]: CONST     R8 12        ; R8 := 12.000000
 70 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 71 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 72 [-]: MOVE      R9 R2        ; R9 := R2
 73 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 74 [-]: LOADK     R9 K15       ; R9 := 0.350000
 75 [-]: CONST     R10 0        ; R10 := 0.000000
 76 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 77 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 467
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: LOADK     R2 K2        ; R2 := "QuestMessage"
  4 [-]: CONST     R3 8         ; R3 := 8.000000
  5 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  6 [-]: CONST     R5 10        ; R5 := 10.000000
  7 [-]: CONST     R6 5         ; R6 := 5.000000
  8 [-]: CONST     R7 6         ; R7 := 6.000000
  9 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 10 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 11 [-]: CONST     R6 0         ; R6 := 0.000000
 12 [-]: CONST     R7 140       ; R7 := 140.000000
 13 [-]: CONST     R8 140       ; R8 := 140.000000
 14 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 15 [-]: LOADK     R6 K4        ; R6 := 0.350000
 16 [-]: CONST     R7 0         ; R7 := 0.000000
 17 [-]: LOADNIL   R8 R8        ; R8 := nil
 18 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 19 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 474
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == "" then PC := 32
  2 [-]: JMP       32           ; PC := 32
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x0032441c
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["StalkerMode"]
  5 [-]: TEST      R1 1         ; if R1 then PC := 32
  6 [-]: JMP       32           ; PC := 32
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x42b04007]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: LOADKB    R4 1 0       ; R4 := true
 11 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 12 [-]: GETGLOBAL R2 K5        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["GenericMessageNoAnimateTyping"]
 14 [-]: TEST      R2 0         ; if not R2 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x5f56eeab]
 18 [-]: LOADK     R4 K8        ; R4 := "GenericMessage.Text"
 19 [-]: CONST     R5 29        ; R5 := 29.000000
 20 [-]: MOVE      R6 R1        ; R6 := R1
 21 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[0xf6e70fb6]
 25 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 26 [-]: LOADNIL   R4 R4        ; R4 := nil
 27 [-]: LOADK     R5 K8        ; R5 := "GenericMessage.Text"
 28 [-]: MOVE      R6 R1        ; R6 := R1
 29 [-]: LOADNIL   R7 R7        ; R7 := nil
 30 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 33 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x5f56eeab]
 34 [-]: LOADK     R4 K8        ; R4 := "GenericMessage.Text"
 35 [-]: CONST     R5 29        ; R5 := 29.000000
 36 [-]: LOADK     R6 K0        ; R6 := ""
 37 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 38 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 489
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbd2e96ea]
  4 [-]: CONST     R3 5         ; R3 := 5.000000
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Hide"]
  7 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  8 [-]: SETTABLE  R0 K0 R1     ; R0["timerId"] := R1
  9 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 495
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x0469f296
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SETTABLE  R0 K0 R1     ; R0["mTimerName"] := R1
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CLOSURE   R1 0         ; R1 := closure(Function #15.1)
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: SETTABLE  R0 K2 R1     ; R0["Show"] := R1
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: CLOSURE   R1 1         ; R1 := closure(Function #15.2)
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETUPVAL  R0 U3        ; R0 := U3
 14 [-]: GETUPVAL  R0 U4        ; R0 := U4
 15 [-]: GETUPVAL  R0 U5        ; R0 := U5
 16 [-]: SETTABLE  R0 K3 R1     ; R0["Update"] := R1
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: CLOSURE   R1 2         ; R1 := closure(Function #15.3)
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETUPVAL  R0 U4        ; R0 := U4
 22 [-]: SETTABLE  R0 K4 R1     ; R0["Hide"] := R1
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETUPVAL  R1 U1        ; R1 := U1
 25 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x4c3dfdb3]
 26 [-]: NEWTABLE  R2 0 2       ; R2 := {}
 27 [-]: SETTABLE  R2 K7 K8     ; R2["time"] := -1.000000
 28 [-]: SETTABLE  R2 K9 K10    ; R2["timerStopped"] := true
 29 [-]: GETUPVAL  R3 U0        ; R3 := U0
 30 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Update"]
 31 [-]: CLOSURE   R4 3         ; R4 := closure(Function #15.4)
 32 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 33 [-]: SETTABLE  R0 K5 R1     ; R0["timer"] := R1
 34 [-]: GETGLOBAL R0 K11       ; R0 := 0xae91e43b
 35 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x67bc869f]
 36 [-]: LOADK     R2 K13       ; R2 := "MiniMapContainer.MissionCountdown"
 37 [-]: CONST     R3 10        ; R3 := 10.000000
 38 [-]: CONST     R4 0         ; R4 := 0.000000
 39 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 40 [-]: GETGLOBAL R0 K11       ; R0 := 0xae91e43b
 41 [-]: SELF      R0 R0 K14    ; R1 := R0; R0 := R0[0x20b98db3]
 42 [-]: LOADK     R2 K15       ; R2 := "MiniMapContainer.MissionCountdown.Title.text"
 43 [-]: LOADK     R3 K16       ; R3 := "/Lotus/Language/Menu/AlertPopup_Time"
 44 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 45 [-]: GETGLOBAL R0 K11       ; R0 := 0xae91e43b
 46 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x67bc869f]
 47 [-]: LOADK     R2 K17       ; R2 := "MiniMapContainer.DefenseTarget.LostHealth"
 48 [-]: CONST     R3 10        ; R3 := 10.000000
 49 [-]: CONST     R4 0         ; R4 := 0.000000
 50 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 51 [-]: GETGLOBAL R0 K11       ; R0 := 0xae91e43b
 52 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x67bc869f]
 53 [-]: LOADK     R2 K18       ; R2 := "MiniMapContainer.DefenseTarget.LostHealth.Label"
 54 [-]: CONST     R3 36        ; R3 := 36.000000
 55 [-]: GETGLOBAL R4 K19       ; R4 := 0x0032441c
 56 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["UIColor_Red"]
 57 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 58 [-]: GETGLOBAL R0 K11       ; R0 := 0xae91e43b
 59 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x67bc869f]
 60 [-]: LOADK     R2 K21       ; R2 := "BorderBox"
 61 [-]: CONST     R3 10        ; R3 := 10.000000
 62 [-]: CONST     R4 0         ; R4 := 0.000000
 63 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 64 [-]: RETURN    R0 1         ; return 


; Function #15.1:
;
; Name:            
; Defined at line: 498
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x25312c9b
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  3 [-]: LOADK     R4 K2        ; R4 := "BorderBox"
  4 [-]: CONST     R5 0         ; R5 := 0.000000
  5 [-]: NEWTABLE  R6 1 0       ; R6 := {}
  6 [-]: CONST     R7 10        ; R7 := 10.000000
  7 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
  8 [-]: NEWTABLE  R7 1 0       ; R7 := {}
  9 [-]: CONST     R8 100       ; R8 := 100.000000
 10 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 11 [-]: CONST     R8 0         ; R8 := 0.250000
 12 [-]: CONST     R9 0         ; R9 := 0.000000
 13 [-]: LOADNIL   R10 R10      ; R10 := nil
 14 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0xf6e70fb6]
 17 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 18 [-]: LOADNIL   R4 R4        ; R4 := nil
 19 [-]: LOADK     R5 K5        ; R5 := "BorderBox.Text"
 20 [-]: MOVE      R6 R0        ; R6 := R0
 21 [-]: MOVE      R7 R1        ; R7 := R1
 22 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 23 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x67bc869f]
 25 [-]: LOADK     R4 K7        ; R4 := "BorderBox.Background"
 26 [-]: CONST     R5 12        ; R5 := 12.000000
 27 [-]: GETGLOBAL R6 K1        ; R6 := 0xae91e43b
 28 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x91a24e4b]
 29 [-]: LOADK     R8 K5        ; R8 := "BorderBox.Text"
 30 [-]: CONST     R9 33        ; R9 := 33.000000
 31 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 32 [-]: ADD       R6 R6 K9     ; R6 := R6 + 50.000000
 33 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 34 [-]: RETURN    R0 1         ; return 


; Function #15.2:
;
; Name:            
; Defined at line: 506
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["time"]
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["timerStopped"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: SETTABLE  R2 K2 K3     ; R2["isEnabled"] := false
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x6dc7ed4b]
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mTimerName"]
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x56c01834]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0xe0f7ce9e]
 18 [-]: LOADKB    R3 1 0       ; R3 := true
 19 [-]: CALL      R2 2 1       ; R2(R3)
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: JMP       129          ; PC := 129
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["isEnabled"]
 24 [-]: TEST      R2 1         ; if R2 then PC := 67
 25 [-]: JMP       67           ; PC := 67
 26 [-]: LE        0 K8 R1      ; if 0.000000 > R1 then PC := 67
 27 [-]: JMP       67           ; PC := 67
 28 [-]: GETGLOBAL R2 K9        ; R2 := 0x25312c9b
 29 [-]: GETGLOBAL R3 K10       ; R3 := 0xae91e43b
 30 [-]: LOADK     R4 K11       ; R4 := "MiniMapContainer.MissionCountdown"
 31 [-]: CONST     R5 0         ; R5 := 0.000000
 32 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 33 [-]: CONST     R7 10        ; R7 := 10.000000
 34 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 35 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 36 [-]: CONST     R8 100       ; R8 := 100.000000
 37 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 38 [-]: LOADK     R8 K13       ; R8 := 0.150000
 39 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 40 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 41 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x42b04007]
 42 [-]: GETGLOBAL R4 K15       ; R4 := 0x64fb1586
 43 [-]: GETUPVAL  R5 U1        ; R5 := U1
 44 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x6dc7ed4b]
 45 [-]: GETUPVAL  R7 U0        ; R7 := U0
 46 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mTimerName"]
 47 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 48 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 49 [-]: LOADKB    R5 1 0       ; R5 := true
 50 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 51 [-]: GETGLOBAL R3 K16       ; R3 := 0x7f5022cf
 52 [-]: GETTABLE  R3 R3 K17    ; R3 := R3[0x41e2ae25]
 53 [-]: MOVE      R4 R2        ; R4 := R2
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 129
 56 [-]: JMP       129          ; PC := 129
 57 [-]: GETUPVAL  R3 U0        ; R3 := U0
 58 [-]: GETTABLE  R3 R3 K18    ; R3 := R3[0x587aa683]
 59 [-]: MOVE      R4 R2        ; R4 := R2
 60 [-]: GETUPVAL  R5 U2        ; R5 := U2
 61 [-]: CALL      R3 3 1       ; R3(R4,R5)
 62 [-]: GETUPVAL  R3 U0        ; R3 := U0
 63 [-]: SETTABLE  R3 K2 K19    ; R3["isEnabled"] := true
 64 [-]: GETUPVAL  R3 U0        ; R3 := U0
 65 [-]: SETTABLE  R3 K20 R2    ; R3["currentText"] := R2
 66 [-]: JMP       129          ; PC := 129
 67 [-]: GETUPVAL  R3 U0        ; R3 := U0
 68 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["isEnabled"]
 69 [-]: TEST      R3 0         ; if not R3 then PC := 129
 70 [-]: JMP       129          ; PC := 129
 71 [-]: LT        0 R1 K8      ; if R1 >= 0.000000 then PC := 129
 72 [-]: JMP       129          ; PC := 129
 73 [-]: GETUPVAL  R3 U0        ; R3 := U0
 74 [-]: SETTABLE  R3 K2 K3     ; R3["isEnabled"] := false
 75 [-]: GETUPVAL  R3 U1        ; R3 := U1
 76 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x6dc7ed4b]
 77 [-]: GETUPVAL  R5 U0        ; R5 := U0
 78 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mTimerName"]
 79 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 80 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x56c01834]
 81 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 82 [-]: TEST      R3 0         ; if not R3 then PC := 128
 83 [-]: JMP       128          ; PC := 128
 84 [-]: GETGLOBAL R3 K21       ; R3 := 0x7b998233
 85 [-]: GETGLOBAL R4 K22       ; R4 := _T
 86 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["missionTimerExpiryPortTrigger"]
 87 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 88 [-]: TEST      R3 1         ; if R3 then PC := 98
 89 [-]: JMP       98           ; PC := 98
 90 [-]: GETGLOBAL R3 K22       ; R3 := _T
 91 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["missionTimerExpiryPortTrigger"]
 92 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0x8eb2112d]
 93 [-]: GETGLOBAL R5 K15       ; R5 := 0x64fb1586
 94 [-]: GETGLOBAL R6 K22       ; R6 := _T
 95 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["missionTimerExpiryPortCommand"]
 96 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 97 [-]: CALL      R3 0 1       ; R3(R4,...)
 98 [-]: GETUPVAL  R3 U1        ; R3 := U1
 99 [-]: SELF      R3 R3 K26    ; R4 := R3; R3 := R3[0x4becc81a]
100 [-]: GETUPVAL  R5 U0        ; R5 := U0
101 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mTimerName"]
102 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
103 [-]: TEST      R3 0         ; if not R3 then PC := 122
104 [-]: JMP       122          ; PC := 122
105 [-]: GETGLOBAL R3 K10       ; R3 := 0xae91e43b
106 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x42b04007]
107 [-]: LOADK     R5 K27       ; R5 := "/Lotus/Language/Menu/HUD_MissionFailed"
108 [-]: LOADKB    R6 1 0       ; R6 := true
109 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
110 [-]: GETUPVAL  R4 U0        ; R4 := U0
111 [-]: GETTABLE  R4 R4 K18    ; R4 := R4[0x587aa683]
112 [-]: MOVE      R5 R3        ; R5 := R3
113 [-]: CALL      R4 2 1       ; R4(R5)
114 [-]: GETUPVAL  R4 U0        ; R4 := U0
115 [-]: SETTABLE  R4 K20 R3    ; R4["currentText"] := R3
116 [-]: GETUPVAL  R4 U3        ; R4 := U3
117 [-]: SELF      R4 R4 K28    ; R5 := R4; R4 := R4[0xbd2e96ea]
118 [-]: CONST     R6 1         ; R6 := 1.500000
119 [-]: GETUPVAL  R7 U4        ; R7 := U4
120 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
121 [-]: JMP       128          ; PC := 128
122 [-]: GETUPVAL  R4 U0        ; R4 := U0
123 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0xe0f7ce9e]
124 [-]: LOADKB    R5 1 0       ; R5 := true
125 [-]: CALL      R4 2 1       ; R4(R5)
126 [-]: GETUPVAL  R4 U0        ; R4 := U0
127 [-]: SETTABLE  R4 K20 K29   ; R4["currentText"] := ""
128 [-]: RETURN    R0 1         ; return 
129 [-]: GETUPVAL  R4 U1        ; R4 := U1
130 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4[0x6471c498]
131 [-]: GETUPVAL  R6 U0        ; R6 := U0
132 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mTimerName"]
133 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
134 [-]: TEST      R4 0         ; if not R4 then PC := 139
135 [-]: JMP       139          ; PC := 139
136 [-]: GETUPVAL  R4 U0        ; R4 := U0
137 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["mTotalTime"]
138 [-]: SUB       R1 R4 R1     ; R1 := R4 - R1
139 [-]: GETUPVAL  R4 U0        ; R4 := U0
140 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["isEnabled"]
141 [-]: TEST      R4 0         ; if not R4 then PC := 166
142 [-]: JMP       166          ; PC := 166
143 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
144 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x42b04007]
145 [-]: GETGLOBAL R6 K15       ; R6 := 0x64fb1586
146 [-]: GETUPVAL  R7 U1        ; R7 := U1
147 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7[0x6dc7ed4b]
148 [-]: GETUPVAL  R9 U0        ; R9 := U0
149 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["mTimerName"]
150 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
151 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
152 [-]: LOADKB    R7 1 0       ; R7 := true
153 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
154 [-]: GETUPVAL  R5 U0        ; R5 := U0
155 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["currentText"]
156 [-]: EQ        1 R5 R4      ; if R5 == R4 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: GETUPVAL  R5 U0        ; R5 := U0
159 [-]: SETTABLE  R5 K20 R4    ; R5["currentText"] := R4
160 [-]: GETGLOBAL R5 K10       ; R5 := 0xae91e43b
161 [-]: SELF      R5 R5 K32    ; R6 := R5; R5 := R5[0x5f56eeab]
162 [-]: LOADK     R7 K33       ; R7 := "BorderBox.Text"
163 [-]: CONST     R8 29        ; R8 := 29.000000
164 [-]: MOVE      R9 R4        ; R9 := R4
165 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
166 [-]: GETGLOBAL R5 K34       ; R5 := 0x5bced4c4
167 [-]: GETTABLE  R5 R5 K35    ; R5 := R5[0x55f27c30]
168 [-]: DIV       R6 R1 K36    ; R6 := R1 / 60.000000
169 [-]: CALL      R5 2 2       ; R5 := R5(R6)
170 [-]: GETGLOBAL R6 K34       ; R6 := 0x5bced4c4
171 [-]: GETTABLE  R6 R6 K35    ; R6 := R6[0x55f27c30]
172 [-]: MUL       R7 R5 K36    ; R7 := R5 * 60.000000
173 [-]: SUB       R7 R1 R7     ; R7 := R1 - R7
174 [-]: CALL      R6 2 2       ; R6 := R6(R7)
175 [-]: LT        0 R5 K37     ; if R5 >= 1.000000 then PC := 178
176 [-]: JMP       178          ; PC := 178
177 [-]: CONST     R5 0         ; R5 := 0.000000
178 [-]: LE        0 R1 K8      ; if R1 > 0.000000 then PC := 182
179 [-]: JMP       182          ; PC := 182
180 [-]: CONST     R5 0         ; R5 := 0.000000
181 [-]: CONST     R6 0         ; R6 := 0.000000
182 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
183 [-]: SELF      R7 R7 K32    ; R8 := R7; R7 := R7[0x5f56eeab]
184 [-]: LOADK     R9 K38       ; R9 := "MiniMapContainer.MissionCountdown.Time"
185 [-]: CONST     R10 29       ; R10 := 29.000000
186 [-]: GETGLOBAL R11 K16      ; R11 := 0x7f5022cf
187 [-]: GETTABLE  R11 R11 K39  ; R11 := R11[0xe8072ded]
188 [-]: LOADK     R12 K40      ; R12 := "%02.0f:%02.0f"
189 [-]: MOVE      R13 R5       ; R13 := R5
190 [-]: MOVE      R14 R6       ; R14 := R6
191 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
192 [-]: CALL      R7 0 1       ; R7(R8,...)
193 [-]: GETUPVAL  R7 U0        ; R7 := U0
194 [-]: SETTABLE  R7 K41 R5    ; R7["prevMinute"] := R5
195 [-]: RETURN    R0 1         ; return 


; Function #15.3:
;
; Name:            
; Defined at line: 581
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x6a16e12b]
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mTimerName"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: TEST      R1 1         ; if R1 then PC := 53
  7 [-]: JMP       53           ; PC := 53
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x775c858b]
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["timerId"]
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x25312c9b
 14 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 15 [-]: LOADK     R3 K6        ; R3 := "BorderBox"
 16 [-]: CONST     R4 8         ; R4 := 8.000000
 17 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 18 [-]: CONST     R6 10        ; R6 := 10.000000
 19 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 20 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 21 [-]: CONST     R7 0         ; R7 := 0.000000
 22 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 23 [-]: LOADK     R7 K8        ; R7 := 0.400000
 24 [-]: CONST     R8 0         ; R8 := 0.000000
 25 [-]: LOADNIL   R9 R9        ; R9 := nil
 26 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 27 [-]: GETUPVAL  R1 U0        ; R1 := U0
 28 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x1b852d9a]
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mTimerName"]
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: TEST      R1 0         ; if not R1 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R1 K10       ; R1 := 0x7b998233
 35 [-]: MOVE      R2 R0        ; R2 := R0
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: TEST      R1 1         ; if R1 then PC := 53
 38 [-]: JMP       53           ; PC := 53
 39 [-]: TEST      R0 0         ; if not R0 then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: GETGLOBAL R1 K4        ; R1 := 0x25312c9b
 42 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 43 [-]: LOADK     R3 K11       ; R3 := "MiniMapContainer.MissionCountdown"
 44 [-]: CONST     R4 0         ; R4 := 0.000000
 45 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 46 [-]: CONST     R6 10        ; R6 := 10.000000
 47 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 48 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 49 [-]: CONST     R7 0         ; R7 := 0.000000
 50 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 51 [-]: LOADK     R7 K12       ; R7 := 0.150000
 52 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 53 [-]: RETURN    R0 1         ; return 


; Function #15.4:
;
; Name:            
; Defined at line: 590
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["time"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["time"]
  3 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["timerStopped"]
  6 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["timerStopped"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 10
 10 [-]: LOADKB    R2 1 0       ; R2 := true
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 600
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R1 1         ; if R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R1 K0        ; R1 := ""
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7f5022cf
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0xa5c556b9]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: LOADK     R5 K3        ; R5 := "<p>"
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: TEST      R3 1         ; if R3 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R3 K1        ; R3 := 0x7f5022cf
 12 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x3f3e4d12]
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: MOVE      R1 R3        ; R1 := R3
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K5     ; R3 := R3[0xf6e70fb6]
 18 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 19 [-]: LOADNIL   R5 R5        ; R5 := nil
 20 [-]: MOVE      R6 R0        ; R6 := R0
 21 [-]: MOVE      R7 R1        ; R7 := R1
 22 [-]: MOVE      R8 R2        ; R8 := R2
 23 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 24 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 609
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #17.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K0 R1     ; R0["CalculatePosition"] := R1
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x67bc869f]
  7 [-]: LOADK     R2 K3        ; R2 := "AbilityPanel.AbilityMessage"
  8 [-]: CONST     R3 10        ; R3 := 10.000000
  9 [-]: CONST     R4 0         ; R4 := 0.000000
 10 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 11 [-]: RETURN    R0 1         ; return 


; Function #17.1:
;
; Name:            
; Defined at line: 611
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x91a24e4b]
  4 [-]: LOADK     R4 K3        ; R4 := "AbilityPanel.EnergyAmount"
  5 [-]: CONST     R5 33        ; R5 := 33.000000
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: SUB       R2 K4 R2     ; R2 := -20.000000 - R2
  8 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  9 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0x91a24e4b]
 10 [-]: LOADK     R5 K5        ; R5 := "AbilityPanel.AbilityMessage.Label"
 11 [-]: CONST     R6 33        ; R6 := 33.000000
 12 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 13 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 14 [-]: SETTABLE  R1 K0 R2     ; R1["newX"] := R2
 15 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 617
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x2ec867ea]
  8 [-]: EQ        0 R0 K2      ; if R0 ~= "false" then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 11
 11 [-]: LOADKB    R3 1 0       ; R3 := true
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K3        ; R1 := _T
 14 [-]: SETTABLE  R1 K4 K5     ; R1["reticleState"] := false
 15 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 624
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 43
  5 [-]: JMP       43           ; PC := 43
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["InventoryController"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["InventoryController"]
 19 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xac03381f]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 43
 22 [-]: JMP       43           ; PC := 43
 23 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 24 [-]: GETGLOBAL R2 K3        ; R2 := 0xbe190284
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 1         ; if R1 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R1 K3        ; R1 := 0xbe190284
 29 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xf2deaf69]
 30 [-]: GETGLOBAL R3 K5        ; R3 := gLotusSpeedballGameRulesType
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: TEST      R1 1         ; if R1 then PC := 43
 33 [-]: JMP       43           ; PC := 43
 34 [-]: GETUPVAL  R1 U0        ; R1 := U0
 35 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xe1bb46c1]
 36 [-]: EQ        0 R0 K7      ; if R0 ~= false then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 39
 39 [-]: LOADKB    R3 1 0       ; R3 := true
 40 [-]: CALL      R1 3 1       ; R1(R2,R3)
 41 [-]: GETGLOBAL R1 K8        ; R1 := _T
 42 [-]: SETTABLE  R1 K9 K10    ; R1["reticleState"] := true
 43 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 631
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "false" then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: LOADKB    R2 0 0       ; R2 := false
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: LOADKB    R2 1 0       ; R2 := true
  9 [-]: CALL      R1 2 1       ; R1(R2)
 10 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 639
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADKB    R0 1 0       ; R0 := true
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["IsAlternateHud"]
  7 [-]: TEST      R1 1         ; if R1 then PC := 32
  8 [-]: JMP       32           ; PC := 32
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xaade900e]
 11 [-]: LOADK     R3 K4        ; R3 := "Reticle"
 12 [-]: CONST     R4 11        ; R4 := 11.000000
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 15 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 32
 19 [-]: JMP       32           ; PC := 32
 20 [-]: GETUPVAL  R1 U1        ; R1 := U1
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x603d617e]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1[0xe4162eed]
 29 [-]: LOADK     R4 K8        ; R4 := "FadeAlpha"
 30 [-]: CONST     R5 100       ; R5 := 100.000000
 31 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 32 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 654
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x5e7f1652]
  8 [-]: EQ        0 R0 K2      ; if R0 ~= "false" then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 11
 11 [-]: LOADKB    R3 1 0       ; R3 := true
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 660
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "HealthAndShield.SuitAffinity"
  4 [-]: CONST     R3 11        ; R3 := 11.000000
  5 [-]: LOADKB    R4 0 0       ; R4 := false
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 664
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "HealthAndShield.SuitAffinity"
  4 [-]: CONST     R3 11        ; R3 := 11.000000
  5 [-]: LOADKB    R4 1 0       ; R4 := true
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 668
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0xe95b7a4b]
  3 [-]: LOADKB    R2 0 0       ; R2 := false
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 672
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0xe95b7a4b]
  3 [-]: LOADKB    R2 1 0       ; R2 := true
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 676
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0xfa221145]
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["HudScale"]
  7 [-]: GETUPVAL  R4 U2        ; R4 := U2
  8 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  9 [-]: SETTABLE  R0 K0 R1     ; R0["HudScalePadding"] := R1
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 11 [-]: GETUPVAL  R1 U3        ; R1 := U3
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R0 U3        ; R0 := U3
 16 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xfa221145]
 17 [-]: CALL      R0 2 1       ; R0(R1)
 18 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 56
 22 [-]: JMP       56           ; PC := 56
 23 [-]: LOADNIL   R0 R0        ; R0 := nil
 24 [-]: GETGLOBAL R1 K5        ; R1 := 0xcfc01047
 25 [-]: GETUPVAL  R2 U4        ; R2 := U4
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: JMP       54           ; PC := 54
 28 [-]: GETUPVAL  R6 U2        ; R6 := U2
 29 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x2de3d774]
 30 [-]: GETTABLE  R8 R5 K7     ; R8 := R5["Clip"]
 31 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 32 [-]: MOVE      R0 R6        ; R0 := R6
 33 [-]: GETUPVAL  R6 U3        ; R6 := U3
 34 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x31669273]
 35 [-]: GETTABLE  R8 R5 K9     ; R8 := R5["Movie"]
 36 [-]: GETTABLE  R9 R5 K7     ; R9 := R5["Clip"]
 37 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["x"]
 38 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["y"]
 39 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 40 [-]: GETTABLE  R6 R5 K12    ; R6 := R5["HandleHudScale"]
 41 [-]: TEST      R6 0         ; if not R6 then PC := 54
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 44 [-]: GETTABLE  R7 R5 K9     ; R7 := R5["Movie"]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: TEST      R6 1         ; if R6 then PC := 54
 47 [-]: JMP       54           ; PC := 54
 48 [-]: GETUPVAL  R6 U1        ; R6 := U1
 49 [-]: GETTABLE  R6 R6 K1     ; R6 := R6[0xfa221145]
 50 [-]: GETTABLE  R7 R5 K9     ; R7 := R5["Movie"]
 51 [-]: GETUPVAL  R8 U0        ; R8 := U0
 52 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["HudScale"]
 53 [-]: CALL      R6 3 1       ; R6(R7,R8)
 54 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
 55 [-]: JMP       28           ; PC := 28
 56 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 696
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x6b837788]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xaf9fda9f]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x091c120e]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LT        1 R0 R2      ; if R0 < R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x2cc9d281]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: LT        0 R1 R2      ; if R1 >= R2 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x34291f5c
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x056bfe8b]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 1         ; if R2 then PC := 30
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 23 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x091c120e]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: MOVE      R0 R2        ; R0 := R2
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 27 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x2cc9d281]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETGLOBAL R2 K5        ; R2 := 0x34291f5c
 31 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x056bfe8b]
 32 [-]: CALL      R2 1 2       ; R2 := R2()
 33 [-]: TEST      R2 0         ; if not R2 then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 36 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x091c120e]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: MOVE      R0 R2        ; R0 := R2
 39 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 40 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x2cc9d281]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: MOVE      R1 R2        ; R1 := R2
 43 [-]: CONST     R2 70        ; R2 := 70.000000
 44 [-]: GETUPVAL  R3 U0        ; R3 := U0
 45 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["HudScale"]
 46 [-]: DIV       R3 R0 R3     ; R3 := R0 / R3
 47 [-]: SUB       R4 R0 R3     ; R4 := R0 - R3
 48 [-]: GETUPVAL  R5 U0        ; R5 := U0
 49 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["HudScale"]
 50 [-]: DIV       R5 R1 R5     ; R5 := R1 / R5
 51 [-]: SUB       R6 R1 R5     ; R6 := R1 - R5
 52 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 53 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 54 [-]: LOADK     R9 K9        ; R9 := "PainTop"
 55 [-]: CONST     R10 0        ; R10 := 0.000000
 56 [-]: DIV       R11 R0 K10   ; R11 := R0 / 2.000000
 57 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 58 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 59 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 60 [-]: LOADK     R9 K9        ; R9 := "PainTop"
 61 [-]: CONST     R10 1        ; R10 := 1.000000
 62 [-]: DIV       R11 R6 K10   ; R11 := R6 / 2.000000
 63 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 64 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 65 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 66 [-]: LOADK     R9 K9        ; R9 := "PainTop"
 67 [-]: CONST     R10 12       ; R10 := 12.000000
 68 [-]: MOVE      R11 R3       ; R11 := R3
 69 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 70 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 71 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 72 [-]: LOADK     R9 K9        ; R9 := "PainTop"
 73 [-]: CONST     R10 13       ; R10 := 13.000000
 74 [-]: MOVE      R11 R2       ; R11 := R2
 75 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 76 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 77 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 78 [-]: LOADK     R9 K11       ; R9 := "PainBottom"
 79 [-]: CONST     R10 0        ; R10 := 0.000000
 80 [-]: DIV       R11 R0 K10   ; R11 := R0 / 2.000000
 81 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 82 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 83 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 84 [-]: LOADK     R9 K11       ; R9 := "PainBottom"
 85 [-]: CONST     R10 1        ; R10 := 1.000000
 86 [-]: DIV       R11 R6 K10   ; R11 := R6 / 2.000000
 87 [-]: ADD       R11 R5 R11   ; R11 := R5 + R11
 88 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 89 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 90 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 91 [-]: LOADK     R9 K11       ; R9 := "PainBottom"
 92 [-]: CONST     R10 12       ; R10 := 12.000000
 93 [-]: MOVE      R11 R3       ; R11 := R3
 94 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 95 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 96 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 97 [-]: LOADK     R9 K11       ; R9 := "PainBottom"
 98 [-]: CONST     R10 13       ; R10 := 13.000000
 99 [-]: MOVE      R11 R2       ; R11 := R2
100 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
101 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
102 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
103 [-]: LOADK     R9 K12       ; R9 := "PainLeft"
104 [-]: CONST     R10 0        ; R10 := 0.000000
105 [-]: DIV       R11 R4 K10   ; R11 := R4 / 2.000000
106 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
107 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
108 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
109 [-]: LOADK     R9 K12       ; R9 := "PainLeft"
110 [-]: CONST     R10 1        ; R10 := 1.000000
111 [-]: DIV       R11 R1 K10   ; R11 := R1 / 2.000000
112 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
113 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
114 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
115 [-]: LOADK     R9 K12       ; R9 := "PainLeft"
116 [-]: CONST     R10 12       ; R10 := 12.000000
117 [-]: MOVE      R11 R2       ; R11 := R2
118 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
119 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
120 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
121 [-]: LOADK     R9 K12       ; R9 := "PainLeft"
122 [-]: CONST     R10 13       ; R10 := 13.000000
123 [-]: MOVE      R11 R5       ; R11 := R5
124 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
125 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
126 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
127 [-]: LOADK     R9 K13       ; R9 := "PainRight"
128 [-]: CONST     R10 0        ; R10 := 0.000000
129 [-]: DIV       R11 R4 K10   ; R11 := R4 / 2.000000
130 [-]: ADD       R11 R3 R11   ; R11 := R3 + R11
131 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
132 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
133 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
134 [-]: LOADK     R9 K13       ; R9 := "PainRight"
135 [-]: CONST     R10 1        ; R10 := 1.000000
136 [-]: DIV       R11 R1 K10   ; R11 := R1 / 2.000000
137 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
138 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
139 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
140 [-]: LOADK     R9 K13       ; R9 := "PainRight"
141 [-]: CONST     R10 12       ; R10 := 12.000000
142 [-]: MOVE      R11 R2       ; R11 := R2
143 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
144 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
145 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
146 [-]: LOADK     R9 K13       ; R9 := "PainRight"
147 [-]: CONST     R10 13       ; R10 := 13.000000
148 [-]: MOVE      R11 R5       ; R11 := R5
149 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
150 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 739
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: CALL      R4 1 1       ; R4()
  3 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  4 [-]: GETUPVAL  R5 U1        ; R5 := U1
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0xbd2e96ea]
 10 [-]: LOADK     R6 K2        ; R6 := 0.010000
 11 [-]: CLOSURE   R7 0         ; R7 := closure(Function #29.1)
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 14 [-]: JMP       17           ; PC := 17
 15 [-]: GETUPVAL  R4 U2        ; R4 := U2
 16 [-]: CALL      R4 1 1       ; R4()
 17 [-]: RETURN    R0 1         ; return 


; Function #29.1:
;
; Name:            
; Defined at line: 747
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 756
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADKB    R2 0 0       ; R2 := false
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mInstigator"]
  7 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R2 2         ; return R2
 10 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mInstigator"]
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 12 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["Instigator"]
 13 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 16
 16 [-]: LOADKB    R3 1 0       ; R3 := true
 17 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 18 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInstigator"]
 19 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["player"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 38
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 24 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["Instigator"]
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 1         ; if R4 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mInstigator"]
 29 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["player"]
 30 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["Instigator"]
 31 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x5b89142c]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 36
 36 [-]: LOADKB    R3 1 0       ; R3 := true
 37 [-]: JMP       50           ; PC := 50
 38 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 39 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInstigator"]
 40 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["avatar"]
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: TEST      R4 0         ; if not R4 then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 45 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["Instigator"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 0         ; if not R4 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: LOADKB    R3 1 0       ; R3 := true
 50 [-]: TESTSET   R2 R3 0      ; if not R3 then PC := 65 else R2 := R3
 51 [-]: JMP       65           ; PC := 65
 52 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mAbilityType"]
 53 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 63
 54 [-]: JMP       63           ; PC := 63
 55 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mAbilityType"]
 56 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["AbilityType"]
 57 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mAugmentType"]
 60 [-]: GETTABLE  R5 R1 K10    ; R5 := R1["AugmentType"]
 61 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 64
 64 [-]: LOADKB    R2 1 0       ; R2 := true
 65 [-]: RETURN    R2 2         ; return R2
 66 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 775
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Status"]
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mAbilityType"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Stat"]
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SETTABLE  R1 K0 R0     ; R1["Status"] := R0
 22 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 794
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0xe72d2edb
 13 [-]: EQ        0 R1 K4      ; if R1 ~= 4.000000 then PC := 27
 14 [-]: JMP       27           ; PC := 27
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["abilityType"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["abilityType"]
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xf2deaf69]
 22 [-]: GETGLOBAL R3 K7        ; R3 := gLotusInventoryControllerType
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: TEST      R1 0         ; if not R1 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: RETURN    R0 1         ; return 
 27 [-]: LOADNIL   R1 R1        ; R1 := nil
 28 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 29 [-]: GETUPVAL  R3 U2        ; R3 := U2
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: TEST      R2 1         ; if R2 then PC := 38
 32 [-]: JMP       38           ; PC := 38
 33 [-]: GETUPVAL  R2 U2        ; R2 := U2
 34 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xbb610e5b]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: MOVE      R1 R2        ; R1 := R2
 37 [-]: JMP       39           ; PC := 39
 38 [-]: GETUPVAL  R1 U1        ; R1 := U1
 39 [-]: LOADNIL   R2 R2        ; R2 := nil
 40 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 41 [-]: MOVE      R4 R1        ; R4 := R1
 42 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 43 [-]: TEST      R3 1         ; if R3 then PC := 53
 44 [-]: JMP       53           ; PC := 53
 45 [-]: SELF      R3 R1 K6     ; R4 := R1; R3 := R1[0xf2deaf69]
 46 [-]: GETGLOBAL R5 K9        ; R5 := gLotusVehicleAvatarType
 47 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 48 [-]: TEST      R3 0         ; if not R3 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1[0xff005826]
 51 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 52 [-]: MOVE      R2 R3        ; R2 := R3
 53 [-]: GETUPVAL  R3 U3        ; R3 := U3
 54 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 55 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["instigator"]
 56 [-]: SETTABLE  R4 K12 R5    ; R4["Instigator"] := R5
 57 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["abilityType"]
 58 [-]: SETTABLE  R4 K14 R5    ; R4[0xf2deaf69] := R5
 59 [-]: GETTABLE  R5 R0 K16    ; R5 := R0["augmentType"]
 60 [-]: SETTABLE  R4 K15 R5    ; R4["AugmentType"] := R5
 61 [-]: GETTABLE  R5 R0 K18    ; R5 := R0["affected"]
 62 [-]: SETTABLE  R4 K17 R5    ; R4["Affected"] := R5
 63 [-]: SETTABLE  R3 K11 R4    ; R3["Stat"] := R4
 64 [-]: GETUPVAL  R3 U3        ; R3 := U3
 65 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Stat"]
 66 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["Instigator"]
 67 [-]: EQ        1 R3 R1      ; if R3 == R1 then PC := 86
 68 [-]: JMP       86           ; PC := 86
 69 [-]: GETUPVAL  R3 U3        ; R3 := U3
 70 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Stat"]
 71 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["Instigator"]
 72 [-]: EQ        1 R3 R2      ; if R3 == R2 then PC := 86
 73 [-]: JMP       86           ; PC := 86
 74 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["forceSquadPanel"]
 75 [-]: TEST      R3 1         ; if R3 then PC := 87
 76 [-]: JMP       87           ; PC := 87
 77 [-]: GETUPVAL  R3 U4        ; R3 := U4
 78 [-]: TEST      R3 0         ; if not R3 then PC := 87
 79 [-]: JMP       87           ; PC := 87
 80 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["abilityType"]
 81 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xf2deaf69]
 82 [-]: GETGLOBAL R5 K20       ; R5 := 0xbaec173b
 83 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 84 [-]: JMP       87           ; PC := 87
 85 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 86
 86 [-]: LOADKB    R3 1 0       ; R3 := true
 87 [-]: CONST     R4 1         ; R4 := 1.000000
 88 [-]: GETUPVAL  R5 U3        ; R5 := U3
 89 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Stat"]
 90 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Affected"]
 91 [-]: LEN       R5 R5        ; R5 := # R5
 92 [-]: CONST     R6 1         ; R6 := 1.000000
 93 [-]: FORPREP   R4 250       ; R4 -= R6; PC := 250
 94 [-]: GETUPVAL  R8 U3        ; R8 := U3
 95 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["Stat"]
 96 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["Affected"]
 97 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 98 [-]: EQ        1 R8 R1      ; if R8 == R1 then PC := 102
 99 [-]: JMP       102          ; PC := 102
100 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 250
101 [-]: JMP       250          ; PC := 250
102 [-]: GETUPVAL  R9 U3        ; R9 := U3
103 [-]: SETTABLE  R9 K21 K0    ; R9["Status"] := nil
104 [-]: GETUPVAL  R9 U0        ; R9 := U0
105 [-]: SELF      R9 R9 K22    ; R10 := R9; R9 := R9[0xea061e98]
106 [-]: GETUPVAL  R11 U3       ; R11 := U3
107 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["IsBuffEqual"]
108 [-]: CALL      R9 3 1       ; R9(R10,R11)
109 [-]: GETUPVAL  R9 U3        ; R9 := U3
110 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["Status"]
111 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 181
112 [-]: JMP       181          ; PC := 181
113 [-]: LOADKB    R9 0 0       ; R9 := false
114 [-]: GETTABLE  R10 R0 K24   ; R10 := R0["stackData"]
115 [-]: TEST      R10 0        ; if not R10 then PC := 137
116 [-]: JMP       137          ; PC := 137
117 [-]: GETTABLE  R10 R0 K25   ; R10 := R0["buffType"]
118 [-]: GETUPVAL  R11 U3       ; R11 := U3
119 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["Status"]
120 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["mBuffType"]
121 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 137
122 [-]: JMP       137          ; PC := 137
123 [-]: GETTABLE  R10 R0 K27   ; R10 := R0["buffData"]
124 [-]: EQ        0 R10 K28    ; if R10 ~= 0.000000 then PC := 127
125 [-]: JMP       127          ; PC := 127
126 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 127
127 [-]: LOADKB    R9 1 0       ; R9 := true
128 [-]: GETUPVAL  R10 U3       ; R10 := U3
129 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Status"]
130 [-]: GETUPVAL  R11 U3       ; R11 := U3
131 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["Status"]
132 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["mBuffData"]
133 [-]: GETTABLE  R12 R0 K27   ; R12 := R0["buffData"]
134 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
135 [-]: SETTABLE  R10 K29 R11  ; R10["mBuffData"] := R11
136 [-]: JMP       149          ; PC := 149
137 [-]: GETUPVAL  R10 U3       ; R10 := U3
138 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Status"]
139 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["mBuffData"]
140 [-]: GETTABLE  R11 R0 K27   ; R11 := R0["buffData"]
141 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 144
142 [-]: JMP       144          ; PC := 144
143 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 144
144 [-]: LOADKB    R9 1 0       ; R9 := true
145 [-]: GETUPVAL  R10 U3       ; R10 := U3
146 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Status"]
147 [-]: GETTABLE  R11 R0 K27   ; R11 := R0["buffData"]
148 [-]: SETTABLE  R10 K29 R11  ; R10["mBuffData"] := R11
149 [-]: TEST      R9 1         ; if R9 then PC := 165
150 [-]: JMP       165          ; PC := 165
151 [-]: GETUPVAL  R10 U3       ; R10 := U3
152 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Status"]
153 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mBuffType"]
154 [-]: GETTABLE  R11 R0 K25   ; R11 := R0["buffType"]
155 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 164
156 [-]: JMP       164          ; PC := 164
157 [-]: GETUPVAL  R10 U3       ; R10 := U3
158 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Status"]
159 [-]: GETTABLE  R10 R10 K30  ; R10 := R10["mBuffDataExtra"]
160 [-]: GETTABLE  R11 R0 K31   ; R11 := R0["buffDataExtra"]
161 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 164
162 [-]: JMP       164          ; PC := 164
163 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 164
164 [-]: LOADKB    R9 1 0       ; R9 := true
165 [-]: GETUPVAL  R10 U3       ; R10 := U3
166 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Status"]
167 [-]: GETTABLE  R11 R0 K25   ; R11 := R0["buffType"]
168 [-]: SETTABLE  R10 K26 R11  ; R10["mBuffType"] := R11
169 [-]: GETUPVAL  R10 U3       ; R10 := U3
170 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Status"]
171 [-]: GETTABLE  R11 R0 K31   ; R11 := R0["buffDataExtra"]
172 [-]: SETTABLE  R10 K30 R11  ; R10["mBuffDataExtra"] := R11
173 [-]: TEST      R9 0         ; if not R9 then PC := 251
174 [-]: JMP       251          ; PC := 251
175 [-]: GETUPVAL  R10 U0       ; R10 := U0
176 [-]: GETTABLE  R10 R10 K32  ; R10 := R10[0xb15e6aca]
177 [-]: GETUPVAL  R11 U3       ; R11 := U3
178 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["Status"]
179 [-]: CALL      R10 2 1      ; R10(R11)
180 [-]: JMP       251          ; PC := 251
181 [-]: LOADNIL   R10 R10      ; R10 := nil
182 [-]: GETGLOBAL R11 K1       ; R11 := 0x7b998233
183 [-]: GETUPVAL  R12 U3       ; R12 := U3
184 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["Stat"]
185 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["Instigator"]
186 [-]: CALL      R11 2 2      ; R11 := R11(R12)
187 [-]: TEST      R11 1        ; if R11 then PC := 195
188 [-]: JMP       195          ; PC := 195
189 [-]: GETUPVAL  R11 U3       ; R11 := U3
190 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["Stat"]
191 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["Instigator"]
192 [-]: SELF      R11 R11 K33  ; R12 := R11; R11 := R11[0x5b89142c]
193 [-]: CALL      R11 2 2      ; R11 := R11(R12)
194 [-]: MOVE      R10 R11      ; R10 := R11
195 [-]: GETUPVAL  R11 U0       ; R11 := U0
196 [-]: SELF      R11 R11 K34  ; R12 := R11; R11 := R11[0x5fbddc1a]
197 [-]: CALL      R11 2 2      ; R11 := R11(R12)
198 [-]: ADD       R11 R11 K35  ; R11 := R11 + 1.000000
199 [-]: GETTABLE  R12 R0 K36   ; R12 := R0["isDebuff"]
200 [-]: TEST      R12 0        ; if not R12 then PC := 219
201 [-]: JMP       219          ; PC := 219
202 [-]: LT        0 K35 R11    ; if 1.000000 >= R11 then PC := 219
203 [-]: JMP       219          ; PC := 219
204 [-]: GETUPVAL  R12 U0       ; R12 := U0
205 [-]: SELF      R12 R12 K37  ; R13 := R12; R12 := R12[0x5465f8f3]
206 [-]: SUB       R14 R11 K35  ; R14 := R11 - 1.000000
207 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
208 [-]: GETGLOBAL R13 K1       ; R13 := 0x7b998233
209 [-]: MOVE      R14 R12      ; R14 := R12
210 [-]: CALL      R13 2 2      ; R13 := R13(R14)
211 [-]: TEST      R13 1        ; if R13 then PC := 219
212 [-]: JMP       219          ; PC := 219
213 [-]: GETTABLE  R13 R12 K38  ; R13 := R12["mIsDebuff"]
214 [-]: TEST      R13 0        ; if not R13 then PC := 217
215 [-]: JMP       217          ; PC := 217
216 [-]: JMP       219          ; PC := 219
217 [-]: SUB       R11 R11 K35  ; R11 := R11 - 1.000000
218 [-]: JMP       202          ; PC := 202
219 [-]: GETUPVAL  R13 U0       ; R13 := U0
220 [-]: SELF      R13 R13 K39  ; R14 := R13; R13 := R13[0x45082a31]
221 [-]: MOVE      R15 R11      ; R15 := R11
222 [-]: NEWTABLE  R16 0 8      ; R16 := {}
223 [-]: NEWTABLE  R17 0 2      ; R17 := {}
224 [-]: GETUPVAL  R18 U3       ; R18 := U3
225 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["Stat"]
226 [-]: GETTABLE  R18 R18 K12  ; R18 := R18["Instigator"]
227 [-]: SETTABLE  R17 K41 R18  ; R17["avatar"] := R18
228 [-]: SETTABLE  R17 K42 R10  ; R17["player"] := R10
229 [-]: SETTABLE  R16 K40 R17  ; R16["mInstigator"] := R17
230 [-]: GETUPVAL  R17 U3       ; R17 := U3
231 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["Stat"]
232 [-]: GETTABLE  R17 R17 K14  ; R17 := R17["AbilityType"]
233 [-]: SETTABLE  R16 K43 R17  ; R16["mAbilityType"] := R17
234 [-]: GETUPVAL  R17 U3       ; R17 := U3
235 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["Stat"]
236 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["AugmentType"]
237 [-]: SETTABLE  R16 K44 R17  ; R16["mAugmentType"] := R17
238 [-]: GETTABLE  R17 R0 K25   ; R17 := R0["buffType"]
239 [-]: SETTABLE  R16 K26 R17  ; R16["mBuffType"] := R17
240 [-]: GETTABLE  R17 R0 K27   ; R17 := R0["buffData"]
241 [-]: SETTABLE  R16 K29 R17  ; R16["mBuffData"] := R17
242 [-]: GETTABLE  R17 R0 K31   ; R17 := R0["buffDataExtra"]
243 [-]: SETTABLE  R16 K30 R17  ; R16["mBuffDataExtra"] := R17
244 [-]: GETTABLE  R17 R0 K27   ; R17 := R0["buffData"]
245 [-]: SETTABLE  R16 K45 R17  ; R16["mInitialBuffData"] := R17
246 [-]: GETTABLE  R17 R0 K36   ; R17 := R0["isDebuff"]
247 [-]: SETTABLE  R16 K38 R17  ; R16["mIsDebuff"] := R17
248 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
249 [-]: JMP       251          ; PC := 251
250 [-]: FORLOOP   R4 94        ; R4 += R6; if R4 <= R5 then begin PC := 94; R7 := R4 end
251 [-]: TEST      R3 0         ; if not R3 then PC := 262
252 [-]: JMP       262          ; PC := 262
253 [-]: GETUPVAL  R13 U5       ; R13 := U5
254 [-]: EQ        1 R13 K0     ; if R13 == nil then PC := 262
255 [-]: JMP       262          ; PC := 262
256 [-]: GETUPVAL  R13 U5       ; R13 := U5
257 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0xb03ae482]
258 [-]: MOVE      R15 R0       ; R15 := R0
259 [-]: GETUPVAL  R16 U3       ; R16 := U3
260 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["Stat"]
261 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
262 [-]: GETUPVAL  R13 U3       ; R13 := U3
263 [-]: SETTABLE  R13 K11 K0   ; R13["Stat"] := nil
264 [-]: GETUPVAL  R13 U3       ; R13 := U3
265 [-]: SETTABLE  R13 K21 K0   ; R13["Status"] := nil
266 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 894
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: LOADNIL   R1 R1        ; R1 := nil
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf2deaf69]
 13 [-]: GETGLOBAL R4 K3        ; R4 := gLotusVehicleAvatarType
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xff005826]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: MOVE      R1 R2        ; R1 := R2
 21 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 22 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["instigator"]
 23 [-]: SETTABLE  R2 K5 R3     ; R2["Instigator"] := R3
 24 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["abilityType"]
 25 [-]: SETTABLE  R2 K7 R3     ; R2["AbilityType"] := R3
 26 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["augmentType"]
 27 [-]: SETTABLE  R2 K9 R3     ; R2["AugmentType"] := R3
 28 [-]: CONST     R3 1         ; R3 := 1.000000
 29 [-]: GETUPVAL  R4 U0        ; R4 := U0
 30 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0x5fbddc1a]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: CONST     R5 1         ; R5 := 1.000000
 33 [-]: FORPREP   R3 119       ; R3 -= R5; PC := 119
 34 [-]: GETUPVAL  R7 U0        ; R7 := U0
 35 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["mElements"]
 36 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 37 [-]: GETUPVAL  R8 U2        ; R8 := U2
 38 [-]: MOVE      R9 R7        ; R9 := R7
 39 [-]: MOVE      R10 R2       ; R10 := R2
 40 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 41 [-]: TEST      R8 0         ; if not R8 then PC := 119
 42 [-]: JMP       119          ; PC := 119
 43 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
 44 [-]: GETUPVAL  R9 U1        ; R9 := U1
 45 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 46 [-]: TEST      R8 1         ; if R8 then PC := 120
 47 [-]: JMP       120          ; PC := 120
 48 [-]: GETGLOBAL R8 K13       ; R8 := 0xcfc01047
 49 [-]: GETTABLE  R9 R0 K14    ; R9 := R0["affected"]
 50 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 51 [-]: JMP       116          ; PC := 116
 52 [-]: GETGLOBAL R13 K1       ; R13 := 0x7b998233
 53 [-]: MOVE      R14 R12      ; R14 := R12
 54 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 55 [-]: TEST      R13 1        ; if R13 then PC := 116
 56 [-]: JMP       116          ; PC := 116
 57 [-]: GETUPVAL  R13 U1       ; R13 := U1
 58 [-]: EQ        1 R12 R13    ; if R12 == R13 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: EQ        0 R12 R1     ; if R12 ~= R1 then PC := 116
 61 [-]: JMP       116          ; PC := 116
 62 [-]: GETGLOBAL R13 K1       ; R13 := 0x7b998233
 63 [-]: SELF      R14 R12 K15  ; R15 := R12; R14 := R12[0x5e651723]
 64 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 65 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 66 [-]: TEST      R13 1        ; if R13 then PC := 82
 67 [-]: JMP       82           ; PC := 82
 68 [-]: GETGLOBAL R13 K1       ; R13 := 0x7b998233
 69 [-]: GETUPVAL  R14 U1       ; R14 := U1
 70 [-]: SELF      R14 R14 K15  ; R15 := R14; R14 := R14[0x5e651723]
 71 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 72 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 73 [-]: TEST      R13 1        ; if R13 then PC := 82
 74 [-]: JMP       82           ; PC := 82
 75 [-]: SELF      R13 R12 K15  ; R14 := R12; R13 := R12[0x5e651723]
 76 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 77 [-]: GETUPVAL  R14 U1       ; R14 := U1
 78 [-]: SELF      R14 R14 K15  ; R15 := R14; R14 := R14[0x5e651723]
 79 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 80 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 116
 81 [-]: JMP       116          ; PC := 116
 82 [-]: GETTABLE  R13 R0 K16   ; R13 := R0["stackData"]
 83 [-]: TEST      R13 0        ; if not R13 then PC := 103
 84 [-]: JMP       103          ; PC := 103
 85 [-]: GETTABLE  R13 R0 K17   ; R13 := R0["buffType"]
 86 [-]: GETTABLE  R14 R7 K18   ; R14 := R7["mBuffType"]
 87 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 103
 88 [-]: JMP       103          ; PC := 103
 89 [-]: GETTABLE  R13 R7 K19   ; R13 := R7["mBuffData"]
 90 [-]: GETTABLE  R14 R0 K20   ; R14 := R0["buffData"]
 91 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
 92 [-]: SETTABLE  R7 K19 R13   ; R7["mBuffData"] := R13
 93 [-]: GETTABLE  R13 R7 K19   ; R13 := R7["mBuffData"]
 94 [-]: LT        0 K21 R13    ; if 0.000010 >= R13 then PC := 103
 95 [-]: JMP       103          ; PC := 103
 96 [-]: GETUPVAL  R13 U0       ; R13 := U0
 97 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x71e9ac81]
 98 [-]: LOADNIL   R15 R15      ; R15 := nil
 99 [-]: LOADKB    R16 1 0      ; R16 := true
100 [-]: LOADKB    R17 1 0      ; R17 := true
101 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
102 [-]: JMP       120          ; PC := 120
103 [-]: GETUPVAL  R13 U0       ; R13 := U0
104 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13[0x9ae7e2d2]
105 [-]: MOVE      R15 R6       ; R15 := R6
106 [-]: LOADKB    R16 1 0      ; R16 := true
107 [-]: LOADKB    R17 1 0      ; R17 := true
108 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
109 [-]: GETUPVAL  R13 U0       ; R13 := U0
110 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x71e9ac81]
111 [-]: LOADNIL   R15 R15      ; R15 := nil
112 [-]: LOADKB    R16 1 0      ; R16 := true
113 [-]: LOADKB    R17 1 0      ; R17 := true
114 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
115 [-]: JMP       120          ; PC := 120
116 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 52; R10 := R11 end
117 [-]: JMP       52           ; PC := 52
118 [-]: JMP       120          ; PC := 120
119 [-]: FORLOOP   R3 34        ; R3 += R5; if R3 <= R4 then begin PC := 34; R6 := R3 end
120 [-]: GETTABLE  R13 R2 K5    ; R13 := R2["Instigator"]
121 [-]: GETUPVAL  R14 U1       ; R14 := U1
122 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: GETTABLE  R13 R2 K5    ; R13 := R2["Instigator"]
125 [-]: EQ        1 R13 R1     ; if R13 == R1 then PC := 130
126 [-]: JMP       130          ; PC := 130
127 [-]: GETTABLE  R13 R0 K24   ; R13 := R0["forceSquadPanel"]
128 [-]: JMP       131          ; PC := 131
129 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 130
130 [-]: LOADKB    R13 1 0      ; R13 := true
131 [-]: TEST      R13 0        ; if not R13 then PC := 140
132 [-]: JMP       140          ; PC := 140
133 [-]: GETUPVAL  R14 U3       ; R14 := U3
134 [-]: EQ        1 R14 K0     ; if R14 == nil then PC := 140
135 [-]: JMP       140          ; PC := 140
136 [-]: GETUPVAL  R14 U3       ; R14 := U3
137 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0xc2a148ad]
138 [-]: MOVE      R16 R0       ; R16 := R0
139 [-]: CALL      R14 3 1      ; R14(R15,R16)
140 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 947
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x0b96777e
  2 [-]: MOVE      R5 R2        ; R5 := R2
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: EQ        0 R4 K1      ; if R4 ~= "string" then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0x23c0e8e8]
  8 [-]: MOVE      R6 R0        ; R6 := R0
  9 [-]: MOVE      R7 R1        ; R7 := R1
 10 [-]: MOVE      R8 R2        ; R8 := R2
 11 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xe6d078f5]
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: MOVE      R7 R1        ; R7 := R1
 17 [-]: MOVE      R8 R2        ; R8 := R2
 18 [-]: EQ        1 R3 K4      ; if R3 == true then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 21
 21 [-]: LOADKB    R9 1 0       ; R9 := true
 22 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 23 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 955
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: SELF      R5 R5 K0     ; R6 := R5; R5 := R5[0xcc4ac7a6]
  3 [-]: MOVE      R7 R0        ; R7 := R0
  4 [-]: MOVE      R8 R1        ; R8 := R1
  5 [-]: MOVE      R9 R2        ; R9 := R2
  6 [-]: MOVE      R10 R3       ; R10 := R3
  7 [-]: EQ        1 R4 K1      ; if R4 == true then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 10
 10 [-]: LOADKB    R11 1 0      ; R11 := true
 11 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 12 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 959
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x988ffae3
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xb5be5d4a]
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  9 [-]: LOADK     R2 K4        ; R2 := "AbilityPanel.Focus"
 10 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x5a22d251]
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 14 [-]: GETGLOBAL R4 K1        ; R4 := 0x988ffae3
 15 [-]: MOVE      R5 R0        ; R5 := R0
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 966
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2[0x052b9d3b]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 970
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["Initialized"] := false
  3 [-]: GETGLOBAL R0 K2        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["HudInitialized"]
  5 [-]: TEST      R0 0         ; if not R0 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R0 K2        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["HudInitialized"]
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETGLOBAL R0 K2        ; R0 := _T
 13 [-]: SETTABLE  R0 K3 K5     ; R0["HudInitialized"] := nil
 14 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x9d6c77be
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 1         ; if R0 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETUPVAL  R0 U1        ; R0 := U1
 20 [-]: LOADNIL   R1 R1        ; R1 := nil
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: TEST      R0 1         ; if R0 then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R0 K8        ; R0 := 0xe72d2edb
 28 [-]: EQ        1 R0 K10     ; if R0 == 0.000000 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: GETUPVAL  R0 U2        ; R0 := U2
 31 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0xeaef69de]
 32 [-]: CONST     R2 0         ; R2 := 0.000000
 33 [-]: CALL      R0 3 1       ; R0(R1,R2)
 34 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 35 [-]: GETUPVAL  R1 U3        ; R1 := U3
 36 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 37 [-]: TEST      R0 1         ; if R0 then PC := 46
 38 [-]: JMP       46           ; PC := 46
 39 [-]: GETGLOBAL R0 K8        ; R0 := 0xe72d2edb
 40 [-]: EQ        1 R0 K10     ; if R0 == 0.000000 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: GETUPVAL  R0 U3        ; R0 := U3
 43 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0xeaef69de]
 44 [-]: CONST     R2 0         ; R2 := 0.000000
 45 [-]: CALL      R0 3 1       ; R0(R1,R2)
 46 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 47 [-]: GETUPVAL  R1 U4        ; R1 := U4
 48 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 49 [-]: TEST      R0 1         ; if R0 then PC := 54
 50 [-]: JMP       54           ; PC := 54
 51 [-]: GETUPVAL  R0 U4        ; R0 := U4
 52 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0xa2880940]
 53 [-]: CALL      R0 2 1       ; R0(R1)
 54 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 55 [-]: GETUPVAL  R1 U5        ; R1 := U5
 56 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 57 [-]: TEST      R0 1         ; if R0 then PC := 62
 58 [-]: JMP       62           ; PC := 62
 59 [-]: GETUPVAL  R0 U5        ; R0 := U5
 60 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0xa2880940]
 61 [-]: CALL      R0 2 1       ; R0(R1)
 62 [-]: GETGLOBAL R0 K2        ; R0 := _T
 63 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["ShouldSaveHudTrackers"]
 64 [-]: TEST      R0 0         ; if not R0 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETUPVAL  R0 U6        ; R0 := U6
 67 [-]: GETTABLE  R0 R0 K14    ; R0 := R0[0x8f09cf7a]
 68 [-]: CALL      R0 1 1       ; R0()
 69 [-]: GETGLOBAL R0 K2        ; R0 := _T
 70 [-]: SETTABLE  R0 K13 K5    ; R0["ShouldSaveHudTrackers"] := nil
 71 [-]: GETGLOBAL R0 K15       ; R0 := 0x9ba7909f
 72 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0[0xbcfb64ab]
 73 [-]: GETGLOBAL R2 K17       ; R2 := 0xd991a286
 74 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 75 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 76 [-]: MOVE      R2 R0        ; R2 := R0
 77 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 78 [-]: TEST      R1 1         ; if R1 then PC := 91
 79 [-]: JMP       91           ; PC := 91
 80 [-]: GETGLOBAL R1 K18       ; R1 := 0xbe190284
 81 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1[0xf2deaf69]
 82 [-]: GETGLOBAL R3 K20       ; R3 := gLotusAttractModeGameRulesType
 83 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 84 [-]: TEST      R1 1         ; if R1 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: GETGLOBAL R1 K21       ; R1 := 0x3d106989
 87 [-]: LOADK     R2 K22       ; R2 := "HUD Redux: Closing background movie"
 88 [-]: CALL      R1 2 1       ; R1(R2)
 89 [-]: SELF      R1 R0 K23    ; R2 := R0; R1 := R0[0x32302b4a]
 90 [-]: CALL      R1 2 1       ; R1(R2)
 91 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 92 [-]: GETUPVAL  R2 U0        ; R2 := U0
 93 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["mProfileMovie"]
 94 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 95 [-]: TEST      R1 1         ; if R1 then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: GETUPVAL  R1 U0        ; R1 := U0
 98 [-]: GETTABLE  R1 R1 K24    ; R1 := R1["mProfileMovie"]
 99 [-]: SELF      R1 R1 K23    ; R2 := R1; R1 := R1[0x32302b4a]
100 [-]: CALL      R1 2 1       ; R1(R2)
101 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
102 [-]: GETUPVAL  R2 U0        ; R2 := U0
103 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["mHudMarkersMovie"]
104 [-]: CALL      R1 2 2       ; R1 := R1(R2)
105 [-]: TEST      R1 1         ; if R1 then PC := 111
106 [-]: JMP       111          ; PC := 111
107 [-]: GETUPVAL  R1 U0        ; R1 := U0
108 [-]: GETTABLE  R1 R1 K25    ; R1 := R1["mHudMarkersMovie"]
109 [-]: SELF      R1 R1 K23    ; R2 := R1; R1 := R1[0x32302b4a]
110 [-]: CALL      R1 2 1       ; R1(R2)
111 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
112 [-]: GETUPVAL  R2 U7        ; R2 := U7
113 [-]: CALL      R1 2 2       ; R1 := R1(R2)
114 [-]: TEST      R1 1         ; if R1 then PC := 119
115 [-]: JMP       119          ; PC := 119
116 [-]: GETUPVAL  R1 U7        ; R1 := U7
117 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0xdb371820]
118 [-]: CALL      R1 2 1       ; R1(R2)
119 [-]: GETGLOBAL R1 K2        ; R1 := _T
120 [-]: CLOSURE   R2 0         ; R2 := closure(Function #38.1)
121 [-]: SETTABLE  R1 K27 R2    ; R1["HUD_AddMotionClip"] := R2
122 [-]: GETGLOBAL R1 K2        ; R1 := _T
123 [-]: CLOSURE   R2 1         ; R2 := closure(Function #38.2)
124 [-]: SETTABLE  R1 K28 R2    ; R1["HUD_UpdateMotionClip"] := R2
125 [-]: GETGLOBAL R1 K2        ; R1 := _T
126 [-]: CLOSURE   R2 2         ; R2 := closure(Function #38.3)
127 [-]: SETTABLE  R1 K29 R2    ; R1["HUD_RemoveMotionClip"] := R2
128 [-]: GETGLOBAL R1 K2        ; R1 := _T
129 [-]: SETTABLE  R1 K30 K5    ; R1["HUD_RegisterCrew"] := nil
130 [-]: GETGLOBAL R1 K2        ; R1 := _T
131 [-]: SETTABLE  R1 K31 K5    ; R1["HudType"] := nil
132 [-]: CONST     R1 1         ; R1 := 1.000000
133 [-]: GETGLOBAL R2 K2        ; R2 := _T
134 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["HudNonQueuedFunctions"]
135 [-]: LEN       R2 R2        ; R2 := # R2
136 [-]: CONST     R3 1         ; R3 := 1.000000
137 [-]: FORPREP   R1 143       ; R1 -= R3; PC := 143
138 [-]: GETGLOBAL R5 K2        ; R5 := _T
139 [-]: GETGLOBAL R6 K2        ; R6 := _T
140 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["HudNonQueuedFunctions"]
141 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
142 [-]: SETTABLE  R5 R6 K5     ; R5[R6] := nil
143 [-]: FORLOOP   R1 138       ; R1 += R3; if R1 <= R2 then begin PC := 138; R4 := R1 end
144 [-]: RETURN    R0 1         ; return 


; Function #38.1:
;
; Name:            
; Defined at line: 1012
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #38.2:
;
; Name:            
; Defined at line: 1013
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #38.3:
;
; Name:            
; Defined at line: 1014
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1025
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x0032441c
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["StalkerMode"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: LOADK     R2 K2        ; R2 := ""
  8 [-]: TEST      R1 0         ; if not R1 then PC := 47
  9 [-]: JMP       47           ; PC := 47
 10 [-]: NEWTABLE  R3 0 1       ; R3 := {}
 11 [-]: SETTABLE  R3 K3 K4     ; R3["Icon"] := true
 12 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 13 [-]: GETGLOBAL R5 K5        ; R5 := 0xcfc01047
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R10 K6       ; R10 := 0x0b96777e
 18 [-]: MOVE      R11 R9       ; R11 := R9
 19 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 20 [-]: EQ        0 R10 K7     ; if R10 ~= "userdata" then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETTABLE  R10 R3 R8    ; R10 := R3[R8]
 23 [-]: TEST      R10 0        ; if not R10 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: SELF      R10 R9 K8    ; R11 := R9; R10 := R9[0xed4e0128]
 26 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 27 [-]: SETTABLE  R4 R8 R10    ; R4[R8] := R10
 28 [-]: JMP       40           ; PC := 40
 29 [-]: GETGLOBAL R10 K6       ; R10 := 0x0b96777e
 30 [-]: MOVE      R11 R9       ; R11 := R9
 31 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 32 [-]: EQ        1 R10 K9     ; if R10 == "function" then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETGLOBAL R10 K6       ; R10 := 0x0b96777e
 35 [-]: MOVE      R11 R9       ; R11 := R9
 36 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 37 [-]: EQ        1 R10 K7     ; if R10 == "userdata" then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: SETTABLE  R4 R8 R9     ; R4[R8] := R9
 40 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 17; R7 := R8 end
 41 [-]: JMP       17           ; PC := 17
 42 [-]: GETGLOBAL R10 K10      ; R10 := cjson
 43 [-]: GETTABLE  R10 R10 K11  ; R10 := R10[0xb139d7bc]
 44 [-]: MOVE      R11 R4       ; R11 := R4
 45 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 46 [-]: MOVE      R2 R10       ; R2 := R10
 47 [-]: GETUPVAL  R10 U0       ; R10 := U0
 48 [-]: SELF      R10 R10 K12  ; R11 := R10; R10 := R10[0x80b8b450]
 49 [-]: MOVE      R12 R0       ; R12 := R0
 50 [-]: MOVE      R13 R2       ; R13 := R2
 51 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 52 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1048
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x89326c93
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x7d108ddb]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4[0x34b70990]
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: MOVE      R6 R3        ; R6 := R3
  8 [-]: LOADNIL   R7 R7        ; R7 := nil
  9 [-]: LOADKB    R8 1 0       ; R8 := true
 10 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 11 [-]: MOVE      R0 R4        ; R0 := R4
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: GETTABLE  R4 R4 K2     ; R4 := R4[0x34b70990]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: MOVE      R6 R3        ; R6 := R3
 16 [-]: LOADNIL   R7 R7        ; R7 := nil
 17 [-]: LOADKB    R8 1 0       ; R8 := true
 18 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 19 [-]: MOVE      R1 R4        ; R1 := R4
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x7b998233
 21 [-]: GETUPVAL  R5 U1        ; R5 := U1
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 58
 24 [-]: JMP       58           ; PC := 58
 25 [-]: EQ        1 R0 K4      ; if R0 == "" then PC := 58
 26 [-]: JMP       58           ; PC := 58
 27 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 58
 28 [-]: JMP       58           ; PC := 58
 29 [-]: GETUPVAL  R4 U1        ; R4 := U1
 30 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x5ca33548]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: EQ        1 R4 R0      ; if R4 == R0 then PC := 38
 33 [-]: JMP       38           ; PC := 38
 34 [-]: EQ        0 R4 R1      ; if R4 ~= R1 then PC := 48
 35 [-]: JMP       48           ; PC := 48
 36 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 41
 41 [-]: LOADKB    R5 1 0       ; R5 := true
 42 [-]: GETUPVAL  R6 U2        ; R6 := U2
 43 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x7fbe731e]
 44 [-]: MOVE      R8 R5        ; R8 := R5
 45 [-]: MOVE      R9 R0        ; R9 := R0
 46 [-]: MOVE      R10 R1       ; R10 := R1
 47 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 48 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 49 [-]: MOVE      R7 R2        ; R7 := R2
 50 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 51 [-]: TEST      R6 1         ; if R6 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: EQ        1 R2 K4      ; if R2 == "" then PC := 58
 54 [-]: JMP       58           ; PC := 58
 55 [-]: GETUPVAL  R6 U3        ; R6 := U3
 56 [-]: MOVE      R7 R2        ; R7 := R2
 57 [-]: CALL      R6 2 1       ; R6(R7)
 58 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1068
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R0 0         ; if not R0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
  5 [-]: SETTABLE  R2 R1 K2     ; R2[R1] := true
  6 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1074
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x6dd7aa66]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x63879a7c
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 17
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETGLOBAL R1 K4        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["DisplayMysteryPrize"]
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K4        ; R1 := _T
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x83fce65b]
 16 [-]: CALL      R1 1 1       ; R1()
 17 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1081
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CLOSURE   R2 0         ; R2 := closure(Function #43.1)
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #43.1:
;
; Name:            
; Defined at line: 1082
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xb009bbc6
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x05556772]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0x64fb1586
 19 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1[0xed4e0128]
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 22 [-]: GETGLOBAL R3 K5        ; R3 := 0x9ba7909f
 23 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x6dd7aa66]
 24 [-]: GETGLOBAL R5 K7        ; R5 := 0x63879a7c
 25 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 26 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 27 [-]: MOVE      R5 R3        ; R5 := R3
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3[0xf56f3887]
 32 [-]: LOADK     R6 K9        ; R6 := "ShowReward"
 33 [-]: NEWTABLE  R7 5 0       ; R7 := {}
 34 [-]: LOADK     R8 K10       ; R8 := ""
 35 [-]: LOADK     R9 K11       ; R9 := "false"
 36 [-]: CONST     R10 0        ; R10 := 0.000000
 37 [-]: MOVE      R11 R2       ; R11 := R2
 38 [-]: LOADK     R12 K12      ; R12 := "true"
 39 [-]: SETLIST   R7 5 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 5
 40 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 41 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1102
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gLoadedIcons"]
  3 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  7 [-]: SETTABLE  R1 K1 R2     ; R1["gLoadedIcons"] := R2
  8 [-]: LOADKB    R1 0 0       ; R1 := false
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 42
 13 [-]: JMP       42           ; PC := 42
 14 [-]: GETGLOBAL R2 K0        ; R2 := _T
 15 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
 16 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0xed4e0128]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 19 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETGLOBAL R2 K0        ; R2 := _T
 22 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
 23 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0xed4e0128]
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: SETTABLE  R2 R3 K5     ; R2[R3] := false
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x8e07e77f]
 28 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0[0xed4e0128]
 29 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 30 [-]: LOADK     R5 K7        ; R5 := "OnIconReady"
 31 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 32 [-]: LOADKB    R1 1 0       ; R1 := true
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETGLOBAL R2 K0        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
 36 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0xed4e0128]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 39 [-]: EQ        0 R2 K5      ; if R2 ~= false then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADKB    R1 1 0       ; R1 := true
 42 [-]: RETURN    R1 2         ; return R1
 43 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1121
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 32
  5 [-]: JMP       32           ; PC := 32
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: CONST     R2 0         ; R2 := 0.000000
  8 [-]: CONST     R3 1         ; R3 := 1.000000
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["list"]
 11 [-]: LEN       R4 R4        ; R4 := # R4
 12 [-]: CONST     R5 1         ; R5 := 1.000000
 13 [-]: FORPREP   R3 22        ; R3 -= R5; PC := 22
 14 [-]: GETUPVAL  R7 U0        ; R7 := U0
 15 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["list"]
 16 [-]: GETTABLE  R1 R7 R6     ; R1 := R7[R6]
 17 [-]: GETTABLE  R7 R1 K2     ; R7 := R1["clip"]
 18 [-]: EQ        0 R7 K3      ; if R7 ~= "LogMessageContainer" then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["NewY"]
 21 [-]: JMP       23           ; PC := 23
 22 [-]: FORLOOP   R3 14        ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
 23 [-]: EQ        0 R0 K5      ; if R0 ~= "true" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: SUB       R2 R2 K6     ; R2 := R2 - 80.000000
 26 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
 27 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x67bc869f]
 28 [-]: LOADK     R9 K3        ; R9 := "LogMessageContainer"
 29 [-]: CONST     R10 1        ; R10 := 1.000000
 30 [-]: MOVE      R11 R2       ; R11 := R2
 31 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 32 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1140
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x38f10e85
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: LOADK     R3 K2        ; R3 := "GameplayMessage.gotoAndPlay"
  4 [-]: LOADK     R4 K3        ; R4 := "Show"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x67bc869f]
  8 [-]: LOADK     R3 K5        ; R3 := "GameplayMessage.MsgContainer.Msg"
  9 [-]: CONST     R4 36        ; R4 := 36.000000
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Text"]
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x20b98db3]
 15 [-]: LOADK     R3 K8        ; R3 := "GameplayMessage.MsgContainer.Msg.text"
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1148
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1153
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25312c9b
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CONST     R4 8         ; R4 := 8.000000
  5 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  6 [-]: CONST     R6 10        ; R6 := 10.000000
  7 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
  8 [-]: NEWTABLE  R6 1 0       ; R6 := {}
  9 [-]: CONST     R7 30        ; R7 := 30.000000
 10 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 11 [-]: LOADK     R7 K3        ; R7 := 0.300000
 12 [-]: CONST     R8 0         ; R8 := 0.000000
 13 [-]: CLOSURE   R9 0         ; R9 := closure(Function #48.1)
 14 [-]: MOVE      R0 R0        ; R0 := R0
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 17 [-]: RETURN    R0 1         ; return 


; Function #48.1:
;
; Name:            
; Defined at line: 1154
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CONST     R3 8         ; R3 := 8.000000
  5 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  6 [-]: LOADK     R5 K3        ; R5 := "_alpha"
  7 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  8 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  9 [-]: CONST     R6 100       ; R6 := 100.000000
 10 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 11 [-]: LOADK     R6 K4        ; R6 := 0.300000
 12 [-]: CONST     R7 0         ; R7 := 0.000000
 13 [-]: CLOSURE   R8 0         ; R8 := closure(Function #48.1.1)
 14 [-]: GETUPVAL  R0 U1        ; R0 := U1
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 17 [-]: RETURN    R0 1         ; return 


; Function #48.1.1:
;
; Name:            
; Defined at line: 1154
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1158
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UIMode"]
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UI_MODE_IN_SPACE_HUB"]
  8 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0x0032441c
 11 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["StalkerMode"]
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 14
 14 [-]: LOADKB    R0 1 0       ; R0 := true
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1162
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETUPVAL  R1 U2        ; R1 := U2
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xb73d420f]
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: SETTABLE  R0 K1 R1     ; R0["UIMode"] := R1
  8 [-]: GETUPVAL  R0 U3        ; R0 := U3
  9 [-]: CALL      R0 1 2       ; R0 := R0()
 10 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 11 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 12 [-]: LOADK     R3 K5        ; R3 := "HealthAndShield"
 13 [-]: CONST     R4 11        ; R4 := 11.000000
 14 [-]: NOT       R5 R0        ; R5 :=  R0
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 18 [-]: LOADK     R3 K6        ; R3 := "WeaponFrame"
 19 [-]: CONST     R4 11        ; R4 := 11.000000
 20 [-]: NOT       R5 R0        ; R5 :=  R0
 21 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 22 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 24 [-]: LOADK     R3 K7        ; R3 := "Reticle"
 25 [-]: CONST     R4 11        ; R4 := 11.000000
 26 [-]: NOT       R5 R0        ; R5 :=  R0
 27 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 28 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 29 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 30 [-]: LOADK     R3 K8        ; R3 := "reloadTimer"
 31 [-]: CONST     R4 11        ; R4 := 11.000000
 32 [-]: NOT       R5 R0        ; R5 :=  R0
 33 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 34 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 35 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 36 [-]: LOADK     R3 K9        ; R3 := "AbilityChargeProgress"
 37 [-]: CONST     R4 11        ; R4 := 11.000000
 38 [-]: NOT       R5 R0        ; R5 :=  R0
 39 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 40 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 41 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 42 [-]: LOADK     R3 K10       ; R3 := "PainTop"
 43 [-]: CONST     R4 11        ; R4 := 11.000000
 44 [-]: NOT       R5 R0        ; R5 :=  R0
 45 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 46 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 47 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 48 [-]: LOADK     R3 K11       ; R3 := "PainBottom"
 49 [-]: CONST     R4 11        ; R4 := 11.000000
 50 [-]: NOT       R5 R0        ; R5 :=  R0
 51 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 52 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 53 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 54 [-]: LOADK     R3 K12       ; R3 := "PainLeft"
 55 [-]: CONST     R4 11        ; R4 := 11.000000
 56 [-]: NOT       R5 R0        ; R5 :=  R0
 57 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 58 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 59 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 60 [-]: LOADK     R3 K13       ; R3 := "PainRight"
 61 [-]: CONST     R4 11        ; R4 := 11.000000
 62 [-]: NOT       R5 R0        ; R5 :=  R0
 63 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 64 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 65 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 66 [-]: LOADK     R3 K14       ; R3 := "AbilityPanel"
 67 [-]: CONST     R4 11        ; R4 := 11.000000
 68 [-]: NOT       R5 R0        ; R5 :=  R0
 69 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 70 [-]: GETUPVAL  R1 U4        ; R1 := U4
 71 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[0xd2229093]
 72 [-]: GETUPVAL  R2 U0        ; R2 := U0
 73 [-]: CALL      R1 2 1       ; R1(R2)
 74 [-]: GETGLOBAL R1 K16       ; R1 := 0x7b998233
 75 [-]: GETGLOBAL R2 K17       ; R2 := _T
 76 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Touch_UpdateTouchControls"]
 77 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 78 [-]: TEST      R1 1         ; if R1 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETGLOBAL R1 K17       ; R1 := _T
 81 [-]: GETTABLE  R1 R1 K19    ; R1 := R1[0xaa4aa244]
 82 [-]: CALL      R1 1 1       ; R1()
 83 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1187
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x73a8846a]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: SETTABLE  R0 K1 R1     ; R0["ptr"] := R1
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ptr"]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 1         ; if R0 then PC := 31
 17 [-]: JMP       31           ; PC := 31
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ptr"]
 21 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x327f2778]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SETTABLE  R0 K3 R1     ; R0["impactBehavior"] := R1
 24 [-]: GETUPVAL  R0 U1        ; R0 := U1
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ptr"]
 27 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5419c5ba]
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: SETTABLE  R0 K5 R1     ; R0["IsMelee"] := R1
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETUPVAL  R0 U1        ; R0 := U1
 32 [-]: SETTABLE  R0 K3 K7     ; R0["impactBehavior"] := nil
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: SETTABLE  R0 K5 K7     ; R0["IsMelee"] := nil
 35 [-]: GETUPVAL  R0 U2        ; R0 := U2
 36 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["IsOperator"]
 37 [-]: TEST      R0 0         ; if not R0 then PC := 57
 38 [-]: JMP       57           ; PC := 57
 39 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 40 [-]: GETUPVAL  R1 U1        ; R1 := U1
 41 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ptr"]
 42 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 43 [-]: TEST      R0 1         ; if R0 then PC := 57
 44 [-]: JMP       57           ; PC := 57
 45 [-]: GETUPVAL  R0 U1        ; R0 := U1
 46 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ptr"]
 47 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0x81f3a598]
 48 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 49 [-]: TEST      R0 0         ; if not R0 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETGLOBAL R0 K10       ; R0 := 0xae91e43b
 52 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0xaade900e]
 53 [-]: LOADK     R2 K12       ; R2 := "WeaponFrame"
 54 [-]: CONST     R3 11        ; R3 := 11.000000
 55 [-]: LOADKB    R4 1 0       ; R4 := true
 56 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 57 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 58 [-]: GETGLOBAL R1 K13       ; R1 := _T
 59 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["Touch_UpdateTouchControls"]
 60 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 61 [-]: TEST      R0 1         ; if R0 then PC := 71
 62 [-]: JMP       71           ; PC := 71
 63 [-]: GETUPVAL  R0 U0        ; R0 := U0
 64 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0[0x31051e5a]
 65 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 66 [-]: TEST      R0 0         ; if not R0 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: GETGLOBAL R0 K13       ; R0 := _T
 69 [-]: GETTABLE  R0 R0 K16    ; R0 := R0[0xaa4aa244]
 70 [-]: CALL      R0 1 1       ; R0()
 71 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1210
; #Upvalues:       9
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SecretMiniGameActive"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  6 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xaade900e]
  7 [-]: LOADK     R4 K4        ; R4 := "WeaponFrame"
  8 [-]: CONST     R5 11        ; R5 := 11.000000
  9 [-]: LOADKB    R6 0 0       ; R6 := false
 10 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x3583ccf1]
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x31051e5a]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["ptr"]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 0         ; if not R2 then PC := 64
 27 [-]: JMP       64           ; PC := 64
 28 [-]: GETUPVAL  R2 U2        ; R2 := U2
 29 [-]: CALL      R2 1 1       ; R2()
 30 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["ptr"]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 64
 35 [-]: JMP       64           ; PC := 64
 36 [-]: GETUPVAL  R2 U3        ; R2 := U3
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["ptr"]
 39 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x7a7373f5]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: GETGLOBAL R4 K10       ; R4 := 0x5bced4c4
 42 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0xac1b386a]
 43 [-]: LOADK     R5 K12       ; R5 := 9999.000000
 44 [-]: GETUPVAL  R6 U1        ; R6 := U1
 45 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["ptr"]
 46 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x094b3a83]
 47 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 48 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 49 [-]: GETUPVAL  R5 U1        ; R5 := U1
 50 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["ptr"]
 51 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5[0xd6bd1155]
 52 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 53 [-]: GETUPVAL  R6 U1        ; R6 := U1
 54 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["ptr"]
 55 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0xa63336e7]
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: TEST      R6 1         ; if R6 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETUPVAL  R6 U1        ; R6 := U1
 60 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["ptr"]
 61 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0x2a0a14c2]
 62 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 63 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 64 [-]: GETGLOBAL R2 K0        ; R2 := _T
 65 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["VoidMeleeWeaponComboRequirement"]
 66 [-]: EQ        1 R2 K18     ; if R2 == nil then PC := 170
 67 [-]: JMP       170          ; PC := 170
 68 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 69 [-]: GETUPVAL  R3 U4        ; R3 := U4
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: TEST      R2 1         ; if R2 then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: GETUPVAL  R2 U4        ; R2 := U4
 74 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xb9700060]
 75 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 76 [-]: JMP       79           ; PC := 79
 77 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 78
 78 [-]: LOADKB    R2 1 0       ; R2 := true
 79 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 80 [-]: GETUPVAL  R4 U1        ; R4 := U1
 81 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["ptr"]
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: TEST      R3 1         ; if R3 then PC := 162
 84 [-]: JMP       162          ; PC := 162
 85 [-]: GETUPVAL  R3 U1        ; R3 := U1
 86 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["IsMelee"]
 87 [-]: TEST      R3 1         ; if R3 then PC := 91
 88 [-]: JMP       91           ; PC := 91
 89 [-]: TEST      R2 0         ; if not R2 then PC := 162
 90 [-]: JMP       162          ; PC := 162
 91 [-]: GETUPVAL  R3 U1        ; R3 := U1
 92 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["impactBehavior"]
 93 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xdb875eba]
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: GETGLOBAL R4 K0        ; R4 := _T
 96 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["VoidMeleeWeaponComboRequirement"]
 97 [-]: LE        0 R4 R3      ; if R4 > R3 then PC := 153
 98 [-]: JMP       153          ; PC := 153
 99 [-]: GETUPVAL  R4 U5        ; R4 := U5
100 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["Fade"]
101 [-]: LT        0 R4 K24     ; if R4 >= 1.000000 then PC := 153
102 [-]: JMP       153          ; PC := 153
103 [-]: GETUPVAL  R4 U6        ; R4 := U6
104 [-]: GETTABLE  R4 R4 K25    ; R4 := R4[0x06d055f9]
105 [-]: MOVE      R5 R2        ; R5 := R2
106 [-]: LOADK     R6 K26       ; R6 := "WeaponFrame.ComboLabelMiddle"
107 [-]: LOADK     R7 K27       ; R7 := "WeaponFrame.LabelMiddle"
108 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
109 [-]: GETUPVAL  R5 U7        ; R5 := U7
110 [-]: GETTABLE  R5 R5 K28    ; R5 := R5[0xb5be5d4a]
111 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
112 [-]: MOVE      R7 R4        ; R7 := R4
113 [-]: LOADKB    R8 1 0       ; R8 := true
114 [-]: CALL      R5 4 3       ; R5,R6 := R5(R6,R7,R8)
115 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
116 [-]: GETUPVAL  R8 U8        ; R8 := U8
117 [-]: CALL      R7 2 2       ; R7 := R7(R8)
118 [-]: TEST      R7 0         ; if not R7 then PC := 128
119 [-]: JMP       128          ; PC := 128
120 [-]: GETUPVAL  R7 U7        ; R7 := U7
121 [-]: GETTABLE  R7 R7 K29    ; R7 := R7[0x5a22d251]
122 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
123 [-]: GETGLOBAL R9 K30       ; R9 := 0xe858af5c
124 [-]: ADD       R10 R5 K31   ; R10 := R5 + 3.000000
125 [-]: ADD       R11 R6 K32   ; R11 := R6 + 10.000000
126 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
127 [-]: SETUPVAL  R7 U8        ; U82 := R8
128 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
129 [-]: GETUPVAL  R8 U8        ; R8 := U8
130 [-]: CALL      R7 2 2       ; R7 := R7(R8)
131 [-]: TEST      R7 1         ; if R7 then PC := 170
132 [-]: JMP       170          ; PC := 170
133 [-]: GETGLOBAL R7 K33       ; R7 := 0x89326c93
134 [-]: SELF      R7 R7 K34    ; R8 := R7; R7 := R7[0xb4364067]
135 [-]: CALL      R7 2 2       ; R7 := R7(R8)
136 [-]: GETUPVAL  R8 U6        ; R8 := U6
137 [-]: GETTABLE  R8 R8 K35    ; R8 := R8[0x3e145a1a]
138 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
139 [-]: ADD       R10 R5 K31   ; R10 := R5 + 3.000000
140 [-]: ADD       R11 R6 K32   ; R11 := R6 + 10.000000
141 [-]: MOVE      R12 R7       ; R12 := R7
142 [-]: CALL      R8 5 3       ; R8,R9 := R8(R9,R10,R11,R12)
143 [-]: GETUPVAL  R10 U8       ; R10 := U8
144 [-]: SELF      R10 R10 K36  ; R11 := R10; R10 := R10[0xe28aa928]
145 [-]: GETGLOBAL R12 K37      ; R12 := 0xa421af95
146 [-]: MOVE      R13 R8       ; R13 := R8
147 [-]: MOVE      R14 R9       ; R14 := R9
148 [-]: CONST     R15 1        ; R15 := 1.000000
149 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
150 [-]: GETGLOBAL R13 K38      ; R13 := ZERO_ROTATION
151 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
152 [-]: JMP       170          ; PC := 170
153 [-]: GETGLOBAL R10 K7       ; R10 := 0x7b998233
154 [-]: GETUPVAL  R11 U8       ; R11 := U8
155 [-]: CALL      R10 2 2      ; R10 := R10(R11)
156 [-]: TEST      R10 1        ; if R10 then PC := 170
157 [-]: JMP       170          ; PC := 170
158 [-]: GETUPVAL  R10 U8       ; R10 := U8
159 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10[0xa2880940]
160 [-]: CALL      R10 2 1      ; R10(R11)
161 [-]: JMP       170          ; PC := 170
162 [-]: GETGLOBAL R10 K7       ; R10 := 0x7b998233
163 [-]: GETUPVAL  R11 U8       ; R11 := U8
164 [-]: CALL      R10 2 2      ; R10 := R10(R11)
165 [-]: TEST      R10 1        ; if R10 then PC := 170
166 [-]: JMP       170          ; PC := 170
167 [-]: GETUPVAL  R10 U8       ; R10 := U8
168 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10[0xa2880940]
169 [-]: CALL      R10 2 1      ; R10(R11)
170 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1251
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: SELF      R2 R1 K0     ; R3 := R1; R2 := R1[0xc6c1d322]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: LE        0 R2 K2      ; if R2 > 12.000000 then PC := 33
  4 [-]: JMP       33           ; PC := 33
  5 [-]: MOVE      R3 R2        ; R3 := R2
  6 [-]: CONST     R4 12        ; R4 := 12.000000
  7 [-]: CONST     R5 1         ; R5 := 1.000000
  8 [-]: FORPREP   R3 32        ; R3 -= R5; PC := 32
  9 [-]: SELF      R7 R1 K3     ; R8 := R1; R7 := R1[0xf80e8dff]
 10 [-]: MOVE      R9 R6        ; R9 := R6
 11 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 12 [-]: LT        0 K4 R7      ; if 0.000000 >= R7 then PC := 32
 13 [-]: JMP       32           ; PC := 32
 14 [-]: GETGLOBAL R7 K5        ; R7 := 0x33bdd652
 15 [-]: GETTABLE  R7 R7 K6     ; R7 := R7[0x23d5322f]
 16 [-]: MOVE      R8 R0        ; R8 := R0
 17 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 18 [-]: SETTABLE  R9 K7 R6     ; R9["DamageType"] := R6
 19 [-]: GETUPVAL  R10 U0       ; R10 := U0
 20 [-]: ADD       R11 R6 K9    ; R11 := R6 + 1.000000
 21 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
 22 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["Icon"]
 23 [-]: SETTABLE  R9 K8 R10    ; R9["Icon"] := R10
 24 [-]: GETGLOBAL R10 K11      ; R10 := 0x5bced4c4
 25 [-]: GETTABLE  R10 R10 K12  ; R10 := R10[0x99675e23]
 26 [-]: SELF      R11 R1 K3    ; R12 := R1; R11 := R1[0xf80e8dff]
 27 [-]: MOVE      R13 R6       ; R13 := R6
 28 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
 29 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 30 [-]: SETTABLE  R9 K10 R10   ; R9["Time"] := R10
 31 [-]: CALL      R7 3 1       ; R7(R8,R9)
 32 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 33 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1262
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SecretMiniGameActive"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SecretMiniGameAllowsPause"]
  7 [-]: TEST      R1 0         ; if not R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0xa5e492d4]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x67652851
 15 [-]: CALL      R1 1 2       ; R1 := R1()
 16 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: LEN       R3 R3        ; R3 := # R3
 19 [-]: LT        0 K5 R3      ; if 0.000000 >= R3 then PC := 51
 20 [-]: JMP       51           ; PC := 51
 21 [-]: GETGLOBAL R3 K6        ; R3 := 0xc8802016
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 24 [-]: JMP       49           ; PC := 49
 25 [-]: GETTABLE  R8 R7 K7     ; R8 := R7["Timer"]
 26 [-]: TEST      R8 0         ; if not R8 then PC := 47
 27 [-]: JMP       47           ; PC := 47
 28 [-]: GETTABLE  R8 R7 K7     ; R8 := R7["Timer"]
 29 [-]: LT        0 K5 R8      ; if 0.000000 >= R8 then PC := 47
 30 [-]: JMP       47           ; PC := 47
 31 [-]: GETGLOBAL R8 K8        ; R8 := 0x5bced4c4
 32 [-]: GETTABLE  R8 R8 K9     ; R8 := R8[0xb62ecfe0]
 33 [-]: CONST     R9 0         ; R9 := 0.000000
 34 [-]: GETTABLE  R10 R7 K7    ; R10 := R7["Timer"]
 35 [-]: SUB       R10 R10 R1   ; R10 := R10 - R1
 36 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 37 [-]: SETTABLE  R7 K7 R8     ; R7["Timer"] := R8
 38 [-]: GETGLOBAL R8 K11       ; R8 := 0x64fb1586
 39 [-]: GETUPVAL  R9 U1        ; R9 := U1
 40 [-]: GETTABLE  R9 R9 K12    ; R9 := R9[0x1142c7a8]
 41 [-]: GETTABLE  R10 R7 K7    ; R10 := R7["Timer"]
 42 [-]: ADD       R10 R10 K13  ; R10 := R10 + 1.000000
 43 [-]: CONST     R11 0        ; R11 := 0.000000
 44 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
 45 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 46 [-]: SETTABLE  R7 K10 R8    ; R7[0xae91e43b] := R8
 47 [-]: SETTABLE  R7 K14 K15   ; R7["InStatEffectList"] := false
 48 [-]: SETTABLE  R2 R6 R7     ; R2[R6] := R7
 49 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 25; R5 := R6 end
 50 [-]: JMP       25           ; PC := 25
 51 [-]: GETUPVAL  R8 U2        ; R8 := U2
 52 [-]: MOVE      R9 R2        ; R9 := R2
 53 [-]: GETUPVAL  R10 U3       ; R10 := U3
 54 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["DamageController"]
 55 [-]: CALL      R8 3 1       ; R8(R9,R10)
 56 [-]: GETGLOBAL R8 K17       ; R8 := 0x7b998233
 57 [-]: GETUPVAL  R9 U4        ; R9 := U4
 58 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 59 [-]: TEST      R8 1         ; if R8 then PC := 81
 60 [-]: JMP       81           ; PC := 81
 61 [-]: GETUPVAL  R8 U4        ; R8 := U4
 62 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xf2deaf69]
 63 [-]: GETGLOBAL R10 K19      ; R10 := gLotusVehicleAvatarType
 64 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 65 [-]: TEST      R8 0         ; if not R8 then PC := 81
 66 [-]: JMP       81           ; PC := 81
 67 [-]: GETUPVAL  R8 U4        ; R8 := U4
 68 [-]: SELF      R8 R8 K20    ; R9 := R8; R8 := R8[0xff005826]
 69 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 70 [-]: GETGLOBAL R9 K17       ; R9 := 0x7b998233
 71 [-]: MOVE      R10 R8       ; R10 := R8
 72 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 73 [-]: TEST      R9 1         ; if R9 then PC := 81
 74 [-]: JMP       81           ; PC := 81
 75 [-]: SELF      R9 R8 K21    ; R10 := R8; R9 := R8[0x1ac1655c]
 76 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 77 [-]: GETUPVAL  R10 U2       ; R10 := U2
 78 [-]: MOVE      R11 R2       ; R11 := R2
 79 [-]: MOVE      R12 R9       ; R12 := R9
 80 [-]: CALL      R10 3 1      ; R10(R11,R12)
 81 [-]: LEN       R10 R2       ; R10 := # R2
 82 [-]: CONST     R11 1        ; R11 := 1.000000
 83 [-]: LOADKB    R12 0 0      ; R12 := false
 84 [-]: GETUPVAL  R13 U5       ; R13 := U5
 85 [-]: EQ        1 R13 K22    ; if R13 == nil then PC := 152
 86 [-]: JMP       152          ; PC := 152
 87 [-]: CONST     R13 1        ; R13 := 1.000000
 88 [-]: GETUPVAL  R14 U5       ; R14 := U5
 89 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14[0x5fbddc1a]
 90 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 91 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 152
 92 [-]: JMP       152          ; PC := 152
 93 [-]: GETUPVAL  R14 U5       ; R14 := U5
 94 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14[0x5465f8f3]
 95 [-]: MOVE      R16 R13      ; R16 := R13
 96 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 97 [-]: GETGLOBAL R15 K17      ; R15 := 0x7b998233
 98 [-]: MOVE      R16 R14      ; R16 := R14
 99 [-]: CALL      R15 2 2      ; R15 := R15(R16)
100 [-]: TEST      R15 1        ; if R15 then PC := 152
101 [-]: JMP       152          ; PC := 152
102 [-]: GETTABLE  R15 R14 K25  ; R15 := R14["mIsDebuff"]
103 [-]: TEST      R15 0        ; if not R15 then PC := 152
104 [-]: JMP       152          ; PC := 152
105 [-]: GETTABLE  R15 R14 K26  ; R15 := R14["mAbilityType"]
106 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 109
107 [-]: JMP       109          ; PC := 109
108 [-]: JMP       152          ; PC := 152
109 [-]: ADD       R11 R13 K13  ; R11 := R13 + 1.000000
110 [-]: LOADKB    R15 0 0      ; R15 := false
111 [-]: CONST     R16 1        ; R16 := 1.000000
112 [-]: MOVE      R17 R10      ; R17 := R10
113 [-]: CONST     R18 1        ; R18 := 1.000000
114 [-]: FORPREP   R16 139      ; R16 -= R18; PC := 139
115 [-]: GETTABLE  R20 R2 R19   ; R20 := R2[R19]
116 [-]: EQ        1 R20 K22    ; if R20 == nil then PC := 139
117 [-]: JMP       139          ; PC := 139
118 [-]: GETTABLE  R20 R2 R19   ; R20 := R2[R19]
119 [-]: GETTABLE  R20 R20 K27  ; R20 := R20["DamageType"]
120 [-]: GETTABLE  R21 R14 K28  ; R21 := R14["mDamageType"]
121 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 139
122 [-]: JMP       139          ; PC := 139
123 [-]: GETTABLE  R20 R2 R19   ; R20 := R2[R19]
124 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["Time"]
125 [-]: GETTABLE  R21 R14 K29  ; R21 := R14["mBuffData"]
126 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 135
127 [-]: JMP       135          ; PC := 135
128 [-]: GETTABLE  R20 R2 R19   ; R20 := R2[R19]
129 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["Time"]
130 [-]: SETTABLE  R14 K29 R20  ; R14["mBuffData"] := R20
131 [-]: GETUPVAL  R20 U5       ; R20 := U5
132 [-]: GETTABLE  R20 R20 K30  ; R20 := R20[0xb15e6aca]
133 [-]: MOVE      R21 R14      ; R21 := R14
134 [-]: CALL      R20 2 1      ; R20(R21)
135 [-]: GETTABLE  R20 R2 R19   ; R20 := R2[R19]
136 [-]: SETTABLE  R20 K14 K31  ; R20["InStatEffectList"] := true
137 [-]: LOADKB    R15 1 0      ; R15 := true
138 [-]: JMP       140          ; PC := 140
139 [-]: FORLOOP   R16 115      ; R16 += R18; if R16 <= R17 then begin PC := 115; R19 := R16 end
140 [-]: TEST      R15 1        ; if R15 then PC := 150
141 [-]: JMP       150          ; PC := 150
142 [-]: LOADKB    R12 1 0      ; R12 := true
143 [-]: GETUPVAL  R20 U5       ; R20 := U5
144 [-]: SELF      R20 R20 K32  ; R21 := R20; R20 := R20[0x9ae7e2d2]
145 [-]: MOVE      R22 R13      ; R22 := R13
146 [-]: LOADKB    R23 1 0      ; R23 := true
147 [-]: LOADKB    R24 1 0      ; R24 := true
148 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
149 [-]: JMP       88           ; PC := 88
150 [-]: ADD       R13 R13 K13  ; R13 := R13 + 1.000000
151 [-]: JMP       88           ; PC := 88
152 [-]: CONST     R20 1        ; R20 := 1.000000
153 [-]: MOVE      R21 R10      ; R21 := R10
154 [-]: CONST     R22 1        ; R22 := 1.000000
155 [-]: FORPREP   R20 211      ; R20 -= R22; PC := 211
156 [-]: GETTABLE  R24 R2 R23   ; R24 := R2[R23]
157 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["InStatEffectList"]
158 [-]: TEST      R24 1        ; if R24 then PC := 211
159 [-]: JMP       211          ; PC := 211
160 [-]: LOADKB    R12 1 0      ; R12 := true
161 [-]: NEWTABLE  R24 0 6      ; R24 := {}
162 [-]: SETTABLE  R24 K33 K13  ; R24["mBuffType"] := 1.000000
163 [-]: SETTABLE  R24 K25 K31  ; R24["mIsDebuff"] := true
164 [-]: GETTABLE  R25 R2 R23   ; R25 := R2[R23]
165 [-]: GETTABLE  R25 R25 K27  ; R25 := R25["DamageType"]
166 [-]: SETTABLE  R24 K28 R25  ; R24["mDamageType"] := R25
167 [-]: GETTABLE  R25 R2 R23   ; R25 := R2[R23]
168 [-]: GETTABLE  R25 R25 K36  ; R25 := R25["Icon"]
169 [-]: SETTABLE  R24 K35 R25  ; R24["mIcon"] := R25
170 [-]: SETTABLE  R24 K37 K38  ; R24["mDesc"] := ""
171 [-]: GETTABLE  R25 R2 R23   ; R25 := R2[R23]
172 [-]: GETTABLE  R25 R25 K10  ; R25 := R25["Time"]
173 [-]: SETTABLE  R24 K29 R25  ; R24["mBuffData"] := R25
174 [-]: GETTABLE  R25 R2 R23   ; R25 := R2[R23]
175 [-]: GETTABLE  R25 R25 K39  ; R25 := R25["Description"]
176 [-]: EQ        1 R25 K22    ; if R25 == nil then PC := 182
177 [-]: JMP       182          ; PC := 182
178 [-]: GETTABLE  R25 R2 R23   ; R25 := R2[R23]
179 [-]: GETTABLE  R25 R25 K39  ; R25 := R25["Description"]
180 [-]: SETTABLE  R24 K37 R25  ; R24["mDesc"] := R25
181 [-]: JMP       197          ; PC := 197
182 [-]: GETGLOBAL R25 K40      ; R25 := 0x03f57322
183 [-]: GETTABLE  R26 R2 R23   ; R26 := R2[R23]
184 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["DamageType"]
185 [-]: CALL      R25 2 2      ; R25 := R25(R26)
186 [-]: EQ        1 R25 K22    ; if R25 == nil then PC := 197
187 [-]: JMP       197          ; PC := 197
188 [-]: GETUPVAL  R25 U6       ; R25 := U6
189 [-]: GETGLOBAL R26 K40      ; R26 := 0x03f57322
190 [-]: GETTABLE  R27 R2 R23   ; R27 := R2[R23]
191 [-]: GETTABLE  R27 R27 K27  ; R27 := R27["DamageType"]
192 [-]: CALL      R26 2 2      ; R26 := R26(R27)
193 [-]: ADD       R26 R26 K13  ; R26 := R26 + 1.000000
194 [-]: GETTABLE  R25 R25 R26  ; R25 := R25[R26]
195 [-]: GETTABLE  R25 R25 K41  ; R25 := R25["NameTag"]
196 [-]: SETTABLE  R24 K37 R25  ; R24["mDesc"] := R25
197 [-]: GETTABLE  R25 R24 K29  ; R25 := R24["mBuffData"]
198 [-]: EQ        1 R25 K22    ; if R25 == nil then PC := 203
199 [-]: JMP       203          ; PC := 203
200 [-]: GETTABLE  R25 R24 K29  ; R25 := R24["mBuffData"]
201 [-]: EQ        0 R25 K38    ; if R25 ~= "" then PC := 204
202 [-]: JMP       204          ; PC := 204
203 [-]: SETTABLE  R24 K33 K5   ; R24["mBuffType"] := 0.000000
204 [-]: GETUPVAL  R25 U5       ; R25 := U5
205 [-]: SELF      R25 R25 K42  ; R26 := R25; R25 := R25[0x45082a31]
206 [-]: MOVE      R27 R11      ; R27 := R11
207 [-]: MOVE      R28 R24      ; R28 := R24
208 [-]: LOADKB    R29 1 0      ; R29 := true
209 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
210 [-]: ADD       R11 R11 K13  ; R11 := R11 + 1.000000
211 [-]: FORLOOP   R20 156      ; R20 += R22; if R20 <= R21 then begin PC := 156; R23 := R20 end
212 [-]: TEST      R12 1        ; if R12 then PC := 226
213 [-]: JMP       226          ; PC := 226
214 [-]: GETUPVAL  R25 U7       ; R25 := U7
215 [-]: GETUPVAL  R26 U8       ; R26 := U8
216 [-]: EQ        1 R25 R26    ; if R25 == R26 then PC := 226
217 [-]: JMP       226          ; PC := 226
218 [-]: LOADKB    R12 1 0      ; R12 := true
219 [-]: GETUPVAL  R25 U8       ; R25 := U8
220 [-]: SETUPVAL  R25 U7       ; U82 := R7
221 [-]: GETUPVAL  R25 U5       ; R25 := U5
222 [-]: SELF      R25 R25 K43  ; R26 := R25; R25 := R25[0x71e9ac81]
223 [-]: LOADNIL   R27 R27      ; R27 := nil
224 [-]: LOADKB    R28 1 0      ; R28 := true
225 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
226 [-]: TEST      R12 0        ; if not R12 then PC := 234
227 [-]: JMP       234          ; PC := 234
228 [-]: GETUPVAL  R25 U5       ; R25 := U5
229 [-]: SELF      R25 R25 K43  ; R26 := R25; R25 := R25[0x71e9ac81]
230 [-]: LOADNIL   R27 R27      ; R27 := nil
231 [-]: LOADKB    R28 1 0      ; R28 := true
232 [-]: LOADKB    R29 1 0      ; R29 := true
233 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
234 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1375
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Cached"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 45
  4 [-]: JMP       45           ; PC := 45
  5 [-]: CONST     R1 1         ; R1 := 1.000000
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Buffs"]
  8 [-]: LEN       R2 R2        ; R2 := # R2
  9 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 45
 10 [-]: JMP       45           ; PC := 45
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Buffs"]
 13 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 14 [-]: LOADKB    R3 1 0       ; R3 := true
 15 [-]: GETGLOBAL R4 K2        ; R4 := 0x6c97a788
 16 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0xd6ae36be]
 17 [-]: GETTABLE  R5 R2 K4     ; R5 := R2["buffType"]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 0         ; if not R4 then PC := 41
 20 [-]: JMP       41           ; PC := 41
 21 [-]: GETTABLE  R4 R2 K5     ; R4 := R2["buffData"]
 22 [-]: LE        0 K6 R4      ; if 0.000000 > R4 then PC := 41
 23 [-]: JMP       41           ; PC := 41
 24 [-]: GETGLOBAL R4 K7        ; R4 := 0x5bced4c4
 25 [-]: GETTABLE  R4 R4 K8     ; R4 := R4[0xb62ecfe0]
 26 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["buffData"]
 27 [-]: SUB       R5 R5 R0     ; R5 := R5 - R0
 28 [-]: CONST     R6 0         ; R6 := 0.000000
 29 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 30 [-]: SETTABLE  R2 K5 R4     ; R2["buffData"] := R4
 31 [-]: GETTABLE  R4 R2 K5     ; R4 := R2["buffData"]
 32 [-]: LE        0 R4 K6      ; if R4 > 0.000000 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: LOADKB    R3 0 0       ; R3 := false
 35 [-]: GETGLOBAL R4 K9        ; R4 := 0x33bdd652
 36 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x9c1f3b5a]
 37 [-]: GETUPVAL  R5 U0        ; R5 := U0
 38 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Buffs"]
 39 [-]: MOVE      R6 R1        ; R6 := R1
 40 [-]: CALL      R4 3 1       ; R4(R5,R6)
 41 [-]: TEST      R3 0         ; if not R3 then PC := 6
 42 [-]: JMP       6            ; PC := 6
 43 [-]: ADD       R1 R1 K11    ; R1 := R1 + 1.000000
 44 [-]: JMP       6            ; PC := 6
 45 [-]: GETUPVAL  R4 U1        ; R4 := U1
 46 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETUPVAL  R4 U2        ; R4 := U2
 49 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["IsSpectating"]
 50 [-]: TEST      R4 0         ; if not R4 then PC := 56
 51 [-]: JMP       56           ; PC := 56
 52 [-]: GETUPVAL  R4 U3        ; R4 := U3
 53 [-]: TEST      R4 1         ; if R4 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: RETURN    R0 1         ; return 
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["IsSpectating"]
 58 [-]: TEST      R4 1         ; if R4 then PC := 91
 59 [-]: JMP       91           ; PC := 91
 60 [-]: GETUPVAL  R4 U4        ; R4 := U4
 61 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 123
 62 [-]: JMP       123          ; PC := 123
 63 [-]: GETUPVAL  R4 U4        ; R4 := U4
 64 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x5a32db44]
 65 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 66 [-]: TEST      R4 0         ; if not R4 then PC := 123
 67 [-]: JMP       123          ; PC := 123
 68 [-]: GETUPVAL  R4 U4        ; R4 := U4
 69 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x1f7e8969]
 70 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 71 [-]: CONST     R5 1         ; R5 := 1.000000
 72 [-]: LEN       R6 R4        ; R6 := # R4
 73 [-]: CONST     R7 1         ; R7 := 1.000000
 74 [-]: FORPREP   R5 86        ; R5 -= R7; PC := 86
 75 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 76 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["addBuff"]
 77 [-]: TEST      R9 0         ; if not R9 then PC := 83
 78 [-]: JMP       83           ; PC := 83
 79 [-]: GETUPVAL  R9 U5        ; R9 := U5
 80 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 81 [-]: CALL      R9 2 1       ; R9(R10)
 82 [-]: JMP       86           ; PC := 86
 83 [-]: GETUPVAL  R9 U6        ; R9 := U6
 84 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 85 [-]: CALL      R9 2 1       ; R9(R10)
 86 [-]: FORLOOP   R5 75        ; R5 += R7; if R5 <= R6 then begin PC := 75; R8 := R5 end
 87 [-]: GETUPVAL  R9 U4        ; R9 := U4
 88 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9[0x484bc106]
 89 [-]: CALL      R9 2 1       ; R9(R10)
 90 [-]: JMP       123          ; PC := 123
 91 [-]: GETGLOBAL R9 K18       ; R9 := 0x7b998233
 92 [-]: GETUPVAL  R10 U7       ; R10 := U7
 93 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 94 [-]: TEST      R9 1         ; if R9 then PC := 123
 95 [-]: JMP       123          ; PC := 123
 96 [-]: GETUPVAL  R9 U3        ; R9 := U3
 97 [-]: TEST      R9 0         ; if not R9 then PC := 123
 98 [-]: JMP       123          ; PC := 123
 99 [-]: GETUPVAL  R9 U7        ; R9 := U7
100 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x1f7e8969]
101 [-]: CALL      R9 2 2       ; R9 := R9(R10)
102 [-]: CONST     R10 1        ; R10 := 1.000000
103 [-]: LEN       R11 R9       ; R11 := # R9
104 [-]: CONST     R12 1        ; R12 := 1.000000
105 [-]: FORPREP   R10 122      ; R10 -= R12; PC := 122
106 [-]: GETGLOBAL R14 K18      ; R14 := 0x7b998233
107 [-]: GETTABLE  R15 R9 R13   ; R15 := R9[R13]
108 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["abilityType"]
109 [-]: CALL      R14 2 2      ; R14 := R14(R15)
110 [-]: TEST      R14 1        ; if R14 then PC := 122
111 [-]: JMP       122          ; PC := 122
112 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
113 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["abilityType"]
114 [-]: SELF      R14 R14 K20  ; R15 := R14; R14 := R14[0xf2deaf69]
115 [-]: GETGLOBAL R16 K21      ; R16 := 0xbaec173b
116 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
117 [-]: TEST      R14 0        ; if not R14 then PC := 122
118 [-]: JMP       122          ; PC := 122
119 [-]: GETUPVAL  R14 U5       ; R14 := U5
120 [-]: GETTABLE  R15 R9 R13   ; R15 := R9[R13]
121 [-]: CALL      R14 2 1      ; R14(R15)
122 [-]: FORLOOP   R10 106      ; R10 += R12; if R10 <= R11 then begin PC := 106; R13 := R10 end
123 [-]: GETGLOBAL R14 K18      ; R14 := 0x7b998233
124 [-]: GETUPVAL  R15 U7       ; R15 := U7
125 [-]: CALL      R14 2 2      ; R14 := R14(R15)
126 [-]: TEST      R14 1        ; if R14 then PC := 133
127 [-]: JMP       133          ; PC := 133
128 [-]: GETUPVAL  R14 U7       ; R14 := U7
129 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14[0x2047cfe7]
130 [-]: CALL      R14 2 2      ; R14 := R14(R15)
131 [-]: TEST      R14 0        ; if not R14 then PC := 148
132 [-]: JMP       148          ; PC := 148
133 [-]: GETUPVAL  R14 U1       ; R14 := U1
134 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14[0x5fbddc1a]
135 [-]: CALL      R14 2 2      ; R14 := R14(R15)
136 [-]: LT        0 K6 R14     ; if 0.000000 >= R14 then PC := 148
137 [-]: JMP       148          ; PC := 148
138 [-]: GETUPVAL  R14 U1       ; R14 := U1
139 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14[0x7c09c373]
140 [-]: CALL      R14 2 1      ; R14(R15)
141 [-]: GETUPVAL  R14 U1       ; R14 := U1
142 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x71e9ac81]
143 [-]: CALL      R14 2 1      ; R14(R15)
144 [-]: GETUPVAL  R14 U1       ; R14 := U1
145 [-]: SETTABLE  R14 K26 K12  ; R14["mVisNameId"] := nil
146 [-]: GETUPVAL  R14 U1       ; R14 := U1
147 [-]: SETTABLE  R14 K27 K12  ; R14["mVisNameFadeTimer"] := nil
148 [-]: GETUPVAL  R14 U1       ; R14 := U1
149 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["mVisNameId"]
150 [-]: EQ        1 R14 K12    ; if R14 == nil then PC := 204
151 [-]: JMP       204          ; PC := 204
152 [-]: GETUPVAL  R14 U1       ; R14 := U1
153 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["mVisNameFadeTimer"]
154 [-]: EQ        1 R14 K12    ; if R14 == nil then PC := 204
155 [-]: JMP       204          ; PC := 204
156 [-]: GETUPVAL  R14 U1       ; R14 := U1
157 [-]: SELF      R14 R14 K28  ; R15 := R14; R14 := R14[0xca30dfb6]
158 [-]: GETUPVAL  R16 U1       ; R16 := U1
159 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["mVisNameId"]
160 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
161 [-]: GETGLOBAL R15 K18      ; R15 := 0x7b998233
162 [-]: MOVE      R16 R14      ; R16 := R14
163 [-]: CALL      R15 2 2      ; R15 := R15(R16)
164 [-]: TEST      R15 1        ; if R15 then PC := 200
165 [-]: JMP       200          ; PC := 200
166 [-]: GETTABLE  R15 R14 K29  ; R15 := R14["mClipName"]
167 [-]: EQ        1 R15 K12    ; if R15 == nil then PC := 200
168 [-]: JMP       200          ; PC := 200
169 [-]: GETUPVAL  R15 U1       ; R15 := U1
170 [-]: GETGLOBAL R16 K7       ; R16 := 0x5bced4c4
171 [-]: GETTABLE  R16 R16 K8   ; R16 := R16[0xb62ecfe0]
172 [-]: GETUPVAL  R17 U1       ; R17 := U1
173 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["mVisNameFadeTimer"]
174 [-]: SUB       R17 R17 R0   ; R17 := R17 - R0
175 [-]: CONST     R18 0        ; R18 := 0.000000
176 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
177 [-]: SETTABLE  R15 K27 R16  ; R15["mVisNameFadeTimer"] := R16
178 [-]: GETUPVAL  R15 U1       ; R15 := U1
179 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["mVisNameFadeTimer"]
180 [-]: GETUPVAL  R16 U1       ; R16 := U1
181 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["mVisNameFadeDuration"]
182 [-]: DIV       R15 R15 R16  ; R15 := R15 / R16
183 [-]: MUL       R15 R15 K31  ; R15 := R15 * 100.000000
184 [-]: GETGLOBAL R16 K32      ; R16 := 0xae91e43b
185 [-]: SELF      R16 R16 K33  ; R17 := R16; R16 := R16[0xf64b7262]
186 [-]: GETTABLE  R18 R14 K29  ; R18 := R14["mClipName"]
187 [-]: LOADK     R19 K34      ; R19 := "StatName"
188 [-]: CONST     R20 10       ; R20 := 10.000000
189 [-]: MOVE      R21 R15      ; R21 := R15
190 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
191 [-]: GETUPVAL  R16 U1       ; R16 := U1
192 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["mVisNameFadeTimer"]
193 [-]: EQ        0 R16 K6     ; if R16 ~= 0.000000 then PC := 204
194 [-]: JMP       204          ; PC := 204
195 [-]: GETUPVAL  R16 U1       ; R16 := U1
196 [-]: SETTABLE  R16 K26 K12  ; R16["mVisNameId"] := nil
197 [-]: GETUPVAL  R16 U1       ; R16 := U1
198 [-]: SETTABLE  R16 K27 K12  ; R16["mVisNameFadeTimer"] := nil
199 [-]: JMP       204          ; PC := 204
200 [-]: GETUPVAL  R16 U1       ; R16 := U1
201 [-]: SETTABLE  R16 K26 K12  ; R16["mVisNameId"] := nil
202 [-]: GETUPVAL  R16 U1       ; R16 := U1
203 [-]: SETTABLE  R16 K27 K12  ; R16["mVisNameFadeTimer"] := nil
204 [-]: GETUPVAL  R16 U1       ; R16 := U1
205 [-]: SELF      R16 R16 K23  ; R17 := R16; R16 := R16[0x5fbddc1a]
206 [-]: CALL      R16 2 2      ; R16 := R16(R17)
207 [-]: CONST     R17 1        ; R17 := 1.000000
208 [-]: LE        0 R17 R16    ; if R17 > R16 then PC := 312
209 [-]: JMP       312          ; PC := 312
210 [-]: GETUPVAL  R18 U1       ; R18 := U1
211 [-]: SELF      R18 R18 K35  ; R19 := R18; R18 := R18[0x5465f8f3]
212 [-]: MOVE      R20 R17      ; R20 := R17
213 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
214 [-]: LOADKB    R19 1 0      ; R19 := true
215 [-]: EQ        1 R18 K12    ; if R18 == nil then PC := 308
216 [-]: JMP       308          ; PC := 308
217 [-]: GETTABLE  R20 R18 K29  ; R20 := R18["mClipName"]
218 [-]: EQ        1 R20 K12    ; if R20 == nil then PC := 308
219 [-]: JMP       308          ; PC := 308
220 [-]: GETGLOBAL R20 K2       ; R20 := 0x6c97a788
221 [-]: GETTABLE  R20 R20 K3   ; R20 := R20[0xd6ae36be]
222 [-]: GETTABLE  R21 R18 K36  ; R21 := R18["mBuffType"]
223 [-]: CALL      R20 2 2      ; R20 := R20(R21)
224 [-]: TEST      R20 0        ; if not R20 then PC := 283
225 [-]: JMP       283          ; PC := 283
226 [-]: GETTABLE  R20 R18 K37  ; R20 := R18["mBuffData"]
227 [-]: LE        0 K6 R20     ; if 0.000000 > R20 then PC := 283
228 [-]: JMP       283          ; PC := 283
229 [-]: GETGLOBAL R20 K7       ; R20 := 0x5bced4c4
230 [-]: GETTABLE  R20 R20 K8   ; R20 := R20[0xb62ecfe0]
231 [-]: GETTABLE  R21 R18 K37  ; R21 := R18["mBuffData"]
232 [-]: SUB       R21 R21 R0   ; R21 := R21 - R0
233 [-]: CONST     R22 0        ; R22 := 0.000000
234 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
235 [-]: SETTABLE  R18 K37 R20  ; R18["mBuffData"] := R20
236 [-]: GETTABLE  R20 R18 K37  ; R20 := R18["mBuffData"]
237 [-]: LE        0 R20 K6     ; if R20 > 0.000000 then PC := 271
238 [-]: JMP       271          ; PC := 271
239 [-]: GETTABLE  R20 R18 K36  ; R20 := R18["mBuffType"]
240 [-]: EQ        0 R20 K38    ; if R20 ~= 14.000000 then PC := 257
241 [-]: JMP       257          ; PC := 257
242 [-]: GETTABLE  R20 R18 K39  ; R20 := R18["mBuffDataExtra"]
243 [-]: LT        0 K11 R20    ; if 1.000000 >= R20 then PC := 257
244 [-]: JMP       257          ; PC := 257
245 [-]: GETTABLE  R20 R18 K39  ; R20 := R18["mBuffDataExtra"]
246 [-]: SUB       R20 R20 K11  ; R20 := R20 - 1.000000
247 [-]: SETTABLE  R18 K39 R20  ; R18["mBuffDataExtra"] := R20
248 [-]: GETTABLE  R20 R18 K40  ; R20 := R18["mInitialBuffData"]
249 [-]: SETTABLE  R18 K37 R20  ; R18["mBuffData"] := R20
250 [-]: GETUPVAL  R20 U1       ; R20 := U1
251 [-]: SELF      R20 R20 K25  ; R21 := R20; R20 := R20[0x71e9ac81]
252 [-]: LOADNIL   R22 R22      ; R22 := nil
253 [-]: LOADKB    R23 1 0      ; R23 := true
254 [-]: LOADKB    R24 1 0      ; R24 := true
255 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
256 [-]: JMP       283          ; PC := 283
257 [-]: GETUPVAL  R20 U1       ; R20 := U1
258 [-]: SELF      R20 R20 K41  ; R21 := R20; R20 := R20[0x9ae7e2d2]
259 [-]: MOVE      R22 R17      ; R22 := R17
260 [-]: LOADKB    R23 1 0      ; R23 := true
261 [-]: LOADKB    R24 1 0      ; R24 := true
262 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
263 [-]: GETUPVAL  R20 U1       ; R20 := U1
264 [-]: SELF      R20 R20 K25  ; R21 := R20; R20 := R20[0x71e9ac81]
265 [-]: LOADNIL   R22 R22      ; R22 := nil
266 [-]: LOADKB    R23 1 0      ; R23 := true
267 [-]: LOADKB    R24 1 0      ; R24 := true
268 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
269 [-]: LOADKB    R19 0 0      ; R19 := false
270 [-]: JMP       283          ; PC := 283
271 [-]: GETGLOBAL R20 K32      ; R20 := 0xae91e43b
272 [-]: SELF      R20 R20 K42  ; R21 := R20; R20 := R20[0x5f56eeab]
273 [-]: GETTABLE  R22 R18 K29  ; R22 := R18["mClipName"]
274 [-]: LOADK     R23 K43      ; R23 := ".Desc"
275 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
276 [-]: CONST     R23 29       ; R23 := 29.000000
277 [-]: GETUPVAL  R24 U8       ; R24 := U8
278 [-]: GETTABLE  R24 R24 K44  ; R24 := R24[0x1142c7a8]
279 [-]: GETTABLE  R25 R18 K37  ; R25 := R18["mBuffData"]
280 [-]: CONST     R26 1        ; R26 := 1.000000
281 [-]: CALL      R24 3 0      ; R24,... := R24(R25,R26)
282 [-]: CALL      R20 0 1      ; R20(R21,...)
283 [-]: TEST      R19 0        ; if not R19 then PC := 308
284 [-]: JMP       308          ; PC := 308
285 [-]: GETTABLE  R20 R18 K45  ; R20 := R18["WaitingForIcon"]
286 [-]: TEST      R20 0        ; if not R20 then PC := 308
287 [-]: JMP       308          ; PC := 308
288 [-]: GETUPVAL  R20 U9       ; R20 := U9
289 [-]: GETTABLE  R21 R18 K46  ; R21 := R18["Icon"]
290 [-]: CALL      R20 2 2      ; R20 := R20(R21)
291 [-]: TEST      R20 0        ; if not R20 then PC := 308
292 [-]: JMP       308          ; PC := 308
293 [-]: SETTABLE  R18 K45 K47  ; R18["WaitingForIcon"] := false
294 [-]: GETGLOBAL R20 K32      ; R20 := 0xae91e43b
295 [-]: SELF      R20 R20 K48  ; R21 := R20; R20 := R20[0xc0a3774b]
296 [-]: GETTABLE  R22 R18 K29  ; R22 := R18["mClipName"]
297 [-]: LOADK     R23 K49      ; R23 := "Icon.Icon"
298 [-]: CONST     R24 11       ; R24 := 11.000000
299 [-]: LOADKB    R25 1 0      ; R25 := true
300 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
301 [-]: GETGLOBAL R20 K32      ; R20 := 0xae91e43b
302 [-]: SELF      R20 R20 K50  ; R21 := R20; R20 := R20[0x1cb415c1]
303 [-]: GETTABLE  R22 R18 K29  ; R22 := R18["mClipName"]
304 [-]: LOADK     R23 K51      ; R23 := ".Icon.Icon"
305 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
306 [-]: GETTABLE  R23 R18 K46  ; R23 := R18["Icon"]
307 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
308 [-]: TEST      R19 0        ; if not R19 then PC := 208
309 [-]: JMP       208          ; PC := 208
310 [-]: ADD       R17 R17 K11  ; R17 := R17 + 1.000000
311 [-]: JMP       208          ; PC := 208
312 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1493
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: EQ        1 R0 K2      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 5
  5 [-]: LOADKB    R2 1 0       ; R2 := true
  6 [-]: SETTABLE  R1 K1 R2     ; R1["forceLocalRespawn"] := R2
  7 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1498
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
  5 [-]: TEST      R3 0         ; if not R3 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: TEST      R4 0         ; if not R4 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: SELF      R5 R5 K0     ; R6 := R5; R5 := R5[0x20ff29f7]
 11 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
 12 [-]: MOVE      R8 R0        ; R8 := R0
 13 [-]: NEWTABLE  R9 2 0       ; R9 := {}
 14 [-]: MOVE      R10 R3       ; R10 := R3
 15 [-]: MOVE      R11 R4       ; R11 := R4
 16 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
 17 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETGLOBAL R5 K2        ; R5 := 0x3d106989
 20 [-]: LOADK     R6 K3        ; R6 := "Failed to register to AnchorMgr, invalid alignment"
 21 [-]: CALL      R5 2 1       ; R5(R6)
 22 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 1509
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x7f19c438]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 1514
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: CONST     R1 1         ; R1 := 1.000000
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: CONST     R3 1         ; R3 := 1.000000
  5 [-]: FORPREP   R1 15        ; R1 -= R3; PC := 15
  6 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["DamageType"]
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
  9 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["DamageType"]
 10 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: SETTABLE  R5 R4 R0     ; R5[R4] := R0
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 16 [-]: GETGLOBAL R5 K1        ; R5 := 0x33bdd652
 17 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0x23d5322f]
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: CONST     R7 1         ; R7 := 1.000000
 20 [-]: MOVE      R8 R0        ; R8 := R0
 21 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 22 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 1524
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: CONST     R1 1         ; R1 := 1.000000
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: CONST     R3 1         ; R3 := 1.000000
  5 [-]: FORPREP   R1 18        ; R1 -= R3; PC := 18
  6 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["DamageType"]
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
  9 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["DamageType"]
 10 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R5 K1        ; R5 := 0x33bdd652
 13 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0x9c1f3b5a]
 14 [-]: GETUPVAL  R6 U0        ; R6 := U0
 15 [-]: MOVE      R7 R4        ; R7 := R4
 16 [-]: CALL      R5 3 1       ; R5(R6,R7)
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 19 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 1533
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["InventoryController"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["hasCheckedForStatusEffects"]
 21 [-]: TEST      R2 0         ; if not R2 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETUPVAL  R2 U2        ; R2 := U2
 24 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["effectCheckRetry"]
 25 [-]: LT        0 K4 R2      ; if 0.000000 >= R2 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETUPVAL  R2 U2        ; R2 := U2
 28 [-]: GETUPVAL  R3 U2        ; R3 := U2
 29 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["effectCheckRetry"]
 30 [-]: SUB       R3 R3 R1     ; R3 := R3 - R1
 31 [-]: SETTABLE  R2 K3 R3     ; R2[0xbd496aa1] := R3
 32 [-]: GETUPVAL  R2 U2        ; R2 := U2
 33 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["effectCheckRetry"]
 34 [-]: LT        0 R2 K4      ; if R2 >= 0.000000 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: GETUPVAL  R2 U2        ; R2 := U2
 37 [-]: SETTABLE  R2 K2 K5     ; R2["hasCheckedForStatusEffects"] := false
 38 [-]: RETURN    R0 1         ; return 
 39 [-]: GETUPVAL  R2 U2        ; R2 := U2
 40 [-]: SETTABLE  R2 K2 K6     ; R2["hasCheckedForStatusEffects"] := true
 41 [-]: LOADNIL   R2 R2        ; R2 := nil
 42 [-]: GETUPVAL  R3 U2        ; R3 := U2
 43 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["effectOverride"]
 44 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 111
 45 [-]: JMP       111          ; PC := 111
 46 [-]: LOADNIL   R4 R4        ; R4 := nil
 47 [-]: CONST     R5 1         ; R5 := 1.000000
 48 [-]: GETUPVAL  R6 U1        ; R6 := U1
 49 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["InventoryController"]
 50 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6[0x4056d183]
 51 [-]: CONST     R8 0         ; R8 := 0.000000
 52 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 53 [-]: CONST     R7 1         ; R7 := 1.000000
 54 [-]: FORPREP   R5 110       ; R5 -= R7; PC := 110
 55 [-]: GETUPVAL  R9 U1        ; R9 := U1
 56 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["InventoryController"]
 57 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0xe6e56442]
 58 [-]: SUB       R11 R8 K12   ; R11 := R8 - 1.000000
 59 [-]: CONST     R12 0        ; R12 := 0.000000
 60 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 61 [-]: MOVE      R4 R9        ; R4 := R9
 62 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 63 [-]: MOVE      R10 R4       ; R10 := R4
 64 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 65 [-]: TEST      R9 1         ; if R9 then PC := 110
 66 [-]: JMP       110          ; PC := 110
 67 [-]: GETUPVAL  R9 U1        ; R9 := U1
 68 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["InventoryController"]
 69 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0x3dc59189]
 70 [-]: SUB       R11 R8 K12   ; R11 := R8 - 1.000000
 71 [-]: CONST     R12 0        ; R12 := 0.000000
 72 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 73 [-]: LT        0 K4 R9      ; if 0.000000 >= R9 then PC := 110
 74 [-]: JMP       110          ; PC := 110
 75 [-]: SELF      R9 R4 K14    ; R10 := R4; R9 := R4[0xed4e0128]
 76 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 77 [-]: MOVE      R3 R9        ; R3 := R9
 78 [-]: EQ        0 R3 K15     ; if R3 ~= "ShieldDebuffKey" then PC := 85
 79 [-]: JMP       85           ; PC := 85
 80 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 81 [-]: SETTABLE  R9 K16 K17   ; R9["Icon"] := "<SHIELD_DEBUFF_KEY>"
 82 [-]: SETTABLE  R9 K18 K19   ; R9["Description"] := "/Lotus/Language/Items/ShieldDebuffKeyName"
 83 [-]: MOVE      R2 R9        ; R2 := R9
 84 [-]: JMP       105          ; PC := 105
 85 [-]: EQ        0 R3 K20     ; if R3 ~= "HealthDebuffKey" then PC := 92
 86 [-]: JMP       92           ; PC := 92
 87 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 88 [-]: SETTABLE  R9 K16 K21   ; R9["Icon"] := "<HEALTH_DEBUFF_KEY>"
 89 [-]: SETTABLE  R9 K18 K22   ; R9["Description"] := "/Lotus/Language/Items/HealthDebuffKeyName"
 90 [-]: MOVE      R2 R9        ; R2 := R9
 91 [-]: JMP       105          ; PC := 105
 92 [-]: EQ        0 R3 K23     ; if R3 ~= "SpeedDebuffKey" then PC := 99
 93 [-]: JMP       99           ; PC := 99
 94 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 95 [-]: SETTABLE  R9 K16 K24   ; R9["Icon"] := "<SPEED_DEBUFF_KEY>"
 96 [-]: SETTABLE  R9 K18 K25   ; R9["Description"] := "/Lotus/Language/Items/SpeedDebuffKeyName"
 97 [-]: MOVE      R2 R9        ; R2 := R9
 98 [-]: JMP       105          ; PC := 105
 99 [-]: EQ        0 R3 K26     ; if R3 ~= "DamageDebuffKey" then PC := 105
100 [-]: JMP       105          ; PC := 105
101 [-]: NEWTABLE  R9 0 2       ; R9 := {}
102 [-]: SETTABLE  R9 K16 K27   ; R9["Icon"] := "<DAMAGE_DEBUFF_KEY>"
103 [-]: SETTABLE  R9 K18 K28   ; R9["Description"] := "/Lotus/Language/Items/DamageDebuffKeyName"
104 [-]: MOVE      R2 R9        ; R2 := R9
105 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 110
106 [-]: JMP       110          ; PC := 110
107 [-]: SETTABLE  R2 K29 R3    ; R2["DamageType"] := R3
108 [-]: SETTABLE  R2 K30 K31   ; R2["Time"] := ""
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R5 55        ; R5 += R7; if R5 <= R6 then begin PC := 55; R8 := R5 end
111 [-]: GETUPVAL  R9 U3        ; R9 := U3
112 [-]: EQ        1 R9 K8      ; if R9 == nil then PC := 128
113 [-]: JMP       128          ; PC := 128
114 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 121
115 [-]: JMP       121          ; PC := 121
116 [-]: GETUPVAL  R9 U3        ; R9 := U3
117 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["DamageType"]
118 [-]: GETTABLE  R10 R2 K29   ; R10 := R2["DamageType"]
119 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 127
120 [-]: JMP       127          ; PC := 127
121 [-]: GETUPVAL  R9 U4        ; R9 := U4
122 [-]: GETUPVAL  R10 U3       ; R10 := U3
123 [-]: CALL      R9 2 1       ; R9(R10)
124 [-]: LOADNIL   R9 R9        ; R9 := nil
125 [-]: SETUPVAL  R9 U3        ; U82 := R3
126 [-]: JMP       128          ; PC := 128
127 [-]: RETURN    R0 1         ; return 
128 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 134
129 [-]: JMP       134          ; PC := 134
130 [-]: GETUPVAL  R9 U5        ; R9 := U5
131 [-]: MOVE      R10 R2       ; R10 := R2
132 [-]: CALL      R9 2 1       ; R9(R10)
133 [-]: SETUPVAL  R2 U3        ; U82 := R3
134 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 1590
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xb009bbc6
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 40
  8 [-]: JMP       40           ; PC := 40
  9 [-]: NEWTABLE  R4 0 5       ; R4 := {}
 10 [-]: SETTABLE  R4 K2 K3     ; R4["Icon"] := "<SHIELD_DEBUFF_KEY>"
 11 [-]: GETGLOBAL R5 K5        ; R5 := 0x64fb1586
 12 [-]: SELF      R6 R3 K6     ; R7 := R3; R6 := R3[0xd3a9d01f]
 13 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 14 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 15 [-]: SETTABLE  R4 K4 R5     ; R4["Description"] := R5
 16 [-]: SETTABLE  R4 K7 R0     ; R4["DamageType"] := R0
 17 [-]: GETGLOBAL R5 K9        ; R5 := 0x03f57322
 18 [-]: MOVE      R6 R2        ; R6 := R2
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: SETTABLE  R4 K8 R5     ; R4["Timer"] := R5
 21 [-]: GETGLOBAL R5 K9        ; R5 := 0x03f57322
 22 [-]: MOVE      R6 R2        ; R6 := R2
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: SETTABLE  R4 K10 R5    ; R4["Time"] := R5
 25 [-]: EQ        0 R1 K11     ; if R1 ~= "true" then PC := 37
 26 [-]: JMP       37           ; PC := 37
 27 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["Timer"]
 28 [-]: EQ        1 R5 K12     ; if R5 == nil then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["Timer"]
 31 [-]: LT        0 K13 R5     ; if 0.000000 >= R5 then PC := 40
 32 [-]: JMP       40           ; PC := 40
 33 [-]: GETUPVAL  R5 U0        ; R5 := U0
 34 [-]: MOVE      R6 R4        ; R6 := R4
 35 [-]: CALL      R5 2 1       ; R5(R6)
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETUPVAL  R5 U1        ; R5 := U1
 38 [-]: MOVE      R6 R4        ; R6 := R4
 39 [-]: CALL      R5 2 1       ; R5(R6)
 40 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 1607
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x33bdd652
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0x9c1f3b5a]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: CONST     R2 1         ; R2 := 1.000000
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x5f93ee4d]
  8 [-]: LOADKB    R2 0 0       ; R2 := false
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 1612
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xfc31b69e]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CONST     R4 -1        ; R4 := -1.000000
  6 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  7 [-]: SETTABLE  R1 K0 R2     ; R1[1.000000] := R2
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1.000000]
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mInstalled"]
 11 [-]: SETTABLE  R1 K3 K0     ; R1["fake"] := 1.000000
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 14 [-]: SETTABLE  R1 K0 R2     ; R1[1.000000] := R2
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1.000000]
 17 [-]: SETTABLE  R1 K4 K0     ; R1["mCardIndex"] := 1.000000
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1.000000]
 20 [-]: SETTABLE  R1 K5 K6     ; R1["mClipName"] := "Card.Card"
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1.000000]
 23 [-]: SETTABLE  R1 K2 K0     ; R1["mInstalled"] := 1.000000
 24 [-]: GETUPVAL  R1 U2        ; R1 := U2
 25 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1.000000]
 26 [-]: SETTABLE  R1 K7 K9     ; R1["mPolarity"] := 0.000000
 27 [-]: GETUPVAL  R1 U1        ; R1 := U1
 28 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0xcbcefa26]
 29 [-]: GETUPVAL  R2 U2        ; R2 := U2
 30 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[1.000000]
 31 [-]: CALL      R1 2 1       ; R1(R2)
 32 [-]: GETUPVAL  R1 U1        ; R1 := U1
 33 [-]: GETTABLE  R1 R1 K11    ; R1 := R1[0x7b21de70]
 34 [-]: GETUPVAL  R2 U2        ; R2 := U2
 35 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[1.000000]
 36 [-]: GETUPVAL  R3 U2        ; R3 := U2
 37 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[1.000000]
 38 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mClipName"]
 39 [-]: LOADK     R4 K12       ; R4 := ".Card"
 40 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 41 [-]: LOADKB    R4 0 0       ; R4 := false
 42 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 43 [-]: GETUPVAL  R1 U1        ; R1 := U1
 44 [-]: GETTABLE  R1 R1 K13    ; R1 := R1[0x37970f97]
 45 [-]: GETUPVAL  R2 U2        ; R2 := U2
 46 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[1.000000]
 47 [-]: GETUPVAL  R3 U2        ; R3 := U2
 48 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[1.000000]
 49 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mClipName"]
 50 [-]: LOADK     R4 K12       ; R4 := ".Card"
 51 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 52 [-]: LOADKB    R4 1 0       ; R4 := true
 53 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 54 [-]: GETGLOBAL R1 K14       ; R1 := 0xae91e43b
 55 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0xf64b7262]
 56 [-]: GETUPVAL  R3 U2        ; R3 := U2
 57 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[1.000000]
 58 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mClipName"]
 59 [-]: LOADK     R4 K16       ; R4 := "Card.BottomFrame.Equipped"
 60 [-]: CONST     R5 10        ; R5 := 10.000000
 61 [-]: CONST     R6 0         ; R6 := 0.000000
 62 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 63 [-]: GETUPVAL  R1 U3        ; R1 := U3
 64 [-]: GETTABLE  R1 R1 K17    ; R1 := R1[0x659d451f]
 65 [-]: GETGLOBAL R2 K18       ; R2 := 0x2e797504
 66 [-]: CALL      R1 2 1       ; R1(R2)
 67 [-]: GETUPVAL  R1 U2        ; R1 := U2
 68 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1.000000]
 69 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mClipName"]
 70 [-]: GETGLOBAL R2 K14       ; R2 := 0xae91e43b
 71 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0x67bc869f]
 72 [-]: MOVE      R4 R1        ; R4 := R1
 73 [-]: CONST     R5 10        ; R5 := 10.000000
 74 [-]: CONST     R6 0         ; R6 := 0.000000
 75 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 76 [-]: GETGLOBAL R2 K20       ; R2 := 0x25312c9b
 77 [-]: GETGLOBAL R3 K14       ; R3 := 0xae91e43b
 78 [-]: MOVE      R4 R1        ; R4 := R1
 79 [-]: CONST     R5 8         ; R5 := 8.000000
 80 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 81 [-]: CONST     R7 10        ; R7 := 10.000000
 82 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 83 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 84 [-]: CONST     R8 100       ; R8 := 100.000000
 85 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 86 [-]: LOADK     R8 K22       ; R8 := 0.200000
 87 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 88 [-]: GETGLOBAL R2 K14       ; R2 := 0xae91e43b
 89 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2[0xaade900e]
 90 [-]: LOADK     R4 K24       ; R4 := "Card"
 91 [-]: CONST     R5 11        ; R5 := 11.000000
 92 [-]: LOADKB    R6 1 0       ; R6 := true
 93 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 94 [-]: GETUPVAL  R2 U4        ; R2 := U4
 95 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2[0x5f93ee4d]
 96 [-]: LOADKB    R4 1 0       ; R4 := true
 97 [-]: CALL      R2 3 1       ; R2(R3,R4)
 98 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 1638
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x6c97a788
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x1aba4d9e]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItem"]
  5 [-]: SETTABLE  R1 K2 R2     ; R1["mItemType"] := R2
  6 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mFingerprint"]
  7 [-]: SETTABLE  R1 K4 R2     ; R1["mUpgradeFingerprint"] := R2
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: EQ        0 R2 K6      ; if R2 ~= nil then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 12 [-]: SETUPVAL  R2 U0        ; U82 := R0
 13 [-]: GETGLOBAL R2 K7        ; R2 := 0x33bdd652
 14 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0x23d5322f]
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CONST     R6 -1        ; R6 := -1.000000
 19 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 20 [-]: CALL      R2 3 1       ; R2(R3,R4)
 21 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 1648
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R1 K1        ; R1 := ""
  4 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x7ed0a956
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: SETTABLE  R2 K2 R3     ; R2["mItem"] := R3
  9 [-]: SETTABLE  R2 K4 R1     ; R2["mFingerprint"] := R1
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 1       ; R3(R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 1657
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x0032441c
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["StalkerMode"]
  6 [-]: TEST      R1 0         ; if not R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: EQ        0 R1 K2      ; if R1 ~= 0.000000 then PC := 22
 12 [-]: JMP       22           ; PC := 22
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: SETUPVAL  R1 U0        ; U82 := R0
 15 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 17 [-]: LOADK     R3 K5        ; R3 := "Card"
 18 [-]: CONST     R4 11        ; R4 := 11.000000
 19 [-]: LOADKB    R5 1 0       ; R5 := true
 20 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETGLOBAL R1 K6        ; R1 := 0x9ba7909f
 23 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x5374b92e]
 24 [-]: GETGLOBAL R3 K0        ; R3 := 0x0032441c
 25 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["UIMovie_TransmissionMovie"]
 26 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mTransOnRightSide"]
 31 [-]: TEST      R1 0         ; if not R1 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: CONST     R1 1         ; R1 := 1.000000
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 37 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[2.000000]
 38 [-]: LT        0 R2 K2      ; if R2 >= 0.000000 then PC := 49
 39 [-]: JMP       49           ; PC := 49
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 42 [-]: SETTABLE  R2 K10 K11   ; R2[2.000000] := 3.000000
 43 [-]: GETUPVAL  R2 U2        ; R2 := U2
 44 [-]: GETUPVAL  R3 U0        ; R3 := U0
 45 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 46 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[1.000000]
 47 [-]: CALL      R2 2 1       ; R2(R3)
 48 [-]: JMP       97           ; PC := 97
 49 [-]: GETUPVAL  R2 U0        ; R2 := U0
 50 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 51 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[2.000000]
 52 [-]: LT        0 K2 R2      ; if 0.000000 >= R2 then PC := 97
 53 [-]: JMP       97           ; PC := 97
 54 [-]: GETUPVAL  R2 U0        ; R2 := U0
 55 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 56 [-]: GETUPVAL  R3 U0        ; R3 := U0
 57 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 58 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[2.000000]
 59 [-]: SUB       R3 R3 R0     ; R3 := R3 - R0
 60 [-]: SETTABLE  R2 K10 R3    ; R2[2.000000] := R3
 61 [-]: GETUPVAL  R2 U0        ; R2 := U0
 62 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 63 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[2.000000]
 64 [-]: LT        0 R2 K2      ; if R2 >= 0.000000 then PC := 97
 65 [-]: JMP       97           ; PC := 97
 66 [-]: GETUPVAL  R2 U0        ; R2 := U0
 67 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 68 [-]: SETTABLE  R2 K10 K2    ; R2[2.000000] := 0.000000
 69 [-]: GETUPVAL  R2 U3        ; R2 := U3
 70 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[1.000000]
 71 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mClipName"]
 72 [-]: GETUPVAL  R3 U4        ; R3 := U4
 73 [-]: GETTABLE  R3 R3 K14    ; R3 := R3[0x37970f97]
 74 [-]: GETUPVAL  R4 U3        ; R4 := U3
 75 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[1.000000]
 76 [-]: GETUPVAL  R5 U3        ; R5 := U3
 77 [-]: GETTABLE  R5 R5 K12    ; R5 := R5[1.000000]
 78 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["mClipName"]
 79 [-]: LOADK     R6 K15       ; R6 := ".Card"
 80 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 81 [-]: LOADKB    R6 1 0       ; R6 := true
 82 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 83 [-]: GETGLOBAL R3 K16       ; R3 := 0x25312c9b
 84 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 85 [-]: MOVE      R5 R2        ; R5 := R2
 86 [-]: CONST     R6 8         ; R6 := 8.000000
 87 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 88 [-]: CONST     R8 10        ; R8 := 10.000000
 89 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 90 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 91 [-]: CONST     R9 0         ; R9 := 0.000000
 92 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 93 [-]: LOADK     R9 K18       ; R9 := 0.200000
 94 [-]: CONST     R10 0        ; R10 := 0.000000
 95 [-]: GETUPVAL  R11 U5       ; R11 := U5
 96 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 97 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 1692
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["MinimalHud"]
  3 [-]: TEST      R2 1         ; if R2 then PC := 24
  4 [-]: JMP       24           ; PC := 24
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["IsAlternateHud"]
  7 [-]: TEST      R2 1         ; if R2 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0xb009bbc6
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0xb5be5d4a]
 14 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 15 [-]: LOADK     R5 K6        ; R5 := "Notification"
 16 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETTABLE  R5 R5 K7     ; R5 := R5[0x5a22d251]
 19 [-]: GETGLOBAL R6 K5        ; R6 := 0xae91e43b
 20 [-]: MOVE      R7 R2        ; R7 := R2
 21 [-]: MOVE      R8 R3        ; R8 := R3
 22 [-]: ADD       R9 R4 R1     ; R9 := R4 + R1
 23 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 24 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 1700
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MinimalHud"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["IsAlternateHud"]
  7 [-]: TEST      R1 0         ; if not R1 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf707943e]
 11 [-]: LOADKB    R3 0 0       ; R3 := false
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: JMP       37           ; PC := 37
 14 [-]: CONST     R1 105       ; R1 := 105.000000
 15 [-]: GETGLOBAL R2 K4        ; R2 := 0x25312c9b
 16 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 17 [-]: LOADK     R4 K6        ; R4 := "Notification"
 18 [-]: CONST     R5 1         ; R5 := 1.000000
 19 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 20 [-]: CONST     R7 10        ; R7 := 10.000000
 21 [-]: CONST     R8 5         ; R8 := 5.000000
 22 [-]: CONST     R9 6         ; R9 := 6.000000
 23 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 24 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 25 [-]: CONST     R8 100       ; R8 := 100.000000
 26 [-]: CONST     R9 100       ; R9 := 100.000000
 27 [-]: CONST     R10 100      ; R10 := 100.000000
 28 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 29 [-]: LOADK     R8 K8        ; R8 := 0.350000
 30 [-]: CONST     R9 0         ; R9 := 0.000000
 31 [-]: CLOSURE   R10 0        ; R10 := closure(Function #69.1)
 32 [-]: MOVE      R0 R1        ; R0 := R1
 33 [-]: MOVE      R0 R0        ; R0 := R0
 34 [-]: GETUPVAL  R0 U1        ; R0 := U1
 35 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 36 [-]: CLOSE     R1           ; SAVE R1,...
 37 [-]: RETURN    R0 1         ; return 


; Function #69.1:
;
; Name:            
; Defined at line: 1706
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: LOADK     R2 K2        ; R2 := "Notification"
  4 [-]: CONST     R3 0         ; R3 := 0.000000
  5 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  6 [-]: CONST     R5 5         ; R5 := 5.000000
  7 [-]: CONST     R6 6         ; R6 := 6.000000
  8 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
  9 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 10 [-]: GETUPVAL  R6 U0        ; R6 := U0
 11 [-]: GETUPVAL  R7 U0        ; R7 := U0
 12 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 13 [-]: GETGLOBAL R6 K4        ; R6 := 0x03f57322
 14 [-]: GETUPVAL  R7 U1        ; R7 := U1
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: CONST     R7 0         ; R7 := 0.000000
 17 [-]: CLOSURE   R8 0         ; R8 := closure(Function #69.1.1)
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 20 [-]: RETURN    R0 1         ; return 


; Function #69.1.1:
;
; Name:            
; Defined at line: 1708
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: LOADK     R2 K2        ; R2 := "Notification"
  4 [-]: CONST     R3 7         ; R3 := 7.000000
  5 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  6 [-]: CONST     R5 10        ; R5 := 10.000000
  7 [-]: CONST     R6 5         ; R6 := 5.000000
  8 [-]: CONST     R7 6         ; R7 := 6.000000
  9 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 10 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 11 [-]: CONST     R6 0         ; R6 := 0.000000
 12 [-]: CONST     R7 60        ; R7 := 60.000000
 13 [-]: CONST     R8 60        ; R8 := 60.000000
 14 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 15 [-]: LOADK     R6 K4        ; R6 := 0.350000
 16 [-]: CONST     R7 0         ; R7 := 0.000000
 17 [-]: CLOSURE   R8 0         ; R8 := closure(Function #69.1.1.1)
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 20 [-]: RETURN    R0 1         ; return 


; Function #69.1.1.1:
;
; Name:            
; Defined at line: 1710
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0xf707943e]
  3 [-]: LOADKB    R2 0 0       ; R2 := false
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 1719
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: LOADK     R2 K2        ; R2 := "AbilityPanel.AbilityMessage"
  4 [-]: CONST     R3 8         ; R3 := 8.000000
  5 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  6 [-]: CONST     R5 10        ; R5 := 10.000000
  7 [-]: CONST     R6 0         ; R6 := 0.000000
  8 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
  9 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 10 [-]: CONST     R6 0         ; R6 := 0.000000
 11 [-]: GETUPVAL  R7 U0        ; R7 := U0
 12 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["newX"]
 13 [-]: GETUPVAL  R8 U0        ; R8 := U0
 14 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["offsetX"]
 15 [-]: SUB       R7 R7 R8     ; R7 := R7 - R8
 16 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 17 [-]: LOADK     R6 K6        ; R6 := 0.300000
 18 [-]: CONST     R7 2         ; R7 := 2.000000
 19 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 20 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 1724
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x20b98db3]
  3 [-]: LOADK     R5 K2        ; R5 := "AbilityPanel.AbilityMessage.Label.text"
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x3488eaf1]
  8 [-]: CALL      R3 2 1       ; R3(R4)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 10 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x67bc869f]
 11 [-]: LOADK     R5 K5        ; R5 := "AbilityPanel.AbilityMessage"
 12 [-]: CONST     R6 0         ; R6 := 0.000000
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["newX"]
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["offsetX"]
 17 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 18 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 19 [-]: GETGLOBAL R3 K8        ; R3 := 0x25312c9b
 20 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 21 [-]: LOADK     R5 K5        ; R5 := "AbilityPanel.AbilityMessage"
 22 [-]: CONST     R6 8         ; R6 := 8.000000
 23 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 24 [-]: CONST     R8 10        ; R8 := 10.000000
 25 [-]: CONST     R9 0         ; R9 := 0.000000
 26 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 27 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 28 [-]: CONST     R9 100       ; R9 := 100.000000
 29 [-]: GETUPVAL  R10 U0       ; R10 := U0
 30 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["newX"]
 31 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 32 [-]: CONST     R9 0         ; R9 := 0.250000
 33 [-]: CONST     R10 0        ; R10 := 0.000000
 34 [-]: GETUPVAL  R11 U1       ; R11 := U1
 35 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 36 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 1732
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADKB    R2 0 0       ; R2 := false
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x42b04007]
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: LOADKB    R5 0 0       ; R5 := false
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 11 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0x42b04007]
 12 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Game/AbilitySelected"
 13 [-]: LOADKB    R6 0 0       ; R6 := false
 14 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 15 [-]: SETTABLE  R7 K4 R2     ; R7[0xe72d2edb] := R2
 16 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: LOADK     R5 K5        ; R5 := 16777215.000000
 19 [-]: LOADK     R6 K5        ; R6 := 16777215.000000
 20 [-]: MOVE      R7 R3        ; R7 := R3
 21 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 22 [-]: GETGLOBAL R4 K6        ; R4 := 0x38f10e85
 23 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
 24 [-]: GETGLOBAL R6 K7        ; R6 := 0x7f5022cf
 25 [-]: GETTABLE  R6 R6 K8     ; R6 := R6[0xe8072ded]
 26 [-]: LOADK     R7 K9        ; R7 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
 27 [-]: ADD       R8 R1 K10    ; R8 := R1 + 1.000000
 28 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 29 [-]: LOADK     R7 K11       ; R7 := "Play"
 30 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 31 [-]: LOADKB    R4 1 0       ; R4 := true
 32 [-]: RETURN    R4 2         ; return R4
 33 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 1743
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbd2e96ea]
  4 [-]: CONST     R3 0         ; R3 := 0.250000
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Hide"]
  7 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  8 [-]: SETTABLE  R0 K0 R1     ; R0["timerId"] := R1
  9 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 1748
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADKB    R2 0 0       ; R2 := false
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x42b04007]
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: LOADKB    R5 0 0       ; R5 := false
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: LOADK     R4 K3        ; R4 := 16777215.000000
 12 [-]: LOADK     R5 K4        ; R5 := 366327.000000
 13 [-]: MOVE      R6 R2        ; R6 := R2
 14 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x38f10e85
 16 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 17 [-]: GETGLOBAL R5 K6        ; R5 := 0x7f5022cf
 18 [-]: GETTABLE  R5 R5 K7     ; R5 := R5[0xe8072ded]
 19 [-]: LOADK     R6 K8        ; R6 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
 20 [-]: ADD       R7 R1 K9     ; R7 := R1 + 1.000000
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: LOADK     R6 K10       ; R6 := "Play"
 23 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 24 [-]: GETGLOBAL R3 K11       ; R3 := 0xe72d2edb
 25 [-]: EQ        0 R3 K13     ; if R3 ~= 3.000000 then PC := 53
 26 [-]: JMP       53           ; PC := 53
 27 [-]: GETGLOBAL R3 K14       ; R3 := 0x7b998233
 28 [-]: GETGLOBAL R4 K15       ; R4 := 0xcf7f594a
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 1         ; if R3 then PC := 53
 31 [-]: JMP       53           ; PC := 53
 32 [-]: GETUPVAL  R3 U1        ; R3 := U1
 33 [-]: GETTABLE  R3 R3 K16    ; R3 := R3[0xb5be5d4a]
 34 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 35 [-]: LOADK     R5 K17       ; R5 := "StancePanel.StanceComponent.Stance"
 36 [-]: ADD       R6 R1 K9     ; R6 := R1 + 1.000000
 37 [-]: LOADK     R7 K18       ; R7 := ".Icon"
 38 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 39 [-]: LOADKB    R6 0 0       ; R6 := false
 40 [-]: CALL      R3 4 3       ; R3,R4 := R3(R4,R5,R6)
 41 [-]: GETUPVAL  R5 U2        ; R5 := U2
 42 [-]: ADD       R6 R1 K9     ; R6 := R1 + 1.000000
 43 [-]: GETUPVAL  R7 U1        ; R7 := U1
 44 [-]: GETTABLE  R7 R7 K19    ; R7 := R7[0x5a22d251]
 45 [-]: GETGLOBAL R8 K1        ; R8 := 0xae91e43b
 46 [-]: GETGLOBAL R9 K15       ; R9 := 0xcf7f594a
 47 [-]: MOVE      R10 R3       ; R10 := R3
 48 [-]: MOVE      R11 R4       ; R11 := R4
 49 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 50 [-]: SETTABLE  R5 R6 R7     ; R5[R6] := R7
 51 [-]: GETUPVAL  R5 U3        ; R5 := U3
 52 [-]: SETTABLE  R5 K20 K21   ; R5["mAbilityFxPlayed"] := true
 53 [-]: GETUPVAL  R5 U4        ; R5 := U4
 54 [-]: TEST      R5 0         ; if not R5 then PC := 61
 55 [-]: JMP       61           ; PC := 61
 56 [-]: GETUPVAL  R5 U5        ; R5 := U5
 57 [-]: GETTABLE  R5 R5 K22    ; R5 := R5[0x587aa683]
 58 [-]: MOVE      R6 R2        ; R6 := R2
 59 [-]: GETUPVAL  R7 U6        ; R7 := U6
 60 [-]: CALL      R5 3 1       ; R5(R6,R7)
 61 [-]: GETGLOBAL R5 K14       ; R5 := 0x7b998233
 62 [-]: GETGLOBAL R6 K23       ; R6 := _T
 63 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["RailjackHud_Movie"]
 64 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 65 [-]: TEST      R5 1         ; if R5 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETGLOBAL R5 K23       ; R5 := _T
 68 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["RailjackHud_Movie"]
 69 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5[0xe4162eed]
 70 [-]: LOADK     R7 K26       ; R7 := "NotifyAbilityActivate"
 71 [-]: MOVE      R8 R1        ; R8 := R1
 72 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 73 [-]: LOADKB    R5 1 0       ; R5 := true
 74 [-]: RETURN    R5 2         ; return R5
 75 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 1776
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SecretMiniGameActive"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 46
  4 [-]: JMP       46           ; PC := 46
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: LOADK     R3 K2        ; R3 := 16777215.000000
  8 [-]: CONST     R4 16711680  ; R4 := 16711680.000000
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: TEST      R2 0         ; if not R2 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xc9dd135d]
 16 [-]: LOADK     R4 K4        ; R4 := "NotifyAbilityActivateError"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 20 [-]: GETGLOBAL R3 K0        ; R3 := _T
 21 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["RailjackHud_Movie"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 41
 24 [-]: JMP       41           ; PC := 41
 25 [-]: GETGLOBAL R2 K0        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["RailjackHud_Movie"]
 27 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xe4162eed]
 28 [-]: LOADK     R4 K4        ; R4 := "NotifyAbilityActivateError"
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 31 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 32 [-]: GETGLOBAL R3 K8        ; R3 := 0x674a7881
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 46
 35 [-]: JMP       46           ; PC := 46
 36 [-]: GETUPVAL  R2 U2        ; R2 := U2
 37 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[0x659d451f]
 38 [-]: GETGLOBAL R3 K8        ; R3 := 0x674a7881
 39 [-]: CALL      R2 2 1       ; R2(R3)
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETUPVAL  R2 U2        ; R2 := U2
 42 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[0x659d451f]
 43 [-]: GETGLOBAL R3 K10       ; R3 := 0x0032441c
 44 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["UISound_Error"]
 45 [-]: CALL      R2 2 1       ; R2(R3)
 46 [-]: LOADKB    R2 1 0       ; R2 := true
 47 [-]: RETURN    R2 2         ; return R2
 48 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 1796
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xe72d2edb
  2 [-]: EQ        0 R1 K2      ; if R1 ~= 3.000000 then PC := 34
  3 [-]: JMP       34           ; PC := 34
  4 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0xcf7f594a
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 34
  8 [-]: JMP       34           ; PC := 34
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mAbilityFxPlayed"]
 11 [-]: TEST      R1 0         ; if not R1 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: SETTABLE  R1 K5 K6     ; R1["mAbilityFxPlayed"] := false
 15 [-]: JMP       34           ; PC := 34
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: GETTABLE  R1 R1 K7     ; R1 := R1[0xb5be5d4a]
 18 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 19 [-]: LOADK     R3 K9        ; R3 := "StancePanel.StanceComponent.Stance"
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: LOADK     R5 K10       ; R5 := ".Icon"
 22 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 23 [-]: LOADKB    R4 0 0       ; R4 := false
 24 [-]: CALL      R1 4 3       ; R1,R2 := R1(R2,R3,R4)
 25 [-]: GETUPVAL  R3 U2        ; R3 := U2
 26 [-]: GETUPVAL  R4 U1        ; R4 := U1
 27 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x5a22d251]
 28 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
 29 [-]: GETGLOBAL R6 K4        ; R6 := 0xcf7f594a
 30 [-]: MOVE      R7 R1        ; R7 := R1
 31 [-]: MOVE      R8 R2        ; R8 := R2
 32 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 33 [-]: SETTABLE  R3 R0 R4     ; R3[R0] := R4
 34 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 1810
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["IsAlternateHud"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: TEST      R0 0         ; if not R0 then PC := 31
  7 [-]: JMP       31           ; PC := 31
  8 [-]: GETGLOBAL R1 K1        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["BlockWeaponPanelVisibility"]
 10 [-]: TEST      R1 1         ; if R1 then PC := 45
 11 [-]: JMP       45           ; PC := 45
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 14 [-]: LOADK     R3 K5        ; R3 := "WeaponFrame"
 15 [-]: CONST     R4 11        ; R4 := 11.000000
 16 [-]: LOADKB    R5 1 0       ; R5 := true
 17 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 18 [-]: GETGLOBAL R1 K6        ; R1 := 0x25312c9b
 19 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 20 [-]: LOADK     R3 K5        ; R3 := "WeaponFrame"
 21 [-]: CONST     R4 0         ; R4 := 0.000000
 22 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 23 [-]: CONST     R6 10        ; R6 := 10.000000
 24 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 25 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 26 [-]: CONST     R7 100       ; R7 := 100.000000
 27 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 28 [-]: LOADK     R7 K8        ; R7 := 0.150000
 29 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 30 [-]: JMP       45           ; PC := 45
 31 [-]: GETGLOBAL R1 K6        ; R1 := 0x25312c9b
 32 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 33 [-]: LOADK     R3 K5        ; R3 := "WeaponFrame"
 34 [-]: CONST     R4 0         ; R4 := 0.000000
 35 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 36 [-]: CONST     R6 10        ; R6 := 10.000000
 37 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 38 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 39 [-]: CONST     R7 0         ; R7 := 0.000000
 40 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 41 [-]: LOADK     R7 K8        ; R7 := 0.150000
 42 [-]: CONST     R8 0         ; R8 := 0.000000
 43 [-]: CLOSURE   R9 0         ; R9 := closure(Function #77.1)
 44 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 45 [-]: RETURN    R0 1         ; return 


; Function #77.1:
;
; Name:            
; Defined at line: 1821
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "WeaponFrame"
  4 [-]: CONST     R3 11        ; R3 := 11.000000
  5 [-]: LOADKB    R4 0 0       ; R4 := false
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 1827
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["IsAlternateHud"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: NEWTABLE  R1 2 0       ; R1 := {}
  7 [-]: LOADK     R2 K1        ; R2 := ".EnergyBar"
  8 [-]: LOADK     R3 K2        ; R3 := ".EnergyAmount"
  9 [-]: SETLIST   R1 2 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 2
 10 [-]: NEWTABLE  R2 4 0       ; R2 := {}
 11 [-]: LOADK     R3 K3        ; R3 := ".Ability1"
 12 [-]: LOADK     R4 K4        ; R4 := ".Ability2"
 13 [-]: LOADK     R5 K5        ; R5 := ".Ability3"
 14 [-]: LOADK     R6 K6        ; R6 := ".Ability4"
 15 [-]: SETLIST   R2 4 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: SETTABLE  R3 K7 R0     ; R3["mEnergyVisible"] := R0
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x06d055f9]
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: CONST     R5 100       ; R5 := 100.000000
 22 [-]: CONST     R6 0         ; R6 := 0.000000
 23 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 24 [-]: GETUPVAL  R4 U1        ; R4 := U1
 25 [-]: GETTABLE  R4 R4 K8     ; R4 := R4[0x06d055f9]
 26 [-]: MOVE      R5 R0        ; R5 := R0
 27 [-]: CONST     R6 18        ; R6 := 18.000000
 28 [-]: CONST     R7 32        ; R7 := 32.000000
 29 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 30 [-]: GETGLOBAL R5 K9        ; R5 := 0xc8802016
 31 [-]: MOVE      R6 R1        ; R6 := R1
 32 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 33 [-]: JMP       48           ; PC := 48
 34 [-]: GETGLOBAL R10 K10      ; R10 := 0x25312c9b
 35 [-]: GETGLOBAL R11 K11      ; R11 := 0xae91e43b
 36 [-]: LOADK     R12 K12      ; R12 := "AbilityPanel"
 37 [-]: MOVE      R13 R9       ; R13 := R9
 38 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 39 [-]: CONST     R13 0        ; R13 := 0.000000
 40 [-]: NEWTABLE  R14 1 0      ; R14 := {}
 41 [-]: CONST     R15 10       ; R15 := 10.000000
 42 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
 43 [-]: NEWTABLE  R15 1 0      ; R15 := {}
 44 [-]: MOVE      R16 R3       ; R16 := R3
 45 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
 46 [-]: LOADK     R16 K14      ; R16 := 0.150000
 47 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
 48 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 34; R7 := R8 end
 49 [-]: JMP       34           ; PC := 34
 50 [-]: GETGLOBAL R10 K9       ; R10 := 0xc8802016
 51 [-]: MOVE      R11 R2       ; R11 := R2
 52 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 53 [-]: JMP       68           ; PC := 68
 54 [-]: GETGLOBAL R15 K10      ; R15 := 0x25312c9b
 55 [-]: GETGLOBAL R16 K11      ; R16 := 0xae91e43b
 56 [-]: LOADK     R17 K12      ; R17 := "AbilityPanel"
 57 [-]: MOVE      R18 R14      ; R18 := R14
 58 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
 59 [-]: CONST     R18 0        ; R18 := 0.000000
 60 [-]: NEWTABLE  R19 1 0      ; R19 := {}
 61 [-]: CONST     R20 1        ; R20 := 1.000000
 62 [-]: SETLIST   R19 1 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
 63 [-]: NEWTABLE  R20 1 0      ; R20 := {}
 64 [-]: MOVE      R21 R4       ; R21 := R4
 65 [-]: SETLIST   R20 1 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
 66 [-]: LOADK     R21 K14      ; R21 := 0.150000
 67 [-]: CALL      R15 7 1      ; R15(R16,R17,R18,R19,R20,R21)
 68 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 54; R12 := R13 end
 69 [-]: JMP       54           ; PC := 54
 70 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 1844
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["IsAlternateHud"]
  3 [-]: TEST      R3 0         ; if not R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: TEST      R0 0         ; if not R0 then PC := 40
 10 [-]: JMP       40           ; PC := 40
 11 [-]: TEST      R2 0         ; if not R2 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R3 K2        ; R3 := _T
 14 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MinimalHud"]
 15 [-]: TEST      R3 1         ; if R3 then PC := 40
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R3 K2        ; R3 := _T
 18 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["BlockAbilityPanelVisibility"]
 19 [-]: TEST      R3 1         ; if R3 then PC := 54
 20 [-]: JMP       54           ; PC := 54
 21 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 22 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xaade900e]
 23 [-]: LOADK     R5 K7        ; R5 := "AbilityPanel"
 24 [-]: CONST     R6 11        ; R6 := 11.000000
 25 [-]: LOADKB    R7 1 0       ; R7 := true
 26 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 27 [-]: GETGLOBAL R3 K8        ; R3 := 0x25312c9b
 28 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 29 [-]: LOADK     R5 K7        ; R5 := "AbilityPanel"
 30 [-]: CONST     R6 0         ; R6 := 0.000000
 31 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 32 [-]: CONST     R8 10        ; R8 := 10.000000
 33 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 34 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 35 [-]: CONST     R9 100       ; R9 := 100.000000
 36 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 37 [-]: LOADK     R9 K10       ; R9 := 0.150000
 38 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 39 [-]: JMP       54           ; PC := 54
 40 [-]: GETGLOBAL R3 K8        ; R3 := 0x25312c9b
 41 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 42 [-]: LOADK     R5 K7        ; R5 := "AbilityPanel"
 43 [-]: CONST     R6 0         ; R6 := 0.000000
 44 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 45 [-]: CONST     R8 10        ; R8 := 10.000000
 46 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 47 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 48 [-]: CONST     R9 0         ; R9 := 0.000000
 49 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 50 [-]: LOADK     R9 K10       ; R9 := 0.150000
 51 [-]: CONST     R10 0        ; R10 := 0.000000
 52 [-]: CLOSURE   R11 0        ; R11 := closure(Function #79.1)
 53 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 54 [-]: TEST      R0 0         ; if not R0 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETGLOBAL R3 K2        ; R3 := _T
 57 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["BlockAbilityPanelVisibility"]
 58 [-]: TEST      R3 1         ; if R3 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R3 U1        ; R3 := U1
 61 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x7727930f]
 62 [-]: MOVE      R5 R1        ; R5 := R1
 63 [-]: CALL      R3 3 1       ; R3(R4,R5)
 64 [-]: RETURN    R0 1         ; return 


; Function #79.1:
;
; Name:            
; Defined at line: 1860
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "AbilityPanel"
  4 [-]: CONST     R3 11        ; R3 := 11.000000
  5 [-]: LOADKB    R4 0 0       ; R4 := false
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 1871
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Touch_GetTopMenuOffset"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x4bc5dc8b]
 15 [-]: LOADK     R2 K4        ; R2 := "HudTracker"
 16 [-]: CONST     R3 40        ; R3 := 40.000000
 17 [-]: CONST     R4 235       ; R4 := 235.000000
 18 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x4bc5dc8b]
 21 [-]: LOADK     R2 K5        ; R2 := "MiniMapContainer"
 22 [-]: CONST     R3 40        ; R3 := 40.000000
 23 [-]: CONST     R4 65        ; R4 := 65.000000
 24 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x4bc5dc8b]
 27 [-]: LOADK     R2 K6        ; R2 := "WeaponFrame"
 28 [-]: LOADNIL   R3 R3        ; R3 := nil
 29 [-]: CONST     R4 600       ; R4 := 600.000000
 30 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 31 [-]: GETUPVAL  R0 U0        ; R0 := U0
 32 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x4bc5dc8b]
 33 [-]: LOADK     R2 K7        ; R2 := "HealthAndShield"
 34 [-]: CONST     R3 1240      ; R3 := 1240.000000
 35 [-]: LOADNIL   R4 R4        ; R4 := nil
 36 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x4bc5dc8b]
 39 [-]: LOADK     R2 K8        ; R2 := "AbilityPanel"
 40 [-]: CONST     R3 1200      ; R3 := 1200.000000
 41 [-]: LOADNIL   R4 R4        ; R4 := nil
 42 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 43 [-]: GETUPVAL  R0 U0        ; R0 := U0
 44 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xfaa69527]
 45 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 46 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x6b837788]
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: GETGLOBAL R3 K10       ; R3 := 0xae91e43b
 49 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xaf9fda9f]
 50 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 51 [-]: LOADKB    R4 1 0       ; R4 := true
 52 [-]: GETUPVAL  R5 U1        ; R5 := U1
 53 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["HudScalePadding"]
 54 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 55 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 1884
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe72d2edb
  2 [-]: EQ        0 R0 K2      ; if R0 ~= 1.000000 then PC := 51
  3 [-]: JMP       51           ; PC := 51
  4 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ActivePowerSuit"]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: TEST      R0 1         ; if R0 then PC := 97
  9 [-]: JMP       97           ; PC := 97
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["CustomAbilities"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 0         ; if not R0 then PC := 31
 15 [-]: JMP       31           ; PC := 31
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ActivePowerSuit"]
 19 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x3c88e434]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: SETTABLE  R0 K5 R1     ; R0["CustomAbilities"] := R1
 22 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 23 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xaade900e]
 24 [-]: LOADK     R2 K9        ; R2 := "GrineerAbilityPanel"
 25 [-]: CONST     R3 11        ; R3 := 11.000000
 26 [-]: GETGLOBAL R4 K10       ; R4 := 0x34291f5c
 27 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x781669d7]
 28 [-]: CALL      R4 1 2       ; R4 := R4()
 29 [-]: NOT       R4 R4        ; R4 :=  R4
 30 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 31 [-]: GETUPVAL  R0 U1        ; R0 := U1
 32 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["HasOrbitalStrike"]
 33 [-]: GETGLOBAL R1 K13       ; R1 := _T
 34 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["OrbitalStrikeEnabled"]
 35 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 97
 36 [-]: JMP       97           ; PC := 97
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: GETGLOBAL R1 K13       ; R1 := _T
 39 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["OrbitalStrikeEnabled"]
 40 [-]: SETTABLE  R0 K12 R1    ; R0["HasOrbitalStrike"] := R1
 41 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 42 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xaade900e]
 43 [-]: LOADK     R2 K15       ; R2 := "SpecialAbility"
 44 [-]: CONST     R3 11        ; R3 := 11.000000
 45 [-]: GETGLOBAL R4 K10       ; R4 := 0x34291f5c
 46 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x781669d7]
 47 [-]: CALL      R4 1 2       ; R4 := R4()
 48 [-]: NOT       R4 R4        ; R4 :=  R4
 49 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 50 [-]: JMP       97           ; PC := 97
 51 [-]: GETGLOBAL R0 K0        ; R0 := 0xe72d2edb
 52 [-]: EQ        0 R0 K16     ; if R0 ~= 2.000000 then PC := 70
 53 [-]: JMP       70           ; PC := 70
 54 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 55 [-]: GETUPVAL  R1 U0        ; R1 := U0
 56 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ActivePowerSuit"]
 57 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 58 [-]: TEST      R0 1         ; if R0 then PC := 97
 59 [-]: JMP       97           ; PC := 97
 60 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 61 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xaade900e]
 62 [-]: LOADK     R2 K17       ; R2 := "MoaComponent"
 63 [-]: CONST     R3 11        ; R3 := 11.000000
 64 [-]: GETGLOBAL R4 K10       ; R4 := 0x34291f5c
 65 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x781669d7]
 66 [-]: CALL      R4 1 2       ; R4 := R4()
 67 [-]: NOT       R4 R4        ; R4 :=  R4
 68 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 69 [-]: JMP       97           ; PC := 97
 70 [-]: GETGLOBAL R0 K0        ; R0 := 0xe72d2edb
 71 [-]: EQ        0 R0 K18     ; if R0 ~= 3.000000 then PC := 97
 72 [-]: JMP       97           ; PC := 97
 73 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 74 [-]: GETUPVAL  R1 U0        ; R1 := U0
 75 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ActivePowerSuit"]
 76 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 77 [-]: TEST      R0 1         ; if R0 then PC := 97
 78 [-]: JMP       97           ; PC := 97
 79 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 80 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xaade900e]
 81 [-]: LOADK     R2 K19       ; R2 := "AbilitiesPanel"
 82 [-]: CONST     R3 11        ; R3 := 11.000000
 83 [-]: GETGLOBAL R4 K10       ; R4 := 0x34291f5c
 84 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x781669d7]
 85 [-]: CALL      R4 1 2       ; R4 := R4()
 86 [-]: NOT       R4 R4        ; R4 :=  R4
 87 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 88 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 89 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xaade900e]
 90 [-]: LOADK     R2 K20       ; R2 := "StancePanel"
 91 [-]: CONST     R3 11        ; R3 := 11.000000
 92 [-]: GETGLOBAL R4 K10       ; R4 := 0x34291f5c
 93 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x781669d7]
 94 [-]: CALL      R4 1 2       ; R4 := R4()
 95 [-]: NOT       R4 R4        ; R4 :=  R4
 96 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 97 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 1911
; #Upvalues:       7
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 162
  5 [-]: JMP       162          ; PC := 162
  6 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADKB    R0 0 1       ; R0 := false; PC := 9
  9 [-]: LOADKB    R0 1 0       ; R0 := true
 10 [-]: EQ        1 R1 K1      ; if R1 == "true" then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 13
 13 [-]: LOADKB    R1 1 0       ; R1 := true
 14 [-]: EQ        1 R2 K1      ; if R2 == "true" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 17
 17 [-]: LOADKB    R2 1 0       ; R2 := true
 18 [-]: LOADNIL   R3 R3        ; R3 := nil
 19 [-]: CONST     R4 1         ; R4 := 1.000000
 20 [-]: GETUPVAL  R5 U0        ; R5 := U0
 21 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["list"]
 22 [-]: LEN       R5 R5        ; R5 := # R5
 23 [-]: CONST     R6 1         ; R6 := 1.000000
 24 [-]: FORPREP   R4 53        ; R4 -= R6; PC := 53
 25 [-]: GETUPVAL  R8 U0        ; R8 := U0
 26 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["list"]
 27 [-]: GETTABLE  R3 R8 R7     ; R3 := R8[R7]
 28 [-]: GETTABLE  R8 R3 K3     ; R8 := R3["clip"]
 29 [-]: EQ        0 R8 K4      ; if R8 ~= "AbilityPanel" then PC := 53
 30 [-]: JMP       53           ; PC := 53
 31 [-]: TEST      R0 1         ; if R0 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R8 U1        ; R8 := U1
 34 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["OriginalX"]
 35 [-]: EQ        0 R8 K6      ; if R8 ~= nil then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETUPVAL  R8 U1        ; R8 := U1
 38 [-]: GETTABLE  R9 R3 K7     ; R9 := R3["originalX"]
 39 [-]: SETTABLE  R8 K5 R9     ; R8["OriginalX"] := R9
 40 [-]: GETUPVAL  R8 U1        ; R8 := U1
 41 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["OriginalX"]
 42 [-]: GETUPVAL  R9 U2        ; R9 := U2
 43 [-]: GETTABLE  R9 R9 K8     ; R9 := R9[0x06d055f9]
 44 [-]: TESTSET   R10 R1 1     ; if R1 then PC := 47 else R10 := R1
 45 [-]: JMP       47           ; PC := 47
 46 [-]: MOVE      R10 R2       ; R10 := R2
 47 [-]: CONST     R11 -65      ; R11 := -65.000000
 48 [-]: CONST     R12 0        ; R12 := 0.000000
 49 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 50 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 51 [-]: SETTABLE  R3 K7 R8     ; R3["originalX"] := R8
 52 [-]: JMP       54           ; PC := 54
 53 [-]: FORLOOP   R4 25        ; R4 += R6; if R4 <= R5 then begin PC := 25; R7 := R4 end
 54 [-]: TEST      R0 0         ; if not R0 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: TEST      R1 1         ; if R1 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: TEST      R2 0         ; if not R2 then PC := 160
 59 [-]: JMP       160          ; PC := 160
 60 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 61 [-]: GETUPVAL  R9 U3        ; R9 := U3
 62 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 63 [-]: TEST      R8 0         ; if not R8 then PC := 86
 64 [-]: JMP       86           ; PC := 86
 65 [-]: GETGLOBAL R8 K9        ; R8 := 0xae91e43b
 66 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xcd73323e]
 67 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 68 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 69 [-]: MOVE      R10 R8       ; R10 := R8
 70 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 71 [-]: TEST      R9 0         ; if not R9 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: LOADKB    R9 0 0       ; R9 := false
 74 [-]: RETURN    R9 2         ; return R9
 75 [-]: SELF      R9 R8 K11    ; R10 := R8; R9 := R8[0x6d7bfacb]
 76 [-]: LOADKB    R11 0 0      ; R11 := false
 77 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 78 [-]: SETUPVAL  R9 U3        ; U82 := R3
 79 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 80 [-]: GETUPVAL  R10 U3       ; R10 := U3
 81 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 82 [-]: TEST      R9 0         ; if not R9 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: LOADKB    R9 0 0       ; R9 := false
 85 [-]: RETURN    R9 2         ; return R9
 86 [-]: GETGLOBAL R9 K9        ; R9 := 0xae91e43b
 87 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0x6b837788]
 88 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 89 [-]: GETGLOBAL R10 K9       ; R10 := 0xae91e43b
 90 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0xaf9fda9f]
 91 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 92 [-]: GETGLOBAL R11 K9       ; R11 := 0xae91e43b
 93 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0x091c120e]
 94 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 95 [-]: LT        1 R9 R11     ; if R9 < R11 then PC := 102
 96 [-]: JMP       102          ; PC := 102
 97 [-]: GETGLOBAL R11 K9       ; R11 := 0xae91e43b
 98 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11[0x2cc9d281]
 99 [-]: CALL      R11 2 2      ; R11 := R11(R12)
100 [-]: LT        0 R10 R11    ; if R10 >= R11 then PC := 115
101 [-]: JMP       115          ; PC := 115
102 [-]: GETGLOBAL R11 K16      ; R11 := 0x34291f5c
103 [-]: GETTABLE  R11 R11 K17  ; R11 := R11[0x056bfe8b]
104 [-]: CALL      R11 1 2      ; R11 := R11()
105 [-]: TEST      R11 1        ; if R11 then PC := 115
106 [-]: JMP       115          ; PC := 115
107 [-]: GETGLOBAL R11 K9       ; R11 := 0xae91e43b
108 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0x091c120e]
109 [-]: CALL      R11 2 2      ; R11 := R11(R12)
110 [-]: MOVE      R9 R11       ; R9 := R11
111 [-]: GETGLOBAL R11 K9       ; R11 := 0xae91e43b
112 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11[0x2cc9d281]
113 [-]: CALL      R11 2 2      ; R11 := R11(R12)
114 [-]: MOVE      R10 R11      ; R10 := R11
115 [-]: GETGLOBAL R11 K16      ; R11 := 0x34291f5c
116 [-]: GETTABLE  R11 R11 K18  ; R11 := R11[0xe6b41adb]
117 [-]: CALL      R11 1 2      ; R11 := R11()
118 [-]: TEST      R11 0        ; if not R11 then PC := 123
119 [-]: JMP       123          ; PC := 123
120 [-]: GETUPVAL  R11 U4       ; R11 := U4
121 [-]: CALL      R11 1 1      ; R11()
122 [-]: JMP       131          ; PC := 131
123 [-]: GETUPVAL  R11 U0       ; R11 := U0
124 [-]: SELF      R11 R11 K19  ; R12 := R11; R11 := R11[0xfaa69527]
125 [-]: MOVE      R13 R9       ; R13 := R9
126 [-]: MOVE      R14 R10      ; R14 := R10
127 [-]: LOADKB    R15 1 0      ; R15 := true
128 [-]: GETUPVAL  R16 U5       ; R16 := U5
129 [-]: GETTABLE  R16 R16 K20  ; R16 := R16["HudScalePadding"]
130 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
131 [-]: GETUPVAL  R11 U3       ; R11 := U3
132 [-]: SELF      R11 R11 K21  ; R12 := R11; R11 := R11[0xdae5251c]
133 [-]: GETUPVAL  R13 U0       ; R13 := U0
134 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0x2de3d774]
135 [-]: LOADK     R15 K23      ; R15 := "Notification"
136 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
137 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["y"]
138 [-]: CALL      R11 3 1      ; R11(R12,R13)
139 [-]: GETGLOBAL R11 K25      ; R11 := 0xc8802016
140 [-]: GETUPVAL  R12 U6       ; R12 := U6
141 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
142 [-]: JMP       158          ; PC := 158
143 [-]: GETTABLE  R16 R15 K26  ; R16 := R15["Clip"]
144 [-]: EQ        0 R16 K4     ; if R16 ~= "AbilityPanel" then PC := 158
145 [-]: JMP       158          ; PC := 158
146 [-]: GETUPVAL  R16 U0       ; R16 := U0
147 [-]: SELF      R16 R16 K22  ; R17 := R16; R16 := R16[0x2de3d774]
148 [-]: GETTABLE  R18 R15 K26  ; R18 := R15["Clip"]
149 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
150 [-]: GETUPVAL  R17 U3       ; R17 := U3
151 [-]: SELF      R17 R17 K27  ; R18 := R17; R17 := R17[0x31669273]
152 [-]: GETTABLE  R19 R15 K28  ; R19 := R15["Movie"]
153 [-]: GETTABLE  R20 R15 K26  ; R20 := R15["Clip"]
154 [-]: GETTABLE  R21 R16 K29  ; R21 := R16["x"]
155 [-]: GETTABLE  R22 R16 K24  ; R22 := R16["y"]
156 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
157 [-]: JMP       160          ; PC := 160
158 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 143; R13 := R14 end
159 [-]: JMP       143          ; PC := 143
160 [-]: LOADKB    R17 1 0      ; R17 := true
161 [-]: RETURN    R17 2        ; return R17
162 [-]: LOADKB    R17 0 0      ; R17 := false
163 [-]: RETURN    R17 2        ; return R17
164 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 1970
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mMiniMapHidden"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 57
  4 [-]: JMP       57           ; PC := 57
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SETTABLE  R1 K0 K1     ; R1["mMiniMapHidden"] := true
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xf4ed1581]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 51
 11 [-]: JMP       51           ; PC := 51
 12 [-]: LOADKB    R1 1 0       ; R1 := true
 13 [-]: SETUPVAL  R1 U2        ; U82 := R2
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbf5bcc4a]
 16 [-]: LOADKB    R3 0 0       ; R3 := false
 17 [-]: CALL      R1 3 1       ; R1(R2,R3)
 18 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 19 [-]: GETUPVAL  R2 U3        ; R2 := U3
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 53
 22 [-]: JMP       53           ; PC := 53
 23 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 24 [-]: GETUPVAL  R2 U4        ; R2 := U4
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 1         ; if R1 then PC := 53
 27 [-]: JMP       53           ; PC := 53
 28 [-]: GETUPVAL  R1 U3        ; R1 := U3
 29 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x840ecf2e]
 30 [-]: GETUPVAL  R3 U4        ; R3 := U4
 31 [-]: GETGLOBAL R4 K6        ; R4 := _T
 32 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["DisableMiniMap"]
 33 [-]: EQ        1 R4 K1      ; if R4 == true then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 36
 36 [-]: LOADKB    R4 1 0       ; R4 := true
 37 [-]: GETGLOBAL R5 K6        ; R5 := _T
 38 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["DisableMiniMap"]
 39 [-]: EQ        0 R5 K1      ; if R5 ~= true then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADKB    R5 0 1       ; R5 := false; PC := 42
 42 [-]: LOADKB    R5 1 0       ; R5 := true
 43 [-]: GETGLOBAL R6 K6        ; R6 := _T
 44 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["OverlayMapVisible"]
 45 [-]: EQ        1 R6 K1      ; if R6 == true then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 48
 48 [-]: LOADKB    R6 1 0       ; R6 := true
 49 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 50 [-]: JMP       53           ; PC := 53
 51 [-]: LOADKB    R1 0 0       ; R1 := false
 52 [-]: SETUPVAL  R1 U2        ; U82 := R2
 53 [-]: GETUPVAL  R1 U3        ; R1 := U3
 54 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x719f1395]
 55 [-]: MOVE      R3 R0        ; R3 := R0
 56 [-]: CALL      R1 3 1       ; R1(R2,R3)
 57 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 1988
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mMiniMapHidden"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 18
  4 [-]: JMP       18           ; PC := 18
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SETTABLE  R1 K0 K1     ; R1["mMiniMapHidden"] := false
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbb74a13b]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R1 3 1       ; R1(R2,R3)
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: TEST      R1 0         ; if not R1 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETUPVAL  R1 U3        ; R1 := U3
 15 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbf5bcc4a]
 16 [-]: LOADKB    R3 1 0       ; R3 := true
 17 [-]: CALL      R1 3 1       ; R1(R2,R3)
 18 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 1999
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mVisible"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 25
  4 [-]: JMP       25           ; PC := 25
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVoipHidden"]
  7 [-]: TEST      R1 1         ; if R1 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: CONST     R1 1         ; R1 := 1.000000
 10 [-]: CONST     R2 3         ; R2 := 3.000000
 11 [-]: CONST     R3 1         ; R3 := 1.000000
 12 [-]: FORPREP   R1 21        ; R1 -= R3; PC := 21
 13 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 14 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0x67bc869f]
 15 [-]: LOADK     R7 K4        ; R7 := "VoipIndicator"
 16 [-]: MOVE      R8 R4        ; R8 := R4
 17 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 18 [-]: CONST     R8 10        ; R8 := 10.000000
 19 [-]: CONST     R9 0         ; R9 := 0.000000
 20 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 21 [-]: FORLOOP   R1 13        ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
 22 [-]: GETUPVAL  R5 U0        ; R5 := U0
 23 [-]: SETTABLE  R5 K1 K5     ; R5["mVoipHidden"] := true
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: SETTABLE  R5 K1 K6     ; R5["mVoipHidden"] := nil
 27 [-]: GETUPVAL  R5 U1        ; R5 := U1
 28 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x5cd44037]
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: CALL      R5 3 1       ; R5(R6,R7)
 31 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 2017
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xc472e470]
  5 [-]: CALL      R2 1 0       ; R2,... := R2()
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xe4162eed]
 13 [-]: LOADK     R3 K5        ; R3 := "ToggleFocus"
 14 [-]: LOADK     R4 K6        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 2025
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x34b70990]
  8 [-]: SELF      R3 R0 K2     ; R4 := R0; R3 := R0[0x5ca33548]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: LOADNIL   R5 R5        ; R5 := nil
 12 [-]: LOADKB    R6 1 0       ; R6 := true
 13 [-]: TAILCALL  R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 14 [-]: RETURN    R2 0         ; return R2,...
 15 [-]: LOADK     R2 K3        ; R2 := ""
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 2033
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["PlayerListHasChanged"] := true
  3 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 2037
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["PlayerListHasChanged"] := false
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: SETTABLE  R0 K2 K3     ; R0["mPlayersChanged"] := true
  8 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 24
 12 [-]: JMP       24           ; PC := 24
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xf2deaf69]
 15 [-]: GETGLOBAL R2 K6        ; R2 := gLotusAttractModeGameRulesType
 16 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 17 [-]: TEST      R0 1         ; if R0 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x3790d299]
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 0         ; if not R0 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: NEWTABLE  R0 0 0       ; R0 := {}
 26 [-]: CONST     R1 1         ; R1 := 1.000000
 27 [-]: GETUPVAL  R2 U3        ; R2 := U3
 28 [-]: LEN       R2 R2        ; R2 := # R2
 29 [-]: CONST     R3 1         ; R3 := 1.000000
 30 [-]: FORPREP   R1 34        ; R1 -= R3; PC := 34
 31 [-]: GETUPVAL  R5 U3        ; R5 := U3
 32 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 33 [-]: SETTABLE  R0 R4 R5     ; R0[R4] := R5
 34 [-]: FORLOOP   R1 31        ; R1 += R3; if R1 <= R2 then begin PC := 31; R4 := R1 end
 35 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 36 [-]: GETUPVAL  R6 U4        ; R6 := U4
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: TEST      R5 1         ; if R5 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETUPVAL  R5 U4        ; R5 := U4
 41 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0xc1a65a0f]
 42 [-]: GETGLOBAL R7 K9        ; R7 := 0xae91e43b
 43 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xcd73323e]
 44 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 45 [-]: CALL      R5 0 1       ; R5(R6,...)
 46 [-]: GETGLOBAL R5 K11       ; R5 := 0x89326c93
 47 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0x7d108ddb]
 48 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 49 [-]: SETUPVAL  R5 U5        ; U82 := R5
 50 [-]: GETUPVAL  R5 U6        ; R5 := U6
 51 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 52 [-]: SETTABLE  R5 K13 R6    ; R5["PlayerAvatars"] := R6
 53 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 54 [-]: SETUPVAL  R5 U3        ; U82 := R3
 55 [-]: CONST     R5 1         ; R5 := 1.000000
 56 [-]: GETUPVAL  R6 U5        ; R6 := U5
 57 [-]: LEN       R6 R6        ; R6 := # R6
 58 [-]: CONST     R7 1         ; R7 := 1.000000
 59 [-]: FORPREP   R5 83        ; R5 -= R7; PC := 83
 60 [-]: GETUPVAL  R9 U7        ; R9 := U7
 61 [-]: GETUPVAL  R10 U5       ; R10 := U5
 62 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 63 [-]: GETUPVAL  R11 U5       ; R11 := U5
 64 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 65 [-]: GETGLOBAL R10 K4       ; R10 := 0x7b998233
 66 [-]: GETUPVAL  R11 U5       ; R11 := U5
 67 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
 68 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 69 [-]: TEST      R10 1        ; if R10 then PC := 83
 70 [-]: JMP       83           ; PC := 83
 71 [-]: GETUPVAL  R10 U5       ; R10 := U5
 72 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 73 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10[0xdcc3e539]
 74 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 75 [-]: TEST      R10 1        ; if R10 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: GETUPVAL  R10 U8       ; R10 := U8
 78 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["HIDDEN_PLAYER_NAME"]
 79 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: GETUPVAL  R10 U3       ; R10 := U3
 82 [-]: SETTABLE  R10 R8 R9    ; R10[R8] := R9
 83 [-]: FORLOOP   R5 60        ; R5 += R7; if R5 <= R6 then begin PC := 60; R8 := R5 end
 84 [-]: GETGLOBAL R10 K16      ; R10 := 0x9ba7909f
 85 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0xbcfb64ab]
 86 [-]: GETUPVAL  R12 U9       ; R12 := U9
 87 [-]: GETTABLE  R12 R12 K18  ; R12 := R12[0xc472e470]
 88 [-]: CALL      R12 1 0      ; R12,... := R12()
 89 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 90 [-]: GETGLOBAL R11 K4       ; R11 := 0x7b998233
 91 [-]: MOVE      R12 R10      ; R12 := R10
 92 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 93 [-]: TEST      R11 1        ; if R11 then PC := 196
 94 [-]: JMP       196          ; PC := 196
 95 [-]: GETUPVAL  R11 U0       ; R11 := U0
 96 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["Initialized"]
 97 [-]: TEST      R11 0        ; if not R11 then PC := 196
 98 [-]: JMP       196          ; PC := 196
 99 [-]: NEWTABLE  R11 0 0      ; R11 := {}
100 [-]: CONST     R12 1        ; R12 := 1.000000
101 [-]: GETUPVAL  R13 U3       ; R13 := U3
102 [-]: LEN       R13 R13      ; R13 := # R13
103 [-]: CONST     R14 1        ; R14 := 1.000000
104 [-]: FORPREP   R12 108      ; R12 -= R14; PC := 108
105 [-]: GETUPVAL  R16 U3       ; R16 := U3
106 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
107 [-]: SETTABLE  R11 R15 R16  ; R11[R15] := R16
108 [-]: FORLOOP   R12 105      ; R12 += R14; if R12 <= R13 then begin PC := 105; R15 := R12 end
109 [-]: CONST     R16 1        ; R16 := 1.000000
110 [-]: LEN       R17 R0       ; R17 := # R0
111 [-]: CONST     R18 1        ; R18 := 1.000000
112 [-]: FORPREP   R16 131      ; R16 -= R18; PC := 131
113 [-]: CONST     R20 1        ; R20 := 1.000000
114 [-]: LEN       R21 R11      ; R21 := # R11
115 [-]: CONST     R22 1        ; R22 := 1.000000
116 [-]: FORPREP   R20 130      ; R20 -= R22; PC := 130
117 [-]: GETTABLE  R24 R0 R19   ; R24 := R0[R19]
118 [-]: GETTABLE  R25 R11 R23  ; R25 := R11[R23]
119 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 130
120 [-]: JMP       130          ; PC := 130
121 [-]: GETTABLE  R24 R0 R19   ; R24 := R0[R19]
122 [-]: EQ        1 R24 K20    ; if R24 == "" then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: GETTABLE  R24 R11 R23  ; R24 := R11[R23]
125 [-]: EQ        1 R24 K20    ; if R24 == "" then PC := 130
126 [-]: JMP       130          ; PC := 130
127 [-]: SETTABLE  R0 R19 K20   ; R0[R19] := ""
128 [-]: SETTABLE  R11 R23 K20  ; R11[R23] := ""
129 [-]: JMP       131          ; PC := 131
130 [-]: FORLOOP   R20 117      ; R20 += R22; if R20 <= R21 then begin PC := 117; R23 := R20 end
131 [-]: FORLOOP   R16 113      ; R16 += R18; if R16 <= R17 then begin PC := 113; R19 := R16 end
132 [-]: CONST     R24 1        ; R24 := 1.000000
133 [-]: LEN       R25 R0       ; R25 := # R0
134 [-]: CONST     R26 1        ; R26 := 1.000000
135 [-]: FORPREP   R24 170      ; R24 -= R26; PC := 170
136 [-]: GETTABLE  R28 R0 R27   ; R28 := R0[R27]
137 [-]: EQ        1 R28 K21    ; if R28 == nil then PC := 170
138 [-]: JMP       170          ; PC := 170
139 [-]: GETTABLE  R28 R0 R27   ; R28 := R0[R27]
140 [-]: EQ        1 R28 K20    ; if R28 == "" then PC := 170
141 [-]: JMP       170          ; PC := 170
142 [-]: SELF      R28 R10 K22  ; R29 := R10; R28 := R10[0xf56f3887]
143 [-]: LOADK     R30 K23      ; R30 := "ChannelSystemMessage"
144 [-]: NEWTABLE  R31 2 0      ; R31 := {}
145 [-]: GETGLOBAL R32 K9       ; R32 := 0xae91e43b
146 [-]: SELF      R32 R32 K24  ; R33 := R32; R32 := R32[0x42b04007]
147 [-]: LOADK     R34 K25      ; R34 := "/Lotus/Language/Menu/PlayerHasDisconnected"
148 [-]: LOADKB    R35 0 0      ; R35 := false
149 [-]: NEWTABLE  R36 0 1      ; R36 := {}
150 [-]: GETTABLE  R37 R0 R27   ; R37 := R0[R27]
151 [-]: SETTABLE  R36 K26 R37  ; R36["PLAYER_NAME"] := R37
152 [-]: CALL      R32 5 2      ; R32 := R32(R33,R34,R35,R36)
153 [-]: LOADK     R33 K27      ; R33 := "1"
154 [-]: SETLIST   R31 2 1      ; R31[(1-1)*FPF+i] := R(31+i), 1 <= i <= 2
155 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
156 [-]: GETUPVAL  R28 U10      ; R28 := U10
157 [-]: SELF      R28 R28 K28  ; R29 := R28; R28 := R28[0xf017005a]
158 [-]: CALL      R28 2 2      ; R28 := R28(R29)
159 [-]: GETGLOBAL R29 K29      ; R29 := 0x7f5022cf
160 [-]: GETTABLE  R29 R29 K30  ; R29 := R29[0xa5c556b9]
161 [-]: MOVE      R30 R28      ; R30 := R28
162 [-]: GETTABLE  R31 R0 R27   ; R31 := R0[R27]
163 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
164 [-]: EQ        1 R29 K21    ; if R29 == nil then PC := 170
165 [-]: JMP       170          ; PC := 170
166 [-]: GETUPVAL  R29 U10      ; R29 := U10
167 [-]: SELF      R29 R29 K31  ; R30 := R29; R29 := R29[0x89212ed6]
168 [-]: LOADK     R31 K20      ; R31 := ""
169 [-]: CALL      R29 3 1      ; R29(R30,R31)
170 [-]: FORLOOP   R24 136      ; R24 += R26; if R24 <= R25 then begin PC := 136; R27 := R24 end
171 [-]: CONST     R29 1        ; R29 := 1.000000
172 [-]: LEN       R30 R11      ; R30 := # R11
173 [-]: CONST     R31 1        ; R31 := 1.000000
174 [-]: FORPREP   R29 195      ; R29 -= R31; PC := 195
175 [-]: GETTABLE  R33 R11 R32  ; R33 := R11[R32]
176 [-]: EQ        1 R33 K21    ; if R33 == nil then PC := 195
177 [-]: JMP       195          ; PC := 195
178 [-]: GETTABLE  R33 R11 R32  ; R33 := R11[R32]
179 [-]: EQ        1 R33 K20    ; if R33 == "" then PC := 195
180 [-]: JMP       195          ; PC := 195
181 [-]: SELF      R33 R10 K22  ; R34 := R10; R33 := R10[0xf56f3887]
182 [-]: LOADK     R35 K23      ; R35 := "ChannelSystemMessage"
183 [-]: NEWTABLE  R36 2 0      ; R36 := {}
184 [-]: GETGLOBAL R37 K9       ; R37 := 0xae91e43b
185 [-]: SELF      R37 R37 K24  ; R38 := R37; R37 := R37[0x42b04007]
186 [-]: LOADK     R39 K32      ; R39 := "/Lotus/Language/Menu/PlayerHasJoined"
187 [-]: LOADKB    R40 0 0      ; R40 := false
188 [-]: NEWTABLE  R41 0 1      ; R41 := {}
189 [-]: GETTABLE  R42 R11 R32  ; R42 := R11[R32]
190 [-]: SETTABLE  R41 K26 R42  ; R41["PLAYER_NAME"] := R42
191 [-]: CALL      R37 5 2      ; R37 := R37(R38,R39,R40,R41)
192 [-]: LOADK     R38 K27      ; R38 := "1"
193 [-]: SETLIST   R36 2 1      ; R36[(1-1)*FPF+i] := R(36+i), 1 <= i <= 2
194 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
195 [-]: FORLOOP   R29 175      ; R29 += R31; if R29 <= R30 then begin PC := 175; R32 := R29 end
196 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 2106
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xe5916fbf]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: CONST     R2 1         ; R2 := 1.000000
 16 [-]: LEN       R3 R1        ; R3 := # R1
 17 [-]: CONST     R4 1         ; R4 := 1.000000
 18 [-]: FORPREP   R2 27        ; R2 -= R4; PC := 27
 19 [-]: GETGLOBAL R6 K1        ; R6 := 0xbe190284
 20 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x0f823e41]
 21 [-]: GETTABLE  R8 R1 R5     ; R8 := R1[R5]
 22 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 23 [-]: TEST      R6 0         ; if not R6 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: GETTABLE  R0 R1 R5     ; R0 := R1[R5]
 26 [-]: JMP       28           ; PC := 28
 27 [-]: FORLOOP   R2 19        ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
 28 [-]: EQ        1 R0 K4      ; if R0 == nil then PC := 139
 29 [-]: JMP       139          ; PC := 139
 30 [-]: GETGLOBAL R6 K5        ; R6 := 0x64fb1586
 31 [-]: GETGLOBAL R7 K1        ; R7 := 0xbe190284
 32 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0x6dc7ed4b]
 33 [-]: MOVE      R9 R0        ; R9 := R0
 34 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 35 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 36 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
 37 [-]: GETUPVAL  R8 U1        ; R8 := U1
 38 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
 39 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 40 [-]: TEST      R7 0         ; if not R7 then PC := 69
 41 [-]: JMP       69           ; PC := 69
 42 [-]: GETUPVAL  R7 U1        ; R7 := U1
 43 [-]: GETUPVAL  R8 U2        ; R8 := U2
 44 [-]: LOADK     R9 K7        ; R9 := "TimerOfInterest"
 45 [-]: GETUPVAL  R10 U3       ; R10 := U3
 46 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["HT_TIMER"]
 47 [-]: CONST     R11 0        ; R11 := 0.250000
 48 [-]: LOADKB    R12 0 0      ; R12 := false
 49 [-]: LOADKB    R13 0 0      ; R13 := false
 50 [-]: CALL      R8 6 2       ; R8 := R8(R9,R10,R11,R12,R13)
 51 [-]: SETTABLE  R7 K7 R8     ; R7["TimerOfInterest"] := R8
 52 [-]: GETUPVAL  R7 U1        ; R7 := U1
 53 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["TimerOfInterest"]
 54 [-]: SETTABLE  R7 K9 R0     ; R7["MissionTimerName"] := R0
 55 [-]: GETGLOBAL R7 K10       ; R7 := 0x7f5022cf
 56 [-]: GETTABLE  R7 R7 K11    ; R7 := R7[0x41e2ae25]
 57 [-]: MOVE      R8 R6        ; R8 := R6
 58 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 59 [-]: LT        0 K12 R7     ; if 0.000000 >= R7 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: GETUPVAL  R7 U1        ; R7 := U1
 62 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["TimerOfInterest"]
 63 [-]: GETTABLE  R7 R7 K13    ; R7 := R7[0xe0cba3ca]
 64 [-]: MOVE      R8 R6        ; R8 := R6
 65 [-]: CONST     R9 5         ; R9 := 5.000000
 66 [-]: CALL      R7 3 1       ; R7(R8,R9)
 67 [-]: GETGLOBAL R7 K14       ; R7 := _T
 68 [-]: SETTABLE  R7 K15 K4    ; R7["TimerOfInterestEnded"] := nil
 69 [-]: GETGLOBAL R7 K1        ; R7 := 0xbe190284
 70 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0xffddf768]
 71 [-]: MOVE      R9 R0        ; R9 := R0
 72 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 73 [-]: GETUPVAL  R8 U1        ; R8 := U1
 74 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
 75 [-]: TEST      R8 0         ; if not R8 then PC := 82
 76 [-]: JMP       82           ; PC := 82
 77 [-]: GETUPVAL  R8 U1        ; R8 := U1
 78 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
 79 [-]: GETTABLE  R8 R8 K17    ; R8 := R8[0x8550d2a7]
 80 [-]: MOVE      R9 R7        ; R9 := R7
 81 [-]: CALL      R8 2 1       ; R8(R9)
 82 [-]: GETGLOBAL R8 K14       ; R8 := _T
 83 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["TimerOfInterestEnded"]
 84 [-]: TEST      R8 1         ; if R8 then PC := 122
 85 [-]: JMP       122          ; PC := 122
 86 [-]: LE        0 R7 K12     ; if R7 > 0.000000 then PC := 122
 87 [-]: JMP       122          ; PC := 122
 88 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 89 [-]: GETGLOBAL R9 K14       ; R9 := _T
 90 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["missionTimerExpiryPortTrigger"]
 91 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 92 [-]: TEST      R8 1         ; if R8 then PC := 102
 93 [-]: JMP       102          ; PC := 102
 94 [-]: GETGLOBAL R8 K14       ; R8 := _T
 95 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["missionTimerExpiryPortTrigger"]
 96 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8[0x8eb2112d]
 97 [-]: GETGLOBAL R10 K5       ; R10 := 0x64fb1586
 98 [-]: GETGLOBAL R11 K14      ; R11 := _T
 99 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["missionTimerExpiryPortCommand"]
100 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
101 [-]: CALL      R8 0 1       ; R8(R9,...)
102 [-]: GETGLOBAL R8 K1        ; R8 := 0xbe190284
103 [-]: SELF      R8 R8 K21    ; R9 := R8; R8 := R8[0x4becc81a]
104 [-]: GETUPVAL  R10 U1       ; R10 := U1
105 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["TimerOfInterest"]
106 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["MissionTimerName"]
107 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
108 [-]: TEST      R8 0         ; if not R8 then PC := 120
109 [-]: JMP       120          ; PC := 120
110 [-]: GETUPVAL  R8 U1        ; R8 := U1
111 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
112 [-]: GETTABLE  R8 R8 K13    ; R8 := R8[0xe0cba3ca]
113 [-]: LOADK     R9 K22       ; R9 := "/Lotus/Language/Menu/HUD_MissionFailed"
114 [-]: CALL      R8 2 1       ; R8(R9)
115 [-]: GETUPVAL  R8 U4        ; R8 := U4
116 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8[0xbd2e96ea]
117 [-]: CONST     R10 1        ; R10 := 1.500000
118 [-]: GETUPVAL  R11 U5       ; R11 := U5
119 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
120 [-]: GETGLOBAL R8 K14       ; R8 := _T
121 [-]: SETTABLE  R8 K15 K24   ; R8["TimerOfInterestEnded"] := true
122 [-]: GETUPVAL  R8 U1        ; R8 := U1
123 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
124 [-]: GETTABLE  R8 R8 K25    ; R8 := R8["CurrentMessage"]
125 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 149
126 [-]: JMP       149          ; PC := 149
127 [-]: GETUPVAL  R8 U1        ; R8 := U1
128 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
129 [-]: GETTABLE  R8 R8 K25    ; R8 := R8["CurrentMessage"]
130 [-]: EQ        1 R8 R6      ; if R8 == R6 then PC := 149
131 [-]: JMP       149          ; PC := 149
132 [-]: GETUPVAL  R8 U1        ; R8 := U1
133 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
134 [-]: GETTABLE  R8 R8 K13    ; R8 := R8[0xe0cba3ca]
135 [-]: MOVE      R9 R6        ; R9 := R6
136 [-]: CONST     R10 5        ; R10 := 5.000000
137 [-]: CALL      R8 3 1       ; R8(R9,R10)
138 [-]: JMP       149          ; PC := 149
139 [-]: GETUPVAL  R8 U1        ; R8 := U1
140 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["TimerOfInterest"]
141 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 149
142 [-]: JMP       149          ; PC := 149
143 [-]: GETUPVAL  R8 U6        ; R8 := U6
144 [-]: GETUPVAL  R9 U1        ; R9 := U1
145 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["TimerOfInterest"]
146 [-]: CALL      R8 2 1       ; R8(R9)
147 [-]: GETUPVAL  R8 U1        ; R8 := U1
148 [-]: SETTABLE  R8 K7 K4     ; R8["TimerOfInterest"] := nil
149 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 2162
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["DisableAllTransmissions"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0xb009bbc6
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K0        ; R3 := _T
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["curTransmission"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETGLOBAL R2 K0        ; R2 := _T
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["curTransmission"]
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xed4e0128]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: EQ        1 R2 R0      ; if R2 == R0 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 22
 22 [-]: LOADKB    R2 1 0       ; R2 := true
 23 [-]: TEST      R2 1         ; if R2 then PC := 50
 24 [-]: JMP       50           ; PC := 50
 25 [-]: CONST     R3 1         ; R3 := 1.000000
 26 [-]: GETGLOBAL R4 K0        ; R4 := _T
 27 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["QueuedTransmissions"]
 28 [-]: LEN       R4 R4        ; R4 := # R4
 29 [-]: CONST     R5 1         ; R5 := 1.000000
 30 [-]: FORPREP   R3 49        ; R3 -= R5; PC := 49
 31 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
 32 [-]: GETGLOBAL R8 K0        ; R8 := _T
 33 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["QueuedTransmissions"]
 34 [-]: GETTABLE  R8 R8 R6     ; R8 := R8[R6]
 35 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Transmission"]
 36 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 37 [-]: TEST      R7 1         ; if R7 then PC := 49
 38 [-]: JMP       49           ; PC := 49
 39 [-]: GETGLOBAL R7 K0        ; R7 := _T
 40 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["QueuedTransmissions"]
 41 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 42 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Transmission"]
 43 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7[0xed4e0128]
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: LOADKB    R2 1 0       ; R2 := true
 48 [-]: JMP       50           ; PC := 50
 49 [-]: FORLOOP   R3 31        ; R3 += R5; if R3 <= R4 then begin PC := 31; R6 := R3 end
 50 [-]: TEST      R2 1         ; if R2 then PC := 88
 51 [-]: JMP       88           ; PC := 88
 52 [-]: GETUPVAL  R7 U0        ; R7 := U0
 53 [-]: GETTABLE  R7 R7 K8     ; R7 := R7[0x1f60d532]
 54 [-]: MOVE      R8 R1        ; R8 := R1
 55 [-]: GETUPVAL  R9 U1        ; R9 := U1
 56 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9[0x816beb43]
 57 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 58 [-]: CALL      R7 0 1       ; R7(R8,...)
 59 [-]: GETUPVAL  R7 U2        ; R7 := U2
 60 [-]: SELF      R8 R1 K11    ; R9 := R1; R8 := R1[0xd325c0ea]
 61 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 62 [-]: SETTABLE  R7 K10 R8    ; R7["mTransOnRightSide"] := R8
 63 [-]: GETGLOBAL R7 K12       ; R7 := 0x3d106989
 64 [-]: LOADK     R8 K13       ; R8 := "Queued a transmission from Hud: "
 65 [-]: MOVE      R9 R0        ; R9 := R0
 66 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 67 [-]: CALL      R7 2 1       ; R7(R8)
 68 [-]: GETGLOBAL R7 K14       ; R7 := 0x9ba7909f
 69 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7[0xbcfb64ab]
 70 [-]: GETGLOBAL R9 K16       ; R9 := 0x0032441c
 71 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["UIMovie_TransmissionMovie"]
 72 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 73 [-]: GETGLOBAL R8 K18       ; R8 := 0x60cce7b4
 74 [-]: GETGLOBAL R9 K3        ; R9 := 0x7b998233
 75 [-]: MOVE      R10 R7       ; R10 := R7
 76 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 77 [-]: NOT       R9 R9        ; R9 :=  R9
 78 [-]: CALL      R8 2 1       ; R8(R9)
 79 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
 80 [-]: MOVE      R9 R7        ; R9 := R7
 81 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 82 [-]: TEST      R8 1         ; if R8 then PC := 88
 83 [-]: JMP       88           ; PC := 88
 84 [-]: SELF      R8 R7 K19    ; R9 := R7; R8 := R7[0xe4162eed]
 85 [-]: LOADK     R10 K20      ; R10 := "TransmissionQueuedFromHud"
 86 [-]: MOVE      R11 R0       ; R11 := R0
 87 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 88 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 2194
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xf2deaf69]
  7 [-]: GETGLOBAL R3 K2        ; R3 := gLotusAvatarType
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0xdcb64a96]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADKB    R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADKB    R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 2198
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0xbb610e5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["avatar"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 181
  9 [-]: JMP       181          ; PC := 181
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["avatar"]
 12 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 181
 13 [-]: JMP       181          ; PC := 181
 14 [-]: GETUPVAL  R1 U2        ; R1 := U2
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["UIMode"]
 16 [-]: GETUPVAL  R2 U3        ; R2 := U3
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UI_MODE_IN_SPACE_HUB"]
 18 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETGLOBAL R1 K5        ; R1 := 0xbe190284
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xd6573683]
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 24 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 25 [-]: TEST      R1 1         ; if R1 then PC := 181
 26 [-]: JMP       181          ; PC := 181
 27 [-]: GETUPVAL  R1 U1        ; R1 := U1
 28 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["avatar"]
 29 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x22da1852]
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: GETUPVAL  R2 U4        ; R2 := U4
 32 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETUPVAL  R2 U5        ; R2 := U5
 35 [-]: GETUPVAL  R3 U1        ; R3 := U1
 36 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: TEST      R2 1         ; if R2 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: RETURN    R0 1         ; return 
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: SETTABLE  R2 K8 K9     ; R2["valid"] := true
 43 [-]: GETUPVAL  R2 U1        ; R2 := U1
 44 [-]: GETUPVAL  R3 U1        ; R3 := U1
 45 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 46 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x5e651723]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: SETTABLE  R2 K10 R3    ; R2["player"] := R3
 49 [-]: LOADKB    R2 0 0       ; R2 := false
 50 [-]: GETGLOBAL R3 K12       ; R3 := 0x34291f5c
 51 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0x1467d5f4]
 52 [-]: CALL      R3 1 2       ; R3 := R3()
 53 [-]: TEST      R3 0         ; if not R3 then PC := 64
 54 [-]: JMP       64           ; PC := 64
 55 [-]: GETGLOBAL R3 K14       ; R3 := 0x9ba7909f
 56 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xa50d1a6a]
 57 [-]: LOADK     R5 K16       ; R5 := "INSPECT"
 58 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 59 [-]: EQ        0 R3 K17     ; if R3 ~= "" then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 62
 62 [-]: LOADKB    R2 1 0       ; R2 := true
 63 [-]: JMP       73           ; PC := 73
 64 [-]: GETGLOBAL R3 K14       ; R3 := 0x9ba7909f
 65 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0x9e473958]
 66 [-]: LOADK     R5 K16       ; R5 := "INSPECT"
 67 [-]: LOADKB    R6 0 0       ; R6 := false
 68 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 69 [-]: EQ        0 R3 K19     ; if R3 ~= nil then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 72
 72 [-]: LOADKB    R2 1 0       ; R2 := true
 73 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 74 [-]: GETUPVAL  R4 U1        ; R4 := U1
 75 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["player"]
 76 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 77 [-]: TEST      R3 1         ; if R3 then PC := 87
 78 [-]: JMP       87           ; PC := 87
 79 [-]: GETUPVAL  R3 U1        ; R3 := U1
 80 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 81 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0x808b79e6]
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: SELF      R4 R0 K20    ; R5 := R0; R4 := R0[0x808b79e6]
 84 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 85 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 162
 86 [-]: JMP       162          ; PC := 162
 87 [-]: GETUPVAL  R3 U1        ; R3 := U1
 88 [-]: GETUPVAL  R4 U1        ; R4 := U1
 89 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["avatar"]
 90 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0xdff9d2a7]
 91 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 92 [-]: SETTABLE  R3 K21 R4    ; R3["name"] := R4
 93 [-]: GETUPVAL  R3 U1        ; R3 := U1
 94 [-]: GETUPVAL  R4 U1        ; R4 := U1
 95 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["avatar"]
 96 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0x0f3c38bd]
 97 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 98 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0x6d604ba7]
 99 [-]: CALL      R4 2 2       ; R4 := R4(R5)
100 [-]: SETTABLE  R3 K23 R4    ; R3["desc"] := R4
101 [-]: GETGLOBAL R3 K26       ; R3 := 0x7f5022cf
102 [-]: GETTABLE  R3 R3 K27    ; R3 := R3[0x41e2ae25]
103 [-]: GETUPVAL  R4 U1        ; R4 := U1
104 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["desc"]
105 [-]: CALL      R3 2 2       ; R3 := R3(R4)
106 [-]: LT        0 K28 R3     ; if 0.000000 >= R3 then PC := 117
107 [-]: JMP       117          ; PC := 117
108 [-]: GETUPVAL  R3 U1        ; R3 := U1
109 [-]: GETGLOBAL R4 K29       ; R4 := 0xae91e43b
110 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4[0x42b04007]
111 [-]: GETUPVAL  R6 U1        ; R6 := U1
112 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["desc"]
113 [-]: LOADKB    R7 1 0       ; R7 := true
114 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
115 [-]: SETTABLE  R3 K23 R4    ; R3["desc"] := R4
116 [-]: JMP       187          ; PC := 187
117 [-]: GETUPVAL  R3 U1        ; R3 := U1
118 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["name"]
119 [-]: EQ        1 R3 K17     ; if R3 == "" then PC := 187
120 [-]: JMP       187          ; PC := 187
121 [-]: TEST      R2 0         ; if not R2 then PC := 187
122 [-]: JMP       187          ; PC := 187
123 [-]: LOADNIL   R3 R3        ; R3 := nil
124 [-]: GETUPVAL  R4 U6        ; R4 := U6
125 [-]: CALL      R4 1 2       ; R4 := R4()
126 [-]: TEST      R4 1         ; if R4 then PC := 134
127 [-]: JMP       134          ; PC := 134
128 [-]: GETUPVAL  R4 U2        ; R4 := U2
129 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["UIMode"]
130 [-]: GETUPVAL  R5 U3        ; R5 := U3
131 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["UI_MODE_IN_DOJO"]
132 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 141
133 [-]: JMP       141          ; PC := 141
134 [-]: GETUPVAL  R4 U7        ; R4 := U7
135 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0x6566f2d4]
136 [-]: GETUPVAL  R6 U1        ; R6 := U1
137 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["avatar"]
138 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
139 [-]: MOVE      R3 R4        ; R3 := R4
140 [-]: JMP       152          ; PC := 152
141 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
142 [-]: GETUPVAL  R5 U1        ; R5 := U1
143 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["player"]
144 [-]: CALL      R4 2 2       ; R4 := R4(R5)
145 [-]: TEST      R4 1         ; if R4 then PC := 152
146 [-]: JMP       152          ; PC := 152
147 [-]: GETUPVAL  R4 U1        ; R4 := U1
148 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["player"]
149 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4[0x1020015e]
150 [-]: CALL      R4 2 2       ; R4 := R4(R5)
151 [-]: MOVE      R3 R4        ; R3 := R4
152 [-]: EQ        1 R3 K17     ; if R3 == "" then PC := 187
153 [-]: JMP       187          ; PC := 187
154 [-]: GETUPVAL  R4 U1        ; R4 := U1
155 [-]: GETGLOBAL R5 K29       ; R5 := 0xae91e43b
156 [-]: SELF      R5 R5 K30    ; R6 := R5; R5 := R5[0x42b04007]
157 [-]: LOADK     R7 K34       ; R7 := "/Lotus/Language/Menu/InspectPlayer"
158 [-]: LOADKB    R8 1 0       ; R8 := true
159 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
160 [-]: SETTABLE  R4 K23 R5    ; R4["desc"] := R5
161 [-]: JMP       187          ; PC := 187
162 [-]: GETUPVAL  R4 U1        ; R4 := U1
163 [-]: GETUPVAL  R5 U8        ; R5 := U8
164 [-]: GETUPVAL  R6 U1        ; R6 := U1
165 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["player"]
166 [-]: GETUPVAL  R7 U9        ; R7 := U9
167 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
168 [-]: SETTABLE  R4 K21 R5    ; R4["name"] := R5
169 [-]: GETUPVAL  R4 U1        ; R4 := U1
170 [-]: SETTABLE  R4 K35 K9    ; R4["sameFaction"] := true
171 [-]: TEST      R2 0         ; if not R2 then PC := 187
172 [-]: JMP       187          ; PC := 187
173 [-]: GETUPVAL  R4 U1        ; R4 := U1
174 [-]: GETGLOBAL R5 K29       ; R5 := 0xae91e43b
175 [-]: SELF      R5 R5 K30    ; R6 := R5; R5 := R5[0x42b04007]
176 [-]: LOADK     R7 K34       ; R7 := "/Lotus/Language/Menu/InspectPlayer"
177 [-]: LOADKB    R8 1 0       ; R8 := true
178 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
179 [-]: SETTABLE  R4 K23 R5    ; R4["desc"] := R5
180 [-]: JMP       187          ; PC := 187
181 [-]: GETUPVAL  R4 U1        ; R4 := U1
182 [-]: SETTABLE  R4 K10 K19   ; R4["player"] := nil
183 [-]: GETUPVAL  R4 U1        ; R4 := U1
184 [-]: SETTABLE  R4 K35 K36   ; R4["sameFaction"] := false
185 [-]: GETUPVAL  R4 U1        ; R4 := U1
186 [-]: SETTABLE  R4 K21 K17   ; R4["name"] := ""
187 [-]: GETGLOBAL R4 K29       ; R4 := 0xae91e43b
188 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4[0x5f56eeab]
189 [-]: LOADK     R6 K38       ; R6 := "TargetStatus.Name"
190 [-]: CONST     R7 29        ; R7 := 29.000000
191 [-]: GETUPVAL  R8 U1        ; R8 := U1
192 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["name"]
193 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
194 [-]: GETGLOBAL R4 K29       ; R4 := 0xae91e43b
195 [-]: SELF      R4 R4 K39    ; R5 := R4; R4 := R4[0xaade900e]
196 [-]: LOADK     R6 K38       ; R6 := "TargetStatus.Name"
197 [-]: CONST     R7 11        ; R7 := 11.000000
198 [-]: LOADKB    R8 1 0       ; R8 := true
199 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
200 [-]: GETUPVAL  R4 U1        ; R4 := U1
201 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["desc"]
202 [-]: EQ        1 R4 K19     ; if R4 == nil then PC := 218
203 [-]: JMP       218          ; PC := 218
204 [-]: GETGLOBAL R4 K29       ; R4 := 0xae91e43b
205 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4[0x5f56eeab]
206 [-]: LOADK     R6 K40       ; R6 := "TargetStatus.Desc"
207 [-]: CONST     R7 29        ; R7 := 29.000000
208 [-]: GETUPVAL  R8 U1        ; R8 := U1
209 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["desc"]
210 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
211 [-]: GETGLOBAL R4 K29       ; R4 := 0xae91e43b
212 [-]: SELF      R4 R4 K39    ; R5 := R4; R4 := R4[0xaade900e]
213 [-]: LOADK     R6 K40       ; R6 := "TargetStatus.Desc"
214 [-]: CONST     R7 11        ; R7 := 11.000000
215 [-]: LOADKB    R8 1 0       ; R8 := true
216 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
217 [-]: JMP       224          ; PC := 224
218 [-]: GETGLOBAL R4 K29       ; R4 := 0xae91e43b
219 [-]: SELF      R4 R4 K39    ; R5 := R4; R4 := R4[0xaade900e]
220 [-]: LOADK     R6 K40       ; R6 := "TargetStatus.Desc"
221 [-]: CONST     R7 11        ; R7 := 11.000000
222 [-]: LOADKB    R8 0 0       ; R8 := false
223 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
224 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 2256
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0xbb610e5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0xde321e6f]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x7c09e541]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: SETTABLE  R2 K4 K5     ; R2["valid"] := false
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: SETTABLE  R2 K6 K7     ; R2["name"] := ""
 24 [-]: GETUPVAL  R2 U1        ; R2 := U1
 25 [-]: SETTABLE  R2 K8 K9     ; R2["desc"] := nil
 26 [-]: GETUPVAL  R2 U1        ; R2 := U1
 27 [-]: SETTABLE  R2 K10 K9    ; R2["player"] := nil
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETUPVAL  R4 U1        ; R4 := U1
 31 [-]: GETUPVAL  R5 U2        ; R5 := U2
 32 [-]: GETTABLE  R5 R5 K14    ; R5 := R5[0xdb2e16e9]
 33 [-]: MOVE      R6 R1        ; R6 := R1
 34 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 35 [-]: SETTABLE  R4 K13 R7    ; R4["hitProxy"] := R7
 36 [-]: SETTABLE  R3 K12 R6    ; R3["avatar"] := R6
 37 [-]: SETTABLE  R2 K11 R5    ; R2["deco"] := R5
 38 [-]: GETUPVAL  R2 U3        ; R2 := U3
 39 [-]: CALL      R2 1 1       ; R2()
 40 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 2276
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R1 K2 R2     ; R1["Avatar"] := R2
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: SETTABLE  R1 K3 R2     ; R1["Controllers"] := R2
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: SETTABLE  R1 K4 R2     ; R1["Weapon"] := R2
  9 [-]: SETTABLE  R0 K1 R1     ; R0["ScanUpdateParms"] := R1
 10 [-]: GETGLOBAL R0 K5        ; R0 := 0x7b998233
 11 [-]: GETUPVAL  R1 U3        ; R1 := U3
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 34
 14 [-]: JMP       34           ; PC := 34
 15 [-]: GETGLOBAL R0 K6        ; R0 := 0xae91e43b
 16 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xcd73323e]
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x6d7bfacb]
 25 [-]: LOADKB    R3 0 0       ; R3 := false
 26 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 27 [-]: SETUPVAL  R1 U3        ; U82 := R3
 28 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 29 [-]: GETUPVAL  R2 U3        ; R2 := U3
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: TEST      R1 0         ; if not R1 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: GETUPVAL  R1 U3        ; R1 := U3
 35 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x59a9b745]
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: GETGLOBAL R2 K0        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ScanUpdateParms"]
 39 [-]: NEWTABLE  R3 0 4       ; R3 := {}
 40 [-]: GETTABLE  R4 R1 K11    ; R4 := R1["mActive"]
 41 [-]: SETTABLE  R3 K11 R4    ; R3["mActive"] := R4
 42 [-]: GETTABLE  R4 R1 K12    ; R4 := R1["mPtr"]
 43 [-]: SETTABLE  R3 K12 R4    ; R3["mPtr"] := R4
 44 [-]: GETTABLE  R4 R1 K13    ; R4 := R1["mAvatar"]
 45 [-]: SETTABLE  R3 K13 R4    ; R3["mAvatar"] := R4
 46 [-]: GETTABLE  R4 R1 K14    ; R4 := R1["mName"]
 47 [-]: SETTABLE  R3 K14 R4    ; R3["mName"] := R4
 48 [-]: SETTABLE  R2 K10 R3    ; R2["CurrentTarget"] := R3
 49 [-]: GETGLOBAL R2 K0        ; R2 := _T
 50 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ScanUpdateParms"]
 51 [-]: GETUPVAL  R3 U4        ; R3 := U4
 52 [-]: GETTABLE  R3 R3 K16    ; R3 := R3[0x06d055f9]
 53 [-]: GETTABLE  R4 R1 K11    ; R4 := R1["mActive"]
 54 [-]: CONST     R5 1         ; R5 := 1.000000
 55 [-]: LOADNIL   R6 R6        ; R6 := nil
 56 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 57 [-]: SETTABLE  R2 K15 R3    ; R2["ActiveTargetIndex"] := R3
 58 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 2293
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 2298
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LOADK     R3 K1        ; R3 := "HRVoidTearList"
  4 [-]: GETUPVAL  R4 U2        ; R4 := U2
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HT_ICON_BAR"]
  6 [-]: CONST     R5 0         ; R5 := 0.500000
  7 [-]: CONST     R6 1         ; R6 := 1.000000
  8 [-]: LOADKB    R7 0 0       ; R7 := false
  9 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 10 [-]: SETTABLE  R1 K0 R2     ; R1["VoidTearListTracker"] := R2
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0xb7ae3621]
 14 [-]: CONST     R2 0         ; R2 := 0.000000
 15 [-]: CONST     R3 -15       ; R3 := -15.000000
 16 [-]: CALL      R1 3 1       ; R1(R2,R3)
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["List"]
 20 [-]: SETTABLE  R1 K5 K6     ; R1["mCurrProgress"] := 0.000000
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 23 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["List"]
 24 [-]: GETUPVAL  R2 U3        ; R2 := U3
 25 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0x8bcd12b6]
 26 [-]: GETGLOBAL R3 K9        ; R3 := 0x0032441c
 27 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["UIColor_Red"]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: SETTABLE  R1 K7 R2     ; R1["mCompletedColorObj"] := R2
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 32 [-]: GETTABLE  R1 R1 K11    ; R1 := R1[0x6608b24b]
 33 [-]: CLOSURE   R2 0         ; R2 := closure(Function #97.1)
 34 [-]: GETUPVAL  R0 U3        ; R0 := U3
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: GETUPVAL  R1 U0        ; R1 := U0
 37 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 38 [-]: GETTABLE  R1 R1 K12    ; R1 := R1[0xbe9ad86f]
 39 [-]: CALL      R1 1 1       ; R1()
 40 [-]: GETUPVAL  R1 U0        ; R1 := U0
 41 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 42 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["List"]
 43 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x71e9ac81]
 44 [-]: CALL      R1 2 1       ; R1(R2)
 45 [-]: GETGLOBAL R1 K14       ; R1 := 0x7b998233
 46 [-]: GETUPVAL  R2 U0        ; R2 := U0
 47 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["VoidTearTitleTracker"]
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: TEST      R1 0         ; if not R1 then PC := 67
 50 [-]: JMP       67           ; PC := 67
 51 [-]: GETUPVAL  R1 U0        ; R1 := U0
 52 [-]: GETUPVAL  R2 U1        ; R2 := U1
 53 [-]: LOADK     R3 K16       ; R3 := "HRVoidTearTitle"
 54 [-]: GETUPVAL  R4 U2        ; R4 := U2
 55 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["HT_LABEL"]
 56 [-]: CONST     R5 0         ; R5 := 0.500000
 57 [-]: CONST     R6 1         ; R6 := 1.000000
 58 [-]: LOADKB    R7 0 0       ; R7 := false
 59 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 60 [-]: SETTABLE  R1 K15 R2    ; R1["VoidTearTitleTracker"] := R2
 61 [-]: GETUPVAL  R1 U0        ; R1 := U0
 62 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["VoidTearTitleTracker"]
 63 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0xb7ae3621]
 64 [-]: CONST     R2 0         ; R2 := 0.000000
 65 [-]: CONST     R3 -20       ; R3 := -20.000000
 66 [-]: CALL      R1 3 1       ; R1(R2,R3)
 67 [-]: RETURN    R0 1         ; return 


; Function #97.1:
;
; Name:            
; Defined at line: 2304
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETTABLE  R4 R2 K1     ; R4 := R2["mClipName"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 52
  5 [-]: JMP       52           ; PC := 52
  6 [-]: SELF      R3 R0 K2     ; R4 := R0; R3 := R0[0xd5181643]
  7 [-]: GETTABLE  R5 R2 K1     ; R5 := R2["mClipName"]
  8 [-]: LOADK     R6 K3        ; R6 := ".Bg"
  9 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 10 [-]: GETGLOBAL R6 K4        ; R6 := 0x0032441c
 11 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIMaterial_RectangleNoDepth"]
 12 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 13 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["Id"]
 14 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["mCurrProgress"]
 15 [-]: LE        1 R3 R4      ; if R3 <= R4 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 18
 18 [-]: LOADKB    R3 1 0       ; R3 := true
 19 [-]: GETUPVAL  R4 U0        ; R4 := U0
 20 [-]: GETTABLE  R4 R4 K8     ; R4 := R4[0x06d055f9]
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CONST     R6 0         ; R6 := 0.500000
 23 [-]: CONST     R7 0         ; R7 := 0.000000
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: GETTABLE  R5 R5 K8     ; R5 := R5[0x06d055f9]
 27 [-]: MOVE      R6 R3        ; R6 := R3
 28 [-]: GETTABLE  R7 R1 K9     ; R7 := R1["mCompletedColorObj"]
 29 [-]: GETGLOBAL R8 K4        ; R8 := 0x0032441c
 30 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["UIColorObject_White"]
 31 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 32 [-]: SELF      R6 R0 K11    ; R7 := R0; R6 := R0[0x91e13703]
 33 [-]: GETTABLE  R8 R2 K1     ; R8 := R2["mClipName"]
 34 [-]: LOADK     R9 K3        ; R9 := ".Bg"
 35 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 36 [-]: LOADK     R9 K12       ; R9 := "RectInnerColor"
 37 [-]: GETTABLE  R10 R5 K13   ; R10 := R5["r"]
 38 [-]: GETTABLE  R11 R5 K14   ; R11 := R5["g"]
 39 [-]: GETTABLE  R12 R5 K15   ; R12 := R5["b"]
 40 [-]: MOVE      R13 R4       ; R13 := R4
 41 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
 42 [-]: SELF      R6 R0 K11    ; R7 := R0; R6 := R0[0x91e13703]
 43 [-]: GETTABLE  R8 R2 K1     ; R8 := R2["mClipName"]
 44 [-]: LOADK     R9 K3        ; R9 := ".Bg"
 45 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 46 [-]: LOADK     R9 K16       ; R9 := "RectEdgeColor"
 47 [-]: GETTABLE  R10 R5 K13   ; R10 := R5["r"]
 48 [-]: GETTABLE  R11 R5 K14   ; R11 := R5["g"]
 49 [-]: GETTABLE  R12 R5 K15   ; R12 := R5["b"]
 50 [-]: LOADK     R13 K17      ; R13 := 0.900000
 51 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
 52 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 2326
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADKB    R1 0 0       ; R1 := false
  2 [-]: LOADK     R2 K0        ; R2 := "<p><font face=\"Noto Sans\" size=\"14\"><b>"
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x06d055f9]
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["Title"]
  6 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 9
  9 [-]: LOADKB    R4 1 0       ; R4 := true
 10 [-]: LOADK     R5 K4        ; R5 := ""
 11 [-]: GETGLOBAL R6 K5        ; R6 := 0x603636ad
 12 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["Title"]
 13 [-]: LOADKB    R8 0 0       ; R8 := false
 14 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 15 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 16 [-]: LOADK     R4 K6        ; R4 := "</b></font></p>"
 17 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["VoidTearTitleTracker"]
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x3f8a850c]
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 1       ; R3(R4)
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["VoidTearListTracker"]
 25 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["NeedsInit"]
 26 [-]: TEST      R3 1         ; if R3 then PC := 55
 27 [-]: JMP       55           ; PC := 55
 28 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["Total"]
 29 [-]: GETUPVAL  R4 U1        ; R4 := U1
 30 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["VoidTearListTracker"]
 31 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["List"]
 32 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x5fbddc1a]
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["VoidTearListTracker"]
 38 [-]: GETTABLE  R3 R3 K14    ; R3 := R3[0x55e7b08c]
 39 [-]: LOADKB    R4 1 0       ; R4 := true
 40 [-]: LOADKB    R5 1 0       ; R5 := true
 41 [-]: CALL      R3 3 1       ; R3(R4,R5)
 42 [-]: CONST     R3 1         ; R3 := 1.000000
 43 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["Total"]
 44 [-]: CONST     R5 1         ; R5 := 1.000000
 45 [-]: FORPREP   R3 53        ; R3 -= R5; PC := 53
 46 [-]: GETUPVAL  R7 U1        ; R7 := U1
 47 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 48 [-]: GETTABLE  R7 R7 K15    ; R7 := R7[0xe4b8bb38]
 49 [-]: LOADNIL   R8 R8        ; R8 := nil
 50 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 51 [-]: SETTABLE  R9 K16 K17   ; R9["Rotation"] := 45.000000
 52 [-]: CALL      R7 3 1       ; R7(R8,R9)
 53 [-]: FORLOOP   R3 46        ; R3 += R5; if R3 <= R4 then begin PC := 46; R6 := R3 end
 54 [-]: LOADKB    R1 1 0       ; R1 := true
 55 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["Curr"]
 56 [-]: GETUPVAL  R8 U1        ; R8 := U1
 57 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["VoidTearListTracker"]
 58 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["List"]
 59 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["mCurrProgress"]
 60 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 72
 61 [-]: JMP       72           ; PC := 72
 62 [-]: GETUPVAL  R7 U1        ; R7 := U1
 63 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 64 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["List"]
 65 [-]: GETTABLE  R8 R0 K18    ; R8 := R0["Curr"]
 66 [-]: SETTABLE  R7 K19 R8    ; R7["mCurrProgress"] := R8
 67 [-]: GETUPVAL  R7 U1        ; R7 := U1
 68 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 69 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[0xbe9ad86f]
 70 [-]: CALL      R7 1 1       ; R7()
 71 [-]: LOADKB    R1 1 0       ; R1 := true
 72 [-]: TEST      R1 0         ; if not R1 then PC := 82
 73 [-]: JMP       82           ; PC := 82
 74 [-]: GETUPVAL  R7 U1        ; R7 := U1
 75 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 76 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["List"]
 77 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0x71e9ac81]
 78 [-]: LOADNIL   R9 R9        ; R9 := nil
 79 [-]: LOADKB    R10 1 0      ; R10 := true
 80 [-]: LOADKB    R11 1 0      ; R11 := true
 81 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 82 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 2352
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["VoidTearProgress"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 34
  4 [-]: JMP       34           ; PC := 34
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["GreedWagerProgress"]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 34
  8 [-]: JMP       34           ; PC := 34
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 11 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VoidTearTracker"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: SETTABLE  R1 K4 K2     ; R1["VoidTearTracker"] := nil
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["VoidTearTitleTracker"]
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: SETTABLE  R1 K5 K2     ; R1["VoidTearTitleTracker"] := nil
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["VoidTearListTracker"]
 28 [-]: CALL      R1 2 1       ; R1(R2)
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: SETTABLE  R1 K6 K2     ; R1["VoidTearListTracker"] := nil
 31 [-]: GETUPVAL  R1 U2        ; R1 := U2
 32 [-]: SETTABLE  R1 K7 K8     ; R1["UpdateOverrides"] := true
 33 [-]: JMP       147          ; PC := 147
 34 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 147
 35 [-]: JMP       147          ; PC := 147
 36 [-]: GETTABLE  R1 R0 K9     ; R1 := R0["List"]
 37 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 51
 38 [-]: JMP       51           ; PC := 51
 39 [-]: GETGLOBAL R1 K10       ; R1 := 0x7b998233
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["VoidTearListTracker"]
 42 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 43 [-]: TEST      R1 0         ; if not R1 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETUPVAL  R1 U3        ; R1 := U3
 46 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["List"]
 47 [-]: CALL      R1 2 1       ; R1(R2)
 48 [-]: GETUPVAL  R1 U4        ; R1 := U4
 49 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["List"]
 50 [-]: CALL      R1 2 1       ; R1(R2)
 51 [-]: GETGLOBAL R1 K10       ; R1 := 0x7b998233
 52 [-]: GETUPVAL  R2 U0        ; R2 := U0
 53 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VoidTearTracker"]
 54 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 55 [-]: TEST      R1 0         ; if not R1 then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETUPVAL  R1 U0        ; R1 := U0
 58 [-]: GETUPVAL  R2 U5        ; R2 := U5
 59 [-]: LOADK     R3 K11       ; R3 := "HRVoidTear"
 60 [-]: GETUPVAL  R4 U6        ; R4 := U6
 61 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["HT_PROGRESS_BAR"]
 62 [-]: CONST     R5 0         ; R5 := 0.500000
 63 [-]: CONST     R6 1         ; R6 := 1.000000
 64 [-]: LOADKB    R7 0 0       ; R7 := false
 65 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 66 [-]: SETTABLE  R1 K4 R2     ; R1["VoidTearTracker"] := R2
 67 [-]: GETUPVAL  R1 U2        ; R1 := U2
 68 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["UpdateOverrides"]
 69 [-]: TEST      R1 0         ; if not R1 then PC := 123
 70 [-]: JMP       123          ; PC := 123
 71 [-]: GETUPVAL  R1 U2        ; R1 := U2
 72 [-]: SETTABLE  R1 K7 K2     ; R1["UpdateOverrides"] := nil
 73 [-]: GETUPVAL  R1 U0        ; R1 := U0
 74 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 75 [-]: GETTABLE  R1 R1 K13    ; R1 := R1[0x3f8a850c]
 76 [-]: GETUPVAL  R2 U2        ; R2 := U2
 77 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Message"]
 78 [-]: CALL      R1 2 1       ; R1(R2)
 79 [-]: GETUPVAL  R1 U0        ; R1 := U0
 80 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 81 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[0x89c1fa33]
 82 [-]: GETUPVAL  R2 U2        ; R2 := U2
 83 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["Icon"]
 84 [-]: CALL      R1 2 1       ; R1(R2)
 85 [-]: GETUPVAL  R1 U2        ; R1 := U2
 86 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["Tint"]
 87 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 113
 88 [-]: JMP       113          ; PC := 113
 89 [-]: GETUPVAL  R1 U0        ; R1 := U0
 90 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 91 [-]: GETTABLE  R1 R1 K18    ; R1 := R1[0x6336d9f3]
 92 [-]: GETUPVAL  R2 U2        ; R2 := U2
 93 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Tint"]
 94 [-]: CALL      R1 2 1       ; R1(R2)
 95 [-]: GETUPVAL  R1 U0        ; R1 := U0
 96 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 97 [-]: GETTABLE  R1 R1 K19    ; R1 := R1[0x504f8bdc]
 98 [-]: GETUPVAL  R2 U2        ; R2 := U2
 99 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Tint"]
100 [-]: CALL      R1 2 1       ; R1(R2)
101 [-]: GETUPVAL  R1 U0        ; R1 := U0
102 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
103 [-]: GETTABLE  R1 R1 K20    ; R1 := R1[0x7922f872]
104 [-]: GETUPVAL  R2 U2        ; R2 := U2
105 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Tint"]
106 [-]: CALL      R1 2 1       ; R1(R2)
107 [-]: GETUPVAL  R1 U0        ; R1 := U0
108 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
109 [-]: GETTABLE  R1 R1 K21    ; R1 := R1[0x36b539cc]
110 [-]: GETUPVAL  R2 U2        ; R2 := U2
111 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Tint"]
112 [-]: CALL      R1 2 1       ; R1(R2)
113 [-]: GETUPVAL  R1 U2        ; R1 := U2
114 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["IconSize"]
115 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 123
116 [-]: JMP       123          ; PC := 123
117 [-]: GETUPVAL  R1 U0        ; R1 := U0
118 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
119 [-]: GETTABLE  R1 R1 K23    ; R1 := R1[0x8412c0d2]
120 [-]: GETUPVAL  R2 U2        ; R2 := U2
121 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["IconSize"]
122 [-]: CALL      R1 2 1       ; R1(R2)
123 [-]: GETUPVAL  R1 U0        ; R1 := U0
124 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
125 [-]: GETTABLE  R1 R1 K24    ; R1 := R1[0x900fe191]
126 [-]: GETGLOBAL R2 K25       ; R2 := 0xae91e43b
127 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2[0x42b04007]
128 [-]: LOADK     R4 K27       ; R4 := "/Lotus/Language/Menu/ProgressXOfY"
129 [-]: LOADKB    R5 1 0       ; R5 := true
130 [-]: NEWTABLE  R6 0 2       ; R6 := {}
131 [-]: GETTABLE  R7 R0 K29    ; R7 := R0["Curr"]
132 [-]: SETTABLE  R6 K28 R7    ; R6["CURRENT"] := R7
133 [-]: GETTABLE  R7 R0 K31    ; R7 := R0["Total"]
134 [-]: SETTABLE  R6 K30 R7    ; R6["TOTAL"] := R7
135 [-]: CALL      R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
136 [-]: CALL      R1 0 1       ; R1(R2,...)
137 [-]: GETTABLE  R1 R0 K31    ; R1 := R0["Total"]
138 [-]: LT        0 K32 R1     ; if 0.000000 >= R1 then PC := 147
139 [-]: JMP       147          ; PC := 147
140 [-]: GETUPVAL  R1 U0        ; R1 := U0
141 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
142 [-]: GETTABLE  R1 R1 K33    ; R1 := R1[0x8550d2a7]
143 [-]: GETTABLE  R2 R0 K29    ; R2 := R0["Curr"]
144 [-]: GETTABLE  R3 R0 K31    ; R3 := R0["Total"]
145 [-]: DIV       R2 R2 R3     ; R2 := R2 / R3
146 [-]: CALL      R1 2 1       ; R1(R2)
147 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 2396
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["GreedWagerProgress"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 164
  4 [-]: JMP       164          ; PC := 164
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x42b04007]
  8 [-]: LOADK     R4 K4        ; R4 := "/Lotus/Language/Game/PveGreedCarryingPoints"
  9 [-]: LOADKB    R5 1 0       ; R5 := true
 10 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 11 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["Carrying"]
 12 [-]: SETTABLE  R6 K5 R7     ; R6["val"] := R7
 13 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 14 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["NoGoal"]
 15 [-]: TEST      R3 0         ; if not R3 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R1 R2        ; R1 := R2
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["Completed"]
 20 [-]: TEST      R3 1         ; if R3 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 23 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x42b04007]
 24 [-]: LOADK     R5 K9        ; R5 := "/Lotus/Language/Menu/ProgressXOfY"
 25 [-]: LOADKB    R6 1 0       ; R6 := true
 26 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 27 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["Curr"]
 28 [-]: SETTABLE  R7 K10 R8    ; R7["CURRENT"] := R8
 29 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["Total"]
 30 [-]: SETTABLE  R7 K12 R8    ; R7["TOTAL"] := R8
 31 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 32 [-]: MOVE      R1 R3        ; R1 := R3
 33 [-]: JMP       35           ; PC := 35
 34 [-]: GETTABLE  R1 R0 K14    ; R1 := R0["CompletedText"]
 35 [-]: MOVE      R3 R1        ; R3 := R1
 36 [-]: LOADK     R4 K15       ; R4 := "\r\n"
 37 [-]: MOVE      R5 R2        ; R5 := R2
 38 [-]: CONCAT    R1 R3 R5     ; R1 := R3 .. R4 .. R5
 39 [-]: GETTABLE  R3 R0 K16    ; R3 := R0["Bonus"]
 40 [-]: LT        0 K17 R3     ; if 0.000000 >= R3 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: LOADK     R3 K15       ; R3 := "\r\n"
 43 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 44 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x42b04007]
 45 [-]: LOADK     R6 K18       ; R6 := "/Lotus/Language/Game/PveGreedCarryingBonus"
 46 [-]: LOADKB    R7 1 0       ; R7 := true
 47 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 48 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["Bonus"]
 49 [-]: SETTABLE  R8 K5 R9     ; R8["val"] := R9
 50 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 51 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 52 [-]: MOVE      R4 R1        ; R4 := R1
 53 [-]: MOVE      R5 R3        ; R5 := R3
 54 [-]: CONCAT    R1 R4 R5     ; R1 := R4 .. R5
 55 [-]: GETUPVAL  R4 U0        ; R4 := U0
 56 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 57 [-]: EQ        0 R4 K20     ; if R4 ~= nil then PC := 69
 58 [-]: JMP       69           ; PC := 69
 59 [-]: GETUPVAL  R4 U0        ; R4 := U0
 60 [-]: GETUPVAL  R5 U1        ; R5 := U1
 61 [-]: LOADK     R6 K21       ; R6 := "HRVoidTear"
 62 [-]: GETUPVAL  R7 U2        ; R7 := U2
 63 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["HT_PROGRESS_BAR"]
 64 [-]: CONST     R8 0         ; R8 := 0.500000
 65 [-]: CONST     R9 1         ; R9 := 1.000000
 66 [-]: LOADKB    R10 0 0      ; R10 := false
 67 [-]: CALL      R5 6 2       ; R5 := R5(R6,R7,R8,R9,R10)
 68 [-]: SETTABLE  R4 K19 R5    ; R4["VoidTearTracker"] := R5
 69 [-]: GETUPVAL  R4 U3        ; R4 := U3
 70 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["UpdateOverrides"]
 71 [-]: TEST      R4 0         ; if not R4 then PC := 125
 72 [-]: JMP       125          ; PC := 125
 73 [-]: GETUPVAL  R4 U3        ; R4 := U3
 74 [-]: SETTABLE  R4 K23 K20   ; R4["UpdateOverrides"] := nil
 75 [-]: GETUPVAL  R4 U0        ; R4 := U0
 76 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 77 [-]: GETTABLE  R4 R4 K24    ; R4 := R4[0x3f8a850c]
 78 [-]: GETUPVAL  R5 U3        ; R5 := U3
 79 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["Message"]
 80 [-]: CALL      R4 2 1       ; R4(R5)
 81 [-]: GETUPVAL  R4 U0        ; R4 := U0
 82 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 83 [-]: GETTABLE  R4 R4 K26    ; R4 := R4[0x89c1fa33]
 84 [-]: GETUPVAL  R5 U3        ; R5 := U3
 85 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["Icon"]
 86 [-]: CALL      R4 2 1       ; R4(R5)
 87 [-]: GETUPVAL  R4 U3        ; R4 := U3
 88 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["Tint"]
 89 [-]: EQ        1 R4 K20     ; if R4 == nil then PC := 115
 90 [-]: JMP       115          ; PC := 115
 91 [-]: GETUPVAL  R4 U0        ; R4 := U0
 92 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 93 [-]: GETTABLE  R4 R4 K29    ; R4 := R4[0x6336d9f3]
 94 [-]: GETUPVAL  R5 U3        ; R5 := U3
 95 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["Tint"]
 96 [-]: CALL      R4 2 1       ; R4(R5)
 97 [-]: GETUPVAL  R4 U0        ; R4 := U0
 98 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 99 [-]: GETTABLE  R4 R4 K30    ; R4 := R4[0x504f8bdc]
100 [-]: GETUPVAL  R5 U3        ; R5 := U3
101 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["Tint"]
102 [-]: CALL      R4 2 1       ; R4(R5)
103 [-]: GETUPVAL  R4 U0        ; R4 := U0
104 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
105 [-]: GETTABLE  R4 R4 K31    ; R4 := R4[0x7922f872]
106 [-]: GETUPVAL  R5 U3        ; R5 := U3
107 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["Tint"]
108 [-]: CALL      R4 2 1       ; R4(R5)
109 [-]: GETUPVAL  R4 U0        ; R4 := U0
110 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
111 [-]: GETTABLE  R4 R4 K32    ; R4 := R4[0x36b539cc]
112 [-]: GETUPVAL  R5 U3        ; R5 := U3
113 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["Tint"]
114 [-]: CALL      R4 2 1       ; R4(R5)
115 [-]: GETUPVAL  R4 U3        ; R4 := U3
116 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["IconSize"]
117 [-]: EQ        1 R4 K20     ; if R4 == nil then PC := 125
118 [-]: JMP       125          ; PC := 125
119 [-]: GETUPVAL  R4 U0        ; R4 := U0
120 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
121 [-]: GETTABLE  R4 R4 K34    ; R4 := R4[0x8412c0d2]
122 [-]: GETUPVAL  R5 U3        ; R5 := U3
123 [-]: GETTABLE  R5 R5 K33    ; R5 := R5["IconSize"]
124 [-]: CALL      R4 2 1       ; R4(R5)
125 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["Completed"]
126 [-]: TEST      R4 1         ; if R4 then PC := 139
127 [-]: JMP       139          ; PC := 139
128 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["NoGoal"]
129 [-]: TEST      R4 1         ; if R4 then PC := 139
130 [-]: JMP       139          ; PC := 139
131 [-]: GETUPVAL  R4 U0        ; R4 := U0
132 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
133 [-]: GETTABLE  R4 R4 K35    ; R4 := R4[0x8550d2a7]
134 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["Curr"]
135 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["Total"]
136 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
137 [-]: CALL      R4 2 1       ; R4(R5)
138 [-]: JMP       144          ; PC := 144
139 [-]: GETUPVAL  R4 U0        ; R4 := U0
140 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
141 [-]: GETTABLE  R4 R4 K35    ; R4 := R4[0x8550d2a7]
142 [-]: CONST     R5 1         ; R5 := 1.000000
143 [-]: CALL      R4 2 1       ; R4(R5)
144 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["NoGoal"]
145 [-]: TEST      R4 0         ; if not R4 then PC := 159
146 [-]: JMP       159          ; PC := 159
147 [-]: GETUPVAL  R4 U0        ; R4 := U0
148 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
149 [-]: GETTABLE  R4 R4 K24    ; R4 := R4[0x3f8a850c]
150 [-]: MOVE      R5 R1        ; R5 := R1
151 [-]: CONST     R6 1         ; R6 := 1.000000
152 [-]: CALL      R4 3 1       ; R4(R5,R6)
153 [-]: GETUPVAL  R4 U0        ; R4 := U0
154 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
155 [-]: GETTABLE  R4 R4 K36    ; R4 := R4[0x900fe191]
156 [-]: LOADK     R5 K37       ; R5 := ""
157 [-]: CALL      R4 2 1       ; R4(R5)
158 [-]: JMP       164          ; PC := 164
159 [-]: GETUPVAL  R4 U0        ; R4 := U0
160 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
161 [-]: GETTABLE  R4 R4 K36    ; R4 := R4[0x900fe191]
162 [-]: MOVE      R5 R1        ; R5 := R1
163 [-]: CALL      R4 2 1       ; R4(R5)
164 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 2450
; #Upvalues:       8
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x0032441c
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["StalkerMode"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UIMode"]
  8 [-]: GETUPVAL  R3 U1        ; R3 := U1
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UI_MODE_IN_DOJO"]
 10 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 84
 11 [-]: JMP       84           ; PC := 84
 12 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0xe79e7ef4]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: LOADNIL   R3 R3        ; R3 := nil
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 37
 19 [-]: JMP       37           ; PC := 37
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0x64fb1586
 21 [-]: SELF      R5 R2 K7     ; R6 := R2; R5 := R2[0x109d46aa]
 22 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 23 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 24 [-]: EQ        1 R4 K8      ; if R4 == "" then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 27 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x42b04007]
 28 [-]: MOVE      R7 R4        ; R7 := R4
 29 [-]: LOADKB    R8 0 0       ; R8 := false
 30 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 31 [-]: MOVE      R3 R5        ; R3 := R5
 32 [-]: GETUPVAL  R5 U2        ; R5 := U2
 33 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xc63157a6]
 34 [-]: SELF      R7 R2 K12    ; R8 := R2; R7 := R2[0x4aecf89f]
 35 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 36 [-]: CALL      R5 0 1       ; R5(R6,...)
 37 [-]: TEST      R3 0         ; if not R3 then PC := 72
 38 [-]: JMP       72           ; PC := 72
 39 [-]: GETGLOBAL R5 K5        ; R5 := 0x7b998233
 40 [-]: GETGLOBAL R6 K13       ; R6 := _T
 41 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["DojoRoomTracker"]
 42 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 65
 44 [-]: JMP       65           ; PC := 65
 45 [-]: GETGLOBAL R5 K13       ; R5 := _T
 46 [-]: GETUPVAL  R6 U3        ; R6 := U3
 47 [-]: LOADK     R7 K15       ; R7 := "DojoRoomLabel"
 48 [-]: GETUPVAL  R8 U1        ; R8 := U1
 49 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["HT_PROGRESS_BAR"]
 50 [-]: LOADK     R9 K17       ; R9 := 0.200000
 51 [-]: LOADNIL   R10 R10      ; R10 := nil
 52 [-]: LOADKB    R11 0 0      ; R11 := false
 53 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 54 [-]: SETTABLE  R5 K14 R6    ; R5["DojoRoomTracker"] := R6
 55 [-]: GETGLOBAL R5 K13       ; R5 := _T
 56 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["DojoRoomTracker"]
 57 [-]: GETTABLE  R5 R5 K18    ; R5 := R5[0x3f8a850c]
 58 [-]: LOADK     R6 K8        ; R6 := ""
 59 [-]: CALL      R5 2 1       ; R5(R6)
 60 [-]: GETGLOBAL R5 K13       ; R5 := _T
 61 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["DojoRoomTracker"]
 62 [-]: GETTABLE  R5 R5 K19    ; R5 := R5[0x8550d2a7]
 63 [-]: CONST     R6 -1        ; R6 := -1.000000
 64 [-]: CALL      R5 2 1       ; R5(R6)
 65 [-]: GETGLOBAL R5 K13       ; R5 := _T
 66 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["DojoRoomTracker"]
 67 [-]: GETTABLE  R5 R5 K20    ; R5 := R5[0x900fe191]
 68 [-]: MOVE      R6 R3        ; R6 := R3
 69 [-]: CONST     R7 1         ; R7 := 1.000000
 70 [-]: CALL      R5 3 1       ; R5(R6,R7)
 71 [-]: JMP       84           ; PC := 84
 72 [-]: GETGLOBAL R5 K5        ; R5 := 0x7b998233
 73 [-]: GETGLOBAL R6 K13       ; R6 := _T
 74 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["DojoRoomTracker"]
 75 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 76 [-]: TEST      R5 1         ; if R5 then PC := 84
 77 [-]: JMP       84           ; PC := 84
 78 [-]: GETUPVAL  R5 U4        ; R5 := U4
 79 [-]: GETGLOBAL R6 K13       ; R6 := _T
 80 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["DojoRoomTracker"]
 81 [-]: CALL      R5 2 1       ; R5(R6)
 82 [-]: GETGLOBAL R5 K13       ; R5 := _T
 83 [-]: SETTABLE  R5 K14 K21   ; R5["DojoRoomTracker"] := nil
 84 [-]: GETGLOBAL R5 K13       ; R5 := _T
 85 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["VoidTearProgress"]
 86 [-]: TEST      R5 1         ; if R5 then PC := 92
 87 [-]: JMP       92           ; PC := 92
 88 [-]: GETUPVAL  R5 U5        ; R5 := U5
 89 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["VoidTearTracker"]
 90 [-]: EQ        1 R5 K21     ; if R5 == nil then PC := 94
 91 [-]: JMP       94           ; PC := 94
 92 [-]: GETUPVAL  R5 U6        ; R5 := U6
 93 [-]: CALL      R5 1 1       ; R5()
 94 [-]: GETGLOBAL R5 K13       ; R5 := _T
 95 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["GreedWagerProgress"]
 96 [-]: TEST      R5 0         ; if not R5 then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: GETUPVAL  R5 U7        ; R5 := U7
 99 [-]: CALL      R5 1 1       ; R5()
100 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 2489
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x40e9c32b]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x21278581]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 134
 19 [-]: JMP       134          ; PC := 134
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf2deaf69]
 22 [-]: GETGLOBAL R4 K6        ; R4 := 0x5e5216e2
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: TEST      R2 1         ; if R2 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf2deaf69]
 28 [-]: GETGLOBAL R4 K7        ; R4 := gLotusMoaPetAvatarType
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: TEST      R2 0         ; if not R2 then PC := 134
 31 [-]: JMP       134          ; PC := 134
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xc1595bd5]
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0x53d05c5a
 35 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 36 [-]: GETGLOBAL R3 K10       ; R3 := 0xc8802016
 37 [-]: MOVE      R4 R2        ; R4 := R2
 38 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 39 [-]: JMP       42           ; PC := 42
 40 [-]: SELF      R8 R7 K11    ; R9 := R7; R8 := R7[0xa2880940]
 41 [-]: CALL      R8 2 1       ; R8(R9)
 42 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 40; R5 := R6 end
 43 [-]: JMP       40           ; PC := 40
 44 [-]: GETUPVAL  R8 U0        ; R8 := U0
 45 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0xc1595bd5]
 46 [-]: GETGLOBAL R10 K12      ; R10 := 0x36c594be
 47 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 48 [-]: MOVE      R2 R8        ; R2 := R8
 49 [-]: GETGLOBAL R8 K10       ; R8 := 0xc8802016
 50 [-]: MOVE      R9 R2        ; R9 := R2
 51 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 52 [-]: JMP       55           ; PC := 55
 53 [-]: SELF      R13 R12 K11  ; R14 := R12; R13 := R12[0xa2880940]
 54 [-]: CALL      R13 2 1      ; R13(R14)
 55 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 53; R10 := R11 end
 56 [-]: JMP       53           ; PC := 53
 57 [-]: GETUPVAL  R13 U0       ; R13 := U0
 58 [-]: SELF      R13 R13 K8   ; R14 := R13; R13 := R13[0xc1595bd5]
 59 [-]: GETGLOBAL R15 K13      ; R15 := 0x53f71da0
 60 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 61 [-]: MOVE      R2 R13       ; R2 := R13
 62 [-]: GETGLOBAL R13 K10      ; R13 := 0xc8802016
 63 [-]: MOVE      R14 R2       ; R14 := R2
 64 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 65 [-]: JMP       68           ; PC := 68
 66 [-]: SELF      R18 R17 K11  ; R19 := R17; R18 := R17[0xa2880940]
 67 [-]: CALL      R18 2 1      ; R18(R19)
 68 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 66; R15 := R16 end
 69 [-]: JMP       66           ; PC := 66
 70 [-]: GETUPVAL  R18 U0       ; R18 := U0
 71 [-]: SELF      R18 R18 K8   ; R19 := R18; R18 := R18[0xc1595bd5]
 72 [-]: GETGLOBAL R20 K14      ; R20 := 0x7dd50d71
 73 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 74 [-]: MOVE      R2 R18       ; R2 := R18
 75 [-]: GETGLOBAL R18 K10      ; R18 := 0xc8802016
 76 [-]: MOVE      R19 R2       ; R19 := R2
 77 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
 78 [-]: JMP       81           ; PC := 81
 79 [-]: SELF      R23 R22 K11  ; R24 := R22; R23 := R22[0xa2880940]
 80 [-]: CALL      R23 2 1      ; R23(R24)
 81 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 79; R20 := R21 end
 82 [-]: JMP       79           ; PC := 79
 83 [-]: TEST      R1 0         ; if not R1 then PC := 134
 84 [-]: JMP       134          ; PC := 134
 85 [-]: GETUPVAL  R23 U0       ; R23 := U0
 86 [-]: SELF      R23 R23 K5   ; R24 := R23; R23 := R23[0xf2deaf69]
 87 [-]: GETGLOBAL R25 K7       ; R25 := gLotusMoaPetAvatarType
 88 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
 89 [-]: TEST      R23 0        ; if not R23 then PC := 113
 90 [-]: JMP       113          ; PC := 113
 91 [-]: GETUPVAL  R23 U1       ; R23 := U1
 92 [-]: GETTABLE  R23 R23 K15  ; R23 := R23[0x06d055f9]
 93 [-]: GETUPVAL  R24 U0       ; R24 := U0
 94 [-]: SELF      R24 R24 K5   ; R25 := R24; R24 := R24[0xf2deaf69]
 95 [-]: GETGLOBAL R26 K16      ; R26 := 0x375efbff
 96 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
 97 [-]: GETGLOBAL R25 K14      ; R25 := 0x7dd50d71
 98 [-]: GETGLOBAL R26 K13      ; R26 := 0x53f71da0
 99 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
100 [-]: GETUPVAL  R24 U0       ; R24 := U0
101 [-]: SELF      R24 R24 K17  ; R25 := R24; R24 := R24[0x47901f07]
102 [-]: MOVE      R26 R23      ; R26 := R23
103 [-]: GETGLOBAL R27 K18      ; R27 := 0x0469f296
104 [-]: LOADK     R28 K19      ; R28 := "GAME_C1_GUN1"
105 [-]: CALL      R27 2 2      ; R27 := R27(R28)
106 [-]: GETGLOBAL R28 K20      ; R28 := 0xa421af95
107 [-]: CONST     R29 0        ; R29 := 0.000000
108 [-]: LOADK     R30 K21      ; R30 := 0.300000
109 [-]: CONST     R31 0        ; R31 := 0.000000
110 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
111 [-]: CALL      R24 0 1      ; R24(R25,...)
112 [-]: JMP       134          ; PC := 134
113 [-]: GETUPVAL  R24 U1       ; R24 := U1
114 [-]: GETTABLE  R24 R24 K15  ; R24 := R24[0x06d055f9]
115 [-]: GETUPVAL  R25 U0       ; R25 := U0
116 [-]: SELF      R25 R25 K5   ; R26 := R25; R25 := R25[0xf2deaf69]
117 [-]: GETGLOBAL R27 K22      ; R27 := 0x27c4bd31
118 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
119 [-]: GETGLOBAL R26 K9       ; R26 := 0x53d05c5a
120 [-]: GETGLOBAL R27 K12      ; R27 := 0x36c594be
121 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
122 [-]: GETUPVAL  R25 U0       ; R25 := U0
123 [-]: SELF      R25 R25 K17  ; R26 := R25; R25 := R25[0x47901f07]
124 [-]: MOVE      R27 R24      ; R27 := R24
125 [-]: GETGLOBAL R28 K18      ; R28 := 0x0469f296
126 [-]: LOADK     R29 K23      ; R29 := "GAME_C1_HEAD1"
127 [-]: CALL      R28 2 2      ; R28 := R28(R29)
128 [-]: GETGLOBAL R29 K20      ; R29 := 0xa421af95
129 [-]: CONST     R30 0        ; R30 := 0.000000
130 [-]: LOADK     R31 K24      ; R31 := 0.400000
131 [-]: CONST     R32 0        ; R32 := 0.000000
132 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
133 [-]: CALL      R25 0 1      ; R25(R26,...)
134 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 2530
; #Upvalues:       2
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: GETTABLE  R6 R6 R0     ; R6 := R6[R0]
  3 [-]: EQ        0 R6 K0      ; if R6 ~= nil then PC := 16
  4 [-]: JMP       16           ; PC := 16
  5 [-]: GETUPVAL  R6 U0        ; R6 := U0
  6 [-]: NEWTABLE  R7 0 3       ; R7 := {}
  7 [-]: SETTABLE  R7 K1 R1     ; R7["ClipName"] := R1
  8 [-]: SETTABLE  R7 K2 K3     ; R7["NumClips"] := 1.000000
  9 [-]: GETGLOBAL R8 K5        ; R8 := 0xae91e43b
 10 [-]: SELF      R8 R8 K6     ; R9 := R8; R8 := R8[0x91a24e4b]
 11 [-]: MOVE      R10 R1       ; R10 := R1
 12 [-]: CONST     R11 5        ; R11 := 5.000000
 13 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 14 [-]: SETTABLE  R7 K4 R8     ; R7["BaseScale"] := R8
 15 [-]: SETTABLE  R6 R0 R7     ; R6[R0] := R7
 16 [-]: GETUPVAL  R6 U1        ; R6 := U1
 17 [-]: GETTABLE  R6 R6 K7     ; R6 := R6[0x06d055f9]
 18 [-]: MOVE      R7 R5        ; R7 := R5
 19 [-]: CONST     R8 1         ; R8 := 1.000000
 20 [-]: GETGLOBAL R9 K8        ; R9 := 0x5bced4c4
 21 [-]: GETTABLE  R9 R9 K9     ; R9 := R9[0xb62ecfe0]
 22 [-]: CONST     R10 1        ; R10 := 1.000000
 23 [-]: GETGLOBAL R11 K8       ; R11 := 0x5bced4c4
 24 [-]: GETTABLE  R11 R11 K10  ; R11 := R11[0x99675e23]
 25 [-]: GETGLOBAL R12 K8       ; R12 := 0x5bced4c4
 26 [-]: GETTABLE  R12 R12 K11  ; R12 := R12[0xae22009d]
 27 [-]: ADD       R13 R2 K3    ; R13 := R2 + 1.000000
 28 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 29 [-]: CALL      R11 0 0      ; R11,... := R11(R12,...)
 30 [-]: CALL      R9 0 0       ; R9,... := R9(R10,...)
 31 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 32 [-]: GETUPVAL  R7 U0        ; R7 := U0
 33 [-]: GETTABLE  R7 R7 R0     ; R7 := R7[R0]
 34 [-]: GETTABLE  R8 R7 K2     ; R8 := R7["NumClips"]
 35 [-]: LT        0 R8 R6      ; if R8 >= R6 then PC := 54
 36 [-]: JMP       54           ; PC := 54
 37 [-]: GETTABLE  R8 R7 K2     ; R8 := R7["NumClips"]
 38 [-]: ADD       R8 R8 K3     ; R8 := R8 + 1.000000
 39 [-]: MOVE      R9 R6        ; R9 := R6
 40 [-]: CONST     R10 1        ; R10 := 1.000000
 41 [-]: FORPREP   R8 52        ; R8 -= R10; PC := 52
 42 [-]: GETGLOBAL R12 K12      ; R12 := 0x38f10e85
 43 [-]: GETGLOBAL R13 K5       ; R13 := 0xae91e43b
 44 [-]: MOVE      R14 R1       ; R14 := R1
 45 [-]: LOADK     R15 K13      ; R15 := ".Container.Digit1.duplicateMovieClip"
 46 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
 47 [-]: LOADK     R15 K14      ; R15 := "Digit"
 48 [-]: MOVE      R16 R11      ; R16 := R11
 49 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 50 [-]: ADD       R16 K15 R11  ; R16 := 500.000000 + R11
 51 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 52 [-]: FORLOOP   R8 42        ; R8 += R10; if R8 <= R9 then begin PC := 42; R11 := R8 end
 53 [-]: SETTABLE  R7 K2 R6     ; R7["NumClips"] := R6
 54 [-]: CONST     R12 0        ; R12 := 0.000000
 55 [-]: CONST     R13 1        ; R13 := 1.000000
 56 [-]: GETTABLE  R14 R7 K2    ; R14 := R7["NumClips"]
 57 [-]: CONST     R15 1        ; R15 := 1.000000
 58 [-]: FORPREP   R13 123      ; R13 -= R15; PC := 123
 59 [-]: MOVE      R17 R1       ; R17 := R1
 60 [-]: LOADK     R18 K16      ; R18 := ".Container.Digit"
 61 [-]: MOVE      R19 R16      ; R19 := R16
 62 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
 63 [-]: LE        0 R16 R6     ; if R16 > R6 then PC := 117
 64 [-]: JMP       117          ; PC := 117
 65 [-]: CONST     R18 0        ; R18 := 0.000000
 66 [-]: TEST      R5 0         ; if not R5 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: CONST     R18 10       ; R18 := 10.000000
 69 [-]: JMP       80           ; PC := 80
 70 [-]: GETGLOBAL R19 K8       ; R19 := 0x5bced4c4
 71 [-]: GETTABLE  R19 R19 K17  ; R19 := R19[0x55f27c30]
 72 [-]: GETGLOBAL R20 K8       ; R20 := 0x5bced4c4
 73 [-]: GETTABLE  R20 R20 K18  ; R20 := R20[0xa40531d8]
 74 [-]: CONST     R21 10       ; R21 := 10.000000
 75 [-]: SUB       R22 R16 K3   ; R22 := R16 - 1.000000
 76 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 77 [-]: DIV       R20 R2 R20   ; R20 := R2 / R20
 78 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 79 [-]: MOD       R18 R19 K19  ; R18 := R19 % 10.000000
 80 [-]: GETGLOBAL R19 K12      ; R19 := 0x38f10e85
 81 [-]: GETGLOBAL R20 K5       ; R20 := 0xae91e43b
 82 [-]: MOVE      R21 R17      ; R21 := R17
 83 [-]: LOADK     R22 K20      ; R22 := ".gotoAndStop"
 84 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
 85 [-]: CONST     R22 1        ; R22 := 1.000000
 86 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
 87 [-]: GETGLOBAL R19 K12      ; R19 := 0x38f10e85
 88 [-]: GETGLOBAL R20 K5       ; R20 := 0xae91e43b
 89 [-]: MOVE      R21 R17      ; R21 := R17
 90 [-]: LOADK     R22 K20      ; R22 := ".gotoAndStop"
 91 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
 92 [-]: ADD       R22 R18 K3   ; R22 := R18 + 1.000000
 93 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
 94 [-]: GETGLOBAL R19 K5       ; R19 := 0xae91e43b
 95 [-]: SELF      R19 R19 K21  ; R20 := R19; R19 := R19[0x67bc869f]
 96 [-]: MOVE      R21 R17      ; R21 := R17
 97 [-]: CONST     R22 10       ; R22 := 10.000000
 98 [-]: CONST     R23 100      ; R23 := 100.000000
 99 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
100 [-]: GETGLOBAL R19 K5       ; R19 := 0xae91e43b
101 [-]: SELF      R19 R19 K21  ; R20 := R19; R19 := R19[0x67bc869f]
102 [-]: MOVE      R21 R17      ; R21 := R17
103 [-]: CONST     R22 0        ; R22 := 0.000000
104 [-]: MOVE      R23 R12      ; R23 := R12
105 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
106 [-]: EQ        0 R18 K3     ; if R18 ~= 1.000000 then PC := 114
107 [-]: JMP       114          ; PC := 114
108 [-]: GETGLOBAL R19 K22      ; R19 := 0x804cc764
109 [-]: EQ        1 R19 K23    ; if R19 == 0.000000 then PC := 114
110 [-]: JMP       114          ; PC := 114
111 [-]: GETGLOBAL R19 K22      ; R19 := 0x804cc764
112 [-]: SUB       R12 R12 R19  ; R12 := R12 - R19
113 [-]: JMP       123          ; PC := 123
114 [-]: GETGLOBAL R19 K24      ; R19 := 0xa5c9ed93
115 [-]: SUB       R12 R12 R19  ; R12 := R12 - R19
116 [-]: JMP       123          ; PC := 123
117 [-]: GETGLOBAL R19 K5       ; R19 := 0xae91e43b
118 [-]: SELF      R19 R19 K21  ; R20 := R19; R19 := R19[0x67bc869f]
119 [-]: MOVE      R21 R17      ; R21 := R17
120 [-]: CONST     R22 10       ; R22 := 10.000000
121 [-]: CONST     R23 0        ; R23 := 0.000000
122 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
123 [-]: FORLOOP   R13 59       ; R13 += R15; if R13 <= R14 then begin PC := 59; R16 := R13 end
124 [-]: UNM       R12 R12      ; R12 :=  R12
125 [-]: CONST     R19 0        ; R19 := 0.000000
126 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 177
127 [-]: JMP       177          ; PC := 177
128 [-]: LT        0 R4 R12     ; if R4 >= R12 then PC := 158
129 [-]: JMP       158          ; PC := 158
130 [-]: DIV       R20 R4 R12   ; R20 := R4 / R12
131 [-]: MUL       R20 K25 R20  ; R20 := 100.000000 * R20
132 [-]: MOVE      R12 R4       ; R12 := R4
133 [-]: GETGLOBAL R21 K5       ; R21 := 0xae91e43b
134 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21[0x67bc869f]
135 [-]: MOVE      R23 R1       ; R23 := R1
136 [-]: CONST     R24 5        ; R24 := 5.000000
137 [-]: MOVE      R25 R20      ; R25 := R20
138 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
139 [-]: GETGLOBAL R21 K5       ; R21 := 0xae91e43b
140 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21[0x67bc869f]
141 [-]: MOVE      R23 R1       ; R23 := R1
142 [-]: CONST     R24 6        ; R24 := 6.000000
143 [-]: MOVE      R25 R20      ; R25 := R20
144 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
145 [-]: GETTABLE  R21 R7 K4    ; R21 := R7["BaseScale"]
146 [-]: DIV       R21 R20 R21  ; R21 := R20 / R21
147 [-]: GETGLOBAL R22 K5       ; R22 := 0xae91e43b
148 [-]: SELF      R22 R22 K26  ; R23 := R22; R22 := R22[0xf64b7262]
149 [-]: MOVE      R24 R1       ; R24 := R1
150 [-]: LOADK     R25 K27      ; R25 := "Container"
151 [-]: CONST     R26 1        ; R26 := 1.000000
152 [-]: SUB       R27 K3 R21   ; R27 := 1.000000 - R21
153 [-]: MUL       R27 K28 R27  ; R27 := 46.000000 * R27
154 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
155 [-]: SUB       R22 K3 R21   ; R22 := 1.000000 - R21
156 [-]: MUL       R19 K29 R22  ; R19 := 28.000000 * R22
157 [-]: JMP       177          ; PC := 177
158 [-]: GETGLOBAL R22 K5       ; R22 := 0xae91e43b
159 [-]: SELF      R22 R22 K21  ; R23 := R22; R22 := R22[0x67bc869f]
160 [-]: MOVE      R24 R1       ; R24 := R1
161 [-]: CONST     R25 5        ; R25 := 5.000000
162 [-]: GETTABLE  R26 R7 K4    ; R26 := R7["BaseScale"]
163 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
164 [-]: GETGLOBAL R22 K5       ; R22 := 0xae91e43b
165 [-]: SELF      R22 R22 K21  ; R23 := R22; R22 := R22[0x67bc869f]
166 [-]: MOVE      R24 R1       ; R24 := R1
167 [-]: CONST     R25 6        ; R25 := 6.000000
168 [-]: GETTABLE  R26 R7 K4    ; R26 := R7["BaseScale"]
169 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
170 [-]: GETGLOBAL R22 K5       ; R22 := 0xae91e43b
171 [-]: SELF      R22 R22 K26  ; R23 := R22; R22 := R22[0xf64b7262]
172 [-]: MOVE      R24 R1       ; R24 := R1
173 [-]: LOADK     R25 K27      ; R25 := "Container"
174 [-]: CONST     R26 1        ; R26 := 1.000000
175 [-]: CONST     R27 0        ; R27 := 0.000000
176 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
177 [-]: EQ        0 R3 K3      ; if R3 ~= 1.000000 then PC := 184
178 [-]: JMP       184          ; PC := 184
179 [-]: GETGLOBAL R22 K24      ; R22 := 0xa5c9ed93
180 [-]: SUB       R23 R6 K3    ; R23 := R6 - 1.000000
181 [-]: MUL       R22 R22 R23  ; R22 := R22 * R23
182 [-]: DIV       R22 R22 K30  ; R22 := R22 / 2.000000
183 [-]: ADD       R19 R22 R19  ; R19 := R22 + R19
184 [-]: GETGLOBAL R22 K5       ; R22 := 0xae91e43b
185 [-]: SELF      R22 R22 K26  ; R23 := R22; R22 := R22[0xf64b7262]
186 [-]: MOVE      R24 R1       ; R24 := R1
187 [-]: LOADK     R25 K27      ; R25 := "Container"
188 [-]: CONST     R26 0        ; R26 := 0.000000
189 [-]: MOVE      R27 R19      ; R27 := R19
190 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
191 [-]: MOVE      R22 R6       ; R22 := R6
192 [-]: GETGLOBAL R23 K24      ; R23 := 0xa5c9ed93
193 [-]: SUB       R24 R6 K3    ; R24 := R6 - 1.000000
194 [-]: MUL       R23 R23 R24  ; R23 := R23 * R24
195 [-]: SUB       R23 R19 R23  ; R23 := R19 - R23
196 [-]: RETURN    R22 3        ; return R22,R23
197 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 2598
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  78

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 31
 11 [-]: JMP       31           ; PC := 31
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xf4ed1581]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 31
 17 [-]: JMP       31           ; PC := 31
 18 [-]: SETUPVAL  R0 U2        ; U82 := R2
 19 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xaade900e]
 21 [-]: LOADK     R3 K4        ; R3 := "MiniMapContainer.MapBorders"
 22 [-]: CONST     R4 11        ; R4 := 11.000000
 23 [-]: NOT       R5 R0        ; R5 :=  R0
 24 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 25 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xaade900e]
 27 [-]: LOADK     R3 K5        ; R3 := "MiniMapContainer.MapBorderShadow"
 28 [-]: CONST     R4 11        ; R4 := 11.000000
 29 [-]: NOT       R5 R0        ; R5 :=  R0
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: GETGLOBAL R1 K6        ; R1 := 0xe72d2edb
 32 [-]: EQ        1 R1 K8      ; if R1 == 1.000000 then PC := 99
 33 [-]: JMP       99           ; PC := 99
 34 [-]: GETUPVAL  R1 U3        ; R1 := U3
 35 [-]: GETGLOBAL R2 K9        ; R2 := 0x34291f5c
 36 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0x1467d5f4]
 37 [-]: CALL      R2 1 2       ; R2 := R2()
 38 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 99
 39 [-]: JMP       99           ; PC := 99
 40 [-]: GETGLOBAL R1 K9        ; R1 := 0x34291f5c
 41 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0x1467d5f4]
 42 [-]: CALL      R1 1 2       ; R1 := R1()
 43 [-]: SETUPVAL  R1 U3        ; U82 := R3
 44 [-]: LOADK     R1 K11       ; R1 := "MoaComponent.SummonMoa"
 45 [-]: GETGLOBAL R2 K6        ; R2 := 0xe72d2edb
 46 [-]: EQ        0 R2 K12     ; if R2 ~= 3.000000 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: LOADK     R1 K13       ; R1 := "StancePanel.StanceComponent.Stance"
 49 [-]: MOVE      R2 R1        ; R2 := R1
 50 [-]: LOADK     R3 K14       ; R3 := "2"
 51 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 52 [-]: MOVE      R3 R1        ; R3 := R1
 53 [-]: LOADK     R4 K15       ; R4 := "1"
 54 [-]: CONCAT    R1 R3 R4     ; R1 := R3 .. R4
 55 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 56 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x91a24e4b]
 57 [-]: MOVE      R5 R1        ; R5 := R1
 58 [-]: CONST     R6 0         ; R6 := 0.000000
 59 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 60 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 61 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x91a24e4b]
 62 [-]: MOVE      R6 R2        ; R6 := R2
 63 [-]: CONST     R7 0         ; R7 := 0.000000
 64 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 65 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 66 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5[0x67bc869f]
 67 [-]: MOVE      R7 R1        ; R7 := R1
 68 [-]: CONST     R8 0         ; R8 := 0.000000
 69 [-]: MOVE      R9 R4        ; R9 := R4
 70 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 71 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 72 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5[0x67bc869f]
 73 [-]: MOVE      R7 R2        ; R7 := R2
 74 [-]: CONST     R8 0         ; R8 := 0.000000
 75 [-]: MOVE      R9 R3        ; R9 := R3
 76 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 77 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 78 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0x91a24e4b]
 79 [-]: MOVE      R7 R1        ; R7 := R1
 80 [-]: CONST     R8 1         ; R8 := 1.000000
 81 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 82 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 83 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0x91a24e4b]
 84 [-]: MOVE      R8 R2        ; R8 := R2
 85 [-]: CONST     R9 1         ; R9 := 1.000000
 86 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 87 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 88 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0x67bc869f]
 89 [-]: MOVE      R9 R1        ; R9 := R1
 90 [-]: CONST     R10 1        ; R10 := 1.000000
 91 [-]: MOVE      R11 R6       ; R11 := R6
 92 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 93 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 94 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0x67bc869f]
 95 [-]: MOVE      R9 R2        ; R9 := R2
 96 [-]: CONST     R10 1        ; R10 := 1.000000
 97 [-]: MOVE      R11 R5       ; R11 := R5
 98 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 99 [-]: GETGLOBAL R7 K18       ; R7 := _T
100 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["CustomHudHealth"]
101 [-]: TEST      R7 1         ; if R7 then PC := 110
102 [-]: JMP       110          ; PC := 110
103 [-]: GETGLOBAL R7 K20       ; R7 := 0x5bced4c4
104 [-]: GETTABLE  R7 R7 K21    ; R7 := R7[0xb62ecfe0]
105 [-]: CONST     R8 0         ; R8 := 0.000000
106 [-]: GETUPVAL  R9 U0        ; R9 := U0
107 [-]: SELF      R9 R9 K22    ; R10 := R9; R9 := R9[0x614c860a]
108 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
109 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
110 [-]: GETGLOBAL R8 K6        ; R8 := 0xe72d2edb
111 [-]: EQ        0 R8 K8      ; if R8 ~= 1.000000 then PC := 696
112 [-]: JMP       696          ; PC := 696
113 [-]: GETUPVAL  R8 U4        ; R8 := U4
114 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Health"]
115 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 154
116 [-]: JMP       154          ; PC := 154
117 [-]: GETUPVAL  R8 U4        ; R8 := U4
118 [-]: SETTABLE  R8 K23 R7    ; R8["Health"] := R7
119 [-]: GETUPVAL  R8 U5        ; R8 := U5
120 [-]: LOADK     R9 K23       ; R9 := "Health"
121 [-]: LOADK     R10 K24      ; R10 := "HealthAndShield.PlayerHealth"
122 [-]: MOVE      R11 R7       ; R11 := R7
123 [-]: GETGLOBAL R12 K18      ; R12 := _T
124 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["CustomHudHealthOffset"]
125 [-]: TEST      R12 1        ; if R12 then PC := 128
126 [-]: JMP       128          ; PC := 128
127 [-]: CONST     R12 1        ; R12 := 1.000000
128 [-]: CONST     R13 72       ; R13 := 72.000000
129 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
130 [-]: GETUPVAL  R8 U0        ; R8 := U0
131 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0x52cd594a]
132 [-]: CALL      R8 2 2       ; R8 := R8(R9)
133 [-]: MUL       R9 R8 K27    ; R9 := R8 * 59.000000
134 [-]: SUB       R9 K28 R9    ; R9 := 60.000000 - R9
135 [-]: GETGLOBAL R10 K29      ; R10 := 0x38f10e85
136 [-]: GETGLOBAL R11 K2       ; R11 := 0xae91e43b
137 [-]: LOADK     R12 K30      ; R12 := "HealthAndShield.Player.gotoAndStop"
138 [-]: MOVE      R13 R9       ; R13 := R9
139 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
140 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
141 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0x67bc869f]
142 [-]: LOADK     R12 K31      ; R12 := "HealthAndShield.Player.Health"
143 [-]: CONST     R13 9        ; R13 := 9.000000
144 [-]: GETUPVAL  R14 U6       ; R14 := U6
145 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["Health"]
146 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
147 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
148 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0x67bc869f]
149 [-]: LOADK     R12 K32      ; R12 := "HealthAndShield.Player.Bg"
150 [-]: CONST     R13 9        ; R13 := 9.000000
151 [-]: GETUPVAL  R14 U6       ; R14 := U6
152 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["UnselectedAbility"]
153 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
154 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
155 [-]: GETUPVAL  R11 U7       ; R11 := U7
156 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["ActivePowerSuit"]
157 [-]: CALL      R10 2 2      ; R10 := R10(R11)
158 [-]: TEST      R10 1        ; if R10 then PC := 549
159 [-]: JMP       549          ; PC := 549
160 [-]: GETUPVAL  R10 U7       ; R10 := U7
161 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["ActivePowerSuit"]
162 [-]: SELF      R10 R10 K35  ; R11 := R10; R10 := R10[0x58a4d5ac]
163 [-]: CALL      R10 2 2      ; R10 := R10(R11)
164 [-]: GETGLOBAL R11 K20      ; R11 := 0x5bced4c4
165 [-]: GETTABLE  R11 R11 K36  ; R11 := R11[0xac1b386a]
166 [-]: DIV       R12 R10 K37  ; R12 := R10 / 25.000000
167 [-]: CALL      R11 2 2      ; R11 := R11(R12)
168 [-]: GETUPVAL  R12 U4       ; R12 := U4
169 [-]: GETTABLE  R12 R12 K38  ; R12 := R12["GrenadeCount"]
170 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 211
171 [-]: JMP       211          ; PC := 211
172 [-]: GETUPVAL  R12 U4       ; R12 := U4
173 [-]: SETTABLE  R12 K38 R11  ; R12["GrenadeCount"] := R11
174 [-]: CONST     R12 1        ; R12 := 1.000000
175 [-]: CONST     R13 4        ; R13 := 4.000000
176 [-]: CONST     R14 1        ; R14 := 1.000000
177 [-]: FORPREP   R12 210      ; R12 -= R14; PC := 210
178 [-]: LE        1 R15 R11    ; if R15 <= R11 then PC := 181
179 [-]: JMP       181          ; PC := 181
180 [-]: LOADKB    R16 0 1      ; R16 := false; PC := 181
181 [-]: LOADKB    R16 1 0      ; R16 := true
182 [-]: GETGLOBAL R17 K2       ; R17 := 0xae91e43b
183 [-]: SELF      R17 R17 K39  ; R18 := R17; R17 := R17[0xf64b7262]
184 [-]: LOADK     R19 K40      ; R19 := "GrineerAbilityPanel.GrenadeComponent.Pips.Pip"
185 [-]: MOVE      R20 R15      ; R20 := R15
186 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
187 [-]: LOADK     R20 K41      ; R20 := "Fill"
188 [-]: CONST     R21 9        ; R21 := 9.000000
189 [-]: GETUPVAL  R22 U8       ; R22 := U8
190 [-]: GETTABLE  R22 R22 K42  ; R22 := R22[0x06d055f9]
191 [-]: MOVE      R23 R16      ; R23 := R16
192 [-]: LOADK     R24 K43      ; R24 := 15844670.000000
193 [-]: LOADK     R25 K44      ; R25 := 16777215.000000
194 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
195 [-]: CALL      R17 0 1      ; R17(R18,...)
196 [-]: GETGLOBAL R17 K2       ; R17 := 0xae91e43b
197 [-]: SELF      R17 R17 K39  ; R18 := R17; R17 := R17[0xf64b7262]
198 [-]: LOADK     R19 K40      ; R19 := "GrineerAbilityPanel.GrenadeComponent.Pips.Pip"
199 [-]: MOVE      R20 R15      ; R20 := R15
200 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
201 [-]: LOADK     R20 K41      ; R20 := "Fill"
202 [-]: CONST     R21 10       ; R21 := 10.000000
203 [-]: GETUPVAL  R22 U8       ; R22 := U8
204 [-]: GETTABLE  R22 R22 K42  ; R22 := R22[0x06d055f9]
205 [-]: MOVE      R23 R16      ; R23 := R16
206 [-]: CONST     R24 100      ; R24 := 100.000000
207 [-]: CONST     R25 10       ; R25 := 10.000000
208 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
209 [-]: CALL      R17 0 1      ; R17(R18,...)
210 [-]: FORLOOP   R12 178      ; R12 += R14; if R12 <= R13 then begin PC := 178; R15 := R12 end
211 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
212 [-]: GETUPVAL  R18 U4       ; R18 := U4
213 [-]: GETTABLE  R18 R18 K45  ; R18 := R18["CustomAbilities"]
214 [-]: CALL      R17 2 2      ; R17 := R17(R18)
215 [-]: TEST      R17 0        ; if not R17 then PC := 280
216 [-]: JMP       280          ; PC := 280
217 [-]: GETUPVAL  R17 U4       ; R17 := U4
218 [-]: GETUPVAL  R18 U7       ; R18 := U7
219 [-]: GETTABLE  R18 R18 K34  ; R18 := R18["ActivePowerSuit"]
220 [-]: SELF      R18 R18 K46  ; R19 := R18; R18 := R18[0x3c88e434]
221 [-]: CALL      R18 2 2      ; R18 := R18(R19)
222 [-]: SETTABLE  R17 K45 R18  ; R17["CustomAbilities"] := R18
223 [-]: CONST     R17 1        ; R17 := 1.000000
224 [-]: CONST     R18 2        ; R18 := 2.000000
225 [-]: CONST     R19 1        ; R19 := 1.000000
226 [-]: FORPREP   R17 279      ; R17 -= R19; PC := 279
227 [-]: LOADK     R21 K47      ; R21 := "Ability"
228 [-]: MOVE      R22 R20      ; R22 := R20
229 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
230 [-]: LOADNIL   R22 R22      ; R22 := nil
231 [-]: GETGLOBAL R23 K0       ; R23 := 0x7b998233
232 [-]: GETUPVAL  R24 U4       ; R24 := U4
233 [-]: GETTABLE  R24 R24 K45  ; R24 := R24["CustomAbilities"]
234 [-]: CALL      R23 2 2      ; R23 := R23(R24)
235 [-]: TEST      R23 1        ; if R23 then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETUPVAL  R23 U4       ; R23 := U4
238 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["CustomAbilities"]
239 [-]: ADD       R24 R20 K8   ; R24 := R20 + 1.000000
240 [-]: GETTABLE  R22 R23 R24  ; R22 := R23[R24]
241 [-]: GETGLOBAL R23 K0       ; R23 := 0x7b998233
242 [-]: MOVE      R24 R22      ; R24 := R22
243 [-]: CALL      R23 2 2      ; R23 := R23(R24)
244 [-]: TEST      R23 1        ; if R23 then PC := 255
245 [-]: JMP       255          ; PC := 255
246 [-]: GETGLOBAL R23 K2       ; R23 := 0xae91e43b
247 [-]: SELF      R23 R23 K48  ; R24 := R23; R23 := R23[0x1cb415c1]
248 [-]: LOADK     R25 K49      ; R25 := "GrineerAbilityPanel."
249 [-]: MOVE      R26 R21      ; R26 := R21
250 [-]: LOADK     R27 K50      ; R27 := ".Icon"
251 [-]: CONCAT    R25 R25 R27  ; R25 := R25 .. R26 .. R27
252 [-]: SELF      R26 R22 K51  ; R27 := R22; R26 := R22[0x056dcf06]
253 [-]: CALL      R26 2 0      ; R26,... := R26(R27)
254 [-]: CALL      R23 0 1      ; R23(R24,...)
255 [-]: GETGLOBAL R23 K2       ; R23 := 0xae91e43b
256 [-]: SELF      R23 R23 K3   ; R24 := R23; R23 := R23[0xaade900e]
257 [-]: LOADK     R25 K49      ; R25 := "GrineerAbilityPanel."
258 [-]: MOVE      R26 R21      ; R26 := R21
259 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
260 [-]: CONST     R26 11       ; R26 := 11.000000
261 [-]: GETUPVAL  R27 U8       ; R27 := U8
262 [-]: GETTABLE  R27 R27 K42  ; R27 := R27[0x06d055f9]
263 [-]: GETGLOBAL R28 K9       ; R28 := 0x34291f5c
264 [-]: GETTABLE  R28 R28 K52  ; R28 := R28[0xe6b41adb]
265 [-]: CALL      R28 1 2      ; R28 := R28()
266 [-]: LOADKB    R29 0 0      ; R29 := false
267 [-]: GETGLOBAL R30 K0       ; R30 := 0x7b998233
268 [-]: MOVE      R31 R22      ; R31 := R22
269 [-]: CALL      R30 2 2      ; R30 := R30(R31)
270 [-]: TEST      R30 1        ; if R30 then PC := 275
271 [-]: JMP       275          ; PC := 275
272 [-]: SELF      R30 R22 K53  ; R31 := R22; R30 := R22[0xf37943ff]
273 [-]: CALL      R30 2 2      ; R30 := R30(R31)
274 [-]: JMP       277          ; PC := 277
275 [-]: LOADKB    R30 0 1      ; R30 := false; PC := 276
276 [-]: LOADKB    R30 1 0      ; R30 := true
277 [-]: CALL      R27 4 0      ; R27,... := R27(R28,R29,R30)
278 [-]: CALL      R23 0 1      ; R23(R24,...)
279 [-]: FORLOOP   R17 227      ; R17 += R19; if R17 <= R18 then begin PC := 227; R20 := R17 end
280 [-]: CONST     R23 0        ; R23 := 0.000000
281 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
282 [-]: GETUPVAL  R25 U4       ; R25 := U4
283 [-]: GETTABLE  R25 R25 K45  ; R25 := R25["CustomAbilities"]
284 [-]: CALL      R24 2 2      ; R24 := R24(R25)
285 [-]: TEST      R24 1        ; if R24 then PC := 394
286 [-]: JMP       394          ; PC := 394
287 [-]: GETUPVAL  R24 U7       ; R24 := U7
288 [-]: GETTABLE  R24 R24 K34  ; R24 := R24["ActivePowerSuit"]
289 [-]: SELF      R24 R24 K54  ; R25 := R24; R24 := R24[0x3466139d]
290 [-]: CALL      R24 2 2      ; R24 := R24(R25)
291 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
292 [-]: SELF      R25 R25 K3   ; R26 := R25; R25 := R25[0xaade900e]
293 [-]: LOADK     R27 K55      ; R27 := "GrineerAbilityPanel.GrenadeComponent.Glow"
294 [-]: CONST     R28 11       ; R28 := 11.000000
295 [-]: EQ        1 R24 K56    ; if R24 == 0.000000 then PC := 298
296 [-]: JMP       298          ; PC := 298
297 [-]: LOADKB    R29 0 1      ; R29 := false; PC := 298
298 [-]: LOADKB    R29 1 0      ; R29 := true
299 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
300 [-]: CONST     R25 1        ; R25 := 1.000000
301 [-]: CONST     R26 2        ; R26 := 2.000000
302 [-]: CONST     R27 1        ; R27 := 1.000000
303 [-]: FORPREP   R25 393      ; R25 -= R27; PC := 393
304 [-]: LOADK     R29 K47      ; R29 := "Ability"
305 [-]: MOVE      R30 R28      ; R30 := R28
306 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
307 [-]: GETUPVAL  R30 U4       ; R30 := U4
308 [-]: GETTABLE  R30 R30 K45  ; R30 := R30["CustomAbilities"]
309 [-]: ADD       R31 R28 K8   ; R31 := R28 + 1.000000
310 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
311 [-]: GETGLOBAL R31 K0       ; R31 := 0x7b998233
312 [-]: MOVE      R32 R30      ; R32 := R30
313 [-]: CALL      R31 2 2      ; R31 := R31(R32)
314 [-]: TEST      R31 1        ; if R31 then PC := 393
315 [-]: JMP       393          ; PC := 393
316 [-]: ADD       R23 R23 K8   ; R23 := R23 + 1.000000
317 [-]: SELF      R31 R30 K57  ; R32 := R30; R31 := R30[0xf8975e8e]
318 [-]: CALL      R31 2 2      ; R31 := R31(R32)
319 [-]: NOT       R31 R31      ; R31 :=  R31
320 [-]: GETGLOBAL R32 K2       ; R32 := 0xae91e43b
321 [-]: SELF      R32 R32 K17  ; R33 := R32; R32 := R32[0x67bc869f]
322 [-]: LOADK     R34 K49      ; R34 := "GrineerAbilityPanel."
323 [-]: MOVE      R35 R29      ; R35 := R29
324 [-]: LOADK     R36 K50      ; R36 := ".Icon"
325 [-]: CONCAT    R34 R34 R36  ; R34 := R34 .. R35 .. R36
326 [-]: CONST     R35 10       ; R35 := 10.000000
327 [-]: GETUPVAL  R36 U8       ; R36 := U8
328 [-]: GETTABLE  R36 R36 K42  ; R36 := R36[0x06d055f9]
329 [-]: MOVE      R37 R31      ; R37 := R31
330 [-]: CONST     R38 100      ; R38 := 100.000000
331 [-]: CONST     R39 30       ; R39 := 30.000000
332 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
333 [-]: CALL      R32 0 1      ; R32(R33,...)
334 [-]: EQ        0 R28 K58    ; if R28 ~= 2.000000 then PC := 365
335 [-]: JMP       365          ; PC := 365
336 [-]: SELF      R32 R30 K59  ; R33 := R30; R32 := R30[0x243bbfd2]
337 [-]: CALL      R32 2 2      ; R32 := R32(R33)
338 [-]: GETGLOBAL R33 K2       ; R33 := 0xae91e43b
339 [-]: SELF      R33 R33 K3   ; R34 := R33; R33 := R33[0xaade900e]
340 [-]: LOADK     R35 K49      ; R35 := "GrineerAbilityPanel."
341 [-]: MOVE      R36 R29      ; R36 := R29
342 [-]: LOADK     R37 K60      ; R37 := ".CooldownLabel"
343 [-]: CONCAT    R35 R35 R37  ; R35 := R35 .. R36 .. R37
344 [-]: CONST     R36 11       ; R36 := 11.000000
345 [-]: TEST      R31 1        ; if R31 then PC := 349
346 [-]: JMP       349          ; PC := 349
347 [-]: LT        1 K56 R32    ; if 0.000000 < R32 then PC := 350
348 [-]: JMP       350          ; PC := 350
349 [-]: LOADKB    R37 0 1      ; R37 := false; PC := 350
350 [-]: LOADKB    R37 1 0      ; R37 := true
351 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
352 [-]: GETGLOBAL R33 K2       ; R33 := 0xae91e43b
353 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0x5f56eeab]
354 [-]: LOADK     R35 K49      ; R35 := "GrineerAbilityPanel."
355 [-]: MOVE      R36 R29      ; R36 := R29
356 [-]: LOADK     R37 K60      ; R37 := ".CooldownLabel"
357 [-]: CONCAT    R35 R35 R37  ; R35 := R35 .. R36 .. R37
358 [-]: CONST     R36 29       ; R36 := 29.000000
359 [-]: GETUPVAL  R37 U8       ; R37 := U8
360 [-]: GETTABLE  R37 R37 K62  ; R37 := R37[0x1142c7a8]
361 [-]: MOVE      R38 R32      ; R38 := R32
362 [-]: CONST     R39 1        ; R39 := 1.000000
363 [-]: CALL      R37 3 0      ; R37,... := R37(R38,R39)
364 [-]: CALL      R33 0 1      ; R33(R34,...)
365 [-]: GETGLOBAL R33 K2       ; R33 := 0xae91e43b
366 [-]: SELF      R33 R33 K3   ; R34 := R33; R33 := R33[0xaade900e]
367 [-]: LOADK     R35 K49      ; R35 := "GrineerAbilityPanel."
368 [-]: MOVE      R36 R29      ; R36 := R29
369 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
370 [-]: CONST     R36 11       ; R36 := 11.000000
371 [-]: GETUPVAL  R37 U8       ; R37 := U8
372 [-]: GETTABLE  R37 R37 K42  ; R37 := R37[0x06d055f9]
373 [-]: GETGLOBAL R38 K9       ; R38 := 0x34291f5c
374 [-]: GETTABLE  R38 R38 K52  ; R38 := R38[0xe6b41adb]
375 [-]: CALL      R38 1 2      ; R38 := R38()
376 [-]: LOADKB    R39 0 0      ; R39 := false
377 [-]: SELF      R40 R30 K53  ; R41 := R30; R40 := R30[0xf37943ff]
378 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
379 [-]: CALL      R37 0 0      ; R37,... := R37(R38,...)
380 [-]: CALL      R33 0 1      ; R33(R34,...)
381 [-]: GETGLOBAL R33 K2       ; R33 := 0xae91e43b
382 [-]: SELF      R33 R33 K3   ; R34 := R33; R33 := R33[0xaade900e]
383 [-]: LOADK     R35 K49      ; R35 := "GrineerAbilityPanel."
384 [-]: MOVE      R36 R29      ; R36 := R29
385 [-]: LOADK     R37 K63      ; R37 := ".Glow"
386 [-]: CONCAT    R35 R35 R37  ; R35 := R35 .. R36 .. R37
387 [-]: CONST     R36 11       ; R36 := 11.000000
388 [-]: EQ        1 R24 R28    ; if R24 == R28 then PC := 391
389 [-]: JMP       391          ; PC := 391
390 [-]: LOADKB    R37 0 1      ; R37 := false; PC := 391
391 [-]: LOADKB    R37 1 0      ; R37 := true
392 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
393 [-]: FORLOOP   R25 304      ; R25 += R27; if R25 <= R26 then begin PC := 304; R28 := R25 end
394 [-]: GETGLOBAL R33 K18      ; R33 := _T
395 [-]: GETTABLE  R33 R33 K64  ; R33 := R33["TryShowOrbitalStrikePrompt"]
396 [-]: TEST      R33 0        ; if not R33 then PC := 412
397 [-]: JMP       412          ; PC := 412
398 [-]: GETUPVAL  R33 U4       ; R33 := U4
399 [-]: GETTABLE  R33 R33 K65  ; R33 := R33["ArrowPromptShown"]
400 [-]: TEST      R33 1        ; if R33 then PC := 410
401 [-]: JMP       410          ; PC := 410
402 [-]: GETGLOBAL R33 K2       ; R33 := 0xae91e43b
403 [-]: SELF      R33 R33 K3   ; R34 := R33; R33 := R33[0xaade900e]
404 [-]: LOADK     R35 K66      ; R35 := "OrderHintArrow"
405 [-]: CONST     R36 11       ; R36 := 11.000000
406 [-]: LOADKB    R37 1 0      ; R37 := true
407 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
408 [-]: GETUPVAL  R33 U4       ; R33 := U4
409 [-]: SETTABLE  R33 K65 K67  ; R33["ArrowPromptShown"] := true
410 [-]: GETGLOBAL R33 K18      ; R33 := _T
411 [-]: SETTABLE  R33 K64 K68  ; R33["TryShowOrbitalStrikePrompt"] := nil
412 [-]: GETUPVAL  R33 U4       ; R33 := U4
413 [-]: GETTABLE  R33 R33 K69  ; R33 := R33["HasOrbitalStrike"]
414 [-]: GETGLOBAL R34 K18      ; R34 := _T
415 [-]: GETTABLE  R34 R34 K70  ; R34 := R34["OrbitalStrikeEnabled"]
416 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 433
417 [-]: JMP       433          ; PC := 433
418 [-]: GETUPVAL  R33 U4       ; R33 := U4
419 [-]: GETGLOBAL R34 K18      ; R34 := _T
420 [-]: GETTABLE  R34 R34 K70  ; R34 := R34["OrbitalStrikeEnabled"]
421 [-]: SETTABLE  R33 K69 R34  ; R33["HasOrbitalStrike"] := R34
422 [-]: GETGLOBAL R33 K2       ; R33 := 0xae91e43b
423 [-]: SELF      R33 R33 K3   ; R34 := R33; R33 := R33[0xaade900e]
424 [-]: LOADK     R35 K71      ; R35 := "SpecialAbility"
425 [-]: CONST     R36 11       ; R36 := 11.000000
426 [-]: GETUPVAL  R37 U4       ; R37 := U4
427 [-]: GETTABLE  R37 R37 K69  ; R37 := R37["HasOrbitalStrike"]
428 [-]: EQ        1 R37 K67    ; if R37 == true then PC := 431
429 [-]: JMP       431          ; PC := 431
430 [-]: LOADKB    R37 0 1      ; R37 := false; PC := 431
431 [-]: LOADKB    R37 1 0      ; R37 := true
432 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
433 [-]: GETUPVAL  R33 U4       ; R33 := U4
434 [-]: GETTABLE  R33 R33 K72  ; R33 := R33["InOrbitalStrikeMode"]
435 [-]: GETGLOBAL R34 K18      ; R34 := _T
436 [-]: GETTABLE  R34 R34 K73  ; R34 := R34["OrbitalStrikeMode"]
437 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 455
438 [-]: JMP       455          ; PC := 455
439 [-]: GETUPVAL  R33 U4       ; R33 := U4
440 [-]: GETGLOBAL R34 K18      ; R34 := _T
441 [-]: GETTABLE  R34 R34 K73  ; R34 := R34["OrbitalStrikeMode"]
442 [-]: SETTABLE  R33 K72 R34  ; R33["InOrbitalStrikeMode"] := R34
443 [-]: GETGLOBAL R33 K2       ; R33 := 0xae91e43b
444 [-]: SELF      R33 R33 K17  ; R34 := R33; R33 := R33[0x67bc869f]
445 [-]: LOADK     R35 K71      ; R35 := "SpecialAbility"
446 [-]: CONST     R36 10       ; R36 := 10.000000
447 [-]: GETUPVAL  R37 U8       ; R37 := U8
448 [-]: GETTABLE  R37 R37 K42  ; R37 := R37[0x06d055f9]
449 [-]: GETUPVAL  R38 U4       ; R38 := U4
450 [-]: GETTABLE  R38 R38 K72  ; R38 := R38["InOrbitalStrikeMode"]
451 [-]: CONST     R39 100      ; R39 := 100.000000
452 [-]: CONST     R40 30       ; R40 := 30.000000
453 [-]: CALL      R37 4 0      ; R37,... := R37(R38,R39,R40)
454 [-]: CALL      R33 0 1      ; R33(R34,...)
455 [-]: GETUPVAL  R33 U4       ; R33 := U4
456 [-]: GETTABLE  R33 R33 K69  ; R33 := R33["HasOrbitalStrike"]
457 [-]: TEST      R33 0        ; if not R33 then PC := 518
458 [-]: JMP       518          ; PC := 518
459 [-]: GETGLOBAL R33 K18      ; R33 := _T
460 [-]: GETTABLE  R33 R33 K74  ; R33 := R33["OrbitalStrikeCooldownPct"]
461 [-]: EQ        1 R33 K68    ; if R33 == nil then PC := 464
462 [-]: JMP       464          ; PC := 464
463 [-]: LOADKB    R33 0 1      ; R33 := false; PC := 464
464 [-]: LOADKB    R33 1 0      ; R33 := true
465 [-]: GETGLOBAL R34 K18      ; R34 := _T
466 [-]: GETTABLE  R34 R34 K74  ; R34 := R34["OrbitalStrikeCooldownPct"]
467 [-]: TEST      R34 1        ; if R34 then PC := 470
468 [-]: JMP       470          ; PC := 470
469 [-]: CONST     R34 0        ; R34 := 0.000000
470 [-]: GETGLOBAL R35 K2       ; R35 := 0xae91e43b
471 [-]: SELF      R35 R35 K17  ; R36 := R35; R35 := R35[0x67bc869f]
472 [-]: LOADK     R37 K75      ; R37 := "SpecialAbility.Icon"
473 [-]: CONST     R38 10       ; R38 := 10.000000
474 [-]: GETUPVAL  R39 U8       ; R39 := U8
475 [-]: GETTABLE  R39 R39 K42  ; R39 := R39[0x06d055f9]
476 [-]: MOVE      R40 R33      ; R40 := R33
477 [-]: CONST     R41 100      ; R41 := 100.000000
478 [-]: CONST     R42 30       ; R42 := 30.000000
479 [-]: CALL      R39 4 0      ; R39,... := R39(R40,R41,R42)
480 [-]: CALL      R35 0 1      ; R35(R36,...)
481 [-]: GETGLOBAL R35 K2       ; R35 := 0xae91e43b
482 [-]: SELF      R35 R35 K17  ; R36 := R35; R35 := R35[0x67bc869f]
483 [-]: LOADK     R37 K76      ; R37 := "SpecialAbility.Glow"
484 [-]: CONST     R38 10       ; R38 := 10.000000
485 [-]: GETUPVAL  R39 U8       ; R39 := U8
486 [-]: GETTABLE  R39 R39 K42  ; R39 := R39[0x06d055f9]
487 [-]: MOVE      R40 R33      ; R40 := R33
488 [-]: CONST     R41 100      ; R41 := 100.000000
489 [-]: CONST     R42 0        ; R42 := 0.000000
490 [-]: CALL      R39 4 0      ; R39,... := R39(R40,R41,R42)
491 [-]: CALL      R35 0 1      ; R35(R36,...)
492 [-]: GETGLOBAL R35 K2       ; R35 := 0xae91e43b
493 [-]: SELF      R35 R35 K77  ; R36 := R35; R35 := R35[0x91e13703]
494 [-]: LOADK     R37 K78      ; R37 := "SpecialAbility.Cooldown"
495 [-]: LOADK     R38 K79      ; R38 := "AlphaTestThreshold"
496 [-]: GETUPVAL  R39 U8       ; R39 := U8
497 [-]: GETTABLE  R39 R39 K42  ; R39 := R39[0x06d055f9]
498 [-]: MOVE      R40 R33      ; R40 := R33
499 [-]: CONST     R41 1        ; R41 := 1.000000
500 [-]: SUB       R42 K8 R34   ; R42 := 1.000000 - R34
501 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
502 [-]: CONST     R40 0        ; R40 := 0.000000
503 [-]: CONST     R41 0        ; R41 := 0.000000
504 [-]: CONST     R42 0        ; R42 := 0.000000
505 [-]: CALL      R35 8 1      ; R35(R36,R37,R38,R39,R40,R41,R42)
506 [-]: GETUPVAL  R35 U4       ; R35 := U4
507 [-]: GETTABLE  R35 R35 K65  ; R35 := R35["ArrowPromptShown"]
508 [-]: TEST      R35 0        ; if not R35 then PC := 518
509 [-]: JMP       518          ; PC := 518
510 [-]: TEST      R33 1        ; if R33 then PC := 518
511 [-]: JMP       518          ; PC := 518
512 [-]: GETGLOBAL R35 K2       ; R35 := 0xae91e43b
513 [-]: SELF      R35 R35 K3   ; R36 := R35; R35 := R35[0xaade900e]
514 [-]: LOADK     R37 K66      ; R37 := "OrderHintArrow"
515 [-]: CONST     R38 11       ; R38 := 11.000000
516 [-]: LOADKB    R39 0 0      ; R39 := false
517 [-]: CALL      R35 5 1      ; R35(R36,R37,R38,R39)
518 [-]: GETUPVAL  R35 U4       ; R35 := U4
519 [-]: GETTABLE  R35 R35 K80  ; R35 := R35["NumAbilities"]
520 [-]: EQ        1 R23 R35    ; if R23 == R35 then PC := 549
521 [-]: JMP       549          ; PC := 549
522 [-]: GETUPVAL  R35 U4       ; R35 := U4
523 [-]: SETTABLE  R35 K80 R23  ; R35["NumAbilities"] := R23
524 [-]: GETUPVAL  R35 U9       ; R35 := U9
525 [-]: SELF      R35 R35 K81  ; R36 := R35; R35 := R35[0x4bc5dc8b]
526 [-]: LOADK     R37 K82      ; R37 := "GrineerAbilityPanel"
527 [-]: SUB       R38 R23 K8   ; R38 := R23 - 1.000000
528 [-]: MUL       R38 K83 R38  ; R38 := 68.000000 * R38
529 [-]: SUB       R38 K84 R38  ; R38 := 1145.000000 - R38
530 [-]: LOADNIL   R39 R39      ; R39 := nil
531 [-]: CALL      R35 5 1      ; R35(R36,R37,R38,R39)
532 [-]: GETUPVAL  R35 U9       ; R35 := U9
533 [-]: SELF      R35 R35 K85  ; R36 := R35; R35 := R35[0xfaa69527]
534 [-]: GETGLOBAL R37 K2       ; R37 := 0xae91e43b
535 [-]: SELF      R37 R37 K86  ; R38 := R37; R37 := R37[0x6b837788]
536 [-]: CALL      R37 2 2      ; R37 := R37(R38)
537 [-]: GETGLOBAL R38 K2       ; R38 := 0xae91e43b
538 [-]: SELF      R38 R38 K87  ; R39 := R38; R38 := R38[0xaf9fda9f]
539 [-]: CALL      R38 2 2      ; R38 := R38(R39)
540 [-]: LOADKB    R39 1 0      ; R39 := true
541 [-]: GETUPVAL  R40 U10      ; R40 := U10
542 [-]: GETTABLE  R40 R40 K88  ; R40 := R40["HudScalePadding"]
543 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
544 [-]: GETGLOBAL R35 K18      ; R35 := _T
545 [-]: GETTABLE  R35 R35 K89  ; R35 := R35[0x71907cb1]
546 [-]: GETGLOBAL R36 K2       ; R36 := 0xae91e43b
547 [-]: LOADK     R37 K82      ; R37 := "GrineerAbilityPanel"
548 [-]: CALL      R35 3 1      ; R35(R36,R37)
549 [-]: GETGLOBAL R35 K0       ; R35 := 0x7b998233
550 [-]: GETUPVAL  R36 U4       ; R36 := U4
551 [-]: GETTABLE  R36 R36 K90  ; R36 := R36["CrewPanel"]
552 [-]: CALL      R35 2 2      ; R35 := R35(R36)
553 [-]: TEST      R35 1        ; if R35 then PC := 559
554 [-]: JMP       559          ; PC := 559
555 [-]: GETUPVAL  R35 U4       ; R35 := U4
556 [-]: GETTABLE  R35 R35 K90  ; R35 := R35["CrewPanel"]
557 [-]: GETTABLE  R35 R35 K91  ; R35 := R35[0xbde98931]
558 [-]: CALL      R35 1 1      ; R35()
559 [-]: GETUPVAL  R35 U11      ; R35 := U11
560 [-]: SELF      R35 R35 K92  ; R36 := R35; R35 := R35[0x8b72b36e]
561 [-]: CALL      R35 2 2      ; R35 := R35(R36)
562 [-]: GETGLOBAL R36 K0       ; R36 := 0x7b998233
563 [-]: GETGLOBAL R37 K18      ; R37 := _T
564 [-]: GETTABLE  R37 R37 K93  ; R37 := R37["JetPackFuel"]
565 [-]: CALL      R36 2 2      ; R36 := R36(R37)
566 [-]: TEST      R36 1        ; if R36 then PC := 1182
567 [-]: JMP       1182         ; PC := 1182
568 [-]: GETGLOBAL R36 K0       ; R36 := 0x7b998233
569 [-]: GETGLOBAL R37 K18      ; R37 := _T
570 [-]: GETTABLE  R37 R37 K93  ; R37 := R37["JetPackFuel"]
571 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
572 [-]: CALL      R36 2 2      ; R36 := R36(R37)
573 [-]: TEST      R36 1        ; if R36 then PC := 1182
574 [-]: JMP       1182         ; PC := 1182
575 [-]: GETGLOBAL R36 K0       ; R36 := 0x7b998233
576 [-]: GETGLOBAL R37 K18      ; R37 := _T
577 [-]: GETTABLE  R37 R37 K94  ; R37 := R37["JetPackFuelMax"]
578 [-]: CALL      R36 2 2      ; R36 := R36(R37)
579 [-]: TEST      R36 1        ; if R36 then PC := 1182
580 [-]: JMP       1182         ; PC := 1182
581 [-]: GETGLOBAL R36 K0       ; R36 := 0x7b998233
582 [-]: GETGLOBAL R37 K18      ; R37 := _T
583 [-]: GETTABLE  R37 R37 K94  ; R37 := R37["JetPackFuelMax"]
584 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
585 [-]: CALL      R36 2 2      ; R36 := R36(R37)
586 [-]: TEST      R36 1        ; if R36 then PC := 1182
587 [-]: JMP       1182         ; PC := 1182
588 [-]: GETGLOBAL R36 K18      ; R36 := _T
589 [-]: GETTABLE  R36 R36 K93  ; R36 := R36["JetPackFuel"]
590 [-]: GETTABLE  R36 R36 R35  ; R36 := R36[R35]
591 [-]: GETGLOBAL R37 K18      ; R37 := _T
592 [-]: GETTABLE  R37 R37 K94  ; R37 := R37["JetPackFuelMax"]
593 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
594 [-]: DIV       R36 R36 R37  ; R36 := R36 / R37
595 [-]: GETUPVAL  R37 U4       ; R37 := U4
596 [-]: GETTABLE  R37 R37 K95  ; R37 := R37["FuelRatio"]
597 [-]: EQ        1 R36 R37    ; if R36 == R37 then PC := 1182
598 [-]: JMP       1182         ; PC := 1182
599 [-]: GETUPVAL  R37 U4       ; R37 := U4
600 [-]: SETTABLE  R37 K95 R36  ; R37["FuelRatio"] := R36
601 [-]: MUL       R37 K96 R36  ; R37 := 0.920000 * R36
602 [-]: ADD       R37 K97 R37  ; R37 := 0.040000 + R37
603 [-]: MUL       R38 K98 R36  ; R38 := 234.000000 * R36
604 [-]: ADD       R38 K99 R38  ; R38 := -117.000000 + R38
605 [-]: GETGLOBAL R39 K20      ; R39 := 0x5bced4c4
606 [-]: GETTABLE  R39 R39 K100 ; R39 := R39[0xe4a5b3ca]
607 [-]: MOVE      R40 R38      ; R40 := R38
608 [-]: CALL      R39 2 2      ; R39 := R39(R40)
609 [-]: LT        0 R39 K101   ; if R39 >= 42.000000 then PC := 614
610 [-]: JMP       614          ; PC := 614
611 [-]: CONST     R40 4        ; R40 := 4.000000
612 [-]: TEST      R40 1        ; if R40 then PC := 628
613 [-]: JMP       628          ; PC := 628
614 [-]: LT        0 R39 K102   ; if R39 >= 50.000000 then PC := 620
615 [-]: JMP       620          ; PC := 620
616 [-]: SUB       R40 K102 R39 ; R40 := 50.000000 - R39
617 [-]: DIV       R40 R40 K58  ; R40 := R40 / 2.000000
618 [-]: TEST      R40 1        ; if R40 then PC := 628
619 [-]: JMP       628          ; PC := 628
620 [-]: LT        0 R39 K103   ; if R39 >= 102.000000 then PC := 625
621 [-]: JMP       625          ; PC := 625
622 [-]: CONST     R40 0        ; R40 := 0.000000
623 [-]: TEST      R40 1        ; if R40 then PC := 628
624 [-]: JMP       628          ; PC := 628
625 [-]: SUB       R40 K104 R39 ; R40 := 117.000000 - R39
626 [-]: DIV       R40 R40 K58  ; R40 := R40 / 2.000000
627 [-]: SUB       R40 R40 K105 ; R40 := R40 - 8.000000
628 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
629 [-]: SELF      R41 R41 K77  ; R42 := R41; R41 := R41[0x91e13703]
630 [-]: LOADK     R43 K106     ; R43 := "FuelComponent.Fill"
631 [-]: LOADK     R44 K107     ; R44 := "VisibilitySize"
632 [-]: MOVE      R45 R37      ; R45 := R37
633 [-]: CONST     R46 0        ; R46 := 0.000000
634 [-]: CONST     R47 0        ; R47 := 0.000000
635 [-]: CONST     R48 0        ; R48 := 0.000000
636 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
637 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
638 [-]: SELF      R41 R41 K17  ; R42 := R41; R41 := R41[0x67bc869f]
639 [-]: LOADK     R43 K108     ; R43 := "FuelComponent.Flare"
640 [-]: CONST     R44 0        ; R44 := 0.000000
641 [-]: MOVE      R45 R38      ; R45 := R38
642 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
643 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
644 [-]: SELF      R41 R41 K17  ; R42 := R41; R41 := R41[0x67bc869f]
645 [-]: LOADK     R43 K108     ; R43 := "FuelComponent.Flare"
646 [-]: CONST     R44 1        ; R44 := 1.000000
647 [-]: MOVE      R45 R40      ; R45 := R40
648 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
649 [-]: GETGLOBAL R41 K2       ; R41 := 0xae91e43b
650 [-]: SELF      R41 R41 K17  ; R42 := R41; R41 := R41[0x67bc869f]
651 [-]: LOADK     R43 K108     ; R43 := "FuelComponent.Flare"
652 [-]: CONST     R44 10       ; R44 := 10.000000
653 [-]: GETUPVAL  R45 U8       ; R45 := U8
654 [-]: GETTABLE  R45 R45 K42  ; R45 := R45[0x06d055f9]
655 [-]: LT        1 R39 K109   ; if R39 < 110.000000 then PC := 658
656 [-]: JMP       658          ; PC := 658
657 [-]: LOADKB    R46 0 1      ; R46 := false; PC := 658
658 [-]: LOADKB    R46 1 0      ; R46 := true
659 [-]: CONST     R47 1        ; R47 := 1.000000
660 [-]: SUB       R48 R39 K109 ; R48 := R39 - 110.000000
661 [-]: DIV       R48 R48 K110 ; R48 := R48 / 7.000000
662 [-]: SUB       R48 K8 R48   ; R48 := 1.000000 - R48
663 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
664 [-]: MUL       R45 K111 R45 ; R45 := 100.000000 * R45
665 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
666 [-]: EQ        0 R36 K8     ; if R36 ~= 1.000000 then PC := 682
667 [-]: JMP       682          ; PC := 682
668 [-]: GETGLOBAL R41 K112     ; R41 := 0x25312c9b
669 [-]: GETGLOBAL R42 K2       ; R42 := 0xae91e43b
670 [-]: LOADK     R43 K113     ; R43 := "FuelComponent"
671 [-]: CONST     R44 2        ; R44 := 2.000000
672 [-]: NEWTABLE  R45 1 0      ; R45 := {}
673 [-]: CONST     R46 10       ; R46 := 10.000000
674 [-]: SETLIST   R45 1 1      ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 1
675 [-]: NEWTABLE  R46 1 0      ; R46 := {}
676 [-]: CONST     R47 0        ; R47 := 0.000000
677 [-]: SETLIST   R46 1 1      ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 1
678 [-]: CONST     R47 0        ; R47 := 0.250000
679 [-]: LOADK     R48 K115     ; R48 := 0.400000
680 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
681 [-]: JMP       1182         ; PC := 1182
682 [-]: GETGLOBAL R41 K112     ; R41 := 0x25312c9b
683 [-]: GETGLOBAL R42 K2       ; R42 := 0xae91e43b
684 [-]: LOADK     R43 K113     ; R43 := "FuelComponent"
685 [-]: CONST     R44 2        ; R44 := 2.000000
686 [-]: NEWTABLE  R45 1 0      ; R45 := {}
687 [-]: CONST     R46 10       ; R46 := 10.000000
688 [-]: SETLIST   R45 1 1      ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 1
689 [-]: NEWTABLE  R46 1 0      ; R46 := {}
690 [-]: CONST     R47 100      ; R47 := 100.000000
691 [-]: SETLIST   R46 1 1      ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 1
692 [-]: CONST     R47 0        ; R47 := 0.250000
693 [-]: CONST     R48 0        ; R48 := 0.000000
694 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
695 [-]: JMP       1182         ; PC := 1182
696 [-]: GETGLOBAL R41 K6       ; R41 := 0xe72d2edb
697 [-]: EQ        0 R41 K12    ; if R41 ~= 3.000000 then PC := 882
698 [-]: JMP       882          ; PC := 882
699 [-]: GETUPVAL  R41 U0       ; R41 := U0
700 [-]: SELF      R41 R41 K116 ; R42 := R41; R41 := R41[0x1ac1655c]
701 [-]: CALL      R41 2 2      ; R41 := R41(R42)
702 [-]: GETGLOBAL R42 K18      ; R42 := _T
703 [-]: GETTABLE  R42 R42 K19  ; R42 := R42["CustomHudHealth"]
704 [-]: TEST      R42 1        ; if R42 then PC := 708
705 [-]: JMP       708          ; PC := 708
706 [-]: SELF      R42 R41 K117 ; R43 := R41; R42 := R41[0xd127117d]
707 [-]: CALL      R42 2 2      ; R42 := R42(R43)
708 [-]: GETUPVAL  R43 U4       ; R43 := U4
709 [-]: GETTABLE  R43 R43 K23  ; R43 := R43["Health"]
710 [-]: EQ        1 R7 R43     ; if R7 == R43 then PC := 753
711 [-]: JMP       753          ; PC := 753
712 [-]: GETUPVAL  R43 U4       ; R43 := U4
713 [-]: SETTABLE  R43 K23 R7   ; R43["Health"] := R7
714 [-]: GETUPVAL  R43 U5       ; R43 := U5
715 [-]: LOADK     R44 K23      ; R44 := "Health"
716 [-]: LOADK     R45 K24      ; R45 := "HealthAndShield.PlayerHealth"
717 [-]: MOVE      R46 R7       ; R46 := R7
718 [-]: GETGLOBAL R47 K18      ; R47 := _T
719 [-]: GETTABLE  R47 R47 K25  ; R47 := R47["CustomHudHealthOffset"]
720 [-]: TEST      R47 1        ; if R47 then PC := 723
721 [-]: JMP       723          ; PC := 723
722 [-]: CONST     R47 0        ; R47 := 0.000000
723 [-]: CONST     R48 72       ; R48 := 72.000000
724 [-]: CALL      R43 6 3      ; R43,R44 := R43(R44,R45,R46,R47,R48)
725 [-]: GETGLOBAL R45 K2       ; R45 := 0xae91e43b
726 [-]: SELF      R45 R45 K17  ; R46 := R45; R45 := R45[0x67bc869f]
727 [-]: LOADK     R47 K118     ; R47 := "HealthAndShield.HealthLeafDeco"
728 [-]: CONST     R48 0        ; R48 := 0.000000
729 [-]: ADD       R49 K119 R44 ; R49 := -54.000000 + R44
730 [-]: CALL      R45 5 1      ; R45(R46,R47,R48,R49)
731 [-]: GETUPVAL  R45 U0       ; R45 := U0
732 [-]: SELF      R45 R45 K26  ; R46 := R45; R45 := R45[0x52cd594a]
733 [-]: CALL      R45 2 2      ; R45 := R45(R46)
734 [-]: MUL       R46 R45 K27  ; R46 := R45 * 59.000000
735 [-]: SUB       R46 K28 R46  ; R46 := 60.000000 - R46
736 [-]: GETGLOBAL R47 K29      ; R47 := 0x38f10e85
737 [-]: GETGLOBAL R48 K2       ; R48 := 0xae91e43b
738 [-]: LOADK     R49 K30      ; R49 := "HealthAndShield.Player.gotoAndStop"
739 [-]: MOVE      R50 R46      ; R50 := R46
740 [-]: CALL      R47 4 1      ; R47(R48,R49,R50)
741 [-]: GETGLOBAL R47 K2       ; R47 := 0xae91e43b
742 [-]: SELF      R47 R47 K17  ; R48 := R47; R47 := R47[0x67bc869f]
743 [-]: LOADK     R49 K31      ; R49 := "HealthAndShield.Player.Health"
744 [-]: CONST     R50 9        ; R50 := 9.000000
745 [-]: LOADK     R51 K120     ; R51 := 9150127.000000
746 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
747 [-]: GETGLOBAL R47 K2       ; R47 := 0xae91e43b
748 [-]: SELF      R47 R47 K17  ; R48 := R47; R47 := R47[0x67bc869f]
749 [-]: LOADK     R49 K32      ; R49 := "HealthAndShield.Player.Bg"
750 [-]: CONST     R50 9        ; R50 := 9.000000
751 [-]: LOADK     R51 K121     ; R51 := 6970169.000000
752 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
753 [-]: GETUPVAL  R47 U4       ; R47 := U4
754 [-]: GETTABLE  R47 R47 K122 ; R47 := R47["Shield"]
755 [-]: EQ        1 R42 R47    ; if R42 == R47 then PC := 791
756 [-]: JMP       791          ; PC := 791
757 [-]: GETUPVAL  R47 U4       ; R47 := U4
758 [-]: SETTABLE  R47 K122 R42 ; R47["Shield"] := R42
759 [-]: GETUPVAL  R47 U5       ; R47 := U5
760 [-]: LOADK     R48 K122     ; R48 := "Shield"
761 [-]: LOADK     R49 K123     ; R49 := "HealthAndShield.PlayerShield"
762 [-]: MOVE      R50 R42      ; R50 := R42
763 [-]: GETGLOBAL R51 K18      ; R51 := _T
764 [-]: GETTABLE  R51 R51 K25  ; R51 := R51["CustomHudHealthOffset"]
765 [-]: TEST      R51 1        ; if R51 then PC := 768
766 [-]: JMP       768          ; PC := 768
767 [-]: CONST     R51 0        ; R51 := 0.000000
768 [-]: CONST     R52 72       ; R52 := 72.000000
769 [-]: CALL      R47 6 1      ; R47(R48,R49,R50,R51,R52)
770 [-]: SELF      R47 R41 K124 ; R48 := R41; R47 := R41[0xd29b845d]
771 [-]: CALL      R47 2 2      ; R47 := R47(R48)
772 [-]: MUL       R48 R47 K27  ; R48 := R47 * 59.000000
773 [-]: SUB       R48 K28 R48  ; R48 := 60.000000 - R48
774 [-]: GETGLOBAL R49 K29      ; R49 := 0x38f10e85
775 [-]: GETGLOBAL R50 K2       ; R50 := 0xae91e43b
776 [-]: LOADK     R51 K125     ; R51 := "HealthAndShield.PlayerShieldBar.gotoAndStop"
777 [-]: MOVE      R52 R48      ; R52 := R48
778 [-]: CALL      R49 4 1      ; R49(R50,R51,R52)
779 [-]: GETGLOBAL R49 K2       ; R49 := 0xae91e43b
780 [-]: SELF      R49 R49 K17  ; R50 := R49; R49 := R49[0x67bc869f]
781 [-]: LOADK     R51 K126     ; R51 := "HealthAndShield.PlayerShieldBar.Health"
782 [-]: CONST     R52 9        ; R52 := 9.000000
783 [-]: LOADK     R53 K127     ; R53 := 14337426.000000
784 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
785 [-]: GETGLOBAL R49 K2       ; R49 := 0xae91e43b
786 [-]: SELF      R49 R49 K17  ; R50 := R49; R49 := R49[0x67bc869f]
787 [-]: LOADK     R51 K128     ; R51 := "HealthAndShield.PlayerShieldBar.Bg"
788 [-]: CONST     R52 9        ; R52 := 9.000000
789 [-]: LOADK     R53 K121     ; R53 := 6970169.000000
790 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
791 [-]: GETGLOBAL R49 K2       ; R49 := 0xae91e43b
792 [-]: SELF      R49 R49 K17  ; R50 := R49; R49 := R49[0x67bc869f]
793 [-]: LOADK     R51 K129     ; R51 := "Reticle.ReticuleLines"
794 [-]: CONST     R52 9        ; R52 := 9.000000
795 [-]: LOADK     R53 K130     ; R53 := 16769169.000000
796 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
797 [-]: GETGLOBAL R49 K2       ; R49 := 0xae91e43b
798 [-]: SELF      R49 R49 K17  ; R50 := R49; R49 := R49[0x67bc869f]
799 [-]: LOADK     R51 K131     ; R51 := "Reticle.ReticleLeft"
800 [-]: CONST     R52 9        ; R52 := 9.000000
801 [-]: LOADK     R53 K130     ; R53 := 16769169.000000
802 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
803 [-]: GETGLOBAL R49 K2       ; R49 := 0xae91e43b
804 [-]: SELF      R49 R49 K17  ; R50 := R49; R49 := R49[0x67bc869f]
805 [-]: LOADK     R51 K132     ; R51 := "Reticle.ReticleRight"
806 [-]: CONST     R52 9        ; R52 := 9.000000
807 [-]: LOADK     R53 K130     ; R53 := 16769169.000000
808 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
809 [-]: GETGLOBAL R49 K2       ; R49 := 0xae91e43b
810 [-]: SELF      R49 R49 K17  ; R50 := R49; R49 := R49[0x67bc869f]
811 [-]: LOADK     R51 K133     ; R51 := "Reticle.Dot"
812 [-]: CONST     R52 9        ; R52 := 9.000000
813 [-]: LOADK     R53 K130     ; R53 := 16769169.000000
814 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
815 [-]: GETGLOBAL R49 K2       ; R49 := 0xae91e43b
816 [-]: SELF      R49 R49 K17  ; R50 := R49; R49 := R49[0x67bc869f]
817 [-]: LOADK     R51 K134     ; R51 := "Reticle.Arm1.InsideDiamond"
818 [-]: CONST     R52 9        ; R52 := 9.000000
819 [-]: LOADK     R53 K135     ; R53 := 8363959.000000
820 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
821 [-]: GETGLOBAL R49 K0       ; R49 := 0x7b998233
822 [-]: GETUPVAL  R50 U7       ; R50 := U7
823 [-]: GETTABLE  R50 R50 K34  ; R50 := R50["ActivePowerSuit"]
824 [-]: CALL      R49 2 2      ; R49 := R49(R50)
825 [-]: TEST      R49 1        ; if R49 then PC := 1182
826 [-]: JMP       1182         ; PC := 1182
827 [-]: GETUPVAL  R49 U4       ; R49 := U4
828 [-]: GETTABLE  R49 R49 K45  ; R49 := R49["CustomAbilities"]
829 [-]: EQ        0 R49 K68    ; if R49 ~= nil then PC := 837
830 [-]: JMP       837          ; PC := 837
831 [-]: GETUPVAL  R49 U4       ; R49 := U4
832 [-]: GETUPVAL  R50 U7       ; R50 := U7
833 [-]: GETTABLE  R50 R50 K34  ; R50 := R50["ActivePowerSuit"]
834 [-]: SELF      R50 R50 K46  ; R51 := R50; R50 := R50[0x3c88e434]
835 [-]: CALL      R50 2 2      ; R50 := R50(R51)
836 [-]: SETTABLE  R49 K45 R50  ; R49["CustomAbilities"] := R50
837 [-]: GETGLOBAL R49 K20      ; R49 := 0x5bced4c4
838 [-]: GETTABLE  R49 R49 K36  ; R49 := R49[0xac1b386a]
839 [-]: GETUPVAL  R50 U4       ; R50 := U4
840 [-]: GETTABLE  R50 R50 K45  ; R50 := R50["CustomAbilities"]
841 [-]: LEN       R50 R50      ; R50 := # R50
842 [-]: CONST     R51 3        ; R51 := 3.000000
843 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
844 [-]: CONST     R50 1        ; R50 := 1.000000
845 [-]: MOVE      R51 R49      ; R51 := R49
846 [-]: CONST     R52 1        ; R52 := 1.000000
847 [-]: FORPREP   R50 880      ; R50 -= R52; PC := 880
848 [-]: GETUPVAL  R54 U4       ; R54 := U4
849 [-]: GETTABLE  R54 R54 K45  ; R54 := R54["CustomAbilities"]
850 [-]: GETTABLE  R54 R54 R53  ; R54 := R54[R53]
851 [-]: SELF      R54 R54 K136 ; R55 := R54; R54 := R54[0xd8140b94]
852 [-]: CALL      R54 2 2      ; R54 := R54(R55)
853 [-]: GETGLOBAL R55 K2       ; R55 := 0xae91e43b
854 [-]: SELF      R55 R55 K39  ; R56 := R55; R55 := R55[0xf64b7262]
855 [-]: LOADK     R57 K13      ; R57 := "StancePanel.StanceComponent.Stance"
856 [-]: MOVE      R58 R53      ; R58 := R53
857 [-]: CONCAT    R57 R57 R58  ; R57 := R57 .. R58
858 [-]: LOADK     R58 K137     ; R58 := "Icon"
859 [-]: CONST     R59 9        ; R59 := 9.000000
860 [-]: GETUPVAL  R60 U8       ; R60 := U8
861 [-]: GETTABLE  R60 R60 K42  ; R60 := R60[0x06d055f9]
862 [-]: MOVE      R61 R54      ; R61 := R54
863 [-]: GETUPVAL  R62 U4       ; R62 := U4
864 [-]: GETTABLE  R62 R62 K138 ; R62 := R62["TeshinStanceActiveColors"]
865 [-]: GETTABLE  R62 R62 R53  ; R62 := R62[R53]
866 [-]: GETUPVAL  R63 U4       ; R63 := U4
867 [-]: GETTABLE  R63 R63 K139 ; R63 := R63["TeshinStanceInactiveColors"]
868 [-]: GETTABLE  R63 R63 R53  ; R63 := R63[R53]
869 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
870 [-]: CALL      R55 0 1      ; R55(R56,...)
871 [-]: GETGLOBAL R55 K2       ; R55 := 0xae91e43b
872 [-]: SELF      R55 R55 K140 ; R56 := R55; R55 := R55[0xc0a3774b]
873 [-]: LOADK     R57 K13      ; R57 := "StancePanel.StanceComponent.Stance"
874 [-]: MOVE      R58 R53      ; R58 := R53
875 [-]: CONCAT    R57 R57 R58  ; R57 := R57 .. R58
876 [-]: LOADK     R58 K141     ; R58 := "IconGlow"
877 [-]: CONST     R59 11       ; R59 := 11.000000
878 [-]: MOVE      R60 R54      ; R60 := R54
879 [-]: CALL      R55 6 1      ; R55(R56,R57,R58,R59,R60)
880 [-]: FORLOOP   R50 848      ; R50 += R52; if R50 <= R51 then begin PC := 848; R53 := R50 end
881 [-]: JMP       1182         ; PC := 1182
882 [-]: GETGLOBAL R55 K6       ; R55 := 0xe72d2edb
883 [-]: EQ        0 R55 K58    ; if R55 ~= 2.000000 then PC := 1042
884 [-]: JMP       1042         ; PC := 1042
885 [-]: GETUPVAL  R55 U0       ; R55 := U0
886 [-]: SELF      R55 R55 K116 ; R56 := R55; R55 := R55[0x1ac1655c]
887 [-]: CALL      R55 2 2      ; R55 := R55(R56)
888 [-]: GETGLOBAL R56 K18      ; R56 := _T
889 [-]: GETTABLE  R56 R56 K19  ; R56 := R56["CustomHudHealth"]
890 [-]: TEST      R56 1        ; if R56 then PC := 894
891 [-]: JMP       894          ; PC := 894
892 [-]: SELF      R56 R55 K117 ; R57 := R55; R56 := R55[0xd127117d]
893 [-]: CALL      R56 2 2      ; R56 := R56(R57)
894 [-]: GETUPVAL  R57 U4       ; R57 := U4
895 [-]: GETTABLE  R57 R57 K23  ; R57 := R57["Health"]
896 [-]: EQ        1 R7 R57     ; if R7 == R57 then PC := 933
897 [-]: JMP       933          ; PC := 933
898 [-]: GETUPVAL  R57 U4       ; R57 := U4
899 [-]: SETTABLE  R57 K23 R7   ; R57["Health"] := R7
900 [-]: GETUPVAL  R57 U5       ; R57 := U5
901 [-]: LOADK     R58 K23      ; R58 := "Health"
902 [-]: LOADK     R59 K24      ; R59 := "HealthAndShield.PlayerHealth"
903 [-]: MOVE      R60 R7       ; R60 := R7
904 [-]: GETGLOBAL R61 K18      ; R61 := _T
905 [-]: GETTABLE  R61 R61 K25  ; R61 := R61["CustomHudHealthOffset"]
906 [-]: TEST      R61 1        ; if R61 then PC := 909
907 [-]: JMP       909          ; PC := 909
908 [-]: CONST     R61 0        ; R61 := 0.000000
909 [-]: CONST     R62 58       ; R62 := 58.000000
910 [-]: CALL      R57 6 1      ; R57(R58,R59,R60,R61,R62)
911 [-]: GETUPVAL  R57 U0       ; R57 := U0
912 [-]: SELF      R57 R57 K26  ; R58 := R57; R57 := R57[0x52cd594a]
913 [-]: CALL      R57 2 2      ; R57 := R57(R58)
914 [-]: MUL       R58 R57 K27  ; R58 := R57 * 59.000000
915 [-]: SUB       R58 K28 R58  ; R58 := 60.000000 - R58
916 [-]: GETGLOBAL R59 K29      ; R59 := 0x38f10e85
917 [-]: GETGLOBAL R60 K2       ; R60 := 0xae91e43b
918 [-]: LOADK     R61 K30      ; R61 := "HealthAndShield.Player.gotoAndStop"
919 [-]: MOVE      R62 R58      ; R62 := R58
920 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
921 [-]: GETGLOBAL R59 K2       ; R59 := 0xae91e43b
922 [-]: SELF      R59 R59 K17  ; R60 := R59; R59 := R59[0x67bc869f]
923 [-]: LOADK     R61 K31      ; R61 := "HealthAndShield.Player.Health"
924 [-]: CONST     R62 9        ; R62 := 9.000000
925 [-]: LOADK     R63 K142     ; R63 := 12284689.000000
926 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
927 [-]: GETGLOBAL R59 K2       ; R59 := 0xae91e43b
928 [-]: SELF      R59 R59 K17  ; R60 := R59; R59 := R59[0x67bc869f]
929 [-]: LOADK     R61 K32      ; R61 := "HealthAndShield.Player.Bg"
930 [-]: CONST     R62 9        ; R62 := 9.000000
931 [-]: LOADK     R63 K143     ; R63 := 2779007.000000
932 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
933 [-]: GETUPVAL  R59 U4       ; R59 := U4
934 [-]: GETTABLE  R59 R59 K122 ; R59 := R59["Shield"]
935 [-]: EQ        1 R56 R59    ; if R56 == R59 then PC := 971
936 [-]: JMP       971          ; PC := 971
937 [-]: GETUPVAL  R59 U4       ; R59 := U4
938 [-]: SETTABLE  R59 K122 R56 ; R59["Shield"] := R56
939 [-]: GETUPVAL  R59 U5       ; R59 := U5
940 [-]: LOADK     R60 K122     ; R60 := "Shield"
941 [-]: LOADK     R61 K123     ; R61 := "HealthAndShield.PlayerShield"
942 [-]: MOVE      R62 R56      ; R62 := R56
943 [-]: GETGLOBAL R63 K18      ; R63 := _T
944 [-]: GETTABLE  R63 R63 K25  ; R63 := R63["CustomHudHealthOffset"]
945 [-]: TEST      R63 1        ; if R63 then PC := 948
946 [-]: JMP       948          ; PC := 948
947 [-]: CONST     R63 0        ; R63 := 0.000000
948 [-]: CONST     R64 66       ; R64 := 66.000000
949 [-]: CALL      R59 6 1      ; R59(R60,R61,R62,R63,R64)
950 [-]: SELF      R59 R55 K124 ; R60 := R55; R59 := R55[0xd29b845d]
951 [-]: CALL      R59 2 2      ; R59 := R59(R60)
952 [-]: MUL       R60 R59 K27  ; R60 := R59 * 59.000000
953 [-]: SUB       R60 K28 R60  ; R60 := 60.000000 - R60
954 [-]: GETGLOBAL R61 K29      ; R61 := 0x38f10e85
955 [-]: GETGLOBAL R62 K2       ; R62 := 0xae91e43b
956 [-]: LOADK     R63 K125     ; R63 := "HealthAndShield.PlayerShieldBar.gotoAndStop"
957 [-]: MOVE      R64 R60      ; R64 := R60
958 [-]: CALL      R61 4 1      ; R61(R62,R63,R64)
959 [-]: GETGLOBAL R61 K2       ; R61 := 0xae91e43b
960 [-]: SELF      R61 R61 K17  ; R62 := R61; R61 := R61[0x67bc869f]
961 [-]: LOADK     R63 K126     ; R63 := "HealthAndShield.PlayerShieldBar.Health"
962 [-]: CONST     R64 9        ; R64 := 9.000000
963 [-]: LOADK     R65 K144     ; R65 := 65535.000000
964 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
965 [-]: GETGLOBAL R61 K2       ; R61 := 0xae91e43b
966 [-]: SELF      R61 R61 K17  ; R62 := R61; R61 := R61[0x67bc869f]
967 [-]: LOADK     R63 K128     ; R63 := "HealthAndShield.PlayerShieldBar.Bg"
968 [-]: CONST     R64 9        ; R64 := 9.000000
969 [-]: LOADK     R65 K143     ; R65 := 2779007.000000
970 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
971 [-]: GETGLOBAL R61 K0       ; R61 := 0x7b998233
972 [-]: GETUPVAL  R62 U7       ; R62 := U7
973 [-]: GETTABLE  R62 R62 K34  ; R62 := R62["ActivePowerSuit"]
974 [-]: CALL      R61 2 2      ; R61 := R61(R62)
975 [-]: TEST      R61 1        ; if R61 then PC := 1182
976 [-]: JMP       1182         ; PC := 1182
977 [-]: GETUPVAL  R61 U4       ; R61 := U4
978 [-]: GETTABLE  R61 R61 K45  ; R61 := R61["CustomAbilities"]
979 [-]: EQ        0 R61 K68    ; if R61 ~= nil then PC := 987
980 [-]: JMP       987          ; PC := 987
981 [-]: GETUPVAL  R61 U4       ; R61 := U4
982 [-]: GETUPVAL  R62 U7       ; R62 := U7
983 [-]: GETTABLE  R62 R62 K34  ; R62 := R62["ActivePowerSuit"]
984 [-]: SELF      R62 R62 K46  ; R63 := R62; R62 := R62[0x3c88e434]
985 [-]: CALL      R62 2 2      ; R62 := R62(R63)
986 [-]: SETTABLE  R61 K45 R62  ; R61["CustomAbilities"] := R62
987 [-]: GETGLOBAL R61 K20      ; R61 := 0x5bced4c4
988 [-]: GETTABLE  R61 R61 K36  ; R61 := R61[0xac1b386a]
989 [-]: GETUPVAL  R62 U4       ; R62 := U4
990 [-]: GETTABLE  R62 R62 K45  ; R62 := R62["CustomAbilities"]
991 [-]: LEN       R62 R62      ; R62 := # R62
992 [-]: CONST     R63 3        ; R63 := 3.000000
993 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
994 [-]: CONST     R62 1        ; R62 := 1.000000
995 [-]: MOVE      R63 R61      ; R63 := R61
996 [-]: CONST     R64 1        ; R64 := 1.000000
997 [-]: FORPREP   R62 1040     ; R62 -= R64; PC := 1040
998 [-]: GETGLOBAL R66 K18      ; R66 := _T
999 [-]: GETTABLE  R66 R66 K145 ; R66 := R66["VesoMoas"]
1000 [-]: EQ        1 R66 K68    ; if R66 == nil then PC := 1015
1001 [-]: JMP       1015         ; PC := 1015
1002 [-]: GETGLOBAL R66 K18      ; R66 := _T
1003 [-]: GETTABLE  R66 R66 K145 ; R66 := R66["VesoMoas"]
1004 [-]: GETTABLE  R66 R66 R65  ; R66 := R66[R65]
1005 [-]: EQ        1 R66 K68    ; if R66 == nil then PC := 1015
1006 [-]: JMP       1015         ; PC := 1015
1007 [-]: GETGLOBAL R66 K0       ; R66 := 0x7b998233
1008 [-]: GETGLOBAL R67 K18      ; R67 := _T
1009 [-]: GETTABLE  R67 R67 K145 ; R67 := R67["VesoMoas"]
1010 [-]: GETTABLE  R67 R67 R65  ; R67 := R67[R65]
1011 [-]: GETTABLE  R67 R67 K146 ; R67 := R67["avatar"]
1012 [-]: CALL      R66 2 2      ; R66 := R66(R67)
1013 [-]: NOT       R66 R66      ; R66 :=  R66
1014 [-]: JMP       1017         ; PC := 1017
1015 [-]: LOADKB    R66 0 1      ; R66 := false; PC := 1016
1016 [-]: LOADKB    R66 1 0      ; R66 := true
1017 [-]: GETGLOBAL R67 K2       ; R67 := 0xae91e43b
1018 [-]: SELF      R67 R67 K39  ; R68 := R67; R67 := R67[0xf64b7262]
1019 [-]: LOADK     R69 K11      ; R69 := "MoaComponent.SummonMoa"
1020 [-]: MOVE      R70 R65      ; R70 := R65
1021 [-]: CONCAT    R69 R69 R70  ; R69 := R69 .. R70
1022 [-]: LOADK     R70 K137     ; R70 := "Icon"
1023 [-]: CONST     R71 10       ; R71 := 10.000000
1024 [-]: GETUPVAL  R72 U8       ; R72 := U8
1025 [-]: GETTABLE  R72 R72 K42  ; R72 := R72[0x06d055f9]
1026 [-]: MOVE      R73 R66      ; R73 := R66
1027 [-]: CONST     R74 100      ; R74 := 100.000000
1028 [-]: CONST     R75 50       ; R75 := 50.000000
1029 [-]: CALL      R72 4 0      ; R72,... := R72(R73,R74,R75)
1030 [-]: CALL      R67 0 1      ; R67(R68,...)
1031 [-]: GETGLOBAL R67 K2       ; R67 := 0xae91e43b
1032 [-]: SELF      R67 R67 K140 ; R68 := R67; R67 := R67[0xc0a3774b]
1033 [-]: LOADK     R69 K11      ; R69 := "MoaComponent.SummonMoa"
1034 [-]: MOVE      R70 R65      ; R70 := R65
1035 [-]: CONCAT    R69 R69 R70  ; R69 := R69 .. R70
1036 [-]: LOADK     R70 K141     ; R70 := "IconGlow"
1037 [-]: CONST     R71 11       ; R71 := 11.000000
1038 [-]: MOVE      R72 R66      ; R72 := R66
1039 [-]: CALL      R67 6 1      ; R67(R68,R69,R70,R71,R72)
1040 [-]: FORLOOP   R62 998      ; R62 += R64; if R62 <= R63 then begin PC := 998; R65 := R62 end
1041 [-]: JMP       1182         ; PC := 1182
1042 [-]: GETGLOBAL R67 K6       ; R67 := 0xe72d2edb
1043 [-]: EQ        0 R67 K147   ; if R67 ~= 4.000000 then PC := 1182
1044 [-]: JMP       1182         ; PC := 1182
1045 [-]: GETUPVAL  R67 U0       ; R67 := U0
1046 [-]: SELF      R67 R67 K116 ; R68 := R67; R67 := R67[0x1ac1655c]
1047 [-]: CALL      R67 2 2      ; R67 := R67(R68)
1048 [-]: GETGLOBAL R68 K18      ; R68 := _T
1049 [-]: GETTABLE  R68 R68 K19  ; R68 := R68["CustomHudHealth"]
1050 [-]: TEST      R68 1        ; if R68 then PC := 1054
1051 [-]: JMP       1054         ; PC := 1054
1052 [-]: SELF      R68 R67 K117 ; R69 := R67; R68 := R67[0xd127117d]
1053 [-]: CALL      R68 2 2      ; R68 := R68(R69)
1054 [-]: EQ        0 R68 K56    ; if R68 ~= 0.000000 then PC := 1061
1055 [-]: JMP       1061         ; PC := 1061
1056 [-]: SELF      R69 R67 K148 ; R70 := R67; R69 := R67[0x2ebc4897]
1057 [-]: CALL      R69 2 2      ; R69 := R69(R70)
1058 [-]: LT        1 K56 R69    ; if 0.000000 < R69 then PC := 1061
1059 [-]: JMP       1061         ; PC := 1061
1060 [-]: LOADKB    R69 0 1      ; R69 := false; PC := 1061
1061 [-]: LOADKB    R69 1 0      ; R69 := true
1062 [-]: GETUPVAL  R70 U4       ; R70 := U4
1063 [-]: GETTABLE  R70 R70 K122 ; R70 := R70["Shield"]
1064 [-]: EQ        1 R68 R70    ; if R68 == R70 then PC := 1085
1065 [-]: JMP       1085         ; PC := 1085
1066 [-]: GETUPVAL  R70 U4       ; R70 := U4
1067 [-]: SETTABLE  R70 K122 R68 ; R70["Shield"] := R68
1068 [-]: GETUPVAL  R70 U5       ; R70 := U5
1069 [-]: LOADK     R71 K122     ; R71 := "Shield"
1070 [-]: LOADK     R72 K123     ; R72 := "HealthAndShield.PlayerShield"
1071 [-]: MOVE      R73 R68      ; R73 := R68
1072 [-]: GETGLOBAL R74 K18      ; R74 := _T
1073 [-]: GETTABLE  R74 R74 K25  ; R74 := R74["CustomHudHealthOffset"]
1074 [-]: TEST      R74 1        ; if R74 then PC := 1077
1075 [-]: JMP       1077         ; PC := 1077
1076 [-]: CONST     R74 0        ; R74 := 0.000000
1077 [-]: CONST     R75 72       ; R75 := 72.000000
1078 [-]: CALL      R70 6 1      ; R70(R71,R72,R73,R74,R75)
1079 [-]: GETGLOBAL R70 K2       ; R70 := 0xae91e43b
1080 [-]: SELF      R70 R70 K3   ; R71 := R70; R70 := R70[0xaade900e]
1081 [-]: LOADK     R72 K123     ; R72 := "HealthAndShield.PlayerShield"
1082 [-]: CONST     R73 11       ; R73 := 11.000000
1083 [-]: MOVE      R74 R69      ; R74 := R69
1084 [-]: CALL      R70 5 1      ; R70(R71,R72,R73,R74)
1085 [-]: GETUPVAL  R70 U4       ; R70 := U4
1086 [-]: GETTABLE  R70 R70 K23  ; R70 := R70["Health"]
1087 [-]: EQ        1 R7 R70     ; if R7 == R70 then PC := 1119
1088 [-]: JMP       1119         ; PC := 1119
1089 [-]: GETUPVAL  R70 U4       ; R70 := U4
1090 [-]: SETTABLE  R70 K23 R7   ; R70["Health"] := R7
1091 [-]: GETUPVAL  R70 U8       ; R70 := U8
1092 [-]: GETTABLE  R70 R70 K42  ; R70 := R70[0x06d055f9]
1093 [-]: MOVE      R71 R69      ; R71 := R69
1094 [-]: CONST     R72 72       ; R72 := 72.000000
1095 [-]: CONST     R73 144      ; R73 := 144.000000
1096 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
1097 [-]: GETUPVAL  R71 U5       ; R71 := U5
1098 [-]: LOADK     R72 K23      ; R72 := "Health"
1099 [-]: LOADK     R73 K24      ; R73 := "HealthAndShield.PlayerHealth"
1100 [-]: MOVE      R74 R7       ; R74 := R7
1101 [-]: GETGLOBAL R75 K18      ; R75 := _T
1102 [-]: GETTABLE  R75 R75 K25  ; R75 := R75["CustomHudHealthOffset"]
1103 [-]: TEST      R75 1        ; if R75 then PC := 1106
1104 [-]: JMP       1106         ; PC := 1106
1105 [-]: CONST     R75 0        ; R75 := 0.000000
1106 [-]: MOVE      R76 R70      ; R76 := R70
1107 [-]: CALL      R71 6 1      ; R71(R72,R73,R74,R75,R76)
1108 [-]: GETUPVAL  R71 U5       ; R71 := U5
1109 [-]: LOADK     R72 K149     ; R72 := "HealthBlur"
1110 [-]: LOADK     R73 K150     ; R73 := "HealthAndShield.PlayerHealthBlur"
1111 [-]: MOVE      R74 R7       ; R74 := R7
1112 [-]: GETGLOBAL R75 K18      ; R75 := _T
1113 [-]: GETTABLE  R75 R75 K25  ; R75 := R75["CustomHudHealthOffset"]
1114 [-]: TEST      R75 1        ; if R75 then PC := 1117
1115 [-]: JMP       1117         ; PC := 1117
1116 [-]: CONST     R75 0        ; R75 := 0.000000
1117 [-]: MOVE      R76 R70      ; R76 := R70
1118 [-]: CALL      R71 6 1      ; R71(R72,R73,R74,R75,R76)
1119 [-]: GETGLOBAL R71 K0       ; R71 := 0x7b998233
1120 [-]: GETUPVAL  R72 U7       ; R72 := U7
1121 [-]: GETTABLE  R72 R72 K34  ; R72 := R72["ActivePowerSuit"]
1122 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1123 [-]: TEST      R71 1        ; if R71 then PC := 1182
1124 [-]: JMP       1182         ; PC := 1182
1125 [-]: GETUPVAL  R71 U4       ; R71 := U4
1126 [-]: GETTABLE  R71 R71 K45  ; R71 := R71["CustomAbilities"]
1127 [-]: EQ        0 R71 K68    ; if R71 ~= nil then PC := 1182
1128 [-]: JMP       1182         ; PC := 1182
1129 [-]: GETUPVAL  R71 U4       ; R71 := U4
1130 [-]: GETUPVAL  R72 U7       ; R72 := U7
1131 [-]: GETTABLE  R72 R72 K34  ; R72 := R72["ActivePowerSuit"]
1132 [-]: SELF      R72 R72 K46  ; R73 := R72; R72 := R72[0x3c88e434]
1133 [-]: CALL      R72 2 2      ; R72 := R72(R73)
1134 [-]: SETTABLE  R71 K45 R72  ; R71["CustomAbilities"] := R72
1135 [-]: GETUPVAL  R71 U4       ; R71 := U4
1136 [-]: GETTABLE  R71 R71 K45  ; R71 := R71["CustomAbilities"]
1137 [-]: LEN       R71 R71      ; R71 := # R71
1138 [-]: LE        0 K147 R71   ; if 4.000000 > R71 then PC := 1164
1139 [-]: JMP       1164         ; PC := 1164
1140 [-]: GETUPVAL  R72 U9       ; R72 := U9
1141 [-]: SELF      R72 R72 K81  ; R73 := R72; R72 := R72[0x4bc5dc8b]
1142 [-]: LOADK     R74 K151     ; R74 := "WeaponFrame"
1143 [-]: LOADNIL   R75 R75      ; R75 := nil
1144 [-]: CONST     R76 620      ; R76 := 620.000000
1145 [-]: CALL      R72 5 1      ; R72(R73,R74,R75,R76)
1146 [-]: GETUPVAL  R72 U9       ; R72 := U9
1147 [-]: SELF      R72 R72 K85  ; R73 := R72; R72 := R72[0xfaa69527]
1148 [-]: GETGLOBAL R74 K2       ; R74 := 0xae91e43b
1149 [-]: SELF      R74 R74 K86  ; R75 := R74; R74 := R74[0x6b837788]
1150 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1151 [-]: GETGLOBAL R75 K2       ; R75 := 0xae91e43b
1152 [-]: SELF      R75 R75 K87  ; R76 := R75; R75 := R75[0xaf9fda9f]
1153 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1154 [-]: LOADKB    R76 1 0      ; R76 := true
1155 [-]: GETUPVAL  R77 U10      ; R77 := U10
1156 [-]: GETTABLE  R77 R77 K88  ; R77 := R77["HudScalePadding"]
1157 [-]: CALL      R72 6 1      ; R72(R73,R74,R75,R76,R77)
1158 [-]: GETGLOBAL R72 K18      ; R72 := _T
1159 [-]: GETTABLE  R72 R72 K89  ; R72 := R72[0x71907cb1]
1160 [-]: GETGLOBAL R73 K2       ; R73 := 0xae91e43b
1161 [-]: LOADK     R74 K151     ; R74 := "WeaponFrame"
1162 [-]: CALL      R72 3 1      ; R72(R73,R74)
1163 [-]: JMP       1182         ; PC := 1182
1164 [-]: GETGLOBAL R72 K2       ; R72 := 0xae91e43b
1165 [-]: SELF      R72 R72 K17  ; R73 := R72; R72 := R72[0x67bc869f]
1166 [-]: LOADK     R74 K152     ; R74 := "WeaponFrame.AmmoAvailable"
1167 [-]: CONST     R75 10       ; R75 := 10.000000
1168 [-]: CONST     R76 0        ; R76 := 0.000000
1169 [-]: CALL      R72 5 1      ; R72(R73,R74,R75,R76)
1170 [-]: GETGLOBAL R72 K2       ; R72 := 0xae91e43b
1171 [-]: SELF      R72 R72 K17  ; R73 := R72; R72 := R72[0x67bc869f]
1172 [-]: LOADK     R74 K153     ; R74 := "WeaponFrame.AmmoAvailableBlur"
1173 [-]: CONST     R75 10       ; R75 := 10.000000
1174 [-]: CONST     R76 0        ; R76 := 0.000000
1175 [-]: CALL      R72 5 1      ; R72(R73,R74,R75,R76)
1176 [-]: GETGLOBAL R72 K2       ; R72 := 0xae91e43b
1177 [-]: SELF      R72 R72 K17  ; R73 := R72; R72 := R72[0x67bc869f]
1178 [-]: LOADK     R74 K154     ; R74 := "WeaponFrame.Name"
1179 [-]: CONST     R75 10       ; R75 := 10.000000
1180 [-]: CONST     R76 0        ; R76 := 0.000000
1181 [-]: CALL      R72 5 1      ; R72(R73,R74,R75,R76)
1182 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 2879
; #Upvalues:       24
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  50

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  8 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: CALL      R0 1 1       ; R0()
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: LOADKB    R0 0 0       ; R0 := false
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 0         ; if not R0 then PC := 71
 23 [-]: JMP       71           ; PC := 71
 24 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 25 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xcd73323e]
 26 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 27 [-]: SETUPVAL  R0 U2        ; U82 := R2
 28 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: TEST      R0 0         ; if not R0 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: LOADKB    R0 0 0       ; R0 := false
 34 [-]: RETURN    R0 2         ; return R0
 35 [-]: GETUPVAL  R0 U2        ; R0 := U2
 36 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x474501e1]
 37 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 38 [-]: SETUPVAL  R0 U3        ; U82 := R3
 39 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 40 [-]: GETUPVAL  R1 U3        ; R1 := U3
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: TEST      R0 0         ; if not R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R0 K5        ; R0 := 0x3d106989
 45 [-]: LOADK     R1 K6        ; R1 := "HUD REDUX: null minimap"
 46 [-]: CALL      R0 2 1       ; R0(R1)
 47 [-]: LOADNIL   R0 R0        ; R0 := nil
 48 [-]: SETUPVAL  R0 U2        ; U82 := R2
 49 [-]: LOADKB    R0 0 0       ; R0 := false
 50 [-]: RETURN    R0 2         ; return R0
 51 [-]: GETUPVAL  R0 U3        ; R0 := U3
 52 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xf4ed1581]
 53 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 54 [-]: SETUPVAL  R0 U4        ; U82 := R4
 55 [-]: GETGLOBAL R0 K8        ; R0 := 0xe72d2edb
 56 [-]: EQ        1 R0 K10     ; if R0 == 0.000000 then PC := 65
 57 [-]: JMP       65           ; PC := 65
 58 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 59 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0xaade900e]
 60 [-]: LOADK     R2 K12       ; R2 := "MiniMapContainer.MapBorders"
 61 [-]: CONST     R3 11        ; R3 := 11.000000
 62 [-]: GETUPVAL  R4 U4        ; R4 := U4
 63 [-]: NOT       R4 R4        ; R4 :=  R4
 64 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 65 [-]: GETUPVAL  R0 U4        ; R0 := U4
 66 [-]: TEST      R0 1         ; if R0 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: GETUPVAL  R0 U3        ; R0 := U3
 69 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0xd4735716]
 70 [-]: CALL      R0 2 1       ; R0(R1)
 71 [-]: LOADNIL   R0 R0        ; R0 := nil
 72 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 73 [-]: GETUPVAL  R2 U5        ; R2 := U5
 74 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["CameraController"]
 75 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 76 [-]: TEST      R1 0         ; if not R1 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: GETUPVAL  R1 U5        ; R1 := U5
 79 [-]: GETUPVAL  R2 U2        ; R2 := U2
 80 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x0b4bcfb6]
 81 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 82 [-]: SETTABLE  R1 K14 R2    ; R1["CameraController"] := R2
 83 [-]: GETUPVAL  R1 U0        ; R1 := U0
 84 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1[0xf2deaf69]
 85 [-]: GETGLOBAL R3 K17       ; R3 := gLotusBasePvpGameRulesType
 86 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 87 [-]: TEST      R1 0         ; if not R1 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETUPVAL  R1 U0        ; R1 := U0
 90 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1[0x32316a21]
 91 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 92 [-]: GETUPVAL  R2 U6        ; R2 := U6
 93 [-]: GETUPVAL  R3 U6        ; R3 := U6
 94 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["IsSpectating"]
 95 [-]: SETTABLE  R2 K19 R3    ; R2["mWasSpectating"] := R3
 96 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 97 [-]: GETUPVAL  R3 U5        ; R3 := U5
 98 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CameraController"]
 99 [-]: CALL      R2 2 2       ; R2 := R2(R3)
100 [-]: TEST      R2 1         ; if R2 then PC := 189
101 [-]: JMP       189          ; PC := 189
102 [-]: GETUPVAL  R2 U5        ; R2 := U5
103 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["CameraController"]
104 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0x174fdd85]
105 [-]: CALL      R2 2 2       ; R2 := R2(R3)
106 [-]: TEST      R2 0         ; if not R2 then PC := 189
107 [-]: JMP       189          ; PC := 189
108 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
109 [-]: GETUPVAL  R3 U5        ; R3 := U5
110 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CameraController"]
111 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0x122ed2ac]
112 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
113 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
114 [-]: TEST      R2 1         ; if R2 then PC := 189
115 [-]: JMP       189          ; PC := 189
116 [-]: GETUPVAL  R2 U5        ; R2 := U5
117 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["CameraController"]
118 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0x122ed2ac]
119 [-]: CALL      R2 2 2       ; R2 := R2(R3)
120 [-]: MOVE      R0 R2        ; R0 := R2
121 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
122 [-]: GETGLOBAL R3 K23       ; R3 := _T
123 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["CommanderMap"]
124 [-]: CALL      R2 2 2       ; R2 := R2(R3)
125 [-]: TEST      R2 0         ; if not R2 then PC := 144
126 [-]: JMP       144          ; PC := 144
127 [-]: GETGLOBAL R2 K25       ; R2 := 0x89326c93
128 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2[0x78298275]
129 [-]: CALL      R2 2 2       ; R2 := R2(R3)
130 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 144
131 [-]: JMP       144          ; PC := 144
132 [-]: GETUPVAL  R3 U7        ; R3 := U7
133 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 144
134 [-]: JMP       144          ; PC := 144
135 [-]: GETUPVAL  R3 U3        ; R3 := U3
136 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3[0x00f85b37]
137 [-]: MOVE      R5 R0        ; R5 := R0
138 [-]: CALL      R3 3 1       ; R3(R4,R5)
139 [-]: SETUPVAL  R0 U7        ; U82 := R7
140 [-]: GETUPVAL  R3 U7        ; R3 := U7
141 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0x7102164f]
142 [-]: LOADKB    R5 0 0       ; R5 := false
143 [-]: CALL      R3 3 1       ; R3(R4,R5)
144 [-]: GETUPVAL  R3 U6        ; R3 := U6
145 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["IsSpectating"]
146 [-]: TEST      R3 1         ; if R3 then PC := 186
147 [-]: JMP       186          ; PC := 186
148 [-]: GETGLOBAL R3 K5        ; R3 := 0x3d106989
149 [-]: LOADK     R4 K29       ; R4 := "*** Enabling spectator mode ***"
150 [-]: CALL      R3 2 1       ; R3(R4)
151 [-]: TEST      R1 0         ; if not R1 then PC := 177
152 [-]: JMP       177          ; PC := 177
153 [-]: GETUPVAL  R3 U0        ; R3 := U0
154 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x529b110d]
155 [-]: CALL      R3 2 2       ; R3 := R3(R4)
156 [-]: EQ        1 R3 K31     ; if R3 == 5.000000 then PC := 163
157 [-]: JMP       163          ; PC := 163
158 [-]: GETUPVAL  R3 U0        ; R3 := U0
159 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x529b110d]
160 [-]: CALL      R3 2 2       ; R3 := R3(R4)
161 [-]: EQ        0 R3 K32     ; if R3 ~= 2.000000 then PC := 177
162 [-]: JMP       177          ; PC := 177
163 [-]: GETGLOBAL R3 K23       ; R3 := _T
164 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["gSectorWars"]
165 [-]: TEST      R3 1         ; if R3 then PC := 177
166 [-]: JMP       177          ; PC := 177
167 [-]: GETUPVAL  R3 U0        ; R3 := U0
168 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0xf2deaf69]
169 [-]: GETGLOBAL R5 K34       ; R5 := gLotusPvpGameRulesType
170 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
171 [-]: TEST      R3 1         ; if R3 then PC := 177
172 [-]: JMP       177          ; PC := 177
173 [-]: GETUPVAL  R3 U0        ; R3 := U0
174 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3[0x6033d6be]
175 [-]: LOADKB    R5 1 0       ; R5 := true
176 [-]: CALL      R3 3 1       ; R3(R4,R5)
177 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
178 [-]: GETUPVAL  R4 U8        ; R4 := U8
179 [-]: CALL      R3 2 2       ; R3 := R3(R4)
180 [-]: TEST      R3 1         ; if R3 then PC := 186
181 [-]: JMP       186          ; PC := 186
182 [-]: GETUPVAL  R3 U8        ; R3 := U8
183 [-]: SELF      R3 R3 K36    ; R4 := R3; R3 := R3[0x5cee792a]
184 [-]: LOADKB    R5 0 0       ; R5 := false
185 [-]: CALL      R3 3 1       ; R3(R4,R5)
186 [-]: GETUPVAL  R3 U6        ; R3 := U6
187 [-]: SETTABLE  R3 K20 K37   ; R3["IsSpectating"] := true
188 [-]: JMP       277          ; PC := 277
189 [-]: GETUPVAL  R3 U6        ; R3 := U6
190 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["IsSpectating"]
191 [-]: TEST      R3 1         ; if R3 then PC := 198
192 [-]: JMP       198          ; PC := 198
193 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
194 [-]: GETUPVAL  R4 U9        ; R4 := U9
195 [-]: CALL      R3 2 2       ; R3 := R3(R4)
196 [-]: TEST      R3 0         ; if not R3 then PC := 253
197 [-]: JMP       253          ; PC := 253
198 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
199 [-]: GETGLOBAL R4 K23       ; R4 := _T
200 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CommanderMap"]
201 [-]: CALL      R3 2 2       ; R3 := R3(R4)
202 [-]: TEST      R3 0         ; if not R3 then PC := 215
203 [-]: JMP       215          ; PC := 215
204 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
205 [-]: GETUPVAL  R4 U7        ; R4 := U7
206 [-]: CALL      R3 2 2       ; R3 := R3(R4)
207 [-]: TEST      R3 1         ; if R3 then PC := 215
208 [-]: JMP       215          ; PC := 215
209 [-]: GETUPVAL  R3 U7        ; R3 := U7
210 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0x7102164f]
211 [-]: LOADKB    R5 1 0       ; R5 := true
212 [-]: CALL      R3 3 1       ; R3(R4,R5)
213 [-]: LOADNIL   R3 R3        ; R3 := nil
214 [-]: SETUPVAL  R3 U7        ; U82 := R7
215 [-]: GETUPVAL  R3 U2        ; R3 := U2
216 [-]: SELF      R3 R3 K38    ; R4 := R3; R3 := R3[0xbb610e5b]
217 [-]: CALL      R3 2 2       ; R3 := R3(R4)
218 [-]: MOVE      R0 R3        ; R0 := R3
219 [-]: TEST      R0 0         ; if not R0 then PC := 277
220 [-]: JMP       277          ; PC := 277
221 [-]: TEST      R1 0         ; if not R1 then PC := 241
222 [-]: JMP       241          ; PC := 241
223 [-]: GETUPVAL  R3 U0        ; R3 := U0
224 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x529b110d]
225 [-]: CALL      R3 2 2       ; R3 := R3(R4)
226 [-]: EQ        1 R3 K31     ; if R3 == 5.000000 then PC := 233
227 [-]: JMP       233          ; PC := 233
228 [-]: GETUPVAL  R3 U0        ; R3 := U0
229 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x529b110d]
230 [-]: CALL      R3 2 2       ; R3 := R3(R4)
231 [-]: EQ        0 R3 K32     ; if R3 ~= 2.000000 then PC := 241
232 [-]: JMP       241          ; PC := 241
233 [-]: GETGLOBAL R3 K23       ; R3 := _T
234 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["gSectorWars"]
235 [-]: TEST      R3 1         ; if R3 then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETUPVAL  R3 U0        ; R3 := U0
238 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3[0x6033d6be]
239 [-]: LOADKB    R5 0 0       ; R5 := false
240 [-]: CALL      R3 3 1       ; R3(R4,R5)
241 [-]: GETUPVAL  R3 U6        ; R3 := U6
242 [-]: SETTABLE  R3 K20 K39   ; R3["IsSpectating"] := false
243 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
244 [-]: GETUPVAL  R4 U8        ; R4 := U8
245 [-]: CALL      R3 2 2       ; R3 := R3(R4)
246 [-]: TEST      R3 1         ; if R3 then PC := 277
247 [-]: JMP       277          ; PC := 277
248 [-]: GETUPVAL  R3 U8        ; R3 := U8
249 [-]: SELF      R3 R3 K36    ; R4 := R3; R3 := R3[0x5cee792a]
250 [-]: LOADKB    R5 1 0       ; R5 := true
251 [-]: CALL      R3 3 1       ; R3(R4,R5)
252 [-]: JMP       277          ; PC := 277
253 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
254 [-]: GETGLOBAL R4 K23       ; R4 := _T
255 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CommanderMap"]
256 [-]: CALL      R3 2 2       ; R3 := R3(R4)
257 [-]: TEST      R3 0         ; if not R3 then PC := 270
258 [-]: JMP       270          ; PC := 270
259 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
260 [-]: GETUPVAL  R4 U7        ; R4 := U7
261 [-]: CALL      R3 2 2       ; R3 := R3(R4)
262 [-]: TEST      R3 1         ; if R3 then PC := 270
263 [-]: JMP       270          ; PC := 270
264 [-]: GETUPVAL  R3 U7        ; R3 := U7
265 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0x7102164f]
266 [-]: LOADKB    R5 1 0       ; R5 := true
267 [-]: CALL      R3 3 1       ; R3(R4,R5)
268 [-]: LOADNIL   R3 R3        ; R3 := nil
269 [-]: SETUPVAL  R3 U7        ; U82 := R7
270 [-]: GETUPVAL  R3 U10       ; R3 := U10
271 [-]: GETTABLE  R3 R3 K40    ; R3 := R3[0xe3a0bbca]
272 [-]: GETUPVAL  R4 U2        ; R4 := U2
273 [-]: GETUPVAL  R5 U9        ; R5 := U9
274 [-]: LOADKB    R6 1 0       ; R6 := true
275 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
276 [-]: MOVE      R0 R3        ; R0 := R3
277 [-]: GETUPVAL  R3 U6        ; R3 := U6
278 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["IsSpectating"]
279 [-]: TEST      R3 0         ; if not R3 then PC := 302
280 [-]: JMP       302          ; PC := 302
281 [-]: GETUPVAL  R3 U6        ; R3 := U6
282 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["mWasSpectating"]
283 [-]: TEST      R3 1         ; if R3 then PC := 302
284 [-]: JMP       302          ; PC := 302
285 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
286 [-]: GETUPVAL  R4 U8        ; R4 := U8
287 [-]: CALL      R3 2 2       ; R3 := R3(R4)
288 [-]: TEST      R3 1         ; if R3 then PC := 302
289 [-]: JMP       302          ; PC := 302
290 [-]: GETUPVAL  R3 U8        ; R3 := U8
291 [-]: SELF      R3 R3 K41    ; R4 := R3; R3 := R3[0x603d617e]
292 [-]: CALL      R3 2 2       ; R3 := R3(R4)
293 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
294 [-]: MOVE      R5 R3        ; R5 := R3
295 [-]: CALL      R4 2 2       ; R4 := R4(R5)
296 [-]: TEST      R4 1         ; if R4 then PC := 302
297 [-]: JMP       302          ; PC := 302
298 [-]: SELF      R4 R3 K42    ; R5 := R3; R4 := R3[0xe4162eed]
299 [-]: LOADK     R6 K43       ; R6 := "SetAiming"
300 [-]: LOADK     R7 K44       ; R7 := "false"
301 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
302 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
303 [-]: GETUPVAL  R5 U9        ; R5 := U9
304 [-]: CALL      R4 2 2       ; R4 := R4(R5)
305 [-]: TEST      R4 1         ; if R4 then PC := 382
306 [-]: JMP       382          ; PC := 382
307 [-]: GETUPVAL  R4 U9        ; R4 := U9
308 [-]: SELF      R4 R4 K45    ; R5 := R4; R4 := R4[0x2047cfe7]
309 [-]: CALL      R4 2 2       ; R4 := R4(R5)
310 [-]: TEST      R4 0         ; if not R4 then PC := 382
311 [-]: JMP       382          ; PC := 382
312 [-]: GETUPVAL  R4 U11       ; R4 := U11
313 [-]: GETTABLE  R4 R4 K46    ; R4 := R4["Cached"]
314 [-]: TEST      R4 1         ; if R4 then PC := 382
315 [-]: JMP       382          ; PC := 382
316 [-]: GETUPVAL  R4 U9        ; R4 := U9
317 [-]: SELF      R4 R4 K47    ; R5 := R4; R4 := R4[0x1f7e8969]
318 [-]: CALL      R4 2 2       ; R4 := R4(R5)
319 [-]: CONST     R5 1         ; R5 := 1.000000
320 [-]: LEN       R6 R4        ; R6 := # R4
321 [-]: CONST     R7 1         ; R7 := 1.000000
322 [-]: FORPREP   R5 379       ; R5 -= R7; PC := 379
323 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
324 [-]: GETTABLE  R10 R9 K48   ; R10 := R9["instigator"]
325 [-]: GETUPVAL  R11 U9       ; R11 := U9
326 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 379
327 [-]: JMP       379          ; PC := 379
328 [-]: GETGLOBAL R10 K9       ; R10 := 0x6c97a788
329 [-]: GETTABLE  R10 R10 K49  ; R10 := R10[0x608bc054]
330 [-]: CALL      R10 1 2      ; R10 := R10()
331 [-]: NEWTABLE  R11 0 0      ; R11 := {}
332 [-]: GETUPVAL  R12 U9       ; R12 := U9
333 [-]: SETTABLE  R10 K48 R12  ; R10["instigator"] := R12
334 [-]: GETTABLE  R12 R9 K50   ; R12 := R9["buffType"]
335 [-]: SETTABLE  R10 K50 R12  ; R10["buffType"] := R12
336 [-]: GETTABLE  R12 R9 K51   ; R12 := R9["isDebuff"]
337 [-]: SETTABLE  R10 K51 R12  ; R10["isDebuff"] := R12
338 [-]: GETTABLE  R12 R9 K52   ; R12 := R9["stackData"]
339 [-]: SETTABLE  R10 K52 R12  ; R10["stackData"] := R12
340 [-]: GETTABLE  R12 R9 K53   ; R12 := R9["abilityType"]
341 [-]: SETTABLE  R10 K53 R12  ; R10["abilityType"] := R12
342 [-]: GETTABLE  R12 R9 K54   ; R12 := R9["augmentType"]
343 [-]: SETTABLE  R10 K54 R12  ; R10["augmentType"] := R12
344 [-]: GETTABLE  R12 R9 K55   ; R12 := R9["buffData"]
345 [-]: SETTABLE  R10 K55 R12  ; R10["buffData"] := R12
346 [-]: GETTABLE  R12 R9 K56   ; R12 := R9["buffDataExtra"]
347 [-]: SETTABLE  R10 K56 R12  ; R10["buffDataExtra"] := R12
348 [-]: CONST     R12 1        ; R12 := 1.000000
349 [-]: GETTABLE  R13 R9 K57   ; R13 := R9["affected"]
350 [-]: LEN       R13 R13      ; R13 := # R13
351 [-]: CONST     R14 1        ; R14 := 1.000000
352 [-]: FORPREP   R12 368      ; R12 -= R14; PC := 368
353 [-]: GETTABLE  R16 R9 K57   ; R16 := R9["affected"]
354 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
355 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
356 [-]: MOVE      R18 R16      ; R18 := R16
357 [-]: CALL      R17 2 2      ; R17 := R17(R18)
358 [-]: TEST      R17 1        ; if R17 then PC := 368
359 [-]: JMP       368          ; PC := 368
360 [-]: GETUPVAL  R17 U9       ; R17 := U9
361 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 368
362 [-]: JMP       368          ; PC := 368
363 [-]: GETGLOBAL R17 K58      ; R17 := 0x33bdd652
364 [-]: GETTABLE  R17 R17 K59  ; R17 := R17[0x23d5322f]
365 [-]: MOVE      R18 R11      ; R18 := R11
366 [-]: MOVE      R19 R16      ; R19 := R16
367 [-]: CALL      R17 3 1      ; R17(R18,R19)
368 [-]: FORLOOP   R12 353      ; R12 += R14; if R12 <= R13 then begin PC := 353; R15 := R12 end
369 [-]: LEN       R17 R11      ; R17 := # R11
370 [-]: LT        0 K10 R17    ; if 0.000000 >= R17 then PC := 379
371 [-]: JMP       379          ; PC := 379
372 [-]: SETTABLE  R10 K57 R11  ; R10["affected"] := R11
373 [-]: GETGLOBAL R17 K58      ; R17 := 0x33bdd652
374 [-]: GETTABLE  R17 R17 K59  ; R17 := R17[0x23d5322f]
375 [-]: GETUPVAL  R18 U11      ; R18 := U11
376 [-]: GETTABLE  R18 R18 K60  ; R18 := R18["Buffs"]
377 [-]: MOVE      R19 R10      ; R19 := R10
378 [-]: CALL      R17 3 1      ; R17(R18,R19)
379 [-]: FORLOOP   R5 323       ; R5 += R7; if R5 <= R6 then begin PC := 323; R8 := R5 end
380 [-]: GETUPVAL  R17 U11      ; R17 := U11
381 [-]: SETTABLE  R17 K46 K37  ; R17["Cached"] := true
382 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
383 [-]: MOVE      R18 R0       ; R18 := R0
384 [-]: CALL      R17 2 2      ; R17 := R17(R18)
385 [-]: TEST      R17 0        ; if not R17 then PC := 389
386 [-]: JMP       389          ; PC := 389
387 [-]: LOADKB    R17 0 0      ; R17 := false
388 [-]: RETURN    R17 2        ; return R17
389 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
390 [-]: GETUPVAL  R18 U9       ; R18 := U9
391 [-]: CALL      R17 2 2      ; R17 := R17(R18)
392 [-]: TEST      R17 1        ; if R17 then PC := 403
393 [-]: JMP       403          ; PC := 403
394 [-]: GETUPVAL  R17 U9       ; R17 := U9
395 [-]: EQ        0 R17 R0     ; if R17 ~= R0 then PC := 403
396 [-]: JMP       403          ; PC := 403
397 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
398 [-]: GETUPVAL  R18 U12      ; R18 := U12
399 [-]: GETTABLE  R18 R18 K61  ; R18 := R18["ActivePowerSuit"]
400 [-]: CALL      R17 2 2      ; R17 := R17(R18)
401 [-]: TEST      R17 0        ; if not R17 then PC := 682
402 [-]: JMP       682          ; PC := 682
403 [-]: SELF      R17 R0 K62   ; R18 := R0; R17 := R0[0xde321e6f]
404 [-]: CALL      R17 2 2      ; R17 := R17(R18)
405 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
406 [-]: MOVE      R19 R17      ; R19 := R17
407 [-]: CALL      R18 2 2      ; R18 := R18(R19)
408 [-]: TEST      R18 1        ; if R18 then PC := 445
409 [-]: JMP       445          ; PC := 445
410 [-]: SELF      R18 R17 K16  ; R19 := R17; R18 := R17[0xf2deaf69]
411 [-]: GETGLOBAL R20 K63      ; R20 := gLotusInventoryControllerType
412 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
413 [-]: TEST      R18 0        ; if not R18 then PC := 445
414 [-]: JMP       445          ; PC := 445
415 [-]: GETUPVAL  R18 U5       ; R18 := U5
416 [-]: SETTABLE  R18 K64 R17  ; R18["InventoryController"] := R17
417 [-]: GETUPVAL  R18 U12      ; R18 := U12
418 [-]: GETUPVAL  R19 U5       ; R19 := U5
419 [-]: GETTABLE  R19 R19 K64  ; R19 := R19["InventoryController"]
420 [-]: SELF      R19 R19 K65  ; R20 := R19; R19 := R19[0xf7d48ee0]
421 [-]: CALL      R19 2 2      ; R19 := R19(R20)
422 [-]: SETTABLE  R18 K61 R19  ; R18["ActivePowerSuit"] := R19
423 [-]: GETUPVAL  R18 U12      ; R18 := U12
424 [-]: GETUPVAL  R19 U2       ; R19 := U2
425 [-]: SELF      R19 R19 K67  ; R20 := R19; R19 := R19[0xa534c3ac]
426 [-]: CALL      R19 2 2      ; R19 := R19(R20)
427 [-]: SETTABLE  R18 K66 R19  ; R18["OwnedPowerSuitAvatar"] := R19
428 [-]: GETUPVAL  R18 U13      ; R18 := U13
429 [-]: SETTABLE  R18 K68 K69  ; R18["CustomAbilities"] := nil
430 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
431 [-]: GETUPVAL  R19 U12      ; R19 := U12
432 [-]: GETTABLE  R19 R19 K66  ; R19 := R19["OwnedPowerSuitAvatar"]
433 [-]: CALL      R18 2 2      ; R18 := R18(R19)
434 [-]: TEST      R18 1        ; if R18 then PC := 443
435 [-]: JMP       443          ; PC := 443
436 [-]: GETUPVAL  R18 U5       ; R18 := U5
437 [-]: GETUPVAL  R19 U12      ; R19 := U12
438 [-]: GETTABLE  R19 R19 K66  ; R19 := R19["OwnedPowerSuitAvatar"]
439 [-]: SELF      R19 R19 K62  ; R20 := R19; R19 := R19[0xde321e6f]
440 [-]: CALL      R19 2 2      ; R19 := R19(R20)
441 [-]: SETTABLE  R18 K70 R19  ; R18["OwnedPowerSuitInventoryController"] := R19
442 [-]: JMP       445          ; PC := 445
443 [-]: GETUPVAL  R18 U5       ; R18 := U5
444 [-]: SETTABLE  R18 K70 K69  ; R18["OwnedPowerSuitInventoryController"] := nil
445 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
446 [-]: GETUPVAL  R19 U5       ; R19 := U5
447 [-]: GETTABLE  R19 R19 K64  ; R19 := R19["InventoryController"]
448 [-]: CALL      R18 2 2      ; R18 := R18(R19)
449 [-]: TEST      R18 0        ; if not R18 then PC := 453
450 [-]: JMP       453          ; PC := 453
451 [-]: LOADKB    R18 0 0      ; R18 := false
452 [-]: RETURN    R18 2        ; return R18
453 [-]: GETUPVAL  R18 U5       ; R18 := U5
454 [-]: SELF      R19 R0 K72   ; R20 := R0; R19 := R0[0x1ac1655c]
455 [-]: CALL      R19 2 2      ; R19 := R19(R20)
456 [-]: SETTABLE  R18 K71 R19  ; R18["DamageController"] := R19
457 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
458 [-]: GETUPVAL  R19 U5       ; R19 := U5
459 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["DamageController"]
460 [-]: CALL      R18 2 2      ; R18 := R18(R19)
461 [-]: TEST      R18 0        ; if not R18 then PC := 465
462 [-]: JMP       465          ; PC := 465
463 [-]: LOADKB    R18 0 0      ; R18 := false
464 [-]: RETURN    R18 2        ; return R18
465 [-]: GETUPVAL  R18 U5       ; R18 := U5
466 [-]: SELF      R19 R0 K74   ; R20 := R0; R19 := R0[0xd3a01177]
467 [-]: CALL      R19 2 2      ; R19 := R19(R20)
468 [-]: SETTABLE  R18 K73 R19  ; R18["InputController"] := R19
469 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
470 [-]: GETUPVAL  R19 U5       ; R19 := U5
471 [-]: GETTABLE  R19 R19 K73  ; R19 := R19["InputController"]
472 [-]: CALL      R18 2 2      ; R18 := R18(R19)
473 [-]: TEST      R18 0        ; if not R18 then PC := 477
474 [-]: JMP       477          ; PC := 477
475 [-]: LOADKB    R18 0 0      ; R18 := false
476 [-]: RETURN    R18 2        ; return R18
477 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
478 [-]: GETUPVAL  R19 U14      ; R19 := U14
479 [-]: CALL      R18 2 2      ; R18 := R18(R19)
480 [-]: TEST      R18 0        ; if not R18 then PC := 504
481 [-]: JMP       504          ; PC := 504
482 [-]: GETUPVAL  R18 U2       ; R18 := U2
483 [-]: SELF      R18 R18 K75  ; R19 := R18; R18 := R18[0x6d7bfacb]
484 [-]: CALL      R18 2 2      ; R18 := R18(R19)
485 [-]: SETUPVAL  R18 U14      ; U82 := R14
486 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
487 [-]: GETUPVAL  R19 U14      ; R19 := U14
488 [-]: CALL      R18 2 2      ; R18 := R18(R19)
489 [-]: TEST      R18 0        ; if not R18 then PC := 493
490 [-]: JMP       493          ; PC := 493
491 [-]: LOADKB    R18 0 0      ; R18 := false
492 [-]: RETURN    R18 2        ; return R18
493 [-]: GETGLOBAL R18 K8       ; R18 := 0xe72d2edb
494 [-]: EQ        1 R18 K10    ; if R18 == 0.000000 then PC := 500
495 [-]: JMP       500          ; PC := 500
496 [-]: GETUPVAL  R18 U14      ; R18 := U14
497 [-]: SELF      R18 R18 K76  ; R19 := R18; R18 := R18[0xeaef69de]
498 [-]: GETGLOBAL R20 K8       ; R20 := 0xe72d2edb
499 [-]: CALL      R18 3 1      ; R18(R19,R20)
500 [-]: GETUPVAL  R18 U14      ; R18 := U14
501 [-]: SELF      R18 R18 K77  ; R19 := R18; R18 := R18[0x1e9695e9]
502 [-]: GETUPVAL  R20 U2       ; R20 := U2
503 [-]: CALL      R18 3 1      ; R18(R19,R20)
504 [-]: GETUPVAL  R18 U6       ; R18 := U6
505 [-]: GETTABLE  R18 R18 K78  ; R18 := R18["StalkerMode"]
506 [-]: GETGLOBAL R19 K79      ; R19 := 0x0032441c
507 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["StalkerMode"]
508 [-]: EQ        0 R19 K69    ; if R19 ~= nil then PC := 511
509 [-]: JMP       511          ; PC := 511
510 [-]: LOADKB    R19 0 1      ; R19 := false; PC := 511
511 [-]: LOADKB    R19 1 0      ; R19 := true
512 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 527
513 [-]: JMP       527          ; PC := 527
514 [-]: GETUPVAL  R18 U6       ; R18 := U6
515 [-]: GETGLOBAL R19 K79      ; R19 := 0x0032441c
516 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["StalkerMode"]
517 [-]: EQ        0 R19 K69    ; if R19 ~= nil then PC := 520
518 [-]: JMP       520          ; PC := 520
519 [-]: LOADKB    R19 0 1      ; R19 := false; PC := 520
520 [-]: LOADKB    R19 1 0      ; R19 := true
521 [-]: SETTABLE  R18 K78 R19  ; R18["StalkerMode"] := R19
522 [-]: GETUPVAL  R18 U14      ; R18 := U14
523 [-]: SELF      R18 R18 K80  ; R19 := R18; R18 := R18[0x9b069215]
524 [-]: GETUPVAL  R20 U6       ; R20 := U6
525 [-]: GETTABLE  R20 R20 K78  ; R20 := R20["StalkerMode"]
526 [-]: CALL      R18 3 1      ; R18(R19,R20)
527 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
528 [-]: GETUPVAL  R19 U8       ; R19 := U8
529 [-]: CALL      R18 2 2      ; R18 := R18(R19)
530 [-]: TEST      R18 0        ; if not R18 then PC := 554
531 [-]: JMP       554          ; PC := 554
532 [-]: GETUPVAL  R18 U2       ; R18 := U2
533 [-]: SELF      R18 R18 K81  ; R19 := R18; R18 := R18[0x0803eee1]
534 [-]: CALL      R18 2 2      ; R18 := R18(R19)
535 [-]: SETUPVAL  R18 U8       ; U82 := R8
536 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
537 [-]: GETUPVAL  R19 U8       ; R19 := U8
538 [-]: CALL      R18 2 2      ; R18 := R18(R19)
539 [-]: TEST      R18 0        ; if not R18 then PC := 543
540 [-]: JMP       543          ; PC := 543
541 [-]: LOADKB    R18 0 0      ; R18 := false
542 [-]: RETURN    R18 2        ; return R18
543 [-]: GETGLOBAL R18 K8       ; R18 := 0xe72d2edb
544 [-]: EQ        1 R18 K10    ; if R18 == 0.000000 then PC := 550
545 [-]: JMP       550          ; PC := 550
546 [-]: GETUPVAL  R18 U8       ; R18 := U8
547 [-]: SELF      R18 R18 K76  ; R19 := R18; R18 := R18[0xeaef69de]
548 [-]: GETGLOBAL R20 K8       ; R20 := 0xe72d2edb
549 [-]: CALL      R18 3 1      ; R18(R19,R20)
550 [-]: GETUPVAL  R18 U8       ; R18 := U8
551 [-]: SELF      R18 R18 K77  ; R19 := R18; R18 := R18[0x1e9695e9]
552 [-]: GETUPVAL  R20 U2       ; R20 := U2
553 [-]: CALL      R18 3 1      ; R18(R19,R20)
554 [-]: SETUPVAL  R0 U9        ; U82 := R9
555 [-]: GETUPVAL  R18 U14      ; R18 := U14
556 [-]: SELF      R18 R18 K82  ; R19 := R18; R18 := R18[0x6010b1fa]
557 [-]: CALL      R18 2 1      ; R18(R19)
558 [-]: GETGLOBAL R18 K23      ; R18 := _T
559 [-]: GETUPVAL  R19 U9       ; R19 := U9
560 [-]: SETTABLE  R18 K83 R19  ; R18["CurrentHudAvatar"] := R19
561 [-]: GETUPVAL  R18 U8       ; R18 := U8
562 [-]: SELF      R18 R18 K84  ; R19 := R18; R18 := R18[0x484bc106]
563 [-]: CALL      R18 2 1      ; R18(R19)
564 [-]: GETUPVAL  R18 U8       ; R18 := U8
565 [-]: SELF      R18 R18 K36  ; R19 := R18; R18 := R18[0x5cee792a]
566 [-]: GETUPVAL  R20 U6       ; R20 := U6
567 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["IsSpectating"]
568 [-]: NOT       R20 R20      ; R20 :=  R20
569 [-]: CALL      R18 3 1      ; R18(R19,R20)
570 [-]: GETUPVAL  R18 U15      ; R18 := U15
571 [-]: SELF      R18 R18 K85  ; R19 := R18; R18 := R18[0x7c09c373]
572 [-]: CALL      R18 2 1      ; R18(R19)
573 [-]: GETUPVAL  R18 U16      ; R18 := U16
574 [-]: EQ        1 R18 K69    ; if R18 == nil then PC := 579
575 [-]: JMP       579          ; PC := 579
576 [-]: GETUPVAL  R18 U16      ; R18 := U16
577 [-]: SELF      R18 R18 K86  ; R19 := R18; R18 := R18[0xe81208f9]
578 [-]: CALL      R18 2 1      ; R18(R19)
579 [-]: GETUPVAL  R18 U6       ; R18 := U6
580 [-]: GETTABLE  R18 R18 K20  ; R18 := R18["IsSpectating"]
581 [-]: TEST      R18 1        ; if R18 then PC := 651
582 [-]: JMP       651          ; PC := 651
583 [-]: GETUPVAL  R18 U11      ; R18 := U11
584 [-]: GETTABLE  R18 R18 K46  ; R18 := R18["Cached"]
585 [-]: TEST      R18 0        ; if not R18 then PC := 605
586 [-]: JMP       605          ; PC := 605
587 [-]: CONST     R18 1        ; R18 := 1.000000
588 [-]: GETUPVAL  R19 U11      ; R19 := U11
589 [-]: GETTABLE  R19 R19 K60  ; R19 := R19["Buffs"]
590 [-]: LEN       R19 R19      ; R19 := # R19
591 [-]: CONST     R20 1        ; R20 := 1.000000
592 [-]: FORPREP   R18 604      ; R18 -= R20; PC := 604
593 [-]: GETUPVAL  R22 U11      ; R22 := U11
594 [-]: GETTABLE  R22 R22 K60  ; R22 := R22["Buffs"]
595 [-]: GETTABLE  R22 R22 R21  ; R22 := R22[R21]
596 [-]: SETTABLE  R22 K48 R0   ; R22["instigator"] := R0
597 [-]: SELF      R23 R0 K87   ; R24 := R0; R23 := R0[0x37e45fb5]
598 [-]: GETUPVAL  R25 U11      ; R25 := U11
599 [-]: GETTABLE  R25 R25 K60  ; R25 := R25["Buffs"]
600 [-]: GETTABLE  R25 R25 R21  ; R25 := R25[R21]
601 [-]: LOADKB    R26 1 0      ; R26 := true
602 [-]: LOADKB    R27 0 0      ; R27 := false
603 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
604 [-]: FORLOOP   R18 593      ; R18 += R20; if R18 <= R19 then begin PC := 593; R21 := R18 end
605 [-]: GETUPVAL  R23 U11      ; R23 := U11
606 [-]: SETTABLE  R23 K46 K39  ; R23["Cached"] := false
607 [-]: GETUPVAL  R23 U11      ; R23 := U11
608 [-]: NEWTABLE  R24 0 0      ; R24 := {}
609 [-]: SETTABLE  R23 K60 R24  ; R23["Buffs"] := R24
610 [-]: SELF      R23 R0 K47   ; R24 := R0; R23 := R0[0x1f7e8969]
611 [-]: CALL      R23 2 2      ; R23 := R23(R24)
612 [-]: CONST     R24 1        ; R24 := 1.000000
613 [-]: LEN       R25 R23      ; R25 := # R23
614 [-]: CONST     R26 1        ; R26 := 1.000000
615 [-]: FORPREP   R24 619      ; R24 -= R26; PC := 619
616 [-]: GETUPVAL  R28 U17      ; R28 := U17
617 [-]: GETTABLE  R29 R23 R27  ; R29 := R23[R27]
618 [-]: CALL      R28 2 1      ; R28(R29)
619 [-]: FORLOOP   R24 616      ; R24 += R26; if R24 <= R25 then begin PC := 616; R27 := R24 end
620 [-]: GETGLOBAL R28 K88      ; R28 := 0x7ed0a956
621 [-]: LOADK     R29 K89      ; R29 := "/Lotus/Types/Enemies/Orokin/Entrati/EntratiTech/EntratiTechAvatar"
622 [-]: CALL      R28 2 2      ; R28 := R28(R29)
623 [-]: SELF      R29 R0 K16   ; R30 := R0; R29 := R0[0xf2deaf69]
624 [-]: GETGLOBAL R31 K90      ; R31 := gLotusVehicleAvatarType
625 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
626 [-]: TEST      R29 0        ; if not R29 then PC := 651
627 [-]: JMP       651          ; PC := 651
628 [-]: SELF      R29 R0 K16   ; R30 := R0; R29 := R0[0xf2deaf69]
629 [-]: MOVE      R31 R28      ; R31 := R28
630 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
631 [-]: TEST      R29 1        ; if R29 then PC := 651
632 [-]: JMP       651          ; PC := 651
633 [-]: SELF      R29 R0 K91   ; R30 := R0; R29 := R0[0xff005826]
634 [-]: CALL      R29 2 2      ; R29 := R29(R30)
635 [-]: GETGLOBAL R30 K0       ; R30 := 0x7b998233
636 [-]: MOVE      R31 R29      ; R31 := R29
637 [-]: CALL      R30 2 2      ; R30 := R30(R31)
638 [-]: TEST      R30 1        ; if R30 then PC := 651
639 [-]: JMP       651          ; PC := 651
640 [-]: SELF      R30 R29 K47  ; R31 := R29; R30 := R29[0x1f7e8969]
641 [-]: CALL      R30 2 2      ; R30 := R30(R31)
642 [-]: MOVE      R23 R30      ; R23 := R30
643 [-]: CONST     R30 1        ; R30 := 1.000000
644 [-]: LEN       R31 R23      ; R31 := # R23
645 [-]: CONST     R32 1        ; R32 := 1.000000
646 [-]: FORPREP   R30 650      ; R30 -= R32; PC := 650
647 [-]: GETUPVAL  R34 U17      ; R34 := U17
648 [-]: GETTABLE  R35 R23 R33  ; R35 := R23[R33]
649 [-]: CALL      R34 2 1      ; R34(R35)
650 [-]: FORLOOP   R30 647      ; R30 += R32; if R30 <= R31 then begin PC := 647; R33 := R30 end
651 [-]: GETUPVAL  R34 U5       ; R34 := U5
652 [-]: GETTABLE  R34 R34 K64  ; R34 := R34["InventoryController"]
653 [-]: SELF      R34 R34 K92  ; R35 := R34; R34 := R34[0xac03381f]
654 [-]: CALL      R34 2 2      ; R34 := R34(R35)
655 [-]: GETUPVAL  R35 U6       ; R35 := U6
656 [-]: GETTABLE  R35 R35 K20  ; R35 := R35["IsSpectating"]
657 [-]: TEST      R35 1        ; if R35 then PC := 706
658 [-]: JMP       706          ; PC := 706
659 [-]: TEST      R34 1        ; if R34 then PC := 706
660 [-]: JMP       706          ; PC := 706
661 [-]: GETUPVAL  R35 U2       ; R35 := U2
662 [-]: SELF      R35 R35 K67  ; R36 := R35; R35 := R35[0xa534c3ac]
663 [-]: CALL      R35 2 2      ; R35 := R35(R36)
664 [-]: GETGLOBAL R36 K0       ; R36 := 0x7b998233
665 [-]: MOVE      R37 R35      ; R37 := R35
666 [-]: CALL      R36 2 2      ; R36 := R36(R37)
667 [-]: TEST      R36 1        ; if R36 then PC := 679
668 [-]: JMP       679          ; PC := 679
669 [-]: SELF      R36 R35 K62  ; R37 := R35; R36 := R35[0xde321e6f]
670 [-]: CALL      R36 2 2      ; R36 := R36(R37)
671 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
672 [-]: MOVE      R38 R36      ; R38 := R36
673 [-]: CALL      R37 2 2      ; R37 := R37(R38)
674 [-]: TEST      R37 1        ; if R37 then PC := 679
675 [-]: JMP       679          ; PC := 679
676 [-]: SELF      R37 R36 K93  ; R38 := R36; R37 := R36[0x2676deee]
677 [-]: CALL      R37 2 2      ; R37 := R37(R38)
678 [-]: SETUPVAL  R37 U18      ; U82 := R18
679 [-]: GETUPVAL  R37 U19      ; R37 := U19
680 [-]: CALL      R37 1 1      ; R37()
681 [-]: JMP       706          ; PC := 706
682 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
683 [-]: GETUPVAL  R38 U5       ; R38 := U5
684 [-]: GETTABLE  R38 R38 K64  ; R38 := R38["InventoryController"]
685 [-]: CALL      R37 2 2      ; R37 := R37(R38)
686 [-]: TEST      R37 1        ; if R37 then PC := 706
687 [-]: JMP       706          ; PC := 706
688 [-]: GETUPVAL  R37 U5       ; R37 := U5
689 [-]: GETTABLE  R37 R37 K64  ; R37 := R37["InventoryController"]
690 [-]: SELF      R37 R37 K92  ; R38 := R37; R37 := R37[0xac03381f]
691 [-]: CALL      R37 2 2      ; R37 := R37(R38)
692 [-]: GETUPVAL  R38 U12      ; R38 := U12
693 [-]: GETTABLE  R38 R38 K94  ; R38 := R38["SpaceMode"]
694 [-]: EQ        1 R38 R37    ; if R38 == R37 then PC := 706
695 [-]: JMP       706          ; PC := 706
696 [-]: GETUPVAL  R38 U12      ; R38 := U12
697 [-]: SETTABLE  R38 K94 R37  ; R38["SpaceMode"] := R37
698 [-]: GETUPVAL  R38 U12      ; R38 := U12
699 [-]: GETUPVAL  R39 U5       ; R39 := U5
700 [-]: GETTABLE  R39 R39 K64  ; R39 := R39["InventoryController"]
701 [-]: SELF      R39 R39 K65  ; R40 := R39; R39 := R39[0xf7d48ee0]
702 [-]: CALL      R39 2 2      ; R39 := R39(R40)
703 [-]: SETTABLE  R38 K61 R39  ; R38["ActivePowerSuit"] := R39
704 [-]: GETUPVAL  R38 U13      ; R38 := U13
705 [-]: SETTABLE  R38 K68 K69  ; R38["CustomAbilities"] := nil
706 [-]: GETGLOBAL R38 K0       ; R38 := 0x7b998233
707 [-]: GETUPVAL  R39 U18      ; R39 := U18
708 [-]: CALL      R38 2 2      ; R38 := R38(R39)
709 [-]: TEST      R38 0        ; if not R38 then PC := 742
710 [-]: JMP       742          ; PC := 742
711 [-]: GETGLOBAL R38 K0       ; R38 := 0x7b998233
712 [-]: GETUPVAL  R39 U5       ; R39 := U5
713 [-]: GETTABLE  R39 R39 K64  ; R39 := R39["InventoryController"]
714 [-]: CALL      R38 2 2      ; R38 := R38(R39)
715 [-]: TEST      R38 1        ; if R38 then PC := 742
716 [-]: JMP       742          ; PC := 742
717 [-]: GETUPVAL  R38 U5       ; R38 := U5
718 [-]: GETTABLE  R38 R38 K64  ; R38 := R38["InventoryController"]
719 [-]: SELF      R38 R38 K92  ; R39 := R38; R38 := R38[0xac03381f]
720 [-]: CALL      R38 2 2      ; R38 := R38(R39)
721 [-]: TEST      R38 1        ; if R38 then PC := 742
722 [-]: JMP       742          ; PC := 742
723 [-]: GETUPVAL  R38 U6       ; R38 := U6
724 [-]: GETTABLE  R38 R38 K20  ; R38 := R38["IsSpectating"]
725 [-]: TEST      R38 1        ; if R38 then PC := 742
726 [-]: JMP       742          ; PC := 742
727 [-]: GETGLOBAL R38 K0       ; R38 := 0x7b998233
728 [-]: GETUPVAL  R39 U5       ; R39 := U5
729 [-]: GETTABLE  R39 R39 K64  ; R39 := R39["InventoryController"]
730 [-]: SELF      R39 R39 K93  ; R40 := R39; R39 := R39[0x2676deee]
731 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
732 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
733 [-]: TEST      R38 1        ; if R38 then PC := 742
734 [-]: JMP       742          ; PC := 742
735 [-]: GETUPVAL  R38 U5       ; R38 := U5
736 [-]: GETTABLE  R38 R38 K64  ; R38 := R38["InventoryController"]
737 [-]: SELF      R38 R38 K93  ; R39 := R38; R38 := R38[0x2676deee]
738 [-]: CALL      R38 2 2      ; R38 := R38(R39)
739 [-]: SETUPVAL  R38 U18      ; U82 := R18
740 [-]: GETUPVAL  R38 U19      ; R38 := U19
741 [-]: CALL      R38 1 1      ; R38()
742 [-]: GETGLOBAL R38 K0       ; R38 := 0x7b998233
743 [-]: GETUPVAL  R39 U5       ; R39 := U5
744 [-]: GETTABLE  R39 R39 K64  ; R39 := R39["InventoryController"]
745 [-]: CALL      R38 2 2      ; R38 := R38(R39)
746 [-]: TEST      R38 0        ; if not R38 then PC := 750
747 [-]: JMP       750          ; PC := 750
748 [-]: LOADKB    R38 0 0      ; R38 := false
749 [-]: RETURN    R38 2        ; return R38
750 [-]: GETUPVAL  R38 U5       ; R38 := U5
751 [-]: GETTABLE  R38 R38 K64  ; R38 := R38["InventoryController"]
752 [-]: SELF      R38 R38 K92  ; R39 := R38; R38 := R38[0xac03381f]
753 [-]: CALL      R38 2 2      ; R38 := R38(R39)
754 [-]: CONST     R39 45       ; R39 := 45.000000
755 [-]: CONST     R40 10       ; R40 := 10.000000
756 [-]: GETUPVAL  R41 U3       ; R41 := U3
757 [-]: SELF      R41 R41 K95  ; R42 := R41; R41 := R41[0xec943d0f]
758 [-]: CALL      R41 2 2      ; R41 := R41(R42)
759 [-]: GETUPVAL  R42 U6       ; R42 := U6
760 [-]: GETTABLE  R42 R42 K96  ; R42 := R42["mSpaceMode"]
761 [-]: EQ        1 R42 R38    ; if R42 == R38 then PC := 866
762 [-]: JMP       866          ; PC := 866
763 [-]: GETGLOBAL R42 K0       ; R42 := 0x7b998233
764 [-]: GETGLOBAL R43 K23      ; R43 := _T
765 [-]: GETTABLE  R43 R43 K24  ; R43 := R43["CommanderMap"]
766 [-]: CALL      R42 2 2      ; R42 := R42(R43)
767 [-]: TEST      R42 0        ; if not R42 then PC := 866
768 [-]: JMP       866          ; PC := 866
769 [-]: GETUPVAL  R42 U6       ; R42 := U6
770 [-]: SETTABLE  R42 K96 R38  ; R42["mSpaceMode"] := R38
771 [-]: GETUPVAL  R42 U6       ; R42 := U6
772 [-]: GETTABLE  R42 R42 K96  ; R42 := R42["mSpaceMode"]
773 [-]: TEST      R42 0        ; if not R42 then PC := 809
774 [-]: JMP       809          ; PC := 809
775 [-]: LOADNIL   R42 R42      ; R42 := nil
776 [-]: SETUPVAL  R42 U18      ; U82 := R18
777 [-]: GETUPVAL  R42 U5       ; R42 := U5
778 [-]: GETTABLE  R42 R42 K64  ; R42 := R42["InventoryController"]
779 [-]: SELF      R42 R42 K97  ; R43 := R42; R42 := R42[0x14027b7e]
780 [-]: CALL      R42 2 2      ; R42 := R42(R43)
781 [-]: TEST      R42 1        ; if R42 then PC := 828
782 [-]: JMP       828          ; PC := 828
783 [-]: TEST      R41 1        ; if R41 then PC := 803
784 [-]: JMP       803          ; PC := 803
785 [-]: GETUPVAL  R42 U3       ; R42 := U3
786 [-]: SELF      R42 R42 K98  ; R43 := R42; R42 := R42[0xeadda4ed]
787 [-]: CONST     R44 150      ; R44 := 150.000000
788 [-]: GETUPVAL  R45 U20      ; R45 := U20
789 [-]: GETTABLE  R45 R45 K99  ; R45 := R45[0x06d055f9]
790 [-]: GETUPVAL  R46 U6       ; R46 := U6
791 [-]: GETTABLE  R46 R46 K96  ; R46 := R46["mSpaceMode"]
792 [-]: CONST     R47 300      ; R47 := 300.000000
793 [-]: MOVE      R48 R40      ; R48 := R40
794 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
795 [-]: CALL      R42 0 1      ; R42(R43,...)
796 [-]: CONST     R39 150      ; R39 := 150.000000
797 [-]: GETUPVAL  R42 U6       ; R42 := U6
798 [-]: GETTABLE  R42 R42 K96  ; R42 := R42["mSpaceMode"]
799 [-]: TEST      R42 0        ; if not R42 then PC := 828
800 [-]: JMP       828          ; PC := 828
801 [-]: CONST     R40 300      ; R40 := 300.000000
802 [-]: JMP       828          ; PC := 828
803 [-]: GETUPVAL  R42 U3       ; R42 := U3
804 [-]: SELF      R42 R42 K98  ; R43 := R42; R42 := R42[0xeadda4ed]
805 [-]: MOVE      R44 R39      ; R44 := R39
806 [-]: MOVE      R45 R40      ; R45 := R40
807 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
808 [-]: JMP       828          ; PC := 828
809 [-]: TEST      R41 1        ; if R41 then PC := 823
810 [-]: JMP       823          ; PC := 823
811 [-]: GETUPVAL  R42 U3       ; R42 := U3
812 [-]: SELF      R42 R42 K98  ; R43 := R42; R42 := R42[0xeadda4ed]
813 [-]: CONST     R44 150      ; R44 := 150.000000
814 [-]: GETUPVAL  R45 U20      ; R45 := U20
815 [-]: GETTABLE  R45 R45 K99  ; R45 := R45[0x06d055f9]
816 [-]: GETUPVAL  R46 U6       ; R46 := U6
817 [-]: GETTABLE  R46 R46 K96  ; R46 := R46["mSpaceMode"]
818 [-]: CONST     R47 300      ; R47 := 300.000000
819 [-]: MOVE      R48 R40      ; R48 := R40
820 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
821 [-]: CALL      R42 0 1      ; R42(R43,...)
822 [-]: JMP       828          ; PC := 828
823 [-]: GETUPVAL  R42 U3       ; R42 := U3
824 [-]: SELF      R42 R42 K98  ; R43 := R42; R42 := R42[0xeadda4ed]
825 [-]: MOVE      R44 R39      ; R44 := R39
826 [-]: MOVE      R45 R40      ; R45 := R40
827 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
828 [-]: GETGLOBAL R42 K0       ; R42 := 0x7b998233
829 [-]: GETGLOBAL R43 K79      ; R43 := 0x0032441c
830 [-]: GETTABLE  R43 R43 K100 ; R43 := R43["UIMovie_ArcWingHudMovie"]
831 [-]: CALL      R42 2 2      ; R42 := R42(R43)
832 [-]: TEST      R42 1        ; if R42 then PC := 866
833 [-]: JMP       866          ; PC := 866
834 [-]: GETGLOBAL R42 K101     ; R42 := 0x9ba7909f
835 [-]: SELF      R42 R42 K102 ; R43 := R42; R42 := R42[0xbcfb64ab]
836 [-]: GETGLOBAL R44 K79      ; R44 := 0x0032441c
837 [-]: GETTABLE  R44 R44 K100 ; R44 := R44["UIMovie_ArcWingHudMovie"]
838 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
839 [-]: GETUPVAL  R43 U6       ; R43 := U6
840 [-]: GETTABLE  R43 R43 K96  ; R43 := R43["mSpaceMode"]
841 [-]: TEST      R43 0        ; if not R43 then PC := 854
842 [-]: JMP       854          ; PC := 854
843 [-]: GETGLOBAL R43 K0       ; R43 := 0x7b998233
844 [-]: MOVE      R44 R42      ; R44 := R42
845 [-]: CALL      R43 2 2      ; R43 := R43(R44)
846 [-]: TEST      R43 0        ; if not R43 then PC := 866
847 [-]: JMP       866          ; PC := 866
848 [-]: GETGLOBAL R43 K101     ; R43 := 0x9ba7909f
849 [-]: SELF      R43 R43 K103 ; R44 := R43; R43 := R43[0x6dd7aa66]
850 [-]: GETGLOBAL R45 K79      ; R45 := 0x0032441c
851 [-]: GETTABLE  R45 R45 K100 ; R45 := R45["UIMovie_ArcWingHudMovie"]
852 [-]: CALL      R43 3 1      ; R43(R44,R45)
853 [-]: JMP       866          ; PC := 866
854 [-]: GETGLOBAL R43 K0       ; R43 := 0x7b998233
855 [-]: MOVE      R44 R42      ; R44 := R42
856 [-]: CALL      R43 2 2      ; R43 := R43(R44)
857 [-]: TEST      R43 1        ; if R43 then PC := 866
858 [-]: JMP       866          ; PC := 866
859 [-]: SELF      R43 R42 K104 ; R44 := R42; R43 := R42[0x32302b4a]
860 [-]: CALL      R43 2 1      ; R43(R44)
861 [-]: GETGLOBAL R43 K5       ; R43 := 0x3d106989
862 [-]: LOADK     R44 K105     ; R44 := "ScopeDebug: Show from HudRedux"
863 [-]: CALL      R43 2 1      ; R43(R44)
864 [-]: GETUPVAL  R43 U21      ; R43 := U21
865 [-]: CALL      R43 1 1      ; R43()
866 [-]: GETUPVAL  R43 U6       ; R43 := U6
867 [-]: GETTABLE  R43 R43 K106 ; R43 := R43["mDistanceFieldMiniMap"]
868 [-]: EQ        1 R41 R43    ; if R41 == R43 then PC := 893
869 [-]: JMP       893          ; PC := 893
870 [-]: GETUPVAL  R43 U6       ; R43 := U6
871 [-]: SETTABLE  R43 K106 R41 ; R43["mDistanceFieldMiniMap"] := R41
872 [-]: GETUPVAL  R43 U6       ; R43 := U6
873 [-]: GETTABLE  R43 R43 K106 ; R43 := R43["mDistanceFieldMiniMap"]
874 [-]: TEST      R43 1        ; if R43 then PC := 888
875 [-]: JMP       888          ; PC := 888
876 [-]: GETUPVAL  R43 U3       ; R43 := U3
877 [-]: SELF      R43 R43 K98  ; R44 := R43; R43 := R43[0xeadda4ed]
878 [-]: CONST     R45 150      ; R45 := 150.000000
879 [-]: GETUPVAL  R46 U20      ; R46 := U20
880 [-]: GETTABLE  R46 R46 K99  ; R46 := R46[0x06d055f9]
881 [-]: GETUPVAL  R47 U6       ; R47 := U6
882 [-]: GETTABLE  R47 R47 K96  ; R47 := R47["mSpaceMode"]
883 [-]: CONST     R48 300      ; R48 := 300.000000
884 [-]: MOVE      R49 R40      ; R49 := R40
885 [-]: CALL      R46 4 0      ; R46,... := R46(R47,R48,R49)
886 [-]: CALL      R43 0 1      ; R43(R44,...)
887 [-]: JMP       893          ; PC := 893
888 [-]: GETUPVAL  R43 U3       ; R43 := U3
889 [-]: SELF      R43 R43 K98  ; R44 := R43; R43 := R43[0xeadda4ed]
890 [-]: MOVE      R45 R39      ; R45 := R39
891 [-]: MOVE      R46 R40      ; R46 := R40
892 [-]: CALL      R43 4 1      ; R43(R44,R45,R46)
893 [-]: GETUPVAL  R43 U22      ; R43 := U22
894 [-]: LEN       R43 R43      ; R43 := # R43
895 [-]: EQ        0 R43 K10    ; if R43 ~= 0.000000 then PC := 912
896 [-]: JMP       912          ; PC := 912
897 [-]: GETGLOBAL R43 K25      ; R43 := 0x89326c93
898 [-]: SELF      R43 R43 K107 ; R44 := R43; R43 := R43[0x7d108ddb]
899 [-]: CALL      R43 2 2      ; R43 := R43(R44)
900 [-]: SETUPVAL  R43 U22      ; U82 := R22
901 [-]: GETUPVAL  R43 U12      ; R43 := U12
902 [-]: NEWTABLE  R44 0 0      ; R44 := {}
903 [-]: SETTABLE  R43 K108 R44 ; R43["PlayerAvatars"] := R44
904 [-]: GETUPVAL  R43 U22      ; R43 := U22
905 [-]: LEN       R43 R43      ; R43 := # R43
906 [-]: EQ        1 R43 K10    ; if R43 == 0.000000 then PC := 912
907 [-]: JMP       912          ; PC := 912
908 [-]: GETGLOBAL R43 K25      ; R43 := 0x89326c93
909 [-]: SELF      R43 R43 K109 ; R44 := R43; R43 := R43[0xb7d33840]
910 [-]: LOADK     R45 K110     ; R45 := "OnPlayersChanged"
911 [-]: CALL      R43 3 1      ; R43(R44,R45)
912 [-]: GETUPVAL  R43 U23      ; R43 := U23
913 [-]: TEST      R43 1        ; if R43 then PC := 921
914 [-]: JMP       921          ; PC := 921
915 [-]: GETGLOBAL R43 K111     ; R43 := 0xe7f2b02f
916 [-]: SELF      R43 R43 K112 ; R44 := R43; R43 := R43[0xe045a641]
917 [-]: LOADK     R45 K113     ; R45 := "HUD_ExternalGameReady"
918 [-]: CALL      R43 3 1      ; R43(R44,R45)
919 [-]: LOADKB    R43 1 0      ; R43 := true
920 [-]: SETUPVAL  R43 U23      ; U82 := R23
921 [-]: LOADKB    R43 1 0      ; R43 := true
922 [-]: RETURN    R43 2        ; return R43
923 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 3223
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0ea73276]
  3 [-]: LOADK     R2 K2        ; R2 := "VIEW_RAILJACK_SYSTEMS_MENU"
  4 [-]: LOADKB    R3 0 0       ; R3 := false
  5 [-]: LOADNIL   R4 R4        ; R4 := nil
  6 [-]: LOADKB    R5 1 0       ; R5 := true
  7 [-]: LOADKB    R6 0 0       ; R6 := false
  8 [-]: CALL      R0 7 2       ; R0 := R0(R1,R2,R3,R4,R5,R6)
  9 [-]: LOADK     R1 K3        ; R1 := ""
 10 [-]: LEN       R2 R0        ; R2 := # R0
 11 [-]: LT        0 K4 R2      ; if 0.000000 >= R2 then PC := 30
 12 [-]: JMP       30           ; PC := 30
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 14 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x42b04007]
 15 [-]: LOADK     R4 K7        ; R4 := "<"
 16 [-]: GETTABLE  R5 R0 K8     ; R5 := R0[1.000000]
 17 [-]: LOADK     R6 K9        ; R6 := ">"
 18 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 19 [-]: LOADKB    R5 1 0       ; R5 := true
 20 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 21 [-]: LOADK     R3 K10       ; R3 := " "
 22 [-]: GETGLOBAL R4 K11       ; R4 := 0x5f0788c4
 23 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 24 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x42b04007]
 25 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Language/CrewShip/CommandConsole_Tactical"
 26 [-]: LOADKB    R8 0 0       ; R8 := false
 27 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 28 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 29 [-]: CONCAT    R1 R2 R4     ; R1 := R2 .. R3 .. R4
 30 [-]: GETGLOBAL R2 K13       ; R2 := 0xbe190284
 31 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xbcb03142]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 65
 34 [-]: JMP       65           ; PC := 65
 35 [-]: GETGLOBAL R2 K0        ; R2 := 0x9ba7909f
 36 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x0ea73276]
 37 [-]: LOADK     R4 K15       ; R4 := "EQUIP_RAILJACK_REPAIR_TOOL_MENU"
 38 [-]: LOADKB    R5 0 0       ; R5 := false
 39 [-]: LOADNIL   R6 R6        ; R6 := nil
 40 [-]: LOADKB    R7 1 0       ; R7 := true
 41 [-]: LOADKB    R8 0 0       ; R8 := false
 42 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 43 [-]: LEN       R3 R2        ; R3 := # R2
 44 [-]: LT        0 K4 R3      ; if 0.000000 >= R3 then PC := 65
 45 [-]: JMP       65           ; PC := 65
 46 [-]: MOVE      R3 R1        ; R3 := R1
 47 [-]: LOADK     R4 K10       ; R4 := " "
 48 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 49 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x42b04007]
 50 [-]: LOADK     R7 K7        ; R7 := "<"
 51 [-]: GETTABLE  R8 R2 K8     ; R8 := R2[1.000000]
 52 [-]: LOADK     R9 K9        ; R9 := ">"
 53 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 54 [-]: LOADKB    R8 1 0       ; R8 := true
 55 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 56 [-]: LOADK     R6 K10       ; R6 := " "
 57 [-]: GETGLOBAL R7 K11       ; R7 := 0x5f0788c4
 58 [-]: GETGLOBAL R8 K5        ; R8 := 0xae91e43b
 59 [-]: SELF      R8 R8 K6     ; R9 := R8; R8 := R8[0x42b04007]
 60 [-]: LOADK     R10 K16      ; R10 := "/Lotus/Language/Railjack/RepairToolName"
 61 [-]: LOADKB    R11 0 0      ; R11 := false
 62 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 63 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 64 [-]: CONCAT    R1 R3 R7     ; R1 := R3 .. R4 .. R5 .. R6 .. R7
 65 [-]: RETURN    R1 2         ; return R1
 66 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 3240
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0xa5c556b9]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := "_KBM"
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 45
  7 [-]: JMP       45           ; PC := 45
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x34291f5c
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x1467d5f4]
 10 [-]: CALL      R1 1 2       ; R1 := R1()
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x34291f5c
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x9ad21ae9]
 13 [-]: CALL      R2 1 2       ; R2 := R2()
 14 [-]: TEST      R2 1         ; if R2 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R2 K3        ; R2 := 0x34291f5c
 17 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x86647daf]
 18 [-]: CALL      R2 1 2       ; R2 := R2()
 19 [-]: TEST      R2 1         ; if R2 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETGLOBAL R2 K3        ; R2 := 0x34291f5c
 22 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0xc84fa15a]
 23 [-]: CALL      R2 1 2       ; R2 := R2()
 24 [-]: TEST      R2 0         ; if not R2 then PC := 36
 25 [-]: JMP       36           ; PC := 36
 26 [-]: TEST      R1 0         ; if not R1 then PC := 45
 27 [-]: JMP       45           ; PC := 45
 28 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
 29 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x66edf04f]
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: LOADK     R5 K2        ; R5 := "_KBM"
 32 [-]: LOADK     R6 K9        ; R6 := "_Controller"
 33 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 34 [-]: MOVE      R0 R3        ; R0 := R3
 35 [-]: JMP       45           ; PC := 45
 36 [-]: TEST      R1 0         ; if not R1 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
 39 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x66edf04f]
 40 [-]: MOVE      R4 R0        ; R4 := R0
 41 [-]: LOADK     R5 K2        ; R5 := "_KBM"
 42 [-]: LOADK     R6 K9        ; R6 := "_Controller"
 43 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 44 [-]: MOVE      R0 R3        ; R0 := R3
 45 [-]: RETURN    R0 2         ; return R0
 46 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 3255
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["A"]
  3 [-]: SETTABLE  R0 K1 K2     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_0"
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["X"]
  6 [-]: SETTABLE  R0 K1 K4     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_1"
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["B"]
  9 [-]: SETTABLE  R0 K1 K6     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_2"
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["Y"]
 12 [-]: SETTABLE  R0 K1 K8     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_3"
 13 [-]: GETGLOBAL R0 K9        ; R0 := 0x76ea806b
 14 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x8792aaab]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 79
 17 [-]: JMP       79           ; PC := 79
 18 [-]: NEWTABLE  R0 4 0       ; R0 := {}
 19 [-]: LOADK     R1 K2        ; R1 := "ACTIVATE_ABILITY_MENU_0"
 20 [-]: LOADK     R2 K4        ; R2 := "ACTIVATE_ABILITY_MENU_1"
 21 [-]: LOADK     R3 K6        ; R3 := "ACTIVATE_ABILITY_MENU_2"
 22 [-]: LOADK     R4 K8        ; R4 := "ACTIVATE_ABILITY_MENU_3"
 23 [-]: SETLIST   R0 4 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 4
 24 [-]: GETGLOBAL R1 K11       ; R1 := 0xc8802016
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: JMP       77           ; PC := 77
 28 [-]: GETUPVAL  R6 U1        ; R6 := U1
 29 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0x8fa32637]
 30 [-]: MOVE      R8 R5        ; R8 := R5
 31 [-]: LOADKB    R9 0 0       ; R9 := false
 32 [-]: GETGLOBAL R10 K13      ; R10 := 0xa94df70b
 33 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10[0xaa3c124f]
 34 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 35 [-]: GETGLOBAL R11 K15      ; R11 := 0xd2d76b4d
 36 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 37 [-]: EQ        0 R6 K16     ; if R6 ~= "" then PC := 54
 38 [-]: JMP       54           ; PC := 54
 39 [-]: GETGLOBAL R7 K17       ; R7 := 0x9ba7909f
 40 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0xa50d1a6a]
 41 [-]: MOVE      R9 R5        ; R9 := R5
 42 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 43 [-]: GETUPVAL  R8 U1        ; R8 := U1
 44 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8[0x4ab77446]
 45 [-]: MOVE      R10 R7       ; R10 := R7
 46 [-]: GETGLOBAL R11 K13      ; R11 := 0xa94df70b
 47 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0xaa3c124f]
 48 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 49 [-]: GETGLOBAL R12 K15      ; R12 := 0xd2d76b4d
 50 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 51 [-]: TEST      R8 1         ; if R8 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: MOVE      R6 R7        ; R6 := R7
 54 [-]: EQ        0 R6 K20     ; if R6 ~= "GAMEPAD_X" then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETUPVAL  R8 U0        ; R8 := U0
 57 [-]: GETTABLE  R8 R8 K0     ; R8 := R8["A"]
 58 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 59 [-]: JMP       77           ; PC := 77
 60 [-]: EQ        0 R6 K21     ; if R6 ~= "GAMEPAD_SQUARE" then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETUPVAL  R8 U0        ; R8 := U0
 63 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["X"]
 64 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 65 [-]: JMP       77           ; PC := 77
 66 [-]: EQ        0 R6 K22     ; if R6 ~= "GAMEPAD_CIRCLE" then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: GETUPVAL  R8 U0        ; R8 := U0
 69 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["B"]
 70 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 71 [-]: JMP       77           ; PC := 77
 72 [-]: EQ        0 R6 K23     ; if R6 ~= "GAMEPAD_TRIANGLE" then PC := 77
 73 [-]: JMP       77           ; PC := 77
 74 [-]: GETUPVAL  R8 U0        ; R8 := U0
 75 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Y"]
 76 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 77 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
 78 [-]: JMP       28           ; PC := 28
 79 [-]: LOADK     R8 K24       ; R8 := "AbilityPanel"
 80 [-]: GETGLOBAL R9 K25       ; R9 := 0xe72d2edb
 81 [-]: EQ        0 R9 K27     ; if R9 ~= 1.000000 then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: LOADK     R8 K28       ; R8 := "GrineerAbilityPanel"
 84 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
 85 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x20b98db3]
 86 [-]: MOVE      R11 R8       ; R11 := R8
 87 [-]: LOADK     R12 K31      ; R12 := ".ControllerCastingButtons.AButton.text"
 88 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 89 [-]: LOADK     R12 K32      ; R12 := "<GAMEPAD_X>"
 90 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 91 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
 92 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x20b98db3]
 93 [-]: MOVE      R11 R8       ; R11 := R8
 94 [-]: LOADK     R12 K33      ; R12 := ".ControllerCastingButtons.BButton.text"
 95 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 96 [-]: LOADK     R12 K34      ; R12 := "<GAMEPAD_CIRCLE>"
 97 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 98 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
 99 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x20b98db3]
100 [-]: MOVE      R11 R8       ; R11 := R8
101 [-]: LOADK     R12 K35      ; R12 := ".ControllerCastingButtons.XButton.text"
102 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
103 [-]: LOADK     R12 K36      ; R12 := "<GAMEPAD_SQUARE>"
104 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
105 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
106 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x20b98db3]
107 [-]: MOVE      R11 R8       ; R11 := R8
108 [-]: LOADK     R12 K37      ; R12 := ".ControllerCastingButtons.YButton.text"
109 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
110 [-]: LOADK     R12 K38      ; R12 := "<GAMEPAD_TRIANGLE>"
111 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
112 [-]: GETGLOBAL R9 K29       ; R9 := 0xae91e43b
113 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9[0x20b98db3]
114 [-]: MOVE      R11 R8       ; R11 := R8
115 [-]: LOADK     R12 K39      ; R12 := ".FocusButton.text"
116 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
117 [-]: LOADK     R12 K40      ; R12 := "<ACTIVATE_ABILITY_MENU_4>"
118 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
119 [-]: GETUPVAL  R9 U2        ; R9 := U2
120 [-]: CALL      R9 1 2       ; R9 := R9()
121 [-]: GETGLOBAL R10 K29      ; R10 := 0xae91e43b
122 [-]: SELF      R10 R10 K41  ; R11 := R10; R10 := R10[0xe261aa96]
123 [-]: MOVE      R12 R8       ; R12 := R8
124 [-]: LOADK     R13 K42      ; R13 := "TacticalCallout"
125 [-]: CONST     R14 29       ; R14 := 29.000000
126 [-]: MOVE      R15 R9       ; R15 := R9
127 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
128 [-]: GETGLOBAL R10 K29      ; R10 := 0xae91e43b
129 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10[0xf64b7262]
130 [-]: MOVE      R12 R8       ; R12 := R8
131 [-]: LOADK     R13 K44      ; R13 := "ControllerCastingButtons"
132 [-]: CONST     R14 10       ; R14 := 10.000000
133 [-]: CONST     R15 0        ; R15 := 0.000000
134 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
135 [-]: GETGLOBAL R10 K29      ; R10 := 0xae91e43b
136 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10[0xf64b7262]
137 [-]: MOVE      R12 R8       ; R12 := R8
138 [-]: LOADK     R13 K45      ; R13 := "ControllerCastingImage"
139 [-]: CONST     R14 10       ; R14 := 10.000000
140 [-]: CONST     R15 0        ; R15 := 0.000000
141 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
142 [-]: GETGLOBAL R10 K29      ; R10 := 0xae91e43b
143 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10[0xf64b7262]
144 [-]: MOVE      R12 R8       ; R12 := R8
145 [-]: LOADK     R13 K42      ; R13 := "TacticalCallout"
146 [-]: CONST     R14 10       ; R14 := 10.000000
147 [-]: CONST     R15 0        ; R15 := 0.000000
148 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
149 [-]: GETGLOBAL R10 K29      ; R10 := 0xae91e43b
150 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10[0xf64b7262]
151 [-]: MOVE      R12 R8       ; R12 := R8
152 [-]: LOADK     R13 K46      ; R13 := "FocusButton"
153 [-]: CONST     R14 10       ; R14 := 10.000000
154 [-]: CONST     R15 0        ; R15 := 0.000000
155 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
156 [-]: GETUPVAL  R10 U3       ; R10 := U3
157 [-]: EQ        1 R10 K47    ; if R10 == nil then PC := 263
158 [-]: JMP       263          ; PC := 263
159 [-]: GETUPVAL  R10 U4       ; R10 := U4
160 [-]: EQ        1 R10 K47    ; if R10 == nil then PC := 171
161 [-]: JMP       171          ; PC := 171
162 [-]: GETUPVAL  R10 U4       ; R10 := U4
163 [-]: GETTABLE  R10 R10 K48  ; R10 := R10["mImpactMessageFrame"]
164 [-]: EQ        0 R10 K49    ; if R10 ~= 4.000000 then PC := 171
165 [-]: JMP       171          ; PC := 171
166 [-]: GETUPVAL  R10 U4       ; R10 := U4
167 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["ActiveImpactMessage"]
168 [-]: EQ        0 R10 K47    ; if R10 ~= nil then PC := 171
169 [-]: JMP       171          ; PC := 171
170 [-]: LOADKB    R10 0 1      ; R10 := false; PC := 171
171 [-]: LOADKB    R10 1 0      ; R10 := true
172 [-]: TEST      R10 0        ; if not R10 then PC := 263
173 [-]: JMP       263          ; PC := 263
174 [-]: LOADK     R11 K16      ; R11 := ""
175 [-]: GETUPVAL  R12 U3       ; R12 := U3
176 [-]: GETTABLE  R12 R12 K51  ; R12 := R12["Message"]
177 [-]: GETGLOBAL R13 K52      ; R13 := 0x0b96777e
178 [-]: MOVE      R14 R12      ; R14 := R12
179 [-]: CALL      R13 2 2      ; R13 := R13(R14)
180 [-]: EQ        0 R13 K53    ; if R13 ~= "function" then PC := 185
181 [-]: JMP       185          ; PC := 185
182 [-]: MOVE      R13 R12      ; R13 := R12
183 [-]: CALL      R13 1 2      ; R13 := R13()
184 [-]: MOVE      R12 R13      ; R12 := R13
185 [-]: GETUPVAL  R13 U5       ; R13 := U5
186 [-]: MOVE      R14 R12      ; R14 := R12
187 [-]: CALL      R13 2 2      ; R13 := R13(R14)
188 [-]: MOVE      R12 R13      ; R12 := R13
189 [-]: GETUPVAL  R13 U3       ; R13 := U3
190 [-]: GETTABLE  R13 R13 K54  ; R13 := R13["InputFilter"]
191 [-]: GETGLOBAL R14 K55      ; R14 := 0x7b998233
192 [-]: MOVE      R15 R13      ; R15 := R13
193 [-]: CALL      R14 2 2      ; R14 := R14(R15)
194 [-]: TEST      R14 1        ; if R14 then PC := 220
195 [-]: JMP       220          ; PC := 220
196 [-]: GETGLOBAL R14 K29      ; R14 := 0xae91e43b
197 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14[0x54f5d6ad]
198 [-]: MOVE      R16 R12      ; R16 := R12
199 [-]: MOVE      R17 R13      ; R17 := R13
200 [-]: GETUPVAL  R18 U3       ; R18 := U3
201 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["Params"]
202 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
203 [-]: MOVE      R11 R14      ; R11 := R14
204 [-]: GETGLOBAL R14 K58      ; R14 := 0x7f5022cf
205 [-]: GETTABLE  R14 R14 K59  ; R14 := R14[0xa5c556b9]
206 [-]: MOVE      R15 R11      ; R15 := R11
207 [-]: LOADK     R16 K60      ; R16 := "<[%u%d_]+>"
208 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
209 [-]: TEST      R14 0        ; if not R14 then PC := 228
210 [-]: JMP       228          ; PC := 228
211 [-]: GETGLOBAL R14 K29      ; R14 := 0xae91e43b
212 [-]: SELF      R14 R14 K61  ; R15 := R14; R14 := R14[0x42b04007]
213 [-]: MOVE      R16 R12      ; R16 := R12
214 [-]: LOADKB    R17 1 0      ; R17 := true
215 [-]: GETUPVAL  R18 U3       ; R18 := U3
216 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["Params"]
217 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
218 [-]: MOVE      R11 R14      ; R11 := R14
219 [-]: JMP       228          ; PC := 228
220 [-]: GETGLOBAL R14 K29      ; R14 := 0xae91e43b
221 [-]: SELF      R14 R14 K61  ; R15 := R14; R14 := R14[0x42b04007]
222 [-]: MOVE      R16 R12      ; R16 := R12
223 [-]: LOADKB    R17 1 0      ; R17 := true
224 [-]: GETUPVAL  R18 U3       ; R18 := U3
225 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["Params"]
226 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
227 [-]: MOVE      R11 R14      ; R11 := R14
228 [-]: GETGLOBAL R14 K29      ; R14 := 0xae91e43b
229 [-]: SELF      R14 R14 K62  ; R15 := R14; R14 := R14[0x5f56eeab]
230 [-]: LOADK     R16 K63      ; R16 := "ImpactMessage.Label"
231 [-]: CONST     R17 29       ; R17 := 29.000000
232 [-]: MOVE      R18 R11      ; R18 := R11
233 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
234 [-]: GETUPVAL  R14 U4       ; R14 := U4
235 [-]: EQ        1 R14 K47    ; if R14 == nil then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETUPVAL  R14 U4       ; R14 := U4
238 [-]: GETTABLE  R14 R14 K48  ; R14 := R14["mImpactMessageFrame"]
239 [-]: EQ        1 R14 K49    ; if R14 == 4.000000 then PC := 263
240 [-]: JMP       263          ; PC := 263
241 [-]: GETGLOBAL R14 K29      ; R14 := 0xae91e43b
242 [-]: SELF      R14 R14 K64  ; R15 := R14; R14 := R14[0x67bc869f]
243 [-]: LOADK     R16 K65      ; R16 := "ImpactMessage.Bg"
244 [-]: CONST     R17 12       ; R17 := 12.000000
245 [-]: GETGLOBAL R18 K29      ; R18 := 0xae91e43b
246 [-]: SELF      R18 R18 K66  ; R19 := R18; R18 := R18[0x91a24e4b]
247 [-]: LOADK     R20 K63      ; R20 := "ImpactMessage.Label"
248 [-]: CONST     R21 33       ; R21 := 33.000000
249 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
250 [-]: ADD       R18 R18 K67  ; R18 := R18 + 20.000000
251 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
252 [-]: GETGLOBAL R14 K29      ; R14 := 0xae91e43b
253 [-]: SELF      R14 R14 K64  ; R15 := R14; R14 := R14[0x67bc869f]
254 [-]: LOADK     R16 K65      ; R16 := "ImpactMessage.Bg"
255 [-]: CONST     R17 13       ; R17 := 13.000000
256 [-]: GETGLOBAL R18 K29      ; R18 := 0xae91e43b
257 [-]: SELF      R18 R18 K66  ; R19 := R18; R18 := R18[0x91a24e4b]
258 [-]: LOADK     R20 K63      ; R20 := "ImpactMessage.Label"
259 [-]: CONST     R21 34       ; R21 := 34.000000
260 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
261 [-]: ADD       R18 R18 K68  ; R18 := R18 + 8.000000
262 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
263 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 3331
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: CONST     R0 0         ; R0 := 0.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x67652851
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mScreenDuck"]
  6 [-]: LT        0 K2 R2      ; if 0.000000 >= R2 then PC := 33
  7 [-]: JMP       33           ; PC := 33
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETGLOBAL R3 K3        ; R3 := 0x5bced4c4
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0xb62ecfe0]
 11 [-]: CONST     R4 0         ; R4 := 0.000000
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["mScreenDuck"]
 14 [-]: MUL       R6 R1 K5     ; R6 := R1 * 0.500000
 15 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: SETTABLE  R2 K1 R3     ; R2["mScreenDuck"] := R3
 18 [-]: CONST     R0 0         ; R0 := 0.000000
 19 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xc6a10ab1]
 21 [-]: CONST     R4 0         ; R4 := 0.000000
 22 [-]: CALL      R2 3 1       ; R2(R3,R4)
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x58bec6d6]
 25 [-]: GETGLOBAL R4 K3        ; R4 := 0x5bced4c4
 26 [-]: GETTABLE  R4 R4 K9     ; R4 := R4[0xac1b386a]
 27 [-]: CONST     R5 1         ; R5 := 1.000000
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["mScreenDuck"]
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: MUL       R4 R4 K10    ; R4 := R4 * 0.800000
 32 [-]: CALL      R2 3 1       ; R2(R3,R4)
 33 [-]: GETGLOBAL R2 K11       ; R2 := _T
 34 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["TopMenuOpen"]
 35 [-]: TEST      R2 0         ; if not R2 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: CONST     R0 1         ; R0 := 1.000000
 38 [-]: GETUPVAL  R2 U1        ; R2 := U1
 39 [-]: SETTABLE  R2 K12 K13   ; R2["TopMenuOpen"] := true
 40 [-]: JMP       49           ; PC := 49
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["TopMenuOpen"]
 43 [-]: TEST      R2 0         ; if not R2 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETUPVAL  R2 U2        ; R2 := U2
 46 [-]: CALL      R2 1 1       ; R2()
 47 [-]: GETUPVAL  R2 U1        ; R2 := U1
 48 [-]: SETTABLE  R2 K12 K14   ; R2["TopMenuOpen"] := false
 49 [-]: GETUPVAL  R2 U3        ; R2 := U3
 50 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["PhotoBooth"]
 51 [-]: TEST      R2 0         ; if not R2 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: CONST     R0 1         ; R0 := 1.000000
 54 [-]: GETGLOBAL R2 K11       ; R2 := _T
 55 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["SettingsVisible"]
 56 [-]: TEST      R2 0         ; if not R2 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: CONST     R0 1         ; R0 := 1.000000
 59 [-]: GETGLOBAL R2 K11       ; R2 := _T
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["HideHud"]
 61 [-]: EQ        1 R2 K18     ; if R2 == nil then PC := 68
 62 [-]: JMP       68           ; PC := 68
 63 [-]: GETGLOBAL R2 K11       ; R2 := _T
 64 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["HideHud"]
 65 [-]: LT        0 K2 R2      ; if 0.000000 >= R2 then PC := 68
 66 [-]: JMP       68           ; PC := 68
 67 [-]: CONST     R0 1         ; R0 := 1.000000
 68 [-]: GETGLOBAL R2 K19       ; R2 := 0x89326c93
 69 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2[0xdd25e9d1]
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: TEST      R2 0         ; if not R2 then PC := 81
 72 [-]: JMP       81           ; PC := 81
 73 [-]: GETGLOBAL R2 K19       ; R2 := 0x89326c93
 74 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2[0xdd25e9d1]
 75 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 76 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0x45fce6aa]
 77 [-]: GETUPVAL  R4 U4        ; R4 := U4
 78 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 79 [-]: TEST      R2 0         ; if not R2 then PC := 91
 80 [-]: JMP       91           ; PC := 91
 81 [-]: GETGLOBAL R2 K22       ; R2 := 0x7b998233
 82 [-]: GETUPVAL  R3 U5        ; R3 := U5
 83 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 84 [-]: TEST      R2 1         ; if R2 then PC := 92
 85 [-]: JMP       92           ; PC := 92
 86 [-]: GETUPVAL  R2 U5        ; R2 := U5
 87 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2[0x0ffec0b9]
 88 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 89 [-]: TEST      R2 0         ; if not R2 then PC := 92
 90 [-]: JMP       92           ; PC := 92
 91 [-]: CONST     R0 1         ; R0 := 1.000000
 92 [-]: GETUPVAL  R2 U1        ; R2 := U1
 93 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["WaitingForProgressMovie"]
 94 [-]: TEST      R2 0         ; if not R2 then PC := 107
 95 [-]: JMP       107          ; PC := 107
 96 [-]: GETGLOBAL R2 K25       ; R2 := 0x9ba7909f
 97 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2[0x5374b92e]
 98 [-]: GETGLOBAL R4 K27       ; R4 := 0x82fd6cc3
 99 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
100 [-]: TEST      R2 1         ; if R2 then PC := 105
101 [-]: JMP       105          ; PC := 105
102 [-]: GETUPVAL  R2 U1        ; R2 := U1
103 [-]: SETTABLE  R2 K24 K14   ; R2["WaitingForProgressMovie"] := false
104 [-]: JMP       116          ; PC := 116
105 [-]: CONST     R0 1         ; R0 := 1.000000
106 [-]: JMP       116          ; PC := 116
107 [-]: GETGLOBAL R2 K11       ; R2 := _T
108 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["SpectatorHudOpen"]
109 [-]: TEST      R2 1         ; if R2 then PC := 115
110 [-]: JMP       115          ; PC := 115
111 [-]: GETGLOBAL R2 K11       ; R2 := _T
112 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["PVPScoreBoardOpen"]
113 [-]: TEST      R2 0         ; if not R2 then PC := 116
114 [-]: JMP       116          ; PC := 116
115 [-]: CONST     R0 1         ; R0 := 1.000000
116 [-]: GETUPVAL  R2 U0        ; R2 := U0
117 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["IsAlternateHud"]
118 [-]: TEST      R2 0         ; if not R2 then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: CONST     R0 1         ; R0 := 1.000000
121 [-]: GETGLOBAL R2 K11       ; R2 := _T
122 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["MinimalHud"]
123 [-]: TEST      R2 0         ; if not R2 then PC := 126
124 [-]: JMP       126          ; PC := 126
125 [-]: CONST     R0 1         ; R0 := 1.000000
126 [-]: GETUPVAL  R2 U1        ; R2 := U1
127 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["Fade"]
128 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 153
129 [-]: JMP       153          ; PC := 153
130 [-]: GETGLOBAL R2 K11       ; R2 := _T
131 [-]: GETTABLE  R2 R2 K33    ; R2 := R2["UpdateHudFadeValue"]
132 [-]: EQ        0 R2 K18     ; if R2 ~= nil then PC := 153
133 [-]: JMP       153          ; PC := 153
134 [-]: GETGLOBAL R2 K34       ; R2 := 0xcfc01047
135 [-]: GETUPVAL  R3 U6        ; R3 := U6
136 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["Interpolating"]
137 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
138 [-]: JMP       150          ; PC := 150
139 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
140 [-]: SELF      R7 R7 K36    ; R8 := R7; R7 := R7[0xbf8f0712]
141 [-]: MOVE      R9 R5        ; R9 := R5
142 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
143 [-]: TEST      R7 1         ; if R7 then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: GETUPVAL  R7 U6        ; R7 := U6
146 [-]: GETTABLE  R7 R7 K35    ; R7 := R7["Interpolating"]
147 [-]: SETTABLE  R7 R5 K18    ; R7[R5] := nil
148 [-]: GETGLOBAL R7 K11       ; R7 := _T
149 [-]: SETTABLE  R7 K33 K13   ; R7["UpdateHudFadeValue"] := true
150 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 139; R4 := R5 end
151 [-]: JMP       139          ; PC := 139
152 [-]: JMP       156          ; PC := 156
153 [-]: GETUPVAL  R7 U6        ; R7 := U6
154 [-]: NEWTABLE  R8 0 0       ; R8 := {}
155 [-]: SETTABLE  R7 K35 R8    ; R7["Interpolating"] := R8
156 [-]: GETUPVAL  R7 U0        ; R7 := U0
157 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["RootInitialized"]
158 [-]: TEST      R7 1         ; if R7 then PC := 172
159 [-]: JMP       172          ; PC := 172
160 [-]: GETUPVAL  R7 U0        ; R7 := U0
161 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["IsAlternateHud"]
162 [-]: TEST      R7 0         ; if not R7 then PC := 170
163 [-]: JMP       170          ; PC := 170
164 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
165 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7[0x67bc869f]
166 [-]: LOADK     R9 K39       ; R9 := "_root"
167 [-]: CONST     R10 10       ; R10 := 10.000000
168 [-]: CONST     R11 100      ; R11 := 100.000000
169 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
170 [-]: GETUPVAL  R7 U0        ; R7 := U0
171 [-]: SETTABLE  R7 K37 K13   ; R7["RootInitialized"] := true
172 [-]: GETUPVAL  R7 U1        ; R7 := U1
173 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["Fade"]
174 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 180
175 [-]: JMP       180          ; PC := 180
176 [-]: GETGLOBAL R7 K11       ; R7 := _T
177 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["UpdateHudFadeValue"]
178 [-]: TEST      R7 0         ; if not R7 then PC := 424
179 [-]: JMP       424          ; PC := 424
180 [-]: GETUPVAL  R7 U1        ; R7 := U1
181 [-]: SETTABLE  R7 K32 R0    ; R7["Fade"] := R0
182 [-]: GETGLOBAL R7 K11       ; R7 := _T
183 [-]: SETTABLE  R7 K33 K18   ; R7["UpdateHudFadeValue"] := nil
184 [-]: GETGLOBAL R7 K40       ; R7 := 0x7fa0b32a
185 [-]: MOVE      R8 R0        ; R8 := R0
186 [-]: CALL      R7 2 2       ; R7 := R7(R8)
187 [-]: SUB       R7 K41 R7    ; R7 := 1.000000 - R7
188 [-]: MUL       R7 R7 K42    ; R7 := R7 * 100.000000
189 [-]: GETGLOBAL R8 K43       ; R8 := 0x4ec73e73
190 [-]: GETUPVAL  R9 U6        ; R9 := U6
191 [-]: GETTABLE  R9 R9 K44    ; R9 := R9["Faded"]
192 [-]: CALL      R8 2 2       ; R8 := R8(R9)
193 [-]: EQ        1 R8 K18     ; if R8 == nil then PC := 196
194 [-]: JMP       196          ; PC := 196
195 [-]: LOADKB    R8 0 1       ; R8 := false; PC := 196
196 [-]: LOADKB    R8 1 0       ; R8 := true
197 [-]: GETUPVAL  R9 U6        ; R9 := U6
198 [-]: GETTABLE  R9 R9 K45    ; R9 := R9["Enabled"]
199 [-]: TEST      R9 1         ; if R9 then PC := 256
200 [-]: JMP       256          ; PC := 256
201 [-]: TEST      R8 0         ; if not R8 then PC := 256
202 [-]: JMP       256          ; PC := 256
203 [-]: GETGLOBAL R9 K11       ; R9 := _T
204 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["MinimalHud"]
205 [-]: TEST      R9 1         ; if R9 then PC := 256
206 [-]: JMP       256          ; PC := 256
207 [-]: GETUPVAL  R9 U0        ; R9 := U0
208 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["IsAlternateHud"]
209 [-]: TEST      R9 1         ; if R9 then PC := 256
210 [-]: JMP       256          ; PC := 256
211 [-]: GETGLOBAL R9 K11       ; R9 := _T
212 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["SpectatorHudOpen"]
213 [-]: TEST      R9 1         ; if R9 then PC := 256
214 [-]: JMP       256          ; PC := 256
215 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
216 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9[0x67bc869f]
217 [-]: LOADK     R11 K39      ; R11 := "_root"
218 [-]: CONST     R12 10       ; R12 := 10.000000
219 [-]: MOVE      R13 R7       ; R13 := R7
220 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
221 [-]: GETUPVAL  R9 U0        ; R9 := U0
222 [-]: GETTABLE  R9 R9 K46    ; R9 := R9["UIMode"]
223 [-]: GETUPVAL  R10 U7       ; R10 := U7
224 [-]: GETTABLE  R10 R10 K47  ; R10 := R10["UI_MODE_IN_DOJO"]
225 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 238
226 [-]: JMP       238          ; PC := 238
227 [-]: GETGLOBAL R9 K25       ; R9 := 0x9ba7909f
228 [-]: SELF      R9 R9 K48    ; R10 := R9; R9 := R9[0xbcfb64ab]
229 [-]: GETGLOBAL R11 K49      ; R11 := 0xe35e5527
230 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
231 [-]: TEST      R9 0         ; if not R9 then PC := 238
232 [-]: JMP       238          ; PC := 238
233 [-]: SELF      R10 R9 K38   ; R11 := R9; R10 := R9[0x67bc869f]
234 [-]: LOADK     R12 K39      ; R12 := "_root"
235 [-]: CONST     R13 10       ; R13 := 10.000000
236 [-]: MOVE      R14 R7       ; R14 := R7
237 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
238 [-]: GETGLOBAL R10 K22      ; R10 := 0x7b998233
239 [-]: GETUPVAL  R11 U8       ; R11 := U8
240 [-]: CALL      R10 2 2      ; R10 := R10(R11)
241 [-]: TEST      R10 1        ; if R10 then PC := 420
242 [-]: JMP       420          ; PC := 420
243 [-]: GETUPVAL  R10 U8       ; R10 := U8
244 [-]: SELF      R10 R10 K50  ; R11 := R10; R10 := R10[0x603d617e]
245 [-]: CALL      R10 2 2      ; R10 := R10(R11)
246 [-]: GETGLOBAL R11 K22      ; R11 := 0x7b998233
247 [-]: MOVE      R12 R10      ; R12 := R10
248 [-]: CALL      R11 2 2      ; R11 := R11(R12)
249 [-]: TEST      R11 1        ; if R11 then PC := 420
250 [-]: JMP       420          ; PC := 420
251 [-]: SELF      R11 R10 K51  ; R12 := R10; R11 := R10[0xe4162eed]
252 [-]: LOADK     R13 K52      ; R13 := "FadeAlpha"
253 [-]: MOVE      R14 R7       ; R14 := R7
254 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
255 [-]: JMP       420          ; PC := 420
256 [-]: TEST      R8 0         ; if not R8 then PC := 281
257 [-]: JMP       281          ; PC := 281
258 [-]: GETGLOBAL R11 K6       ; R11 := 0xae91e43b
259 [-]: SELF      R11 R11 K38  ; R12 := R11; R11 := R11[0x67bc869f]
260 [-]: LOADK     R13 K39      ; R13 := "_root"
261 [-]: CONST     R14 10       ; R14 := 10.000000
262 [-]: CONST     R15 100      ; R15 := 100.000000
263 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
264 [-]: GETGLOBAL R11 K22      ; R11 := 0x7b998233
265 [-]: GETUPVAL  R12 U8       ; R12 := U8
266 [-]: CALL      R11 2 2      ; R11 := R11(R12)
267 [-]: TEST      R11 1        ; if R11 then PC := 281
268 [-]: JMP       281          ; PC := 281
269 [-]: GETUPVAL  R11 U8       ; R11 := U8
270 [-]: SELF      R11 R11 K50  ; R12 := R11; R11 := R11[0x603d617e]
271 [-]: CALL      R11 2 2      ; R11 := R11(R12)
272 [-]: GETGLOBAL R12 K22      ; R12 := 0x7b998233
273 [-]: MOVE      R13 R11      ; R13 := R11
274 [-]: CALL      R12 2 2      ; R12 := R12(R13)
275 [-]: TEST      R12 1        ; if R12 then PC := 281
276 [-]: JMP       281          ; PC := 281
277 [-]: SELF      R12 R11 K51  ; R13 := R11; R12 := R11[0xe4162eed]
278 [-]: LOADK     R14 K52      ; R14 := "FadeAlpha"
279 [-]: MOVE      R15 R7       ; R15 := R7
280 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
281 [-]: GETGLOBAL R12 K53      ; R12 := 0xc8802016
282 [-]: GETUPVAL  R13 U6       ; R13 := U6
283 [-]: GETTABLE  R13 R13 K54  ; R13 := R13["Clips"]
284 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
285 [-]: JMP       418          ; PC := 418
286 [-]: GETUPVAL  R17 U0       ; R17 := U0
287 [-]: GETTABLE  R17 R17 K30  ; R17 := R17["IsAlternateHud"]
288 [-]: TEST      R17 1        ; if R17 then PC := 294
289 [-]: JMP       294          ; PC := 294
290 [-]: GETGLOBAL R17 K11      ; R17 := _T
291 [-]: GETTABLE  R17 R17 K55  ; R17 := R17["ForceShowHudTrackers"]
292 [-]: TEST      R17 0        ; if not R17 then PC := 296
293 [-]: JMP       296          ; PC := 296
294 [-]: EQ        1 R16 K56    ; if R16 == "HudTracker" then PC := 398
295 [-]: JMP       398          ; PC := 398
296 [-]: GETGLOBAL R17 K11      ; R17 := _T
297 [-]: GETTABLE  R17 R17 K57  ; R17 := R17["ForceShowMiniMap"]
298 [-]: TEST      R17 0        ; if not R17 then PC := 304
299 [-]: JMP       304          ; PC := 304
300 [-]: EQ        1 R16 K58    ; if R16 == "MiniMapContainer" then PC := 398
301 [-]: JMP       398          ; PC := 398
302 [-]: EQ        1 R16 K59    ; if R16 == "MiniMapOverlayMsg" then PC := 398
303 [-]: JMP       398          ; PC := 398
304 [-]: GETGLOBAL R17 K11      ; R17 := _T
305 [-]: GETTABLE  R17 R17 K31  ; R17 := R17["MinimalHud"]
306 [-]: TEST      R17 0        ; if not R17 then PC := 328
307 [-]: JMP       328          ; PC := 328
308 [-]: EQ        1 R16 K60    ; if R16 == "Reticle" then PC := 398
309 [-]: JMP       398          ; PC := 398
310 [-]: EQ        1 R16 K61    ; if R16 == "ReticleCustom" then PC := 398
311 [-]: JMP       398          ; PC := 398
312 [-]: EQ        1 R16 K62    ; if R16 == "PvPHeldFlagTimer" then PC := 398
313 [-]: JMP       398          ; PC := 398
314 [-]: GETGLOBAL R17 K11      ; R17 := _T
315 [-]: GETTABLE  R17 R17 K63  ; R17 := R17["ForceShowHealthShield"]
316 [-]: TEST      R17 0        ; if not R17 then PC := 322
317 [-]: JMP       322          ; PC := 322
318 [-]: EQ        1 R16 K64    ; if R16 == "HealthAndShield" then PC := 398
319 [-]: JMP       398          ; PC := 398
320 [-]: EQ        1 R16 K65    ; if R16 == "Card" then PC := 398
321 [-]: JMP       398          ; PC := 398
322 [-]: GETGLOBAL R17 K11      ; R17 := _T
323 [-]: GETTABLE  R17 R17 K66  ; R17 := R17["ForceShowImpactMessages"]
324 [-]: TEST      R17 0        ; if not R17 then PC := 328
325 [-]: JMP       328          ; PC := 328
326 [-]: EQ        1 R16 K67    ; if R16 == "ImpactMessage" then PC := 398
327 [-]: JMP       398          ; PC := 398
328 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
329 [-]: SELF      R17 R17 K36  ; R18 := R17; R17 := R17[0xbf8f0712]
330 [-]: MOVE      R19 R16      ; R19 := R16
331 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
332 [-]: TEST      R17 0        ; if not R17 then PC := 338
333 [-]: JMP       338          ; PC := 338
334 [-]: GETUPVAL  R17 U6       ; R17 := U6
335 [-]: GETTABLE  R17 R17 K35  ; R17 := R17["Interpolating"]
336 [-]: SETTABLE  R17 R16 K13  ; R17[R16] := true
337 [-]: JMP       418          ; PC := 418
338 [-]: GETUPVAL  R17 U6       ; R17 := U6
339 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["Faded"]
340 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
341 [-]: TEST      R17 1        ; if R17 then PC := 359
342 [-]: JMP       359          ; PC := 359
343 [-]: GETUPVAL  R17 U6       ; R17 := U6
344 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["Faded"]
345 [-]: NEWTABLE  R18 0 2      ; R18 := {}
346 [-]: GETGLOBAL R19 K6       ; R19 := 0xae91e43b
347 [-]: SELF      R19 R19 K69  ; R20 := R19; R19 := R19[0x5b0290d2]
348 [-]: MOVE      R21 R16      ; R21 := R16
349 [-]: CONST     R22 11       ; R22 := 11.000000
350 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
351 [-]: SETTABLE  R18 K68 R19  ; R18["Visible"] := R19
352 [-]: GETGLOBAL R19 K6       ; R19 := 0xae91e43b
353 [-]: SELF      R19 R19 K71  ; R20 := R19; R19 := R19[0x91a24e4b]
354 [-]: MOVE      R21 R16      ; R21 := R16
355 [-]: CONST     R22 10       ; R22 := 10.000000
356 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
357 [-]: SETTABLE  R18 K70 R19  ; R18["Alpha"] := R19
358 [-]: SETTABLE  R17 R16 R18  ; R17[R16] := R18
359 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
360 [-]: SELF      R17 R17 K72  ; R18 := R17; R17 := R17[0xaade900e]
361 [-]: MOVE      R19 R16      ; R19 := R16
362 [-]: CONST     R20 11       ; R20 := 11.000000
363 [-]: EQ        0 R0 K2      ; if R0 ~= 0.000000 then PC := 370
364 [-]: JMP       370          ; PC := 370
365 [-]: GETUPVAL  R21 U6       ; R21 := U6
366 [-]: GETTABLE  R21 R21 K44  ; R21 := R21["Faded"]
367 [-]: GETTABLE  R21 R21 R16  ; R21 := R21[R16]
368 [-]: GETTABLE  R21 R21 K68  ; R21 := R21["Visible"]
369 [-]: JMP       372          ; PC := 372
370 [-]: LOADKB    R21 0 1      ; R21 := false; PC := 371
371 [-]: LOADKB    R21 1 0      ; R21 := true
372 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
373 [-]: GETUPVAL  R17 U6       ; R17 := U6
374 [-]: GETTABLE  R17 R17 K73  ; R17 := R17["AutoClips"]
375 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
376 [-]: TEST      R17 1        ; if R17 then PC := 392
377 [-]: JMP       392          ; PC := 392
378 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
379 [-]: SELF      R17 R17 K38  ; R18 := R17; R17 := R17[0x67bc869f]
380 [-]: MOVE      R19 R16      ; R19 := R16
381 [-]: CONST     R20 10       ; R20 := 10.000000
382 [-]: GETGLOBAL R21 K40      ; R21 := 0x7fa0b32a
383 [-]: MOVE      R22 R0       ; R22 := R0
384 [-]: CALL      R21 2 2      ; R21 := R21(R22)
385 [-]: SUB       R21 K41 R21  ; R21 := 1.000000 - R21
386 [-]: GETUPVAL  R22 U6       ; R22 := U6
387 [-]: GETTABLE  R22 R22 K44  ; R22 := R22["Faded"]
388 [-]: GETTABLE  R22 R22 R16  ; R22 := R22[R16]
389 [-]: GETTABLE  R22 R22 K70  ; R22 := R22["Alpha"]
390 [-]: MUL       R21 R21 R22  ; R21 := R21 * R22
391 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
392 [-]: EQ        0 R0 K2      ; if R0 ~= 0.000000 then PC := 418
393 [-]: JMP       418          ; PC := 418
394 [-]: GETUPVAL  R17 U6       ; R17 := U6
395 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["Faded"]
396 [-]: SETTABLE  R17 R16 K18  ; R17[R16] := nil
397 [-]: JMP       418          ; PC := 418
398 [-]: GETUPVAL  R17 U6       ; R17 := U6
399 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["Faded"]
400 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
401 [-]: TEST      R17 0        ; if not R17 then PC := 418
402 [-]: JMP       418          ; PC := 418
403 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
404 [-]: SELF      R17 R17 K72  ; R18 := R17; R17 := R17[0xaade900e]
405 [-]: MOVE      R19 R16      ; R19 := R16
406 [-]: CONST     R20 11       ; R20 := 11.000000
407 [-]: LOADKB    R21 1 0      ; R21 := true
408 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
409 [-]: GETGLOBAL R17 K6       ; R17 := 0xae91e43b
410 [-]: SELF      R17 R17 K38  ; R18 := R17; R17 := R17[0x67bc869f]
411 [-]: MOVE      R19 R16      ; R19 := R16
412 [-]: CONST     R20 10       ; R20 := 10.000000
413 [-]: CONST     R21 100      ; R21 := 100.000000
414 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
415 [-]: GETUPVAL  R17 U6       ; R17 := U6
416 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["Faded"]
417 [-]: SETTABLE  R17 R16 K18  ; R17[R16] := nil
418 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 286; R14 := R15 end
419 [-]: JMP       286          ; PC := 286
420 [-]: GETUPVAL  R17 U9       ; R17 := U9
421 [-]: SELF      R17 R17 K74  ; R18 := R17; R17 := R17[0x2ce7535d]
422 [-]: MOVE      R19 R7       ; R19 := R7
423 [-]: CALL      R17 3 1      ; R17(R18,R19)
424 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 3469
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 3473
; #Upvalues:       42
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  46

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Initialized"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0xbe190284
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R0 K3        ; R0 := 0xbe190284
 17 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xf2deaf69]
 18 [-]: GETGLOBAL R2 K5        ; R2 := gLotusAttractModeGameRulesType
 19 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 20 [-]: TEST      R0 0         ; if not R0 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R0 K6        ; R0 := _T
 24 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["GetHudScale"]
 25 [-]: EQ        0 R0 K8      ; if R0 ~= nil then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: GETGLOBAL R0 K9        ; R0 := 0x3d106989
 28 [-]: LOADK     R1 K10       ; R1 := "_T nuked, reloading"
 29 [-]: CALL      R0 2 1       ; R0(R1)
 30 [-]: GETUPVAL  R0 U1        ; R0 := U1
 31 [-]: CALL      R0 1 1       ; R0()
 32 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 33 [-]: GETGLOBAL R1 K6        ; R1 := _T
 34 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["RailjackHud_Movie"]
 35 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 36 [-]: NOT       R0 R0        ; R0 :=  R0
 37 [-]: GETGLOBAL R1 K12       ; R1 := 0x67652851
 38 [-]: CALL      R1 1 2       ; R1 := R1()
 39 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 40 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x8a8c8d5a]
 41 [-]: MOVE      R4 R1        ; R4 := R1
 42 [-]: CALL      R2 3 1       ; R2(R3,R4)
 43 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 44 [-]: GETUPVAL  R3 U2        ; R3 := U2
 45 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 46 [-]: TEST      R2 1         ; if R2 then PC := 52
 47 [-]: JMP       52           ; PC := 52
 48 [-]: GETUPVAL  R2 U2        ; R2 := U2
 49 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xfaa69527]
 50 [-]: MOVE      R4 R1        ; R4 := R1
 51 [-]: CALL      R2 3 1       ; R2(R3,R4)
 52 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 53 [-]: GETUPVAL  R3 U3        ; R3 := U3
 54 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 55 [-]: TEST      R2 1         ; if R2 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETUPVAL  R2 U3        ; R2 := U3
 58 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xfaa69527]
 59 [-]: CALL      R2 2 1       ; R2(R3)
 60 [-]: GETGLOBAL R2 K6        ; R2 := _T
 61 [-]: GETUPVAL  R3 U4        ; R3 := U4
 62 [-]: CALL      R3 1 2       ; R3 := R3()
 63 [-]: SETTABLE  R2 K15 R3    ; R2["HudInitState"] := R3
 64 [-]: GETGLOBAL R2 K6        ; R2 := _T
 65 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["HudInitState"]
 66 [-]: TEST      R2 1         ; if R2 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: RETURN    R0 1         ; return 
 69 [-]: GETUPVAL  R2 U0        ; R2 := U0
 70 [-]: SETTABLE  R2 K16 K17   ; R2["mDispatchingQueuedFuncs"] := true
 71 [-]: GETUPVAL  R2 U5        ; R2 := U5
 72 [-]: LEN       R2 R2        ; R2 := # R2
 73 [-]: LT        0 K18 R2     ; if 0.000000 >= R2 then PC := 123
 74 [-]: JMP       123          ; PC := 123
 75 [-]: CONST     R2 1         ; R2 := 1.000000
 76 [-]: GETUPVAL  R3 U5        ; R3 := U5
 77 [-]: LEN       R3 R3        ; R3 := # R3
 78 [-]: CONST     R4 1         ; R4 := 1.000000
 79 [-]: FORPREP   R2 120       ; R2 -= R4; PC := 120
 80 [-]: GETUPVAL  R6 U5        ; R6 := U5
 81 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 82 [-]: GETTABLE  R6 R6 K19    ; R6 := R6[1.000000]
 83 [-]: GETUPVAL  R7 U5        ; R7 := U5
 84 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 85 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[2.000000]
 86 [-]: GETUPVAL  R8 U5        ; R8 := U5
 87 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 88 [-]: GETTABLE  R8 R8 K21    ; R8 := R8[3.000000]
 89 [-]: GETUPVAL  R9 U5        ; R9 := U5
 90 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 91 [-]: GETTABLE  R9 R9 K22    ; R9 := R9[4.000000]
 92 [-]: GETUPVAL  R10 U5       ; R10 := U5
 93 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 94 [-]: GETTABLE  R10 R10 K23  ; R10 := R10[5.000000]
 95 [-]: GETUPVAL  R11 U5       ; R11 := U5
 96 [-]: GETTABLE  R11 R11 R5   ; R11 := R11[R5]
 97 [-]: GETTABLE  R11 R11 K24  ; R11 := R11[6.000000]
 98 [-]: GETUPVAL  R12 U5       ; R12 := U5
 99 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
100 [-]: GETTABLE  R12 R12 K25  ; R12 := R12[7.000000]
101 [-]: GETUPVAL  R13 U5       ; R13 := U5
102 [-]: GETTABLE  R13 R13 R5   ; R13 := R13[R5]
103 [-]: GETTABLE  R13 R13 K26  ; R13 := R13[8.000000]
104 [-]: GETUPVAL  R14 U5       ; R14 := U5
105 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
106 [-]: GETTABLE  R14 R14 K27  ; R14 := R14[9.000000]
107 [-]: GETUPVAL  R15 U5       ; R15 := U5
108 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
109 [-]: GETTABLE  R15 R15 K28  ; R15 := R15[10.000000]
110 [-]: GETUPVAL  R16 U5       ; R16 := U5
111 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
112 [-]: GETTABLE  R16 R16 K29  ; R16 := R16[11.000000]
113 [-]: GETUPVAL  R17 U5       ; R17 := U5
114 [-]: GETTABLE  R17 R17 R5   ; R17 := R17[R5]
115 [-]: GETTABLE  R17 R17 K30  ; R17 := R17[12.000000]
116 [-]: GETUPVAL  R18 U5       ; R18 := U5
117 [-]: GETTABLE  R18 R18 R5   ; R18 := R18[R5]
118 [-]: GETTABLE  R18 R18 K31  ; R18 := R18[13.000000]
119 [-]: CALL      R6 13 1      ; R6(R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17,R18)
120 [-]: FORLOOP   R2 80        ; R2 += R4; if R2 <= R3 then begin PC := 80; R5 := R2 end
121 [-]: NEWTABLE  R6 0 0       ; R6 := {}
122 [-]: SETUPVAL  R6 U5        ; U82 := R5
123 [-]: GETUPVAL  R6 U0        ; R6 := U0
124 [-]: SETTABLE  R6 K16 K32   ; R6["mDispatchingQueuedFuncs"] := false
125 [-]: GETUPVAL  R6 U0        ; R6 := U0
126 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["PlayerListHasChanged"]
127 [-]: TEST      R6 0         ; if not R6 then PC := 131
128 [-]: JMP       131          ; PC := 131
129 [-]: GETUPVAL  R6 U6        ; R6 := U6
130 [-]: CALL      R6 1 1       ; R6()
131 [-]: GETUPVAL  R6 U0        ; R6 := U0
132 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["UIMode"]
133 [-]: GETUPVAL  R7 U7        ; R7 := U7
134 [-]: GETTABLE  R7 R7 K35    ; R7 := R7["UI_MODE_IN_GAME"]
135 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 150
136 [-]: JMP       150          ; PC := 150
137 [-]: GETUPVAL  R6 U0        ; R6 := U0
138 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["IsInConclave"]
139 [-]: TEST      R6 1         ; if R6 then PC := 150
140 [-]: JMP       150          ; PC := 150
141 [-]: GETUPVAL  R6 U0        ; R6 := U0
142 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["MissionType"]
143 [-]: EQ        0 R6 K38     ; if R6 ~= -1.000000 then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: GETUPVAL  R6 U0        ; R6 := U0
146 [-]: GETUPVAL  R7 U8        ; R7 := U8
147 [-]: SELF      R7 R7 K39    ; R8 := R7; R7 := R7[0x5c390f04]
148 [-]: CALL      R7 2 2       ; R7 := R7(R8)
149 [-]: SETTABLE  R6 K37 R7    ; R6["MissionType"] := R7
150 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
151 [-]: GETUPVAL  R7 U9        ; R7 := U9
152 [-]: CALL      R6 2 2       ; R6 := R6(R7)
153 [-]: TEST      R6 1         ; if R6 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: GETUPVAL  R6 U9        ; R6 := U9
156 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0xfaa69527]
157 [-]: CALL      R6 2 1       ; R6(R7)
158 [-]: GETUPVAL  R6 U0        ; R6 := U0
159 [-]: GETGLOBAL R7 K41       ; R7 := 0x34291f5c
160 [-]: GETTABLE  R7 R7 K42    ; R7 := R7[0x1467d5f4]
161 [-]: CALL      R7 1 2       ; R7 := R7()
162 [-]: SETTABLE  R6 K40 R7    ; R6["mPlayingWithController"] := R7
163 [-]: GETUPVAL  R6 U10       ; R6 := U10
164 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0xfaa69527]
165 [-]: GETUPVAL  R8 U11       ; R8 := U11
166 [-]: MOVE      R9 R1        ; R9 := R1
167 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
168 [-]: GETGLOBAL R6 K6        ; R6 := _T
169 [-]: GETTABLE  R6 R6 K43    ; R6 := R6["OverrideDamageIndicatorColor"]
170 [-]: EQ        1 R6 K8      ; if R6 == nil then PC := 179
171 [-]: JMP       179          ; PC := 179
172 [-]: GETGLOBAL R6 K1        ; R6 := 0xae91e43b
173 [-]: SELF      R6 R6 K44    ; R7 := R6; R6 := R6[0x67bc869f]
174 [-]: LOADK     R8 K45       ; R8 := "SuccessfulHitNotification"
175 [-]: CONST     R9 9         ; R9 := 9.000000
176 [-]: GETGLOBAL R10 K6       ; R10 := _T
177 [-]: GETTABLE  R10 R10 K43  ; R10 := R10["OverrideDamageIndicatorColor"]
178 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
179 [-]: GETGLOBAL R6 K46       ; R6 := 0xe72d2edb
180 [-]: EQ        0 R6 K18     ; if R6 ~= 0.000000 then PC := 222
181 [-]: JMP       222          ; PC := 222
182 [-]: GETGLOBAL R6 K1        ; R6 := 0xae91e43b
183 [-]: SELF      R6 R6 K48    ; R7 := R6; R6 := R6[0x5b0290d2]
184 [-]: LOADK     R8 K49       ; R8 := "HealthAndShield.Player.InvulnerableBadge"
185 [-]: CONST     R9 11        ; R9 := 11.000000
186 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
187 [-]: GETUPVAL  R7 U0        ; R7 := U0
188 [-]: GETTABLE  R7 R7 K50    ; R7 := R7["IsInvulnerableHud"]
189 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 213
190 [-]: JMP       213          ; PC := 213
191 [-]: GETUPVAL  R7 U0        ; R7 := U0
192 [-]: SETTABLE  R7 K50 R6    ; R7["IsInvulnerableHud"] := R6
193 [-]: TEST      R6 0         ; if not R6 then PC := 213
194 [-]: JMP       213          ; PC := 213
195 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
196 [-]: GETUPVAL  R8 U12       ; R8 := U12
197 [-]: CALL      R7 2 2       ; R7 := R7(R8)
198 [-]: TEST      R7 1         ; if R7 then PC := 203
199 [-]: JMP       203          ; PC := 203
200 [-]: GETUPVAL  R7 U12       ; R7 := U12
201 [-]: SELF      R7 R7 K51    ; R8 := R7; R7 := R7[0xa2880940]
202 [-]: CALL      R7 2 1       ; R7(R8)
203 [-]: GETUPVAL  R7 U13       ; R7 := U13
204 [-]: GETTABLE  R7 R7 K52    ; R7 := R7[0x310355a7]
205 [-]: GETGLOBAL R8 K1        ; R8 := 0xae91e43b
206 [-]: LOADK     R9 K49       ; R9 := "HealthAndShield.Player.InvulnerableBadge"
207 [-]: GETGLOBAL R10 K53      ; R10 := 0xe06e09ed
208 [-]: CONST     R11 -6       ; R11 := -6.000000
209 [-]: CONST     R12 23       ; R12 := 23.000000
210 [-]: GETGLOBAL R13 K54      ; R13 := 0x1211d00f
211 [-]: CALL      R7 7 2       ; R7 := R7(R8,R9,R10,R11,R12,R13)
212 [-]: SETUPVAL  R7 U12       ; U82 := R12
213 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
214 [-]: GETUPVAL  R8 U12       ; R8 := U12
215 [-]: CALL      R7 2 2       ; R7 := R7(R8)
216 [-]: TEST      R7 1         ; if R7 then PC := 222
217 [-]: JMP       222          ; PC := 222
218 [-]: GETUPVAL  R7 U12       ; R7 := U12
219 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7[0xfaa69527]
220 [-]: MOVE      R9 R1        ; R9 := R1
221 [-]: CALL      R7 3 1       ; R7(R8,R9)
222 [-]: GETUPVAL  R7 U14       ; R7 := U14
223 [-]: GETTABLE  R7 R7 K55    ; R7 := R7["SecretMiniGameActive"]
224 [-]: GETGLOBAL R8 K6        ; R8 := _T
225 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["SecretMiniGameActive"]
226 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 250
227 [-]: JMP       250          ; PC := 250
228 [-]: GETUPVAL  R7 U14       ; R7 := U14
229 [-]: GETGLOBAL R8 K6        ; R8 := _T
230 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["SecretMiniGameActive"]
231 [-]: SETTABLE  R7 K55 R8    ; R7["SecretMiniGameActive"] := R8
232 [-]: GETUPVAL  R7 U10       ; R7 := U10
233 [-]: SELF      R7 R7 K56    ; R8 := R7; R7 := R7[0x7442ac7d]
234 [-]: GETGLOBAL R9 K6        ; R9 := _T
235 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["SecretMiniGameActive"]
236 [-]: EQ        1 R9 K17     ; if R9 == true then PC := 239
237 [-]: JMP       239          ; PC := 239
238 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 239
239 [-]: LOADKB    R9 1 0       ; R9 := true
240 [-]: CALL      R7 3 1       ; R7(R8,R9)
241 [-]: GETUPVAL  R7 U10       ; R7 := U10
242 [-]: SELF      R7 R7 K57    ; R8 := R7; R7 := R7[0x50a1c9ed]
243 [-]: GETGLOBAL R9 K6        ; R9 := _T
244 [-]: GETTABLE  R9 R9 K58    ; R9 := R9["SecretMiniGameAllowsPause"]
245 [-]: EQ        1 R9 K17     ; if R9 == true then PC := 248
246 [-]: JMP       248          ; PC := 248
247 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 248
248 [-]: LOADKB    R9 1 0       ; R9 := true
249 [-]: CALL      R7 3 1       ; R7(R8,R9)
250 [-]: GETUPVAL  R7 U0        ; R7 := U0
251 [-]: GETTABLE  R7 R7 K34    ; R7 := R7["UIMode"]
252 [-]: GETUPVAL  R8 U7        ; R8 := U7
253 [-]: GETTABLE  R8 R8 K59    ; R8 := R8["UI_MODE_IN_SPACE_HUB"]
254 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 359
255 [-]: JMP       359          ; PC := 359
256 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
257 [-]: GETUPVAL  R8 U15       ; R8 := U15
258 [-]: CALL      R7 2 2       ; R7 := R7(R8)
259 [-]: TEST      R7 1         ; if R7 then PC := 361
260 [-]: JMP       361          ; PC := 361
261 [-]: GETUPVAL  R7 U15       ; R7 := U15
262 [-]: SELF      R7 R7 K60    ; R8 := R7; R7 := R7[0xa5e492d4]
263 [-]: CALL      R7 2 2       ; R7 := R7(R8)
264 [-]: TEST      R7 0         ; if not R7 then PC := 361
265 [-]: JMP       361          ; PC := 361
266 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
267 [-]: GETUPVAL  R8 U14       ; R8 := U14
268 [-]: GETTABLE  R8 R8 K61    ; R8 := R8["ActivePowerSuit"]
269 [-]: CALL      R7 2 2       ; R7 := R7(R8)
270 [-]: TEST      R7 0         ; if not R7 then PC := 280
271 [-]: JMP       280          ; PC := 280
272 [-]: GETUPVAL  R7 U14       ; R7 := U14
273 [-]: GETUPVAL  R8 U16       ; R8 := U16
274 [-]: GETTABLE  R8 R8 K62    ; R8 := R8["InventoryController"]
275 [-]: SELF      R8 R8 K63    ; R9 := R8; R8 := R8[0xf7d48ee0]
276 [-]: CALL      R8 2 2       ; R8 := R8(R9)
277 [-]: SETTABLE  R7 K61 R8    ; R7["ActivePowerSuit"] := R8
278 [-]: GETUPVAL  R7 U17       ; R7 := U17
279 [-]: SETTABLE  R7 K64 K8    ; R7["CustomAbilities"] := nil
280 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
281 [-]: GETUPVAL  R8 U14       ; R8 := U14
282 [-]: GETTABLE  R8 R8 K61    ; R8 := R8["ActivePowerSuit"]
283 [-]: CALL      R7 2 2       ; R7 := R7(R8)
284 [-]: TEST      R7 1         ; if R7 then PC := 291
285 [-]: JMP       291          ; PC := 291
286 [-]: GETUPVAL  R7 U14       ; R7 := U14
287 [-]: GETTABLE  R7 R7 K61    ; R7 := R7["ActivePowerSuit"]
288 [-]: SELF      R7 R7 K65    ; R8 := R7; R7 := R7[0x1c3517ec]
289 [-]: CALL      R7 2 2       ; R7 := R7(R8)
290 [-]: JMP       293          ; PC := 293
291 [-]: LOADKB    R7 0 1       ; R7 := false; PC := 292
292 [-]: LOADKB    R7 1 0       ; R7 := true
293 [-]: TEST      R7 0         ; if not R7 then PC := 303
294 [-]: JMP       303          ; PC := 303
295 [-]: GETUPVAL  R8 U14       ; R8 := U14
296 [-]: GETUPVAL  R9 U16       ; R9 := U16
297 [-]: GETTABLE  R9 R9 K62    ; R9 := R9["InventoryController"]
298 [-]: SELF      R9 R9 K66    ; R10 := R9; R9 := R9[0x2303a280]
299 [-]: CALL      R9 2 2       ; R9 := R9(R10)
300 [-]: SETTABLE  R8 K61 R9    ; R8["ActivePowerSuit"] := R9
301 [-]: GETUPVAL  R8 U17       ; R8 := U17
302 [-]: SETTABLE  R8 K64 K8    ; R8["CustomAbilities"] := nil
303 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
304 [-]: GETUPVAL  R9 U18       ; R9 := U18
305 [-]: CALL      R8 2 2       ; R8 := R8(R9)
306 [-]: TEST      R8 1         ; if R8 then PC := 313
307 [-]: JMP       313          ; PC := 313
308 [-]: GETUPVAL  R8 U14       ; R8 := U14
309 [-]: GETTABLE  R8 R8 K61    ; R8 := R8["ActivePowerSuit"]
310 [-]: GETUPVAL  R9 U18       ; R9 := U18
311 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 361
312 [-]: JMP       361          ; PC := 361
313 [-]: GETUPVAL  R8 U14       ; R8 := U14
314 [-]: GETTABLE  R8 R8 K61    ; R8 := R8["ActivePowerSuit"]
315 [-]: SETUPVAL  R8 U18       ; U82 := R18
316 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
317 [-]: GETUPVAL  R9 U18       ; R9 := U18
318 [-]: CALL      R8 2 2       ; R8 := R8(R9)
319 [-]: TEST      R8 1         ; if R8 then PC := 361
320 [-]: JMP       361          ; PC := 361
321 [-]: GETUPVAL  R8 U19       ; R8 := U19
322 [-]: SETTABLE  R8 K67 K32   ; R8["hasCheckedForStatusEffects"] := false
323 [-]: GETUPVAL  R8 U0        ; R8 := U0
324 [-]: GETUPVAL  R9 U18       ; R9 := U18
325 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9[0xf2deaf69]
326 [-]: GETGLOBAL R11 K69      ; R11 := 0x8e6056be
327 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
328 [-]: SETTABLE  R8 K68 R9    ; R8["IsOperator"] := R9
329 [-]: GETUPVAL  R8 U18       ; R8 := U18
330 [-]: SELF      R8 R8 K70    ; R9 := R8; R8 := R8[0x68d708a7]
331 [-]: CALL      R8 2 2       ; R8 := R8(R9)
332 [-]: SELF      R9 R8 K71    ; R10 := R8; R9 := R8[0x8e62760a]
333 [-]: CONST     R11 0        ; R11 := 0.000000
334 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
335 [-]: SELF      R10 R9 K72   ; R11 := R9; R10 := R9[0x697019d0]
336 [-]: CONST     R12 6        ; R12 := 6.000000
337 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
338 [-]: TEST      R10 0        ; if not R10 then PC := 361
339 [-]: JMP       361          ; PC := 361
340 [-]: GETGLOBAL R10 K73      ; R10 := 0x60130201
341 [-]: SELF      R11 R9 K74   ; R12 := R9; R11 := R9[0x5d10207d]
342 [-]: CONST     R13 6        ; R13 := 6.000000
343 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
344 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
345 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
346 [-]: MOVE      R12 R10      ; R12 := R10
347 [-]: CALL      R11 2 2      ; R11 := R11(R12)
348 [-]: TEST      R11 1        ; if R11 then PC := 361
349 [-]: JMP       361          ; PC := 361
350 [-]: SELF      R11 R10 K75  ; R12 := R10; R11 := R10[0xa5d5c8f6]
351 [-]: CALL      R11 2 2      ; R11 := R11(R12)
352 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
353 [-]: SELF      R12 R12 K44  ; R13 := R12; R12 := R12[0x67bc869f]
354 [-]: LOADK     R14 K76      ; R14 := "AbilityChargeProgress"
355 [-]: CONST     R15 9        ; R15 := 9.000000
356 [-]: MOVE      R16 R11      ; R16 := R11
357 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
358 [-]: JMP       361          ; PC := 361
359 [-]: GETUPVAL  R12 U20      ; R12 := U20
360 [-]: CALL      R12 1 1      ; R12()
361 [-]: GETUPVAL  R12 U21      ; R12 := U21
362 [-]: CALL      R12 1 1      ; R12()
363 [-]: GETUPVAL  R12 U15      ; R12 := U15
364 [-]: GETUPVAL  R13 U0       ; R13 := U0
365 [-]: GETTABLE  R13 R13 K77  ; R13 := R13["IsSpectating"]
366 [-]: TEST      R13 1        ; if R13 then PC := 375
367 [-]: JMP       375          ; PC := 375
368 [-]: GETUPVAL  R13 U10      ; R13 := U10
369 [-]: SELF      R13 R13 K78  ; R14 := R13; R13 := R13[0xed924c7f]
370 [-]: MOVE      R15 R12      ; R15 := R12
371 [-]: MOVE      R16 R1       ; R16 := R1
372 [-]: GETGLOBAL R17 K6       ; R17 := _T
373 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["velocityCoords"]
374 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
375 [-]: GETGLOBAL R13 K80      ; R13 := 0x9ba7909f
376 [-]: SELF      R13 R13 K81  ; R14 := R13; R13 := R13[0x5374b92e]
377 [-]: GETGLOBAL R15 K82      ; R15 := 0xd991a286
378 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
379 [-]: TEST      R13 1        ; if R13 then PC := 389
380 [-]: JMP       389          ; PC := 389
381 [-]: GETGLOBAL R13 K9       ; R13 := 0x3d106989
382 [-]: LOADK     R14 K83      ; R14 := "HUD REDUX: Pushing background movie from Update"
383 [-]: CALL      R13 2 1      ; R13(R14)
384 [-]: GETGLOBAL R13 K80      ; R13 := 0x9ba7909f
385 [-]: SELF      R13 R13 K84  ; R14 := R13; R13 := R13[0x6dd7aa66]
386 [-]: GETGLOBAL R15 K82      ; R15 := 0xd991a286
387 [-]: CALL      R13 3 1      ; R13(R14,R15)
388 [-]: JMP       408          ; PC := 408
389 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
390 [-]: GETGLOBAL R14 K6       ; R14 := _T
391 [-]: GETTABLE  R14 R14 K85  ; R14 := R14["BackgroundInitialized"]
392 [-]: CALL      R13 2 2      ; R13 := R13(R14)
393 [-]: TEST      R13 0        ; if not R13 then PC := 408
394 [-]: JMP       408          ; PC := 408
395 [-]: GETGLOBAL R13 K9       ; R13 := 0x3d106989
396 [-]: LOADK     R14 K86      ; R14 := "HUD REDUX: Closing background and reinitializing due to the fact that the BackgroundInitialized is nil"
397 [-]: CALL      R13 2 1      ; R13(R14)
398 [-]: GETGLOBAL R13 K80      ; R13 := 0x9ba7909f
399 [-]: SELF      R13 R13 K87  ; R14 := R13; R13 := R13[0xbcfb64ab]
400 [-]: GETGLOBAL R15 K82      ; R15 := 0xd991a286
401 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
402 [-]: SELF      R14 R13 K88  ; R15 := R13; R14 := R13[0x32302b4a]
403 [-]: CALL      R14 2 1      ; R14(R15)
404 [-]: GETGLOBAL R14 K80      ; R14 := 0x9ba7909f
405 [-]: SELF      R14 R14 K84  ; R15 := R14; R14 := R14[0x6dd7aa66]
406 [-]: GETGLOBAL R16 K82      ; R16 := 0xd991a286
407 [-]: CALL      R14 3 1      ; R14(R15,R16)
408 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
409 [-]: GETUPVAL  R15 U0       ; R15 := U0
410 [-]: GETTABLE  R15 R15 K89  ; R15 := R15["mHudMarkersMovie"]
411 [-]: CALL      R14 2 2      ; R14 := R14(R15)
412 [-]: TEST      R14 0        ; if not R14 then PC := 433
413 [-]: JMP       433          ; PC := 433
414 [-]: GETUPVAL  R14 U0       ; R14 := U0
415 [-]: GETGLOBAL R15 K1       ; R15 := 0xae91e43b
416 [-]: SELF      R15 R15 K90  ; R16 := R15; R15 := R15[0x1fd6abd0]
417 [-]: GETGLOBAL R17 K91      ; R17 := 0x13d86d46
418 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
419 [-]: SETTABLE  R14 K89 R15  ; R14["mHudMarkersMovie"] := R15
420 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
421 [-]: GETUPVAL  R15 U0       ; R15 := U0
422 [-]: GETTABLE  R15 R15 K89  ; R15 := R15["mHudMarkersMovie"]
423 [-]: CALL      R14 2 2      ; R14 := R14(R15)
424 [-]: TEST      R14 1        ; if R14 then PC := 433
425 [-]: JMP       433          ; PC := 433
426 [-]: GETUPVAL  R14 U0       ; R14 := U0
427 [-]: GETTABLE  R14 R14 K89  ; R14 := R14["mHudMarkersMovie"]
428 [-]: SELF      R14 R14 K92  ; R15 := R14; R14 := R14[0x263a3cc2]
429 [-]: GETGLOBAL R16 K1       ; R16 := 0xae91e43b
430 [-]: SELF      R16 R16 K93  ; R17 := R16; R16 := R16[0xcd73323e]
431 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
432 [-]: CALL      R14 0 1      ; R14(R15,...)
433 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
434 [-]: GETUPVAL  R15 U22      ; R15 := U22
435 [-]: CALL      R14 2 2      ; R14 := R14(R15)
436 [-]: TEST      R14 0        ; if not R14 then PC := 455
437 [-]: JMP       455          ; PC := 455
438 [-]: GETUPVAL  R14 U11      ; R14 := U11
439 [-]: SELF      R14 R14 K94  ; R15 := R14; R14 := R14[0x0803eee1]
440 [-]: CALL      R14 2 2      ; R14 := R14(R15)
441 [-]: SETUPVAL  R14 U22      ; U82 := R22
442 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
443 [-]: GETUPVAL  R15 U22      ; R15 := U22
444 [-]: CALL      R14 2 2      ; R14 := R14(R15)
445 [-]: TEST      R14 0        ; if not R14 then PC := 448
446 [-]: JMP       448          ; PC := 448
447 [-]: RETURN    R0 1         ; return 
448 [-]: GETGLOBAL R14 K46      ; R14 := 0xe72d2edb
449 [-]: EQ        1 R14 K18    ; if R14 == 0.000000 then PC := 455
450 [-]: JMP       455          ; PC := 455
451 [-]: GETUPVAL  R14 U22      ; R14 := U22
452 [-]: SELF      R14 R14 K95  ; R15 := R14; R14 := R14[0xeaef69de]
453 [-]: GETGLOBAL R16 K46      ; R16 := 0xe72d2edb
454 [-]: CALL      R14 3 1      ; R14(R15,R16)
455 [-]: GETUPVAL  R14 U0       ; R14 := U0
456 [-]: GETTABLE  R14 R14 K77  ; R14 := R14["IsSpectating"]
457 [-]: TEST      R14 1        ; if R14 then PC := 465
458 [-]: JMP       465          ; PC := 465
459 [-]: TEST      R0 1         ; if R0 then PC := 465
460 [-]: JMP       465          ; PC := 465
461 [-]: GETUPVAL  R14 U23      ; R14 := U23
462 [-]: MOVE      R15 R12      ; R15 := R12
463 [-]: MOVE      R16 R1       ; R16 := R1
464 [-]: CALL      R14 3 1      ; R14(R15,R16)
465 [-]: GETGLOBAL R14 K6       ; R14 := _T
466 [-]: GETTABLE  R14 R14 K96  ; R14 := R14["isStreamingLevel"]
467 [-]: TEST      R14 1        ; if R14 then PC := 618
468 [-]: JMP       618          ; PC := 618
469 [-]: GETUPVAL  R14 U24      ; R14 := U24
470 [-]: GETTABLE  R14 R14 K97  ; R14 := R14["Active"]
471 [-]: TEST      R14 0        ; if not R14 then PC := 618
472 [-]: JMP       618          ; PC := 618
473 [-]: GETUPVAL  R14 U25      ; R14 := U25
474 [-]: GETTABLE  R14 R14 K98  ; R14 := R14[0xf0090084]
475 [-]: CALL      R14 1 2      ; R14 := R14()
476 [-]: EQ        1 R14 K8     ; if R14 == nil then PC := 618
477 [-]: JMP       618          ; PC := 618
478 [-]: GETUPVAL  R15 U24      ; R15 := U24
479 [-]: GETTABLE  R15 R15 K99  ; R15 := R15["IsNight"]
480 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 618
481 [-]: JMP       618          ; PC := 618
482 [-]: GETUPVAL  R15 U24      ; R15 := U24
483 [-]: GETTABLE  R15 R15 K99  ; R15 := R15["IsNight"]
484 [-]: EQ        1 R15 K8     ; if R15 == nil then PC := 487
485 [-]: JMP       487          ; PC := 487
486 [-]: LOADKB    R15 0 1      ; R15 := false; PC := 487
487 [-]: LOADKB    R15 1 0      ; R15 := true
488 [-]: GETUPVAL  R16 U24      ; R16 := U24
489 [-]: SETTABLE  R16 K99 R14  ; R16["IsNight"] := R14
490 [-]: TEST      R15 1        ; if R15 then PC := 562
491 [-]: JMP       562          ; PC := 562
492 [-]: GETUPVAL  R16 U24      ; R16 := U24
493 [-]: GETTABLE  R16 R16 K100 ; R16 := R16["Landscape"]
494 [-]: TEST      R16 0        ; if not R16 then PC := 562
495 [-]: JMP       562          ; PC := 562
496 [-]: GETUPVAL  R16 U24      ; R16 := U24
497 [-]: GETTABLE  R16 R16 K99  ; R16 := R16["IsNight"]
498 [-]: TEST      R16 0        ; if not R16 then PC := 511
499 [-]: JMP       511          ; PC := 511
500 [-]: GETUPVAL  R16 U24      ; R16 := U24
501 [-]: GETUPVAL  R17 U24      ; R17 := U24
502 [-]: GETTABLE  R17 R17 K101 ; R17 := R17["DayCount"]
503 [-]: ADD       R17 R17 K19  ; R17 := R17 + 1.000000
504 [-]: SETTABLE  R16 K101 R17 ; R16["DayCount"] := R17
505 [-]: GETUPVAL  R16 U24      ; R16 := U24
506 [-]: GETUPVAL  R17 U8       ; R17 := U8
507 [-]: SELF      R17 R17 K103 ; R18 := R17; R17 := R17[0xae962fa0]
508 [-]: CALL      R17 2 2      ; R17 := R17(R18)
509 [-]: SETTABLE  R16 K102 R17 ; R16["GameTimeAtDusk"] := R17
510 [-]: JMP       562          ; PC := 562
511 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
512 [-]: GETUPVAL  R17 U8       ; R17 := U8
513 [-]: CALL      R16 2 2      ; R16 := R16(R17)
514 [-]: TEST      R16 1        ; if R16 then PC := 526
515 [-]: JMP       526          ; PC := 526
516 [-]: GETUPVAL  R16 U8       ; R16 := U8
517 [-]: SELF      R16 R16 K103 ; R17 := R16; R16 := R16[0xae962fa0]
518 [-]: CALL      R16 2 2      ; R16 := R16(R17)
519 [-]: GETUPVAL  R17 U24      ; R17 := U24
520 [-]: GETTABLE  R17 R17 K102 ; R17 := R17["GameTimeAtDusk"]
521 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
522 [-]: LT        0 R16 K104   ; if R16 >= 2940.000000 then PC := 526
523 [-]: JMP       526          ; PC := 526
524 [-]: GETUPVAL  R16 U24      ; R16 := U24
525 [-]: SETTABLE  R16 K101 K18 ; R16["DayCount"] := 0.000000
526 [-]: GETUPVAL  R16 U24      ; R16 := U24
527 [-]: GETTABLE  R16 R16 K101 ; R16 := R16["DayCount"]
528 [-]: LT        0 K18 R16    ; if 0.000000 >= R16 then PC := 562
529 [-]: JMP       562          ; PC := 562
530 [-]: GETUPVAL  R16 U24      ; R16 := U24
531 [-]: GETTABLE  R16 R16 K100 ; R16 := R16["Landscape"]
532 [-]: TEST      R16 0        ; if not R16 then PC := 562
533 [-]: JMP       562          ; PC := 562
534 [-]: GETGLOBAL R16 K105     ; R16 := 0x89326c93
535 [-]: SELF      R16 R16 K106 ; R17 := R16; R16 := R16[0xfb64e76c]
536 [-]: CALL      R16 2 2      ; R16 := R16(R17)
537 [-]: GETUPVAL  R17 U8       ; R17 := U8
538 [-]: SELF      R17 R17 K107 ; R18 := R17; R17 := R17[0xef893aec]
539 [-]: CALL      R17 2 2      ; R17 := R17(R18)
540 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
541 [-]: MOVE      R19 R16      ; R19 := R16
542 [-]: CALL      R18 2 2      ; R18 := R18(R19)
543 [-]: TEST      R18 1        ; if R18 then PC := 562
544 [-]: JMP       562          ; PC := 562
545 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
546 [-]: MOVE      R19 R17      ; R19 := R17
547 [-]: CALL      R18 2 2      ; R18 := R18(R19)
548 [-]: TEST      R18 1        ; if R18 then PC := 562
549 [-]: JMP       562          ; PC := 562
550 [-]: GETTABLE  R18 R17 K108 ; R18 := R17["location"]
551 [-]: GETUPVAL  R19 U7       ; R19 := U7
552 [-]: GETTABLE  R19 R19 K109 ; R19 := R19["PLAINS_NODE_TAG"]
553 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 562
554 [-]: JMP       562          ; PC := 562
555 [-]: GETGLOBAL R18 K110     ; R18 := 0xba7dfcd2
556 [-]: SELF      R18 R18 K111 ; R19 := R18; R18 := R18[0xf056b179]
557 [-]: MOVE      R20 R16      ; R20 := R16
558 [-]: GETGLOBAL R21 K112     ; R21 := 0x0469f296
559 [-]: LOADK     R22 K113     ; R22 := "SURVIVED_EIDOLON_NIGHT"
560 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
561 [-]: CALL      R18 0 1      ; R18(R19,...)
562 [-]: GETUPVAL  R18 U24      ; R18 := U24
563 [-]: GETTABLE  R18 R18 K114 ; R18 := R18["Visible"]
564 [-]: TEST      R18 0        ; if not R18 then PC := 618
565 [-]: JMP       618          ; PC := 618
566 [-]: TEST      R15 0        ; if not R15 then PC := 581
567 [-]: JMP       581          ; PC := 581
568 [-]: GETGLOBAL R18 K1       ; R18 := 0xae91e43b
569 [-]: SELF      R18 R18 K44  ; R19 := R18; R18 := R18[0x67bc869f]
570 [-]: LOADK     R20 K115     ; R20 := "MiniMapContainer.Clock.Spinner"
571 [-]: CONST     R21 14       ; R21 := 14.000000
572 [-]: GETUPVAL  R22 U13      ; R22 := U13
573 [-]: GETTABLE  R22 R22 K116 ; R22 := R22[0x06d055f9]
574 [-]: GETUPVAL  R23 U24      ; R23 := U24
575 [-]: GETTABLE  R23 R23 K99  ; R23 := R23["IsNight"]
576 [-]: CONST     R24 180      ; R24 := 180.000000
577 [-]: CONST     R25 0        ; R25 := 0.000000
578 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
579 [-]: CALL      R18 0 1      ; R18(R19,...)
580 [-]: JMP       599          ; PC := 599
581 [-]: GETGLOBAL R18 K117     ; R18 := 0x25312c9b
582 [-]: GETGLOBAL R19 K1       ; R19 := 0xae91e43b
583 [-]: LOADK     R20 K115     ; R20 := "MiniMapContainer.Clock.Spinner"
584 [-]: CONST     R21 6        ; R21 := 6.000000
585 [-]: NEWTABLE  R22 1 0      ; R22 := {}
586 [-]: CONST     R23 14       ; R23 := 14.000000
587 [-]: SETLIST   R22 1 1      ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
588 [-]: NEWTABLE  R23 0 0      ; R23 := {}
589 [-]: GETUPVAL  R24 U13      ; R24 := U13
590 [-]: GETTABLE  R24 R24 K116 ; R24 := R24[0x06d055f9]
591 [-]: GETUPVAL  R25 U24      ; R25 := U24
592 [-]: GETTABLE  R25 R25 K99  ; R25 := R25["IsNight"]
593 [-]: CONST     R26 180      ; R26 := 180.000000
594 [-]: CONST     R27 0        ; R27 := 0.000000
595 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
596 [-]: SETLIST   R23 0 1      ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 0
597 [-]: CONST     R24 0        ; R24 := 0.500000
598 [-]: CALL      R18 7 1      ; R18(R19,R20,R21,R22,R23,R24)
599 [-]: GETGLOBAL R18 K6       ; R18 := _T
600 [-]: GETTABLE  R18 R18 K119 ; R18 := R18["ShowNotification"]
601 [-]: EQ        1 R18 K8     ; if R18 == nil then PC := 618
602 [-]: JMP       618          ; PC := 618
603 [-]: TEST      R15 1        ; if R15 then PC := 618
604 [-]: JMP       618          ; PC := 618
605 [-]: LOADK     R18 K120     ; R18 := "/Lotus/Language/Menu/"
606 [-]: GETUPVAL  R19 U13      ; R19 := U13
607 [-]: GETTABLE  R19 R19 K116 ; R19 := R19[0x06d055f9]
608 [-]: GETUPVAL  R20 U24      ; R20 := U24
609 [-]: GETTABLE  R20 R20 K99  ; R20 := R20["IsNight"]
610 [-]: LOADK     R21 K121     ; R21 := "HUD_Nightfall"
611 [-]: LOADK     R22 K122     ; R22 := "HUD_Daybreak"
612 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
613 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
614 [-]: GETGLOBAL R19 K6       ; R19 := _T
615 [-]: GETTABLE  R19 R19 K123 ; R19 := R19[0x7dce37bc]
616 [-]: MOVE      R20 R18      ; R20 := R18
617 [-]: CALL      R19 2 1      ; R19(R20)
618 [-]: GETUPVAL  R19 U3       ; R19 := U3
619 [-]: SELF      R19 R19 K124 ; R20 := R19; R19 := R19[0x46610c50]
620 [-]: GETGLOBAL R21 K6       ; R21 := _T
621 [-]: GETTABLE  R21 R21 K96  ; R21 := R21["isStreamingLevel"]
622 [-]: EQ        0 R21 K17    ; if R21 ~= true then PC := 628
623 [-]: JMP       628          ; PC := 628
624 [-]: GETUPVAL  R21 U0       ; R21 := U0
625 [-]: GETTABLE  R21 R21 K125 ; R21 := R21["IsAlternateHud"]
626 [-]: NOT       R21 R21      ; R21 :=  R21
627 [-]: JMP       630          ; PC := 630
628 [-]: LOADKB    R21 0 1      ; R21 := false; PC := 629
629 [-]: LOADKB    R21 1 0      ; R21 := true
630 [-]: CALL      R19 3 1      ; R19(R20,R21)
631 [-]: GETUPVAL  R19 U0       ; R19 := U0
632 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["UIMode"]
633 [-]: GETUPVAL  R20 U7       ; R20 := U7
634 [-]: GETTABLE  R20 R20 K59  ; R20 := R20["UI_MODE_IN_SPACE_HUB"]
635 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 711
636 [-]: JMP       711          ; PC := 711
637 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
638 [-]: MOVE      R20 R12      ; R20 := R12
639 [-]: CALL      R19 2 2      ; R19 := R19(R20)
640 [-]: TEST      R19 1        ; if R19 then PC := 645
641 [-]: JMP       645          ; PC := 645
642 [-]: GETUPVAL  R19 U26      ; R19 := U26
643 [-]: MOVE      R20 R12      ; R20 := R12
644 [-]: CALL      R19 2 1      ; R19(R20)
645 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
646 [-]: MOVE      R20 R12      ; R20 := R12
647 [-]: CALL      R19 2 2      ; R19 := R19(R20)
648 [-]: TEST      R19 1        ; if R19 then PC := 663
649 [-]: JMP       663          ; PC := 663
650 [-]: GETGLOBAL R19 K6       ; R19 := _T
651 [-]: GETTABLE  R19 R19 K126 ; R19 := R19["PetNameNeedsUpdate"]
652 [-]: TEST      R19 0        ; if not R19 then PC := 660
653 [-]: JMP       660          ; PC := 660
654 [-]: GETGLOBAL R19 K6       ; R19 := _T
655 [-]: SETTABLE  R19 K126 K8  ; R19["PetNameNeedsUpdate"] := nil
656 [-]: GETUPVAL  R19 U10      ; R19 := U10
657 [-]: SELF      R19 R19 K127 ; R20 := R19; R19 := R19[0xe1fb4b07]
658 [-]: MOVE      R21 R12      ; R21 := R12
659 [-]: CALL      R19 3 1      ; R19(R20,R21)
660 [-]: GETUPVAL  R19 U27      ; R19 := U27
661 [-]: MOVE      R20 R1       ; R20 := R1
662 [-]: CALL      R19 2 1      ; R19(R20)
663 [-]: GETGLOBAL R19 K46      ; R19 := 0xe72d2edb
664 [-]: EQ        1 R19 K18    ; if R19 == 0.000000 then PC := 668
665 [-]: JMP       668          ; PC := 668
666 [-]: GETUPVAL  R19 U28      ; R19 := U28
667 [-]: CALL      R19 1 1      ; R19()
668 [-]: GETUPVAL  R19 U29      ; R19 := U29
669 [-]: SELF      R19 R19 K14  ; R20 := R19; R19 := R19[0xfaa69527]
670 [-]: CALL      R19 2 1      ; R19(R20)
671 [-]: GETUPVAL  R19 U30      ; R19 := U30
672 [-]: GETTABLE  R19 R19 K128 ; R19 := R19["mCanControlPlayerPanel"]
673 [-]: TEST      R19 0        ; if not R19 then PC := 705
674 [-]: JMP       705          ; PC := 705
675 [-]: GETGLOBAL R19 K6       ; R19 := _T
676 [-]: GETTABLE  R19 R19 K129 ; R19 := R19["HidePlayerPanel"]
677 [-]: GETUPVAL  R20 U30      ; R20 := U30
678 [-]: GETTABLE  R20 R20 K129 ; R20 := R20["HidePlayerPanel"]
679 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 705
680 [-]: JMP       705          ; PC := 705
681 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
682 [-]: GETUPVAL  R20 U31      ; R20 := U31
683 [-]: CALL      R19 2 2      ; R19 := R19(R20)
684 [-]: TEST      R19 1        ; if R19 then PC := 705
685 [-]: JMP       705          ; PC := 705
686 [-]: GETUPVAL  R19 U30      ; R19 := U30
687 [-]: GETGLOBAL R20 K6       ; R20 := _T
688 [-]: GETTABLE  R20 R20 K129 ; R20 := R20["HidePlayerPanel"]
689 [-]: SETTABLE  R19 K129 R20 ; R19["HidePlayerPanel"] := R20
690 [-]: GETUPVAL  R19 U30      ; R19 := U30
691 [-]: GETTABLE  R19 R19 K129 ; R19 := R19["HidePlayerPanel"]
692 [-]: EQ        1 R19 K8     ; if R19 == nil then PC := 698
693 [-]: JMP       698          ; PC := 698
694 [-]: GETUPVAL  R19 U30      ; R19 := U30
695 [-]: GETTABLE  R19 R19 K129 ; R19 := R19["HidePlayerPanel"]
696 [-]: EQ        0 R19 K18    ; if R19 ~= 0.000000 then PC := 702
697 [-]: JMP       702          ; PC := 702
698 [-]: GETUPVAL  R19 U31      ; R19 := U31
699 [-]: SELF      R19 R19 K130 ; R20 := R19; R19 := R19[0x587aa683]
700 [-]: CALL      R19 2 1      ; R19(R20)
701 [-]: JMP       705          ; PC := 705
702 [-]: GETUPVAL  R19 U31      ; R19 := U31
703 [-]: SELF      R19 R19 K131 ; R20 := R19; R19 := R19[0xe0f7ce9e]
704 [-]: CALL      R19 2 1      ; R19(R20)
705 [-]: GETUPVAL  R19 U31      ; R19 := U31
706 [-]: SELF      R19 R19 K14  ; R20 := R19; R19 := R19[0xfaa69527]
707 [-]: CALL      R19 2 1      ; R19(R20)
708 [-]: GETUPVAL  R19 U32      ; R19 := U32
709 [-]: MOVE      R20 R1       ; R20 := R1
710 [-]: CALL      R19 2 1      ; R19(R20)
711 [-]: TEST      R0 1         ; if R0 then PC := 801
712 [-]: JMP       801          ; PC := 801
713 [-]: GETUPVAL  R19 U10      ; R19 := U10
714 [-]: SELF      R19 R19 K132 ; R20 := R19; R19 := R19[0x2660b67b]
715 [-]: MOVE      R21 R12      ; R21 := R12
716 [-]: MOVE      R22 R1       ; R22 := R1
717 [-]: GETGLOBAL R23 K6       ; R23 := _T
718 [-]: GETTABLE  R23 R23 K133 ; R23 := R23["keyBindsSaved"]
719 [-]: EQ        1 R23 K17    ; if R23 == true then PC := 722
720 [-]: JMP       722          ; PC := 722
721 [-]: LOADKB    R23 0 1      ; R23 := false; PC := 722
722 [-]: LOADKB    R23 1 0      ; R23 := true
723 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
724 [-]: GETUPVAL  R19 U0       ; R19 := U0
725 [-]: GETTABLE  R19 R19 K40  ; R19 := R19["mPlayingWithController"]
726 [-]: TEST      R19 0        ; if not R19 then PC := 734
727 [-]: JMP       734          ; PC := 734
728 [-]: GETGLOBAL R19 K6       ; R19 := _T
729 [-]: GETTABLE  R19 R19 K133 ; R19 := R19["keyBindsSaved"]
730 [-]: TEST      R19 0        ; if not R19 then PC := 734
731 [-]: JMP       734          ; PC := 734
732 [-]: GETGLOBAL R19 K6       ; R19 := _T
733 [-]: SETTABLE  R19 K133 K8  ; R19["keyBindsSaved"] := nil
734 [-]: GETGLOBAL R19 K134     ; R19 := 0xcfc01047
735 [-]: GETUPVAL  R20 U33      ; R20 := U33
736 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
737 [-]: JMP       799          ; PC := 799
738 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
739 [-]: MOVE      R25 R23      ; R25 := R23
740 [-]: CALL      R24 2 2      ; R24 := R24(R25)
741 [-]: TEST      R24 0        ; if not R24 then PC := 746
742 [-]: JMP       746          ; PC := 746
743 [-]: GETUPVAL  R24 U33      ; R24 := U33
744 [-]: SETTABLE  R24 R22 K8   ; R24[R22] := nil
745 [-]: JMP       799          ; PC := 799
746 [-]: LOADK     R24 K135     ; R24 := "AbilityPanel.Ability"
747 [-]: GETGLOBAL R25 K46      ; R25 := 0xe72d2edb
748 [-]: EQ        0 R25 K21    ; if R25 ~= 3.000000 then PC := 751
749 [-]: JMP       751          ; PC := 751
750 [-]: LOADK     R24 K136     ; R24 := "StancePanel.StanceComponent.Stance"
751 [-]: GETGLOBAL R25 K1       ; R25 := 0xae91e43b
752 [-]: SELF      R25 R25 K137 ; R26 := R25; R25 := R25[0x91a24e4b]
753 [-]: MOVE      R27 R24      ; R27 := R24
754 [-]: MOVE      R28 R22      ; R28 := R22
755 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
756 [-]: CONST     R28 0        ; R28 := 0.000000
757 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
758 [-]: GETGLOBAL R26 K138     ; R26 := 0x5bced4c4
759 [-]: GETTABLE  R26 R26 K139 ; R26 := R26[0xd4c1d800]
760 [-]: GETUPVAL  R27 U13      ; R27 := U13
761 [-]: GETTABLE  R27 R27 K140 ; R27 := R27[0x15ba5fe6]
762 [-]: CONST     R28 4        ; R28 := 4.000000
763 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
764 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
765 [-]: MUL       R26 R25 R26  ; R26 := R25 * R26
766 [-]: GETUPVAL  R27 U13      ; R27 := U13
767 [-]: GETTABLE  R27 R27 K141 ; R27 := R27[0x49f30025]
768 [-]: GETGLOBAL R28 K1       ; R28 := 0xae91e43b
769 [-]: CALL      R27 2 3      ; R27,R28 := R27(R28)
770 [-]: DIV       R29 R27 K27  ; R29 := R27 / 9.000000
771 [-]: DIV       R25 R25 R29  ; R25 := R25 / R29
772 [-]: GETUPVAL  R29 U13      ; R29 := U13
773 [-]: GETTABLE  R29 R29 K142 ; R29 := R29[0xb5be5d4a]
774 [-]: GETGLOBAL R30 K1       ; R30 := 0xae91e43b
775 [-]: MOVE      R31 R24      ; R31 := R24
776 [-]: MOVE      R32 R22      ; R32 := R22
777 [-]: LOADK     R33 K143     ; R33 := ".Icon"
778 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
779 [-]: LOADKB    R32 1 0      ; R32 := true
780 [-]: CALL      R29 4 3      ; R29,R30 := R29(R30,R31,R32)
781 [-]: GETGLOBAL R31 K105     ; R31 := 0x89326c93
782 [-]: SELF      R31 R31 K144 ; R32 := R31; R31 := R31[0xb4364067]
783 [-]: CALL      R31 2 2      ; R31 := R31(R32)
784 [-]: GETUPVAL  R32 U13      ; R32 := U13
785 [-]: GETTABLE  R32 R32 K145 ; R32 := R32[0x3e145a1a]
786 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
787 [-]: ADD       R34 R29 R25  ; R34 := R29 + R25
788 [-]: ADD       R35 R30 R26  ; R35 := R30 + R26
789 [-]: MOVE      R36 R31      ; R36 := R31
790 [-]: CALL      R32 5 3      ; R32,R33 := R32(R33,R34,R35,R36)
791 [-]: SELF      R34 R23 K146 ; R35 := R23; R34 := R23[0xe28aa928]
792 [-]: GETGLOBAL R36 K147     ; R36 := 0xa421af95
793 [-]: MOVE      R37 R32      ; R37 := R32
794 [-]: MOVE      R38 R33      ; R38 := R33
795 [-]: CONST     R39 1        ; R39 := 1.000000
796 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
797 [-]: GETGLOBAL R37 K148     ; R37 := ZERO_ROTATION
798 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
799 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 738; R21 := R22 end
800 [-]: JMP       738          ; PC := 738
801 [-]: GETUPVAL  R34 U10      ; R34 := U10
802 [-]: SELF      R34 R34 K149 ; R35 := R34; R34 := R34[0x2855a0e4]
803 [-]: MOVE      R36 R12      ; R36 := R12
804 [-]: GETGLOBAL R37 K6       ; R37 := _T
805 [-]: GETTABLE  R37 R37 K150 ; R37 := R37["SubtitleVisible"]
806 [-]: EQ        1 R37 K17    ; if R37 == true then PC := 809
807 [-]: JMP       809          ; PC := 809
808 [-]: LOADKB    R37 0 1      ; R37 := false; PC := 809
809 [-]: LOADKB    R37 1 0      ; R37 := true
810 [-]: MOVE      R38 R1       ; R38 := R1
811 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
812 [-]: GETUPVAL  R34 U34      ; R34 := U34
813 [-]: MOVE      R35 R1       ; R35 := R1
814 [-]: CALL      R34 2 1      ; R34(R35)
815 [-]: GETUPVAL  R34 U35      ; R34 := U35
816 [-]: MOVE      R35 R12      ; R35 := R12
817 [-]: MOVE      R36 R1       ; R36 := R1
818 [-]: CALL      R34 3 1      ; R34(R35,R36)
819 [-]: GETUPVAL  R34 U10      ; R34 := U10
820 [-]: SELF      R34 R34 K151 ; R35 := R34; R34 := R34[0x840ecf2e]
821 [-]: MOVE      R36 R12      ; R36 := R12
822 [-]: GETGLOBAL R37 K6       ; R37 := _T
823 [-]: GETTABLE  R37 R37 K152 ; R37 := R37["DisableMiniMap"]
824 [-]: EQ        1 R37 K17    ; if R37 == true then PC := 827
825 [-]: JMP       827          ; PC := 827
826 [-]: LOADKB    R37 0 1      ; R37 := false; PC := 827
827 [-]: LOADKB    R37 1 0      ; R37 := true
828 [-]: GETGLOBAL R38 K6       ; R38 := _T
829 [-]: GETTABLE  R38 R38 K152 ; R38 := R38["DisableMiniMap"]
830 [-]: EQ        0 R38 K17    ; if R38 ~= true then PC := 833
831 [-]: JMP       833          ; PC := 833
832 [-]: LOADKB    R38 0 1      ; R38 := false; PC := 833
833 [-]: LOADKB    R38 1 0      ; R38 := true
834 [-]: GETGLOBAL R39 K6       ; R39 := _T
835 [-]: GETTABLE  R39 R39 K153 ; R39 := R39["OverlayMapVisible"]
836 [-]: EQ        1 R39 K17    ; if R39 == true then PC := 839
837 [-]: JMP       839          ; PC := 839
838 [-]: LOADKB    R39 0 1      ; R39 := false; PC := 839
839 [-]: LOADKB    R39 1 0      ; R39 := true
840 [-]: CALL      R34 6 1      ; R34(R35,R36,R37,R38,R39)
841 [-]: GETUPVAL  R34 U10      ; R34 := U10
842 [-]: SELF      R34 R34 K154 ; R35 := R34; R34 := R34[0xb8366c40]
843 [-]: CALL      R34 2 2      ; R34 := R34(R35)
844 [-]: TEST      R34 0        ; if not R34 then PC := 849
845 [-]: JMP       849          ; PC := 849
846 [-]: GETUPVAL  R34 U36      ; R34 := U36
847 [-]: GETTABLE  R34 R34 K155 ; R34 := R34[0x6f72d56e]
848 [-]: CALL      R34 1 1      ; R34()
849 [-]: GETUPVAL  R34 U37      ; R34 := U37
850 [-]: GETTABLE  R34 R34 K156 ; R34 := R34["PhotoBooth"]
851 [-]: TEST      R34 1        ; if R34 then PC := 865
852 [-]: JMP       865          ; PC := 865
853 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
854 [-]: MOVE      R35 R12      ; R35 := R12
855 [-]: CALL      R34 2 2      ; R34 := R34(R35)
856 [-]: TEST      R34 1        ; if R34 then PC := 865
857 [-]: JMP       865          ; PC := 865
858 [-]: GETUPVAL  R34 U10      ; R34 := U10
859 [-]: SELF      R34 R34 K157 ; R35 := R34; R34 := R34[0x0b8ec6da]
860 [-]: MOVE      R36 R12      ; R36 := R12
861 [-]: GETUPVAL  R37 U38      ; R37 := U38
862 [-]: GETGLOBAL R38 K6       ; R38 := _T
863 [-]: GETTABLE  R38 R38 K158 ; R38 := R38["StalkerPlayerAvatar"]
864 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
865 [-]: GETUPVAL  R34 U39      ; R34 := U39
866 [-]: CALL      R34 1 1      ; R34()
867 [-]: GETUPVAL  R34 U40      ; R34 := U40
868 [-]: MOVE      R35 R12      ; R35 := R12
869 [-]: MOVE      R36 R1       ; R36 := R1
870 [-]: CALL      R34 3 1      ; R34(R35,R36)
871 [-]: GETUPVAL  R34 U36      ; R34 := U36
872 [-]: GETTABLE  R34 R34 K159 ; R34 := R34[0x477ee521]
873 [-]: MOVE      R35 R1       ; R35 := R1
874 [-]: CALL      R34 2 1      ; R34(R35)
875 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
876 [-]: GETUPVAL  R35 U22      ; R35 := U22
877 [-]: CALL      R34 2 2      ; R34 := R34(R35)
878 [-]: TEST      R34 1        ; if R34 then PC := 903
879 [-]: JMP       903          ; PC := 903
880 [-]: GETUPVAL  R34 U29      ; R34 := U29
881 [-]: GETTABLE  R34 R34 K160 ; R34 := R34["isEnabled"]
882 [-]: GETTABLE  R34 R34 K161 ; R34 := R34["mValue"]
883 [-]: TEST      R34 1        ; if R34 then PC := 903
884 [-]: JMP       903          ; PC := 903
885 [-]: GETUPVAL  R34 U22      ; R34 := U22
886 [-]: SELF      R34 R34 K162 ; R35 := R34; R34 := R34[0xf017005a]
887 [-]: CALL      R34 2 2      ; R34 := R34(R35)
888 [-]: GETUPVAL  R35 U41      ; R35 := U41
889 [-]: GETTABLE  R35 R35 K161 ; R35 := R35["mValue"]
890 [-]: EQ        1 R35 R34    ; if R35 == R34 then PC := 903
891 [-]: JMP       903          ; PC := 903
892 [-]: GETUPVAL  R35 U22      ; R35 := U22
893 [-]: SELF      R35 R35 K163 ; R36 := R35; R35 := R35[0x85f8fedb]
894 [-]: CALL      R35 2 2      ; R35 := R35(R36)
895 [-]: TEST      R35 0        ; if not R35 then PC := 899
896 [-]: JMP       899          ; PC := 899
897 [-]: GETGLOBAL R35 K6       ; R35 := _T
898 [-]: SETTABLE  R35 K164 K17 ; R35["GenericMessageNoAnimateTyping"] := true
899 [-]: GETUPVAL  R35 U41      ; R35 := U41
900 [-]: SELF      R35 R35 K165 ; R36 := R35; R35 := R35[0xc63157a6]
901 [-]: MOVE      R37 R34      ; R37 := R34
902 [-]: CALL      R35 3 1      ; R35(R36,R37)
903 [-]: GETGLOBAL R35 K46      ; R35 := 0xe72d2edb
904 [-]: EQ        0 R35 K19    ; if R35 ~= 1.000000 then PC := 964
905 [-]: JMP       964          ; PC := 964
906 [-]: GETGLOBAL R35 K0       ; R35 := 0x7b998233
907 [-]: GETUPVAL  R36 U15      ; R36 := U15
908 [-]: CALL      R35 2 2      ; R35 := R35(R36)
909 [-]: TEST      R35 1        ; if R35 then PC := 964
910 [-]: JMP       964          ; PC := 964
911 [-]: GETGLOBAL R35 K0       ; R35 := 0x7b998233
912 [-]: GETUPVAL  R36 U22      ; R36 := U22
913 [-]: CALL      R35 2 2      ; R35 := R35(R36)
914 [-]: TEST      R35 1        ; if R35 then PC := 964
915 [-]: JMP       964          ; PC := 964
916 [-]: GETUPVAL  R35 U22      ; R35 := U22
917 [-]: SELF      R35 R35 K166 ; R36 := R35; R35 := R35[0x9239435d]
918 [-]: CALL      R35 2 2      ; R35 := R35(R36)
919 [-]: GETUPVAL  R36 U17      ; R36 := U17
920 [-]: GETGLOBAL R37 K168     ; R37 := 0x42dcc9f5
921 [-]: GETUPVAL  R38 U17      ; R38 := U17
922 [-]: GETTABLE  R38 R38 K167 ; R38 := R38["HeartRateFactor"]
923 [-]: MUL       R39 R1 K169  ; R39 := R1 * 1.400000
924 [-]: MUL       R39 R35 R39  ; R39 := R35 * R39
925 [-]: ADD       R38 R38 R39  ; R38 := R38 + R39
926 [-]: DIV       R39 R1 K21   ; R39 := R1 / 3.000000
927 [-]: SUB       R38 R38 R39  ; R38 := R38 - R39
928 [-]: CONST     R39 1        ; R39 := 1.000000
929 [-]: CONST     R40 4        ; R40 := 4.000000
930 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
931 [-]: SETTABLE  R36 K167 R37 ; R36["HeartRateFactor"] := R37
932 [-]: GETGLOBAL R36 K138     ; R36 := 0x5bced4c4
933 [-]: GETTABLE  R36 R36 K170 ; R36 := R36[0xac1b386a]
934 [-]: GETUPVAL  R37 U17      ; R37 := U17
935 [-]: GETTABLE  R37 R37 K171 ; R37 := R37["HeartRateCurrFrame"]
936 [-]: GETUPVAL  R38 U17      ; R38 := U17
937 [-]: GETTABLE  R38 R38 K167 ; R38 := R38["HeartRateFactor"]
938 [-]: DIV       R38 R38 K23  ; R38 := R38 / 5.000000
939 [-]: ADD       R37 R37 R38  ; R37 := R37 + R38
940 [-]: GETUPVAL  R38 U17      ; R38 := U17
941 [-]: GETTABLE  R38 R38 K172 ; R38 := R38["HeartRateMaxFrame"]
942 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
943 [-]: GETGLOBAL R37 K173     ; R37 := 0x38f10e85
944 [-]: GETGLOBAL R38 K1       ; R38 := 0xae91e43b
945 [-]: LOADK     R39 K174     ; R39 := "HealthAndShield.HeartRateBacker.gotoAndStop"
946 [-]: GETGLOBAL R40 K138     ; R40 := 0x5bced4c4
947 [-]: GETTABLE  R40 R40 K175 ; R40 := R40[0x99675e23]
948 [-]: MOVE      R41 R36      ; R41 := R36
949 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
950 [-]: CALL      R37 0 1      ; R37(R38,...)
951 [-]: GETGLOBAL R37 K138     ; R37 := 0x5bced4c4
952 [-]: GETTABLE  R37 R37 K175 ; R37 := R37[0x99675e23]
953 [-]: MOVE      R38 R36      ; R38 := R36
954 [-]: CALL      R37 2 2      ; R37 := R37(R38)
955 [-]: GETUPVAL  R38 U17      ; R38 := U17
956 [-]: GETTABLE  R38 R38 K172 ; R38 := R38["HeartRateMaxFrame"]
957 [-]: EQ        0 R37 R38    ; if R37 ~= R38 then PC := 962
958 [-]: JMP       962          ; PC := 962
959 [-]: GETUPVAL  R37 U17      ; R37 := U17
960 [-]: SETTABLE  R37 K171 K19 ; R37["HeartRateCurrFrame"] := 1.000000
961 [-]: JMP       964          ; PC := 964
962 [-]: GETUPVAL  R37 U17      ; R37 := U17
963 [-]: SETTABLE  R37 K171 R36 ; R37["HeartRateCurrFrame"] := R36
964 [-]: GETGLOBAL R37 K41      ; R37 := 0x34291f5c
965 [-]: GETTABLE  R37 R37 K176 ; R37 := R37[0x781669d7]
966 [-]: CALL      R37 1 2      ; R37 := R37()
967 [-]: TEST      R37 0        ; if not R37 then PC := 982
968 [-]: JMP       982          ; PC := 982
969 [-]: CONST     R37 1        ; R37 := 1.000000
970 [-]: CONST     R38 4        ; R38 := 4.000000
971 [-]: CONST     R39 1        ; R39 := 1.000000
972 [-]: FORPREP   R37 981      ; R37 -= R39; PC := 981
973 [-]: GETGLOBAL R41 K1       ; R41 := 0xae91e43b
974 [-]: SELF      R41 R41 K177 ; R42 := R41; R41 := R41[0xaade900e]
975 [-]: LOADK     R43 K135     ; R43 := "AbilityPanel.Ability"
976 [-]: MOVE      R44 R40      ; R44 := R40
977 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
978 [-]: CONST     R44 11       ; R44 := 11.000000
979 [-]: LOADKB    R45 0 0      ; R45 := false
980 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
981 [-]: FORLOOP   R37 973      ; R37 += R39; if R37 <= R38 then begin PC := 973; R40 := R37 end
982 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 3852
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["SpectatorHudOpen"] := false
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: SETUPVAL  R0 U0        ; U82 := R0
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CLOSURE   R1 0         ; R1 := closure(Function #112.1)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: GETUPVAL  R0 U3        ; R0 := U3
 11 [-]: SETTABLE  R0 K3 R1     ; R0["Update"] := R1
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U4        ; R1 := U4
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0x4c3dfdb3]
 15 [-]: LOADKB    R2 0 0       ; R2 := false
 16 [-]: CLOSURE   R3 1         ; R3 := closure(Function #112.2)
 17 [-]: GETUPVAL  R0 U2        ; R0 := U2
 18 [-]: GETUPVAL  R0 U3        ; R0 := U3
 19 [-]: GETUPVAL  R0 U5        ; R0 := U5
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: SETTABLE  R0 K4 R1     ; R0["isEnabled"] := R1
 22 [-]: RETURN    R0 1         ; return 


; Function #112.1:
;
; Name:            
; Defined at line: 3858
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["isEnabled"]
  3 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mValue"]
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["IsSpectating"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 35
  7 [-]: JMP       35           ; PC := 35
  8 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 35
 12 [-]: JMP       35           ; PC := 35
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x34485477]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 35
 17 [-]: JMP       35           ; PC := 35
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x19b1c237]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: LT        1 R0 K7      ; if R0 < 4.000000 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 24 [-]: GETUPVAL  R1 U3        ; R1 := U3
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: TEST      R0 1         ; if R0 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 29 [-]: GETUPVAL  R1 U3        ; R1 := U3
 30 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xbb610e5b]
 31 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 32 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 33 [-]: TEST      R0 0         ; if not R0 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: RETURN    R0 1         ; return 
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["isEnabled"]
 38 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xc63157a6]
 39 [-]: GETUPVAL  R2 U1        ; R2 := U1
 40 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["IsSpectating"]
 41 [-]: CALL      R0 3 1       ; R0(R1,R2)
 42 [-]: RETURN    R0 1         ; return 


; Function #112.2:
;
; Name:            
; Defined at line: 3866
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 64
  2 [-]: JMP       64           ; PC := 64
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SecretMiniGameActive"]
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x66498189]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R3 K4        ; R3 := 0x9ba7909f
 17 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xbcfb64ab]
 18 [-]: MOVE      R5 R2        ; R5 := R2
 19 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x7b998233
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3[0x32302b4a]
 26 [-]: CALL      R4 2 1       ; R4(R5)
 27 [-]: GETGLOBAL R4 K4        ; R4 := 0x9ba7909f
 28 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xbcfb64ab]
 29 [-]: GETGLOBAL R6 K7        ; R6 := 0x90d32951
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 32 [-]: GETUPVAL  R6 U1        ; R6 := U1
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 1         ; if R5 then PC := 64
 35 [-]: JMP       64           ; PC := 64
 36 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 37 [-]: GETUPVAL  R6 U1        ; R6 := U1
 38 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0xbb610e5b]
 39 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 40 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 41 [-]: TEST      R5 1         ; if R5 then PC := 64
 42 [-]: JMP       64           ; PC := 64
 43 [-]: GETUPVAL  R5 U2        ; R5 := U2
 44 [-]: GETTABLE  R5 R5 K9     ; R5 := R5[0x4432cc91]
 45 [-]: GETUPVAL  R6 U1        ; R6 := U1
 46 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0xbb610e5b]
 47 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 48 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 49 [-]: TEST      R5 1         ; if R5 then PC := 64
 50 [-]: JMP       64           ; PC := 64
 51 [-]: GETUPVAL  R5 U1        ; R5 := U1
 52 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0xbb610e5b]
 53 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 54 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x2047cfe7]
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: TEST      R5 0         ; if not R5 then PC := 64
 57 [-]: JMP       64           ; PC := 64
 58 [-]: TEST      R4 1         ; if R4 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETGLOBAL R5 K4        ; R5 := 0x9ba7909f
 61 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x6dd7aa66]
 62 [-]: GETGLOBAL R7 K7        ; R7 := 0x90d32951
 63 [-]: CALL      R5 3 1       ; R5(R6,R7)
 64 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 3890
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: CLOSURE   R1 0         ; R1 := closure(Function #113.1)
  5 [-]: SETTABLE  R0 K0 R1     ; R0["Update"] := R1
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x67bc869f]
  8 [-]: LOADK     R2 K3        ; R2 := "MinimapContainer.DefenseTarget"
  9 [-]: CONST     R3 10        ; R3 := 10.000000
 10 [-]: CONST     R4 0         ; R4 := 0.000000
 11 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: EQ        0 R0 K4      ; if R0 ~= nil then PC := 42
 14 [-]: JMP       42           ; PC := 42
 15 [-]: GETGLOBAL R0 K5        ; R0 := 0x2d0fad09
 16 [-]: LOADK     R1 K6        ; R1 := "Lotus.Interface.Components.PlayerPanelRedux"
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: GETTABLE  R1 R0 K7     ; R1 := R0[0xae6791ba]
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 20 [-]: LOADK     R3 K8        ; R3 := "HealthAndShield.Squad"
 21 [-]: GETGLOBAL R4 K9        ; R4 := 0xca561df9
 22 [-]: GETUPVAL  R5 U2        ; R5 := U2
 23 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x06d055f9]
 24 [-]: GETUPVAL  R6 U3        ; R6 := U3
 25 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["MissionType"]
 26 [-]: EQ        1 R6 K13     ; if R6 == 18.000000 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 29
 29 [-]: LOADKB    R6 1 0       ; R6 := true
 30 [-]: GETGLOBAL R7 K14       ; R7 := 0x5694100c
 31 [-]: LOADNIL   R8 R8        ; R8 := nil
 32 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 33 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 34 [-]: SETUPVAL  R1 U1        ; U82 := R1
 35 [-]: GETUPVAL  R1 U1        ; R1 := U1
 36 [-]: SETTABLE  R1 K15 K16   ; R1["mHideVoipWhenInactive"] := true
 37 [-]: GETUPVAL  R1 U1        ; R1 := U1
 38 [-]: SETTABLE  R1 K17 K18   ; R1["mShowYourself"] := false
 39 [-]: GETUPVAL  R1 U1        ; R1 := U1
 40 [-]: GETGLOBAL R2 K20       ; R2 := 0xd8f49b1c
 41 [-]: SETTABLE  R1 K19 R2    ; R1["mVoipTextures"] := R2
 42 [-]: GETUPVAL  R1 U1        ; R1 := U1
 43 [-]: GETGLOBAL R2 K22       ; R2 := 0x8b491a77
 44 [-]: SETTABLE  R1 K21 R2    ; R1["mStatusIconList"] := R2
 45 [-]: GETGLOBAL R1 K23       ; R1 := 0xbe190284
 46 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0xef893aec]
 47 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 48 [-]: GETUPVAL  R2 U1        ; R2 := U1
 49 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2[0x1589e6dc]
 50 [-]: GETTABLE  R4 R1 K26    ; R4 := R1["missionType"]
 51 [-]: EQ        1 R4 K27     ; if R4 == 31.000000 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 54
 54 [-]: LOADKB    R4 1 0       ; R4 := true
 55 [-]: CALL      R2 3 1       ; R2(R3,R4)
 56 [-]: GETTABLE  R2 R1 K28    ; R2 := R1["periodicMissionTag"]
 57 [-]: GETUPVAL  R3 U5        ; R3 := U5
 58 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["ELITE_ALERT_PERIODIC_MISSION_TAG"]
 59 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: GETTABLE  R2 R1 K28    ; R2 := R1["periodicMissionTag"]
 62 [-]: GETUPVAL  R3 U5        ; R3 := U5
 63 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
 64 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 67
 67 [-]: LOADKB    R2 1 0       ; R2 := true
 68 [-]: SETUPVAL  R2 U4        ; U82 := R4
 69 [-]: GETGLOBAL R2 K31       ; R2 := 0x89326c93
 70 [-]: SELF      R2 R2 K32    ; R3 := R2; R2 := R2[0xded7d5cd]
 71 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 72 [-]: GETGLOBAL R3 K33       ; R3 := 0x7b998233
 73 [-]: MOVE      R4 R2        ; R4 := R2
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: TEST      R3 1         ; if R3 then PC := 89
 76 [-]: JMP       89           ; PC := 89
 77 [-]: GETGLOBAL R3 K33       ; R3 := 0x7b998233
 78 [-]: GETTABLE  R4 R2 K34    ; R4 := R2[1.000000]
 79 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 80 [-]: TEST      R3 1         ; if R3 then PC := 89
 81 [-]: JMP       89           ; PC := 89
 82 [-]: GETGLOBAL R3 K33       ; R3 := 0x7b998233
 83 [-]: GETTABLE  R4 R2 K34    ; R4 := R2[1.000000]
 84 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xbb610e5b]
 85 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 86 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 87 [-]: TEST      R3 0         ; if not R3 then PC := 94
 88 [-]: JMP       94           ; PC := 94
 89 [-]: GETUPVAL  R3 U0        ; R3 := U0
 90 [-]: CLOSURE   R4 1         ; R4 := closure(Function #113.2)
 91 [-]: GETUPVAL  R0 U6        ; R0 := U6
 92 [-]: SETTABLE  R3 K0 R4     ; R3["Update"] := R4
 93 [-]: RETURN    R0 1         ; return 
 94 [-]: GETGLOBAL R3 K36       ; R3 := 0x76ea806b
 95 [-]: SELF      R3 R3 K37    ; R4 := R3; R3 := R3[0x3f3ae64c]
 96 [-]: CONST     R5 0         ; R5 := 0.000000
 97 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 98 [-]: TEST      R3 0         ; if not R3 then PC := 111
 99 [-]: JMP       111          ; PC := 111
100 [-]: SELF      R4 R3 K38    ; R5 := R3; R4 := R3[0x40e9c32b]
101 [-]: CALL      R4 2 2       ; R4 := R4(R5)
102 [-]: TEST      R4 0         ; if not R4 then PC := 111
103 [-]: JMP       111          ; PC := 111
104 [-]: SELF      R5 R4 K39    ; R6 := R4; R5 := R4[0x2cba1ca6]
105 [-]: CALL      R5 2 2       ; R5 := R5(R6)
106 [-]: TEST      R5 0         ; if not R5 then PC := 111
107 [-]: JMP       111          ; PC := 111
108 [-]: GETUPVAL  R5 U1        ; R5 := U1
109 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5[0x587aa683]
110 [-]: CALL      R5 2 1       ; R5(R6)
111 [-]: RETURN    R0 1         ; return 


; Function #113.1:
;
; Name:            
; Defined at line: 3892
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #113.2:
;
; Name:            
; Defined at line: 3917
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 3932
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: LOADK     R2 K2        ; R2 := "MinimapContainer.DefenseTarget"
  4 [-]: CONST     R3 8         ; R3 := 8.000000
  5 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  6 [-]: CONST     R5 10        ; R5 := 10.000000
  7 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  8 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  9 [-]: CONST     R6 100       ; R6 := 100.000000
 10 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 11 [-]: CONST     R6 0         ; R6 := 0.500000
 12 [-]: CONST     R7 0         ; R7 := 0.000000
 13 [-]: LOADNIL   R8 R8        ; R8 := nil
 14 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 15 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 16 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x67bc869f]
 17 [-]: LOADK     R2 K5        ; R2 := "MinimapContainer.DefenseTarget.Health"
 18 [-]: CONST     R3 10        ; R3 := 10.000000
 19 [-]: CONST     R4 50        ; R4 := 50.000000
 20 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 21 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x67bc869f]
 23 [-]: LOADK     R2 K6        ; R2 := "MinimapContainer.DefenseTarget.Health.Mover"
 24 [-]: CONST     R3 9         ; R3 := 9.000000
 25 [-]: CONST     R4 16711680  ; R4 := 16711680.000000
 26 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 27 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 28 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x67bc869f]
 29 [-]: LOADK     R2 K7        ; R2 := "MinimapContainer.DefenseTarget.Health.Background"
 30 [-]: CONST     R3 9         ; R3 := 9.000000
 31 [-]: CONST     R4 0         ; R4 := 0.000000
 32 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 33 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 3939
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: LOADK     R2 K2        ; R2 := "MinimapContainer.DefenseTarget"
  4 [-]: CONST     R3 8         ; R3 := 8.000000
  5 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  6 [-]: CONST     R5 10        ; R5 := 10.000000
  7 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  8 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  9 [-]: CONST     R6 0         ; R6 := 0.000000
 10 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 11 [-]: CONST     R6 0         ; R6 := 0.500000
 12 [-]: CONST     R7 0         ; R7 := 0.000000
 13 [-]: LOADNIL   R8 R8        ; R8 := nil
 14 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 15 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 3943
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x5f56eeab]
  3 [-]: LOADK     R3 K2        ; R3 := "MinimapContainer.DefenseTarget.Name"
  4 [-]: CONST     R4 29        ; R4 := 29.000000
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 3948
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0x42dcc9f5
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x55f27c30]
  8 [-]: MUL       R3 R0 K4     ; R3 := R0 * 100.000000
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: CONST     R3 0         ; R3 := 0.000000
 11 [-]: CONST     R4 100       ; R4 := 100.000000
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 14 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x5f56eeab]
 15 [-]: LOADK     R4 K7        ; R4 := "MinimapContainer.DefenseTarget.Value"
 16 [-]: CONST     R5 29        ; R5 := 29.000000
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: LOADK     R7 K8        ; R7 := "%"
 19 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 20 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 21 [-]: GETUPVAL  R2 U0        ; R2 := U0
 22 [-]: EQ        0 R2 K9      ; if R2 ~= nil then PC := 47
 23 [-]: JMP       47           ; PC := 47
 24 [-]: GETUPVAL  R2 U1        ; R2 := U1
 25 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0xae6791ba]
 26 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 27 [-]: LOADNIL   R4 R4        ; R4 := nil
 28 [-]: CONST     R5 100       ; R5 := 100.000000
 29 [-]: LOADK     R6 K11       ; R6 := "MinimapContainer.DefenseTarget.Target"
 30 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 31 [-]: SETUPVAL  R2 U0        ; U82 := R0
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: CLOSURE   R3 0         ; R3 := closure(Function #117.1)
 34 [-]: SETTABLE  R2 K12 R3    ; R2["mOverrideGetHealth"] := R3
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: CLOSURE   R3 1         ; R3 := closure(Function #117.2)
 37 [-]: SETTABLE  R2 K13 R3    ; R2["mOverrideGetMaxHealth"] := R3
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: CLOSURE   R3 2         ; R3 := closure(Function #117.3)
 40 [-]: SETTABLE  R2 K14 R3    ; R2["mOverrideGetShield"] := R3
 41 [-]: GETUPVAL  R2 U0        ; R2 := U0
 42 [-]: CLOSURE   R3 3         ; R3 := closure(Function #117.4)
 43 [-]: SETTABLE  R2 K15 R3    ; R2["mOverrideGetMaxShield"] := R3
 44 [-]: GETUPVAL  R2 U0        ; R2 := U0
 45 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x687ae094]
 46 [-]: CALL      R2 2 1       ; R2(R3)
 47 [-]: GETUPVAL  R2 U0        ; R2 := U0
 48 [-]: SETTABLE  R2 K17 R1    ; R2["mProgress"] := R1
 49 [-]: GETUPVAL  R2 U0        ; R2 := U0
 50 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xfaa69527]
 51 [-]: CALL      R2 2 1       ; R2(R3)
 52 [-]: RETURN    R0 1         ; return 


; Function #117.1:
;
; Name:            
; Defined at line: 3954
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mProgress"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #117.2:
;
; Name:            
; Defined at line: 3955
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: CONST     R1 100       ; R1 := 100.000000
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #117.3:
;
; Name:            
; Defined at line: 3956
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: CONST     R1 0         ; R1 := 0.000000
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #117.4:
;
; Name:            
; Defined at line: 3957
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: CONST     R1 0         ; R1 := 0.000000
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 3964
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["ActiveImpactMessage"] := nil
  3 [-]: LOADNIL   R0 R0        ; R0 := nil
  4 [-]: SETUPVAL  R0 U1        ; U82 := R1
  5 [-]: GETGLOBAL R0 K2        ; R0 := 0x25312c9b
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  7 [-]: LOADK     R2 K4        ; R2 := "ImpactMessage"
  8 [-]: CONST     R3 0         ; R3 := 0.000000
  9 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 10 [-]: CONST     R5 10        ; R5 := 10.000000
 11 [-]: CONST     R6 5         ; R6 := 5.000000
 12 [-]: CONST     R7 6         ; R7 := 6.000000
 13 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 14 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 15 [-]: CONST     R6 0         ; R6 := 0.000000
 16 [-]: GETUPVAL  R7 U0        ; R7 := U0
 17 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["mImpactMessageTransitionScale"]
 18 [-]: GETUPVAL  R8 U0        ; R8 := U0
 19 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mImpactMessageTransitionScale"]
 20 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 21 [-]: CONST     R6 0         ; R6 := 0.250000
 22 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x7b998233
 24 [-]: GETUPVAL  R1 U2        ; R1 := U2
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: TEST      R0 1         ; if R0 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
 29 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x9275da44]
 30 [-]: GETUPVAL  R2 U2        ; R2 := U2
 31 [-]: CALL      R0 3 1       ; R0(R1,R2)
 32 [-]: LOADNIL   R0 R0        ; R0 := nil
 33 [-]: SETUPVAL  R0 U2        ; U82 := R2
 34 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 3974
; #Upvalues:       12
; #Parameters:     12
; Is_vararg:       0
; Max Stack Size:  104

  1 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
  2 [-]: GETGLOBAL R13 K1       ; R13 := 0xae91e43b
  3 [-]: CALL      R12 2 2      ; R12 := R12(R13)
  4 [-]: TEST      R12 1        ; if R12 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
  7 [-]: GETUPVAL  R13 U0       ; R13 := U0
  8 [-]: CALL      R12 2 2      ; R12 := R12(R13)
  9 [-]: TEST      R12 0        ; if not R12 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: NEWTABLE  R12 0 3      ; R12 := {}
 13 [-]: SETTABLE  R12 K2 R0    ; R12["Message"] := R0
 14 [-]: TESTSET   R13 R5 1     ; if R5 then PC := 17 else R13 := R5
 15 [-]: JMP       17           ; PC := 17
 16 [-]: NEWTABLE  R13 0 0      ; R13 := {}
 17 [-]: SETTABLE  R12 K3 R13   ; R12["Params"] := R13
 18 [-]: SETTABLE  R12 K4 R10   ; R12["InputFilter"] := R10
 19 [-]: SETUPVAL  R12 U1       ; U82 := R1
 20 [-]: GETGLOBAL R12 K5       ; R12 := 0x0b96777e
 21 [-]: MOVE      R13 R0       ; R13 := R0
 22 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 23 [-]: EQ        0 R12 K6     ; if R12 ~= "function" then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: MOVE      R12 R0       ; R12 := R0
 26 [-]: CALL      R12 1 2      ; R12 := R12()
 27 [-]: MOVE      R0 R12       ; R0 := R12
 28 [-]: GETUPVAL  R12 U2       ; R12 := U2
 29 [-]: MOVE      R13 R0       ; R13 := R0
 30 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 31 [-]: MOVE      R0 R12       ; R0 := R12
 32 [-]: GETUPVAL  R12 U0       ; R12 := U0
 33 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12[0xf2deaf69]
 34 [-]: GETGLOBAL R14 K8       ; R14 := gLotusBasePvpGameRulesType
 35 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 36 [-]: LE        0 K9 R1      ; if 0.000000 > R1 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETGLOBAL R13 K10      ; R13 := 0x5bced4c4
 39 [-]: GETTABLE  R13 R13 K11  ; R13 := R13[0xb62ecfe0]
 40 [-]: MOVE      R14 R1       ; R14 := R1
 41 [-]: CONST     R15 0        ; R15 := 0.500000
 42 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 43 [-]: MOVE      R1 R13       ; R1 := R13
 44 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 45 [-]: MOVE      R14 R2       ; R14 := R2
 46 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 47 [-]: TEST      R13 0        ; if not R13 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: LOADKB    R2 1 0       ; R2 := true
 50 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 51 [-]: MOVE      R14 R3       ; R14 := R3
 52 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 53 [-]: TEST      R13 0        ; if not R13 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: GETGLOBAL R3 K12       ; R3 := 0xd84b5282
 56 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 57 [-]: MOVE      R14 R4       ; R14 := R4
 58 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 59 [-]: TEST      R13 0        ; if not R13 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: LOADKB    R4 1 0       ; R4 := true
 62 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 63 [-]: MOVE      R14 R6       ; R14 := R6
 64 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 65 [-]: TEST      R13 0        ; if not R13 then PC := 77
 66 [-]: JMP       77           ; PC := 77
 67 [-]: GETUPVAL  R13 U3       ; R13 := U3
 68 [-]: GETTABLE  R13 R13 K13  ; R13 := R13[0x06d055f9]
 69 [-]: GETUPVAL  R14 U0       ; R14 := U0
 70 [-]: SELF      R14 R14 K7   ; R15 := R14; R14 := R14[0xf2deaf69]
 71 [-]: GETGLOBAL R16 K8       ; R16 := gLotusBasePvpGameRulesType
 72 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 73 [-]: CONST     R15 2        ; R15 := 2.000000
 74 [-]: CONST     R16 1        ; R16 := 1.000000
 75 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 76 [-]: MOVE      R6 R13       ; R6 := R13
 77 [-]: EQ        0 R6 K14     ; if R6 ~= 1.000000 then PC := 88
 78 [-]: JMP       88           ; PC := 88
 79 [-]: GETGLOBAL R13 K15      ; R13 := 0xe72d2edb
 80 [-]: EQ        0 R13 K17    ; if R13 ~= 4.000000 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETUPVAL  R13 U4       ; R13 := U4
 83 [-]: GETTABLE  R13 R13 K18  ; R13 := R13["NewWarActive"]
 84 [-]: TEST      R13 1        ; if R13 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: CONST     R6 4         ; R6 := 4.000000
 87 [-]: LOADK     R11 K19      ; R11 := "Drifter"
 88 [-]: EQ        0 R6 K17     ; if R6 ~= 4.000000 then PC := 104
 89 [-]: JMP       104          ; PC := 104
 90 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 91 [-]: MOVE      R14 R11      ; R14 := R11
 92 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 93 [-]: TEST      R13 1        ; if R13 then PC := 100
 94 [-]: JMP       100          ; PC := 100
 95 [-]: GETGLOBAL R13 K20      ; R13 := _T
 96 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["ImpactMessageTexturePacks"]
 97 [-]: GETTABLE  R13 R13 R11  ; R13 := R13[R11]
 98 [-]: EQ        0 R13 K22    ; if R13 ~= nil then PC := 104
 99 [-]: JMP       104          ; PC := 104
100 [-]: GETGLOBAL R13 K23      ; R13 := 0x3d106989
101 [-]: LOADK     R14 K24      ; R14 := "No texture pack for impact message"
102 [-]: CALL      R13 2 1      ; R13(R14)
103 [-]: RETURN    R0 1         ; return 
104 [-]: EQ        0 R6 K17     ; if R6 ~= 4.000000 then PC := 292
105 [-]: JMP       292          ; PC := 292
106 [-]: GETUPVAL  R13 U5       ; R13 := U5
107 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["ActiveImpactMessage"]
108 [-]: EQ        1 R13 K22    ; if R13 == nil then PC := 292
109 [-]: JMP       292          ; PC := 292
110 [-]: GETUPVAL  R13 U5       ; R13 := U5
111 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["ActiveImpactMessage"]
112 [-]: EQ        0 R13 R11    ; if R13 ~= R11 then PC := 292
113 [-]: JMP       292          ; PC := 292
114 [-]: GETGLOBAL R13 K20      ; R13 := _T
115 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["ImpactMessageTexturePacks"]
116 [-]: GETTABLE  R13 R13 R11  ; R13 := R13[R11]
117 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
118 [-]: MOVE      R15 R13      ; R15 := R13
119 [-]: CALL      R14 2 2      ; R14 := R14(R15)
120 [-]: TEST      R14 1        ; if R14 then PC := 291
121 [-]: JMP       291          ; PC := 291
122 [-]: LOADK     R14 K26      ; R14 := ""
123 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
124 [-]: MOVE      R16 R10      ; R16 := R10
125 [-]: CALL      R15 2 2      ; R15 := R15(R16)
126 [-]: TEST      R15 1        ; if R15 then PC := 150
127 [-]: JMP       150          ; PC := 150
128 [-]: GETGLOBAL R15 K1       ; R15 := 0xae91e43b
129 [-]: SELF      R15 R15 K27  ; R16 := R15; R15 := R15[0x54f5d6ad]
130 [-]: MOVE      R17 R0       ; R17 := R0
131 [-]: MOVE      R18 R10      ; R18 := R10
132 [-]: MOVE      R19 R5       ; R19 := R5
133 [-]: CALL      R15 5 2      ; R15 := R15(R16,R17,R18,R19)
134 [-]: MOVE      R14 R15      ; R14 := R15
135 [-]: GETGLOBAL R15 K28      ; R15 := 0x7f5022cf
136 [-]: GETTABLE  R15 R15 K29  ; R15 := R15[0xa5c556b9]
137 [-]: MOVE      R16 R14      ; R16 := R14
138 [-]: LOADK     R17 K30      ; R17 := "<[%u%d_]+>"
139 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
140 [-]: TEST      R15 0        ; if not R15 then PC := 157
141 [-]: JMP       157          ; PC := 157
142 [-]: GETGLOBAL R15 K1       ; R15 := 0xae91e43b
143 [-]: SELF      R15 R15 K31  ; R16 := R15; R15 := R15[0x42b04007]
144 [-]: MOVE      R17 R0       ; R17 := R0
145 [-]: LOADKB    R18 1 0      ; R18 := true
146 [-]: MOVE      R19 R5       ; R19 := R5
147 [-]: CALL      R15 5 2      ; R15 := R15(R16,R17,R18,R19)
148 [-]: MOVE      R14 R15      ; R14 := R15
149 [-]: JMP       157          ; PC := 157
150 [-]: GETGLOBAL R15 K1       ; R15 := 0xae91e43b
151 [-]: SELF      R15 R15 K31  ; R16 := R15; R15 := R15[0x42b04007]
152 [-]: MOVE      R17 R0       ; R17 := R0
153 [-]: LOADKB    R18 1 0      ; R18 := true
154 [-]: MOVE      R19 R5       ; R19 := R5
155 [-]: CALL      R15 5 2      ; R15 := R15(R16,R17,R18,R19)
156 [-]: MOVE      R14 R15      ; R14 := R15
157 [-]: MOVE      R15 R14      ; R15 := R14
158 [-]: GETUPVAL  R16 U3       ; R16 := U3
159 [-]: GETTABLE  R16 R16 K13  ; R16 := R16[0x06d055f9]
160 [-]: GETTABLE  R17 R13 K32  ; R17 := R13["FontSize"]
161 [-]: EQ        0 R17 K22    ; if R17 ~= nil then PC := 164
162 [-]: JMP       164          ; PC := 164
163 [-]: LOADKB    R17 0 1      ; R17 := false; PC := 164
164 [-]: LOADKB    R17 1 0      ; R17 := true
165 [-]: GETTABLE  R18 R13 K32  ; R18 := R13["FontSize"]
166 [-]: CONST     R19 25       ; R19 := 25.000000
167 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
168 [-]: GETTABLE  R17 R13 K33  ; R17 := R13["Delimiter"]
169 [-]: EQ        1 R17 K22    ; if R17 == nil then PC := 221
170 [-]: JMP       221          ; PC := 221
171 [-]: NEWTABLE  R17 0 0      ; R17 := {}
172 [-]: GETGLOBAL R18 K28      ; R18 := 0x7f5022cf
173 [-]: GETTABLE  R18 R18 K34  ; R18 := R18[0x3675281c]
174 [-]: MOVE      R19 R14      ; R19 := R14
175 [-]: GETTABLE  R20 R13 K33  ; R20 := R13["Delimiter"]
176 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
177 [-]: LOADK     R20 K35      ; R20 := "(.-)"
178 [-]: GETTABLE  R21 R13 K33  ; R21 := R13["Delimiter"]
179 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
180 [-]: CALL      R18 3 4      ; R18,R19,R20 := R18(R19,R20)
181 [-]: JMP       187          ; PC := 187
182 [-]: GETGLOBAL R22 K36      ; R22 := 0x33bdd652
183 [-]: GETTABLE  R22 R22 K37  ; R22 := R22[0x23d5322f]
184 [-]: MOVE      R23 R17      ; R23 := R17
185 [-]: MOVE      R24 R21      ; R24 := R21
186 [-]: CALL      R22 3 1      ; R22(R23,R24)
187 [-]: TFORLOOP  R18 1        ; R21 :=  R18(R19,R20); if R21 ~= nil then begin PC = 182; R20 := R21 end
188 [-]: JMP       182          ; PC := 182
189 [-]: GETGLOBAL R22 K1       ; R22 := 0xae91e43b
190 [-]: SELF      R22 R22 K38  ; R23 := R22; R22 := R22[0x5f56eeab]
191 [-]: LOADK     R24 K39      ; R24 := "ImpactMessage.Label"
192 [-]: CONST     R25 29       ; R25 := 29.000000
193 [-]: GETTABLE  R26 R17 K14  ; R26 := R17[1.000000]
194 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
195 [-]: GETTABLE  R15 R17 K14  ; R15 := R17[1.000000]
196 [-]: CONST     R22 2        ; R22 := 2.000000
197 [-]: CONST     R23 3        ; R23 := 3.000000
198 [-]: CONST     R24 1        ; R24 := 1.000000
199 [-]: FORPREP   R22 219      ; R22 -= R24; PC := 219
200 [-]: GETGLOBAL R26 K1       ; R26 := 0xae91e43b
201 [-]: SELF      R26 R26 K38  ; R27 := R26; R26 := R26[0x5f56eeab]
202 [-]: LOADK     R28 K39      ; R28 := "ImpactMessage.Label"
203 [-]: MOVE      R29 R25      ; R29 := R25
204 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
205 [-]: CONST     R29 29       ; R29 := 29.000000
206 [-]: LOADK     R30 K26      ; R30 := ""
207 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
208 [-]: GETTABLE  R26 R17 R25  ; R26 := R17[R25]
209 [-]: EQ        1 R26 K22    ; if R26 == nil then PC := 219
210 [-]: JMP       219          ; PC := 219
211 [-]: GETGLOBAL R26 K1       ; R26 := 0xae91e43b
212 [-]: SELF      R26 R26 K38  ; R27 := R26; R26 := R26[0x5f56eeab]
213 [-]: LOADK     R28 K39      ; R28 := "ImpactMessage.Label"
214 [-]: MOVE      R29 R25      ; R29 := R25
215 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
216 [-]: CONST     R29 29       ; R29 := 29.000000
217 [-]: GETTABLE  R30 R17 R25  ; R30 := R17[R25]
218 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
219 [-]: FORLOOP   R22 200      ; R22 += R24; if R22 <= R23 then begin PC := 200; R25 := R22 end
220 [-]: JMP       240          ; PC := 240
221 [-]: GETGLOBAL R26 K1       ; R26 := 0xae91e43b
222 [-]: SELF      R26 R26 K38  ; R27 := R26; R26 := R26[0x5f56eeab]
223 [-]: LOADK     R28 K39      ; R28 := "ImpactMessage.Label"
224 [-]: CONST     R29 29       ; R29 := 29.000000
225 [-]: MOVE      R30 R14      ; R30 := R14
226 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
227 [-]: CONST     R26 2        ; R26 := 2.000000
228 [-]: CONST     R27 3        ; R27 := 3.000000
229 [-]: CONST     R28 1        ; R28 := 1.000000
230 [-]: FORPREP   R26 239      ; R26 -= R28; PC := 239
231 [-]: GETGLOBAL R30 K1       ; R30 := 0xae91e43b
232 [-]: SELF      R30 R30 K38  ; R31 := R30; R30 := R30[0x5f56eeab]
233 [-]: LOADK     R32 K39      ; R32 := "ImpactMessage.Label"
234 [-]: MOVE      R33 R29      ; R33 := R29
235 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
236 [-]: CONST     R33 29       ; R33 := 29.000000
237 [-]: LOADK     R34 K26      ; R34 := ""
238 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
239 [-]: FORLOOP   R26 231      ; R26 += R28; if R26 <= R27 then begin PC := 231; R29 := R26 end
240 [-]: LOADNIL   R30 R30      ; R30 := nil
241 [-]: GETGLOBAL R31 K1       ; R31 := 0xae91e43b
242 [-]: SELF      R31 R31 K40  ; R32 := R31; R31 := R31[0x91a24e4b]
243 [-]: LOADK     R33 K39      ; R33 := "ImpactMessage.Label"
244 [-]: CONST     R34 35       ; R34 := 35.000000
245 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
246 [-]: MOVE      R30 R31      ; R30 := R31
247 [-]: LT        0 K41 R30    ; if 2.000000 >= R30 then PC := 256
248 [-]: JMP       256          ; PC := 256
249 [-]: SUB       R16 R16 K41  ; R16 := R16 - 2.000000
250 [-]: GETGLOBAL R31 K1       ; R31 := 0xae91e43b
251 [-]: SELF      R31 R31 K42  ; R32 := R31; R31 := R31[0x67bc869f]
252 [-]: LOADK     R33 K39      ; R33 := "ImpactMessage.Label"
253 [-]: CONST     R34 42       ; R34 := 42.000000
254 [-]: MOVE      R35 R16      ; R35 := R16
255 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
256 [-]: GETGLOBAL R31 K1       ; R31 := 0xae91e43b
257 [-]: SELF      R31 R31 K38  ; R32 := R31; R31 := R31[0x5f56eeab]
258 [-]: LOADK     R33 K39      ; R33 := "ImpactMessage.Label"
259 [-]: CONST     R34 29       ; R34 := 29.000000
260 [-]: LOADK     R35 K26      ; R35 := ""
261 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
262 [-]: GETGLOBAL R31 K1       ; R31 := 0xae91e43b
263 [-]: SELF      R31 R31 K38  ; R32 := R31; R31 := R31[0x5f56eeab]
264 [-]: LOADK     R33 K39      ; R33 := "ImpactMessage.Label"
265 [-]: CONST     R34 29       ; R34 := 29.000000
266 [-]: MOVE      R35 R15      ; R35 := R15
267 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
268 [-]: LE        1 R30 K41    ; if R30 <= 2.000000 then PC := 272
269 [-]: JMP       272          ; PC := 272
270 [-]: LE        0 R16 K43    ; if R16 > 16.000000 then PC := 241
271 [-]: JMP       241          ; PC := 241
272 [-]: GETGLOBAL R31 K0       ; R31 := 0x7b998233
273 [-]: GETUPVAL  R32 U6       ; R32 := U6
274 [-]: CALL      R31 2 2      ; R31 := R31(R32)
275 [-]: TEST      R31 1        ; if R31 then PC := 283
276 [-]: JMP       283          ; PC := 283
277 [-]: GETUPVAL  R31 U7       ; R31 := U7
278 [-]: SELF      R31 R31 K44  ; R32 := R31; R31 := R31[0x775c858b]
279 [-]: GETUPVAL  R33 U6       ; R33 := U6
280 [-]: CALL      R31 3 1      ; R31(R32,R33)
281 [-]: LOADNIL   R31 R31      ; R31 := nil
282 [-]: SETUPVAL  R31 U6       ; U82 := R6
283 [-]: LE        0 K9 R1      ; if 0.000000 > R1 then PC := 291
284 [-]: JMP       291          ; PC := 291
285 [-]: GETUPVAL  R31 U7       ; R31 := U7
286 [-]: SELF      R31 R31 K45  ; R32 := R31; R31 := R31[0xbd2e96ea]
287 [-]: SUB       R33 R1 K46   ; R33 := R1 - 0.400000
288 [-]: GETUPVAL  R34 U8       ; R34 := U8
289 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
290 [-]: SETUPVAL  R31 U6       ; U82 := R6
291 [-]: RETURN    R0 1         ; return 
292 [-]: GETUPVAL  R31 U5       ; R31 := U5
293 [-]: SETTABLE  R31 K25 K22  ; R31["ActiveImpactMessage"] := nil
294 [-]: LE        0 K9 R1      ; if 0.000000 > R1 then PC := 300
295 [-]: JMP       300          ; PC := 300
296 [-]: GETUPVAL  R31 U3       ; R31 := U3
297 [-]: GETTABLE  R31 R31 K47  ; R31 := R31[0x659d451f]
298 [-]: MOVE      R32 R3       ; R32 := R3
299 [-]: CALL      R31 2 1      ; R31(R32)
300 [-]: TEST      R4 0         ; if not R4 then PC := 319
301 [-]: JMP       319          ; PC := 319
302 [-]: GETGLOBAL R31 K0       ; R31 := 0x7b998233
303 [-]: GETGLOBAL R32 K48      ; R32 := 0xdb09d9fb
304 [-]: CALL      R31 2 2      ; R31 := R31(R32)
305 [-]: TEST      R31 1        ; if R31 then PC := 319
306 [-]: JMP       319          ; PC := 319
307 [-]: GETUPVAL  R31 U9       ; R31 := U9
308 [-]: GETTABLE  R31 R31 K49  ; R31 := R31[0xb5be5d4a]
309 [-]: GETGLOBAL R32 K1       ; R32 := 0xae91e43b
310 [-]: LOADK     R33 K50      ; R33 := "ImpactMessage"
311 [-]: CALL      R31 3 3      ; R31,R32 := R31(R32,R33)
312 [-]: GETUPVAL  R33 U9       ; R33 := U9
313 [-]: GETTABLE  R33 R33 K51  ; R33 := R33[0x5a22d251]
314 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
315 [-]: GETGLOBAL R35 K48      ; R35 := 0xdb09d9fb
316 [-]: MOVE      R36 R31      ; R36 := R31
317 [-]: MOVE      R37 R32      ; R37 := R32
318 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
319 [-]: GETUPVAL  R33 U5       ; R33 := U5
320 [-]: GETTABLE  R33 R33 K52  ; R33 := R33["mImpactMessageFrame"]
321 [-]: EQ        1 R33 R6     ; if R33 == R6 then PC := 503
322 [-]: JMP       503          ; PC := 503
323 [-]: GETUPVAL  R33 U5       ; R33 := U5
324 [-]: SETTABLE  R33 K52 R6   ; R33["mImpactMessageFrame"] := R6
325 [-]: GETGLOBAL R33 K53      ; R33 := 0x38f10e85
326 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
327 [-]: LOADK     R35 K54      ; R35 := "ImpactMessage.gotoAndStop"
328 [-]: MOVE      R36 R6       ; R36 := R6
329 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
330 [-]: EQ        0 R6 K17     ; if R6 ~= 4.000000 then PC := 421
331 [-]: JMP       421          ; PC := 421
332 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
333 [-]: SELF      R33 R33 K38  ; R34 := R33; R33 := R33[0x5f56eeab]
334 [-]: LOADK     R35 K39      ; R35 := "ImpactMessage.Label"
335 [-]: CONST     R36 38       ; R36 := 38.000000
336 [-]: LOADK     R37 K55      ; R37 := "bottom"
337 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
338 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
339 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
340 [-]: LOADK     R35 K56      ; R35 := "ImpactMessage.Underlay"
341 [-]: CONST     R36 9        ; R36 := 9.000000
342 [-]: LOADK     R37 K57      ; R37 := 1315613.000000
343 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
344 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
345 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
346 [-]: LOADK     R35 K39      ; R35 := "ImpactMessage.Label"
347 [-]: CONST     R36 36       ; R36 := 36.000000
348 [-]: GETUPVAL  R37 U10      ; R37 := U10
349 [-]: GETTABLE  R37 R37 K58  ; R37 := R37["Text"]
350 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
351 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
352 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
353 [-]: LOADK     R35 K59      ; R35 := "ImpactMessage.DecoLabel"
354 [-]: CONST     R36 36       ; R36 := 36.000000
355 [-]: GETUPVAL  R37 U10      ; R37 := U10
356 [-]: GETTABLE  R37 R37 K58  ; R37 := R37["Text"]
357 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
358 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
359 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
360 [-]: LOADK     R35 K60      ; R35 := "ImpactMessage.BgLines"
361 [-]: CONST     R36 9        ; R36 := 9.000000
362 [-]: GETUPVAL  R37 U10      ; R37 := U10
363 [-]: GETTABLE  R37 R37 K58  ; R37 := R37["Text"]
364 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
365 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
366 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
367 [-]: LOADK     R35 K62      ; R35 := "ImpactMessage.IconTinted"
368 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
369 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
370 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
371 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
372 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
373 [-]: LOADK     R35 K65      ; R35 := "ImpactMessage.IconWhite"
374 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
375 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
376 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
377 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
378 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
379 [-]: LOADK     R35 K66      ; R35 := "ImpactMessage.IconBg"
380 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
381 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
382 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
383 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
384 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
385 [-]: LOADK     R35 K60      ; R35 := "ImpactMessage.BgLines"
386 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
387 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
388 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
389 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
390 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
391 [-]: LOADK     R35 K56      ; R35 := "ImpactMessage.Underlay"
392 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
393 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
394 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
395 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
396 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
397 [-]: LOADK     R35 K67      ; R35 := "ImpactMessage.MessageFlare"
398 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
399 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
400 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
401 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
402 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
403 [-]: LOADK     R35 K68      ; R35 := "ImpactMessage.Underlay.TopShadow"
404 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
405 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
406 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
407 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
408 [-]: SELF      R33 R33 K61  ; R34 := R33; R33 := R33[0xd5181643]
409 [-]: LOADK     R35 K69      ; R35 := "ImpactMessage.LineDeco"
410 [-]: GETGLOBAL R36 K63      ; R36 := 0x0032441c
411 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["UIMaterial_Plain"]
412 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
413 [-]: GETUPVAL  R33 U5       ; R33 := U5
414 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
415 [-]: SELF      R34 R34 K40  ; R35 := R34; R34 := R34[0x91a24e4b]
416 [-]: LOADK     R36 K39      ; R36 := "ImpactMessage.Label"
417 [-]: CONST     R37 1        ; R37 := 1.000000
418 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
419 [-]: SETTABLE  R33 K70 R34  ; R33["mImpactMessage4LabelY"] := R34
420 [-]: JMP       427          ; PC := 427
421 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
422 [-]: SELF      R33 R33 K38  ; R34 := R33; R33 := R33[0x5f56eeab]
423 [-]: LOADK     R35 K39      ; R35 := "ImpactMessage.Label"
424 [-]: CONST     R36 38       ; R36 := 38.000000
425 [-]: LOADK     R37 K71      ; R37 := "center"
426 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
427 [-]: GETUPVAL  R33 U5       ; R33 := U5
428 [-]: GETTABLE  R33 R33 K52  ; R33 := R33["mImpactMessageFrame"]
429 [-]: EQ        0 R33 K72    ; if R33 ~= 3.000000 then PC := 449
430 [-]: JMP       449          ; PC := 449
431 [-]: GETUPVAL  R33 U5       ; R33 := U5
432 [-]: GETTABLE  R33 R33 K73  ; R33 := R33["mImpactMessage3LabelY"]
433 [-]: EQ        0 R33 K22    ; if R33 ~= nil then PC := 449
434 [-]: JMP       449          ; PC := 449
435 [-]: GETUPVAL  R33 U5       ; R33 := U5
436 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
437 [-]: SELF      R34 R34 K40  ; R35 := R34; R34 := R34[0x91a24e4b]
438 [-]: LOADK     R36 K39      ; R36 := "ImpactMessage.Label"
439 [-]: CONST     R37 1        ; R37 := 1.000000
440 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
441 [-]: SETTABLE  R33 K73 R34  ; R33["mImpactMessage3LabelY"] := R34
442 [-]: GETUPVAL  R33 U5       ; R33 := U5
443 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
444 [-]: SELF      R34 R34 K40  ; R35 := R34; R34 := R34[0x91a24e4b]
445 [-]: LOADK     R36 K39      ; R36 := "ImpactMessage.Label"
446 [-]: CONST     R37 34       ; R37 := 34.000000
447 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
448 [-]: SETTABLE  R33 K74 R34  ; R33["mImpactMessage3LabelHeight"] := R34
449 [-]: GETGLOBAL R33 K15      ; R33 := 0xe72d2edb
450 [-]: EQ        0 R33 K72    ; if R33 ~= 3.000000 then PC := 490
451 [-]: JMP       490          ; PC := 490
452 [-]: EQ        0 R6 K14     ; if R6 ~= 1.000000 then PC := 473
453 [-]: JMP       473          ; PC := 473
454 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
455 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
456 [-]: LOADK     R35 K75      ; R35 := "ImpactMessage.UnderGlow"
457 [-]: CONST     R36 9        ; R36 := 9.000000
458 [-]: LOADK     R37 K76      ; R37 := 1712680.000000
459 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
460 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
461 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
462 [-]: LOADK     R35 K77      ; R35 := "ImpactMessage.LineDivider"
463 [-]: CONST     R36 9        ; R36 := 9.000000
464 [-]: LOADK     R37 K78      ; R37 := 15785113.000000
465 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
466 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
467 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
468 [-]: LOADK     R35 K39      ; R35 := "ImpactMessage.Label"
469 [-]: CONST     R36 36       ; R36 := 36.000000
470 [-]: LOADK     R37 K78      ; R37 := 15785113.000000
471 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
472 [-]: JMP       503          ; PC := 503
473 [-]: EQ        0 R6 K72     ; if R6 ~= 3.000000 then PC := 503
474 [-]: JMP       503          ; PC := 503
475 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
476 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
477 [-]: LOADK     R35 K39      ; R35 := "ImpactMessage.Label"
478 [-]: CONST     R36 36       ; R36 := 36.000000
479 [-]: GETUPVAL  R37 U10      ; R37 := U10
480 [-]: GETTABLE  R37 R37 K58  ; R37 := R37["Text"]
481 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
482 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
483 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
484 [-]: LOADK     R35 K79      ; R35 := "ImpactMessage.Underline"
485 [-]: CONST     R36 9        ; R36 := 9.000000
486 [-]: GETUPVAL  R37 U10      ; R37 := U10
487 [-]: GETTABLE  R37 R37 K58  ; R37 := R37["Text"]
488 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
489 [-]: JMP       503          ; PC := 503
490 [-]: GETGLOBAL R33 K15      ; R33 := 0xe72d2edb
491 [-]: EQ        0 R33 K17    ; if R33 ~= 4.000000 then PC := 503
492 [-]: JMP       503          ; PC := 503
493 [-]: EQ        1 R6 K14     ; if R6 == 1.000000 then PC := 497
494 [-]: JMP       497          ; PC := 497
495 [-]: EQ        0 R6 K72     ; if R6 ~= 3.000000 then PC := 503
496 [-]: JMP       503          ; PC := 503
497 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
498 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
499 [-]: LOADK     R35 K79      ; R35 := "ImpactMessage.Underline"
500 [-]: CONST     R36 9        ; R36 := 9.000000
501 [-]: LOADK     R37 K80      ; R37 := 11625827.000000
502 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
503 [-]: LE        0 K9 R1      ; if 0.000000 > R1 then PC := 511
504 [-]: JMP       511          ; PC := 511
505 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
506 [-]: SELF      R33 R33 K42  ; R34 := R33; R33 := R33[0x67bc869f]
507 [-]: LOADK     R35 K50      ; R35 := "ImpactMessage"
508 [-]: CONST     R36 10       ; R36 := 10.000000
509 [-]: CONST     R37 0        ; R37 := 0.000000
510 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
511 [-]: TEST      R7 0         ; if not R7 then PC := 516
512 [-]: JMP       516          ; PC := 516
513 [-]: GETUPVAL  R33 U5       ; R33 := U5
514 [-]: SETTABLE  R33 K81 R7   ; R33["mImpactMessageScale"] := R7
515 [-]: JMP       517          ; PC := 517
516 [-]: CONST     R7 100       ; R7 := 100.000000
517 [-]: TEST      R8 0         ; if not R8 then PC := 522
518 [-]: JMP       522          ; PC := 522
519 [-]: GETUPVAL  R33 U5       ; R33 := U5
520 [-]: SETTABLE  R33 K82 R8   ; R33["mImpactMessageTransitionScale"] := R8
521 [-]: JMP       523          ; PC := 523
522 [-]: CONST     R8 100       ; R8 := 100.000000
523 [-]: GETGLOBAL R33 K1       ; R33 := 0xae91e43b
524 [-]: SELF      R33 R33 K83  ; R34 := R33; R33 := R33[0xc7fa728c]
525 [-]: CALL      R33 2 2      ; R33 := R33(R34)
526 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
527 [-]: MOVE      R35 R9       ; R35 := R9
528 [-]: CALL      R34 2 2      ; R34 := R34(R35)
529 [-]: TEST      R34 1        ; if R34 then PC := 538
530 [-]: JMP       538          ; PC := 538
531 [-]: EQ        1 R33 R9     ; if R33 == R9 then PC := 538
532 [-]: JMP       538          ; PC := 538
533 [-]: SETUPVAL  R33 U11      ; U82 := R11
534 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
535 [-]: SELF      R34 R34 K84  ; R35 := R34; R34 := R34[0x9275da44]
536 [-]: MOVE      R36 R9       ; R36 := R9
537 [-]: CALL      R34 3 1      ; R34(R35,R36)
538 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
539 [-]: SELF      R34 R34 K42  ; R35 := R34; R34 := R34[0x67bc869f]
540 [-]: LOADK     R36 K50      ; R36 := "ImpactMessage"
541 [-]: CONST     R37 5        ; R37 := 5.000000
542 [-]: MOVE      R38 R8       ; R38 := R8
543 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
544 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
545 [-]: SELF      R34 R34 K42  ; R35 := R34; R34 := R34[0x67bc869f]
546 [-]: LOADK     R36 K50      ; R36 := "ImpactMessage"
547 [-]: CONST     R37 6        ; R37 := 6.000000
548 [-]: MOVE      R38 R8       ; R38 := R8
549 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
550 [-]: GETUPVAL  R34 U5       ; R34 := U5
551 [-]: GETTABLE  R34 R34 K52  ; R34 := R34["mImpactMessageFrame"]
552 [-]: EQ        0 R34 K17    ; if R34 ~= 4.000000 then PC := 560
553 [-]: JMP       560          ; PC := 560
554 [-]: GETGLOBAL R34 K1       ; R34 := 0xae91e43b
555 [-]: SELF      R34 R34 K42  ; R35 := R34; R34 := R34[0x67bc869f]
556 [-]: LOADK     R36 K39      ; R36 := "ImpactMessage.Label"
557 [-]: CONST     R37 42       ; R37 := 42.000000
558 [-]: CONST     R38 25       ; R38 := 25.000000
559 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
560 [-]: LOADK     R34 K26      ; R34 := ""
561 [-]: GETGLOBAL R35 K0       ; R35 := 0x7b998233
562 [-]: MOVE      R36 R10      ; R36 := R10
563 [-]: CALL      R35 2 2      ; R35 := R35(R36)
564 [-]: TEST      R35 1        ; if R35 then PC := 588
565 [-]: JMP       588          ; PC := 588
566 [-]: GETGLOBAL R35 K1       ; R35 := 0xae91e43b
567 [-]: SELF      R35 R35 K27  ; R36 := R35; R35 := R35[0x54f5d6ad]
568 [-]: MOVE      R37 R0       ; R37 := R0
569 [-]: MOVE      R38 R10      ; R38 := R10
570 [-]: MOVE      R39 R5       ; R39 := R5
571 [-]: CALL      R35 5 2      ; R35 := R35(R36,R37,R38,R39)
572 [-]: MOVE      R34 R35      ; R34 := R35
573 [-]: GETGLOBAL R35 K28      ; R35 := 0x7f5022cf
574 [-]: GETTABLE  R35 R35 K29  ; R35 := R35[0xa5c556b9]
575 [-]: MOVE      R36 R34      ; R36 := R34
576 [-]: LOADK     R37 K30      ; R37 := "<[%u%d_]+>"
577 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
578 [-]: TEST      R35 0        ; if not R35 then PC := 595
579 [-]: JMP       595          ; PC := 595
580 [-]: GETGLOBAL R35 K1       ; R35 := 0xae91e43b
581 [-]: SELF      R35 R35 K31  ; R36 := R35; R35 := R35[0x42b04007]
582 [-]: MOVE      R37 R0       ; R37 := R0
583 [-]: LOADKB    R38 1 0      ; R38 := true
584 [-]: MOVE      R39 R5       ; R39 := R5
585 [-]: CALL      R35 5 2      ; R35 := R35(R36,R37,R38,R39)
586 [-]: MOVE      R34 R35      ; R34 := R35
587 [-]: JMP       595          ; PC := 595
588 [-]: GETGLOBAL R35 K1       ; R35 := 0xae91e43b
589 [-]: SELF      R35 R35 K31  ; R36 := R35; R35 := R35[0x42b04007]
590 [-]: MOVE      R37 R0       ; R37 := R0
591 [-]: LOADKB    R38 1 0      ; R38 := true
592 [-]: MOVE      R39 R5       ; R39 := R5
593 [-]: CALL      R35 5 2      ; R35 := R35(R36,R37,R38,R39)
594 [-]: MOVE      R34 R35      ; R34 := R35
595 [-]: GETUPVAL  R35 U5       ; R35 := U5
596 [-]: GETTABLE  R35 R35 K52  ; R35 := R35["mImpactMessageFrame"]
597 [-]: EQ        1 R35 K17    ; if R35 == 4.000000 then PC := 605
598 [-]: JMP       605          ; PC := 605
599 [-]: GETGLOBAL R35 K1       ; R35 := 0xae91e43b
600 [-]: SELF      R35 R35 K38  ; R36 := R35; R35 := R35[0x5f56eeab]
601 [-]: LOADK     R37 K39      ; R37 := "ImpactMessage.Label"
602 [-]: CONST     R38 29       ; R38 := 29.000000
603 [-]: MOVE      R39 R34      ; R39 := R34
604 [-]: CALL      R35 5 1      ; R35(R36,R37,R38,R39)
605 [-]: GETUPVAL  R35 U5       ; R35 := U5
606 [-]: GETTABLE  R35 R35 K52  ; R35 := R35["mImpactMessageFrame"]
607 [-]: EQ        0 R35 K72    ; if R35 ~= 3.000000 then PC := 641
608 [-]: JMP       641          ; PC := 641
609 [-]: GETGLOBAL R35 K1       ; R35 := 0xae91e43b
610 [-]: SELF      R35 R35 K40  ; R36 := R35; R35 := R35[0x91a24e4b]
611 [-]: LOADK     R37 K39      ; R37 := "ImpactMessage.Label"
612 [-]: CONST     R38 35       ; R38 := 35.000000
613 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
614 [-]: GETGLOBAL R36 K1       ; R36 := 0xae91e43b
615 [-]: SELF      R36 R36 K40  ; R37 := R36; R36 := R36[0x91a24e4b]
616 [-]: LOADK     R38 K39      ; R38 := "ImpactMessage.Label"
617 [-]: CONST     R39 34       ; R39 := 34.000000
618 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
619 [-]: GETUPVAL  R37 U5       ; R37 := U5
620 [-]: GETTABLE  R37 R37 K73  ; R37 := R37["mImpactMessage3LabelY"]
621 [-]: LT        0 K72 R35    ; if 3.000000 >= R35 then PC := 629
622 [-]: JMP       629          ; PC := 629
623 [-]: ADD       R38 R37 K85  ; R38 := R37 + 20.000000
624 [-]: GETUPVAL  R39 U5       ; R39 := U5
625 [-]: GETTABLE  R39 R39 K74  ; R39 := R39["mImpactMessage3LabelHeight"]
626 [-]: SUB       R39 R36 R39  ; R39 := R36 - R39
627 [-]: SUB       R37 R38 R39  ; R37 := R38 - R39
628 [-]: JMP       634          ; PC := 634
629 [-]: GETUPVAL  R38 U5       ; R38 := U5
630 [-]: GETTABLE  R38 R38 K74  ; R38 := R38["mImpactMessage3LabelHeight"]
631 [-]: SUB       R38 R36 R38  ; R38 := R36 - R38
632 [-]: MUL       R38 R38 K86  ; R38 := R38 * 0.500000
633 [-]: SUB       R37 R37 R38  ; R37 := R37 - R38
634 [-]: GETGLOBAL R38 K1       ; R38 := 0xae91e43b
635 [-]: SELF      R38 R38 K42  ; R39 := R38; R38 := R38[0x67bc869f]
636 [-]: LOADK     R40 K39      ; R40 := "ImpactMessage.Label"
637 [-]: CONST     R41 1        ; R41 := 1.000000
638 [-]: MOVE      R42 R37      ; R42 := R37
639 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
640 [-]: JMP       1613         ; PC := 1613
641 [-]: GETUPVAL  R38 U5       ; R38 := U5
642 [-]: GETTABLE  R38 R38 K52  ; R38 := R38["mImpactMessageFrame"]
643 [-]: EQ        0 R38 K17    ; if R38 ~= 4.000000 then PC := 1613
644 [-]: JMP       1613         ; PC := 1613
645 [-]: GETGLOBAL R38 K20      ; R38 := _T
646 [-]: GETTABLE  R38 R38 K21  ; R38 := R38["ImpactMessageTexturePacks"]
647 [-]: GETTABLE  R38 R38 R11  ; R38 := R38[R11]
648 [-]: NEWTABLE  R39 13 0     ; R39 := {}
649 [-]: LOADK     R40 K87      ; R40 := "LineDeco"
650 [-]: LOADK     R41 K88      ; R41 := "IconWhite"
651 [-]: LOADK     R42 K89      ; R42 := "IconTinted"
652 [-]: LOADK     R43 K90      ; R43 := "IconBg"
653 [-]: LOADK     R44 K91      ; R44 := "IconBgLeft"
654 [-]: LOADK     R45 K92      ; R45 := "IconBgRight"
655 [-]: LOADK     R46 K93      ; R46 := "IconBgLeft2"
656 [-]: LOADK     R47 K94      ; R47 := "IconBgRight2"
657 [-]: LOADK     R48 K95      ; R48 := "StaticIconBg"
658 [-]: LOADK     R49 K96      ; R49 := "StaticIconBgLeft"
659 [-]: LOADK     R50 K97      ; R50 := "StaticIconBgRight"
660 [-]: LOADK     R51 K98      ; R51 := "StaticIconBg2"
661 [-]: LOADK     R52 K99      ; R52 := "StaticIconBg3"
662 [-]: SETLIST   R39 13 1     ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 13
663 [-]: NEWTABLE  R40 13 0     ; R40 := {}
664 [-]: LOADK     R41 K87      ; R41 := "LineDeco"
665 [-]: LOADK     R42 K100     ; R42 := "Icon.IconWhite"
666 [-]: LOADK     R43 K101     ; R43 := "Icon.IconTinted"
667 [-]: LOADK     R44 K102     ; R44 := "Icon.IconBg"
668 [-]: LOADK     R45 K103     ; R45 := "Icon.IconBgLeft"
669 [-]: LOADK     R46 K104     ; R46 := "Icon.IconBgRight"
670 [-]: LOADK     R47 K105     ; R47 := "Icon.IconBgLeft2"
671 [-]: LOADK     R48 K106     ; R48 := "Icon.IconBgRight2"
672 [-]: LOADK     R49 K95      ; R49 := "StaticIconBg"
673 [-]: LOADK     R50 K96      ; R50 := "StaticIconBgLeft"
674 [-]: LOADK     R51 K97      ; R51 := "StaticIconBgRight"
675 [-]: LOADK     R52 K98      ; R52 := "StaticIconBg2"
676 [-]: LOADK     R53 K99      ; R53 := "StaticIconBg3"
677 [-]: SETLIST   R40 13 1     ; R40[(1-1)*FPF+i] := R(40+i), 1 <= i <= 13
678 [-]: NEWTABLE  R41 13 0     ; R41 := {}
679 [-]: CONST     R42 128      ; R42 := 128.000000
680 [-]: CONST     R43 256      ; R43 := 256.000000
681 [-]: CONST     R44 256      ; R44 := 256.000000
682 [-]: CONST     R45 256      ; R45 := 256.000000
683 [-]: CONST     R46 256      ; R46 := 256.000000
684 [-]: CONST     R47 256      ; R47 := 256.000000
685 [-]: CONST     R48 256      ; R48 := 256.000000
686 [-]: CONST     R49 256      ; R49 := 256.000000
687 [-]: CONST     R50 256      ; R50 := 256.000000
688 [-]: CONST     R51 256      ; R51 := 256.000000
689 [-]: CONST     R52 256      ; R52 := 256.000000
690 [-]: CONST     R53 256      ; R53 := 256.000000
691 [-]: CONST     R54 256      ; R54 := 256.000000
692 [-]: SETLIST   R41 13 1     ; R41[(1-1)*FPF+i] := R(41+i), 1 <= i <= 13
693 [-]: NEWTABLE  R42 13 0     ; R42 := {}
694 [-]: CONST     R43 32       ; R43 := 32.000000
695 [-]: CONST     R44 256      ; R44 := 256.000000
696 [-]: CONST     R45 256      ; R45 := 256.000000
697 [-]: CONST     R46 256      ; R46 := 256.000000
698 [-]: CONST     R47 256      ; R47 := 256.000000
699 [-]: CONST     R48 256      ; R48 := 256.000000
700 [-]: CONST     R49 256      ; R49 := 256.000000
701 [-]: CONST     R50 256      ; R50 := 256.000000
702 [-]: CONST     R51 256      ; R51 := 256.000000
703 [-]: CONST     R52 256      ; R52 := 256.000000
704 [-]: CONST     R53 256      ; R53 := 256.000000
705 [-]: CONST     R54 256      ; R54 := 256.000000
706 [-]: CONST     R55 256      ; R55 := 256.000000
707 [-]: SETLIST   R42 13 1     ; R42[(1-1)*FPF+i] := R(42+i), 1 <= i <= 13
708 [-]: NEWTABLE  R43 13 0     ; R43 := {}
709 [-]: CONST     R44 0        ; R44 := 0.000000
710 [-]: CONST     R45 0        ; R45 := 0.000000
711 [-]: CONST     R46 0        ; R46 := 0.000000
712 [-]: CONST     R47 0        ; R47 := 0.000000
713 [-]: CONST     R48 -128     ; R48 := -128.000000
714 [-]: CONST     R49 128      ; R49 := 128.000000
715 [-]: CONST     R50 -128     ; R50 := -128.000000
716 [-]: CONST     R51 128      ; R51 := 128.000000
717 [-]: CONST     R52 0        ; R52 := 0.000000
718 [-]: CONST     R53 -128     ; R53 := -128.000000
719 [-]: CONST     R54 128      ; R54 := 128.000000
720 [-]: CONST     R55 0        ; R55 := 0.000000
721 [-]: CONST     R56 0        ; R56 := 0.000000
722 [-]: SETLIST   R43 13 1     ; R43[(1-1)*FPF+i] := R(43+i), 1 <= i <= 13
723 [-]: NEWTABLE  R44 13 0     ; R44 := {}
724 [-]: CONST     R45 97       ; R45 := 97.000000
725 [-]: CONST     R46 0        ; R46 := 0.000000
726 [-]: CONST     R47 0        ; R47 := 0.000000
727 [-]: CONST     R48 0        ; R48 := 0.000000
728 [-]: CONST     R49 0        ; R49 := 0.000000
729 [-]: CONST     R50 0        ; R50 := 0.000000
730 [-]: CONST     R51 0        ; R51 := 0.000000
731 [-]: CONST     R52 0        ; R52 := 0.000000
732 [-]: CONST     R53 0        ; R53 := 0.000000
733 [-]: CONST     R54 0        ; R54 := 0.000000
734 [-]: CONST     R55 0        ; R55 := 0.000000
735 [-]: CONST     R56 0        ; R56 := 0.000000
736 [-]: CONST     R57 0        ; R57 := 0.000000
737 [-]: SETLIST   R44 13 1     ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 13
738 [-]: NEWTABLE  R45 13 0     ; R45 := {}
739 [-]: LOADNIL   R46 R46      ; R46 := nil
740 [-]: LOADK     R47 K107     ; R47 := 16777215.000000
741 [-]: LOADNIL   R48 R48      ; R48 := nil
742 [-]: LOADK     R49 K107     ; R49 := 16777215.000000
743 [-]: LOADK     R50 K107     ; R50 := 16777215.000000
744 [-]: LOADK     R51 K107     ; R51 := 16777215.000000
745 [-]: LOADK     R52 K107     ; R52 := 16777215.000000
746 [-]: LOADK     R53 K107     ; R53 := 16777215.000000
747 [-]: LOADK     R54 K107     ; R54 := 16777215.000000
748 [-]: LOADK     R55 K107     ; R55 := 16777215.000000
749 [-]: LOADK     R56 K107     ; R56 := 16777215.000000
750 [-]: LOADK     R57 K107     ; R57 := 16777215.000000
751 [-]: LOADK     R58 K107     ; R58 := 16777215.000000
752 [-]: SETLIST   R45 13 1     ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 13
753 [-]: NEWTABLE  R46 13 0     ; R46 := {}
754 [-]: CONST     R47 100      ; R47 := 100.000000
755 [-]: CONST     R48 100      ; R48 := 100.000000
756 [-]: CONST     R49 100      ; R49 := 100.000000
757 [-]: CONST     R50 100      ; R50 := 100.000000
758 [-]: CONST     R51 100      ; R51 := 100.000000
759 [-]: CONST     R52 100      ; R52 := 100.000000
760 [-]: CONST     R53 100      ; R53 := 100.000000
761 [-]: CONST     R54 100      ; R54 := 100.000000
762 [-]: CONST     R55 100      ; R55 := 100.000000
763 [-]: CONST     R56 100      ; R56 := 100.000000
764 [-]: CONST     R57 100      ; R57 := 100.000000
765 [-]: CONST     R58 100      ; R58 := 100.000000
766 [-]: CONST     R59 100      ; R59 := 100.000000
767 [-]: SETLIST   R46 13 1     ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 13
768 [-]: LOADK     R47 K108     ; R47 := "Roboto Bold"
769 [-]: CONST     R48 25       ; R48 := 25.000000
770 [-]: LOADK     R49 K55      ; R49 := "bottom"
771 [-]: CONST     R50 0        ; R50 := 0.000000
772 [-]: CONST     R51 108      ; R51 := 108.000000
773 [-]: CONST     R52 0        ; R52 := 0.000000
774 [-]: LOADKB    R53 1 0      ; R53 := true
775 [-]: LOADKB    R54 1 0      ; R54 := true
776 [-]: CONST     R55 512      ; R55 := 512.000000
777 [-]: MOVE      R56 R34      ; R56 := R34
778 [-]: CONST     R57 -5       ; R57 := -5.000000
779 [-]: GETTABLE  R58 R38 K33  ; R58 := R38["Delimiter"]
780 [-]: EQ        0 R58 K22    ; if R58 ~= nil then PC := 788
781 [-]: JMP       788          ; PC := 788
782 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
783 [-]: SELF      R58 R58 K38  ; R59 := R58; R58 := R58[0x5f56eeab]
784 [-]: LOADK     R60 K39      ; R60 := "ImpactMessage.Label"
785 [-]: CONST     R61 29       ; R61 := 29.000000
786 [-]: MOVE      R62 R34      ; R62 := R34
787 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
788 [-]: GETGLOBAL R58 K0       ; R58 := 0x7b998233
789 [-]: GETTABLE  R59 R38 K109 ; R59 := R38["DecoLabel"]
790 [-]: CALL      R58 2 2      ; R58 := R58(R59)
791 [-]: TEST      R58 1        ; if R58 then PC := 799
792 [-]: JMP       799          ; PC := 799
793 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
794 [-]: SELF      R58 R58 K110 ; R59 := R58; R58 := R58[0x20b98db3]
795 [-]: LOADK     R60 K111     ; R60 := "ImpactMessage.DecoLabel.text"
796 [-]: GETTABLE  R61 R38 K109 ; R61 := R38["DecoLabel"]
797 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
798 [-]: JMP       805          ; PC := 805
799 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
800 [-]: SELF      R58 R58 K38  ; R59 := R58; R58 := R58[0x5f56eeab]
801 [-]: LOADK     R60 K59      ; R60 := "ImpactMessage.DecoLabel"
802 [-]: CONST     R61 29       ; R61 := 29.000000
803 [-]: LOADK     R62 K26      ; R62 := ""
804 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
805 [-]: GETTABLE  R58 R38 K112 ; R58 := R38["FontName"]
806 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 809
807 [-]: JMP       809          ; PC := 809
808 [-]: GETTABLE  R47 R38 K112 ; R47 := R38["FontName"]
809 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
810 [-]: SELF      R58 R58 K38  ; R59 := R58; R58 := R58[0x5f56eeab]
811 [-]: LOADK     R60 K39      ; R60 := "ImpactMessage.Label"
812 [-]: CONST     R61 41       ; R61 := 41.000000
813 [-]: MOVE      R62 R47      ; R62 := R47
814 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
815 [-]: GETTABLE  R58 R38 K32  ; R58 := R38["FontSize"]
816 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 819
817 [-]: JMP       819          ; PC := 819
818 [-]: GETTABLE  R48 R38 K32  ; R48 := R38["FontSize"]
819 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
820 [-]: SELF      R58 R58 K42  ; R59 := R58; R58 := R58[0x67bc869f]
821 [-]: LOADK     R60 K39      ; R60 := "ImpactMessage.Label"
822 [-]: CONST     R61 42       ; R61 := 42.000000
823 [-]: MOVE      R62 R48      ; R62 := R48
824 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
825 [-]: GETTABLE  R58 R38 K113 ; R58 := R38["LabelYOffset"]
826 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 829
827 [-]: JMP       829          ; PC := 829
828 [-]: GETTABLE  R50 R38 K113 ; R50 := R38["LabelYOffset"]
829 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
830 [-]: SELF      R58 R58 K42  ; R59 := R58; R58 := R58[0x67bc869f]
831 [-]: LOADK     R60 K39      ; R60 := "ImpactMessage.Label"
832 [-]: CONST     R61 1        ; R61 := 1.000000
833 [-]: GETUPVAL  R62 U5       ; R62 := U5
834 [-]: GETTABLE  R62 R62 K70  ; R62 := R62["mImpactMessage4LabelY"]
835 [-]: ADD       R62 R62 R50  ; R62 := R62 + R50
836 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
837 [-]: GETTABLE  R58 R38 K114 ; R58 := R38["LetterSpacing"]
838 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 841
839 [-]: JMP       841          ; PC := 841
840 [-]: GETTABLE  R52 R38 K114 ; R52 := R38["LetterSpacing"]
841 [-]: GETTABLE  R58 R38 K115 ; R58 := R38["DecoLabelY"]
842 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 845
843 [-]: JMP       845          ; PC := 845
844 [-]: GETTABLE  R51 R38 K115 ; R51 := R38["DecoLabelY"]
845 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
846 [-]: SELF      R58 R58 K42  ; R59 := R58; R58 := R58[0x67bc869f]
847 [-]: LOADK     R60 K59      ; R60 := "ImpactMessage.DecoLabel"
848 [-]: CONST     R61 1        ; R61 := 1.000000
849 [-]: MOVE      R62 R51      ; R62 := R51
850 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
851 [-]: GETTABLE  R58 R38 K116 ; R58 := R38["LabelVAlign"]
852 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 855
853 [-]: JMP       855          ; PC := 855
854 [-]: GETTABLE  R49 R38 K116 ; R49 := R38["LabelVAlign"]
855 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
856 [-]: SELF      R58 R58 K38  ; R59 := R58; R58 := R58[0x5f56eeab]
857 [-]: LOADK     R60 K39      ; R60 := "ImpactMessage.Label"
858 [-]: CONST     R61 38       ; R61 := 38.000000
859 [-]: MOVE      R62 R49      ; R62 := R49
860 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
861 [-]: GETTABLE  R58 R38 K117 ; R58 := R38["LabelLeading"]
862 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 865
863 [-]: JMP       865          ; PC := 865
864 [-]: GETTABLE  R57 R38 K117 ; R57 := R38["LabelLeading"]
865 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
866 [-]: SELF      R58 R58 K42  ; R59 := R58; R58 := R58[0x67bc869f]
867 [-]: LOADK     R60 K39      ; R60 := "ImpactMessage.Label"
868 [-]: CONST     R61 66       ; R61 := 66.000000
869 [-]: MOVE      R62 R57      ; R62 := R57
870 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
871 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
872 [-]: SELF      R58 R58 K118 ; R59 := R58; R58 := R58[0xaade900e]
873 [-]: LOADK     R60 K56      ; R60 := "ImpactMessage.Underlay"
874 [-]: CONST     R61 11       ; R61 := 11.000000
875 [-]: GETTABLE  R62 R38 K119 ; R62 := R38["HideUnderlay"]
876 [-]: NOT       R62 R62      ; R62 :=  R62
877 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
878 [-]: GETTABLE  R58 R38 K120 ; R58 := R38["ShowBgLines"]
879 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 882
880 [-]: JMP       882          ; PC := 882
881 [-]: GETTABLE  R53 R38 K120 ; R53 := R38["ShowBgLines"]
882 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
883 [-]: SELF      R58 R58 K118 ; R59 := R58; R58 := R58[0xaade900e]
884 [-]: LOADK     R60 K60      ; R60 := "ImpactMessage.BgLines"
885 [-]: CONST     R61 11       ; R61 := 11.000000
886 [-]: MOVE      R62 R53      ; R62 := R53
887 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
888 [-]: GETTABLE  R58 R38 K121 ; R58 := R38["ShowFlare"]
889 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 892
890 [-]: JMP       892          ; PC := 892
891 [-]: GETTABLE  R54 R38 K121 ; R54 := R38["ShowFlare"]
892 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
893 [-]: SELF      R58 R58 K118 ; R59 := R58; R58 := R58[0xaade900e]
894 [-]: LOADK     R60 K67      ; R60 := "ImpactMessage.MessageFlare"
895 [-]: CONST     R61 11       ; R61 := 11.000000
896 [-]: MOVE      R62 R54      ; R62 := R54
897 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
898 [-]: GETTABLE  R58 R38 K122 ; R58 := R38["UnderlayWidth"]
899 [-]: EQ        1 R58 K22    ; if R58 == nil then PC := 902
900 [-]: JMP       902          ; PC := 902
901 [-]: GETTABLE  R55 R38 K122 ; R55 := R38["UnderlayWidth"]
902 [-]: GETGLOBAL R58 K1       ; R58 := 0xae91e43b
903 [-]: SELF      R58 R58 K42  ; R59 := R58; R58 := R58[0x67bc869f]
904 [-]: LOADK     R60 K56      ; R60 := "ImpactMessage.Underlay"
905 [-]: CONST     R61 12       ; R61 := 12.000000
906 [-]: MOVE      R62 R55      ; R62 := R55
907 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
908 [-]: GETGLOBAL R58 K0       ; R58 := 0x7b998233
909 [-]: GETTABLE  R59 R38 K123 ; R59 := R38["Color"]
910 [-]: CALL      R58 2 2      ; R58 := R58(R59)
911 [-]: TEST      R58 1        ; if R58 then PC := 951
912 [-]: JMP       951          ; PC := 951
913 [-]: GETGLOBAL R58 K124     ; R58 := 0x76ea806b
914 [-]: SELF      R58 R58 K125 ; R59 := R58; R58 := R58[0x3f3ae64c]
915 [-]: CONST     R60 0        ; R60 := 0.000000
916 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
917 [-]: GETGLOBAL R59 K0       ; R59 := 0x7b998233
918 [-]: MOVE      R60 R58      ; R60 := R58
919 [-]: CALL      R59 2 2      ; R59 := R59(R60)
920 [-]: TEST      R59 1        ; if R59 then PC := 972
921 [-]: JMP       972          ; PC := 972
922 [-]: SELF      R59 R58 K126 ; R60 := R58; R59 := R58[0x40e9c32b]
923 [-]: CALL      R59 2 2      ; R59 := R59(R60)
924 [-]: GETTABLE  R60 R38 K123 ; R60 := R38["Color"]
925 [-]: GETTABLE  R61 R38 K127 ; R61 := R38["IsColorHex"]
926 [-]: TEST      R61 1        ; if R61 then PC := 932
927 [-]: JMP       932          ; PC := 932
928 [-]: SELF      R61 R59 K128 ; R62 := R59; R61 := R59[0xef9a3ee6]
929 [-]: MOVE      R63 R60      ; R63 := R60
930 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
931 [-]: MOVE      R60 R61      ; R60 := R61
932 [-]: GETGLOBAL R61 K1       ; R61 := 0xae91e43b
933 [-]: SELF      R61 R61 K42  ; R62 := R61; R61 := R61[0x67bc869f]
934 [-]: LOADK     R63 K67      ; R63 := "ImpactMessage.MessageFlare"
935 [-]: CONST     R64 9        ; R64 := 9.000000
936 [-]: MOVE      R65 R60      ; R65 := R60
937 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
938 [-]: GETGLOBAL R61 K1       ; R61 := 0xae91e43b
939 [-]: SELF      R61 R61 K42  ; R62 := R61; R61 := R61[0x67bc869f]
940 [-]: LOADK     R63 K69      ; R63 := "ImpactMessage.LineDeco"
941 [-]: CONST     R64 9        ; R64 := 9.000000
942 [-]: MOVE      R65 R60      ; R65 := R60
943 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
944 [-]: GETGLOBAL R61 K1       ; R61 := 0xae91e43b
945 [-]: SELF      R61 R61 K42  ; R62 := R61; R61 := R61[0x67bc869f]
946 [-]: LOADK     R63 K129     ; R63 := "ImpactMessage.Icon.IconTinted"
947 [-]: CONST     R64 9        ; R64 := 9.000000
948 [-]: MOVE      R65 R60      ; R65 := R60
949 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
950 [-]: JMP       972          ; PC := 972
951 [-]: GETGLOBAL R61 K1       ; R61 := 0xae91e43b
952 [-]: SELF      R61 R61 K42  ; R62 := R61; R61 := R61[0x67bc869f]
953 [-]: LOADK     R63 K67      ; R63 := "ImpactMessage.MessageFlare"
954 [-]: CONST     R64 9        ; R64 := 9.000000
955 [-]: GETGLOBAL R65 K63      ; R65 := 0x0032441c
956 [-]: GETTABLE  R65 R65 K130 ; R65 := R65["UIColor_White"]
957 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
958 [-]: GETGLOBAL R61 K1       ; R61 := 0xae91e43b
959 [-]: SELF      R61 R61 K42  ; R62 := R61; R61 := R61[0x67bc869f]
960 [-]: LOADK     R63 K69      ; R63 := "ImpactMessage.LineDeco"
961 [-]: CONST     R64 9        ; R64 := 9.000000
962 [-]: GETGLOBAL R65 K63      ; R65 := 0x0032441c
963 [-]: GETTABLE  R65 R65 K130 ; R65 := R65["UIColor_White"]
964 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
965 [-]: GETGLOBAL R61 K1       ; R61 := 0xae91e43b
966 [-]: SELF      R61 R61 K42  ; R62 := R61; R61 := R61[0x67bc869f]
967 [-]: LOADK     R63 K129     ; R63 := "ImpactMessage.Icon.IconTinted"
968 [-]: CONST     R64 9        ; R64 := 9.000000
969 [-]: GETGLOBAL R65 K63      ; R65 := 0x0032441c
970 [-]: GETTABLE  R65 R65 K130 ; R65 := R65["UIColor_White"]
971 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
972 [-]: GETGLOBAL R61 K1       ; R61 := 0xae91e43b
973 [-]: SELF      R61 R61 K42  ; R62 := R61; R61 := R61[0x67bc869f]
974 [-]: LOADK     R63 K131     ; R63 := "ImpactMessage.Icon"
975 [-]: CONST     R64 1        ; R64 := 1.000000
976 [-]: CONST     R65 40       ; R65 := 40.000000
977 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
978 [-]: GETGLOBAL R61 K132     ; R61 := 0x25312c9b
979 [-]: GETGLOBAL R62 K1       ; R62 := 0xae91e43b
980 [-]: LOADK     R63 K131     ; R63 := "ImpactMessage.Icon"
981 [-]: CONST     R64 2        ; R64 := 2.000000
982 [-]: NEWTABLE  R65 1 0      ; R65 := {}
983 [-]: CONST     R66 1        ; R66 := 1.000000
984 [-]: SETLIST   R65 1 1      ; R65[(1-1)*FPF+i] := R(65+i), 1 <= i <= 1
985 [-]: NEWTABLE  R66 1 0      ; R66 := {}
986 [-]: CONST     R67 20       ; R67 := 20.000000
987 [-]: SETLIST   R66 1 1      ; R66[(1-1)*FPF+i] := R(66+i), 1 <= i <= 1
988 [-]: CONST     R67 1        ; R67 := 1.500000
989 [-]: CONST     R68 0        ; R68 := 0.000000
990 [-]: CALL      R61 8 1      ; R61(R62,R63,R64,R65,R66,R67,R68)
991 [-]: GETGLOBAL R61 K134     ; R61 := 0xc8802016
992 [-]: MOVE      R62 R39      ; R62 := R39
993 [-]: CALL      R61 2 4      ; R61,R62,R63 := R61(R62)
994 [-]: JMP       1302         ; PC := 1302
995 [-]: LOADK     R66 K135     ; R66 := "ImpactMessage."
996 [-]: GETTABLE  R67 R40 R64  ; R67 := R40[R64]
997 [-]: CONCAT    R66 R66 R67  ; R66 := R66 .. R67
998 [-]: GETGLOBAL R67 K1       ; R67 := 0xae91e43b
999 [-]: SELF      R67 R67 K136 ; R68 := R67; R67 := R67[0xc0a3774b]
1000 [-]: LOADK     R69 K50      ; R69 := "ImpactMessage"
1001 [-]: GETTABLE  R70 R40 R64  ; R70 := R40[R64]
1002 [-]: CONST     R71 11       ; R71 := 11.000000
1003 [-]: GETGLOBAL R72 K0       ; R72 := 0x7b998233
1004 [-]: GETTABLE  R73 R38 R65  ; R73 := R38[R65]
1005 [-]: CALL      R72 2 2      ; R72 := R72(R73)
1006 [-]: NOT       R72 R72      ; R72 :=  R72
1007 [-]: CALL      R67 6 1      ; R67(R68,R69,R70,R71,R72)
1008 [-]: GETGLOBAL R67 K0       ; R67 := 0x7b998233
1009 [-]: GETTABLE  R68 R38 R65  ; R68 := R38[R65]
1010 [-]: CALL      R67 2 2      ; R67 := R67(R68)
1011 [-]: TEST      R67 1        ; if R67 then PC := 1018
1012 [-]: JMP       1018         ; PC := 1018
1013 [-]: GETGLOBAL R67 K1       ; R67 := 0xae91e43b
1014 [-]: SELF      R67 R67 K137 ; R68 := R67; R67 := R67[0x1cb415c1]
1015 [-]: MOVE      R69 R66      ; R69 := R66
1016 [-]: GETTABLE  R70 R38 R65  ; R70 := R38[R65]
1017 [-]: CALL      R67 4 1      ; R67(R68,R69,R70)
1018 [-]: GETGLOBAL R67 K0       ; R67 := 0x7b998233
1019 [-]: MOVE      R68 R65      ; R68 := R65
1020 [-]: LOADK     R69 K138     ; R69 := "Material"
1021 [-]: CONCAT    R68 R68 R69  ; R68 := R68 .. R69
1022 [-]: GETTABLE  R68 R38 R68  ; R68 := R38[R68]
1023 [-]: CALL      R67 2 2      ; R67 := R67(R68)
1024 [-]: TEST      R67 1        ; if R67 then PC := 1035
1025 [-]: JMP       1035         ; PC := 1035
1026 [-]: GETGLOBAL R67 K1       ; R67 := 0xae91e43b
1027 [-]: SELF      R67 R67 K61  ; R68 := R67; R67 := R67[0xd5181643]
1028 [-]: MOVE      R69 R66      ; R69 := R66
1029 [-]: MOVE      R70 R65      ; R70 := R65
1030 [-]: LOADK     R71 K138     ; R71 := "Material"
1031 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1032 [-]: GETTABLE  R70 R38 R70  ; R70 := R38[R70]
1033 [-]: CALL      R67 4 1      ; R67(R68,R69,R70)
1034 [-]: JMP       1041         ; PC := 1041
1035 [-]: GETGLOBAL R67 K1       ; R67 := 0xae91e43b
1036 [-]: SELF      R67 R67 K61  ; R68 := R67; R67 := R67[0xd5181643]
1037 [-]: MOVE      R69 R66      ; R69 := R66
1038 [-]: GETGLOBAL R70 K63      ; R70 := 0x0032441c
1039 [-]: GETTABLE  R70 R70 K64  ; R70 := R70["UIMaterial_Plain"]
1040 [-]: CALL      R67 4 1      ; R67(R68,R69,R70)
1041 [-]: GETGLOBAL R67 K1       ; R67 := 0xae91e43b
1042 [-]: SELF      R67 R67 K139 ; R68 := R67; R67 := R67[0xaac9bd47]
1043 [-]: MOVE      R69 R66      ; R69 := R66
1044 [-]: CALL      R67 3 1      ; R67(R68,R69)
1045 [-]: GETGLOBAL R67 K0       ; R67 := 0x7b998233
1046 [-]: MOVE      R68 R65      ; R68 := R65
1047 [-]: LOADK     R69 K140     ; R69 := "MaterialAdjust"
1048 [-]: CONCAT    R68 R68 R69  ; R68 := R68 .. R69
1049 [-]: GETTABLE  R68 R38 R68  ; R68 := R38[R68]
1050 [-]: CALL      R67 2 2      ; R67 := R67(R68)
1051 [-]: TEST      R67 1        ; if R67 then PC := 1074
1052 [-]: JMP       1074         ; PC := 1074
1053 [-]: GETGLOBAL R67 K141     ; R67 := 0xcfc01047
1054 [-]: MOVE      R68 R65      ; R68 := R65
1055 [-]: LOADK     R69 K140     ; R69 := "MaterialAdjust"
1056 [-]: CONCAT    R68 R68 R69  ; R68 := R68 .. R69
1057 [-]: GETTABLE  R68 R38 R68  ; R68 := R38[R68]
1058 [-]: CALL      R67 2 4      ; R67,R68,R69 := R67(R68)
1059 [-]: JMP       1072         ; PC := 1072
1060 [-]: LEN       R72 R71      ; R72 := # R71
1061 [-]: EQ        0 R72 K17    ; if R72 ~= 4.000000 then PC := 1072
1062 [-]: JMP       1072         ; PC := 1072
1063 [-]: GETGLOBAL R72 K1       ; R72 := 0xae91e43b
1064 [-]: SELF      R72 R72 K142 ; R73 := R72; R72 := R72[0x91e13703]
1065 [-]: MOVE      R74 R66      ; R74 := R66
1066 [-]: MOVE      R75 R70      ; R75 := R70
1067 [-]: GETTABLE  R76 R71 K14  ; R76 := R71[1.000000]
1068 [-]: GETTABLE  R77 R71 K41  ; R77 := R71[2.000000]
1069 [-]: GETTABLE  R78 R71 K72  ; R78 := R71[3.000000]
1070 [-]: GETTABLE  R79 R71 K17  ; R79 := R71[4.000000]
1071 [-]: CALL      R72 8 1      ; R72(R73,R74,R75,R76,R77,R78,R79)
1072 [-]: TFORLOOP  R67 2        ; R70,R71 :=  R67(R68,R69); if R70 ~= nil then begin PC = 1060; R69 := R70 end
1073 [-]: JMP       1060         ; PC := 1060
1074 [-]: CONST     R72 1        ; R72 := 1.000000
1075 [-]: GETGLOBAL R73 K0       ; R73 := 0x7b998233
1076 [-]: MOVE      R74 R65      ; R74 := R65
1077 [-]: LOADK     R75 K143     ; R75 := "MaterialInterp"
1078 [-]: CONCAT    R74 R74 R75  ; R74 := R74 .. R75
1079 [-]: GETTABLE  R74 R38 R74  ; R74 := R38[R74]
1080 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1081 [-]: TEST      R73 1        ; if R73 then PC := 1146
1082 [-]: JMP       1146         ; PC := 1146
1083 [-]: GETGLOBAL R73 K141     ; R73 := 0xcfc01047
1084 [-]: MOVE      R74 R65      ; R74 := R65
1085 [-]: LOADK     R75 K143     ; R75 := "MaterialInterp"
1086 [-]: CONCAT    R74 R74 R75  ; R74 := R74 .. R75
1087 [-]: GETTABLE  R74 R38 R74  ; R74 := R38[R74]
1088 [-]: CALL      R73 2 4      ; R73,R74,R75 := R73(R74)
1089 [-]: JMP       1144         ; PC := 1144
1090 [-]: GETTABLE  R78 R77 K14  ; R78 := R77[1.000000]
1091 [-]: GETTABLE  R79 R77 K41  ; R79 := R77[2.000000]
1092 [-]: LEN       R80 R78      ; R80 := # R78
1093 [-]: EQ        0 R80 K17    ; if R80 ~= 4.000000 then PC := 1142
1094 [-]: JMP       1142         ; PC := 1142
1095 [-]: LEN       R80 R79      ; R80 := # R79
1096 [-]: EQ        0 R80 K17    ; if R80 ~= 4.000000 then PC := 1142
1097 [-]: JMP       1142         ; PC := 1142
1098 [-]: MOVE      R80 R66      ; R80 := R66
1099 [-]: LOADK     R81 K144     ; R81 := "_"
1100 [-]: MOVE      R82 R72      ; R82 := R72
1101 [-]: CONCAT    R80 R80 R82  ; R80 := R80 .. R81 .. R82
1102 [-]: LEN       R81 R77      ; R81 := # R77
1103 [-]: LE        0 K72 R81    ; if 3.000000 > R81 then PC := 1108
1104 [-]: JMP       1108         ; PC := 1108
1105 [-]: GETTABLE  R81 R77 K72  ; R81 := R77[3.000000]
1106 [-]: TEST      R81 1        ; if R81 then PC := 1109
1107 [-]: JMP       1109         ; PC := 1109
1108 [-]: CONST     R81 0        ; R81 := 0.000000
1109 [-]: LEN       R82 R77      ; R82 := # R77
1110 [-]: LE        0 K17 R82    ; if 4.000000 > R82 then PC := 1115
1111 [-]: JMP       1115         ; PC := 1115
1112 [-]: GETTABLE  R82 R77 K17  ; R82 := R77[4.000000]
1113 [-]: TEST      R82 1        ; if R82 then PC := 1116
1114 [-]: JMP       1116         ; PC := 1116
1115 [-]: CONST     R82 1        ; R82 := 1.000000
1116 [-]: LEN       R83 R77      ; R83 := # R77
1117 [-]: LE        0 K145 R83   ; if 5.000000 > R83 then PC := 1122
1118 [-]: JMP       1122         ; PC := 1122
1119 [-]: GETTABLE  R83 R77 K145 ; R83 := R77[5.000000]
1120 [-]: TEST      R83 1        ; if R83 then PC := 1123
1121 [-]: JMP       1123         ; PC := 1123
1122 [-]: CONST     R83 0        ; R83 := 0.000000
1123 [-]: CLOSURE   R84 0        ; R84 := closure(Function #119.1)
1124 [-]: MOVE      R0 R66       ; R0 := R66
1125 [-]: MOVE      R0 R76       ; R0 := R76
1126 [-]: MOVE      R0 R78       ; R0 := R78
1127 [-]: MOVE      R0 R79       ; R0 := R79
1128 [-]: GETGLOBAL R85 K132     ; R85 := 0x25312c9b
1129 [-]: GETGLOBAL R86 K1       ; R86 := 0xae91e43b
1130 [-]: MOVE      R87 R80      ; R87 := R80
1131 [-]: MOVE      R88 R81      ; R88 := R81
1132 [-]: NEWTABLE  R89 1 0      ; R89 := {}
1133 [-]: MOVE      R90 R84      ; R90 := R84
1134 [-]: SETLIST   R89 1 1      ; R89[(1-1)*FPF+i] := R(89+i), 1 <= i <= 1
1135 [-]: NEWTABLE  R90 1 0      ; R90 := {}
1136 [-]: CONST     R91 1        ; R91 := 1.000000
1137 [-]: SETLIST   R90 1 1      ; R90[(1-1)*FPF+i] := R(90+i), 1 <= i <= 1
1138 [-]: MOVE      R91 R82      ; R91 := R82
1139 [-]: MOVE      R92 R83      ; R92 := R83
1140 [-]: CALL      R85 8 1      ; R85(R86,R87,R88,R89,R90,R91,R92)
1141 [-]: ADD       R72 R72 K14  ; R72 := R72 + 1.000000
1142 [-]: CLOSE     R78          ; SAVE R78,...
1143 [-]: CLOSE     R76          ; SAVE R76,...
1144 [-]: TFORLOOP  R73 2        ; R76,R77 :=  R73(R74,R75); if R76 ~= nil then begin PC = 1090; R75 := R76 end
1145 [-]: JMP       1090         ; PC := 1090
1146 [-]: GETTABLE  R76 R43 R64  ; R76 := R43[R64]
1147 [-]: GETTABLE  R77 R44 R64  ; R77 := R44[R64]
1148 [-]: GETTABLE  R78 R41 R64  ; R78 := R41[R64]
1149 [-]: GETTABLE  R79 R42 R64  ; R79 := R42[R64]
1150 [-]: GETTABLE  R80 R45 R64  ; R80 := R45[R64]
1151 [-]: GETTABLE  R81 R46 R64  ; R81 := R46[R64]
1152 [-]: MOVE      R82 R65      ; R82 := R65
1153 [-]: LOADK     R83 K146     ; R83 := "Adjust"
1154 [-]: CONCAT    R82 R82 R83  ; R82 := R82 .. R83
1155 [-]: GETTABLE  R82 R38 R82  ; R82 := R38[R82]
1156 [-]: EQ        1 R82 K22    ; if R82 == nil then PC := 1186
1157 [-]: JMP       1186         ; PC := 1186
1158 [-]: MOVE      R82 R65      ; R82 := R65
1159 [-]: LOADK     R83 K146     ; R83 := "Adjust"
1160 [-]: CONCAT    R82 R82 R83  ; R82 := R82 .. R83
1161 [-]: GETTABLE  R82 R38 R82  ; R82 := R38[R82]
1162 [-]: GETTABLE  R83 R82 K147 ; R83 := R82["Width"]
1163 [-]: EQ        1 R83 K22    ; if R83 == nil then PC := 1166
1164 [-]: JMP       1166         ; PC := 1166
1165 [-]: GETTABLE  R78 R82 K147 ; R78 := R82["Width"]
1166 [-]: GETTABLE  R83 R82 K148 ; R83 := R82["Height"]
1167 [-]: EQ        1 R83 K22    ; if R83 == nil then PC := 1170
1168 [-]: JMP       1170         ; PC := 1170
1169 [-]: GETTABLE  R79 R82 K148 ; R79 := R82["Height"]
1170 [-]: GETTABLE  R83 R82 K149 ; R83 := R82["X"]
1171 [-]: EQ        1 R83 K22    ; if R83 == nil then PC := 1174
1172 [-]: JMP       1174         ; PC := 1174
1173 [-]: GETTABLE  R76 R82 K149 ; R76 := R82["X"]
1174 [-]: GETTABLE  R83 R82 K150 ; R83 := R82["Y"]
1175 [-]: EQ        1 R83 K22    ; if R83 == nil then PC := 1178
1176 [-]: JMP       1178         ; PC := 1178
1177 [-]: GETTABLE  R77 R82 K150 ; R77 := R82["Y"]
1178 [-]: GETTABLE  R83 R82 K123 ; R83 := R82["Color"]
1179 [-]: EQ        1 R83 K22    ; if R83 == nil then PC := 1182
1180 [-]: JMP       1182         ; PC := 1182
1181 [-]: GETTABLE  R80 R82 K123 ; R80 := R82["Color"]
1182 [-]: GETTABLE  R83 R82 K151 ; R83 := R82["Alpha"]
1183 [-]: EQ        1 R83 K22    ; if R83 == nil then PC := 1186
1184 [-]: JMP       1186         ; PC := 1186
1185 [-]: GETTABLE  R81 R82 K151 ; R81 := R82["Alpha"]
1186 [-]: GETGLOBAL R83 K1       ; R83 := 0xae91e43b
1187 [-]: SELF      R83 R83 K152 ; R84 := R83; R83 := R83[0xf64b7262]
1188 [-]: LOADK     R85 K153     ; R85 := "Impactmessage"
1189 [-]: GETTABLE  R86 R40 R64  ; R86 := R40[R64]
1190 [-]: CONST     R87 12       ; R87 := 12.000000
1191 [-]: MOVE      R88 R78      ; R88 := R78
1192 [-]: CALL      R83 6 1      ; R83(R84,R85,R86,R87,R88)
1193 [-]: GETGLOBAL R83 K1       ; R83 := 0xae91e43b
1194 [-]: SELF      R83 R83 K152 ; R84 := R83; R83 := R83[0xf64b7262]
1195 [-]: LOADK     R85 K153     ; R85 := "Impactmessage"
1196 [-]: GETTABLE  R86 R40 R64  ; R86 := R40[R64]
1197 [-]: CONST     R87 13       ; R87 := 13.000000
1198 [-]: MOVE      R88 R79      ; R88 := R79
1199 [-]: CALL      R83 6 1      ; R83(R84,R85,R86,R87,R88)
1200 [-]: GETGLOBAL R83 K1       ; R83 := 0xae91e43b
1201 [-]: SELF      R83 R83 K152 ; R84 := R83; R83 := R83[0xf64b7262]
1202 [-]: LOADK     R85 K153     ; R85 := "Impactmessage"
1203 [-]: GETTABLE  R86 R40 R64  ; R86 := R40[R64]
1204 [-]: CONST     R87 0        ; R87 := 0.000000
1205 [-]: MOVE      R88 R76      ; R88 := R76
1206 [-]: CALL      R83 6 1      ; R83(R84,R85,R86,R87,R88)
1207 [-]: GETGLOBAL R83 K1       ; R83 := 0xae91e43b
1208 [-]: SELF      R83 R83 K152 ; R84 := R83; R83 := R83[0xf64b7262]
1209 [-]: LOADK     R85 K153     ; R85 := "Impactmessage"
1210 [-]: GETTABLE  R86 R40 R64  ; R86 := R40[R64]
1211 [-]: CONST     R87 1        ; R87 := 1.000000
1212 [-]: MOVE      R88 R77      ; R88 := R77
1213 [-]: CALL      R83 6 1      ; R83(R84,R85,R86,R87,R88)
1214 [-]: GETGLOBAL R83 K1       ; R83 := 0xae91e43b
1215 [-]: SELF      R83 R83 K152 ; R84 := R83; R83 := R83[0xf64b7262]
1216 [-]: LOADK     R85 K153     ; R85 := "Impactmessage"
1217 [-]: GETTABLE  R86 R40 R64  ; R86 := R40[R64]
1218 [-]: CONST     R87 10       ; R87 := 10.000000
1219 [-]: MOVE      R88 R81      ; R88 := R81
1220 [-]: CALL      R83 6 1      ; R83(R84,R85,R86,R87,R88)
1221 [-]: EQ        1 R80 K22    ; if R80 == nil then PC := 1230
1222 [-]: JMP       1230         ; PC := 1230
1223 [-]: GETGLOBAL R83 K1       ; R83 := 0xae91e43b
1224 [-]: SELF      R83 R83 K152 ; R84 := R83; R83 := R83[0xf64b7262]
1225 [-]: LOADK     R85 K50      ; R85 := "ImpactMessage"
1226 [-]: GETTABLE  R86 R40 R64  ; R86 := R40[R64]
1227 [-]: CONST     R87 9        ; R87 := 9.000000
1228 [-]: MOVE      R88 R80      ; R88 := R80
1229 [-]: CALL      R83 6 1      ; R83(R84,R85,R86,R87,R88)
1230 [-]: GETGLOBAL R83 K0       ; R83 := 0x7b998233
1231 [-]: MOVE      R84 R65      ; R84 := R65
1232 [-]: LOADK     R85 K154     ; R85 := "Interp"
1233 [-]: CONCAT    R84 R84 R85  ; R84 := R84 .. R85
1234 [-]: GETTABLE  R84 R38 R84  ; R84 := R38[R84]
1235 [-]: CALL      R83 2 2      ; R83 := R83(R84)
1236 [-]: TEST      R83 1        ; if R83 then PC := 1301
1237 [-]: JMP       1301         ; PC := 1301
1238 [-]: GETGLOBAL R83 K141     ; R83 := 0xcfc01047
1239 [-]: MOVE      R84 R65      ; R84 := R65
1240 [-]: LOADK     R85 K154     ; R85 := "Interp"
1241 [-]: CONCAT    R84 R84 R85  ; R84 := R84 .. R85
1242 [-]: GETTABLE  R84 R38 R84  ; R84 := R38[R84]
1243 [-]: CALL      R83 2 4      ; R83,R84,R85 := R83(R84)
1244 [-]: JMP       1299         ; PC := 1299
1245 [-]: GETTABLE  R88 R87 K14  ; R88 := R87[1.000000]
1246 [-]: MOVE      R89 R66      ; R89 := R66
1247 [-]: LOADK     R90 K144     ; R90 := "_"
1248 [-]: MOVE      R91 R72      ; R91 := R72
1249 [-]: CONCAT    R89 R89 R91  ; R89 := R89 .. R90 .. R91
1250 [-]: GETTABLE  R90 R87 K41  ; R90 := R87[2.000000]
1251 [-]: GETTABLE  R91 R87 K72  ; R91 := R87[3.000000]
1252 [-]: LEN       R92 R87      ; R92 := # R87
1253 [-]: LE        0 K17 R92    ; if 4.000000 > R92 then PC := 1258
1254 [-]: JMP       1258         ; PC := 1258
1255 [-]: GETTABLE  R92 R87 K17  ; R92 := R87[4.000000]
1256 [-]: TEST      R92 1        ; if R92 then PC := 1259
1257 [-]: JMP       1259         ; PC := 1259
1258 [-]: CONST     R92 0        ; R92 := 0.000000
1259 [-]: LEN       R93 R87      ; R93 := # R87
1260 [-]: LE        0 K145 R93   ; if 5.000000 > R93 then PC := 1265
1261 [-]: JMP       1265         ; PC := 1265
1262 [-]: GETTABLE  R93 R87 K145 ; R93 := R87[5.000000]
1263 [-]: TEST      R93 1        ; if R93 then PC := 1266
1264 [-]: JMP       1266         ; PC := 1266
1265 [-]: CONST     R93 1        ; R93 := 1.000000
1266 [-]: LEN       R94 R87      ; R94 := # R87
1267 [-]: LE        0 K155 R94   ; if 6.000000 > R94 then PC := 1272
1268 [-]: JMP       1272         ; PC := 1272
1269 [-]: GETTABLE  R94 R87 K155 ; R94 := R87[6.000000]
1270 [-]: TEST      R94 1        ; if R94 then PC := 1273
1271 [-]: JMP       1273         ; PC := 1273
1272 [-]: CONST     R94 0        ; R94 := 0.000000
1273 [-]: GETGLOBAL R95 K1       ; R95 := 0xae91e43b
1274 [-]: SELF      R95 R95 K42  ; R96 := R95; R95 := R95[0x67bc869f]
1275 [-]: MOVE      R97 R66      ; R97 := R66
1276 [-]: MOVE      R98 R88      ; R98 := R88
1277 [-]: MOVE      R99 R90      ; R99 := R90
1278 [-]: CALL      R95 5 1      ; R95(R96,R97,R98,R99)
1279 [-]: CLOSURE   R95 1        ; R95 := closure(Function #119.2)
1280 [-]: MOVE      R0 R66       ; R0 := R66
1281 [-]: MOVE      R0 R88       ; R0 := R88
1282 [-]: MOVE      R0 R90       ; R0 := R90
1283 [-]: MOVE      R0 R91       ; R0 := R91
1284 [-]: GETGLOBAL R96 K132     ; R96 := 0x25312c9b
1285 [-]: GETGLOBAL R97 K1       ; R97 := 0xae91e43b
1286 [-]: MOVE      R98 R89      ; R98 := R89
1287 [-]: MOVE      R99 R92      ; R99 := R92
1288 [-]: NEWTABLE  R100 1 0     ; R100 := {}
1289 [-]: MOVE      R101 R95     ; R101 := R95
1290 [-]: SETLIST   R100 1 1     ; R100[(1-1)*FPF+i] := R(100+i), 1 <= i <= 1
1291 [-]: NEWTABLE  R101 1 0     ; R101 := {}
1292 [-]: CONST     R102 1       ; R102 := 1.000000
1293 [-]: SETLIST   R101 1 1     ; R101[(1-1)*FPF+i] := R(101+i), 1 <= i <= 1
1294 [-]: MOVE      R102 R93     ; R102 := R93
1295 [-]: MOVE      R103 R94     ; R103 := R94
1296 [-]: CALL      R96 8 1      ; R96(R97,R98,R99,R100,R101,R102,R103)
1297 [-]: ADD       R72 R72 K14  ; R72 := R72 + 1.000000
1298 [-]: CLOSE     R88          ; SAVE R88,...
1299 [-]: TFORLOOP  R83 2        ; R86,R87 :=  R83(R84,R85); if R86 ~= nil then begin PC = 1245; R85 := R86 end
1300 [-]: JMP       1245         ; PC := 1245
1301 [-]: CLOSE     R66          ; SAVE R66,...
1302 [-]: TFORLOOP  R61 2        ; R64,R65 :=  R61(R62,R63); if R64 ~= nil then begin PC = 995; R63 := R64 end
1303 [-]: JMP       995          ; PC := 995
1304 [-]: GETTABLE  R66 R38 K156 ; R66 := R38["LabelColorOverride"]
1305 [-]: TEST      R66 0        ; if not R66 then PC := 1320
1306 [-]: JMP       1320         ; PC := 1320
1307 [-]: GETGLOBAL R66 K1       ; R66 := 0xae91e43b
1308 [-]: SELF      R66 R66 K42  ; R67 := R66; R66 := R66[0x67bc869f]
1309 [-]: LOADK     R68 K39      ; R68 := "ImpactMessage.Label"
1310 [-]: CONST     R69 36       ; R69 := 36.000000
1311 [-]: GETTABLE  R70 R38 K156 ; R70 := R38["LabelColorOverride"]
1312 [-]: CALL      R66 5 1      ; R66(R67,R68,R69,R70)
1313 [-]: GETGLOBAL R66 K1       ; R66 := 0xae91e43b
1314 [-]: SELF      R66 R66 K42  ; R67 := R66; R66 := R66[0x67bc869f]
1315 [-]: LOADK     R68 K59      ; R68 := "ImpactMessage.DecoLabel"
1316 [-]: CONST     R69 36       ; R69 := 36.000000
1317 [-]: GETTABLE  R70 R38 K156 ; R70 := R38["LabelColorOverride"]
1318 [-]: CALL      R66 5 1      ; R66(R67,R68,R69,R70)
1319 [-]: JMP       1334         ; PC := 1334
1320 [-]: GETGLOBAL R66 K1       ; R66 := 0xae91e43b
1321 [-]: SELF      R66 R66 K42  ; R67 := R66; R66 := R66[0x67bc869f]
1322 [-]: LOADK     R68 K39      ; R68 := "ImpactMessage.Label"
1323 [-]: CONST     R69 36       ; R69 := 36.000000
1324 [-]: GETUPVAL  R70 U10      ; R70 := U10
1325 [-]: GETTABLE  R70 R70 K58  ; R70 := R70["Text"]
1326 [-]: CALL      R66 5 1      ; R66(R67,R68,R69,R70)
1327 [-]: GETGLOBAL R66 K1       ; R66 := 0xae91e43b
1328 [-]: SELF      R66 R66 K42  ; R67 := R66; R66 := R66[0x67bc869f]
1329 [-]: LOADK     R68 K59      ; R68 := "ImpactMessage.DecoLabel"
1330 [-]: CONST     R69 36       ; R69 := 36.000000
1331 [-]: GETUPVAL  R70 U10      ; R70 := U10
1332 [-]: GETTABLE  R70 R70 K58  ; R70 := R70["Text"]
1333 [-]: CALL      R66 5 1      ; R66(R67,R68,R69,R70)
1334 [-]: CONST     R66 2        ; R66 := 2.000000
1335 [-]: CONST     R67 3        ; R67 := 3.000000
1336 [-]: CONST     R68 1        ; R68 := 1.000000
1337 [-]: FORPREP   R66 1419     ; R66 -= R68; PC := 1419
1338 [-]: LOADK     R70 K112     ; R70 := "FontName"
1339 [-]: MOVE      R71 R69      ; R71 := R69
1340 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1341 [-]: GETTABLE  R70 R38 R70  ; R70 := R38[R70]
1342 [-]: EQ        1 R70 K22    ; if R70 == nil then PC := 1348
1343 [-]: JMP       1348         ; PC := 1348
1344 [-]: LOADK     R70 K112     ; R70 := "FontName"
1345 [-]: MOVE      R71 R69      ; R71 := R69
1346 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1347 [-]: GETTABLE  R47 R38 R70  ; R47 := R38[R70]
1348 [-]: LOADK     R70 K32      ; R70 := "FontSize"
1349 [-]: MOVE      R71 R69      ; R71 := R69
1350 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1351 [-]: GETTABLE  R70 R38 R70  ; R70 := R38[R70]
1352 [-]: EQ        1 R70 K22    ; if R70 == nil then PC := 1358
1353 [-]: JMP       1358         ; PC := 1358
1354 [-]: LOADK     R70 K32      ; R70 := "FontSize"
1355 [-]: MOVE      R71 R69      ; R71 := R69
1356 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1357 [-]: GETTABLE  R48 R38 R70  ; R48 := R38[R70]
1358 [-]: LOADK     R70 K113     ; R70 := "LabelYOffset"
1359 [-]: MOVE      R71 R69      ; R71 := R69
1360 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1361 [-]: GETTABLE  R70 R38 R70  ; R70 := R38[R70]
1362 [-]: EQ        1 R70 K22    ; if R70 == nil then PC := 1368
1363 [-]: JMP       1368         ; PC := 1368
1364 [-]: LOADK     R70 K113     ; R70 := "LabelYOffset"
1365 [-]: MOVE      R71 R69      ; R71 := R69
1366 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1367 [-]: GETTABLE  R50 R38 R70  ; R50 := R38[R70]
1368 [-]: GETUPVAL  R70 U3       ; R70 := U3
1369 [-]: GETTABLE  R70 R70 K13  ; R70 := R70[0x06d055f9]
1370 [-]: GETTABLE  R71 R38 K156 ; R71 := R38["LabelColorOverride"]
1371 [-]: GETTABLE  R72 R38 K156 ; R72 := R38["LabelColorOverride"]
1372 [-]: GETUPVAL  R73 U10      ; R73 := U10
1373 [-]: GETTABLE  R73 R73 K58  ; R73 := R73["Text"]
1374 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
1375 [-]: LOADK     R71 K156     ; R71 := "LabelColorOverride"
1376 [-]: MOVE      R72 R69      ; R72 := R69
1377 [-]: CONCAT    R71 R71 R72  ; R71 := R71 .. R72
1378 [-]: GETTABLE  R71 R38 R71  ; R71 := R38[R71]
1379 [-]: EQ        1 R71 K22    ; if R71 == nil then PC := 1385
1380 [-]: JMP       1385         ; PC := 1385
1381 [-]: LOADK     R71 K156     ; R71 := "LabelColorOverride"
1382 [-]: MOVE      R72 R69      ; R72 := R69
1383 [-]: CONCAT    R71 R71 R72  ; R71 := R71 .. R72
1384 [-]: GETTABLE  R70 R38 R71  ; R70 := R38[R71]
1385 [-]: GETGLOBAL R71 K1       ; R71 := 0xae91e43b
1386 [-]: SELF      R71 R71 K38  ; R72 := R71; R71 := R71[0x5f56eeab]
1387 [-]: LOADK     R73 K39      ; R73 := "ImpactMessage.Label"
1388 [-]: MOVE      R74 R69      ; R74 := R69
1389 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
1390 [-]: CONST     R74 41       ; R74 := 41.000000
1391 [-]: MOVE      R75 R47      ; R75 := R47
1392 [-]: CALL      R71 5 1      ; R71(R72,R73,R74,R75)
1393 [-]: GETGLOBAL R71 K1       ; R71 := 0xae91e43b
1394 [-]: SELF      R71 R71 K42  ; R72 := R71; R71 := R71[0x67bc869f]
1395 [-]: LOADK     R73 K39      ; R73 := "ImpactMessage.Label"
1396 [-]: MOVE      R74 R69      ; R74 := R69
1397 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
1398 [-]: CONST     R74 42       ; R74 := 42.000000
1399 [-]: MOVE      R75 R48      ; R75 := R48
1400 [-]: CALL      R71 5 1      ; R71(R72,R73,R74,R75)
1401 [-]: GETGLOBAL R71 K1       ; R71 := 0xae91e43b
1402 [-]: SELF      R71 R71 K42  ; R72 := R71; R71 := R71[0x67bc869f]
1403 [-]: LOADK     R73 K39      ; R73 := "ImpactMessage.Label"
1404 [-]: MOVE      R74 R69      ; R74 := R69
1405 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
1406 [-]: CONST     R74 1        ; R74 := 1.000000
1407 [-]: GETUPVAL  R75 U5       ; R75 := U5
1408 [-]: GETTABLE  R75 R75 K70  ; R75 := R75["mImpactMessage4LabelY"]
1409 [-]: ADD       R75 R75 R50  ; R75 := R75 + R50
1410 [-]: CALL      R71 5 1      ; R71(R72,R73,R74,R75)
1411 [-]: GETGLOBAL R71 K1       ; R71 := 0xae91e43b
1412 [-]: SELF      R71 R71 K42  ; R72 := R71; R71 := R71[0x67bc869f]
1413 [-]: LOADK     R73 K39      ; R73 := "ImpactMessage.Label"
1414 [-]: MOVE      R74 R69      ; R74 := R69
1415 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
1416 [-]: CONST     R74 36       ; R74 := 36.000000
1417 [-]: MOVE      R75 R70      ; R75 := R70
1418 [-]: CALL      R71 5 1      ; R71(R72,R73,R74,R75)
1419 [-]: FORLOOP   R66 1338     ; R66 += R68; if R66 <= R67 then begin PC := 1338; R69 := R66 end
1420 [-]: GETTABLE  R71 R38 K33  ; R71 := R38["Delimiter"]
1421 [-]: EQ        1 R71 K22    ; if R71 == nil then PC := 1496
1422 [-]: JMP       1496         ; PC := 1496
1423 [-]: NEWTABLE  R71 0 0      ; R71 := {}
1424 [-]: GETGLOBAL R72 K28      ; R72 := 0x7f5022cf
1425 [-]: GETTABLE  R72 R72 K34  ; R72 := R72[0x3675281c]
1426 [-]: MOVE      R73 R34      ; R73 := R34
1427 [-]: GETTABLE  R74 R38 K33  ; R74 := R38["Delimiter"]
1428 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
1429 [-]: LOADK     R74 K35      ; R74 := "(.-)"
1430 [-]: GETTABLE  R75 R38 K33  ; R75 := R38["Delimiter"]
1431 [-]: CONCAT    R74 R74 R75  ; R74 := R74 .. R75
1432 [-]: CALL      R72 3 4      ; R72,R73,R74 := R72(R73,R74)
1433 [-]: JMP       1439         ; PC := 1439
1434 [-]: GETGLOBAL R76 K36      ; R76 := 0x33bdd652
1435 [-]: GETTABLE  R76 R76 K37  ; R76 := R76[0x23d5322f]
1436 [-]: MOVE      R77 R71      ; R77 := R71
1437 [-]: MOVE      R78 R75      ; R78 := R75
1438 [-]: CALL      R76 3 1      ; R76(R77,R78)
1439 [-]: TFORLOOP  R72 1        ; R75 :=  R72(R73,R74); if R75 ~= nil then begin PC = 1434; R74 := R75 end
1440 [-]: JMP       1434         ; PC := 1434
1441 [-]: GETGLOBAL R76 K1       ; R76 := 0xae91e43b
1442 [-]: SELF      R76 R76 K38  ; R77 := R76; R76 := R76[0x5f56eeab]
1443 [-]: LOADK     R78 K39      ; R78 := "ImpactMessage.Label"
1444 [-]: CONST     R79 29       ; R79 := 29.000000
1445 [-]: GETTABLE  R80 R71 K14  ; R80 := R71[1.000000]
1446 [-]: CALL      R76 5 1      ; R76(R77,R78,R79,R80)
1447 [-]: GETTABLE  R56 R71 K14  ; R56 := R71[1.000000]
1448 [-]: CONST     R76 2        ; R76 := 2.000000
1449 [-]: CONST     R77 3        ; R77 := 3.000000
1450 [-]: CONST     R78 1        ; R78 := 1.000000
1451 [-]: FORPREP   R76 1494     ; R76 -= R78; PC := 1494
1452 [-]: GETGLOBAL R80 K1       ; R80 := 0xae91e43b
1453 [-]: SELF      R80 R80 K38  ; R81 := R80; R80 := R80[0x5f56eeab]
1454 [-]: LOADK     R82 K39      ; R82 := "ImpactMessage.Label"
1455 [-]: MOVE      R83 R79      ; R83 := R79
1456 [-]: CONCAT    R82 R82 R83  ; R82 := R82 .. R83
1457 [-]: CONST     R83 29       ; R83 := 29.000000
1458 [-]: LOADK     R84 K26      ; R84 := ""
1459 [-]: CALL      R80 5 1      ; R80(R81,R82,R83,R84)
1460 [-]: GETTABLE  R80 R71 R79  ; R80 := R71[R79]
1461 [-]: EQ        1 R80 K22    ; if R80 == nil then PC := 1494
1462 [-]: JMP       1494         ; PC := 1494
1463 [-]: MOVE      R80 R52      ; R80 := R52
1464 [-]: LOADK     R81 K114     ; R81 := "LetterSpacing"
1465 [-]: MOVE      R82 R79      ; R82 := R79
1466 [-]: CONCAT    R81 R81 R82  ; R81 := R81 .. R82
1467 [-]: GETTABLE  R81 R38 R81  ; R81 := R38[R81]
1468 [-]: EQ        1 R81 K22    ; if R81 == nil then PC := 1474
1469 [-]: JMP       1474         ; PC := 1474
1470 [-]: LOADK     R81 K114     ; R81 := "LetterSpacing"
1471 [-]: MOVE      R82 R79      ; R82 := R79
1472 [-]: CONCAT    R81 R81 R82  ; R81 := R81 .. R82
1473 [-]: GETTABLE  R80 R38 R81  ; R80 := R38[R81]
1474 [-]: GETGLOBAL R81 K1       ; R81 := 0xae91e43b
1475 [-]: SELF      R81 R81 K42  ; R82 := R81; R81 := R81[0x67bc869f]
1476 [-]: LOADK     R83 K39      ; R83 := "ImpactMessage.Label"
1477 [-]: MOVE      R84 R79      ; R84 := R79
1478 [-]: CONCAT    R83 R83 R84  ; R83 := R83 .. R84
1479 [-]: CONST     R84 65       ; R84 := 65.000000
1480 [-]: MOVE      R85 R80      ; R85 := R80
1481 [-]: CALL      R81 5 1      ; R81(R82,R83,R84,R85)
1482 [-]: GETGLOBAL R81 K1       ; R81 := 0xae91e43b
1483 [-]: SELF      R81 R81 K157 ; R82 := R81; R81 := R81[0xdca61cfa]
1484 [-]: GETTABLE  R83 R71 R79  ; R83 := R71[R79]
1485 [-]: CALL      R81 3 2      ; R81 := R81(R82,R83)
1486 [-]: GETGLOBAL R82 K1       ; R82 := 0xae91e43b
1487 [-]: SELF      R82 R82 K38  ; R83 := R82; R82 := R82[0x5f56eeab]
1488 [-]: LOADK     R84 K39      ; R84 := "ImpactMessage.Label"
1489 [-]: MOVE      R85 R79      ; R85 := R79
1490 [-]: CONCAT    R84 R84 R85  ; R84 := R84 .. R85
1491 [-]: CONST     R85 29       ; R85 := 29.000000
1492 [-]: MOVE      R86 R81      ; R86 := R81
1493 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
1494 [-]: FORLOOP   R76 1452     ; R76 += R78; if R76 <= R77 then begin PC := 1452; R79 := R76 end
1495 [-]: JMP       1509         ; PC := 1509
1496 [-]: CONST     R82 2        ; R82 := 2.000000
1497 [-]: CONST     R83 3        ; R83 := 3.000000
1498 [-]: CONST     R84 1        ; R84 := 1.000000
1499 [-]: FORPREP   R82 1508     ; R82 -= R84; PC := 1508
1500 [-]: GETGLOBAL R86 K1       ; R86 := 0xae91e43b
1501 [-]: SELF      R86 R86 K38  ; R87 := R86; R86 := R86[0x5f56eeab]
1502 [-]: LOADK     R88 K39      ; R88 := "ImpactMessage.Label"
1503 [-]: MOVE      R89 R85      ; R89 := R85
1504 [-]: CONCAT    R88 R88 R89  ; R88 := R88 .. R89
1505 [-]: CONST     R89 29       ; R89 := 29.000000
1506 [-]: LOADK     R90 K26      ; R90 := ""
1507 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
1508 [-]: FORLOOP   R82 1500     ; R82 += R84; if R82 <= R83 then begin PC := 1500; R85 := R82 end
1509 [-]: GETGLOBAL R86 K1       ; R86 := 0xae91e43b
1510 [-]: SELF      R86 R86 K42  ; R87 := R86; R86 := R86[0x67bc869f]
1511 [-]: LOADK     R88 K39      ; R88 := "ImpactMessage.Label"
1512 [-]: CONST     R89 65       ; R89 := 65.000000
1513 [-]: MOVE      R90 R52      ; R90 := R52
1514 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
1515 [-]: GETTABLE  R86 R38 K158 ; R86 := R38["FlareColorOverride"]
1516 [-]: TEST      R86 0        ; if not R86 then PC := 1524
1517 [-]: JMP       1524         ; PC := 1524
1518 [-]: GETGLOBAL R86 K1       ; R86 := 0xae91e43b
1519 [-]: SELF      R86 R86 K42  ; R87 := R86; R86 := R86[0x67bc869f]
1520 [-]: LOADK     R88 K67      ; R88 := "ImpactMessage.MessageFlare"
1521 [-]: CONST     R89 9        ; R89 := 9.000000
1522 [-]: GETTABLE  R90 R38 K158 ; R90 := R38["FlareColorOverride"]
1523 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
1524 [-]: GETTABLE  R86 R38 K159 ; R86 := R38["LineColorOverride"]
1525 [-]: TEST      R86 0        ; if not R86 then PC := 1540
1526 [-]: JMP       1540         ; PC := 1540
1527 [-]: GETGLOBAL R86 K1       ; R86 := 0xae91e43b
1528 [-]: SELF      R86 R86 K42  ; R87 := R86; R86 := R86[0x67bc869f]
1529 [-]: LOADK     R88 K60      ; R88 := "ImpactMessage.BgLines"
1530 [-]: CONST     R89 9        ; R89 := 9.000000
1531 [-]: GETTABLE  R90 R38 K159 ; R90 := R38["LineColorOverride"]
1532 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
1533 [-]: GETGLOBAL R86 K1       ; R86 := 0xae91e43b
1534 [-]: SELF      R86 R86 K42  ; R87 := R86; R86 := R86[0x67bc869f]
1535 [-]: LOADK     R88 K69      ; R88 := "ImpactMessage.LineDeco"
1536 [-]: CONST     R89 9        ; R89 := 9.000000
1537 [-]: GETTABLE  R90 R38 K159 ; R90 := R38["LineColorOverride"]
1538 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
1539 [-]: JMP       1547         ; PC := 1547
1540 [-]: GETGLOBAL R86 K1       ; R86 := 0xae91e43b
1541 [-]: SELF      R86 R86 K42  ; R87 := R86; R86 := R86[0x67bc869f]
1542 [-]: LOADK     R88 K60      ; R88 := "ImpactMessage.BgLines"
1543 [-]: CONST     R89 9        ; R89 := 9.000000
1544 [-]: GETUPVAL  R90 U10      ; R90 := U10
1545 [-]: GETTABLE  R90 R90 K58  ; R90 := R90["Text"]
1546 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
1547 [-]: LOADNIL   R86 R86      ; R86 := nil
1548 [-]: GETGLOBAL R87 K1       ; R87 := 0xae91e43b
1549 [-]: SELF      R87 R87 K40  ; R88 := R87; R87 := R87[0x91a24e4b]
1550 [-]: LOADK     R89 K39      ; R89 := "ImpactMessage.Label"
1551 [-]: CONST     R90 35       ; R90 := 35.000000
1552 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1553 [-]: MOVE      R86 R87      ; R86 := R87
1554 [-]: LT        0 K41 R86    ; if 2.000000 >= R86 then PC := 1563
1555 [-]: JMP       1563         ; PC := 1563
1556 [-]: SUB       R48 R48 K41  ; R48 := R48 - 2.000000
1557 [-]: GETGLOBAL R87 K1       ; R87 := 0xae91e43b
1558 [-]: SELF      R87 R87 K42  ; R88 := R87; R87 := R87[0x67bc869f]
1559 [-]: LOADK     R89 K39      ; R89 := "ImpactMessage.Label"
1560 [-]: CONST     R90 42       ; R90 := 42.000000
1561 [-]: MOVE      R91 R48      ; R91 := R48
1562 [-]: CALL      R87 5 1      ; R87(R88,R89,R90,R91)
1563 [-]: GETGLOBAL R87 K1       ; R87 := 0xae91e43b
1564 [-]: SELF      R87 R87 K38  ; R88 := R87; R87 := R87[0x5f56eeab]
1565 [-]: LOADK     R89 K39      ; R89 := "ImpactMessage.Label"
1566 [-]: CONST     R90 29       ; R90 := 29.000000
1567 [-]: LOADK     R91 K26      ; R91 := ""
1568 [-]: CALL      R87 5 1      ; R87(R88,R89,R90,R91)
1569 [-]: GETGLOBAL R87 K1       ; R87 := 0xae91e43b
1570 [-]: SELF      R87 R87 K38  ; R88 := R87; R87 := R87[0x5f56eeab]
1571 [-]: LOADK     R89 K39      ; R89 := "ImpactMessage.Label"
1572 [-]: CONST     R90 29       ; R90 := 29.000000
1573 [-]: MOVE      R91 R56      ; R91 := R56
1574 [-]: CALL      R87 5 1      ; R87(R88,R89,R90,R91)
1575 [-]: LE        1 R86 K41    ; if R86 <= 2.000000 then PC := 1579
1576 [-]: JMP       1579         ; PC := 1579
1577 [-]: LE        0 R48 K43    ; if R48 > 16.000000 then PC := 1548
1578 [-]: JMP       1548         ; PC := 1548
1579 [-]: GETTABLE  R87 R38 K160 ; R87 := R38["ShowTextShadow"]
1580 [-]: TEST      R87 0        ; if not R87 then PC := 1602
1581 [-]: JMP       1602         ; PC := 1602
1582 [-]: LOADK     R87 K39      ; R87 := "ImpactMessage.Label"
1583 [-]: GETTABLE  R88 R38 K161 ; R88 := R38["TextShadowLabelIndex"]
1584 [-]: TEST      R88 0        ; if not R88 then PC := 1589
1585 [-]: JMP       1589         ; PC := 1589
1586 [-]: MOVE      R88 R87      ; R88 := R87
1587 [-]: GETTABLE  R89 R38 K161 ; R89 := R38["TextShadowLabelIndex"]
1588 [-]: CONCAT    R87 R88 R89  ; R87 := R88 .. R89
1589 [-]: GETGLOBAL R88 K1       ; R88 := 0xae91e43b
1590 [-]: SELF      R88 R88 K40  ; R89 := R88; R88 := R88[0x91a24e4b]
1591 [-]: MOVE      R90 R87      ; R90 := R87
1592 [-]: CONST     R91 34       ; R91 := 34.000000
1593 [-]: CALL      R88 4 2      ; R88 := R88(R89,R90,R91)
1594 [-]: GETGLOBAL R89 K1       ; R89 := 0xae91e43b
1595 [-]: SELF      R89 R89 K42  ; R90 := R89; R89 := R89[0x67bc869f]
1596 [-]: LOADK     R91 K68      ; R91 := "ImpactMessage.Underlay.TopShadow"
1597 [-]: CONST     R92 13       ; R92 := 13.000000
1598 [-]: MUL       R93 R88 K41  ; R93 := R88 * 2.000000
1599 [-]: ADD       R93 K162 R93 ; R93 := 32.000000 + R93
1600 [-]: CALL      R89 5 1      ; R89(R90,R91,R92,R93)
1601 [-]: JMP       1608         ; PC := 1608
1602 [-]: GETGLOBAL R89 K1       ; R89 := 0xae91e43b
1603 [-]: SELF      R89 R89 K42  ; R90 := R89; R89 := R89[0x67bc869f]
1604 [-]: LOADK     R91 K68      ; R91 := "ImpactMessage.Underlay.TopShadow"
1605 [-]: CONST     R92 13       ; R92 := 13.000000
1606 [-]: CONST     R93 32       ; R93 := 32.000000
1607 [-]: CALL      R89 5 1      ; R89(R90,R91,R92,R93)
1608 [-]: GETTABLE  R89 R38 K163 ; R89 := R38["AllowLabelUpdate"]
1609 [-]: TEST      R89 0        ; if not R89 then PC := 1613
1610 [-]: JMP       1613         ; PC := 1613
1611 [-]: GETUPVAL  R89 U5       ; R89 := U5
1612 [-]: SETTABLE  R89 K25 R11  ; R89["ActiveImpactMessage"] := R11
1613 [-]: GETGLOBAL R89 K15      ; R89 := 0xe72d2edb
1614 [-]: EQ        1 R89 K72    ; if R89 == 3.000000 then PC := 1672
1615 [-]: JMP       1672         ; PC := 1672
1616 [-]: EQ        1 R6 K17     ; if R6 == 4.000000 then PC := 1672
1617 [-]: JMP       1672         ; PC := 1672
1618 [-]: TEST      R12 0        ; if not R12 then PC := 1634
1619 [-]: JMP       1634         ; PC := 1634
1620 [-]: GETGLOBAL R89 K1       ; R89 := 0xae91e43b
1621 [-]: SELF      R89 R89 K42  ; R90 := R89; R89 := R89[0x67bc869f]
1622 [-]: LOADK     R91 K56      ; R91 := "ImpactMessage.Underlay"
1623 [-]: CONST     R92 9        ; R92 := 9.000000
1624 [-]: GETUPVAL  R93 U3       ; R93 := U3
1625 [-]: GETTABLE  R93 R93 K13  ; R93 := R93[0x06d055f9]
1626 [-]: MOVE      R94 R2       ; R94 := R2
1627 [-]: GETGLOBAL R95 K63      ; R95 := 0x0032441c
1628 [-]: GETTABLE  R95 R95 K164 ; R95 := R95["UIColor_Shield"]
1629 [-]: GETGLOBAL R96 K63      ; R96 := 0x0032441c
1630 [-]: GETTABLE  R96 R96 K165 ; R96 := R96["UIColor_Health"]
1631 [-]: CALL      R93 4 0      ; R93,... := R93(R94,R95,R96)
1632 [-]: CALL      R89 0 1      ; R89(R90,...)
1633 [-]: JMP       1678         ; PC := 1678
1634 [-]: GETUPVAL  R89 U3       ; R89 := U3
1635 [-]: GETTABLE  R89 R89 K13  ; R89 := R89[0x06d055f9]
1636 [-]: GETGLOBAL R90 K20      ; R90 := _T
1637 [-]: GETTABLE  R90 R90 K166 ; R90 := R90["ImpactMessageTextColorOverride"]
1638 [-]: EQ        0 R90 K22    ; if R90 ~= nil then PC := 1641
1639 [-]: JMP       1641         ; PC := 1641
1640 [-]: LOADKB    R90 0 1      ; R90 := false; PC := 1641
1641 [-]: LOADKB    R90 1 0      ; R90 := true
1642 [-]: GETGLOBAL R91 K20      ; R91 := _T
1643 [-]: GETTABLE  R91 R91 K166 ; R91 := R91["ImpactMessageTextColorOverride"]
1644 [-]: GETUPVAL  R92 U10      ; R92 := U10
1645 [-]: GETTABLE  R92 R92 K58  ; R92 := R92["Text"]
1646 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
1647 [-]: GETUPVAL  R90 U3       ; R90 := U3
1648 [-]: GETTABLE  R90 R90 K13  ; R90 := R90[0x06d055f9]
1649 [-]: GETGLOBAL R91 K20      ; R91 := _T
1650 [-]: GETTABLE  R91 R91 K167 ; R91 := R91["ImpactMessageNegativeTextColorOverride"]
1651 [-]: EQ        0 R91 K22    ; if R91 ~= nil then PC := 1654
1652 [-]: JMP       1654         ; PC := 1654
1653 [-]: LOADKB    R91 0 1      ; R91 := false; PC := 1654
1654 [-]: LOADKB    R91 1 0      ; R91 := true
1655 [-]: GETGLOBAL R92 K20      ; R92 := _T
1656 [-]: GETTABLE  R92 R92 K167 ; R92 := R92["ImpactMessageNegativeTextColorOverride"]
1657 [-]: GETUPVAL  R93 U10      ; R93 := U10
1658 [-]: GETTABLE  R93 R93 K168 ; R93 := R93["NegativeText"]
1659 [-]: CALL      R90 4 2      ; R90 := R90(R91,R92,R93)
1660 [-]: GETGLOBAL R91 K1       ; R91 := 0xae91e43b
1661 [-]: SELF      R91 R91 K42  ; R92 := R91; R91 := R91[0x67bc869f]
1662 [-]: LOADK     R93 K50      ; R93 := "ImpactMessage"
1663 [-]: CONST     R94 9        ; R94 := 9.000000
1664 [-]: GETUPVAL  R95 U3       ; R95 := U3
1665 [-]: GETTABLE  R95 R95 K13  ; R95 := R95[0x06d055f9]
1666 [-]: MOVE      R96 R2       ; R96 := R2
1667 [-]: MOVE      R97 R89      ; R97 := R89
1668 [-]: MOVE      R98 R90      ; R98 := R90
1669 [-]: CALL      R95 4 0      ; R95,... := R95(R96,R97,R98)
1670 [-]: CALL      R91 0 1      ; R91(R92,...)
1671 [-]: JMP       1678         ; PC := 1678
1672 [-]: GETGLOBAL R91 K1       ; R91 := 0xae91e43b
1673 [-]: SELF      R91 R91 K42  ; R92 := R91; R91 := R91[0x67bc869f]
1674 [-]: LOADK     R93 K50      ; R93 := "ImpactMessage"
1675 [-]: CONST     R94 9        ; R94 := 9.000000
1676 [-]: LOADK     R95 K107     ; R95 := 16777215.000000
1677 [-]: CALL      R91 5 1      ; R91(R92,R93,R94,R95)
1678 [-]: EQ        1 R6 K17     ; if R6 == 4.000000 then PC := 1702
1679 [-]: JMP       1702         ; PC := 1702
1680 [-]: GETGLOBAL R91 K1       ; R91 := 0xae91e43b
1681 [-]: SELF      R91 R91 K42  ; R92 := R91; R91 := R91[0x67bc869f]
1682 [-]: LOADK     R93 K169     ; R93 := "ImpactMessage.Bg"
1683 [-]: CONST     R94 12       ; R94 := 12.000000
1684 [-]: GETGLOBAL R95 K1       ; R95 := 0xae91e43b
1685 [-]: SELF      R95 R95 K40  ; R96 := R95; R95 := R95[0x91a24e4b]
1686 [-]: LOADK     R97 K39      ; R97 := "ImpactMessage.Label"
1687 [-]: CONST     R98 33       ; R98 := 33.000000
1688 [-]: CALL      R95 4 2      ; R95 := R95(R96,R97,R98)
1689 [-]: ADD       R95 R95 K85  ; R95 := R95 + 20.000000
1690 [-]: CALL      R91 5 1      ; R91(R92,R93,R94,R95)
1691 [-]: GETGLOBAL R91 K1       ; R91 := 0xae91e43b
1692 [-]: SELF      R91 R91 K42  ; R92 := R91; R91 := R91[0x67bc869f]
1693 [-]: LOADK     R93 K169     ; R93 := "ImpactMessage.Bg"
1694 [-]: CONST     R94 13       ; R94 := 13.000000
1695 [-]: GETGLOBAL R95 K1       ; R95 := 0xae91e43b
1696 [-]: SELF      R95 R95 K40  ; R96 := R95; R95 := R95[0x91a24e4b]
1697 [-]: LOADK     R97 K39      ; R97 := "ImpactMessage.Label"
1698 [-]: CONST     R98 34       ; R98 := 34.000000
1699 [-]: CALL      R95 4 2      ; R95 := R95(R96,R97,R98)
1700 [-]: ADD       R95 R95 K170 ; R95 := R95 + 8.000000
1701 [-]: CALL      R91 5 1      ; R91(R92,R93,R94,R95)
1702 [-]: GETGLOBAL R91 K0       ; R91 := 0x7b998233
1703 [-]: GETUPVAL  R92 U6       ; R92 := U6
1704 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1705 [-]: TEST      R91 1        ; if R91 then PC := 1713
1706 [-]: JMP       1713         ; PC := 1713
1707 [-]: GETUPVAL  R91 U7       ; R91 := U7
1708 [-]: SELF      R91 R91 K44  ; R92 := R91; R91 := R91[0x775c858b]
1709 [-]: GETUPVAL  R93 U6       ; R93 := U6
1710 [-]: CALL      R91 3 1      ; R91(R92,R93)
1711 [-]: LOADNIL   R91 R91      ; R91 := nil
1712 [-]: SETUPVAL  R91 U6       ; U82 := R6
1713 [-]: GETGLOBAL R91 K132     ; R91 := 0x25312c9b
1714 [-]: GETGLOBAL R92 K1       ; R92 := 0xae91e43b
1715 [-]: LOADK     R93 K50      ; R93 := "ImpactMessage"
1716 [-]: CONST     R94 0        ; R94 := 0.000000
1717 [-]: NEWTABLE  R95 3 0      ; R95 := {}
1718 [-]: CONST     R96 10       ; R96 := 10.000000
1719 [-]: CONST     R97 5        ; R97 := 5.000000
1720 [-]: CONST     R98 6        ; R98 := 6.000000
1721 [-]: SETLIST   R95 3 1      ; R95[(1-1)*FPF+i] := R(95+i), 1 <= i <= 3
1722 [-]: NEWTABLE  R96 3 0      ; R96 := {}
1723 [-]: CONST     R97 100      ; R97 := 100.000000
1724 [-]: MOVE      R98 R7       ; R98 := R7
1725 [-]: MOVE      R99 R7       ; R99 := R7
1726 [-]: SETLIST   R96 3 1      ; R96[(1-1)*FPF+i] := R(96+i), 1 <= i <= 3
1727 [-]: LOADK     R97 K171     ; R97 := 0.150000
1728 [-]: CONST     R98 0        ; R98 := 0.000000
1729 [-]: CLOSURE   R99 2        ; R99 := closure(Function #119.3)
1730 [-]: MOVE      R0 R1        ; R0 := R1
1731 [-]: GETUPVAL  R0 U6        ; R0 := U6
1732 [-]: GETUPVAL  R0 U7        ; R0 := U7
1733 [-]: GETUPVAL  R0 U8        ; R0 := U8
1734 [-]: CALL      R91 9 1      ; R91(R92,R93,R94,R95,R96,R97,R98,R99)
1735 [-]: RETURN    R0 1         ; return 


; Function #119.1:
;
; Name:            
; Defined at line: 4305
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91e13703]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETGLOBAL R5 K2        ; R5 := 0x9bafffe3
  6 [-]: GETUPVAL  R6 U2        ; R6 := U2
  7 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[1.000000]
  8 [-]: GETUPVAL  R7 U3        ; R7 := U3
  9 [-]: GETTABLE  R7 R7 K3     ; R7 := R7[1.000000]
 10 [-]: MOVE      R8 R0        ; R8 := R0
 11 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 12 [-]: GETGLOBAL R6 K2        ; R6 := 0x9bafffe3
 13 [-]: GETUPVAL  R7 U2        ; R7 := U2
 14 [-]: GETTABLE  R7 R7 K4     ; R7 := R7[2.000000]
 15 [-]: GETUPVAL  R8 U3        ; R8 := U3
 16 [-]: GETTABLE  R8 R8 K4     ; R8 := R8[2.000000]
 17 [-]: MOVE      R9 R0        ; R9 := R0
 18 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 19 [-]: GETGLOBAL R7 K2        ; R7 := 0x9bafffe3
 20 [-]: GETUPVAL  R8 U2        ; R8 := U2
 21 [-]: GETTABLE  R8 R8 K5     ; R8 := R8[3.000000]
 22 [-]: GETUPVAL  R9 U3        ; R9 := U3
 23 [-]: GETTABLE  R9 R9 K5     ; R9 := R9[3.000000]
 24 [-]: MOVE      R10 R0       ; R10 := R0
 25 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 26 [-]: GETGLOBAL R8 K2        ; R8 := 0x9bafffe3
 27 [-]: GETUPVAL  R9 U2        ; R9 := U2
 28 [-]: GETTABLE  R9 R9 K6     ; R9 := R9[4.000000]
 29 [-]: GETUPVAL  R10 U3       ; R10 := U3
 30 [-]: GETTABLE  R10 R10 K6   ; R10 := R10[4.000000]
 31 [-]: MOVE      R11 R0       ; R11 := R0
 32 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 33 [-]: CALL      R1 0 1       ; R1(R2,...)
 34 [-]: RETURN    R0 1         ; return 


; Function #119.2:
;
; Name:            
; Defined at line: 4361
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x67bc869f]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETGLOBAL R5 K2        ; R5 := 0x9bafffe3
  6 [-]: GETUPVAL  R6 U2        ; R6 := U2
  7 [-]: GETUPVAL  R7 U3        ; R7 := U3
  8 [-]: MOVE      R8 R0        ; R8 := R0
  9 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #119.3:
;
; Name:            
; Defined at line: 4483
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LE        0 K0 R0      ; if 0.000000 > R0 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETUPVAL  R0 U2        ; R0 := U2
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbd2e96ea]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SUB       R2 R2 K2     ; R2 := R2 - 0.400000
  8 [-]: GETUPVAL  R3 U3        ; R3 := U3
  9 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 10 [-]: SETUPVAL  R0 U1        ; U82 := R1
 11 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 4490
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x03f57322
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: MOVE      R1 R4        ; R1 := R4
  5 [-]: EQ        1 R2 K1      ; if R2 == "true" then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADKB    R2 0 1       ; R2 := false; PC := 8
  8 [-]: LOADKB    R2 1 0       ; R2 := true
  9 [-]: EQ        1 R3 K1      ; if R3 == "true" then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 12
 12 [-]: LOADKB    R3 1 0       ; R3 := true
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: MOVE      R7 R2        ; R7 := R2
 17 [-]: LOADNIL   R8 R8        ; R8 := nil
 18 [-]: MOVE      R9 R3        ; R9 := R3
 19 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 20 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 4498
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: CONST     R0 0         ; R0 := 0.000000
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x4bc5dc8b]
  6 [-]: LOADK     R3 K2        ; R3 := "ImpactMessage"
  7 [-]: LOADNIL   R4 R4        ; R4 := nil
  8 [-]: GETUPVAL  R5 U1        ; R5 := U1
  9 [-]: ADD       R5 R5 R0     ; R5 := R5 + R0
 10 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xfaa69527]
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 14 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x6b837788]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 17 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0xaf9fda9f]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: LOADKB    R5 1 0       ; R5 := true
 20 [-]: GETUPVAL  R6 U2        ; R6 := U2
 21 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["HudScalePadding"]
 22 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 23 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 4507
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "ImpactMessage"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 0         ; R4 := 0.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xd5181643]
  9 [-]: LOADK     R2 K2        ; R2 := "ImpactMessage"
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 11 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIMaterial_Plain"]
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xf2deaf69]
 15 [-]: GETGLOBAL R2 K7        ; R2 := gLotusSpeedballGameRulesType
 16 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 17 [-]: TEST      R0 0         ; if not R0 then PC := 46
 18 [-]: JMP       46           ; PC := 46
 19 [-]: CONST     R0 180       ; R0 := 180.000000
 20 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x67bc869f]
 22 [-]: LOADK     R3 K2        ; R3 := "ImpactMessage"
 23 [-]: CONST     R4 1         ; R4 := 1.000000
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 26 [-]: GETGLOBAL R1 K8        ; R1 := 0x7b998233
 27 [-]: GETUPVAL  R2 U1        ; R2 := U1
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: CONST     R1 1         ; R1 := 1.000000
 32 [-]: GETUPVAL  R2 U1        ; R2 := U1
 33 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["list"]
 34 [-]: LEN       R2 R2        ; R2 := # R2
 35 [-]: CONST     R3 1         ; R3 := 1.000000
 36 [-]: FORPREP   R1 45        ; R1 -= R3; PC := 45
 37 [-]: GETUPVAL  R5 U1        ; R5 := U1
 38 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["list"]
 39 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 40 [-]: GETTABLE  R6 R5 K10    ; R6 := R5["clip"]
 41 [-]: EQ        0 R6 K2      ; if R6 ~= "ImpactMessage" then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: SETTABLE  R5 K11 R0    ; R5["originalY"] := R0
 44 [-]: JMP       46           ; PC := 46
 45 [-]: FORLOOP   R1 37        ; R1 += R3; if R1 <= R2 then begin PC := 37; R4 := R1 end
 46 [-]: GETGLOBAL R6 K8        ; R6 := 0x7b998233
 47 [-]: GETGLOBAL R7 K12       ; R7 := _T
 48 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["ImpactMessageTexturePacks"]
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: TEST      R6 0         ; if not R6 then PC := 55
 51 [-]: JMP       55           ; PC := 55
 52 [-]: GETGLOBAL R6 K12       ; R6 := _T
 53 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 54 [-]: SETTABLE  R6 K13 R7    ; R6["ImpactMessageTexturePacks"] := R7
 55 [-]: GETGLOBAL R6 K14       ; R6 := 0xc8802016
 56 [-]: GETGLOBAL R7 K15       ; R7 := 0x567818a9
 57 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 58 [-]: JMP       102          ; PC := 102
 59 [-]: GETGLOBAL R11 K12      ; R11 := _T
 60 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["ImpactMessageTexturePacks"]
 61 [-]: LOADK     R12 K16      ; R12 := "PowerRift"
 62 [-]: MOVE      R13 R9       ; R13 := R9
 63 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 64 [-]: NEWTABLE  R13 0 13     ; R13 := {}
 65 [-]: SETTABLE  R13 K17 R10  ; R13["IconWhite"] := R10
 66 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 67 [-]: SETTABLE  R14 K19 K20  ; R14["Width"] := 110.000000
 68 [-]: SETTABLE  R14 K21 K20  ; R14["Height"] := 110.000000
 69 [-]: SETTABLE  R13 K18 R14  ; R13["IconWhiteAdjust"] := R14
 70 [-]: GETGLOBAL R14 K23      ; R14 := 0x7d082bc8
 71 [-]: GETTABLE  R14 R14 K24  ; R14 := R14[2.000000]
 72 [-]: SETTABLE  R13 K22 R14  ; R13["IconBgLeft"] := R14
 73 [-]: GETGLOBAL R14 K26      ; R14 := 0x1343588e
 74 [-]: GETTABLE  R14 R14 K27  ; R14 := R14[1.000000]
 75 [-]: SETTABLE  R13 K25 R14  ; R13["IconBgLeftMaterial"] := R14
 76 [-]: NEWTABLE  R14 0 3      ; R14 := {}
 77 [-]: SETTABLE  R14 K19 K29  ; R14["Width"] := 256.000000
 78 [-]: SETTABLE  R14 K21 K30  ; R14["Height"] := 128.000000
 79 [-]: SETTABLE  R14 K31 K32  ; R14["X"] := -162.000000
 80 [-]: SETTABLE  R13 K28 R14  ; R13["IconBgLeftAdjust"] := R14
 81 [-]: GETGLOBAL R14 K23      ; R14 := 0x7d082bc8
 82 [-]: GETTABLE  R14 R14 K24  ; R14 := R14[2.000000]
 83 [-]: SETTABLE  R13 K33 R14  ; R13["IconBgRight"] := R14
 84 [-]: GETGLOBAL R14 K26      ; R14 := 0x1343588e
 85 [-]: GETTABLE  R14 R14 K27  ; R14 := R14[1.000000]
 86 [-]: SETTABLE  R13 K34 R14  ; R13["IconBgRightMaterial"] := R14
 87 [-]: NEWTABLE  R14 0 3      ; R14 := {}
 88 [-]: SETTABLE  R14 K19 K29  ; R14["Width"] := 256.000000
 89 [-]: SETTABLE  R14 K21 K30  ; R14["Height"] := 128.000000
 90 [-]: SETTABLE  R14 K31 K36  ; R14["X"] := 162.000000
 91 [-]: SETTABLE  R13 K35 R14  ; R13["IconBgRightAdjust"] := R14
 92 [-]: GETGLOBAL R14 K23      ; R14 := 0x7d082bc8
 93 [-]: GETTABLE  R14 R14 K27  ; R14 := R14[1.000000]
 94 [-]: SETTABLE  R13 K37 R14  ; R13["LineDeco"] := R14
 95 [-]: NEWTABLE  R14 0 1      ; R14 := {}
 96 [-]: SETTABLE  R14 K39 K40  ; R14["Y"] := 93.000000
 97 [-]: SETTABLE  R13 K38 R14  ; R13["LineDecoAdjust"] := R14
 98 [-]: SETTABLE  R13 K41 K42  ; R13["ShowTextShadow"] := true
 99 [-]: SETTABLE  R13 K43 K44  ; R13["Color"] := 16646000.000000
100 [-]: SETTABLE  R13 K45 K42  ; R13["IsColorHex"] := true
101 [-]: SETTABLE  R11 R12 R13  ; R11[R12] := R13
102 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 59; R8 := R9 end
103 [-]: JMP       59           ; PC := 59
104 [-]: GETGLOBAL R11 K12      ; R11 := _T
105 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["ImpactMessageTexturePacks"]
106 [-]: NEWTABLE  R12 0 17     ; R12 := {}
107 [-]: GETGLOBAL R13 K48      ; R13 := 0xec586c04
108 [-]: GETTABLE  R13 R13 K27  ; R13 := R13[1.000000]
109 [-]: SETTABLE  R12 K47 R13  ; R12["IconTinted"] := R13
110 [-]: NEWTABLE  R13 0 4      ; R13 := {}
111 [-]: SETTABLE  R13 K19 K29  ; R13["Width"] := 256.000000
112 [-]: SETTABLE  R13 K21 K30  ; R13["Height"] := 128.000000
113 [-]: SETTABLE  R13 K39 K50  ; R13["Y"] := -7.000000
114 [-]: SETTABLE  R13 K43 K51  ; R13["Color"] := 16114605.000000
115 [-]: SETTABLE  R12 K49 R13  ; R12["IconTintedAdjust"] := R13
116 [-]: GETGLOBAL R13 K48      ; R13 := 0xec586c04
117 [-]: GETTABLE  R13 R13 K24  ; R13 := R13[2.000000]
118 [-]: SETTABLE  R12 K52 R13  ; R12["StaticIconBg"] := R13
119 [-]: NEWTABLE  R13 0 5      ; R13 := {}
120 [-]: SETTABLE  R13 K19 K54  ; R13["Width"] := 563.000000
121 [-]: SETTABLE  R13 K21 K55  ; R13["Height"] := 264.000000
122 [-]: SETTABLE  R13 K39 K56  ; R13["Y"] := 53.000000
123 [-]: SETTABLE  R13 K43 K57  ; R13["Color"] := 1315613.000000
124 [-]: SETTABLE  R13 K58 K59  ; R13["Alpha"] := 85.000000
125 [-]: SETTABLE  R12 K53 R13  ; R12["StaticIconBgAdjust"] := R13
126 [-]: GETGLOBAL R13 K48      ; R13 := 0xec586c04
127 [-]: GETTABLE  R13 R13 K60  ; R13 := R13[3.000000]
128 [-]: SETTABLE  R12 K37 R13  ; R12["LineDeco"] := R13
129 [-]: NEWTABLE  R13 0 2      ; R13 := {}
130 [-]: SETTABLE  R13 K39 K40  ; R13["Y"] := 93.000000
131 [-]: SETTABLE  R13 K43 K61  ; R13["Color"] := 12495206.000000
132 [-]: SETTABLE  R12 K38 R13  ; R12["LineDecoAdjust"] := R13
133 [-]: SETTABLE  R12 K62 K24  ; R12["LetterSpacing"] := 2.000000
134 [-]: GETGLOBAL R13 K64      ; R13 := 0x7f5022cf
135 [-]: GETTABLE  R13 R13 K65  ; R13 := R13[0x3f3e4d12]
136 [-]: GETGLOBAL R14 K0       ; R14 := 0xae91e43b
137 [-]: SELF      R14 R14 K66  ; R15 := R14; R14 := R14[0x42b04007]
138 [-]: LOADK     R16 K67      ; R16 := "/Lotus/Language/SystemMessages/RelicBuffHeader"
139 [-]: LOADKB    R17 0 0      ; R17 := false
140 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
141 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
142 [-]: SETTABLE  R12 K63 R13  ; R12["DecoLabel"] := R13
143 [-]: SETTABLE  R12 K68 K69  ; R12["FontName"] := "Roboto Condensed"
144 [-]: SETTABLE  R12 K70 K71  ; R12["FontSize"] := 19.000000
145 [-]: SETTABLE  R12 K72 K73  ; R12["LabelVAlign"] := "top"
146 [-]: SETTABLE  R12 K74 K75  ; R12["LabelYOffset"] := 45.000000
147 [-]: SETTABLE  R12 K76 K77  ; R12["DecoLabelY"] := 50.000000
148 [-]: SETTABLE  R12 K43 K61  ; R12["Color"] := 12495206.000000
149 [-]: SETTABLE  R12 K78 K61  ; R12["LineColorOverride"] := 12495206.000000
150 [-]: SETTABLE  R12 K45 K42  ; R12["IsColorHex"] := true
151 [-]: SETTABLE  R12 K79 K42  ; R12["HideUnderlay"] := true
152 [-]: SETTABLE  R11 K46 R12  ; R11["RelicBuff"] := R12
153 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 4573
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TEST      R0 0         ; if not R0 then PC := 60
  2 [-]: JMP       60           ; PC := 60
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x3f3e4d12]
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  6 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x42b04007]
  7 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Focus/FocusWardResidualSecondChanceName"
  8 [-]: LOADKB    R6 0 0       ; R6 := false
  9 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 12 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x5f56eeab]
 13 [-]: LOADK     R5 K6        ; R5 := "LastGasp.Label"
 14 [-]: CONST     R6 29        ; R6 := 29.000000
 15 [-]: MOVE      R7 R2        ; R7 := R2
 16 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 17 [-]: LOADK     R3 K7        ; R3 := "<ACTIVATE_ABILITY_4>"
 18 [-]: GETGLOBAL R4 K8        ; R4 := 0x34291f5c
 19 [-]: GETTABLE  R4 R4 K9     ; R4 := R4[0x1467d5f4]
 20 [-]: CALL      R4 1 2       ; R4 := R4()
 21 [-]: TEST      R4 0         ; if not R4 then PC := 36
 22 [-]: JMP       36           ; PC := 36
 23 [-]: GETGLOBAL R4 K10       ; R4 := 0x9ba7909f
 24 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xa50d1a6a]
 25 [-]: LOADK     R6 K12       ; R6 := "ACTIVATE_ABILITY_MENU_4"
 26 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 27 [-]: EQ        1 R4 K13     ; if R4 == "" then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETGLOBAL R4 K10       ; R4 := 0x9ba7909f
 30 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xa50d1a6a]
 31 [-]: LOADK     R6 K14       ; R6 := "POWER_MENU"
 32 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 33 [-]: EQ        1 R4 K13     ; if R4 == "" then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADK     R3 K15       ; R3 := "<POWER_MENU> + <ACTIVATE_ABILITY_MENU_4>"
 36 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 37 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x20b98db3]
 38 [-]: LOADK     R6 K17       ; R6 := "LastGasp.Callout.text"
 39 [-]: MOVE      R7 R3        ; R7 := R3
 40 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 41 [-]: GETGLOBAL R4 K18       ; R4 := 0x25312c9b
 42 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 43 [-]: LOADK     R6 K19       ; R6 := "LastGasp"
 44 [-]: CONST     R7 0         ; R7 := 0.000000
 45 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 46 [-]: CONST     R9 10        ; R9 := 10.000000
 47 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 48 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 49 [-]: CONST     R10 100      ; R10 := 100.000000
 50 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 51 [-]: LOADK     R10 K21      ; R10 := 0.150000
 52 [-]: CONST     R11 0        ; R11 := 0.000000
 53 [-]: CLOSURE   R12 0        ; R12 := closure(Function #123.1)
 54 [-]: MOVE      R0 R1        ; R0 := R1
 55 [-]: GETUPVAL  R0 U0        ; R0 := U0
 56 [-]: GETUPVAL  R0 U1        ; R0 := U1
 57 [-]: GETUPVAL  R0 U2        ; R0 := U2
 58 [-]: CALL      R4 9 1       ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
 59 [-]: JMP       83           ; PC := 83
 60 [-]: GETGLOBAL R4 K22       ; R4 := 0x7b998233
 61 [-]: GETUPVAL  R5 U0        ; R5 := U0
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: TEST      R4 1         ; if R4 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETUPVAL  R4 U1        ; R4 := U1
 66 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4[0x775c858b]
 67 [-]: GETUPVAL  R6 U0        ; R6 := U0
 68 [-]: CALL      R4 3 1       ; R4(R5,R6)
 69 [-]: LOADNIL   R4 R4        ; R4 := nil
 70 [-]: SETUPVAL  R4 U0        ; U82 := R0
 71 [-]: GETGLOBAL R4 K18       ; R4 := 0x25312c9b
 72 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 73 [-]: LOADK     R6 K19       ; R6 := "LastGasp"
 74 [-]: CONST     R7 0         ; R7 := 0.000000
 75 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 76 [-]: CONST     R9 10        ; R9 := 10.000000
 77 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 78 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 79 [-]: CONST     R10 0        ; R10 := 0.000000
 80 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 81 [-]: LOADK     R10 K21      ; R10 := 0.150000
 82 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 83 [-]: RETURN    R0 1         ; return 


; Function #123.1:
;
; Name:            
; Defined at line: 4583
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LE        0 K0 R0      ; if 0.000000 > R0 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETUPVAL  R0 U2        ; R0 := U2
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbd2e96ea]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: CLOSURE   R3 0         ; R3 := closure(Function #123.1.1)
  8 [-]: GETUPVAL  R0 U3        ; R0 := U3
  9 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 10 [-]: SETUPVAL  R0 U1        ; U82 := R1
 11 [-]: RETURN    R0 1         ; return 


; Function #123.1.1:
;
; Name:            
; Defined at line: 4585
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADKB    R1 0 0       ; R1 := false
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 4597
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x1e9695e9]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 4607
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x40e9c32b]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SETUPVAL  R1 U0        ; U82 := R0
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: TEST      R1 0         ; if not R1 then PC := 117
 16 [-]: JMP       117          ; PC := 117
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 48
 19 [-]: JMP       48           ; PC := 48
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x2cba1ca6]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 0         ; if not R1 then PC := 43
 24 [-]: JMP       43           ; PC := 43
 25 [-]: GETUPVAL  R1 U2        ; R1 := U2
 26 [-]: SETTABLE  R1 K6 K7     ; R1["mCanControlPlayerPanel"] := true
 27 [-]: GETGLOBAL R1 K8        ; R1 := _T
 28 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["HidePlayerPanel"]
 29 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETGLOBAL R1 K8        ; R1 := _T
 32 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["HidePlayerPanel"]
 33 [-]: EQ        0 R1 K10     ; if R1 ~= 0.000000 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETUPVAL  R1 U1        ; R1 := U1
 36 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x587aa683]
 37 [-]: CALL      R1 2 1       ; R1(R2)
 38 [-]: JMP       48           ; PC := 48
 39 [-]: GETUPVAL  R1 U1        ; R1 := U1
 40 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xe0f7ce9e]
 41 [-]: CALL      R1 2 1       ; R1(R2)
 42 [-]: JMP       48           ; PC := 48
 43 [-]: GETUPVAL  R1 U2        ; R1 := U2
 44 [-]: SETTABLE  R1 K6 K13    ; R1["mCanControlPlayerPanel"] := false
 45 [-]: GETUPVAL  R1 U1        ; R1 := U1
 46 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xe0f7ce9e]
 47 [-]: CALL      R1 2 1       ; R1(R2)
 48 [-]: GETUPVAL  R1 U3        ; R1 := U3
 49 [-]: GETUPVAL  R2 U0        ; R2 := U0
 50 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 51 [-]: CONST     R4 17        ; R4 := 17.000000
 52 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 53 [-]: SETTABLE  R1 K14 R2    ; R1["Text"] := R2
 54 [-]: GETUPVAL  R1 U3        ; R1 := U3
 55 [-]: GETUPVAL  R2 U0        ; R2 := U0
 56 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 57 [-]: CONST     R4 33        ; R4 := 33.000000
 58 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 59 [-]: SETTABLE  R1 K17 R2    ; R1[0x6c97a788] := R2
 60 [-]: GETUPVAL  R1 U3        ; R1 := U3
 61 [-]: GETUPVAL  R2 U0        ; R2 := U0
 62 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 63 [-]: CONST     R4 3         ; R4 := 3.000000
 64 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 65 [-]: SETTABLE  R1 K18 R2    ; R1["Buff"] := R2
 66 [-]: GETUPVAL  R1 U3        ; R1 := U3
 67 [-]: GETUPVAL  R2 U0        ; R2 := U0
 68 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 69 [-]: CONST     R4 8         ; R4 := 8.000000
 70 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 71 [-]: SETTABLE  R1 K19 R2    ; R1["Debuff"] := R2
 72 [-]: GETUPVAL  R1 U3        ; R1 := U3
 73 [-]: GETUPVAL  R2 U0        ; R2 := U0
 74 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 75 [-]: CONST     R4 47        ; R4 := 47.000000
 76 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 77 [-]: SETTABLE  R1 K20 R2    ; R1[0xae91e43b] := R2
 78 [-]: GETUPVAL  R1 U3        ; R1 := U3
 79 [-]: GETUPVAL  R2 U0        ; R2 := U0
 80 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 81 [-]: CONST     R4 52        ; R4 := 52.000000
 82 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 83 [-]: SETTABLE  R1 K21 R2    ; R1[0x302369b7] := R2
 84 [-]: GETUPVAL  R1 U3        ; R1 := U3
 85 [-]: GETUPVAL  R2 U0        ; R2 := U0
 86 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 87 [-]: CONST     R4 46        ; R4 := 46.000000
 88 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 89 [-]: SETTABLE  R1 K22 R2    ; R1["SelectedAbility"] := R2
 90 [-]: GETUPVAL  R1 U3        ; R1 := U3
 91 [-]: GETUPVAL  R2 U0        ; R2 := U0
 92 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 93 [-]: CONST     R4 19        ; R4 := 19.000000
 94 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 95 [-]: SETTABLE  R1 K23 R2    ; R1[0xf2df3db3] := R2
 96 [-]: GETUPVAL  R1 U3        ; R1 := U3
 97 [-]: GETUPVAL  R2 U0        ; R2 := U0
 98 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
 99 [-]: CONST     R4 48        ; R4 := 48.000000
100 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
101 [-]: SETTABLE  R1 K24 R2    ; R1[0x5b0290d2] := R2
102 [-]: GETUPVAL  R1 U3        ; R1 := U3
103 [-]: GETUPVAL  R2 U0        ; R2 := U0
104 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
105 [-]: CONST     R4 44        ; R4 := 44.000000
106 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
107 [-]: SETTABLE  R1 K25 R2    ; R1[0xaade900e] := R2
108 [-]: GETUPVAL  R1 U3        ; R1 := U3
109 [-]: GETUPVAL  R2 U0        ; R2 := U0
110 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xef9a3ee6]
111 [-]: CONST     R4 37        ; R4 := 37.000000
112 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
113 [-]: SETTABLE  R1 K26 R2    ; R1["ObjectiveProgress"] := R2
114 [-]: GETUPVAL  R1 U4        ; R1 := U4
115 [-]: GETTABLE  R1 R1 K27    ; R1 := R1[0x4c398318]
116 [-]: CALL      R1 1 1       ; R1()
117 [-]: GETUPVAL  R1 U5        ; R1 := U5
118 [-]: GETUPVAL  R2 U0        ; R2 := U0
119 [-]: SELF      R2 R2 K29    ; R3 := R2; R2 := R2[0x21b2271b]
120 [-]: CALL      R2 2 2       ; R2 := R2(R3)
121 [-]: SETTABLE  R1 K28 R2    ; R1[0x7b998233] := R2
122 [-]: GETUPVAL  R1 U0        ; R1 := U0
123 [-]: SELF      R1 R1 K30    ; R2 := R1; R1 := R1[0x963e3c9f]
124 [-]: CALL      R1 2 2       ; R1 := R1(R2)
125 [-]: SETUPVAL  R1 U6        ; U82 := R6
126 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
127 [-]: GETUPVAL  R2 U7        ; R2 := U7
128 [-]: CALL      R1 2 2       ; R1 := R1(R2)
129 [-]: TEST      R1 1         ; if R1 then PC := 135
130 [-]: JMP       135          ; PC := 135
131 [-]: GETUPVAL  R1 U7        ; R1 := U7
132 [-]: SELF      R1 R1 K31    ; R2 := R1; R1 := R1[0x1e9695e9]
133 [-]: GETUPVAL  R3 U8        ; R3 := U8
134 [-]: CALL      R1 3 1       ; R1(R2,R3)
135 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
136 [-]: GETUPVAL  R2 U9        ; R2 := U9
137 [-]: CALL      R1 2 2       ; R1 := R1(R2)
138 [-]: TEST      R1 1         ; if R1 then PC := 144
139 [-]: JMP       144          ; PC := 144
140 [-]: GETUPVAL  R1 U9        ; R1 := U9
141 [-]: SELF      R1 R1 K31    ; R2 := R1; R1 := R1[0x1e9695e9]
142 [-]: GETUPVAL  R3 U8        ; R3 := U8
143 [-]: CALL      R1 3 1       ; R1(R2,R3)
144 [-]: GETUPVAL  R1 U10       ; R1 := U10
145 [-]: CALL      R1 1 1       ; R1()
146 [-]: GETUPVAL  R1 U11       ; R1 := U11
147 [-]: CALL      R1 1 1       ; R1()
148 [-]: GETUPVAL  R1 U12       ; R1 := U12
149 [-]: CALL      R1 1 1       ; R1()
150 [-]: GETGLOBAL R1 K32       ; R1 := 0xae91e43b
151 [-]: SELF      R1 R1 K33    ; R2 := R1; R1 := R1[0x20b98db3]
152 [-]: LOADK     R3 K34       ; R3 := "AbilityPanel.FocusButton.text"
153 [-]: LOADK     R4 K35       ; R4 := "<ACTIVATE_ABILITY_MENU_4>"
154 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
155 [-]: GETGLOBAL R1 K32       ; R1 := 0xae91e43b
156 [-]: SELF      R1 R1 K33    ; R2 := R1; R1 := R1[0x20b98db3]
157 [-]: LOADK     R3 K36       ; R3 := "RevivePanel.Callout.text"
158 [-]: LOADK     R4 K37       ; R4 := "/Lotus/Language/SystemMessages/RevivePrompt"
159 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
160 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 4668
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: LOADK     R1 K0        ; R1 := "AbilityPanel"
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xe72d2edb
  3 [-]: EQ        0 R2 K3      ; if R2 ~= 1.000000 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADK     R1 K4        ; R1 := "GrineerAbilityPanel"
  6 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x302369b7]
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: LOADK     R5 K7        ; R5 := "ControllerCastingImage"
 10 [-]: CONST     R6 11        ; R6 := 11.000000
 11 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 12 [-]: TEST      R2 1         ; if R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADKB    R0 0 0       ; R0 := false
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xf2df3db3]
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x5b0290d2]
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: CONST     R5 11        ; R5 := 11.000000
 23 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 50
 25 [-]: JMP       50           ; PC := 50
 26 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 27 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xaade900e]
 28 [-]: LOADK     R4 K11       ; R4 := "WeaponFrame"
 29 [-]: CONST     R5 11        ; R5 := 11.000000
 30 [-]: TEST      R0 1         ; if R0 then PC := 47
 31 [-]: JMP       47           ; PC := 47
 32 [-]: GETUPVAL  R6 U1        ; R6 := U1
 33 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["IsOperator"]
 34 [-]: TEST      R6 0         ; if not R6 then PC := 48
 35 [-]: JMP       48           ; PC := 48
 36 [-]: GETGLOBAL R6 K13       ; R6 := 0x7b998233
 37 [-]: GETUPVAL  R7 U2        ; R7 := U2
 38 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["ptr"]
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: TEST      R6 1         ; if R6 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETUPVAL  R6 U2        ; R6 := U2
 43 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["ptr"]
 44 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x81f3a598]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: JMP       49           ; PC := 49
 47 [-]: LOADKB    R6 0 1       ; R6 := false; PC := 48
 48 [-]: LOADKB    R6 1 0       ; R6 := true
 49 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 50 [-]: GETUPVAL  R2 U3        ; R2 := U3
 51 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0x06d055f9]
 52 [-]: GETUPVAL  R3 U1        ; R3 := U1
 53 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["MissionType"]
 54 [-]: EQ        1 R3 K18     ; if R3 == 31.000000 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 57
 57 [-]: LOADKB    R3 1 0       ; R3 := true
 58 [-]: CONST     R4 100       ; R4 := 100.000000
 59 [-]: CONST     R5 0         ; R5 := 0.000000
 60 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 61 [-]: TEST      R2 0         ; if not R2 then PC := 74
 62 [-]: JMP       74           ; PC := 74
 63 [-]: TEST      R0 0         ; if not R0 then PC := 74
 64 [-]: JMP       74           ; PC := 74
 65 [-]: GETUPVAL  R3 U4        ; R3 := U4
 66 [-]: CALL      R3 1 2       ; R3 := R3()
 67 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 68 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4[0xe261aa96]
 69 [-]: MOVE      R6 R1        ; R6 := R1
 70 [-]: LOADK     R7 K20       ; R7 := "TacticalCallout"
 71 [-]: CONST     R8 29        ; R8 := 29.000000
 72 [-]: MOVE      R9 R3        ; R9 := R3
 73 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 74 [-]: GETGLOBAL R4 K21       ; R4 := 0x25312c9b
 75 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 76 [-]: MOVE      R6 R1        ; R6 := R1
 77 [-]: LOADK     R7 K22       ; R7 := ".ControllerCastingImage"
 78 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 79 [-]: CONST     R7 8         ; R7 := 8.000000
 80 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 81 [-]: CONST     R9 10        ; R9 := 10.000000
 82 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 83 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 84 [-]: GETUPVAL  R10 U3       ; R10 := U3
 85 [-]: GETTABLE  R10 R10 K16  ; R10 := R10[0x06d055f9]
 86 [-]: MOVE      R11 R0       ; R11 := R0
 87 [-]: CONST     R12 100      ; R12 := 100.000000
 88 [-]: CONST     R13 0        ; R13 := 0.000000
 89 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 90 [-]: SETLIST   R9 0 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 0
 91 [-]: LOADK     R10 K24      ; R10 := 0.150000
 92 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 93 [-]: GETGLOBAL R4 K21       ; R4 := 0x25312c9b
 94 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 95 [-]: MOVE      R6 R1        ; R6 := R1
 96 [-]: LOADK     R7 K25       ; R7 := ".ControllerCastingButtons"
 97 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 98 [-]: CONST     R7 8         ; R7 := 8.000000
 99 [-]: NEWTABLE  R8 1 0       ; R8 := {}
100 [-]: CONST     R9 10        ; R9 := 10.000000
101 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
102 [-]: NEWTABLE  R9 0 0       ; R9 := {}
103 [-]: GETUPVAL  R10 U3       ; R10 := U3
104 [-]: GETTABLE  R10 R10 K16  ; R10 := R10[0x06d055f9]
105 [-]: MOVE      R11 R0       ; R11 := R0
106 [-]: CONST     R12 100      ; R12 := 100.000000
107 [-]: CONST     R13 0        ; R13 := 0.000000
108 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
109 [-]: SETLIST   R9 0 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 0
110 [-]: LOADK     R10 K24      ; R10 := 0.150000
111 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
112 [-]: GETGLOBAL R4 K21       ; R4 := 0x25312c9b
113 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
114 [-]: MOVE      R6 R1        ; R6 := R1
115 [-]: LOADK     R7 K26       ; R7 := ".FocusButton"
116 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
117 [-]: CONST     R7 8         ; R7 := 8.000000
118 [-]: NEWTABLE  R8 1 0       ; R8 := {}
119 [-]: CONST     R9 10        ; R9 := 10.000000
120 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
121 [-]: NEWTABLE  R9 0 0       ; R9 := {}
122 [-]: GETUPVAL  R10 U3       ; R10 := U3
123 [-]: GETTABLE  R10 R10 K16  ; R10 := R10[0x06d055f9]
124 [-]: MOVE      R11 R0       ; R11 := R0
125 [-]: CONST     R12 100      ; R12 := 100.000000
126 [-]: CONST     R13 0        ; R13 := 0.000000
127 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
128 [-]: SETLIST   R9 0 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 0
129 [-]: LOADK     R10 K24      ; R10 := 0.150000
130 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
131 [-]: GETGLOBAL R4 K21       ; R4 := 0x25312c9b
132 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
133 [-]: MOVE      R6 R1        ; R6 := R1
134 [-]: LOADK     R7 K27       ; R7 := ".TacticalCallout"
135 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
136 [-]: CONST     R7 8         ; R7 := 8.000000
137 [-]: NEWTABLE  R8 1 0       ; R8 := {}
138 [-]: CONST     R9 10        ; R9 := 10.000000
139 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
140 [-]: NEWTABLE  R9 0 0       ; R9 := {}
141 [-]: GETUPVAL  R10 U3       ; R10 := U3
142 [-]: GETTABLE  R10 R10 K16  ; R10 := R10[0x06d055f9]
143 [-]: MOVE      R11 R0       ; R11 := R0
144 [-]: MOVE      R12 R2       ; R12 := R2
145 [-]: CONST     R13 0        ; R13 := 0.000000
146 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
147 [-]: SETLIST   R9 0 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 0
148 [-]: LOADK     R10 K24      ; R10 := 0.150000
149 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
150 [-]: LOADNIL   R4 R4        ; R4 := nil
151 [-]: TEST      R0 0         ; if not R0 then PC := 155
152 [-]: JMP       155          ; PC := 155
153 [-]: GETUPVAL  R4 U5        ; R4 := U5
154 [-]: JMP       156          ; PC := 156
155 [-]: GETUPVAL  R4 U6        ; R4 := U6
156 [-]: GETGLOBAL R5 K28       ; R5 := 0xcfc01047
157 [-]: MOVE      R6 R4        ; R6 := R4
158 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
159 [-]: JMP       269          ; PC := 269
160 [-]: LOADNIL   R10 R10      ; R10 := nil
161 [-]: GETGLOBAL R11 K1       ; R11 := 0xe72d2edb
162 [-]: EQ        0 R11 K3     ; if R11 ~= 1.000000 then PC := 185
163 [-]: JMP       185          ; PC := 185
164 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["Ability"]
165 [-]: EQ        0 R11 K30    ; if R11 ~= "ACTIVATE_ABILITY_MENU_0" then PC := 171
166 [-]: JMP       171          ; PC := 171
167 [-]: MOVE      R11 R1       ; R11 := R1
168 [-]: LOADK     R12 K31      ; R12 := ".GrenadeComponent"
169 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
170 [-]: JMP       212          ; PC := 212
171 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["Ability"]
172 [-]: EQ        0 R11 K32    ; if R11 ~= "ACTIVATE_ABILITY_MENU_1" then PC := 178
173 [-]: JMP       178          ; PC := 178
174 [-]: MOVE      R11 R1       ; R11 := R1
175 [-]: LOADK     R12 K33      ; R12 := ".Ability1"
176 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
177 [-]: JMP       212          ; PC := 212
178 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["Ability"]
179 [-]: EQ        0 R11 K34    ; if R11 ~= "ACTIVATE_ABILITY_MENU_2" then PC := 212
180 [-]: JMP       212          ; PC := 212
181 [-]: MOVE      R11 R1       ; R11 := R1
182 [-]: LOADK     R12 K35      ; R12 := ".Ability2"
183 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
184 [-]: JMP       212          ; PC := 212
185 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["Ability"]
186 [-]: EQ        0 R11 K30    ; if R11 ~= "ACTIVATE_ABILITY_MENU_0" then PC := 192
187 [-]: JMP       192          ; PC := 192
188 [-]: MOVE      R11 R1       ; R11 := R1
189 [-]: LOADK     R12 K33      ; R12 := ".Ability1"
190 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
191 [-]: JMP       212          ; PC := 212
192 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["Ability"]
193 [-]: EQ        0 R11 K32    ; if R11 ~= "ACTIVATE_ABILITY_MENU_1" then PC := 199
194 [-]: JMP       199          ; PC := 199
195 [-]: MOVE      R11 R1       ; R11 := R1
196 [-]: LOADK     R12 K35      ; R12 := ".Ability2"
197 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
198 [-]: JMP       212          ; PC := 212
199 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["Ability"]
200 [-]: EQ        0 R11 K34    ; if R11 ~= "ACTIVATE_ABILITY_MENU_2" then PC := 206
201 [-]: JMP       206          ; PC := 206
202 [-]: MOVE      R11 R1       ; R11 := R1
203 [-]: LOADK     R12 K36      ; R12 := ".Ability3"
204 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
205 [-]: JMP       212          ; PC := 212
206 [-]: GETTABLE  R11 R9 K29   ; R11 := R9["Ability"]
207 [-]: EQ        0 R11 K37    ; if R11 ~= "ACTIVATE_ABILITY_MENU_3" then PC := 212
208 [-]: JMP       212          ; PC := 212
209 [-]: MOVE      R11 R1       ; R11 := R1
210 [-]: LOADK     R12 K38      ; R12 := ".Ability4"
211 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
212 [-]: EQ        1 R10 K39    ; if R10 == nil then PC := 269
213 [-]: JMP       269          ; PC := 269
214 [-]: GETGLOBAL R11 K21      ; R11 := 0x25312c9b
215 [-]: GETGLOBAL R12 K5       ; R12 := 0xae91e43b
216 [-]: MOVE      R13 R10      ; R13 := R10
217 [-]: CONST     R14 8        ; R14 := 8.000000
218 [-]: NEWTABLE  R15 2 0      ; R15 := {}
219 [-]: CONST     R16 0        ; R16 := 0.000000
220 [-]: CONST     R17 1        ; R17 := 1.000000
221 [-]: SETLIST   R15 2 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 2
222 [-]: NEWTABLE  R16 2 0      ; R16 := {}
223 [-]: GETTABLE  R17 R9 K40   ; R17 := R9["X"]
224 [-]: GETTABLE  R18 R9 K41   ; R18 := R9["Y"]
225 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
226 [-]: LOADK     R17 K24      ; R17 := 0.150000
227 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
228 [-]: GETGLOBAL R11 K1       ; R11 := 0xe72d2edb
229 [-]: EQ        0 R11 K3     ; if R11 ~= 1.000000 then PC := 269
230 [-]: JMP       269          ; PC := 269
231 [-]: GETGLOBAL R11 K21      ; R11 := 0x25312c9b
232 [-]: GETGLOBAL R12 K5       ; R12 := 0xae91e43b
233 [-]: MOVE      R13 R10      ; R13 := R10
234 [-]: LOADK     R14 K42      ; R14 := ".Divider"
235 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
236 [-]: CONST     R14 8        ; R14 := 8.000000
237 [-]: NEWTABLE  R15 1 0      ; R15 := {}
238 [-]: CONST     R16 10       ; R16 := 10.000000
239 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
240 [-]: NEWTABLE  R16 1 0      ; R16 := {}
241 [-]: TEST      R0 1         ; if R0 then PC := 246
242 [-]: JMP       246          ; PC := 246
243 [-]: CONST     R17 100      ; R17 := 100.000000
244 [-]: TEST      R17 1        ; if R17 then PC := 247
245 [-]: JMP       247          ; PC := 247
246 [-]: CONST     R17 0        ; R17 := 0.000000
247 [-]: SETLIST   R16 1 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 1
248 [-]: LOADK     R17 K24      ; R17 := 0.150000
249 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
250 [-]: GETGLOBAL R11 K21      ; R11 := 0x25312c9b
251 [-]: GETGLOBAL R12 K5       ; R12 := 0xae91e43b
252 [-]: MOVE      R13 R10      ; R13 := R10
253 [-]: LOADK     R14 K43      ; R14 := ".Pips"
254 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
255 [-]: CONST     R14 8        ; R14 := 8.000000
256 [-]: NEWTABLE  R15 1 0      ; R15 := {}
257 [-]: CONST     R16 10       ; R16 := 10.000000
258 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
259 [-]: NEWTABLE  R16 1 0      ; R16 := {}
260 [-]: TEST      R0 1         ; if R0 then PC := 265
261 [-]: JMP       265          ; PC := 265
262 [-]: CONST     R17 100      ; R17 := 100.000000
263 [-]: TEST      R17 1        ; if R17 then PC := 266
264 [-]: JMP       266          ; PC := 266
265 [-]: CONST     R17 0        ; R17 := 0.000000
266 [-]: SETLIST   R16 1 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 1
267 [-]: LOADK     R17 K24      ; R17 := 0.150000
268 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
269 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 160; R7 := R8 end
270 [-]: JMP       160          ; PC := 160
271 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 4735
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x03f57322
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: CONST     R0 9         ; R0 := 9.000000
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETGLOBAL R2 K1        ; R2 := 0x03f57322
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: SETTABLE  R1 K3 R2     ; R1["mColumns"] := R2
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mColumns"]
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mRows"]
 23 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
 24 [-]: SETTABLE  R1 K4 R2     ; R1["mVisibleElements"] := R2
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x71e9ac81]
 27 [-]: LOADNIL   R3 R3        ; R3 := nil
 28 [-]: LOADKB    R4 1 0       ; R4 := true
 29 [-]: LOADKB    R5 1 0       ; R5 := true
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 4749
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.Grid"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0[0xda0c93a2]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K4        ; R3 := "HealthAndShield.StatusEffectItem"
  7 [-]: LOADNIL   R4 R4        ; R4 := nil
  8 [-]: CONST     R5 9         ; R5 := 9.000000
  9 [-]: CONST     R6 2         ; R6 := 2.000000
 10 [-]: CALL      R1 6 2       ; R1 := R1(R2,R3,R4,R5,R6)
 11 [-]: SETUPVAL  R1 U0        ; U82 := R0
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: SETTABLE  R1 K5 K6     ; R1["mColumnSeparation"] := -50.000000
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: SETTABLE  R1 K7 K8     ; R1["mRowSeparation"] := 50.000000
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SETTABLE  R1 K9 K10    ; R1["mVisNameId"] := nil
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SETTABLE  R1 K11 K10   ; R1["mVisNameFadeTimer"] := nil
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SETTABLE  R1 K12 K13   ; R1["mVisNameFadeDuration"] := 1.000000
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x91a24e4b]
 25 [-]: LOADK     R4 K16       ; R4 := "HealthAndShield.StatusEffectItem.StatName.Name"
 26 [-]: CONST     R5 0         ; R5 := 0.000000
 27 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 28 [-]: SETTABLE  R1 K14 R2    ; R1["mOrigStatEffectNameXPos"] := R2
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: GETGLOBAL R2 K18       ; R2 := 0x7ed0a956
 31 [-]: LOADK     R3 K19       ; R3 := "/Lotus/Types/PickUps/FocusBoostBuff"
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: SETTABLE  R1 K17 R2    ; R1["mFocusBoostAbilityType"] := R2
 34 [-]: GETUPVAL  R1 U0        ; R1 := U0
 35 [-]: CLOSURE   R2 0         ; R2 := closure(Function #128.1)
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: SETTABLE  R1 K20 R2    ; R1["TryToShowStatName"] := R2
 39 [-]: GETUPVAL  R1 U0        ; R1 := U0
 40 [-]: CLOSURE   R2 1         ; R2 := closure(Function #128.2)
 41 [-]: GETUPVAL  R0 U1        ; R0 := U1
 42 [-]: GETUPVAL  R0 U0        ; R0 := U0
 43 [-]: SETTABLE  R1 K21 R2    ; R1["mOnRemovedCallback"] := R2
 44 [-]: GETUPVAL  R1 U0        ; R1 := U0
 45 [-]: CLOSURE   R2 2         ; R2 := closure(Function #128.3)
 46 [-]: SETTABLE  R1 K22 R2    ; R1["mClipCreatedCallback"] := R2
 47 [-]: GETUPVAL  R1 U0        ; R1 := U0
 48 [-]: CLOSURE   R2 3         ; R2 := closure(Function #128.4)
 49 [-]: GETUPVAL  R0 U2        ; R0 := U2
 50 [-]: GETUPVAL  R0 U3        ; R0 := U3
 51 [-]: GETUPVAL  R0 U0        ; R0 := U0
 52 [-]: GETUPVAL  R0 U4        ; R0 := U4
 53 [-]: GETUPVAL  R0 U5        ; R0 := U5
 54 [-]: SETTABLE  R1 K23 R2    ; R1["mElementDrawCallback"] := R2
 55 [-]: RETURN    R0 1         ; return 


; Function #128.1:
;
; Name:            
; Defined at line: 4760
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mVisNameId"]
  9 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["Id"]
 10 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x775c858b]
 14 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["mNameTimerId"]
 15 [-]: CALL      R2 3 1       ; R2(R3,R4)
 16 [-]: SETTABLE  R1 K4 K5     ; R1["mNameTimerId"] := nil
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: SETTABLE  R2 K1 K5     ; R2["mVisNameId"] := nil
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: SETTABLE  R2 K6 K5     ; R2["mVisNameFadeTimer"] := nil
 21 [-]: GETTABLE  R2 R1 K7     ; R2 := R1["mClipName"]
 22 [-]: EQ        0 R2 K5      ; if R2 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R2 U0        ; R2 := U0
 26 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mVisNameId"]
 27 [-]: EQ        0 R2 K5      ; if R2 ~= nil then PC := 48
 28 [-]: JMP       48           ; PC := 48
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["Id"]
 31 [-]: SETTABLE  R2 K1 R3     ; R2["mVisNameId"] := R3
 32 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 33 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xf64b7262]
 34 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["mClipName"]
 35 [-]: LOADK     R5 K10       ; R5 := "StatName"
 36 [-]: CONST     R6 10        ; R6 := 10.000000
 37 [-]: CONST     R7 100       ; R7 := 100.000000
 38 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 39 [-]: GETUPVAL  R2 U1        ; R2 := U1
 40 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0xbd2e96ea]
 41 [-]: CONST     R4 2         ; R4 := 2.000000
 42 [-]: CLOSURE   R5 0         ; R5 := closure(Function #128.1.1)
 43 [-]: MOVE      R0 R1        ; R0 := R1
 44 [-]: GETUPVAL  R0 U0        ; R0 := U0
 45 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 46 [-]: SETTABLE  R1 K4 R2     ; R1["mNameTimerId"] := R2
 47 [-]: JMP       61           ; PC := 61
 48 [-]: GETUPVAL  R2 U0        ; R2 := U0
 49 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mVisNameId"]
 50 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["Id"]
 51 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 61
 52 [-]: JMP       61           ; PC := 61
 53 [-]: GETUPVAL  R2 U1        ; R2 := U1
 54 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0xbd2e96ea]
 55 [-]: CONST     R4 1         ; R4 := 1.500000
 56 [-]: CLOSURE   R5 1         ; R5 := closure(Function #128.1.2)
 57 [-]: MOVE      R0 R1        ; R0 := R1
 58 [-]: MOVE      R0 R0        ; R0 := R0
 59 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 60 [-]: SETTABLE  R1 K4 R2     ; R1["mNameTimerId"] := R2
 61 [-]: RETURN    R0 1         ; return 


; Function #128.1.1:
;
; Name:            
; Defined at line: 4782
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K1 K0     ; R0["mNameTimerId"] := nil
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mClipName"]
  9 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mVisNameFadeDuration"]
 15 [-]: SETTABLE  R0 K3 R1     ; R0["mVisNameFadeTimer"] := R1
 16 [-]: RETURN    R0 1         ; return 


; Function #128.1.2:
;
; Name:            
; Defined at line: 4798
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["mNameTimerId"] := nil
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf8caf39e]
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: CALL      R0 3 1       ; R0(R1,R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #128.2:
;
; Name:            
; Defined at line: 4806
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mNameTimerId"]
  5 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x775c858b]
  9 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mNameTimerId"]
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: SETTABLE  R1 K1 K0     ; R1["mNameTimerId"] := nil
 12 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["mClipName"]
 13 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["Id"]
 17 [-]: GETUPVAL  R3 U1        ; R3 := U1
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mVisNameId"]
 19 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R2 U1        ; R2 := U1
 22 [-]: SETTABLE  R2 K5 K0     ; R2["mVisNameId"] := nil
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: SETTABLE  R2 K6 K0     ; R2["mVisNameFadeTimer"] := nil
 25 [-]: RETURN    R0 1         ; return 


; Function #128.3:
;
; Name:            
; Defined at line: 4826
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R1 0         ; if not R1 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Change"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: SETTABLE  R1 K0 K1     ; R1["Change"] := nil
  7 [-]: RETURN    R0 1         ; return 


; Function #128.4:
;
; Name:            
; Defined at line: 4832
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mClipName"]
  7 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["Change"]
 11 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 14 [-]: SETTABLE  R0 K4 R1     ; R0["Change"] := R1
 15 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mClipName"]
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 18 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mAbilityType"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 1         ; if R3 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETGLOBAL R3 K6        ; R3 := 0xb009bbc6
 23 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mAbilityType"]
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: MOVE      R2 R3        ; R2 := R3
 26 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mIsDebuff"]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 30 [-]: MOVE      R4 R2        ; R4 := R2
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: TEST      R3 1         ; if R3 then PC := 45
 33 [-]: JMP       45           ; PC := 45
 34 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 35 [-]: MOVE      R4 R2        ; R4 := R2
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: TEST      R3 1         ; if R3 then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0xf2deaf69]
 40 [-]: GETGLOBAL R5 K9        ; R5 := gLotusInventoryControllerType
 41 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 42 [-]: JMP       45           ; PC := 45
 43 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 44
 44 [-]: LOADKB    R3 1 0       ; R3 := true
 45 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
 46 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["UseText"]
 47 [-]: EQ        1 R4 R3      ; if R4 == R3 then PC := 63
 48 [-]: JMP       63           ; PC := 63
 49 [-]: GETGLOBAL R4 K11       ; R4 := 0x38f10e85
 50 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
 51 [-]: MOVE      R6 R1        ; R6 := R1
 52 [-]: LOADK     R7 K12       ; R7 := ".Icon.gotoAndStop"
 53 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 54 [-]: GETUPVAL  R7 U0        ; R7 := U0
 55 [-]: GETTABLE  R7 R7 K13    ; R7 := R7[0x06d055f9]
 56 [-]: MOVE      R8 R3        ; R8 := R3
 57 [-]: CONST     R9 1         ; R9 := 1.000000
 58 [-]: CONST     R10 2        ; R10 := 2.000000
 59 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 60 [-]: CALL      R4 0 1       ; R4(R5,...)
 61 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
 62 [-]: SETTABLE  R4 K10 R3    ; R4["UseText"] := R3
 63 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mColor"]
 64 [-]: EQ        0 R4 K3      ; if R4 ~= nil then PC := 89
 65 [-]: JMP       89           ; PC := 89
 66 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mIsDebuff"]
 67 [-]: TEST      R4 0         ; if not R4 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETUPVAL  R4 U1        ; R4 := U1
 70 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["Debuff"]
 71 [-]: SETTABLE  R0 K14 R4    ; R0["mColor"] := R4
 72 [-]: JMP       89           ; PC := 89
 73 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 74 [-]: MOVE      R5 R2        ; R5 := R2
 75 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 76 [-]: TEST      R4 1         ; if R4 then PC := 86
 77 [-]: JMP       86           ; PC := 86
 78 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2[0xf2deaf69]
 79 [-]: GETUPVAL  R6 U2        ; R6 := U2
 80 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mFocusBoostAbilityType"]
 81 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 82 [-]: TEST      R4 0         ; if not R4 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: SETTABLE  R0 K14 K17   ; R0["mColor"] := 15059482.000000
 85 [-]: JMP       89           ; PC := 89
 86 [-]: GETUPVAL  R4 U1        ; R4 := U1
 87 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["Buff"]
 88 [-]: SETTABLE  R0 K14 R4    ; R0["mColor"] := R4
 89 [-]: TEST      R3 0         ; if not R3 then PC := 140
 90 [-]: JMP       140          ; PC := 140
 91 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
 92 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["IsDebuff"]
 93 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mIsDebuff"]
 94 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 120
 95 [-]: JMP       120          ; PC := 120
 96 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 97 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0xc0a3774b]
 98 [-]: MOVE      R6 R1        ; R6 := R1
 99 [-]: LOADK     R7 K21       ; R7 := "Icon.Icon"
100 [-]: CONST     R8 75        ; R8 := 75.000000
101 [-]: LOADKB    R9 1 0       ; R9 := true
102 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
103 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
104 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0xf64b7262]
105 [-]: MOVE      R6 R1        ; R6 := R1
106 [-]: LOADK     R7 K21       ; R7 := "Icon.Icon"
107 [-]: CONST     R8 36        ; R8 := 36.000000
108 [-]: GETUPVAL  R9 U0        ; R9 := U0
109 [-]: GETTABLE  R9 R9 K13    ; R9 := R9[0x06d055f9]
110 [-]: GETTABLE  R10 R0 K7    ; R10 := R0["mIsDebuff"]
111 [-]: GETUPVAL  R11 U1       ; R11 := U1
112 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["Debuff"]
113 [-]: GETUPVAL  R12 U1       ; R12 := U1
114 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["Buff"]
115 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
116 [-]: CALL      R4 0 1       ; R4(R5,...)
117 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
118 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mIsDebuff"]
119 [-]: SETTABLE  R4 K19 R5    ; R4["IsDebuff"] := R5
120 [-]: GETTABLE  R4 R0 K23    ; R4 := R0["mIcon"]
121 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
122 [-]: MOVE      R6 R2        ; R6 := R2
123 [-]: CALL      R5 2 2       ; R5 := R5(R6)
124 [-]: TEST      R5 1         ; if R5 then PC := 132
125 [-]: JMP       132          ; PC := 132
126 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2[0xf2deaf69]
127 [-]: GETGLOBAL R7 K9        ; R7 := gLotusInventoryControllerType
128 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
129 [-]: TEST      R5 0         ; if not R5 then PC := 132
130 [-]: JMP       132          ; PC := 132
131 [-]: LOADK     R4 K24       ; R4 := "<STEALTH_COMBO>"
132 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
133 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5[0x20b98db3]
134 [-]: MOVE      R7 R1        ; R7 := R1
135 [-]: LOADK     R8 K26       ; R8 := ".Icon.Icon.text"
136 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
137 [-]: MOVE      R8 R4        ; R8 := R4
138 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
139 [-]: JMP       275          ; PC := 275
140 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["Change"]
141 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["IconColorSet"]
142 [-]: TEST      R5 1         ; if R5 then PC := 160
143 [-]: JMP       160          ; PC := 160
144 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
145 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5[0xf64b7262]
146 [-]: MOVE      R7 R1        ; R7 := R1
147 [-]: LOADK     R8 K21       ; R8 := "Icon.Icon"
148 [-]: CONST     R9 9         ; R9 := 9.000000
149 [-]: GETTABLE  R10 R0 K14   ; R10 := R0["mColor"]
150 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
151 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
152 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0xc0a3774b]
153 [-]: MOVE      R7 R1        ; R7 := R1
154 [-]: LOADK     R8 K21       ; R8 := "Icon.Icon"
155 [-]: CONST     R9 11        ; R9 := 11.000000
156 [-]: LOADKB    R10 1 0      ; R10 := true
157 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
158 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["Change"]
159 [-]: SETTABLE  R5 K27 K28   ; R5["IconColorSet"] := true
160 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
161 [-]: MOVE      R6 R2        ; R6 := R2
162 [-]: CALL      R5 2 2       ; R5 := R5(R6)
163 [-]: TEST      R5 1         ; if R5 then PC := 272
164 [-]: JMP       272          ; PC := 272
165 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2[0xf2deaf69]
166 [-]: GETGLOBAL R7 K29       ; R7 := gLotusArtifactUpgradeType
167 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
168 [-]: TEST      R5 0         ; if not R5 then PC := 228
169 [-]: JMP       228          ; PC := 228
170 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2[0xf2deaf69]
171 [-]: GETGLOBAL R7 K30       ; R7 := gLotusFocusUpgradeBaseType
172 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
173 [-]: TEST      R5 1         ; if R5 then PC := 228
174 [-]: JMP       228          ; PC := 228
175 [-]: SELF      R5 R2 K31    ; R6 := R2; R5 := R2[0x1651ffd7]
176 [-]: CALL      R5 2 2       ; R5 := R5(R6)
177 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["Change"]
178 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["IconTexture"]
179 [-]: EQ        1 R6 R5      ; if R6 == R5 then PC := 275
180 [-]: JMP       275          ; PC := 275
181 [-]: GETUPVAL  R6 U3        ; R6 := U3
182 [-]: MOVE      R7 R5        ; R7 := R5
183 [-]: CALL      R6 2 2       ; R6 := R6(R7)
184 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
185 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7[0xc0a3774b]
186 [-]: MOVE      R9 R1        ; R9 := R1
187 [-]: LOADK     R10 K21      ; R10 := "Icon.Icon"
188 [-]: CONST     R11 11       ; R11 := 11.000000
189 [-]: NOT       R12 R6       ; R12 :=  R6
190 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
191 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
192 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0xf64b7262]
193 [-]: MOVE      R9 R1        ; R9 := R1
194 [-]: LOADK     R10 K21      ; R10 := "Icon.Icon"
195 [-]: CONST     R11 12       ; R11 := 12.000000
196 [-]: GETUPVAL  R12 U4       ; R12 := U4
197 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["HUD_BUFF_ICON_SIZE"]
198 [-]: SELF      R13 R2 K34   ; R14 := R2; R13 := R2[0xb9d60cd9]
199 [-]: CALL      R13 2 2      ; R13 := R13(R14)
200 [-]: MUL       R12 R12 R13  ; R12 := R12 * R13
201 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
202 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
203 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0xf64b7262]
204 [-]: MOVE      R9 R1        ; R9 := R1
205 [-]: LOADK     R10 K21      ; R10 := "Icon.Icon"
206 [-]: CONST     R11 13       ; R11 := 13.000000
207 [-]: GETUPVAL  R12 U4       ; R12 := U4
208 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["HUD_BUFF_ICON_SIZE"]
209 [-]: SELF      R13 R2 K35   ; R14 := R2; R13 := R2[0x7b7fbf48]
210 [-]: CALL      R13 2 2      ; R13 := R13(R14)
211 [-]: MUL       R12 R12 R13  ; R12 := R12 * R13
212 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
213 [-]: TEST      R6 1         ; if R6 then PC := 225
214 [-]: JMP       225          ; PC := 225
215 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
216 [-]: SELF      R7 R7 K36    ; R8 := R7; R7 := R7[0x1cb415c1]
217 [-]: MOVE      R9 R1        ; R9 := R1
218 [-]: LOADK     R10 K37      ; R10 := ".Icon.Icon"
219 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
220 [-]: MOVE      R10 R5       ; R10 := R5
221 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
222 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["Change"]
223 [-]: SETTABLE  R7 K32 R5    ; R7["IconTexture"] := R5
224 [-]: JMP       275          ; PC := 275
225 [-]: SETTABLE  R0 K38 K28   ; R0["WaitingForIcon"] := true
226 [-]: SETTABLE  R0 K39 R5    ; R0["Icon"] := R5
227 [-]: JMP       275          ; PC := 275
228 [-]: SELF      R7 R2 K8     ; R8 := R2; R7 := R2[0xf2deaf69]
229 [-]: GETGLOBAL R9 K40       ; R9 := gItemType
230 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
231 [-]: TEST      R7 0         ; if not R7 then PC := 265
232 [-]: JMP       265          ; PC := 265
233 [-]: SELF      R7 R2 K41    ; R8 := R2; R7 := R2[0x056dcf06]
234 [-]: CALL      R7 2 2       ; R7 := R7(R8)
235 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["Change"]
236 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["IconTexture"]
237 [-]: EQ        1 R8 R7      ; if R8 == R7 then PC := 275
238 [-]: JMP       275          ; PC := 275
239 [-]: GETGLOBAL R8 K1        ; R8 := 0xae91e43b
240 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0xf64b7262]
241 [-]: MOVE      R10 R1       ; R10 := R1
242 [-]: LOADK     R11 K21      ; R11 := "Icon.Icon"
243 [-]: CONST     R12 12       ; R12 := 12.000000
244 [-]: GETUPVAL  R13 U4       ; R13 := U4
245 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["HUD_BUFF_ICON_SIZE"]
246 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
247 [-]: GETGLOBAL R8 K1        ; R8 := 0xae91e43b
248 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0xf64b7262]
249 [-]: MOVE      R10 R1       ; R10 := R1
250 [-]: LOADK     R11 K21      ; R11 := "Icon.Icon"
251 [-]: CONST     R12 13       ; R12 := 13.000000
252 [-]: GETUPVAL  R13 U4       ; R13 := U4
253 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["HUD_BUFF_ICON_SIZE"]
254 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
255 [-]: GETGLOBAL R8 K1        ; R8 := 0xae91e43b
256 [-]: SELF      R8 R8 K36    ; R9 := R8; R8 := R8[0x1cb415c1]
257 [-]: MOVE      R10 R1       ; R10 := R1
258 [-]: LOADK     R11 K37      ; R11 := ".Icon.Icon"
259 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
260 [-]: MOVE      R11 R7       ; R11 := R7
261 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
262 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["Change"]
263 [-]: SETTABLE  R8 K32 R7    ; R8["IconTexture"] := R7
264 [-]: JMP       275          ; PC := 275
265 [-]: GETGLOBAL R8 K42       ; R8 := 0x484742b6
266 [-]: LOADK     R9 K43       ; R9 := "HudRedux abilityRes is not an item and has no icon texture! type: "
267 [-]: SELF      R10 R2 K44   ; R11 := R2; R10 := R2[0xed4e0128]
268 [-]: CALL      R10 2 2      ; R10 := R10(R11)
269 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
270 [-]: CALL      R8 2 1       ; R8(R9)
271 [-]: JMP       275          ; PC := 275
272 [-]: GETGLOBAL R8 K45       ; R8 := 0x3d106989
273 [-]: LOADK     R9 K46       ; R9 := "Tried to create a hud buff notification without an abilityRes!"
274 [-]: CALL      R8 2 1       ; R8(R9)
275 [-]: GETTABLE  R8 R0 K47    ; R8 := R0["mBuffData"]
276 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
277 [-]: GETTABLE  R9 R9 K48    ; R9 := R9["BuffData"]
278 [-]: EQ        0 R9 R8      ; if R9 ~= R8 then PC := 290
279 [-]: JMP       290          ; PC := 290
280 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
281 [-]: GETTABLE  R9 R9 K49    ; R9 := R9["BuffDataExtra"]
282 [-]: GETTABLE  R10 R0 K50   ; R10 := R0["mBuffDataExtra"]
283 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 290
284 [-]: JMP       290          ; PC := 290
285 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
286 [-]: GETTABLE  R9 R9 K51    ; R9 := R9["BuffType"]
287 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
288 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 547
289 [-]: JMP       547          ; PC := 547
290 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
291 [-]: SETTABLE  R9 K48 R8    ; R9["BuffData"] := R8
292 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
293 [-]: GETTABLE  R10 R0 K50   ; R10 := R0["mBuffDataExtra"]
294 [-]: SETTABLE  R9 K49 R10   ; R9["BuffDataExtra"] := R10
295 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
296 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
297 [-]: SETTABLE  R9 K51 R10   ; R9["BuffType"] := R10
298 [-]: LOADNIL   R9 R9        ; R9 := nil
299 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
300 [-]: EQ        0 R10 K54    ; if R10 ~= 2.000000 then PC := 310
301 [-]: JMP       310          ; PC := 310
302 [-]: GETUPVAL  R10 U0       ; R10 := U0
303 [-]: GETTABLE  R10 R10 K55  ; R10 := R10[0x74a11ec6]
304 [-]: GETTABLE  R11 R0 K47   ; R11 := R0["mBuffData"]
305 [-]: CONST     R12 2        ; R12 := 2.000000
306 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
307 [-]: LOADK     R11 K56      ; R11 := "%"
308 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
309 [-]: JMP       479          ; PC := 479
310 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
311 [-]: EQ        0 R10 K57    ; if R10 ~= 4.000000 then PC := 326
312 [-]: JMP       326          ; PC := 326
313 [-]: GETUPVAL  R10 U0       ; R10 := U0
314 [-]: GETTABLE  R10 R10 K55  ; R10 := R10[0x74a11ec6]
315 [-]: GETTABLE  R11 R0 K47   ; R11 := R0["mBuffData"]
316 [-]: CONST     R12 2        ; R12 := 2.000000
317 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
318 [-]: LOADK     R11 K56      ; R11 := "%"
319 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
320 [-]: GETUPVAL  R10 U0       ; R10 := U0
321 [-]: GETTABLE  R10 R10 K58  ; R10 := R10[0xba3f419d]
322 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
323 [-]: CALL      R10 2 2      ; R10 := R10(R11)
324 [-]: MOVE      R9 R10       ; R9 := R10
325 [-]: JMP       479          ; PC := 479
326 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
327 [-]: EQ        0 R10 K59    ; if R10 ~= 12.000000 then PC := 333
328 [-]: JMP       333          ; PC := 333
329 [-]: LOADK     R10 K60      ; R10 := "x"
330 [-]: MOVE      R11 R8       ; R11 := R8
331 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
332 [-]: JMP       479          ; PC := 479
333 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
334 [-]: EQ        0 R10 K61    ; if R10 ~= 0.000000 then PC := 338
335 [-]: JMP       338          ; PC := 338
336 [-]: LOADK     R8 K62       ; R8 := ""
337 [-]: JMP       479          ; PC := 479
338 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
339 [-]: EQ        0 R10 K63    ; if R10 ~= 5.000000 then PC := 347
340 [-]: JMP       347          ; PC := 347
341 [-]: GETUPVAL  R10 U0       ; R10 := U0
342 [-]: GETTABLE  R10 R10 K58  ; R10 := R10[0xba3f419d]
343 [-]: MOVE      R11 R8       ; R11 := R8
344 [-]: CALL      R10 2 2      ; R10 := R10(R11)
345 [-]: MOVE      R8 R10       ; R8 := R10
346 [-]: JMP       479          ; PC := 479
347 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
348 [-]: EQ        0 R10 K64    ; if R10 ~= 8.000000 then PC := 361
349 [-]: JMP       361          ; PC := 361
350 [-]: GETUPVAL  R10 U0       ; R10 := U0
351 [-]: GETTABLE  R10 R10 K58  ; R10 := R10[0xba3f419d]
352 [-]: MOVE      R11 R8       ; R11 := R8
353 [-]: CALL      R10 2 2      ; R10 := R10(R11)
354 [-]: MOVE      R8 R10       ; R8 := R10
355 [-]: GETGLOBAL R10 K65      ; R10 := 0x64fb1586
356 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
357 [-]: CALL      R10 2 2      ; R10 := R10(R11)
358 [-]: LOADK     R11 K56      ; R11 := "%"
359 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
360 [-]: JMP       479          ; PC := 479
361 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
362 [-]: EQ        0 R10 K66    ; if R10 ~= 9.000000 then PC := 375
363 [-]: JMP       375          ; PC := 375
364 [-]: GETUPVAL  R10 U0       ; R10 := U0
365 [-]: GETTABLE  R10 R10 K58  ; R10 := R10[0xba3f419d]
366 [-]: MOVE      R11 R8       ; R11 := R8
367 [-]: CALL      R10 2 2      ; R10 := R10(R11)
368 [-]: MOVE      R8 R10       ; R8 := R10
369 [-]: GETUPVAL  R10 U0       ; R10 := U0
370 [-]: GETTABLE  R10 R10 K58  ; R10 := R10[0xba3f419d]
371 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
372 [-]: CALL      R10 2 2      ; R10 := R10(R11)
373 [-]: MOVE      R9 R10       ; R9 := R10
374 [-]: JMP       479          ; PC := 479
375 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
376 [-]: EQ        0 R10 K67    ; if R10 ~= 10.000000 then PC := 386
377 [-]: JMP       386          ; PC := 386
378 [-]: GETUPVAL  R10 U0       ; R10 := U0
379 [-]: GETTABLE  R10 R10 K68  ; R10 := R10[0x1142c7a8]
380 [-]: MOVE      R11 R8       ; R11 := R8
381 [-]: CONST     R12 1        ; R12 := 1.000000
382 [-]: LOADKB    R13 0 0      ; R13 := false
383 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
384 [-]: MOVE      R8 R10       ; R8 := R10
385 [-]: JMP       479          ; PC := 479
386 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
387 [-]: EQ        0 R10 K69    ; if R10 ~= 11.000000 then PC := 402
388 [-]: JMP       402          ; PC := 402
389 [-]: GETUPVAL  R10 U0       ; R10 := U0
390 [-]: GETTABLE  R10 R10 K68  ; R10 := R10[0x1142c7a8]
391 [-]: MOVE      R11 R8       ; R11 := R8
392 [-]: CONST     R12 1        ; R12 := 1.000000
393 [-]: LOADKB    R13 0 0      ; R13 := false
394 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
395 [-]: MOVE      R8 R10       ; R8 := R10
396 [-]: GETGLOBAL R10 K65      ; R10 := 0x64fb1586
397 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
398 [-]: CALL      R10 2 2      ; R10 := R10(R11)
399 [-]: LOADK     R11 K56      ; R11 := "%"
400 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
401 [-]: JMP       479          ; PC := 479
402 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
403 [-]: EQ        0 R10 K70    ; if R10 ~= 6.000000 then PC := 413
404 [-]: JMP       413          ; PC := 413
405 [-]: LOADK     R10 K60      ; R10 := "x"
406 [-]: MOVE      R11 R8       ; R11 := R8
407 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
408 [-]: GETGLOBAL R10 K65      ; R10 := 0x64fb1586
409 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
410 [-]: CALL      R10 2 2      ; R10 := R10(R11)
411 [-]: MOVE      R9 R10       ; R9 := R10
412 [-]: JMP       479          ; PC := 479
413 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
414 [-]: EQ        0 R10 K71    ; if R10 ~= 15.000000 then PC := 427
415 [-]: JMP       427          ; PC := 427
416 [-]: GETUPVAL  R10 U0       ; R10 := U0
417 [-]: GETTABLE  R10 R10 K68  ; R10 := R10[0x1142c7a8]
418 [-]: GETTABLE  R11 R0 K47   ; R11 := R0["mBuffData"]
419 [-]: CONST     R12 1        ; R12 := 1.000000
420 [-]: LOADKB    R13 1 0      ; R13 := true
421 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
422 [-]: MOVE      R9 R10       ; R9 := R10
423 [-]: LOADK     R10 K60      ; R10 := "x"
424 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
425 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
426 [-]: JMP       479          ; PC := 479
427 [-]: GETGLOBAL R10 K53      ; R10 := 0x6c97a788
428 [-]: GETTABLE  R10 R10 K72  ; R10 := R10[0xd6ae36be]
429 [-]: GETTABLE  R11 R0 K52   ; R11 := R0["mBuffType"]
430 [-]: CALL      R10 2 2      ; R10 := R10(R11)
431 [-]: TEST      R10 0        ; if not R10 then PC := 479
432 [-]: JMP       479          ; PC := 479
433 [-]: LE        0 K61 R8     ; if 0.000000 > R8 then PC := 441
434 [-]: JMP       441          ; PC := 441
435 [-]: GETGLOBAL R10 K73      ; R10 := 0x5bced4c4
436 [-]: GETTABLE  R10 R10 K74  ; R10 := R10[0x99675e23]
437 [-]: MOVE      R11 R8       ; R11 := R8
438 [-]: CALL      R10 2 2      ; R10 := R10(R11)
439 [-]: MOVE      R8 R10       ; R8 := R10
440 [-]: JMP       447          ; PC := 447
441 [-]: GETGLOBAL R10 K1       ; R10 := 0xae91e43b
442 [-]: SELF      R10 R10 K75  ; R11 := R10; R10 := R10[0x42b04007]
443 [-]: LOADK     R12 K76      ; R12 := "<INFINITY>"
444 [-]: LOADKB    R13 1 0      ; R13 := true
445 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
446 [-]: MOVE      R8 R10       ; R8 := R10
447 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
448 [-]: EQ        1 R10 K77    ; if R10 == 13.000000 then PC := 453
449 [-]: JMP       453          ; PC := 453
450 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
451 [-]: EQ        0 R10 K78    ; if R10 ~= 14.000000 then PC := 462
452 [-]: JMP       462          ; PC := 462
453 [-]: GETTABLE  R10 R0 K50   ; R10 := R0["mBuffDataExtra"]
454 [-]: LT        0 K61 R10    ; if 0.000000 >= R10 then PC := 479
455 [-]: JMP       479          ; PC := 479
456 [-]: LOADK     R10 K60      ; R10 := "x"
457 [-]: GETGLOBAL R11 K65      ; R11 := 0x64fb1586
458 [-]: GETTABLE  R12 R0 K50   ; R12 := R0["mBuffDataExtra"]
459 [-]: CALL      R11 2 2      ; R11 := R11(R12)
460 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
461 [-]: JMP       479          ; PC := 479
462 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
463 [-]: EQ        0 R10 K79    ; if R10 ~= 7.000000 then PC := 471
464 [-]: JMP       471          ; PC := 471
465 [-]: GETUPVAL  R10 U0       ; R10 := U0
466 [-]: GETTABLE  R10 R10 K58  ; R10 := R10[0xba3f419d]
467 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
468 [-]: CALL      R10 2 2      ; R10 := R10(R11)
469 [-]: MOVE      R9 R10       ; R9 := R10
470 [-]: JMP       479          ; PC := 479
471 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mBuffType"]
472 [-]: EQ        0 R10 K80    ; if R10 ~= 3.000000 then PC := 479
473 [-]: JMP       479          ; PC := 479
474 [-]: GETGLOBAL R10 K65      ; R10 := 0x64fb1586
475 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffDataExtra"]
476 [-]: CALL      R10 2 2      ; R10 := R10(R11)
477 [-]: LOADK     R11 K56      ; R11 := "%"
478 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
479 [-]: EQ        1 R9 K3      ; if R9 == nil then PC := 529
480 [-]: JMP       529          ; PC := 529
481 [-]: GETGLOBAL R10 K1       ; R10 := 0xae91e43b
482 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0xf64b7262]
483 [-]: MOVE      R12 R1       ; R12 := R1
484 [-]: LOADK     R13 K81      ; R13 := "Data2.Bg"
485 [-]: CONST     R14 9        ; R14 := 9.000000
486 [-]: GETUPVAL  R15 U1       ; R15 := U1
487 [-]: GETTABLE  R15 R15 K82  ; R15 := R15["Shadow"]
488 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
489 [-]: GETGLOBAL R10 K1       ; R10 := 0xae91e43b
490 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10[0xf64b7262]
491 [-]: MOVE      R12 R1       ; R12 := R1
492 [-]: LOADK     R13 K83      ; R13 := "Data2.Desc"
493 [-]: CONST     R14 36       ; R14 := 36.000000
494 [-]: GETUPVAL  R15 U1       ; R15 := U1
495 [-]: GETTABLE  R15 R15 K84  ; R15 := R15["Text"]
496 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
497 [-]: GETGLOBAL R10 K1       ; R10 := 0xae91e43b
498 [-]: SELF      R10 R10 K85  ; R11 := R10; R10 := R10[0x5f56eeab]
499 [-]: MOVE      R12 R1       ; R12 := R1
500 [-]: LOADK     R13 K86      ; R13 := ".Data2.Desc"
501 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
502 [-]: CONST     R13 29       ; R13 := 29.000000
503 [-]: MOVE      R14 R9       ; R14 := R9
504 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
505 [-]: GETGLOBAL R10 K1       ; R10 := 0xae91e43b
506 [-]: SELF      R10 R10 K87  ; R11 := R10; R10 := R10[0xd5181643]
507 [-]: MOVE      R12 R1       ; R12 := R1
508 [-]: LOADK     R13 K88      ; R13 := ".Data2.Bg"
509 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
510 [-]: GETGLOBAL R13 K89      ; R13 := 0x0032441c
511 [-]: GETTABLE  R13 R13 K90  ; R13 := R13["UIMaterial_SmoothEdgeNoDepthTest"]
512 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
513 [-]: GETGLOBAL R10 K1       ; R10 := 0xae91e43b
514 [-]: SELF      R10 R10 K91  ; R11 := R10; R10 := R10[0x91a24e4b]
515 [-]: MOVE      R12 R1       ; R12 := R1
516 [-]: LOADK     R13 K86      ; R13 := ".Data2.Desc"
517 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
518 [-]: CONST     R13 33       ; R13 := 33.000000
519 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
520 [-]: EQ        1 R10 K3     ; if R10 == nil then PC := 529
521 [-]: JMP       529          ; PC := 529
522 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
523 [-]: SELF      R11 R11 K22  ; R12 := R11; R11 := R11[0xf64b7262]
524 [-]: MOVE      R13 R1       ; R13 := R1
525 [-]: LOADK     R14 K81      ; R14 := "Data2.Bg"
526 [-]: CONST     R15 12       ; R15 := 12.000000
527 [-]: ADD       R16 R10 K70  ; R16 := R10 + 6.000000
528 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
529 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
530 [-]: SELF      R11 R11 K85  ; R12 := R11; R11 := R11[0x5f56eeab]
531 [-]: MOVE      R13 R1       ; R13 := R1
532 [-]: LOADK     R14 K92      ; R14 := ".Desc"
533 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
534 [-]: CONST     R14 29       ; R14 := 29.000000
535 [-]: MOVE      R15 R8       ; R15 := R8
536 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
537 [-]: GETGLOBAL R11 K1       ; R11 := 0xae91e43b
538 [-]: SELF      R11 R11 K20  ; R12 := R11; R11 := R11[0xc0a3774b]
539 [-]: MOVE      R13 R1       ; R13 := R1
540 [-]: LOADK     R14 K93      ; R14 := "Data2"
541 [-]: CONST     R15 11       ; R15 := 11.000000
542 [-]: EQ        0 R9 K3      ; if R9 ~= nil then PC := 545
543 [-]: JMP       545          ; PC := 545
544 [-]: LOADKB    R16 0 1      ; R16 := false; PC := 545
545 [-]: LOADKB    R16 1 0      ; R16 := true
546 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
547 [-]: GETUPVAL  R11 U2       ; R11 := U2
548 [-]: GETTABLE  R11 R11 K94  ; R11 := R11["mVisNameId"]
549 [-]: EQ        1 R11 K3     ; if R11 == nil then PC := 556
550 [-]: JMP       556          ; PC := 556
551 [-]: GETTABLE  R11 R0 K95   ; R11 := R0["Id"]
552 [-]: GETUPVAL  R12 U2       ; R12 := U2
553 [-]: GETTABLE  R12 R12 K94  ; R12 := R12["mVisNameId"]
554 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 557
555 [-]: JMP       557          ; PC := 557
556 [-]: LOADKB    R11 0 1      ; R11 := false; PC := 557
557 [-]: LOADKB    R11 1 0      ; R11 := true
558 [-]: TEST      R11 0        ; if not R11 then PC := 563
559 [-]: JMP       563          ; PC := 563
560 [-]: GETTABLE  R12 R0 K96   ; R12 := R0["mNameTimerId"]
561 [-]: EQ        1 R12 K3     ; if R12 == nil then PC := 581
562 [-]: JMP       581          ; PC := 581
563 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["Change"]
564 [-]: GETTABLE  R12 R12 K97  ; R12 := R12["ShowingName"]
565 [-]: EQ        1 R12 R11    ; if R12 == R11 then PC := 581
566 [-]: JMP       581          ; PC := 581
567 [-]: GETGLOBAL R12 K1       ; R12 := 0xae91e43b
568 [-]: SELF      R12 R12 K22  ; R13 := R12; R12 := R12[0xf64b7262]
569 [-]: MOVE      R14 R1       ; R14 := R1
570 [-]: LOADK     R15 K98      ; R15 := "StatName"
571 [-]: CONST     R16 10       ; R16 := 10.000000
572 [-]: GETUPVAL  R17 U0       ; R17 := U0
573 [-]: GETTABLE  R17 R17 K13  ; R17 := R17[0x06d055f9]
574 [-]: MOVE      R18 R11      ; R18 := R11
575 [-]: CONST     R19 100      ; R19 := 100.000000
576 [-]: CONST     R20 0        ; R20 := 0.000000
577 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
578 [-]: CALL      R12 0 1      ; R12(R13,...)
579 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["Change"]
580 [-]: SETTABLE  R12 K97 R11  ; R12["ShowingName"] := R11
581 [-]: LOADK     R12 K62      ; R12 := ""
582 [-]: GETTABLE  R13 R0 K7    ; R13 := R0["mIsDebuff"]
583 [-]: TEST      R13 0        ; if not R13 then PC := 590
584 [-]: JMP       590          ; PC := 590
585 [-]: GETTABLE  R13 R0 K99   ; R13 := R0["mDesc"]
586 [-]: EQ        1 R13 K3     ; if R13 == nil then PC := 590
587 [-]: JMP       590          ; PC := 590
588 [-]: GETTABLE  R12 R0 K99   ; R12 := R0["mDesc"]
589 [-]: JMP       639          ; PC := 639
590 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
591 [-]: MOVE      R14 R2       ; R14 := R2
592 [-]: CALL      R13 2 2      ; R13 := R13(R14)
593 [-]: TEST      R13 1        ; if R13 then PC := 639
594 [-]: JMP       639          ; PC := 639
595 [-]: SELF      R13 R2 K8    ; R14 := R2; R13 := R2[0xf2deaf69]
596 [-]: GETGLOBAL R15 K9       ; R15 := gLotusInventoryControllerType
597 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
598 [-]: TEST      R13 0        ; if not R13 then PC := 602
599 [-]: JMP       602          ; PC := 602
600 [-]: LOADK     R12 K100     ; R12 := "/Lotus/Language/Game/StealthComboBuff"
601 [-]: JMP       607          ; PC := 607
602 [-]: GETGLOBAL R13 K65      ; R13 := 0x64fb1586
603 [-]: SELF      R14 R2 K101  ; R15 := R2; R14 := R2[0xd3a9d01f]
604 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
605 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
606 [-]: MOVE      R12 R13      ; R12 := R13
607 [-]: GETTABLE  R13 R0 K102  ; R13 := R0["mAugmentType"]
608 [-]: EQ        1 R13 K61    ; if R13 == 0.000000 then PC := 639
609 [-]: JMP       639          ; PC := 639
610 [-]: GETTABLE  R13 R0 K102  ; R13 := R0["mAugmentType"]
611 [-]: LE        0 K57 R13    ; if 4.000000 > R13 then PC := 628
612 [-]: JMP       628          ; PC := 628
613 [-]: GETGLOBAL R13 K103     ; R13 := 0x7f5022cf
614 [-]: GETTABLE  R13 R13 K104 ; R13 := R13[0x66edf04f]
615 [-]: MOVE      R14 R12      ; R14 := R12
616 [-]: LOADK     R15 K105     ; R15 := "Ability"
617 [-]: LOADK     R16 K106     ; R16 := "%1Augment"
618 [-]: GETGLOBAL R17 K65      ; R17 := 0x64fb1586
619 [-]: GETTABLE  R18 R0 K102  ; R18 := R0["mAugmentType"]
620 [-]: SUB       R18 R18 K57  ; R18 := R18 - 4.000000
621 [-]: ADD       R18 R18 K107 ; R18 := R18 + 1.000000
622 [-]: CALL      R17 2 2      ; R17 := R17(R18)
623 [-]: LOADK     R18 K108     ; R18 := "PvP"
624 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
625 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
626 [-]: MOVE      R12 R13      ; R12 := R13
627 [-]: JMP       639          ; PC := 639
628 [-]: GETGLOBAL R13 K103     ; R13 := 0x7f5022cf
629 [-]: GETTABLE  R13 R13 K104 ; R13 := R13[0x66edf04f]
630 [-]: MOVE      R14 R12      ; R14 := R12
631 [-]: LOADK     R15 K105     ; R15 := "Ability"
632 [-]: LOADK     R16 K106     ; R16 := "%1Augment"
633 [-]: GETGLOBAL R17 K65      ; R17 := 0x64fb1586
634 [-]: GETTABLE  R18 R0 K102  ; R18 := R0["mAugmentType"]
635 [-]: CALL      R17 2 2      ; R17 := R17(R18)
636 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
637 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
638 [-]: MOVE      R12 R13      ; R12 := R13
639 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
640 [-]: GETTABLE  R13 R13 K109 ; R13 := R13["StatColorSet"]
641 [-]: TEST      R13 1        ; if R13 then PC := 674
642 [-]: JMP       674          ; PC := 674
643 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
644 [-]: SETTABLE  R13 K109 K28 ; R13["StatColorSet"] := true
645 [-]: GETGLOBAL R13 K1       ; R13 := 0xae91e43b
646 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0xf64b7262]
647 [-]: MOVE      R15 R1       ; R15 := R1
648 [-]: LOADK     R16 K110     ; R16 := "StatName.Arrow"
649 [-]: CONST     R17 9        ; R17 := 9.000000
650 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mColor"]
651 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
652 [-]: GETGLOBAL R13 K1       ; R13 := 0xae91e43b
653 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13[0xc0a3774b]
654 [-]: MOVE      R15 R1       ; R15 := R1
655 [-]: LOADK     R16 K111     ; R16 := "StatName.Name.Tf"
656 [-]: CONST     R17 75       ; R17 := 75.000000
657 [-]: LOADKB    R18 1 0      ; R18 := true
658 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
659 [-]: GETGLOBAL R13 K1       ; R13 := 0xae91e43b
660 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0xf64b7262]
661 [-]: MOVE      R15 R1       ; R15 := R1
662 [-]: LOADK     R16 K111     ; R16 := "StatName.Name.Tf"
663 [-]: CONST     R17 36       ; R17 := 36.000000
664 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mColor"]
665 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
666 [-]: GETGLOBAL R13 K1       ; R13 := 0xae91e43b
667 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0xf64b7262]
668 [-]: MOVE      R15 R1       ; R15 := R1
669 [-]: LOADK     R16 K112     ; R16 := "Desc"
670 [-]: CONST     R17 36       ; R17 := 36.000000
671 [-]: GETUPVAL  R18 U1       ; R18 := U1
672 [-]: GETTABLE  R18 R18 K84  ; R18 := R18["Text"]
673 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
674 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
675 [-]: GETTABLE  R13 R13 K113 ; R13 := R13["StatNameTag"]
676 [-]: EQ        1 R13 R12    ; if R13 == R12 then PC := 701
677 [-]: JMP       701          ; PC := 701
678 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
679 [-]: SETTABLE  R13 K113 R12 ; R13["StatNameTag"] := R12
680 [-]: GETGLOBAL R13 K114     ; R13 := 0x603636ad
681 [-]: MOVE      R14 R12      ; R14 := R12
682 [-]: LOADKB    R15 1 0      ; R15 := true
683 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
684 [-]: MOVE      R12 R13      ; R12 := R13
685 [-]: GETGLOBAL R13 K1       ; R13 := 0xae91e43b
686 [-]: SELF      R13 R13 K115 ; R14 := R13; R13 := R13[0xe261aa96]
687 [-]: MOVE      R15 R1       ; R15 := R1
688 [-]: LOADK     R16 K111     ; R16 := "StatName.Name.Tf"
689 [-]: CONST     R17 29       ; R17 := 29.000000
690 [-]: MOVE      R18 R12      ; R18 := R12
691 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
692 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
693 [-]: GETGLOBAL R14 K1       ; R14 := 0xae91e43b
694 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0x91a24e4b]
695 [-]: MOVE      R16 R1       ; R16 := R1
696 [-]: LOADK     R17 K117     ; R17 := ".StatName.Name.Tf"
697 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
698 [-]: CONST     R17 33       ; R17 := 33.000000
699 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
700 [-]: SETTABLE  R13 K116 R14 ; R13["StatTextWidth"] := R14
701 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
702 [-]: GETTABLE  R13 R13 K116 ; R13 := R13["StatTextWidth"]
703 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
704 [-]: MOVE      R15 R13      ; R15 := R13
705 [-]: CALL      R14 2 2      ; R14 := R14(R15)
706 [-]: TEST      R14 0        ; if not R14 then PC := 709
707 [-]: JMP       709          ; PC := 709
708 [-]: CONST     R13 5        ; R13 := 5.000000
709 [-]: GETTABLE  R14 R0 K118  ; R14 := R0["mIndex"]
710 [-]: GETGLOBAL R15 K73      ; R15 := 0x5bced4c4
711 [-]: GETTABLE  R15 R15 K119 ; R15 := R15[0x55f27c30]
712 [-]: GETUPVAL  R16 U2       ; R16 := U2
713 [-]: GETTABLE  R16 R16 K120 ; R16 := R16["mScroll"]
714 [-]: CALL      R15 2 2      ; R15 := R15(R16)
715 [-]: GETGLOBAL R16 K73      ; R16 := 0x5bced4c4
716 [-]: GETTABLE  R16 R16 K119 ; R16 := R16[0x55f27c30]
717 [-]: GETUPVAL  R17 U2       ; R17 := U2
718 [-]: GETTABLE  R17 R17 K121 ; R17 := R17["mColumns"]
719 [-]: CALL      R16 2 2      ; R16 := R16(R17)
720 [-]: MOD       R15 R15 R16  ; R15 := R15 % R16
721 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
722 [-]: ADD       R14 R14 K107 ; R14 := R14 + 1.000000
723 [-]: GETUPVAL  R15 U2       ; R15 := U2
724 [-]: GETTABLE  R15 R15 K121 ; R15 := R15["mColumns"]
725 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 729
726 [-]: JMP       729          ; PC := 729
727 [-]: CONST     R13 5        ; R13 := 5.000000
728 [-]: JMP       734          ; PC := 734
729 [-]: EQ        0 R14 K107   ; if R14 ~= 1.000000 then PC := 733
730 [-]: JMP       733          ; PC := 733
731 [-]: SUB       R13 R13 K63  ; R13 := R13 - 5.000000
732 [-]: JMP       734          ; PC := 734
733 [-]: DIV       R13 R13 K54  ; R13 := R13 / 2.000000
734 [-]: GETUPVAL  R15 U2       ; R15 := U2
735 [-]: GETTABLE  R15 R15 K122 ; R15 := R15["mOrigStatEffectNameXPos"]
736 [-]: SUB       R15 R15 R13  ; R15 := R15 - R13
737 [-]: GETTABLE  R16 R0 K4    ; R16 := R0["Change"]
738 [-]: GETTABLE  R16 R16 K123 ; R16 := R16["StatNameX"]
739 [-]: EQ        1 R16 R15    ; if R16 == R15 then PC := 750
740 [-]: JMP       750          ; PC := 750
741 [-]: GETGLOBAL R16 K1       ; R16 := 0xae91e43b
742 [-]: SELF      R16 R16 K22  ; R17 := R16; R16 := R16[0xf64b7262]
743 [-]: MOVE      R18 R1       ; R18 := R1
744 [-]: LOADK     R19 K124     ; R19 := "StatName.Name"
745 [-]: CONST     R20 0        ; R20 := 0.000000
746 [-]: MOVE      R21 R15      ; R21 := R15
747 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
748 [-]: GETTABLE  R16 R0 K4    ; R16 := R0["Change"]
749 [-]: SETTABLE  R16 K123 R15 ; R16["StatNameX"] := R15
750 [-]: GETTABLE  R16 R0 K125  ; R16 := R0["mHasBeenDrawn"]
751 [-]: EQ        1 R16 K3     ; if R16 == nil then PC := 756
752 [-]: JMP       756          ; PC := 756
753 [-]: GETTABLE  R16 R0 K125  ; R16 := R0["mHasBeenDrawn"]
754 [-]: TEST      R16 1        ; if R16 then PC := 761
755 [-]: JMP       761          ; PC := 761
756 [-]: GETUPVAL  R16 U2       ; R16 := U2
757 [-]: SELF      R16 R16 K126 ; R17 := R16; R16 := R16[0xf8caf39e]
758 [-]: MOVE      R18 R0       ; R18 := R0
759 [-]: CALL      R16 3 1      ; R16(R17,R18)
760 [-]: SETTABLE  R0 K125 K28  ; R0["mHasBeenDrawn"] := true
761 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5062
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x008ed227]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETUPVAL  R0 U2        ; R0 := U2
 17 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xea061e98]
 18 [-]: CLOSURE   R2 0         ; R2 := closure(Function #129.1)
 19 [-]: CALL      R0 3 1       ; R0(R1,R2)
 20 [-]: GETUPVAL  R0 U2        ; R0 := U2
 21 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x71e9ac81]
 22 [-]: LOADNIL   R2 R2        ; R2 := nil
 23 [-]: LOADKB    R3 1 0       ; R3 := true
 24 [-]: LOADKB    R4 1 0       ; R4 := true
 25 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 26 [-]: RETURN    R0 1         ; return 


; Function #129.1:
;
; Name:            
; Defined at line: 5071
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mColor"] := nil
  2 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Change"]
  3 [-]: SETTABLE  R1 K3 K4     ; R1["IconColorSet"] := false
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Change"]
  5 [-]: SETTABLE  R1 K5 K4     ; R1["StatColorSet"] := false
  6 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5080
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: SETTABLE  R4 K0 R1     ; R4["Icon"] := R1
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
  5 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0x42b04007]
  6 [-]: MOVE      R7 R0        ; R7 := R0
  7 [-]: LOADKB    R8 1 0       ; R8 := true
  8 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
  9 [-]: SETTABLE  R4 K1 R5     ; R4["Message"] := R5
 10 [-]: GETUPVAL  R4 U0        ; R4 := U0
 11 [-]: SETTABLE  R4 K4 R2     ; R4["IconSize"] := R2
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: SETTABLE  R4 K5 R3     ; R4["Tint"] := R3
 14 [-]: GETUPVAL  R4 U0        ; R4 := U0
 15 [-]: SETTABLE  R4 K6 K7     ; R4["UpdateOverrides"] := true
 16 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 5088
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xaade900e]
  3 [-]: LOADK     R3 K2        ; R3 := "MiniMapContainer.VoidTearProgress"
  4 [-]: CONST     R4 11        ; R4 := 11.000000
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x67bc869f]
  9 [-]: LOADK     R3 K2        ; R3 := "MiniMapContainer.VoidTearProgress"
 10 [-]: CONST     R4 10        ; R4 := 10.000000
 11 [-]: GETUPVAL  R5 U0        ; R5 := U0
 12 [-]: GETTABLE  R5 R5 K4     ; R5 := R5[0x06d055f9]
 13 [-]: MOVE      R6 R0        ; R6 := R0
 14 [-]: CONST     R7 100       ; R7 := 100.000000
 15 [-]: CONST     R8 0         ; R8 := 0.000000
 16 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 17 [-]: CALL      R1 0 1       ; R1(R2,...)
 18 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 5093
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x06d055f9]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
  5 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0x91a24e4b]
  6 [-]: LOADK     R6 K3        ; R6 := "MiniMapContainer.MissionCountdown"
  7 [-]: CONST     R7 1         ; R7 := 1.000000
  8 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  9 [-]: CONST     R5 0         ; R5 := 0.000000
 10 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 11 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 12 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x67bc869f]
 13 [-]: LOADK     R5 K3        ; R5 := "MiniMapContainer.MissionCountdown"
 14 [-]: CONST     R6 1         ; R6 := 1.000000
 15 [-]: ADD       R7 R2 R0     ; R7 := R2 + R0
 16 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 17 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 5098
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x6c97a788
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x48b81819]
  3 [-]: CALL      R3 1 2       ; R3 := R3()
  4 [-]: SETTABLE  R3 K2 R0     ; R3["mTitle"] := R0
  5 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
  6 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: LOADKB    R7 1 0       ; R7 := true
  9 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 10 [-]: SETTABLE  R3 K3 R4     ; R3["mDescription"] := R4
 11 [-]: SETTABLE  R3 K6 R2     ; R3["mItem"] := R2
 12 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x1a8d3500]
 19 [-]: MOVE      R6 R3        ; R6 := R3
 20 [-]: CALL      R4 3 1       ; R4(R5,R6)
 21 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 5110
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 R0     ; R1["Enabled"] := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 5114
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
  3 [-]: LOADK     R4 K2        ; R4 := "AbilityPanel.Ability"
  4 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
  5 [-]: ADD       R6 R0 K4     ; R6 := R0 + 1.000000
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  8 [-]: LOADK     R5 K5        ; R5 := "ActiveAnim"
  9 [-]: CONST     R6 11        ; R6 := 11.000000
 10 [-]: MOVE      R7 R1        ; R7 := R1
 11 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 12 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 5118
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2[0x71ddff47]
  3 [-]: SUB       R4 R0 K1     ; R4 := R0 - 1.000000
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 5122
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2[0x82675750]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 5126
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xe72d2edb
  2 [-]: EQ        1 R3 K2      ; if R3 == 0.000000 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETGLOBAL R3 K0        ; R3 := 0xe72d2edb
  5 [-]: EQ        1 R3 K3      ; if R3 == 4.000000 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 74
 12 [-]: JMP       74           ; PC := 74
 13 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 14 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x5b0290d2]
 15 [-]: LOADK     R5 K7        ; R5 := "AbilityPanel"
 16 [-]: CONST     R6 11        ; R6 := 11.000000
 17 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 18 [-]: TEST      R3 0         ; if not R3 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 21 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x91a24e4b]
 22 [-]: LOADK     R5 K7        ; R5 := "AbilityPanel"
 23 [-]: CONST     R6 10        ; R6 := 10.000000
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: LT        1 K2 R3      ; if 0.000000 < R3 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 28
 28 [-]: LOADKB    R3 1 0       ; R3 := true
 29 [-]: TEST      R3 0         ; if not R3 then PC := 74
 30 [-]: JMP       74           ; PC := 74
 31 [-]: GETUPVAL  R4 U0        ; R4 := U0
 32 [-]: GETTABLE  R4 R4 K9     ; R4 := R4[0xb5be5d4a]
 33 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 34 [-]: LOADK     R6 K10       ; R6 := "AbilityPanel.Ability"
 35 [-]: MOVE      R7 R0        ; R7 := R0
 36 [-]: LOADK     R8 K11       ; R8 := ".Icon"
 37 [-]: CONCAT    R6 R6 R8     ; R6 := R6 .. R7 .. R8
 38 [-]: LOADKB    R7 1 0       ; R7 := true
 39 [-]: CALL      R4 4 3       ; R4,R5 := R4(R5,R6,R7)
 40 [-]: GETUPVAL  R6 U1        ; R6 := U1
 41 [-]: GETUPVAL  R7 U0        ; R7 := U0
 42 [-]: GETTABLE  R7 R7 K12    ; R7 := R7[0x5a22d251]
 43 [-]: GETGLOBAL R8 K5        ; R8 := 0xae91e43b
 44 [-]: MOVE      R9 R1        ; R9 := R1
 45 [-]: MOVE      R10 R4       ; R10 := R4
 46 [-]: MOVE      R11 R5       ; R11 := R5
 47 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 48 [-]: SETTABLE  R6 R0 R7     ; R6[R0] := R7
 49 [-]: TEST      R2 1         ; if R2 then PC := 74
 50 [-]: JMP       74           ; PC := 74
 51 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 52 [-]: GETUPVAL  R7 U1        ; R7 := U1
 53 [-]: GETTABLE  R7 R7 R0     ; R7 := R7[R0]
 54 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 55 [-]: TEST      R6 1         ; if R6 then PC := 74
 56 [-]: JMP       74           ; PC := 74
 57 [-]: GETUPVAL  R6 U1        ; R6 := U1
 58 [-]: GETTABLE  R6 R6 R0     ; R6 := R6[R0]
 59 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xf2deaf69]
 60 [-]: GETGLOBAL R8 K14       ; R8 := gParticleSysType
 61 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 62 [-]: TEST      R6 0         ; if not R6 then PC := 74
 63 [-]: JMP       74           ; PC := 74
 64 [-]: GETGLOBAL R6 K15       ; R6 := 0x60130201
 65 [-]: GETUPVAL  R7 U2        ; R7 := U2
 66 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["UnselectedAbility"]
 67 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 68 [-]: GETUPVAL  R7 U1        ; R7 := U1
 69 [-]: GETTABLE  R7 R7 R0     ; R7 := R7[R0]
 70 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0x8feccd8b]
 71 [-]: MOVE      R9 R6        ; R9 := R6
 72 [-]: MOVE      R10 R6       ; R10 := R6
 73 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 74 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 5147
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R1 K0      ; if R1 ~= "true" then PC := 20
  2 [-]: JMP       20           ; PC := 20
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x03f57322
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: MOVE      R0 R2        ; R0 := R2
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x208bb2bc
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: LE        0 K4 R0      ; if 1.000000 > R0 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: LE        0 R0 K5      ; if R0 > 4.000000 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: GETGLOBAL R4 K3        ; R4 := 0x208bb2bc
 19 [-]: CALL      R2 3 1       ; R2(R3,R4)
 20 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 5156
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 R0 R1     ; R2[R0] := R1
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["HudNonQueuedFunctions"]
  5 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R2 K0        ; R2 := _T
  8 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  9 [-]: SETTABLE  R2 K1 R3     ; R2["HudNonQueuedFunctions"] := R3
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x33bdd652
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x23d5322f]
 12 [-]: GETGLOBAL R3 K0        ; R3 := _T
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["HudNonQueuedFunctions"]
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: CALL      R2 3 1       ; R2(R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 5166
; #Upvalues:       30
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #141.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: SETTABLE  R0 K1 R1     ; R0["ShowWeaponPanel"] := R1
  6 [-]: GETGLOBAL R0 K0        ; R0 := _T
  7 [-]: CLOSURE   R1 1         ; R1 := closure(Function #141.2)
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SETTABLE  R0 K2 R1     ; R0["HideWeaponPanel"] := R1
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: CLOSURE   R1 2         ; R1 := closure(Function #141.3)
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: GETUPVAL  R0 U2        ; R0 := U2
 15 [-]: SETTABLE  R0 K3 R1     ; R0["ShowAbilityPanel"] := R1
 16 [-]: GETGLOBAL R0 K0        ; R0 := _T
 17 [-]: CLOSURE   R1 3         ; R1 := closure(Function #141.4)
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: SETTABLE  R0 K4 R1     ; R0["HideAbilityPanel"] := R1
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: CLOSURE   R1 4         ; R1 := closure(Function #141.5)
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETUPVAL  R0 U3        ; R0 := U3
 25 [-]: SETTABLE  R0 K5 R1     ; R0["SetEnergyVisibility"] := R1
 26 [-]: GETGLOBAL R0 K0        ; R0 := _T
 27 [-]: CLOSURE   R1 5         ; R1 := closure(Function #141.6)
 28 [-]: GETUPVAL  R0 U0        ; R0 := U0
 29 [-]: GETUPVAL  R0 U4        ; R0 := U4
 30 [-]: SETTABLE  R0 K6 R1     ; R0["SetFocusTimer"] := R1
 31 [-]: GETGLOBAL R0 K0        ; R0 := _T
 32 [-]: CLOSURE   R1 6         ; R1 := closure(Function #141.7)
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: GETUPVAL  R0 U5        ; R0 := U5
 35 [-]: SETTABLE  R0 K7 R1     ; R0["AddLogMessage"] := R1
 36 [-]: GETGLOBAL R0 K0        ; R0 := _T
 37 [-]: CLOSURE   R1 7         ; R1 := closure(Function #141.8)
 38 [-]: GETUPVAL  R0 U0        ; R0 := U0
 39 [-]: GETUPVAL  R0 U6        ; R0 := U6
 40 [-]: SETTABLE  R0 K8 R1     ; R0["AddPvpKillMessage"] := R1
 41 [-]: GETGLOBAL R0 K0        ; R0 := _T
 42 [-]: CLOSURE   R1 8         ; R1 := closure(Function #141.9)
 43 [-]: GETUPVAL  R0 U0        ; R0 := U0
 44 [-]: GETUPVAL  R0 U7        ; R0 := U7
 45 [-]: SETTABLE  R0 K9 R1     ; R0["ShowImpactMessage"] := R1
 46 [-]: GETGLOBAL R0 K0        ; R0 := _T
 47 [-]: CLOSURE   R1 9         ; R1 := closure(Function #141.10)
 48 [-]: GETUPVAL  R0 U0        ; R0 := U0
 49 [-]: GETUPVAL  R0 U8        ; R0 := U8
 50 [-]: SETTABLE  R0 K10 R1    ; R0["HideImpactMessage"] := R1
 51 [-]: GETGLOBAL R0 K0        ; R0 := _T
 52 [-]: CLOSURE   R1 10        ; R1 := closure(Function #141.11)
 53 [-]: GETUPVAL  R0 U0        ; R0 := U0
 54 [-]: GETUPVAL  R0 U9        ; R0 := U9
 55 [-]: SETTABLE  R0 K11 R1    ; R0["SetImpactMessageDeltaY"] := R1
 56 [-]: GETGLOBAL R0 K0        ; R0 := _T
 57 [-]: CLOSURE   R1 11        ; R1 := closure(Function #141.12)
 58 [-]: GETUPVAL  R0 U0        ; R0 := U0
 59 [-]: GETUPVAL  R0 U10       ; R0 := U10
 60 [-]: SETTABLE  R0 K12 R1    ; R0["ToggleLastGaspMessage"] := R1
 61 [-]: GETGLOBAL R0 K0        ; R0 := _T
 62 [-]: CLOSURE   R1 12        ; R1 := closure(Function #141.13)
 63 [-]: GETUPVAL  R0 U0        ; R0 := U0
 64 [-]: GETUPVAL  R0 U11       ; R0 := U11
 65 [-]: SETTABLE  R0 K13 R1    ; R0["VoidTearOverride"] := R1
 66 [-]: GETGLOBAL R0 K0        ; R0 := _T
 67 [-]: CLOSURE   R1 13        ; R1 := closure(Function #141.14)
 68 [-]: GETUPVAL  R0 U0        ; R0 := U0
 69 [-]: GETUPVAL  R0 U12       ; R0 := U12
 70 [-]: SETTABLE  R0 K14 R1    ; R0["SetVoidTearVisible"] := R1
 71 [-]: GETGLOBAL R0 K0        ; R0 := _T
 72 [-]: CLOSURE   R1 14        ; R1 := closure(Function #141.15)
 73 [-]: GETUPVAL  R0 U0        ; R0 := U0
 74 [-]: GETUPVAL  R0 U13       ; R0 := U13
 75 [-]: SETTABLE  R0 K15 R1    ; R0["MissionCountdownApplyOffsetY"] := R1
 76 [-]: GETGLOBAL R0 K0        ; R0 := _T
 77 [-]: CLOSURE   R1 15        ; R1 := closure(Function #141.16)
 78 [-]: GETUPVAL  R0 U0        ; R0 := U0
 79 [-]: GETUPVAL  R0 U14       ; R0 := U14
 80 [-]: SETTABLE  R0 K16 R1    ; R0["AddLevelUp"] := R1
 81 [-]: GETGLOBAL R0 K0        ; R0 := _T
 82 [-]: CLOSURE   R1 16        ; R1 := closure(Function #141.17)
 83 [-]: GETUPVAL  R0 U0        ; R0 := U0
 84 [-]: GETUPVAL  R0 U15       ; R0 := U15
 85 [-]: SETTABLE  R0 K17 R1    ; R0["SetHudPartialFade"] := R1
 86 [-]: GETGLOBAL R0 K0        ; R0 := _T
 87 [-]: CLOSURE   R1 17        ; R1 := closure(Function #141.18)
 88 [-]: GETUPVAL  R0 U0        ; R0 := U0
 89 [-]: GETUPVAL  R0 U16       ; R0 := U16
 90 [-]: SETTABLE  R0 K18 R1    ; R0["SetAbilityActiveAnim"] := R1
 91 [-]: GETGLOBAL R0 K0        ; R0 := _T
 92 [-]: CLOSURE   R1 18        ; R1 := closure(Function #141.19)
 93 [-]: GETUPVAL  R0 U0        ; R0 := U0
 94 [-]: GETUPVAL  R0 U17       ; R0 := U17
 95 [-]: SETTABLE  R0 K19 R1    ; R0["SetAbilityCastable"] := R1
 96 [-]: GETGLOBAL R0 K0        ; R0 := _T
 97 [-]: CLOSURE   R1 19        ; R1 := closure(Function #141.20)
 98 [-]: GETUPVAL  R0 U0        ; R0 := U0
 99 [-]: GETUPVAL  R0 U18       ; R0 := U18
100 [-]: SETTABLE  R0 K20 R1    ; R0["ForceHideMiniMap"] := R1
101 [-]: GETGLOBAL R0 K0        ; R0 := _T
102 [-]: CLOSURE   R1 20        ; R1 := closure(Function #141.21)
103 [-]: GETUPVAL  R0 U0        ; R0 := U0
104 [-]: GETUPVAL  R0 U19       ; R0 := U19
105 [-]: SETTABLE  R0 K21 R1    ; R0["ForceRestoreMiniMap"] := R1
106 [-]: GETGLOBAL R0 K0        ; R0 := _T
107 [-]: CLOSURE   R1 21        ; R1 := closure(Function #141.22)
108 [-]: GETUPVAL  R0 U0        ; R0 := U0
109 [-]: GETUPVAL  R0 U20       ; R0 := U20
110 [-]: SETTABLE  R0 K22 R1    ; R0["RemoveHudTracker"] := R1
111 [-]: GETGLOBAL R0 K0        ; R0 := _T
112 [-]: CLOSURE   R1 22        ; R1 := closure(Function #141.23)
113 [-]: GETUPVAL  R0 U0        ; R0 := U0
114 [-]: GETUPVAL  R0 U21       ; R0 := U21
115 [-]: SETTABLE  R0 K23 R1    ; R0["SetAbilityCharge"] := R1
116 [-]: GETGLOBAL R0 K0        ; R0 := _T
117 [-]: CLOSURE   R1 23        ; R1 := closure(Function #141.24)
118 [-]: GETUPVAL  R0 U0        ; R0 := U0
119 [-]: GETUPVAL  R0 U22       ; R0 := U22
120 [-]: SETTABLE  R0 K24 R1    ; R0["PulseAbilityFx"] := R1
121 [-]: GETUPVAL  R0 U23       ; R0 := U23
122 [-]: LOADK     R1 K25       ; R1 := "SetAbilityTimer"
123 [-]: GETUPVAL  R2 U24       ; R2 := U24
124 [-]: CALL      R0 3 1       ; R0(R1,R2)
125 [-]: GETUPVAL  R0 U23       ; R0 := U23
126 [-]: LOADK     R1 K26       ; R1 := "AddAbilityTimer"
127 [-]: GETUPVAL  R2 U25       ; R2 := U25
128 [-]: CALL      R0 3 1       ; R0(R1,R2)
129 [-]: GETUPVAL  R0 U23       ; R0 := U23
130 [-]: LOADK     R1 K27       ; R1 := "HUD_GetAnchorMgr"
131 [-]: CLOSURE   R2 24        ; R2 := closure(Function #141.25)
132 [-]: GETUPVAL  R0 U26       ; R0 := U26
133 [-]: CALL      R0 3 1       ; R0(R1,R2)
134 [-]: GETUPVAL  R0 U23       ; R0 := U23
135 [-]: LOADK     R1 K28       ; R1 := "GetHudCustomizationColor"
136 [-]: GETUPVAL  R2 U27       ; R2 := U27
137 [-]: CALL      R0 3 1       ; R0(R1,R2)
138 [-]: GETUPVAL  R0 U23       ; R0 := U23
139 [-]: LOADK     R1 K29       ; R1 := "AddHudTracker"
140 [-]: GETUPVAL  R2 U28       ; R2 := U28
141 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["AddHudTracker"]
142 [-]: CALL      R0 3 1       ; R0(R1,R2)
143 [-]: GETUPVAL  R0 U23       ; R0 := U23
144 [-]: LOADK     R1 K30       ; R1 := "GetHudTracker"
145 [-]: GETUPVAL  R2 U28       ; R2 := U28
146 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["GetHudTracker"]
147 [-]: CALL      R0 3 1       ; R0(R1,R2)
148 [-]: GETUPVAL  R0 U23       ; R0 := U23
149 [-]: LOADK     R1 K31       ; R1 := "GetHudScale"
150 [-]: CLOSURE   R2 25        ; R2 := closure(Function #141.26)
151 [-]: GETUPVAL  R0 U29       ; R0 := U29
152 [-]: CALL      R0 3 1       ; R0(R1,R2)
153 [-]: GETGLOBAL R0 K32       ; R0 := 0x3d106989
154 [-]: LOADK     R1 K33       ; R1 := "HudRedux:RegisterCallbacks complete"
155 [-]: CALL      R0 2 1       ; R0(R1)
156 [-]: RETURN    R0 1         ; return 


; Function #141.1:
;
; Name:            
; Defined at line: 5167
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LOADKB    R3 1 0       ; R3 := true
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #141.2:
;
; Name:            
; Defined at line: 5168
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LOADKB    R3 0 0       ; R3 := false
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #141.3:
;
; Name:            
; Defined at line: 5169
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LOADKB    R3 1 0       ; R3 := true
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #141.4:
;
; Name:            
; Defined at line: 5170
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LOADKB    R3 0 0       ; R3 := false
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #141.5:
;
; Name:            
; Defined at line: 5171
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.6:
;
; Name:            
; Defined at line: 5173
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.7:
;
; Name:            
; Defined at line: 5175
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.8:
;
; Name:            
; Defined at line: 5176
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.9:
;
; Name:            
; Defined at line: 5178
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.10:
;
; Name:            
; Defined at line: 5179
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.11:
;
; Name:            
; Defined at line: 5180
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.12:
;
; Name:            
; Defined at line: 5182
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.13:
;
; Name:            
; Defined at line: 5184
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.14:
;
; Name:            
; Defined at line: 5185
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.15:
;
; Name:            
; Defined at line: 5187
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.16:
;
; Name:            
; Defined at line: 5188
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.17:
;
; Name:            
; Defined at line: 5189
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.18:
;
; Name:            
; Defined at line: 5191
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.19:
;
; Name:            
; Defined at line: 5192
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.20:
;
; Name:            
; Defined at line: 5194
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: LOADKB    R2 1 0       ; R2 := true
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.21:
;
; Name:            
; Defined at line: 5195
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: LOADKB    R2 1 0       ; R2 := true
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.22:
;
; Name:            
; Defined at line: 5197
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.23:
;
; Name:            
; Defined at line: 5199
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.24:
;
; Name:            
; Defined at line: 5201
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #141.25:
;
; Name:            
; Defined at line: 5206
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #141.26:
;
; Name:            
; Defined at line: 5210
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["HudScale"]
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 5215
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x5d10207d]
  4 [-]: CONST     R2 2         ; R2 := 2.000000
  5 [-]: LOADKB    R3 1 0       ; R3 := true
  6 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  7 [-]: SETTABLE  R0 K0 R1     ; R0["Background1"] := R1
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x5d10207d]
 11 [-]: CONST     R2 9         ; R2 := 9.000000
 12 [-]: LOADKB    R3 1 0       ; R3 := true
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: SETTABLE  R0 K3 R1     ; R0["FloatingContent"] := R1
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x5d10207d]
 18 [-]: CONST     R2 10        ; R2 := 10.000000
 19 [-]: LOADKB    R3 1 0       ; R3 := true
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: SETTABLE  R0 K4 R1     ; R0["FloatingContentHighlight"] := R1
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x5d10207d]
 25 [-]: CONST     R2 12        ; R2 := 12.000000
 26 [-]: LOADKB    R3 1 0       ; R3 := true
 27 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 28 [-]: SETTABLE  R0 K5 R1     ; R0["Negative"] := R1
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: GETUPVAL  R1 U1        ; R1 := U1
 31 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x5d10207d]
 32 [-]: CONST     R2 6         ; R2 := 6.000000
 33 [-]: LOADKB    R3 1 0       ; R3 := true
 34 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 35 [-]: SETTABLE  R0 K6 R1     ; R0["Content"] := R1
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETUPVAL  R1 U1        ; R1 := U1
 38 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x5d10207d]
 39 [-]: CONST     R2 0         ; R2 := 0.000000
 40 [-]: LOADKB    R3 1 0       ; R3 := true
 41 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 42 [-]: SETTABLE  R0 K7 R1     ; R0["Backer"] := R1
 43 [-]: GETUPVAL  R0 U0        ; R0 := U0
 44 [-]: GETUPVAL  R1 U1        ; R1 := U1
 45 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x5d10207d]
 46 [-]: CONST     R2 1         ; R2 := 1.000000
 47 [-]: LOADKB    R3 1 0       ; R3 := true
 48 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 49 [-]: SETTABLE  R0 K8 R1     ; R0["BackerHighlight"] := R1
 50 [-]: GETUPVAL  R0 U0        ; R0 := U0
 51 [-]: GETUPVAL  R1 U2        ; R1 := U2
 52 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0x9f57dd7d]
 53 [-]: GETUPVAL  R2 U0        ; R2 := U0
 54 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FloatingContent"]
 55 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 56 [-]: SETTABLE  R0 K9 R1     ; R0["FloatingContentHex"] := R1
 57 [-]: GETUPVAL  R0 U0        ; R0 := U0
 58 [-]: GETUPVAL  R1 U2        ; R1 := U2
 59 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0x9f57dd7d]
 60 [-]: GETUPVAL  R2 U0        ; R2 := U0
 61 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["FloatingContentHighlight"]
 62 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 63 [-]: SETTABLE  R0 K11 R1    ; R0["FloatingContentHighlightHex"] := R1
 64 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
 65 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 66 [-]: LOADK     R2 K14       ; R2 := "RevivePanel.HoldProgress.Backer"
 67 [-]: CONST     R3 9         ; R3 := 9.000000
 68 [-]: GETUPVAL  R4 U0        ; R4 := U0
 69 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FloatingContent"]
 70 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 71 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
 72 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 73 [-]: LOADK     R2 K14       ; R2 := "RevivePanel.HoldProgress.Backer"
 74 [-]: CONST     R3 10        ; R3 := 10.000000
 75 [-]: CONST     R4 40        ; R4 := 40.000000
 76 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 77 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
 78 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 79 [-]: LOADK     R2 K15       ; R2 := "RevivePanel.HoldProgress.Diamond"
 80 [-]: CONST     R3 9         ; R3 := 9.000000
 81 [-]: GETUPVAL  R4 U0        ; R4 := U0
 82 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Background1"]
 83 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 84 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
 85 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 86 [-]: LOADK     R2 K15       ; R2 := "RevivePanel.HoldProgress.Diamond"
 87 [-]: CONST     R3 10        ; R3 := 10.000000
 88 [-]: CONST     R4 80        ; R4 := 80.000000
 89 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 90 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
 91 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 92 [-]: LOADK     R2 K16       ; R2 := "RevivePanel.Shadow"
 93 [-]: CONST     R3 9         ; R3 := 9.000000
 94 [-]: GETUPVAL  R4 U0        ; R4 := U0
 95 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Background1"]
 96 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 97 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
 98 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
 99 [-]: LOADK     R2 K17       ; R2 := "RevivePanel.RevivesLeft"
100 [-]: CONST     R3 36        ; R3 := 36.000000
101 [-]: GETUPVAL  R4 U0        ; R4 := U0
102 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["FloatingContentHighlight"]
103 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
104 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
105 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
106 [-]: LOADK     R2 K18       ; R2 := "RevivePanel.Callout"
107 [-]: CONST     R3 9         ; R3 := 9.000000
108 [-]: GETUPVAL  R4 U0        ; R4 := U0
109 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FloatingContent"]
110 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
111 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
112 [-]: SELF      R0 R0 K19    ; R1 := R0; R0 := R0[0xaade900e]
113 [-]: LOADK     R2 K17       ; R2 := "RevivePanel.RevivesLeft"
114 [-]: CONST     R3 11        ; R3 := 11.000000
115 [-]: LOADKB    R4 1 0       ; R4 := true
116 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
117 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
118 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
119 [-]: LOADK     R2 K20       ; R2 := "RevivePanel.HoldProgress.Fill"
120 [-]: CONST     R3 9         ; R3 := 9.000000
121 [-]: GETUPVAL  R4 U0        ; R4 := U0
122 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["FloatingContentHighlight"]
123 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
124 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
125 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
126 [-]: LOADK     R2 K21       ; R2 := "RevivePanel.HoldProgress.IconContainer.Icon"
127 [-]: CONST     R3 9         ; R3 := 9.000000
128 [-]: GETUPVAL  R4 U0        ; R4 := U0
129 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["FloatingContentHighlight"]
130 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
131 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
132 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
133 [-]: LOADK     R2 K22       ; R2 := "RevivePanel.HoldProgress.IconContainer.Blur"
134 [-]: CONST     R3 9         ; R3 := 9.000000
135 [-]: GETUPVAL  R4 U0        ; R4 := U0
136 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["FloatingContentHighlight"]
137 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
138 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
139 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
140 [-]: LOADK     R2 K23       ; R2 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
141 [-]: CONST     R3 9         ; R3 := 9.000000
142 [-]: GETUPVAL  R4 U0        ; R4 := U0
143 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Background1"]
144 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
145 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
146 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
147 [-]: LOADK     R2 K23       ; R2 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
148 [-]: CONST     R3 10        ; R3 := 10.000000
149 [-]: CONST     R4 80        ; R4 := 80.000000
150 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
151 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
152 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
153 [-]: LOADK     R2 K24       ; R2 := "LastGasp.DecoLines"
154 [-]: CONST     R3 9         ; R3 := 9.000000
155 [-]: GETUPVAL  R4 U0        ; R4 := U0
156 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["BackerHighlight"]
157 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
158 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
159 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
160 [-]: LOADK     R2 K25       ; R2 := "LastGasp.DiamondBackerFill"
161 [-]: CONST     R3 9         ; R3 := 9.000000
162 [-]: GETUPVAL  R4 U0        ; R4 := U0
163 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Background1"]
164 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
165 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
166 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
167 [-]: LOADK     R2 K26       ; R2 := "LastGasp.DiamondBackerOutline"
168 [-]: CONST     R3 9         ; R3 := 9.000000
169 [-]: GETUPVAL  R4 U0        ; R4 := U0
170 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["Backer"]
171 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
172 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
173 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
174 [-]: LOADK     R2 K27       ; R2 := "LastGasp.TextBackerFill"
175 [-]: CONST     R3 9         ; R3 := 9.000000
176 [-]: GETUPVAL  R4 U0        ; R4 := U0
177 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Background1"]
178 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
179 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
180 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
181 [-]: LOADK     R2 K28       ; R2 := "LastGasp.TextBackerOutline"
182 [-]: CONST     R3 9         ; R3 := 9.000000
183 [-]: GETUPVAL  R4 U0        ; R4 := U0
184 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["BackerHighlight"]
185 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
186 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
187 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
188 [-]: LOADK     R2 K29       ; R2 := "LastGasp.Label"
189 [-]: CONST     R3 36        ; R3 := 36.000000
190 [-]: GETUPVAL  R4 U0        ; R4 := U0
191 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Content"]
192 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
193 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
194 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
195 [-]: LOADK     R2 K30       ; R2 := "LastGasp.IconBacker"
196 [-]: CONST     R3 9         ; R3 := 9.000000
197 [-]: GETUPVAL  R4 U0        ; R4 := U0
198 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Background1"]
199 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
200 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
201 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
202 [-]: LOADK     R2 K31       ; R2 := "LastGasp.Icon"
203 [-]: CONST     R3 9         ; R3 := 9.000000
204 [-]: GETUPVAL  R4 U0        ; R4 := U0
205 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FloatingContent"]
206 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
207 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
208 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
209 [-]: LOADK     R2 K32       ; R2 := "LastGasp.CalloutBacker"
210 [-]: CONST     R3 9         ; R3 := 9.000000
211 [-]: GETUPVAL  R4 U0        ; R4 := U0
212 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Background1"]
213 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
214 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
215 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
216 [-]: LOADK     R2 K33       ; R2 := "LastGasp.Callout"
217 [-]: CONST     R3 36        ; R3 := 36.000000
218 [-]: GETUPVAL  R4 U0        ; R4 := U0
219 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Content"]
220 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
221 [-]: GETGLOBAL R0 K34       ; R0 := 0xe72d2edb
222 [-]: EQ        0 R0 K35     ; if R0 ~= 1.000000 then PC := 411
223 [-]: JMP       411          ; PC := 411
224 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
225 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
226 [-]: LOADK     R2 K36       ; R2 := "GrineerDeco"
227 [-]: CONST     R3 9         ; R3 := 9.000000
228 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
229 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
230 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
231 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
232 [-]: LOADK     R2 K38       ; R2 := "MiniMapContainer.MapBorders"
233 [-]: CONST     R3 9         ; R3 := 9.000000
234 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
235 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
236 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
237 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
238 [-]: LOADK     R2 K39       ; R2 := "ImpactMessage.DetailRight"
239 [-]: CONST     R3 9         ; R3 := 9.000000
240 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
241 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
242 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
243 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
244 [-]: LOADK     R2 K40       ; R2 := "ImpactMessage.DetailLeft"
245 [-]: CONST     R3 9         ; R3 := 9.000000
246 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
247 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
248 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
249 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
250 [-]: LOADK     R2 K41       ; R2 := "HealthAndShield.HeartRateBacker"
251 [-]: CONST     R3 9         ; R3 := 9.000000
252 [-]: LOADK     R4 K42       ; R4 := 11025182.000000
253 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
254 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
255 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
256 [-]: LOADK     R2 K43       ; R2 := "HealthAndShield.HealthBacker"
257 [-]: CONST     R3 9         ; R3 := 9.000000
258 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
259 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
260 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
261 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
262 [-]: LOADK     R2 K44       ; R2 := "HealthAndShield.HealthFrame"
263 [-]: CONST     R3 9         ; R3 := 9.000000
264 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
265 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
266 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
267 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
268 [-]: LOADK     R2 K45       ; R2 := "HealthAndShield.PlayerHealth"
269 [-]: CONST     R3 9         ; R3 := 9.000000
270 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
271 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
272 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
273 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
274 [-]: LOADK     R2 K47       ; R2 := "WeaponFrame.WeaponFrame"
275 [-]: CONST     R3 9         ; R3 := 9.000000
276 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
277 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
278 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
279 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
280 [-]: LOADK     R2 K48       ; R2 := "WeaponFrame.WeaponBacker"
281 [-]: CONST     R3 9         ; R3 := 9.000000
282 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
283 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
284 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
285 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
286 [-]: LOADK     R2 K49       ; R2 := "WeaponFrame.AmmoBar.Fill"
287 [-]: CONST     R3 9         ; R3 := 9.000000
288 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
289 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
290 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
291 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
292 [-]: LOADK     R2 K50       ; R2 := "WeaponFrame.AmmoBar.Bg"
293 [-]: CONST     R3 9         ; R3 := 9.000000
294 [-]: LOADK     R4 K51       ; R4 := 10197915.000000
295 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
296 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
297 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
298 [-]: LOADK     R2 K52       ; R2 := "WeaponFrame.AmmoAvailable"
299 [-]: CONST     R3 9         ; R3 := 9.000000
300 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
301 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
302 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
303 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
304 [-]: LOADK     R2 K53       ; R2 := "WeaponFrame.AmmoRemaining"
305 [-]: CONST     R3 9         ; R3 := 9.000000
306 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
307 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
308 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
309 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
310 [-]: LOADK     R2 K54       ; R2 := "GrineerAbilityPanel.GrenadeComponent.Grenade"
311 [-]: CONST     R3 9         ; R3 := 9.000000
312 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
313 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
314 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
315 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
316 [-]: LOADK     R2 K55       ; R2 := "GrineerAbilityPanel.GrenadeComponent.Pips.Pip1.Fill"
317 [-]: CONST     R3 9         ; R3 := 9.000000
318 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
319 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
320 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
321 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
322 [-]: LOADK     R2 K56       ; R2 := "GrineerAbilityPanel.GrenadeComponent.Pips.Pip2.Fill"
323 [-]: CONST     R3 9         ; R3 := 9.000000
324 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
325 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
326 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
327 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
328 [-]: LOADK     R2 K57       ; R2 := "GrineerAbilityPanel.GrenadeComponent.Pips.Pip3.Fill"
329 [-]: CONST     R3 9         ; R3 := 9.000000
330 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
331 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
332 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
333 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
334 [-]: LOADK     R2 K58       ; R2 := "GrineerAbilityPanel.GrenadeComponent.Pips.Pip4.Fill"
335 [-]: CONST     R3 9         ; R3 := 9.000000
336 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
337 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
338 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
339 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
340 [-]: LOADK     R2 K59       ; R2 := "GrineerAbilityPanel.GrenadeComponent.Glow"
341 [-]: CONST     R3 9         ; R3 := 9.000000
342 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
343 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
344 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
345 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
346 [-]: LOADK     R2 K60       ; R2 := "GrineerAbilityPanel.Ability1.Divider"
347 [-]: CONST     R3 9         ; R3 := 9.000000
348 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
349 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
350 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
351 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
352 [-]: LOADK     R2 K61       ; R2 := "GrineerAbilityPanel.Ability1.Icon"
353 [-]: CONST     R3 9         ; R3 := 9.000000
354 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
355 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
356 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
357 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
358 [-]: LOADK     R2 K62       ; R2 := "GrineerAbilityPanel.Ability1.Glow"
359 [-]: CONST     R3 9         ; R3 := 9.000000
360 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
361 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
362 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
363 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
364 [-]: LOADK     R2 K63       ; R2 := "GrineerAbilityPanel.Ability2.Divider"
365 [-]: CONST     R3 9         ; R3 := 9.000000
366 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
367 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
368 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
369 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
370 [-]: LOADK     R2 K64       ; R2 := "GrineerAbilityPanel.Ability2.Icon"
371 [-]: CONST     R3 9         ; R3 := 9.000000
372 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
373 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
374 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
375 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
376 [-]: LOADK     R2 K65       ; R2 := "GrineerAbilityPanel.Ability2.CooldownLabel"
377 [-]: CONST     R3 36        ; R3 := 36.000000
378 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
379 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
380 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
381 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
382 [-]: LOADK     R2 K66       ; R2 := "GrineerAbilityPanel.Ability2.Glow"
383 [-]: CONST     R3 9         ; R3 := 9.000000
384 [-]: LOADK     R4 K46       ; R4 := 15844670.000000
385 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
386 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
387 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
388 [-]: LOADK     R2 K67       ; R2 := "FuelComponent.Bg"
389 [-]: CONST     R3 9         ; R3 := 9.000000
390 [-]: LOADK     R4 K68       ; R4 := 14312980.000000
391 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
392 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
393 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
394 [-]: LOADK     R2 K69       ; R2 := "FuelComponent.Shadow"
395 [-]: CONST     R3 9         ; R3 := 9.000000
396 [-]: LOADK     R4 K70       ; R4 := 1315613.000000
397 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
398 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
399 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
400 [-]: LOADK     R2 K71       ; R2 := "FuelComponent.Flare.Outer"
401 [-]: CONST     R3 9         ; R3 := 9.000000
402 [-]: LOADK     R4 K72       ; R4 := 16502081.000000
403 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
404 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
405 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
406 [-]: LOADK     R2 K73       ; R2 := "SpecialAbility.CallOut"
407 [-]: CONST     R3 36        ; R3 := 36.000000
408 [-]: LOADK     R4 K37       ; R4 := 15954454.000000
409 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
410 [-]: JMP       662          ; PC := 662
411 [-]: GETGLOBAL R0 K34       ; R0 := 0xe72d2edb
412 [-]: EQ        0 R0 K74     ; if R0 ~= 3.000000 then PC := 490
413 [-]: JMP       490          ; PC := 490
414 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
415 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
416 [-]: LOADK     R2 K75       ; R2 := "TeshinDeco"
417 [-]: CONST     R3 9         ; R3 := 9.000000
418 [-]: LOADK     R4 K76       ; R4 := 8942416.000000
419 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
420 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
421 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
422 [-]: LOADK     R2 K38       ; R2 := "MiniMapContainer.MapBorders"
423 [-]: CONST     R3 9         ; R3 := 9.000000
424 [-]: LOADK     R4 K76       ; R4 := 8942416.000000
425 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
426 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
427 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
428 [-]: LOADK     R2 K44       ; R2 := "HealthAndShield.HealthFrame"
429 [-]: CONST     R3 9         ; R3 := 9.000000
430 [-]: LOADK     R4 K76       ; R4 := 8942416.000000
431 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
432 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
433 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
434 [-]: LOADK     R2 K45       ; R2 := "HealthAndShield.PlayerHealth"
435 [-]: CONST     R3 9         ; R3 := 9.000000
436 [-]: LOADK     R4 K77       ; R4 := 9150127.000000
437 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
438 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
439 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
440 [-]: LOADK     R2 K78       ; R2 := "HealthAndShield.PlayerShield"
441 [-]: CONST     R3 9         ; R3 := 9.000000
442 [-]: LOADK     R4 K79       ; R4 := 16769169.000000
443 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
444 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
445 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
446 [-]: LOADK     R2 K80       ; R2 := "HealthAndShield.HealthLeafDeco"
447 [-]: CONST     R3 9         ; R3 := 9.000000
448 [-]: LOADK     R4 K77       ; R4 := 9150127.000000
449 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
450 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
451 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
452 [-]: LOADK     R2 K81       ; R2 := "HealthAndShield.ShieldLeafDeco"
453 [-]: CONST     R3 9         ; R3 := 9.000000
454 [-]: LOADK     R4 K79       ; R4 := 16769169.000000
455 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
456 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
457 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
458 [-]: LOADK     R2 K82       ; R2 := "StancePanel.Details"
459 [-]: CONST     R3 9         ; R3 := 9.000000
460 [-]: LOADK     R4 K76       ; R4 := 8942416.000000
461 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
462 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
463 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
464 [-]: LOADK     R2 K83       ; R2 := "ReloadTimer.ReloadRing"
465 [-]: CONST     R3 10        ; R3 := 10.000000
466 [-]: CONST     R4 70        ; R4 := 70.000000
467 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
468 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
469 [-]: SELF      R0 R0 K84    ; R1 := R0; R0 := R0[0xf64b7262]
470 [-]: LOADK     R2 K85       ; R2 := "StancePanel.StanceComponent.Stance1"
471 [-]: LOADK     R3 K86       ; R3 := "IconGlow"
472 [-]: CONST     R4 9         ; R4 := 9.000000
473 [-]: LOADK     R5 K87       ; R5 := 15299384.000000
474 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
475 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
476 [-]: SELF      R0 R0 K84    ; R1 := R0; R0 := R0[0xf64b7262]
477 [-]: LOADK     R2 K88       ; R2 := "StancePanel.StanceComponent.Stance2"
478 [-]: LOADK     R3 K86       ; R3 := "IconGlow"
479 [-]: CONST     R4 9         ; R4 := 9.000000
480 [-]: LOADK     R5 K89       ; R5 := 10081506.000000
481 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
482 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
483 [-]: SELF      R0 R0 K84    ; R1 := R0; R0 := R0[0xf64b7262]
484 [-]: LOADK     R2 K90       ; R2 := "StancePanel.StanceComponent.Stance3"
485 [-]: LOADK     R3 K86       ; R3 := "IconGlow"
486 [-]: CONST     R4 9         ; R4 := 9.000000
487 [-]: LOADK     R5 K91       ; R5 := 12032498.000000
488 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
489 [-]: JMP       662          ; PC := 662
490 [-]: GETGLOBAL R0 K34       ; R0 := 0xe72d2edb
491 [-]: EQ        0 R0 K92     ; if R0 ~= 2.000000 then PC := 627
492 [-]: JMP       627          ; PC := 627
493 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
494 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
495 [-]: LOADK     R2 K93       ; R2 := "CorpusDeco"
496 [-]: CONST     R3 9         ; R3 := 9.000000
497 [-]: LOADK     R4 K94       ; R4 := 2779007.000000
498 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
499 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
500 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
501 [-]: LOADK     R2 K95       ; R2 := "Reticle"
502 [-]: CONST     R3 9         ; R3 := 9.000000
503 [-]: GETUPVAL  R4 U3        ; R4 := U3
504 [-]: GETTABLE  R4 R4 K95    ; R4 := R4["Reticle"]
505 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
506 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
507 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
508 [-]: LOADK     R2 K38       ; R2 := "MiniMapContainer.MapBorders"
509 [-]: CONST     R3 9         ; R3 := 9.000000
510 [-]: LOADK     R4 K94       ; R4 := 2779007.000000
511 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
512 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
513 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
514 [-]: LOADK     R2 K45       ; R2 := "HealthAndShield.PlayerHealth"
515 [-]: CONST     R3 9         ; R3 := 9.000000
516 [-]: LOADK     R4 K96       ; R4 := 12284689.000000
517 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
518 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
519 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
520 [-]: LOADK     R2 K78       ; R2 := "HealthAndShield.PlayerShield"
521 [-]: CONST     R3 9         ; R3 := 9.000000
522 [-]: LOADK     R4 K97       ; R4 := 65535.000000
523 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
524 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
525 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
526 [-]: LOADK     R2 K44       ; R2 := "HealthAndShield.HealthFrame"
527 [-]: CONST     R3 9         ; R3 := 9.000000
528 [-]: LOADK     R4 K94       ; R4 := 2779007.000000
529 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
530 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
531 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
532 [-]: LOADK     R2 K98       ; R2 := "HealthAndShield.HealthEquals"
533 [-]: CONST     R3 9         ; R3 := 9.000000
534 [-]: LOADK     R4 K97       ; R4 := 65535.000000
535 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
536 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
537 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
538 [-]: LOADK     R2 K48       ; R2 := "WeaponFrame.WeaponBacker"
539 [-]: CONST     R3 9         ; R3 := 9.000000
540 [-]: LOADK     R4 K94       ; R4 := 2779007.000000
541 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
542 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
543 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
544 [-]: LOADK     R2 K49       ; R2 := "WeaponFrame.AmmoBar.Fill"
545 [-]: CONST     R3 9         ; R3 := 9.000000
546 [-]: LOADK     R4 K96       ; R4 := 12284689.000000
547 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
548 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
549 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
550 [-]: LOADK     R2 K50       ; R2 := "WeaponFrame.AmmoBar.Bg"
551 [-]: CONST     R3 9         ; R3 := 9.000000
552 [-]: LOADK     R4 K97       ; R4 := 65535.000000
553 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
554 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
555 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
556 [-]: LOADK     R2 K52       ; R2 := "WeaponFrame.AmmoAvailable"
557 [-]: CONST     R3 9         ; R3 := 9.000000
558 [-]: LOADK     R4 K97       ; R4 := 65535.000000
559 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
560 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
561 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
562 [-]: LOADK     R2 K53       ; R2 := "WeaponFrame.AmmoRemaining"
563 [-]: CONST     R3 9         ; R3 := 9.000000
564 [-]: LOADK     R4 K96       ; R4 := 12284689.000000
565 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
566 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
567 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
568 [-]: LOADK     R2 K99       ; R2 := "StockTicker.Numbers"
569 [-]: CONST     R3 9         ; R3 := 9.000000
570 [-]: LOADK     R4 K97       ; R4 := 65535.000000
571 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
572 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
573 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
574 [-]: LOADK     R2 K100      ; R2 := "StockTicker.Backer"
575 [-]: CONST     R3 9         ; R3 := 9.000000
576 [-]: LOADK     R4 K101      ; R4 := 5277377.000000
577 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
578 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
579 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
580 [-]: LOADK     R2 K102      ; R2 := "MoaComponent.MoaCompContainer"
581 [-]: CONST     R3 9         ; R3 := 9.000000
582 [-]: LOADK     R4 K103      ; R4 := 4287645.000000
583 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
584 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
585 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
586 [-]: LOADK     R2 K104      ; R2 := "MoaComponent.MoaCompDetails"
587 [-]: CONST     R3 9         ; R3 := 9.000000
588 [-]: LOADK     R4 K105      ; R4 := 6147545.000000
589 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
590 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
591 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
592 [-]: LOADK     R2 K106      ; R2 := "MoaComponent.SummonMoa1.Icon"
593 [-]: CONST     R3 9         ; R3 := 9.000000
594 [-]: LOADK     R4 K105      ; R4 := 6147545.000000
595 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
596 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
597 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
598 [-]: LOADK     R2 K107      ; R2 := "MoaComponent.SummonMoa2.Icon"
599 [-]: CONST     R3 9         ; R3 := 9.000000
600 [-]: LOADK     R4 K105      ; R4 := 6147545.000000
601 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
602 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
603 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
604 [-]: LOADK     R2 K108      ; R2 := "MoaComponent.SummonMoa3.Icon"
605 [-]: CONST     R3 9         ; R3 := 9.000000
606 [-]: LOADK     R4 K105      ; R4 := 6147545.000000
607 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
608 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
609 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
610 [-]: LOADK     R2 K109      ; R2 := "MoaComponent.SummonMoa1.IconGlow"
611 [-]: CONST     R3 9         ; R3 := 9.000000
612 [-]: LOADK     R4 K103      ; R4 := 4287645.000000
613 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
614 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
615 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
616 [-]: LOADK     R2 K110      ; R2 := "MoaComponent.SummonMoa2.IconGlow"
617 [-]: CONST     R3 9         ; R3 := 9.000000
618 [-]: LOADK     R4 K103      ; R4 := 4287645.000000
619 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
620 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
621 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
622 [-]: LOADK     R2 K111      ; R2 := "MoaComponent.SummonMoa3.IconGlow"
623 [-]: CONST     R3 9         ; R3 := 9.000000
624 [-]: LOADK     R4 K103      ; R4 := 4287645.000000
625 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
626 [-]: JMP       662          ; PC := 662
627 [-]: GETGLOBAL R0 K34       ; R0 := 0xe72d2edb
628 [-]: EQ        0 R0 K112    ; if R0 ~= 4.000000 then PC := 662
629 [-]: JMP       662          ; PC := 662
630 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
631 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
632 [-]: LOADK     R2 K38       ; R2 := "MiniMapContainer.MapBorders"
633 [-]: CONST     R3 9         ; R3 := 9.000000
634 [-]: LOADK     R4 K113      ; R4 := 6377812.000000
635 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
636 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
637 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
638 [-]: LOADK     R2 K44       ; R2 := "HealthAndShield.HealthFrame"
639 [-]: CONST     R3 9         ; R3 := 9.000000
640 [-]: LOADK     R4 K113      ; R4 := 6377812.000000
641 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
642 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
643 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
644 [-]: LOADK     R2 K114      ; R2 := "AbilityPanel.Details"
645 [-]: CONST     R3 9         ; R3 := 9.000000
646 [-]: LOADK     R4 K113      ; R4 := 6377812.000000
647 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
648 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
649 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
650 [-]: LOADK     R2 K115      ; R2 := "HealthAndShield.PlayerShield.Container"
651 [-]: CONST     R3 9         ; R3 := 9.000000
652 [-]: GETUPVAL  R4 U3        ; R4 := U3
653 [-]: GETTABLE  R4 R4 K116   ; R4 := R4["Shield"]
654 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
655 [-]: GETGLOBAL R0 K12       ; R0 := 0xae91e43b
656 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x67bc869f]
657 [-]: LOADK     R2 K117      ; R2 := "HealthAndShield.PlayerHealth.Container"
658 [-]: CONST     R3 9         ; R3 := 9.000000
659 [-]: GETUPVAL  R4 U3        ; R4 := U3
660 [-]: GETTABLE  R4 R4 K118   ; R4 := R4["Health"]
661 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
662 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 5340
; #Upvalues:       4
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x03f57322
  2 [-]: MOVE      R5 R2        ; R5 := R2
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: LT        1 K1 R4      ; if 0.000000 < R4 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADKB    R4 0 1       ; R4 := false; PC := 7
  7 [-]: LOADKB    R4 1 0       ; R4 := true
  8 [-]: LOADKB    R5 1 0       ; R5 := true
  9 [-]: GETGLOBAL R6 K2        ; R6 := 0x7b998233
 10 [-]: GETUPVAL  R7 U0        ; R7 := U0
 11 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["ptr"]
 12 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 13 [-]: TEST      R6 0         ; if not R6 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: GETUPVAL  R6 U1        ; R6 := U1
 16 [-]: CALL      R6 1 1       ; R6()
 17 [-]: GETGLOBAL R6 K2        ; R6 := 0x7b998233
 18 [-]: GETUPVAL  R7 U0        ; R7 := U0
 19 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["ptr"]
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: TEST      R6 1         ; if R6 then PC := 36
 22 [-]: JMP       36           ; PC := 36
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["ptr"]
 25 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6[0x870e163a]
 26 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 27 [-]: SELF      R7 R6 K5     ; R8 := R6; R7 := R6[0x9f4a6b68]
 28 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 29 [-]: TEST      R7 0         ; if not R7 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: SELF      R7 R6 K6     ; R8 := R6; R7 := R6[0x92df6357]
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: EQ        0 R7 K1      ; if R7 ~= 0.000000 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADKB    R5 0 0       ; R5 := false
 36 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
 37 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0xaade900e]
 38 [-]: LOADK     R9 K9        ; R9 := "WeaponFrame.AmmoAvailable"
 39 [-]: CONST     R10 11       ; R10 := 11.000000
 40 [-]: TESTSET   R11 R4 0     ; if not R4 then PC := 43 else R11 := R4
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R11 R5       ; R11 := R5
 43 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 44 [-]: GETUPVAL  R7 U2        ; R7 := U2
 45 [-]: LOADK     R8 K10       ; R8 := "AmmoAvailable"
 46 [-]: LOADK     R9 K9        ; R9 := "WeaponFrame.AmmoAvailable"
 47 [-]: MOVE      R10 R1       ; R10 := R1
 48 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
 49 [-]: MOVE      R13 R3       ; R13 := R3
 50 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 51 [-]: GETGLOBAL R7 K11       ; R7 := 0xe72d2edb
 52 [-]: EQ        0 R7 K13     ; if R7 ~= 4.000000 then PC := 104
 53 [-]: JMP       104          ; PC := 104
 54 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
 55 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0xaade900e]
 56 [-]: LOADK     R9 K14       ; R9 := "WeaponFrame.AmmoAvailableBlur"
 57 [-]: CONST     R10 11       ; R10 := 11.000000
 58 [-]: TESTSET   R11 R4 0     ; if not R4 then PC := 61 else R11 := R4
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R11 R5       ; R11 := R5
 61 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 62 [-]: GETUPVAL  R7 U2        ; R7 := U2
 63 [-]: LOADK     R8 K15       ; R8 := "AmmoAvailableBlur"
 64 [-]: LOADK     R9 K14       ; R9 := "WeaponFrame.AmmoAvailableBlur"
 65 [-]: MOVE      R10 R1       ; R10 := R1
 66 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
 67 [-]: MOVE      R13 R3       ; R13 := R3
 68 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 69 [-]: GETUPVAL  R7 U2        ; R7 := U2
 70 [-]: LOADK     R8 K16       ; R8 := "AmmoRemaining"
 71 [-]: LOADK     R9 K17       ; R9 := "WeaponFrame.AmmoRemaining"
 72 [-]: GETUPVAL  R10 U3       ; R10 := U3
 73 [-]: GETTABLE  R10 R10 K18  ; R10 := R10[0x06d055f9]
 74 [-]: MOVE      R11 R4       ; R11 := R4
 75 [-]: MOVE      R12 R0       ; R12 := R0
 76 [-]: MOVE      R13 R1       ; R13 := R1
 77 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 78 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
 79 [-]: TEST      R5 1         ; if R5 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: NOT       R13 R4       ; R13 :=  R4
 82 [-]: JMP       85           ; PC := 85
 83 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 84
 84 [-]: LOADKB    R13 1 0      ; R13 := true
 85 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 86 [-]: GETUPVAL  R7 U2        ; R7 := U2
 87 [-]: LOADK     R8 K19       ; R8 := "AmmoRemainingBlur"
 88 [-]: LOADK     R9 K20       ; R9 := "WeaponFrame.AmmoRemainingBlur"
 89 [-]: GETUPVAL  R10 U3       ; R10 := U3
 90 [-]: GETTABLE  R10 R10 K18  ; R10 := R10[0x06d055f9]
 91 [-]: MOVE      R11 R4       ; R11 := R4
 92 [-]: MOVE      R12 R0       ; R12 := R0
 93 [-]: MOVE      R13 R1       ; R13 := R1
 94 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 95 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
 96 [-]: TEST      R5 1         ; if R5 then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: NOT       R13 R4       ; R13 :=  R4
 99 [-]: JMP       102          ; PC := 102
100 [-]: LOADKB    R13 0 1      ; R13 := false; PC := 101
101 [-]: LOADKB    R13 1 0      ; R13 := true
102 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
103 [-]: JMP       142          ; PC := 142
104 [-]: GETGLOBAL R7 K11       ; R7 := 0xe72d2edb
105 [-]: EQ        0 R7 K21     ; if R7 ~= 1.000000 then PC := 124
106 [-]: JMP       124          ; PC := 124
107 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
108 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0xaade900e]
109 [-]: LOADK     R9 K17       ; R9 := "WeaponFrame.AmmoRemaining"
110 [-]: CONST     R10 11       ; R10 := 11.000000
111 [-]: MOVE      R11 R4       ; R11 := R4
112 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
113 [-]: GETUPVAL  R7 U2        ; R7 := U2
114 [-]: LOADK     R8 K16       ; R8 := "AmmoRemaining"
115 [-]: LOADK     R9 K17       ; R9 := "WeaponFrame.AmmoRemaining"
116 [-]: GETUPVAL  R10 U3       ; R10 := U3
117 [-]: GETTABLE  R10 R10 K18  ; R10 := R10[0x06d055f9]
118 [-]: MOVE      R11 R4       ; R11 := R4
119 [-]: MOVE      R12 R0       ; R12 := R0
120 [-]: MOVE      R13 R1       ; R13 := R1
121 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
122 [-]: CALL      R7 0 1       ; R7(R8,...)
123 [-]: JMP       142          ; PC := 142
124 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
125 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0xaade900e]
126 [-]: LOADK     R9 K17       ; R9 := "WeaponFrame.AmmoRemaining"
127 [-]: CONST     R10 11       ; R10 := 11.000000
128 [-]: TESTSET   R11 R4 0     ; if not R4 then PC := 131 else R11 := R4
129 [-]: JMP       131          ; PC := 131
130 [-]: MOVE      R11 R5       ; R11 := R5
131 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
132 [-]: GETUPVAL  R7 U2        ; R7 := U2
133 [-]: LOADK     R8 K16       ; R8 := "AmmoRemaining"
134 [-]: LOADK     R9 K17       ; R9 := "WeaponFrame.AmmoRemaining"
135 [-]: GETUPVAL  R10 U3       ; R10 := U3
136 [-]: GETTABLE  R10 R10 K18  ; R10 := R10[0x06d055f9]
137 [-]: MOVE      R11 R4       ; R11 := R4
138 [-]: MOVE      R12 R0       ; R12 := R0
139 [-]: MOVE      R13 R1       ; R13 := R1
140 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
141 [-]: CALL      R7 0 1       ; R7(R8,...)
142 [-]: DIV       R7 R0 R2     ; R7 := R0 / R2
143 [-]: GETGLOBAL R8 K22       ; R8 := 0x5bced4c4
144 [-]: GETTABLE  R8 R8 K23    ; R8 := R8[0x55f27c30]
145 [-]: MUL       R9 K24 R7    ; R9 := 59.000000 * R7
146 [-]: CALL      R8 2 2       ; R8 := R8(R9)
147 [-]: SUB       R8 K25 R8    ; R8 := 60.000000 - R8
148 [-]: GETGLOBAL R9 K26       ; R9 := 0x38f10e85
149 [-]: GETGLOBAL R10 K7       ; R10 := 0xae91e43b
150 [-]: LOADK     R11 K27      ; R11 := "WeaponFrame.AmmoBar.gotoAndStop"
151 [-]: MOVE      R12 R8       ; R12 := R8
152 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
153 [-]: GETGLOBAL R9 K11       ; R9 := 0xe72d2edb
154 [-]: EQ        0 R9 K28     ; if R9 ~= 3.000000 then PC := 169
155 [-]: JMP       169          ; PC := 169
156 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
157 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9[0x67bc869f]
158 [-]: LOADK     R11 K30      ; R11 := "WeaponFrame.AmmoBar.Fill"
159 [-]: CONST     R12 9        ; R12 := 9.000000
160 [-]: LOADK     R13 K31      ; R13 := 9150127.000000
161 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
162 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
163 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9[0x67bc869f]
164 [-]: LOADK     R11 K32      ; R11 := "WeaponFrame.AmmoBar.Bg"
165 [-]: CONST     R12 9        ; R12 := 9.000000
166 [-]: LOADK     R13 K33      ; R13 := 6970169.000000
167 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
168 [-]: JMP       197          ; PC := 197
169 [-]: GETGLOBAL R9 K11       ; R9 := 0xe72d2edb
170 [-]: EQ        0 R9 K34     ; if R9 ~= 2.000000 then PC := 185
171 [-]: JMP       185          ; PC := 185
172 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
173 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9[0x67bc869f]
174 [-]: LOADK     R11 K30      ; R11 := "WeaponFrame.AmmoBar.Fill"
175 [-]: CONST     R12 9        ; R12 := 9.000000
176 [-]: LOADK     R13 K35      ; R13 := 12284689.000000
177 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
178 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
179 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9[0x67bc869f]
180 [-]: LOADK     R11 K32      ; R11 := "WeaponFrame.AmmoBar.Bg"
181 [-]: CONST     R12 9        ; R12 := 9.000000
182 [-]: LOADK     R13 K36      ; R13 := 65535.000000
183 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
184 [-]: JMP       197          ; PC := 197
185 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
186 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9[0x67bc869f]
187 [-]: LOADK     R11 K30      ; R11 := "WeaponFrame.AmmoBar.Fill"
188 [-]: CONST     R12 9        ; R12 := 9.000000
189 [-]: LOADK     R13 K37      ; R13 := 15954454.000000
190 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
191 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
192 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9[0x67bc869f]
193 [-]: LOADK     R11 K32      ; R11 := "WeaponFrame.AmmoBar.Bg"
194 [-]: CONST     R12 9        ; R12 := 9.000000
195 [-]: LOADK     R13 K38      ; R13 := 10197915.000000
196 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
197 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 5384
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R3 K0      ; if R3 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADKB    R3 0 1       ; R3 := false; PC := 4
  4 [-]: LOADKB    R3 1 0       ; R3 := true
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: MOVE      R7 R2        ; R7 := R2
  9 [-]: MOVE      R8 R3        ; R8 := R3
 10 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 11 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 5389
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x4bc5dc8b]
  3 [-]: LOADK     R2 K1        ; R2 := "CrewOrderHint"
  4 [-]: LOADNIL   R3 R3        ; R3 := nil
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x5bced4c4
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0xac1b386a]
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["CrewPanel"]
  9 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x5fbddc1a]
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: GETUPVAL  R6 U1        ; R6 := U1
 12 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["CrewPanel"]
 13 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xc419c8f6]
 14 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 15 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 16 [-]: MUL       R4 K7 R4     ; R4 := 52.000000 * R4
 17 [-]: ADD       R4 K8 R4     ; R4 := 136.000000 + R4
 18 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x4bc5dc8b]
 21 [-]: LOADK     R2 K9        ; R2 := "OrderHintArrow"
 22 [-]: LOADNIL   R3 R3        ; R3 := nil
 23 [-]: GETGLOBAL R4 K2        ; R4 := 0x5bced4c4
 24 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0xac1b386a]
 25 [-]: GETUPVAL  R5 U1        ; R5 := U1
 26 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["CrewPanel"]
 27 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x5fbddc1a]
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["CrewPanel"]
 31 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xc419c8f6]
 32 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 33 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 34 [-]: MUL       R4 K7 R4     ; R4 := 52.000000 * R4
 35 [-]: ADD       R4 K10 R4    ; R4 := 112.000000 + R4
 36 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0xfaa69527]
 39 [-]: GETGLOBAL R2 K12       ; R2 := 0xae91e43b
 40 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x6b837788]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: GETGLOBAL R3 K12       ; R3 := 0xae91e43b
 43 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0xaf9fda9f]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: LOADKB    R4 1 0       ; R4 := true
 46 [-]: GETUPVAL  R5 U2        ; R5 := U2
 47 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["HudScalePadding"]
 48 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 49 [-]: GETGLOBAL R0 K16       ; R0 := _T
 50 [-]: GETTABLE  R0 R0 K17    ; R0 := R0[0x71907cb1]
 51 [-]: GETGLOBAL R1 K12       ; R1 := 0xae91e43b
 52 [-]: LOADK     R2 K1        ; R2 := "CrewOrderHint"
 53 [-]: CALL      R0 3 1       ; R0(R1,R2)
 54 [-]: GETGLOBAL R0 K16       ; R0 := _T
 55 [-]: GETTABLE  R0 R0 K17    ; R0 := R0[0x71907cb1]
 56 [-]: GETGLOBAL R1 K12       ; R1 := 0xae91e43b
 57 [-]: LOADK     R2 K9        ; R2 := "OrderHintArrow"
 58 [-]: CALL      R0 3 1       ; R0(R1,R2)
 59 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 5397
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: GETUPVAL  R5 U0        ; R5 := U0
  3 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["CrewPanel"]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 0         ; if not R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: TEST      R0 1         ; if R0 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADK     R0 K2        ; R0 := ""
 11 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 12 [-]: SETTABLE  R4 K3 R0     ; R4["LOC"] := R0
 13 [-]: SETTABLE  R4 K4 R1     ; R4["ARGS"] := R1
 14 [-]: SETTABLE  R4 K5 R2     ; R4["GAMEPAD_ARGS"] := R2
 15 [-]: SETTABLE  R4 K6 R3     ; R4["CALLBACK"] := R3
 16 [-]: SETUPVAL  R4 U1        ; U82 := R1
 17 [-]: LOADK     R4 K7        ; R4 := "<p><font color=\"#DA6614\">"
 18 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
 19 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0x42b04007]
 20 [-]: MOVE      R7 R0        ; R7 := R0
 21 [-]: LOADKB    R8 1 0       ; R8 := true
 22 [-]: GETGLOBAL R9 K10       ; R9 := 0x34291f5c
 23 [-]: GETTABLE  R9 R9 K11    ; R9 := R9[0x1467d5f4]
 24 [-]: CALL      R9 1 2       ; R9 := R9()
 25 [-]: TEST      R9 0         ; if not R9 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: TESTSET   R9 R2 1      ; if R2 then PC := 30 else R9 := R2
 28 [-]: JMP       30           ; PC := 30
 29 [-]: MOVE      R9 R1        ; R9 := R1
 30 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 31 [-]: LOADK     R6 K12       ; R6 := "</font></p>"
 32 [-]: CONCAT    R0 R4 R6     ; R0 := R4 .. R5 .. R6
 33 [-]: GETGLOBAL R4 K8        ; R4 := 0xae91e43b
 34 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x5f56eeab]
 35 [-]: LOADK     R6 K14       ; R6 := "CrewOrderHint"
 36 [-]: CONST     R7 29        ; R7 := 29.000000
 37 [-]: MOVE      R8 R0        ; R8 := R0
 38 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 39 [-]: LEN       R4 R0        ; R4 := # R0
 40 [-]: LT        0 K15 R4     ; if 0.000000 >= R4 then PC := 56
 41 [-]: JMP       56           ; PC := 56
 42 [-]: GETUPVAL  R4 U2        ; R4 := U2
 43 [-]: CALL      R4 1 1       ; R4()
 44 [-]: GETGLOBAL R4 K16       ; R4 := 0x25312c9b
 45 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
 46 [-]: LOADK     R6 K14       ; R6 := "CrewOrderHint"
 47 [-]: CONST     R7 2         ; R7 := 2.000000
 48 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 49 [-]: CONST     R9 10        ; R9 := 10.000000
 50 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 51 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 52 [-]: CONST     R10 100      ; R10 := 100.000000
 53 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 54 [-]: LOADK     R10 K18      ; R10 := 0.200000
 55 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 56 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 5413
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R2 R0 K3     ; R2 := R0[0x9383bc56]
  6 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
  7 [-]: LOADK     R4 K5        ; R4 := "CrewPanel.CrewStatus1"
  8 [-]: CONST     R5 6         ; R5 := 6.000000
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: SETTABLE  R1 K2 R2     ; R1["CrewPanel"] := R2
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CrewPanel"]
 13 [-]: SETTABLE  R1 K6 K7     ; R1["mForcedVerticalSeparation"] := 52.000000
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CrewPanel"]
 16 [-]: SETTABLE  R1 K8 K9     ; R1["mForcedHorizontalSeparation"] := 0.000000
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CrewPanel"]
 19 [-]: CLOSURE   R2 0         ; R2 := closure(Function #147.1)
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SETTABLE  R1 K10 R2    ; R1["mClipCreatedCallback"] := R2
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CrewPanel"]
 24 [-]: CLOSURE   R2 1         ; R2 := closure(Function #147.2)
 25 [-]: SETTABLE  R1 K11 R2    ; R1["mElementDrawCallback"] := R2
 26 [-]: GETUPVAL  R1 U0        ; R1 := U0
 27 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CrewPanel"]
 28 [-]: CLOSURE   R2 2         ; R2 := closure(Function #147.3)
 29 [-]: SETTABLE  R1 K12 R2    ; R1["GetBounds"] := R2
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CrewPanel"]
 32 [-]: CLOSURE   R2 3         ; R2 := closure(Function #147.4)
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: SETTABLE  R1 K13 R2    ; R1["UpdateStatus"] := R2
 35 [-]: GETUPVAL  R1 U0        ; R1 := U0
 36 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CrewPanel"]
 37 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0x71e9ac81]
 38 [-]: CALL      R1 2 1       ; R1(R2)
 39 [-]: GETGLOBAL R1 K15       ; R1 := _T
 40 [-]: CLOSURE   R2 4         ; R2 := closure(Function #147.5)
 41 [-]: GETUPVAL  R0 U0        ; R0 := U0
 42 [-]: GETUPVAL  R0 U2        ; R0 := U2
 43 [-]: SETTABLE  R1 K16 R2    ; R1["HUD_RegisterCrew"] := R2
 44 [-]: RETURN    R0 1         ; return 


; Function #147.1:
;
; Name:            
; Defined at line: 5419
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf64b7262]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := "Health"
  5 [-]: CONST     R5 9         ; R5 := 9.000000
  6 [-]: LOADK     R6 K3        ; R6 := 15844670.000000
  7 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  8 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  9 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf64b7262]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: LOADK     R4 K4        ; R4 := "Shield"
 12 [-]: CONST     R5 9         ; R5 := 9.000000
 13 [-]: LOADK     R6 K5        ; R6 := 15954454.000000
 14 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 16 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf64b7262]
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: LOADK     R4 K6        ; R4 := "Bg"
 19 [-]: CONST     R5 9         ; R5 := 9.000000
 20 [-]: LOADK     R6 K5        ; R6 := 15954454.000000
 21 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 22 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 23 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf64b7262]
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: LOADK     R4 K7        ; R4 := "Icon"
 26 [-]: CONST     R5 9         ; R5 := 9.000000
 27 [-]: LOADK     R6 K3        ; R6 := 15844670.000000
 28 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 29 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 30 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf64b7262]
 31 [-]: MOVE      R3 R0        ; R3 := R0
 32 [-]: LOADK     R4 K8        ; R4 := "Name"
 33 [-]: CONST     R5 36        ; R5 := 36.000000
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["ObjectiveProgress"]
 36 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 37 [-]: RETURN    R0 1         ; return 


; Function #147.2:
;
; Name:            
; Defined at line: 5427
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Avatar"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["Avatar"]
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xdff9d2a7]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xe261aa96]
 11 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mClipName"]
 12 [-]: LOADK     R5 K6        ; R5 := "Name"
 13 [-]: CONST     R6 29        ; R6 := 29.000000
 14 [-]: MOVE      R7 R1        ; R7 := R1
 15 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 16 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 17 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["Icon"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x1cb415c1]
 23 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mClipName"]
 24 [-]: LOADK     R5 K9        ; R5 := ".Icon"
 25 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 26 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["Icon"]
 27 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 28 [-]: RETURN    R0 1         ; return 


; Function #147.3:
;
; Name:            
; Defined at line: 5438
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xc419c8f6]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: CONST     R2 1         ; R2 := 1.000000
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: MOVE      R5 R3        ; R5 := R3
  7 [-]: RETURN    R4 3         ; return R4,R5
  8 [-]: RETURN    R0 1         ; return 


; Function #147.4:
;
; Name:            
; Defined at line: 5448
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["CrewPanel"]
  3 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xea061e98]
  4 [-]: CLOSURE   R2 0         ; R2 := closure(Function #147.4.1)
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #147.4.1:
;
; Name:            
; Defined at line: 5450
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Avatar"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 41
  5 [-]: JMP       41           ; PC := 41
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["Avatar"]
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x52cd594a]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xf64b7262]
 11 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mClipName"]
 12 [-]: LOADK     R5 K6        ; R5 := "HealthMask"
 13 [-]: CONST     R6 14        ; R6 := 14.000000
 14 [-]: MUL       R7 K7 R1     ; R7 := 180.000000 * R1
 15 [-]: SUB       R7 K7 R7     ; R7 := 180.000000 - R7
 16 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 17 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 18 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["DamageController"]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["DamageController"]
 23 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xd29b845d]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 26 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0xf64b7262]
 27 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mClipName"]
 28 [-]: LOADK     R6 K10       ; R6 := "ShieldMask"
 29 [-]: CONST     R7 14        ; R7 := 14.000000
 30 [-]: MUL       R8 K7 R2     ; R8 := 180.000000 * R2
 31 [-]: SUB       R8 K7 R8     ; R8 := 180.000000 - R8
 32 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 35 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0xf64b7262]
 36 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mClipName"]
 37 [-]: LOADK     R6 K10       ; R6 := "ShieldMask"
 38 [-]: CONST     R7 14        ; R7 := 14.000000
 39 [-]: CONST     R8 180       ; R8 := 180.000000
 40 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 41 [-]: RETURN    R0 1         ; return 


; Function #147.5:
;
; Name:            
; Defined at line: 5466
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["CrewPanel"]
  3 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbad4316f]
  4 [-]: NEWTABLE  R4 0 3       ; R4 := {}
  5 [-]: SETTABLE  R4 K2 R0     ; R4["Avatar"] := R0
  6 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0[0x1ac1655c]
  7 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  8 [-]: SETTABLE  R4 K3 R5     ; R4["DamageController"] := R5
  9 [-]: SETTABLE  R4 K5 R1     ; R4["Icon"] := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: CALL      R2 1 1       ; R2()
 13 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 5472
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe72d2edb
  2 [-]: EQ        0 R0 K2      ; if R0 ~= 1.000000 then PC := 415
  3 [-]: JMP       415          ; PC := 415
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  7 [-]: LOADK     R3 K5        ; R3 := "GrineerAbilityPanel"
  8 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["ANCHOR_V_BOTTOM"]
 11 [-]: GETUPVAL  R6 U0        ; R6 := U0
 12 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_RIGHT"]
 13 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 17 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 18 [-]: LOADK     R3 K8        ; R3 := "SpecialAbility"
 19 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 20 [-]: GETUPVAL  R5 U0        ; R5 := U0
 21 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["ANCHOR_V_BOTTOM"]
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_RIGHT"]
 24 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 25 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 26 [-]: GETUPVAL  R0 U0        ; R0 := U0
 27 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 28 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 29 [-]: LOADK     R3 K9        ; R3 := "CrewPanel"
 30 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["ANCHOR_V_TOP"]
 33 [-]: GETUPVAL  R6 U0        ; R6 := U0
 34 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_RIGHT"]
 35 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 36 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 39 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 40 [-]: LOADK     R3 K11       ; R3 := "CrewOrderHint"
 41 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 42 [-]: GETUPVAL  R5 U0        ; R5 := U0
 43 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["ANCHOR_V_TOP"]
 44 [-]: GETUPVAL  R6 U0        ; R6 := U0
 45 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_RIGHT"]
 46 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 47 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 48 [-]: GETUPVAL  R0 U0        ; R0 := U0
 49 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 50 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 51 [-]: LOADK     R3 K12       ; R3 := "OrderHintArrow"
 52 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 53 [-]: GETUPVAL  R5 U0        ; R5 := U0
 54 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["ANCHOR_V_TOP"]
 55 [-]: GETUPVAL  R6 U0        ; R6 := U0
 56 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_RIGHT"]
 57 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 58 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 59 [-]: GETUPVAL  R0 U0        ; R0 := U0
 60 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 61 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 62 [-]: LOADK     R3 K13       ; R3 := "GrineerDeco.BottomLeftCorner"
 63 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 64 [-]: GETUPVAL  R5 U0        ; R5 := U0
 65 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["ANCHOR_V_BOTTOM"]
 66 [-]: GETUPVAL  R6 U0        ; R6 := U0
 67 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["ANCHOR_H_LEFT"]
 68 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 69 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 70 [-]: GETUPVAL  R0 U0        ; R0 := U0
 71 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 72 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 73 [-]: LOADK     R3 K15       ; R3 := "GrineerDeco.BottomRightCorner"
 74 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 75 [-]: GETUPVAL  R5 U0        ; R5 := U0
 76 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["ANCHOR_V_BOTTOM"]
 77 [-]: GETUPVAL  R6 U0        ; R6 := U0
 78 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ANCHOR_H_RIGHT"]
 79 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 80 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 81 [-]: GETUPVAL  R0 U0        ; R0 := U0
 82 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 83 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 84 [-]: LOADK     R3 K16       ; R3 := "GrineerDeco.TopFlourish"
 85 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 86 [-]: GETUPVAL  R5 U0        ; R5 := U0
 87 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["ANCHOR_V_TOP"]
 88 [-]: GETUPVAL  R6 U0        ; R6 := U0
 89 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["ANCHOR_H_CENTRE"]
 90 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 91 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 92 [-]: GETUPVAL  R0 U0        ; R0 := U0
 93 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
 94 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 95 [-]: LOADK     R3 K18       ; R3 := "WeaponReticuleDot"
 96 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 97 [-]: GETUPVAL  R5 U0        ; R5 := U0
 98 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["ANCHOR_V_CENTRE"]
 99 [-]: GETUPVAL  R6 U0        ; R6 := U0
100 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["ANCHOR_H_CENTRE"]
101 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
102 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
103 [-]: GETUPVAL  R0 U0        ; R0 := U0
104 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20ff29f7]
105 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
106 [-]: LOADK     R3 K20       ; R3 := "FuelComponent"
107 [-]: NEWTABLE  R4 2 0       ; R4 := {}
108 [-]: GETUPVAL  R5 U0        ; R5 := U0
109 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["ANCHOR_V_BOTTOM"]
110 [-]: GETUPVAL  R6 U0        ; R6 := U0
111 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["ANCHOR_H_CENTRE"]
112 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
113 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
114 [-]: GETUPVAL  R0 U0        ; R0 := U0
115 [-]: SELF      R0 R0 K21    ; R1 := R0; R0 := R0[0xfaa69527]
116 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
117 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0x6b837788]
118 [-]: CALL      R2 2 2       ; R2 := R2(R3)
119 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
120 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0xaf9fda9f]
121 [-]: CALL      R3 2 2       ; R3 := R3(R4)
122 [-]: LOADKB    R4 1 0       ; R4 := true
123 [-]: GETUPVAL  R5 U1        ; R5 := U1
124 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["HudScalePadding"]
125 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
126 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
127 [-]: SELF      R0 R0 K25    ; R1 := R0; R0 := R0[0xd5181643]
128 [-]: LOADK     R2 K26       ; R2 := "FuelComponent.Fill"
129 [-]: GETGLOBAL R3 K27       ; R3 := 0xf21d09d4
130 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
131 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
132 [-]: SELF      R0 R0 K28    ; R1 := R0; R0 := R0[0x67bc869f]
133 [-]: LOADK     R2 K20       ; R2 := "FuelComponent"
134 [-]: CONST     R3 10        ; R3 := 10.000000
135 [-]: CONST     R4 0         ; R4 := 0.000000
136 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
137 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
138 [-]: SELF      R0 R0 K29    ; R1 := R0; R0 := R0[0xaade900e]
139 [-]: LOADK     R2 K8        ; R2 := "SpecialAbility"
140 [-]: CONST     R3 11        ; R3 := 11.000000
141 [-]: LOADKB    R4 0 0       ; R4 := false
142 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
143 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
144 [-]: SELF      R0 R0 K28    ; R1 := R0; R0 := R0[0x67bc869f]
145 [-]: LOADK     R2 K8        ; R2 := "SpecialAbility"
146 [-]: CONST     R3 10        ; R3 := 10.000000
147 [-]: CONST     R4 30        ; R4 := 30.000000
148 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
149 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
150 [-]: SELF      R0 R0 K25    ; R1 := R0; R0 := R0[0xd5181643]
151 [-]: LOADK     R2 K30       ; R2 := "SpecialAbility.Cooldown"
152 [-]: GETGLOBAL R3 K31       ; R3 := 0x2545668b
153 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
154 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
155 [-]: SELF      R0 R0 K32    ; R1 := R0; R0 := R0[0x91e13703]
156 [-]: LOADK     R2 K30       ; R2 := "SpecialAbility.Cooldown"
157 [-]: LOADK     R3 K33       ; R3 := "AlphaTestThreshold"
158 [-]: CONST     R4 1         ; R4 := 1.000000
159 [-]: CONST     R5 0         ; R5 := 0.000000
160 [-]: CONST     R6 0         ; R6 := 0.000000
161 [-]: CONST     R7 0         ; R7 := 0.000000
162 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
163 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
164 [-]: SELF      R0 R0 K29    ; R1 := R0; R0 := R0[0xaade900e]
165 [-]: LOADK     R2 K34       ; R2 := "GrineerAbilityPanel.GrenadeComponent.Glow"
166 [-]: CONST     R3 11        ; R3 := 11.000000
167 [-]: LOADKB    R4 0 0       ; R4 := false
168 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
169 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
170 [-]: SELF      R0 R0 K29    ; R1 := R0; R0 := R0[0xaade900e]
171 [-]: LOADK     R2 K35       ; R2 := "GrineerAbilityPanel.Ability1.Glow"
172 [-]: CONST     R3 11        ; R3 := 11.000000
173 [-]: LOADKB    R4 0 0       ; R4 := false
174 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
175 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
176 [-]: SELF      R0 R0 K29    ; R1 := R0; R0 := R0[0xaade900e]
177 [-]: LOADK     R2 K36       ; R2 := "GrineerAbilityPanel.Ability2.Glow"
178 [-]: CONST     R3 11        ; R3 := 11.000000
179 [-]: LOADKB    R4 0 0       ; R4 := false
180 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
181 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
182 [-]: SELF      R0 R0 K28    ; R1 := R0; R0 := R0[0x67bc869f]
183 [-]: LOADK     R2 K11       ; R2 := "CrewOrderHint"
184 [-]: CONST     R3 66        ; R3 := 66.000000
185 [-]: CONST     R4 5         ; R4 := 5.000000
186 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
187 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
188 [-]: SELF      R0 R0 K28    ; R1 := R0; R0 := R0[0x67bc869f]
189 [-]: LOADK     R2 K11       ; R2 := "CrewOrderHint"
190 [-]: CONST     R3 10        ; R3 := 10.000000
191 [-]: CONST     R4 0         ; R4 := 0.000000
192 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
193 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
194 [-]: SELF      R0 R0 K29    ; R1 := R0; R0 := R0[0xaade900e]
195 [-]: LOADK     R2 K12       ; R2 := "OrderHintArrow"
196 [-]: CONST     R3 11        ; R3 := 11.000000
197 [-]: LOADKB    R4 0 0       ; R4 := false
198 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
199 [-]: GETUPVAL  R0 U2        ; R0 := U2
200 [-]: CALL      R0 1 1       ; R0()
201 [-]: GETGLOBAL R0 K37       ; R0 := _T
202 [-]: GETUPVAL  R1 U3        ; R1 := U3
203 [-]: SETTABLE  R0 K38 R1    ; R0["SetCrewHint"] := R1
204 [-]: GETGLOBAL R0 K39       ; R0 := 0x7b998233
205 [-]: GETGLOBAL R1 K37       ; R1 := _T
206 [-]: GETTABLE  R1 R1 K40    ; R1 := R1["ImpactMessageTexturePacks"]
207 [-]: CALL      R0 2 2       ; R0 := R0(R1)
208 [-]: TEST      R0 0         ; if not R0 then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: GETGLOBAL R0 K37       ; R0 := _T
211 [-]: NEWTABLE  R1 0 0       ; R1 := {}
212 [-]: SETTABLE  R0 K40 R1    ; R0["ImpactMessageTexturePacks"] := R1
213 [-]: GETGLOBAL R0 K37       ; R0 := _T
214 [-]: GETTABLE  R0 R0 K40    ; R0 := R0["ImpactMessageTexturePacks"]
215 [-]: NEWTABLE  R1 0 18      ; R1 := {}
216 [-]: GETGLOBAL R2 K43       ; R2 := 0xb009bbc6
217 [-]: LOADK     R3 K44       ; R3 := "/Lotus/Interface/HudGraphics/GrineerHud/KahlOrderIcon.png"
218 [-]: CALL      R2 2 2       ; R2 := R2(R3)
219 [-]: SETTABLE  R1 K42 R2    ; R1["IconTinted"] := R2
220 [-]: NEWTABLE  R2 0 3       ; R2 := {}
221 [-]: SETTABLE  R2 K46 K47   ; R2["Width"] := 96.000000
222 [-]: SETTABLE  R2 K48 K47   ; R2["Height"] := 96.000000
223 [-]: SETTABLE  R2 K49 K50   ; R2["Y"] := -10.000000
224 [-]: SETTABLE  R1 K45 R2    ; R1["IconTintedAdjust"] := R2
225 [-]: GETGLOBAL R2 K43       ; R2 := 0xb009bbc6
226 [-]: LOADK     R3 K52       ; R3 := "/Lotus/Interface/HudGraphics/GrineerHud/KahlOrderSoftBg.png"
227 [-]: CALL      R2 2 2       ; R2 := R2(R3)
228 [-]: SETTABLE  R1 K51 R2    ; R1["IconBg"] := R2
229 [-]: NEWTABLE  R2 0 5       ; R2 := {}
230 [-]: SETTABLE  R2 K46 K54   ; R2["Width"] := 512.000000
231 [-]: SETTABLE  R2 K48 K55   ; R2["Height"] := 256.000000
232 [-]: SETTABLE  R2 K56 K57   ; R2["Alpha"] := 85.000000
233 [-]: SETTABLE  R2 K49 K58   ; R2["Y"] := 30.000000
234 [-]: SETTABLE  R2 K59 K60   ; R2["Color"] := 1315613.000000
235 [-]: SETTABLE  R1 K53 R2    ; R1["IconBgAdjust"] := R2
236 [-]: GETGLOBAL R2 K43       ; R2 := 0xb009bbc6
237 [-]: LOADK     R3 K62       ; R3 := "/Lotus/Interface/HudGraphics/GrineerHud/KahlOrderBacker.png"
238 [-]: CALL      R2 2 2       ; R2 := R2(R3)
239 [-]: SETTABLE  R1 K61 R2    ; R1["IconBgLeft"] := R2
240 [-]: NEWTABLE  R2 0 5       ; R2 := {}
241 [-]: SETTABLE  R2 K46 K64   ; R2["Width"] := 128.000000
242 [-]: SETTABLE  R2 K48 K65   ; R2["Height"] := 64.000000
243 [-]: SETTABLE  R2 K49 K66   ; R2["Y"] := 20.000000
244 [-]: SETTABLE  R2 K67 K68   ; R2["X"] := -100.000000
245 [-]: SETTABLE  R2 K59 K69   ; R2["Color"] := 12280081.000000
246 [-]: SETTABLE  R1 K63 R2    ; R1["IconBgLeftAdjust"] := R2
247 [-]: GETGLOBAL R2 K43       ; R2 := 0xb009bbc6
248 [-]: LOADK     R3 K62       ; R3 := "/Lotus/Interface/HudGraphics/GrineerHud/KahlOrderBacker.png"
249 [-]: CALL      R2 2 2       ; R2 := R2(R3)
250 [-]: SETTABLE  R1 K70 R2    ; R1["IconBgRight"] := R2
251 [-]: NEWTABLE  R2 0 5       ; R2 := {}
252 [-]: SETTABLE  R2 K46 K64   ; R2["Width"] := 128.000000
253 [-]: SETTABLE  R2 K48 K65   ; R2["Height"] := 64.000000
254 [-]: SETTABLE  R2 K49 K66   ; R2["Y"] := 20.000000
255 [-]: SETTABLE  R2 K67 K72   ; R2["X"] := 100.000000
256 [-]: SETTABLE  R2 K59 K69   ; R2["Color"] := 12280081.000000
257 [-]: SETTABLE  R1 K71 R2    ; R1["IconBgRightAdjust"] := R2
258 [-]: GETGLOBAL R2 K43       ; R2 := 0xb009bbc6
259 [-]: LOADK     R3 K74       ; R3 := "/Lotus/Interface/HudGraphics/GrineerHud/ImpactMessage.png"
260 [-]: CALL      R2 2 2       ; R2 := R2(R3)
261 [-]: SETTABLE  R1 K73 R2    ; R1["StaticIconBgLeft"] := R2
262 [-]: NEWTABLE  R2 0 5       ; R2 := {}
263 [-]: SETTABLE  R2 K46 K64   ; R2["Width"] := 128.000000
264 [-]: SETTABLE  R2 K48 K65   ; R2["Height"] := 64.000000
265 [-]: SETTABLE  R2 K67 K76   ; R2["X"] := -200.000000
266 [-]: SETTABLE  R2 K49 K77   ; R2["Y"] := 120.000000
267 [-]: SETTABLE  R2 K59 K78   ; R2["Color"] := 14312980.000000
268 [-]: SETTABLE  R1 K75 R2    ; R1["StaticIconBgLeftAdjust"] := R2
269 [-]: GETGLOBAL R2 K43       ; R2 := 0xb009bbc6
270 [-]: LOADK     R3 K74       ; R3 := "/Lotus/Interface/HudGraphics/GrineerHud/ImpactMessage.png"
271 [-]: CALL      R2 2 2       ; R2 := R2(R3)
272 [-]: SETTABLE  R1 K79 R2    ; R1["StaticIconBgRight"] := R2
273 [-]: NEWTABLE  R2 0 5       ; R2 := {}
274 [-]: SETTABLE  R2 K46 K64   ; R2["Width"] := 128.000000
275 [-]: SETTABLE  R2 K48 K65   ; R2["Height"] := 64.000000
276 [-]: SETTABLE  R2 K67 K81   ; R2["X"] := 200.000000
277 [-]: SETTABLE  R2 K49 K77   ; R2["Y"] := 120.000000
278 [-]: SETTABLE  R2 K59 K78   ; R2["Color"] := 14312980.000000
279 [-]: SETTABLE  R1 K80 R2    ; R1["StaticIconBgRightAdjust"] := R2
280 [-]: SETTABLE  R1 K82 K83   ; R1["DecoLabel"] := "/Lotus/Language/Labels/OrderGiven"
281 [-]: SETTABLE  R1 K84 K85   ; R1["LabelColorOverride"] := 16777215.000000
282 [-]: SETTABLE  R1 K86 K87   ; R1["FlareColorOverride"] := 15380774.000000
283 [-]: SETTABLE  R1 K59 K88   ; R1["Color"] := 15299874.000000
284 [-]: SETTABLE  R1 K89 K90   ; R1["IsColorHex"] := true
285 [-]: SETTABLE  R1 K91 K92   ; R1["LetterSpacing"] := 2.000000
286 [-]: SETTABLE  R1 K93 K94   ; R1["FontName"] := "Roboto Condensed"
287 [-]: SETTABLE  R1 K95 K96   ; R1["FontSize"] := 19.000000
288 [-]: SETTABLE  R0 K41 R1    ; R0["GrineerOrder"] := R1
289 [-]: NEWTABLE  R0 3 0       ; R0 := {}
290 [-]: LOADK     R1 K9        ; R1 := "CrewPanel"
291 [-]: LOADK     R2 K11       ; R2 := "CrewOrderHint"
292 [-]: LOADK     R3 K8        ; R3 := "SpecialAbility"
293 [-]: SETLIST   R0 3 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 3
294 [-]: GETGLOBAL R1 K97       ; R1 := 0xc8802016
295 [-]: MOVE      R2 R0        ; R2 := R0
296 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
297 [-]: JMP       309          ; PC := 309
298 [-]: GETGLOBAL R6 K4        ; R6 := 0xae91e43b
299 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6[0x67bc869f]
300 [-]: MOVE      R8 R5        ; R8 := R5
301 [-]: CONST     R9 15        ; R9 := 15.000000
302 [-]: CONST     R10 25       ; R10 := 25.000000
303 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
304 [-]: GETGLOBAL R6 K37       ; R6 := _T
305 [-]: GETTABLE  R6 R6 K98    ; R6 := R6[0x6b23d28b]
306 [-]: GETGLOBAL R7 K4        ; R7 := 0xae91e43b
307 [-]: MOVE      R8 R5        ; R8 := R5
308 [-]: CALL      R6 3 1       ; R6(R7,R8)
309 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 298; R3 := R4 end
310 [-]: JMP       298          ; PC := 298
311 [-]: GETGLOBAL R6 K4        ; R6 := 0xae91e43b
312 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6[0x67bc869f]
313 [-]: LOADK     R8 K5        ; R8 := "GrineerAbilityPanel"
314 [-]: CONST     R9 15        ; R9 := 15.000000
315 [-]: CONST     R10 10       ; R10 := 10.000000
316 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
317 [-]: GETGLOBAL R6 K37       ; R6 := _T
318 [-]: GETTABLE  R6 R6 K98    ; R6 := R6[0x6b23d28b]
319 [-]: GETGLOBAL R7 K4        ; R7 := 0xae91e43b
320 [-]: LOADK     R8 K5        ; R8 := "GrineerAbilityPanel"
321 [-]: CALL      R6 3 1       ; R6(R7,R8)
322 [-]: GETGLOBAL R6 K37       ; R6 := _T
323 [-]: GETTABLE  R6 R6 K98    ; R6 := R6[0x6b23d28b]
324 [-]: GETGLOBAL R7 K4        ; R7 := 0xae91e43b
325 [-]: LOADK     R8 K12       ; R8 := "OrderHintArrow"
326 [-]: CALL      R6 3 1       ; R6(R7,R8)
327 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
328 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
329 [-]: GETUPVAL  R7 U4        ; R7 := U4
330 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
331 [-]: LOADK     R8 K5        ; R8 := "GrineerAbilityPanel"
332 [-]: CALL      R6 3 1       ; R6(R7,R8)
333 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
334 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
335 [-]: GETUPVAL  R7 U4        ; R7 := U4
336 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
337 [-]: LOADK     R8 K9        ; R8 := "CrewPanel"
338 [-]: CALL      R6 3 1       ; R6(R7,R8)
339 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
340 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
341 [-]: GETUPVAL  R7 U4        ; R7 := U4
342 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
343 [-]: LOADK     R8 K11       ; R8 := "CrewOrderHint"
344 [-]: CALL      R6 3 1       ; R6(R7,R8)
345 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
346 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
347 [-]: GETUPVAL  R7 U4        ; R7 := U4
348 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
349 [-]: LOADK     R8 K12       ; R8 := "OrderHintArrow"
350 [-]: CALL      R6 3 1       ; R6(R7,R8)
351 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
352 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
353 [-]: GETUPVAL  R7 U4        ; R7 := U4
354 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
355 [-]: LOADK     R8 K8        ; R8 := "SpecialAbility"
356 [-]: CALL      R6 3 1       ; R6(R7,R8)
357 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
358 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
359 [-]: GETUPVAL  R7 U4        ; R7 := U4
360 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
361 [-]: LOADK     R8 K102      ; R8 := "GrineerDeco"
362 [-]: CALL      R6 3 1       ; R6(R7,R8)
363 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
364 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
365 [-]: GETUPVAL  R7 U4        ; R7 := U4
366 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
367 [-]: LOADK     R8 K103      ; R8 := "ImpactMessage.DetailLeft"
368 [-]: CALL      R6 3 1       ; R6(R7,R8)
369 [-]: GETGLOBAL R6 K99       ; R6 := 0x33bdd652
370 [-]: GETTABLE  R6 R6 K100   ; R6 := R6[0x23d5322f]
371 [-]: GETUPVAL  R7 U4        ; R7 := U4
372 [-]: GETTABLE  R7 R7 K101   ; R7 := R7["Clips"]
373 [-]: LOADK     R8 K104      ; R8 := "ImpactMessage.DetailRight"
374 [-]: CALL      R6 3 1       ; R6(R7,R8)
375 [-]: GETUPVAL  R6 U5        ; R6 := U5
376 [-]: SETTABLE  R6 K105 K2   ; R6["HeartRateFactor"] := 1.000000
377 [-]: GETUPVAL  R6 U5        ; R6 := U5
378 [-]: SETTABLE  R6 K106 K2   ; R6["HeartRateCurrFrame"] := 1.000000
379 [-]: GETUPVAL  R6 U5        ; R6 := U5
380 [-]: SETTABLE  R6 K107 K108 ; R6["HeartRateMaxFrame"] := 35.000000
381 [-]: NEWTABLE  R6 3 0       ; R6 := {}
382 [-]: NEWTABLE  R7 0 3       ; R7 := {}
383 [-]: SETTABLE  R7 K109 K110 ; R7["Ability"] := "ACTIVATE_ABILITY_MENU_0"
384 [-]: SETTABLE  R7 K67 K111  ; R7["X"] := -60.000000
385 [-]: SETTABLE  R7 K49 K112  ; R7["Y"] := 0.000000
386 [-]: NEWTABLE  R8 0 3       ; R8 := {}
387 [-]: SETTABLE  R8 K109 K113 ; R8["Ability"] := "ACTIVATE_ABILITY_MENU_1"
388 [-]: SETTABLE  R8 K67 K112  ; R8["X"] := 0.000000
389 [-]: SETTABLE  R8 K49 K112  ; R8["Y"] := 0.000000
390 [-]: NEWTABLE  R9 0 3       ; R9 := {}
391 [-]: SETTABLE  R9 K109 K114 ; R9["Ability"] := "ACTIVATE_ABILITY_MENU_2"
392 [-]: SETTABLE  R9 K67 K115  ; R9["X"] := 68.000000
393 [-]: SETTABLE  R9 K49 K112  ; R9["Y"] := 0.000000
394 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
395 [-]: SETUPVAL  R6 U6        ; U82 := R6
396 [-]: NEWTABLE  R6 0 4       ; R6 := {}
397 [-]: NEWTABLE  R7 0 2       ; R7 := {}
398 [-]: SETTABLE  R7 K67 K112  ; R7["X"] := 0.000000
399 [-]: SETTABLE  R7 K49 K117  ; R7["Y"] := 10.000000
400 [-]: SETTABLE  R6 K116 R7   ; R6["A"] := R7
401 [-]: NEWTABLE  R7 0 2       ; R7 := {}
402 [-]: SETTABLE  R7 K67 K118  ; R7["X"] := -55.000000
403 [-]: SETTABLE  R7 K49 K119  ; R7["Y"] := -45.000000
404 [-]: SETTABLE  R6 K67 R7    ; R6["X"] := R7
405 [-]: NEWTABLE  R7 0 2       ; R7 := {}
406 [-]: SETTABLE  R7 K67 K121  ; R7["X"] := 50.000000
407 [-]: SETTABLE  R7 K49 K119  ; R7["Y"] := -45.000000
408 [-]: SETTABLE  R6 K120 R7   ; R6["B"] := R7
409 [-]: NEWTABLE  R7 0 2       ; R7 := {}
410 [-]: SETTABLE  R7 K67 K112  ; R7["X"] := 0.000000
411 [-]: SETTABLE  R7 K49 K68   ; R7["Y"] := -100.000000
412 [-]: SETTABLE  R6 K49 R7    ; R6["Y"] := R7
413 [-]: SETUPVAL  R6 U7        ; U82 := R7
414 [-]: JMP       679          ; PC := 679
415 [-]: GETGLOBAL R6 K0        ; R6 := 0xe72d2edb
416 [-]: EQ        0 R6 K122    ; if R6 ~= 3.000000 then PC := 481
417 [-]: JMP       481          ; PC := 481
418 [-]: GETUPVAL  R6 U0        ; R6 := U0
419 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x20ff29f7]
420 [-]: GETGLOBAL R8 K4        ; R8 := 0xae91e43b
421 [-]: LOADK     R9 K123      ; R9 := "TeshinDeco"
422 [-]: NEWTABLE  R10 2 0      ; R10 := {}
423 [-]: GETUPVAL  R11 U0       ; R11 := U0
424 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["ANCHOR_V_TOP"]
425 [-]: GETUPVAL  R12 U0       ; R12 := U0
426 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["ANCHOR_H_CENTRE"]
427 [-]: SETLIST   R10 2 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
428 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
429 [-]: GETUPVAL  R6 U0        ; R6 := U0
430 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x20ff29f7]
431 [-]: GETGLOBAL R8 K4        ; R8 := 0xae91e43b
432 [-]: LOADK     R9 K124      ; R9 := "StancePanel"
433 [-]: NEWTABLE  R10 2 0      ; R10 := {}
434 [-]: GETUPVAL  R11 U0       ; R11 := U0
435 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["ANCHOR_V_BOTTOM"]
436 [-]: GETUPVAL  R12 U0       ; R12 := U0
437 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["ANCHOR_H_RIGHT"]
438 [-]: SETLIST   R10 2 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
439 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
440 [-]: GETUPVAL  R6 U0        ; R6 := U0
441 [-]: SELF      R6 R6 K21    ; R7 := R6; R6 := R6[0xfaa69527]
442 [-]: GETGLOBAL R8 K4        ; R8 := 0xae91e43b
443 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0x6b837788]
444 [-]: CALL      R8 2 2       ; R8 := R8(R9)
445 [-]: GETGLOBAL R9 K4        ; R9 := 0xae91e43b
446 [-]: SELF      R9 R9 K23    ; R10 := R9; R9 := R9[0xaf9fda9f]
447 [-]: CALL      R9 2 2       ; R9 := R9(R10)
448 [-]: LOADKB    R10 1 0      ; R10 := true
449 [-]: GETUPVAL  R11 U1       ; R11 := U1
450 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["HudScalePadding"]
451 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
452 [-]: NEWTABLE  R6 1 0       ; R6 := {}
453 [-]: LOADK     R7 K124      ; R7 := "StancePanel"
454 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
455 [-]: GETGLOBAL R7 K97       ; R7 := 0xc8802016
456 [-]: MOVE      R8 R6        ; R8 := R6
457 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
458 [-]: JMP       464          ; PC := 464
459 [-]: GETGLOBAL R12 K37      ; R12 := _T
460 [-]: GETTABLE  R12 R12 K98  ; R12 := R12[0x6b23d28b]
461 [-]: GETGLOBAL R13 K4       ; R13 := 0xae91e43b
462 [-]: MOVE      R14 R11      ; R14 := R11
463 [-]: CALL      R12 3 1      ; R12(R13,R14)
464 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 459; R9 := R10 end
465 [-]: JMP       459          ; PC := 459
466 [-]: GETUPVAL  R12 U5       ; R12 := U5
467 [-]: NEWTABLE  R13 3 0      ; R13 := {}
468 [-]: LOADK     R14 K126     ; R14 := 15299384.000000
469 [-]: LOADK     R15 K127     ; R15 := 10081506.000000
470 [-]: LOADK     R16 K128     ; R16 := 12032498.000000
471 [-]: SETLIST   R13 3 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
472 [-]: SETTABLE  R12 K125 R13 ; R12["TeshinStanceActiveColors"] := R13
473 [-]: GETUPVAL  R12 U5       ; R12 := U5
474 [-]: NEWTABLE  R13 3 0      ; R13 := {}
475 [-]: LOADK     R14 K130     ; R14 := 8031129.000000
476 [-]: LOADK     R15 K130     ; R15 := 8031129.000000
477 [-]: LOADK     R16 K130     ; R16 := 8031129.000000
478 [-]: SETLIST   R13 3 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
479 [-]: SETTABLE  R12 K129 R13 ; R12["TeshinStanceInactiveColors"] := R13
480 [-]: JMP       679          ; PC := 679
481 [-]: GETGLOBAL R12 K0       ; R12 := 0xe72d2edb
482 [-]: EQ        0 R12 K92    ; if R12 ~= 2.000000 then PC := 600
483 [-]: JMP       600          ; PC := 600
484 [-]: GETUPVAL  R12 U0       ; R12 := U0
485 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
486 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
487 [-]: LOADK     R15 K131     ; R15 := "CorpusDeco.BottomLeftCorner"
488 [-]: NEWTABLE  R16 2 0      ; R16 := {}
489 [-]: GETUPVAL  R17 U0       ; R17 := U0
490 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["ANCHOR_V_BOTTOM"]
491 [-]: GETUPVAL  R18 U0       ; R18 := U0
492 [-]: GETTABLE  R18 R18 K14  ; R18 := R18["ANCHOR_H_LEFT"]
493 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
494 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
495 [-]: GETUPVAL  R12 U0       ; R12 := U0
496 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
497 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
498 [-]: LOADK     R15 K132     ; R15 := "CorpusDeco.BottomRightCorner"
499 [-]: NEWTABLE  R16 2 0      ; R16 := {}
500 [-]: GETUPVAL  R17 U0       ; R17 := U0
501 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["ANCHOR_V_BOTTOM"]
502 [-]: GETUPVAL  R18 U0       ; R18 := U0
503 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["ANCHOR_H_RIGHT"]
504 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
505 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
506 [-]: GETUPVAL  R12 U0       ; R12 := U0
507 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
508 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
509 [-]: LOADK     R15 K133     ; R15 := "CorpusDeco.TopFlourish"
510 [-]: NEWTABLE  R16 2 0      ; R16 := {}
511 [-]: GETUPVAL  R17 U0       ; R17 := U0
512 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["ANCHOR_V_TOP"]
513 [-]: GETUPVAL  R18 U0       ; R18 := U0
514 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["ANCHOR_H_CENTRE"]
515 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
516 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
517 [-]: GETUPVAL  R12 U0       ; R12 := U0
518 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
519 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
520 [-]: LOADK     R15 K134     ; R15 := "CorpusDeco.BottomFlourish"
521 [-]: NEWTABLE  R16 2 0      ; R16 := {}
522 [-]: GETUPVAL  R17 U0       ; R17 := U0
523 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["ANCHOR_V_BOTTOM"]
524 [-]: GETUPVAL  R18 U0       ; R18 := U0
525 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["ANCHOR_H_CENTRE"]
526 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
527 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
528 [-]: GETUPVAL  R12 U0       ; R12 := U0
529 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
530 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
531 [-]: LOADK     R15 K135     ; R15 := "CorpusDeco.LeftFlourish"
532 [-]: NEWTABLE  R16 2 0      ; R16 := {}
533 [-]: GETUPVAL  R17 U0       ; R17 := U0
534 [-]: GETTABLE  R17 R17 K19  ; R17 := R17["ANCHOR_V_CENTRE"]
535 [-]: GETUPVAL  R18 U0       ; R18 := U0
536 [-]: GETTABLE  R18 R18 K14  ; R18 := R18["ANCHOR_H_LEFT"]
537 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
538 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
539 [-]: GETUPVAL  R12 U0       ; R12 := U0
540 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
541 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
542 [-]: LOADK     R15 K136     ; R15 := "CorpusDeco.RightFlourish"
543 [-]: NEWTABLE  R16 2 0      ; R16 := {}
544 [-]: GETUPVAL  R17 U0       ; R17 := U0
545 [-]: GETTABLE  R17 R17 K19  ; R17 := R17["ANCHOR_V_CENTRE"]
546 [-]: GETUPVAL  R18 U0       ; R18 := U0
547 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["ANCHOR_H_RIGHT"]
548 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
549 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
550 [-]: GETUPVAL  R12 U0       ; R12 := U0
551 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
552 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
553 [-]: LOADK     R15 K137     ; R15 := "MoaComponent"
554 [-]: NEWTABLE  R16 2 0      ; R16 := {}
555 [-]: GETUPVAL  R17 U0       ; R17 := U0
556 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["ANCHOR_V_BOTTOM"]
557 [-]: GETUPVAL  R18 U0       ; R18 := U0
558 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["ANCHOR_H_RIGHT"]
559 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
560 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
561 [-]: GETUPVAL  R12 U0       ; R12 := U0
562 [-]: SELF      R12 R12 K3   ; R13 := R12; R12 := R12[0x20ff29f7]
563 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
564 [-]: LOADK     R15 K138     ; R15 := "StockTicker"
565 [-]: NEWTABLE  R16 2 0      ; R16 := {}
566 [-]: GETUPVAL  R17 U0       ; R17 := U0
567 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["ANCHOR_V_TOP"]
568 [-]: GETUPVAL  R18 U0       ; R18 := U0
569 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["ANCHOR_H_RIGHT"]
570 [-]: SETLIST   R16 2 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
571 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
572 [-]: GETUPVAL  R12 U0       ; R12 := U0
573 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12[0xfaa69527]
574 [-]: GETGLOBAL R14 K4       ; R14 := 0xae91e43b
575 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14[0x6b837788]
576 [-]: CALL      R14 2 2      ; R14 := R14(R15)
577 [-]: GETGLOBAL R15 K4       ; R15 := 0xae91e43b
578 [-]: SELF      R15 R15 K23  ; R16 := R15; R15 := R15[0xaf9fda9f]
579 [-]: CALL      R15 2 2      ; R15 := R15(R16)
580 [-]: LOADKB    R16 1 0      ; R16 := true
581 [-]: GETUPVAL  R17 U1       ; R17 := U1
582 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["HudScalePadding"]
583 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
584 [-]: NEWTABLE  R12 2 0      ; R12 := {}
585 [-]: LOADK     R13 K137     ; R13 := "MoaComponent"
586 [-]: LOADK     R14 K138     ; R14 := "StockTicker"
587 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
588 [-]: GETGLOBAL R13 K97      ; R13 := 0xc8802016
589 [-]: MOVE      R14 R12      ; R14 := R12
590 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
591 [-]: JMP       597          ; PC := 597
592 [-]: GETGLOBAL R18 K37      ; R18 := _T
593 [-]: GETTABLE  R18 R18 K98  ; R18 := R18[0x6b23d28b]
594 [-]: GETGLOBAL R19 K4       ; R19 := 0xae91e43b
595 [-]: MOVE      R20 R17      ; R20 := R17
596 [-]: CALL      R18 3 1      ; R18(R19,R20)
597 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 592; R15 := R16 end
598 [-]: JMP       592          ; PC := 592
599 [-]: JMP       679          ; PC := 679
600 [-]: GETGLOBAL R18 K0       ; R18 := 0xe72d2edb
601 [-]: EQ        0 R18 K139   ; if R18 ~= 4.000000 then PC := 679
602 [-]: JMP       679          ; PC := 679
603 [-]: NEWTABLE  R18 4 0      ; R18 := {}
604 [-]: NEWTABLE  R19 0 3      ; R19 := {}
605 [-]: SETTABLE  R19 K109 K110; R19["Ability"] := "ACTIVATE_ABILITY_MENU_0"
606 [-]: SETTABLE  R19 K67 K140 ; R19["X"] := -154.300003
607 [-]: SETTABLE  R19 K49 K141 ; R19["Y"] := 18.000000
608 [-]: NEWTABLE  R20 0 3      ; R20 := {}
609 [-]: SETTABLE  R20 K109 K113; R20["Ability"] := "ACTIVATE_ABILITY_MENU_1"
610 [-]: SETTABLE  R20 K67 K142 ; R20["X"] := -98.900002
611 [-]: SETTABLE  R20 K49 K141 ; R20["Y"] := 18.000000
612 [-]: NEWTABLE  R21 0 3      ; R21 := {}
613 [-]: SETTABLE  R21 K109 K114; R21["Ability"] := "ACTIVATE_ABILITY_MENU_2"
614 [-]: SETTABLE  R21 K67 K143 ; R21["X"] := -42.750000
615 [-]: SETTABLE  R21 K49 K141 ; R21["Y"] := 18.000000
616 [-]: NEWTABLE  R22 0 3      ; R22 := {}
617 [-]: SETTABLE  R22 K109 K144; R22["Ability"] := "ACTIVATE_ABILITY_MENU_3"
618 [-]: SETTABLE  R22 K67 K145 ; R22["X"] := 12.250000
619 [-]: SETTABLE  R22 K49 K141 ; R22["Y"] := 18.000000
620 [-]: SETLIST   R18 4 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
621 [-]: SETUPVAL  R18 U6       ; U82 := R6
622 [-]: GETUPVAL  R18 U5       ; R18 := U5
623 [-]: GETGLOBAL R19 K147     ; R19 := 0x25d99d89
624 [-]: SELF      R19 R19 K148 ; R20 := R19; R19 := R19[0x25a6e75e]
625 [-]: CALL      R19 2 2      ; R19 := R19(R20)
626 [-]: SELF      R19 R19 K149 ; R20 := R19; R19 := R19[0x8e7c3b5e]
627 [-]: CALL      R19 2 2      ; R19 := R19(R20)
628 [-]: GETGLOBAL R20 K150     ; R20 := 0x7ed0a956
629 [-]: LOADK     R21 K151     ; R21 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
630 [-]: CALL      R20 2 2      ; R20 := R20(R21)
631 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 634
632 [-]: JMP       634          ; PC := 634
633 [-]: LOADKB    R19 0 1      ; R19 := false; PC := 634
634 [-]: LOADKB    R19 1 0      ; R19 := true
635 [-]: SETTABLE  R18 K146 R19 ; R18["NewWarActive"] := R19
636 [-]: GETGLOBAL R18 K39      ; R18 := 0x7b998233
637 [-]: GETGLOBAL R19 K37      ; R19 := _T
638 [-]: GETTABLE  R19 R19 K40  ; R19 := R19["ImpactMessageTexturePacks"]
639 [-]: CALL      R18 2 2      ; R18 := R18(R19)
640 [-]: TEST      R18 0        ; if not R18 then PC := 645
641 [-]: JMP       645          ; PC := 645
642 [-]: GETGLOBAL R18 K37      ; R18 := _T
643 [-]: NEWTABLE  R19 0 0      ; R19 := {}
644 [-]: SETTABLE  R18 K40 R19  ; R18["ImpactMessageTexturePacks"] := R19
645 [-]: GETGLOBAL R18 K37      ; R18 := _T
646 [-]: GETTABLE  R18 R18 K40  ; R18 := R18["ImpactMessageTexturePacks"]
647 [-]: NEWTABLE  R19 0 12     ; R19 := {}
648 [-]: GETGLOBAL R20 K43      ; R20 := 0xb009bbc6
649 [-]: LOADK     R21 K154     ; R21 := "/Lotus/Interface/HudGraphics/Duviri/DuviriImpactMsg/DuviriImpactStroke.png"
650 [-]: CALL      R20 2 2      ; R20 := R20(R21)
651 [-]: SETTABLE  R19 K153 R20 ; R19["StaticIconBg"] := R20
652 [-]: NEWTABLE  R20 0 5      ; R20 := {}
653 [-]: SETTABLE  R20 K46 K156 ; R20["Width"] := 389.000000
654 [-]: SETTABLE  R20 K48 K157 ; R20["Height"] := 97.000000
655 [-]: SETTABLE  R20 K59 K158 ; R20["Color"] := 14260890.000000
656 [-]: SETTABLE  R20 K67 K159 ; R20["X"] := 14.000000
657 [-]: SETTABLE  R20 K49 K160 ; R20["Y"] := 53.000000
658 [-]: SETTABLE  R19 K155 R20 ; R19["StaticIconBgAdjust"] := R20
659 [-]: GETGLOBAL R20 K43      ; R20 := 0xb009bbc6
660 [-]: LOADK     R21 K162     ; R21 := "/Lotus/Interface/HudGraphics/Duviri/DuviriImpactMsg/DuviriImpactBacker.png"
661 [-]: CALL      R20 2 2      ; R20 := R20(R21)
662 [-]: SETTABLE  R19 K161 R20 ; R19["StaticIconBg3"] := R20
663 [-]: NEWTABLE  R20 0 5      ; R20 := {}
664 [-]: SETTABLE  R20 K46 K156 ; R20["Width"] := 389.000000
665 [-]: SETTABLE  R20 K48 K157 ; R20["Height"] := 97.000000
666 [-]: SETTABLE  R20 K59 K60  ; R20["Color"] := 1315613.000000
667 [-]: SETTABLE  R20 K67 K159 ; R20["X"] := 14.000000
668 [-]: SETTABLE  R20 K49 K160 ; R20["Y"] := 53.000000
669 [-]: SETTABLE  R19 K163 R20 ; R19["StaticIconBg3Adjust"] := R20
670 [-]: SETTABLE  R19 K164 K90 ; R19["HideUnderlay"] := true
671 [-]: SETTABLE  R19 K165 K166; R19["ShowBgLines"] := false
672 [-]: SETTABLE  R19 K167 K166; R19["ShowFlare"] := false
673 [-]: SETTABLE  R19 K168 K90 ; R19["ShowTextShadow"] := true
674 [-]: SETTABLE  R19 K93 K169 ; R19["FontName"] := "Flareserif"
675 [-]: SETTABLE  R19 K95 K96  ; R19["FontSize"] := 19.000000
676 [-]: SETTABLE  R19 K170 K171; R19["LabelYOffset"] := -58.000000
677 [-]: SETTABLE  R19 K84 K158 ; R19["LabelColorOverride"] := 14260890.000000
678 [-]: SETTABLE  R18 K152 R19 ; R18["Drifter"] := R19
679 [-]: GETGLOBAL R18 K172     ; R18 := 0x89326c93
680 [-]: SELF      R18 R18 K173 ; R19 := R18; R18 := R18[0x78298275]
681 [-]: CALL      R18 2 2      ; R18 := R18(R19)
682 [-]: GETGLOBAL R19 K39      ; R19 := 0x7b998233
683 [-]: MOVE      R20 R18      ; R20 := R18
684 [-]: CALL      R19 2 2      ; R19 := R19(R20)
685 [-]: TEST      R19 1        ; if R19 then PC := 714
686 [-]: JMP       714          ; PC := 714
687 [-]: SELF      R19 R18 K174 ; R20 := R18; R19 := R18[0xde321e6f]
688 [-]: CALL      R19 2 2      ; R19 := R19(R20)
689 [-]: SELF      R19 R19 K175 ; R20 := R19; R19 := R19[0x881b6b90]
690 [-]: CONST     R21 0        ; R21 := 0.000000
691 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
692 [-]: GETGLOBAL R20 K39      ; R20 := 0x7b998233
693 [-]: MOVE      R21 R19      ; R21 := R19
694 [-]: CALL      R20 2 2      ; R20 := R20(R21)
695 [-]: TEST      R20 1        ; if R20 then PC := 714
696 [-]: JMP       714          ; PC := 714
697 [-]: SELF      R20 R19 K177 ; R21 := R19; R20 := R19[0x3279baa3]
698 [-]: LOADKB    R22 1 0      ; R22 := true
699 [-]: CALL      R20 3 1      ; R20(R21,R22)
700 [-]: GETUPVAL  R20 U8       ; R20 := U8
701 [-]: SELF      R21 R19 K178 ; R22 := R19; R21 := R19[0x7a7373f5]
702 [-]: CALL      R21 2 2      ; R21 := R21(R22)
703 [-]: GETGLOBAL R22 K179     ; R22 := 0x5bced4c4
704 [-]: GETTABLE  R22 R22 K180 ; R22 := R22[0xac1b386a]
705 [-]: LOADK     R23 K181     ; R23 := 9999.000000
706 [-]: SELF      R24 R19 K182 ; R25 := R19; R24 := R19[0x094b3a83]
707 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
708 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
709 [-]: SELF      R23 R19 K183 ; R24 := R19; R23 := R19[0xd6bd1155]
710 [-]: CALL      R23 2 2      ; R23 := R23(R24)
711 [-]: SELF      R24 R19 K184 ; R25 := R19; R24 := R19[0xa63336e7]
712 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
713 [-]: CALL      R20 0 1      ; R20(R21,...)
714 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 5663
; #Upvalues:       40
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  57

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "_root"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 0         ; R4 := 0.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K3 K4     ; R0["Fade"] := 1.000000
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K5 K6     ; R0["WaitingForProgressMovie"] := true
 11 [-]: GETGLOBAL R0 K7        ; R0 := 0x38f10e85
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 13 [-]: LOADK     R2 K8        ; R2 := "MiniMapContainer.MiniMap.setMask"
 14 [-]: LOADK     R3 K9        ; R3 := "MiniMapContainer.Mask"
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 17 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0xaade900e]
 18 [-]: LOADK     R2 K11       ; R2 := "TargetStatus.Name"
 19 [-]: CONST     R3 11        ; R3 := 11.000000
 20 [-]: LOADKB    R4 0 0       ; R4 := false
 21 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 22 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 23 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0xaade900e]
 24 [-]: LOADK     R2 K12       ; R2 := "TargetStatus.Desc"
 25 [-]: CONST     R3 11        ; R3 := 11.000000
 26 [-]: LOADKB    R4 0 0       ; R4 := false
 27 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 28 [-]: GETGLOBAL R0 K13       ; R0 := _T
 29 [-]: GETGLOBAL R1 K15       ; R1 := 0xe72d2edb
 30 [-]: SETTABLE  R0 K14 R1    ; R0["HudType"] := R1
 31 [-]: GETGLOBAL R0 K16       ; R0 := 0x7b998233
 32 [-]: GETGLOBAL R1 K17       ; R1 := 0x9d6c77be
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: GETUPVAL  R0 U1        ; R0 := U1
 37 [-]: GETGLOBAL R1 K17       ; R1 := 0x9d6c77be
 38 [-]: CALL      R0 2 1       ; R0(R1)
 39 [-]: GETGLOBAL R0 K16       ; R0 := 0x7b998233
 40 [-]: GETGLOBAL R1 K18       ; R1 := 0x4c5fdf9c
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: TEST      R0 1         ; if R0 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R0 K19       ; R0 := 0x9ba7909f
 45 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0[0x6dd7aa66]
 46 [-]: GETGLOBAL R2 K18       ; R2 := 0x4c5fdf9c
 47 [-]: CALL      R0 3 1       ; R0(R1,R2)
 48 [-]: GETGLOBAL R0 K16       ; R0 := 0x7b998233
 49 [-]: GETGLOBAL R1 K21       ; R1 := 0x13d86d46
 50 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 51 [-]: TEST      R0 1         ; if R0 then PC := 84
 52 [-]: JMP       84           ; PC := 84
 53 [-]: GETUPVAL  R0 U2        ; R0 := U2
 54 [-]: GETGLOBAL R1 K19       ; R1 := 0x9ba7909f
 55 [-]: SELF      R1 R1 K23    ; R2 := R1; R1 := R1[0xbcfb64ab]
 56 [-]: GETGLOBAL R3 K21       ; R3 := 0x13d86d46
 57 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 58 [-]: SETTABLE  R0 K22 R1    ; R0["mHudMarkersMovie"] := R1
 59 [-]: GETGLOBAL R0 K16       ; R0 := 0x7b998233
 60 [-]: GETUPVAL  R1 U2        ; R1 := U2
 61 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["mHudMarkersMovie"]
 62 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 63 [-]: TEST      R0 0         ; if not R0 then PC := 84
 64 [-]: JMP       84           ; PC := 84
 65 [-]: GETUPVAL  R0 U2        ; R0 := U2
 66 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 67 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0x1fd6abd0]
 68 [-]: GETGLOBAL R3 K21       ; R3 := 0x13d86d46
 69 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 70 [-]: SETTABLE  R0 K22 R1    ; R0["mHudMarkersMovie"] := R1
 71 [-]: GETGLOBAL R0 K16       ; R0 := 0x7b998233
 72 [-]: GETUPVAL  R1 U2        ; R1 := U2
 73 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["mHudMarkersMovie"]
 74 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 75 [-]: TEST      R0 1         ; if R0 then PC := 84
 76 [-]: JMP       84           ; PC := 84
 77 [-]: GETUPVAL  R0 U2        ; R0 := U2
 78 [-]: GETTABLE  R0 R0 K22    ; R0 := R0["mHudMarkersMovie"]
 79 [-]: SELF      R0 R0 K25    ; R1 := R0; R0 := R0[0x263a3cc2]
 80 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 81 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2[0xcd73323e]
 82 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 83 [-]: CALL      R0 0 1       ; R0(R1,...)
 84 [-]: GETUPVAL  R0 U2        ; R0 := U2
 85 [-]: GETGLOBAL R1 K19       ; R1 := 0x9ba7909f
 86 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1[0xbf9494fc]
 87 [-]: LOADK     R3 K29       ; R3 := "HUD.UseAlternateHud"
 88 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 89 [-]: SETTABLE  R0 K27 R1    ; R0["IsAlternateHud"] := R1
 90 [-]: GETUPVAL  R0 U2        ; R0 := U2
 91 [-]: GETTABLE  R0 R0 K27    ; R0 := R0["IsAlternateHud"]
 92 [-]: TEST      R0 0         ; if not R0 then PC := 100
 93 [-]: JMP       100          ; PC := 100
 94 [-]: GETGLOBAL R0 K19       ; R0 := 0x9ba7909f
 95 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0[0x6dd7aa66]
 96 [-]: GETGLOBAL R2 K30       ; R2 := 0x4e5d03d3
 97 [-]: CALL      R0 3 1       ; R0(R1,R2)
 98 [-]: GETUPVAL  R0 U0        ; R0 := U0
 99 [-]: SETTABLE  R0 K3 K31    ; R0["Fade"] := 0.000000
100 [-]: CONST     R0 25        ; R0 := 25.000000
101 [-]: GETUPVAL  R1 U3        ; R1 := U3
102 [-]: LOADKB    R2 1 0       ; R2 := true
103 [-]: CALL      R1 2 1       ; R1(R2)
104 [-]: GETUPVAL  R1 U2        ; R1 := U2
105 [-]: GETUPVAL  R2 U4        ; R2 := U4
106 [-]: SELF      R2 R2 K33    ; R3 := R2; R2 := R2[0x1a8ce866]
107 [-]: CALL      R2 2 2       ; R2 := R2(R3)
108 [-]: SETTABLE  R1 K32 R2    ; R1["IsInConclave"] := R2
109 [-]: GETUPVAL  R1 U5        ; R1 := U5
110 [-]: CALL      R1 1 1       ; R1()
111 [-]: GETUPVAL  R1 U6        ; R1 := U6
112 [-]: GETTABLE  R1 R1 K34    ; R1 := R1[0xca6539f4]
113 [-]: CALL      R1 1 1       ; R1()
114 [-]: GETGLOBAL R1 K35       ; R1 := 0x76ea806b
115 [-]: SELF      R1 R1 K36    ; R2 := R1; R1 := R1[0x8792aaab]
116 [-]: CALL      R1 2 2       ; R1 := R1(R2)
117 [-]: TEST      R1 0         ; if not R1 then PC := 128
118 [-]: JMP       128          ; PC := 128
119 [-]: GETGLOBAL R1 K37       ; R1 := 0x11a19c5e
120 [-]: GETGLOBAL R2 K35       ; R2 := 0x76ea806b
121 [-]: SELF      R2 R2 K38    ; R3 := R2; R2 := R2[0x3f3ae64c]
122 [-]: CONST     R4 0         ; R4 := 0.000000
123 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
124 [-]: SELF      R2 R2 K39    ; R3 := R2; R2 := R2[0x80563238]
125 [-]: CALL      R2 2 2       ; R2 := R2(R3)
126 [-]: LOADK     R3 K40       ; R3 := "OnProfileSaved"
127 [-]: CALL      R1 3 1       ; R1(R2,R3)
128 [-]: NEWTABLE  R1 9 0       ; R1 := {}
129 [-]: LOADK     R2 K41       ; R2 := "ProgressBar"
130 [-]: LOADK     R3 K42       ; R3 := "Timer"
131 [-]: LOADK     R4 K43       ; R4 := "HealthTracker"
132 [-]: LOADK     R5 K44       ; R5 := "OpponentBar"
133 [-]: LOADK     R6 K45       ; R6 := "Label"
134 [-]: LOADK     R7 K46       ; R7 := "IconBar"
135 [-]: LOADK     R8 K47       ; R8 := "TemperatureBar"
136 [-]: LOADK     R9 K48       ; R9 := "CorruptionMeter"
137 [-]: LOADK     R10 K49      ; R10 := "NodeConflictBar"
138 [-]: SETLIST   R1 9 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 9
139 [-]: GETGLOBAL R2 K50       ; R2 := 0xc8802016
140 [-]: MOVE      R3 R1        ; R3 := R1
141 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
142 [-]: JMP       150          ; PC := 150
143 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
144 [-]: SELF      R7 R7 K51    ; R8 := R7; R7 := R7[0xc0a3774b]
145 [-]: LOADK     R9 K52       ; R9 := "HudTracker.Trackers"
146 [-]: MOVE      R10 R6       ; R10 := R6
147 [-]: CONST     R11 11       ; R11 := 11.000000
148 [-]: LOADKB    R12 0 0      ; R12 := false
149 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
150 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 143; R4 := R5 end
151 [-]: JMP       143          ; PC := 143
152 [-]: GETGLOBAL R7 K53       ; R7 := 0x34291f5c
153 [-]: GETTABLE  R7 R7 K54    ; R7 := R7[0xa7a2e381]
154 [-]: CALL      R7 1 2       ; R7 := R7()
155 [-]: TEST      R7 0         ; if not R7 then PC := 171
156 [-]: JMP       171          ; PC := 171
157 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
158 [-]: SELF      R7 R7 K55    ; R8 := R7; R7 := R7[0xe261aa96]
159 [-]: LOADK     R9 K52       ; R9 := "HudTracker.Trackers"
160 [-]: LOADK     R10 K45      ; R10 := "Label"
161 [-]: CONST     R11 41       ; R11 := 41.000000
162 [-]: LOADK     R12 K56      ; R12 := "Arial Unicode MS"
163 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
164 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
165 [-]: SELF      R7 R7 K55    ; R8 := R7; R7 := R7[0xe261aa96]
166 [-]: LOADK     R9 K57       ; R9 := "HudTracker.Trackers.HealthTracker"
167 [-]: LOADK     R10 K58      ; R10 := "Name"
168 [-]: CONST     R11 41       ; R11 := 41.000000
169 [-]: LOADK     R12 K56      ; R12 := "Arial Unicode MS"
170 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
171 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
172 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0xaade900e]
173 [-]: LOADK     R9 K59       ; R9 := "MiniMapContainer.BroadcastMessage"
174 [-]: CONST     R10 11       ; R10 := 11.000000
175 [-]: LOADKB    R11 0 0      ; R11 := false
176 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
177 [-]: GETUPVAL  R7 U4        ; R7 := U4
178 [-]: SELF      R7 R7 K60    ; R8 := R7; R7 := R7[0xf2deaf69]
179 [-]: GETGLOBAL R9 K61       ; R9 := gLotusBaseGameRulesType
180 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
181 [-]: TEST      R7 0         ; if not R7 then PC := 211
182 [-]: JMP       211          ; PC := 211
183 [-]: GETUPVAL  R7 U4        ; R7 := U4
184 [-]: SELF      R7 R7 K62    ; R8 := R7; R7 := R7[0xef893aec]
185 [-]: CALL      R7 2 2       ; R7 := R7(R8)
186 [-]: GETUPVAL  R8 U7        ; R8 := U7
187 [-]: GETTABLE  R9 R7 K64    ; R9 := R7["location"]
188 [-]: GETUPVAL  R10 U6       ; R10 := U6
189 [-]: GETTABLE  R10 R10 K65  ; R10 := R10["CETUS_NODE_TAG"]
190 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 196
191 [-]: JMP       196          ; PC := 196
192 [-]: GETTABLE  R9 R7 K66    ; R9 := R7["missionType"]
193 [-]: EQ        1 R9 K68     ; if R9 == 28.000000 then PC := 196
194 [-]: JMP       196          ; PC := 196
195 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 196
196 [-]: LOADKB    R9 1 0       ; R9 := true
197 [-]: SETTABLE  R8 K63 R9    ; R8["Active"] := R9
198 [-]: GETUPVAL  R8 U7        ; R8 := U7
199 [-]: GETTABLE  R9 R7 K66    ; R9 := R7["missionType"]
200 [-]: EQ        1 R9 K68     ; if R9 == 28.000000 then PC := 203
201 [-]: JMP       203          ; PC := 203
202 [-]: LOADKB    R9 0 1       ; R9 := false; PC := 203
203 [-]: LOADKB    R9 1 0       ; R9 := true
204 [-]: SETTABLE  R8 K69 R9    ; R8["Landscape"] := R9
205 [-]: GETUPVAL  R8 U7        ; R8 := U7
206 [-]: SETTABLE  R8 K70 K71   ; R8["Visible"] := false
207 [-]: GETUPVAL  R8 U7        ; R8 := U7
208 [-]: SETTABLE  R8 K72 K31   ; R8["DayCount"] := 0.000000
209 [-]: GETUPVAL  R8 U7        ; R8 := U7
210 [-]: SETTABLE  R8 K73 K31   ; R8["GameTimeAtDusk"] := 0.000000
211 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
212 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xaade900e]
213 [-]: LOADK     R10 K74      ; R10 := "MiniMapContainer.Clock"
214 [-]: CONST     R11 11       ; R11 := 11.000000
215 [-]: GETUPVAL  R12 U7       ; R12 := U7
216 [-]: GETTABLE  R12 R12 K70  ; R12 := R12["Visible"]
217 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
218 [-]: GETUPVAL  R8 U7        ; R8 := U7
219 [-]: GETTABLE  R8 R8 K70    ; R8 := R8["Visible"]
220 [-]: TEST      R8 0         ; if not R8 then PC := 252
221 [-]: JMP       252          ; PC := 252
222 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
223 [-]: SELF      R8 R8 K75    ; R9 := R8; R8 := R8[0xef99134f]
224 [-]: LOADK     R10 K76      ; R10 := "MiniMapContainer.Clock.Spinner.Day"
225 [-]: GETGLOBAL R11 K77      ; R11 := 0x3d08cdc8
226 [-]: GETTABLE  R11 R11 K4   ; R11 := R11[1.000000]
227 [-]: GETGLOBAL R12 K78      ; R12 := 0x0032441c
228 [-]: GETTABLE  R12 R12 K79  ; R12 := R12["UIMaterial_Plain"]
229 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
230 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
231 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8[0x67bc869f]
232 [-]: LOADK     R10 K76      ; R10 := "MiniMapContainer.Clock.Spinner.Day"
233 [-]: CONST     R11 9        ; R11 := 9.000000
234 [-]: GETGLOBAL R12 K78      ; R12 := 0x0032441c
235 [-]: GETTABLE  R12 R12 K80  ; R12 := R12["UIColor_PvpTeamOne"]
236 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
237 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
238 [-]: SELF      R8 R8 K75    ; R9 := R8; R8 := R8[0xef99134f]
239 [-]: LOADK     R10 K81      ; R10 := "MiniMapContainer.Clock.Spinner.Night"
240 [-]: GETGLOBAL R11 K77      ; R11 := 0x3d08cdc8
241 [-]: GETTABLE  R11 R11 K82  ; R11 := R11[2.000000]
242 [-]: GETGLOBAL R12 K78      ; R12 := 0x0032441c
243 [-]: GETTABLE  R12 R12 K79  ; R12 := R12["UIMaterial_Plain"]
244 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
245 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
246 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8[0x67bc869f]
247 [-]: LOADK     R10 K81      ; R10 := "MiniMapContainer.Clock.Spinner.Night"
248 [-]: CONST     R11 9        ; R11 := 9.000000
249 [-]: GETGLOBAL R12 K78      ; R12 := 0x0032441c
250 [-]: GETTABLE  R12 R12 K83  ; R12 := R12["UIColor_PvpTeamTwo"]
251 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
252 [-]: GETUPVAL  R8 U8        ; R8 := U8
253 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
254 [-]: SELF      R9 R9 K85    ; R10 := R9; R9 := R9[0x42b04007]
255 [-]: LOADK     R11 K86      ; R11 := "/Lotus/Language/Menu/VoidTearProgressTitle"
256 [-]: LOADKB    R12 1 0      ; R12 := true
257 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
258 [-]: SETTABLE  R8 K84 R9    ; R8["Message"] := R9
259 [-]: GETUPVAL  R8 U8        ; R8 := U8
260 [-]: GETGLOBAL R9 K88       ; R9 := 0xb2f21425
261 [-]: SETTABLE  R8 K87 R9    ; R8["Icon"] := R9
262 [-]: GETUPVAL  R8 U8        ; R8 := U8
263 [-]: SETTABLE  R8 K89 K6    ; R8["UpdateOverrides"] := true
264 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
265 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8[0x67bc869f]
266 [-]: LOADK     R10 K90      ; R10 := "MiniMapContainer.VoidTearProgress"
267 [-]: CONST     R11 10       ; R11 := 10.000000
268 [-]: CONST     R12 0        ; R12 := 0.000000
269 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
270 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
271 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8[0x67bc869f]
272 [-]: LOADK     R10 K91      ; R10 := "Card"
273 [-]: CONST     R11 1        ; R11 := 1.000000
274 [-]: CONST     R12 360      ; R12 := 360.000000
275 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
276 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
277 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xaade900e]
278 [-]: LOADK     R10 K92      ; R10 := "MiniMapContainer.VoidTearProgress.List"
279 [-]: CONST     R11 11       ; R11 := 11.000000
280 [-]: LOADKB    R12 0 0      ; R12 := false
281 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
282 [-]: GETUPVAL  R8 U9        ; R8 := U9
283 [-]: CALL      R8 1 1       ; R8()
284 [-]: GETUPVAL  R8 U10       ; R8 := U10
285 [-]: CALL      R8 1 1       ; R8()
286 [-]: GETUPVAL  R8 U12       ; R8 := U12
287 [-]: GETTABLE  R8 R8 K93    ; R8 := R8[0xae6791ba]
288 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
289 [-]: CALL      R8 2 2       ; R8 := R8(R9)
290 [-]: SETUPVAL  R8 U11       ; U82 := R11
291 [-]: GETUPVAL  R8 U11       ; R8 := U11
292 [-]: GETUPVAL  R9 U13       ; R9 := U13
293 [-]: GETTABLE  R9 R9 K95    ; R9 := R9["HudScalePadding"]
294 [-]: SETTABLE  R8 K94 R9    ; R8["mHudScalePadding"] := R9
295 [-]: GETUPVAL  R8 U11       ; R8 := U11
296 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
297 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
298 [-]: LOADK     R11 K97      ; R11 := "LogMessageContainer"
299 [-]: NEWTABLE  R12 2 0      ; R12 := {}
300 [-]: GETUPVAL  R13 U11      ; R13 := U11
301 [-]: GETTABLE  R13 R13 K98  ; R13 := R13["ANCHOR_V_BOTTOM"]
302 [-]: GETUPVAL  R14 U11      ; R14 := U11
303 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
304 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
305 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
306 [-]: GETUPVAL  R8 U11       ; R8 := U11
307 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
308 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
309 [-]: LOADK     R11 K91      ; R11 := "Card"
310 [-]: NEWTABLE  R12 2 0      ; R12 := {}
311 [-]: GETUPVAL  R13 U11      ; R13 := U11
312 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
313 [-]: GETUPVAL  R14 U11      ; R14 := U11
314 [-]: GETTABLE  R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
315 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
316 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
317 [-]: GETUPVAL  R8 U11       ; R8 := U11
318 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
319 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
320 [-]: LOADK     R11 K102     ; R11 := "HealthAndShield"
321 [-]: NEWTABLE  R12 2 0      ; R12 := {}
322 [-]: GETUPVAL  R13 U11      ; R13 := U11
323 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
324 [-]: GETUPVAL  R14 U11      ; R14 := U11
325 [-]: GETTABLE  R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
326 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
327 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
328 [-]: GETUPVAL  R8 U11       ; R8 := U11
329 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
330 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
331 [-]: LOADK     R11 K104     ; R11 := "WeaponFrame"
332 [-]: NEWTABLE  R12 2 0      ; R12 := {}
333 [-]: GETUPVAL  R13 U11      ; R13 := U11
334 [-]: GETTABLE  R13 R13 K98  ; R13 := R13["ANCHOR_V_BOTTOM"]
335 [-]: GETUPVAL  R14 U11      ; R14 := U11
336 [-]: GETTABLE  R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
337 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
338 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
339 [-]: GETUPVAL  R8 U11       ; R8 := U11
340 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
341 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
342 [-]: LOADK     R11 K105     ; R11 := "QuestMessage"
343 [-]: NEWTABLE  R12 2 0      ; R12 := {}
344 [-]: GETUPVAL  R13 U11      ; R13 := U11
345 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
346 [-]: GETUPVAL  R14 U11      ; R14 := U11
347 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
348 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
349 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
350 [-]: GETUPVAL  R8 U11       ; R8 := U11
351 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
352 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
353 [-]: LOADK     R11 K106     ; R11 := "AbilityPanel"
354 [-]: NEWTABLE  R12 2 0      ; R12 := {}
355 [-]: GETUPVAL  R13 U11      ; R13 := U11
356 [-]: GETTABLE  R13 R13 K98  ; R13 := R13["ANCHOR_V_BOTTOM"]
357 [-]: GETUPVAL  R14 U11      ; R14 := U11
358 [-]: GETTABLE  R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
359 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
360 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
361 [-]: GETUPVAL  R8 U11       ; R8 := U11
362 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
363 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
364 [-]: LOADK     R11 K107     ; R11 := "MiniMapContainer"
365 [-]: NEWTABLE  R12 2 0      ; R12 := {}
366 [-]: GETUPVAL  R13 U11      ; R13 := U11
367 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
368 [-]: GETUPVAL  R14 U11      ; R14 := U11
369 [-]: GETTABLE  R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
370 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
371 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
372 [-]: GETUPVAL  R8 U11       ; R8 := U11
373 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
374 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
375 [-]: LOADK     R11 K109     ; R11 := "MiniMapOverlayMsg"
376 [-]: NEWTABLE  R12 2 0      ; R12 := {}
377 [-]: GETUPVAL  R13 U11      ; R13 := U11
378 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
379 [-]: GETUPVAL  R14 U11      ; R14 := U11
380 [-]: GETTABLE  R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
381 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
382 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
383 [-]: GETUPVAL  R8 U11       ; R8 := U11
384 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
385 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
386 [-]: LOADK     R11 K110     ; R11 := "HudTracker"
387 [-]: NEWTABLE  R12 2 0      ; R12 := {}
388 [-]: GETUPVAL  R13 U11      ; R13 := U11
389 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
390 [-]: GETUPVAL  R14 U11      ; R14 := U11
391 [-]: GETTABLE  R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
392 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
393 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
394 [-]: GETUPVAL  R8 U11       ; R8 := U11
395 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
396 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
397 [-]: LOADK     R11 K111     ; R11 := "Reticle"
398 [-]: NEWTABLE  R12 2 0      ; R12 := {}
399 [-]: GETUPVAL  R13 U11      ; R13 := U11
400 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
401 [-]: GETUPVAL  R14 U11      ; R14 := U11
402 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
403 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
404 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
405 [-]: GETUPVAL  R8 U11       ; R8 := U11
406 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
407 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
408 [-]: LOADK     R11 K112     ; R11 := "ReticleCustom"
409 [-]: NEWTABLE  R12 2 0      ; R12 := {}
410 [-]: GETUPVAL  R13 U11      ; R13 := U11
411 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
412 [-]: GETUPVAL  R14 U11      ; R14 := U11
413 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
414 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
415 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
416 [-]: GETUPVAL  R8 U11       ; R8 := U11
417 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
418 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
419 [-]: LOADK     R11 K113     ; R11 := "AbilityDots"
420 [-]: NEWTABLE  R12 2 0      ; R12 := {}
421 [-]: GETUPVAL  R13 U11      ; R13 := U11
422 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
423 [-]: GETUPVAL  R14 U11      ; R14 := U11
424 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
425 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
426 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
427 [-]: GETUPVAL  R8 U11       ; R8 := U11
428 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
429 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
430 [-]: LOADK     R11 K114     ; R11 := "Stamina"
431 [-]: NEWTABLE  R12 2 0      ; R12 := {}
432 [-]: GETUPVAL  R13 U11      ; R13 := U11
433 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
434 [-]: GETUPVAL  R14 U11      ; R14 := U11
435 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
436 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
437 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
438 [-]: GETUPVAL  R8 U11       ; R8 := U11
439 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
440 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
441 [-]: LOADK     R11 K115     ; R11 := "SuccessfulHitNotification"
442 [-]: NEWTABLE  R12 2 0      ; R12 := {}
443 [-]: GETUPVAL  R13 U11      ; R13 := U11
444 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
445 [-]: GETUPVAL  R14 U11      ; R14 := U11
446 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
447 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
448 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
449 [-]: GETUPVAL  R8 U11       ; R8 := U11
450 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
451 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
452 [-]: LOADK     R11 K116     ; R11 := "Notification"
453 [-]: NEWTABLE  R12 2 0      ; R12 := {}
454 [-]: GETUPVAL  R13 U11      ; R13 := U11
455 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
456 [-]: GETUPVAL  R14 U11      ; R14 := U11
457 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
458 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
459 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
460 [-]: GETUPVAL  R8 U11       ; R8 := U11
461 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
462 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
463 [-]: LOADK     R11 K117     ; R11 := "SlamIndicator"
464 [-]: NEWTABLE  R12 2 0      ; R12 := {}
465 [-]: GETUPVAL  R13 U11      ; R13 := U11
466 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
467 [-]: GETUPVAL  R14 U11      ; R14 := U11
468 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
469 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
470 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
471 [-]: GETUPVAL  R8 U11       ; R8 := U11
472 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
473 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
474 [-]: LOADK     R11 K118     ; R11 := "SyndicatePower"
475 [-]: NEWTABLE  R12 2 0      ; R12 := {}
476 [-]: GETUPVAL  R13 U11      ; R13 := U11
477 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
478 [-]: GETUPVAL  R14 U11      ; R14 := U11
479 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
480 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
481 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
482 [-]: GETUPVAL  R8 U11       ; R8 := U11
483 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
484 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
485 [-]: LOADK     R11 K119     ; R11 := "reloadTimer"
486 [-]: NEWTABLE  R12 2 0      ; R12 := {}
487 [-]: GETUPVAL  R13 U11      ; R13 := U11
488 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
489 [-]: GETUPVAL  R14 U11      ; R14 := U11
490 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
491 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
492 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
493 [-]: GETUPVAL  R8 U11       ; R8 := U11
494 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
495 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
496 [-]: LOADK     R11 K120     ; R11 := "AbilityChargeProgress"
497 [-]: NEWTABLE  R12 2 0      ; R12 := {}
498 [-]: GETUPVAL  R13 U11      ; R13 := U11
499 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
500 [-]: GETUPVAL  R14 U11      ; R14 := U11
501 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
502 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
503 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
504 [-]: GETUPVAL  R8 U11       ; R8 := U11
505 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
506 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
507 [-]: LOADK     R11 K121     ; R11 := "DamageIndicator"
508 [-]: NEWTABLE  R12 2 0      ; R12 := {}
509 [-]: GETUPVAL  R13 U11      ; R13 := U11
510 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
511 [-]: GETUPVAL  R14 U11      ; R14 := U11
512 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
513 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
514 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
515 [-]: GETUPVAL  R8 U11       ; R8 := U11
516 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
517 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
518 [-]: LOADK     R11 K122     ; R11 := "Prompt"
519 [-]: NEWTABLE  R12 2 0      ; R12 := {}
520 [-]: GETUPVAL  R13 U11      ; R13 := U11
521 [-]: GETTABLE  R13 R13 K98  ; R13 := R13["ANCHOR_V_BOTTOM"]
522 [-]: GETUPVAL  R14 U11      ; R14 := U11
523 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
524 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
525 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
526 [-]: GETUPVAL  R8 U11       ; R8 := U11
527 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
528 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
529 [-]: LOADK     R11 K123     ; R11 := "BorderBox"
530 [-]: NEWTABLE  R12 2 0      ; R12 := {}
531 [-]: GETUPVAL  R13 U11      ; R13 := U11
532 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
533 [-]: GETUPVAL  R14 U11      ; R14 := U11
534 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
535 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
536 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
537 [-]: GETUPVAL  R8 U11       ; R8 := U11
538 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
539 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
540 [-]: LOADK     R11 K124     ; R11 := "GenericMessage"
541 [-]: NEWTABLE  R12 2 0      ; R12 := {}
542 [-]: GETUPVAL  R13 U11      ; R13 := U11
543 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
544 [-]: GETUPVAL  R14 U11      ; R14 := U11
545 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
546 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
547 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
548 [-]: GETUPVAL  R8 U11       ; R8 := U11
549 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
550 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
551 [-]: LOADK     R11 K125     ; R11 := "ImpactMessage"
552 [-]: NEWTABLE  R12 2 0      ; R12 := {}
553 [-]: GETUPVAL  R13 U11      ; R13 := U11
554 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
555 [-]: GETUPVAL  R14 U11      ; R14 := U11
556 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
557 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
558 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
559 [-]: GETUPVAL  R8 U11       ; R8 := U11
560 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
561 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
562 [-]: LOADK     R11 K126     ; R11 := "GameplayMessage"
563 [-]: NEWTABLE  R12 2 0      ; R12 := {}
564 [-]: GETUPVAL  R13 U11      ; R13 := U11
565 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
566 [-]: GETUPVAL  R14 U11      ; R14 := U11
567 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
568 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
569 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
570 [-]: GETUPVAL  R8 U11       ; R8 := U11
571 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
572 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
573 [-]: LOADK     R11 K127     ; R11 := "MiniGameScore"
574 [-]: NEWTABLE  R12 2 0      ; R12 := {}
575 [-]: GETUPVAL  R13 U11      ; R13 := U11
576 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
577 [-]: GETUPVAL  R14 U11      ; R14 := U11
578 [-]: GETTABLE  R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
579 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
580 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
581 [-]: GETUPVAL  R8 U11       ; R8 := U11
582 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
583 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
584 [-]: LOADK     R11 K128     ; R11 := "StandingGain"
585 [-]: NEWTABLE  R12 2 0      ; R12 := {}
586 [-]: GETUPVAL  R13 U11      ; R13 := U11
587 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
588 [-]: GETUPVAL  R14 U11      ; R14 := U11
589 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
590 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
591 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
592 [-]: GETUPVAL  R8 U11       ; R8 := U11
593 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
594 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
595 [-]: LOADK     R11 K129     ; R11 := "PvPHeldFlagTimer"
596 [-]: NEWTABLE  R12 2 0      ; R12 := {}
597 [-]: GETUPVAL  R13 U11      ; R13 := U11
598 [-]: GETTABLE  R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
599 [-]: GETUPVAL  R14 U11      ; R14 := U11
600 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
601 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
602 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
603 [-]: GETUPVAL  R8 U11       ; R8 := U11
604 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
605 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
606 [-]: LOADK     R11 K130     ; R11 := "RevivePanel"
607 [-]: NEWTABLE  R12 2 0      ; R12 := {}
608 [-]: GETUPVAL  R13 U11      ; R13 := U11
609 [-]: GETTABLE  R13 R13 K98  ; R13 := R13["ANCHOR_V_BOTTOM"]
610 [-]: GETUPVAL  R14 U11      ; R14 := U11
611 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
612 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
613 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
614 [-]: GETUPVAL  R8 U11       ; R8 := U11
615 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
616 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
617 [-]: LOADK     R11 K131     ; R11 := "Spinner"
618 [-]: NEWTABLE  R12 2 0      ; R12 := {}
619 [-]: GETUPVAL  R13 U11      ; R13 := U11
620 [-]: GETTABLE  R13 R13 K108 ; R13 := R13["ANCHOR_H_LEFT"]
621 [-]: GETUPVAL  R14 U11      ; R14 := U11
622 [-]: GETTABLE  R14 R14 K98  ; R14 := R14["ANCHOR_V_BOTTOM"]
623 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
624 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
625 [-]: GETUPVAL  R8 U11       ; R8 := U11
626 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
627 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
628 [-]: LOADK     R11 K132     ; R11 := "TargetStatus"
629 [-]: NEWTABLE  R12 2 0      ; R12 := {}
630 [-]: GETUPVAL  R13 U11      ; R13 := U11
631 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
632 [-]: GETUPVAL  R14 U11      ; R14 := U11
633 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
634 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
635 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
636 [-]: GETUPVAL  R8 U11       ; R8 := U11
637 [-]: SELF      R8 R8 K96    ; R9 := R8; R8 := R8[0x20ff29f7]
638 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
639 [-]: LOADK     R11 K133     ; R11 := "LastGasp"
640 [-]: NEWTABLE  R12 2 0      ; R12 := {}
641 [-]: GETUPVAL  R13 U11      ; R13 := U11
642 [-]: GETTABLE  R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
643 [-]: GETUPVAL  R14 U11      ; R14 := U11
644 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_H_CENTRE"]
645 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
646 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
647 [-]: GETGLOBAL R8 K134      ; R8 := 0x2d0fad09
648 [-]: LOADK     R9 K135      ; R9 := "Lotus.Interface.Components.ThemedSpinner"
649 [-]: CALL      R8 2 2       ; R8 := R8(R9)
650 [-]: GETTABLE  R9 R8 K93    ; R9 := R8[0xae6791ba]
651 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
652 [-]: LOADK     R11 K131     ; R11 := "Spinner"
653 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
654 [-]: SETUPVAL  R9 U14       ; U82 := R14
655 [-]: GETUPVAL  R9 U14       ; R9 := U14
656 [-]: SETTABLE  R9 K136 K6   ; R9["mApplyThemes"] := true
657 [-]: GETGLOBAL R9 K16       ; R9 := 0x7b998233
658 [-]: GETUPVAL  R10 U4       ; R10 := U4
659 [-]: CALL      R9 2 2       ; R9 := R9(R10)
660 [-]: TEST      R9 1         ; if R9 then PC := 694
661 [-]: JMP       694          ; PC := 694
662 [-]: GETUPVAL  R9 U4        ; R9 := U4
663 [-]: SELF      R9 R9 K60    ; R10 := R9; R9 := R9[0xf2deaf69]
664 [-]: GETGLOBAL R11 K137     ; R11 := gLotusBasePvpGameRulesType
665 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
666 [-]: TEST      R9 1         ; if R9 then PC := 694
667 [-]: JMP       694          ; PC := 694
668 [-]: LOADK     R9 K129      ; R9 := "PvPHeldFlagTimer"
669 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
670 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10[0x67bc869f]
671 [-]: MOVE      R12 R9       ; R12 := R9
672 [-]: CONST     R13 5        ; R13 := 5.000000
673 [-]: CONST     R14 50       ; R14 := 50.000000
674 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
675 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
676 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10[0x67bc869f]
677 [-]: MOVE      R12 R9       ; R12 := R9
678 [-]: CONST     R13 6        ; R13 := 6.000000
679 [-]: CONST     R14 50       ; R14 := 50.000000
680 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
681 [-]: GETUPVAL  R10 U11      ; R10 := U11
682 [-]: SELF      R10 R10 K138 ; R11 := R10; R10 := R10[0x4bc5dc8b]
683 [-]: MOVE      R12 R9       ; R12 := R9
684 [-]: CONST     R13 612      ; R13 := 612.000000
685 [-]: CONST     R14 562      ; R14 := 562.000000
686 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
687 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
688 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10[0x67bc869f]
689 [-]: MOVE      R12 R9       ; R12 := R9
690 [-]: CONST     R13 36       ; R13 := 36.000000
691 [-]: GETGLOBAL R14 K78      ; R14 := 0x0032441c
692 [-]: GETTABLE  R14 R14 K139 ; R14 := R14["UIColor_White"]
693 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
694 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
695 [-]: SELF      R10 R10 K140 ; R11 := R10; R10 := R10[0x91a24e4b]
696 [-]: LOADK     R12 K125     ; R12 := "ImpactMessage"
697 [-]: CONST     R13 1        ; R13 := 1.000000
698 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
699 [-]: SETUPVAL  R10 U15      ; U82 := R15
700 [-]: GETUPVAL  R10 U11      ; R10 := U11
701 [-]: SELF      R10 R10 K141 ; R11 := R10; R10 := R10[0xfaa69527]
702 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
703 [-]: SELF      R12 R12 K142 ; R13 := R12; R12 := R12[0x6b837788]
704 [-]: CALL      R12 2 2      ; R12 := R12(R13)
705 [-]: GETGLOBAL R13 K0       ; R13 := 0xae91e43b
706 [-]: SELF      R13 R13 K143 ; R14 := R13; R13 := R13[0xaf9fda9f]
707 [-]: CALL      R13 2 2      ; R13 := R13(R14)
708 [-]: LOADKB    R14 1 0      ; R14 := true
709 [-]: GETUPVAL  R15 U13      ; R15 := U13
710 [-]: GETTABLE  R15 R15 K95  ; R15 := R15["HudScalePadding"]
711 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
712 [-]: GETUPVAL  R10 U16      ; R10 := U16
713 [-]: CALL      R10 1 1      ; R10()
714 [-]: GETGLOBAL R10 K144     ; R10 := 0x7ed0a956
715 [-]: LOADK     R11 K145     ; R11 := "/Lotus/Types/GameRules/LotusDuviriGameRules"
716 [-]: CALL      R10 2 2      ; R10 := R10(R11)
717 [-]: GETGLOBAL R11 K16      ; R11 := 0x7b998233
718 [-]: GETUPVAL  R12 U4       ; R12 := U4
719 [-]: CALL      R11 2 2      ; R11 := R11(R12)
720 [-]: TEST      R11 1        ; if R11 then PC := 734
721 [-]: JMP       734          ; PC := 734
722 [-]: GETUPVAL  R11 U4       ; R11 := U4
723 [-]: SELF      R11 R11 K60  ; R12 := R11; R11 := R11[0xf2deaf69]
724 [-]: MOVE      R13 R10      ; R13 := R10
725 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
726 [-]: TEST      R11 0        ; if not R11 then PC := 734
727 [-]: JMP       734          ; PC := 734
728 [-]: GETGLOBAL R11 K0       ; R11 := 0xae91e43b
729 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0xaade900e]
730 [-]: LOADK     R13 K146     ; R13 := "RevivePanel.RevivesLeft"
731 [-]: CONST     R14 11       ; R14 := 11.000000
732 [-]: LOADKB    R15 0 0      ; R15 := false
733 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
734 [-]: GETGLOBAL R11 K0       ; R11 := 0xae91e43b
735 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0xaade900e]
736 [-]: LOADK     R13 K118     ; R13 := "SyndicatePower"
737 [-]: CONST     R14 11       ; R14 := 11.000000
738 [-]: LOADKB    R15 0 0      ; R15 := false
739 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
740 [-]: GETGLOBAL R11 K0       ; R11 := 0xae91e43b
741 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0xaade900e]
742 [-]: LOADK     R13 K114     ; R13 := "Stamina"
743 [-]: CONST     R14 11       ; R14 := 11.000000
744 [-]: LOADKB    R15 0 0      ; R15 := false
745 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
746 [-]: GETGLOBAL R11 K0       ; R11 := 0xae91e43b
747 [-]: SELF      R11 R11 K147 ; R12 := R11; R11 := R11[0x52943844]
748 [-]: GETGLOBAL R13 K0       ; R13 := 0xae91e43b
749 [-]: SELF      R13 R13 K148 ; R14 := R13; R13 := R13[0x09839320]
750 [-]: LOADK     R15 K149     ; R15 := "TargetHit1"
751 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
752 [-]: CONST     R14 11       ; R14 := 11.000000
753 [-]: LOADKB    R15 0 0      ; R15 := false
754 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
755 [-]: GETGLOBAL R11 K16      ; R11 := 0x7b998233
756 [-]: GETGLOBAL R12 K150     ; R12 := 0x2c15a601
757 [-]: CALL      R11 2 2      ; R11 := R11(R12)
758 [-]: TEST      R11 1        ; if R11 then PC := 780
759 [-]: JMP       780          ; PC := 780
760 [-]: GETGLOBAL R11 K19      ; R11 := 0x9ba7909f
761 [-]: SELF      R11 R11 K28  ; R12 := R11; R11 := R11[0xbf9494fc]
762 [-]: LOADK     R13 K151     ; R13 := "HUD.ShowInWorldContextActions"
763 [-]: LOADKB    R14 1 0      ; R14 := true
764 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
765 [-]: TEST      R11 0        ; if not R11 then PC := 780
766 [-]: JMP       780          ; PC := 780
767 [-]: GETGLOBAL R11 K19      ; R11 := 0x9ba7909f
768 [-]: SELF      R11 R11 K23  ; R12 := R11; R11 := R11[0xbcfb64ab]
769 [-]: GETGLOBAL R13 K150     ; R13 := 0x2c15a601
770 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
771 [-]: GETGLOBAL R12 K16      ; R12 := 0x7b998233
772 [-]: MOVE      R13 R11      ; R13 := R11
773 [-]: CALL      R12 2 2      ; R12 := R12(R13)
774 [-]: TEST      R12 0        ; if not R12 then PC := 780
775 [-]: JMP       780          ; PC := 780
776 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
777 [-]: SELF      R12 R12 K24  ; R13 := R12; R12 := R12[0x1fd6abd0]
778 [-]: GETGLOBAL R14 K150     ; R14 := 0x2c15a601
779 [-]: CALL      R12 3 1      ; R12(R13,R14)
780 [-]: GETUPVAL  R12 U17      ; R12 := U17
781 [-]: CALL      R12 1 1      ; R12()
782 [-]: GETUPVAL  R12 U18      ; R12 := U18
783 [-]: CALL      R12 1 1      ; R12()
784 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
785 [-]: SELF      R12 R12 K152 ; R13 := R12; R12 := R12[0x5ee2cc30]
786 [-]: LOADK     R14 K126     ; R14 := "GameplayMessage"
787 [-]: LOADK     R15 K153     ; R15 := "OnFrameEnter"
788 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
789 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
790 [-]: SELF      R12 R12 K152 ; R13 := R12; R12 := R12[0x5ee2cc30]
791 [-]: LOADK     R14 K154     ; R14 := "Reticle.Arm1"
792 [-]: LOADK     R15 K153     ; R15 := "OnFrameEnter"
793 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
794 [-]: CONST     R12 1        ; R12 := 1.000000
795 [-]: CONST     R13 4        ; R13 := 4.000000
796 [-]: CONST     R14 1        ; R14 := 1.000000
797 [-]: FORPREP   R12 815      ; R12 -= R14; PC := 815
798 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
799 [-]: SELF      R16 R16 K51  ; R17 := R16; R16 := R16[0xc0a3774b]
800 [-]: LOADK     R18 K155     ; R18 := "AbilityPanel.Ability"
801 [-]: MOVE      R19 R15      ; R19 := R15
802 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
803 [-]: LOADK     R19 K156     ; R19 := "ActiveAnim"
804 [-]: CONST     R20 11       ; R20 := 11.000000
805 [-]: LOADKB    R21 0 0      ; R21 := false
806 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
807 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
808 [-]: SELF      R16 R16 K152 ; R17 := R16; R16 := R16[0x5ee2cc30]
809 [-]: LOADK     R18 K155     ; R18 := "AbilityPanel.Ability"
810 [-]: MOVE      R19 R15      ; R19 := R15
811 [-]: LOADK     R20 K157     ; R20 := ".Blocked"
812 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
813 [-]: LOADK     R19 K153     ; R19 := "OnFrameEnter"
814 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
815 [-]: FORLOOP   R12 798      ; R12 += R14; if R12 <= R13 then begin PC := 798; R15 := R12 end
816 [-]: GETUPVAL  R16 U20      ; R16 := U20
817 [-]: GETTABLE  R16 R16 K158 ; R16 := R16[0x4c3dfdb3]
818 [-]: LOADNIL   R17 R17      ; R17 := nil
819 [-]: CLOSURE   R18 0        ; R18 := closure(Function #149.1)
820 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
821 [-]: SETUPVAL  R16 U19      ; U82 := R19
822 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
823 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
824 [-]: LOADK     R18 K111     ; R18 := "Reticle"
825 [-]: CONST     R19 10       ; R19 := 10.000000
826 [-]: CONST     R20 0        ; R20 := 0.000000
827 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
828 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
829 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
830 [-]: LOADK     R18 K112     ; R18 := "ReticleCustom"
831 [-]: CONST     R19 10       ; R19 := 10.000000
832 [-]: CONST     R20 0        ; R20 := 0.000000
833 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
834 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
835 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
836 [-]: LOADK     R18 K117     ; R18 := "SlamIndicator"
837 [-]: CONST     R19 10       ; R19 := 10.000000
838 [-]: CONST     R20 0        ; R20 := 0.000000
839 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
840 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
841 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
842 [-]: LOADK     R18 K119     ; R18 := "reloadTimer"
843 [-]: CONST     R19 10       ; R19 := 10.000000
844 [-]: CONST     R20 0        ; R20 := 0.000000
845 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
846 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
847 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
848 [-]: LOADK     R18 K159     ; R18 := "reloadTimer.RangeBrackets"
849 [-]: CONST     R19 10       ; R19 := 10.000000
850 [-]: CONST     R20 0        ; R20 := 0.000000
851 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
852 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
853 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
854 [-]: LOADK     R18 K160     ; R18 := "reloadTimer.RangeGradients"
855 [-]: CONST     R19 10       ; R19 := 10.000000
856 [-]: CONST     R20 0        ; R20 := 0.000000
857 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
858 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
859 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
860 [-]: LOADK     R18 K161     ; R18 := "reloadTimer.ChargeCap"
861 [-]: CONST     R19 10       ; R19 := 10.000000
862 [-]: CONST     R20 0        ; R20 := 0.000000
863 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
864 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
865 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
866 [-]: LOADK     R18 K120     ; R18 := "AbilityChargeProgress"
867 [-]: CONST     R19 10       ; R19 := 10.000000
868 [-]: CONST     R20 0        ; R20 := 0.000000
869 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
870 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
871 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
872 [-]: LOADK     R18 K121     ; R18 := "DamageIndicator"
873 [-]: CONST     R19 11       ; R19 := 11.000000
874 [-]: LOADKB    R20 0 0      ; R20 := false
875 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
876 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
877 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
878 [-]: LOADK     R18 K162     ; R18 := "MiniMapContainer.StatusEffect"
879 [-]: CONST     R19 10       ; R19 := 10.000000
880 [-]: CONST     R20 0        ; R20 := 0.000000
881 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
882 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
883 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
884 [-]: LOADK     R18 K163     ; R18 := "MiniMapContainer.FlareLoader"
885 [-]: CONST     R19 11       ; R19 := 11.000000
886 [-]: LOADKB    R20 0 0      ; R20 := false
887 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
888 [-]: GETGLOBAL R16 K16      ; R16 := 0x7b998233
889 [-]: GETGLOBAL R17 K164     ; R17 := 0x6ad62b02
890 [-]: CALL      R16 2 2      ; R16 := R16(R17)
891 [-]: TEST      R16 1        ; if R16 then PC := 903
892 [-]: JMP       903          ; PC := 903
893 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
894 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
895 [-]: LOADK     R18 K107     ; R18 := "MiniMapContainer"
896 [-]: GETGLOBAL R19 K164     ; R19 := 0x6ad62b02
897 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
898 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
899 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
900 [-]: LOADK     R18 K110     ; R18 := "HudTracker"
901 [-]: GETGLOBAL R19 K164     ; R19 := 0x6ad62b02
902 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
903 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
904 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
905 [-]: LOADK     R18 K166     ; R18 := "MiniMapContainer.MiniMap"
906 [-]: CONST     R19 10       ; R19 := 10.000000
907 [-]: CONST     R20 0        ; R20 := 0.000000
908 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
909 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
910 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
911 [-]: LOADK     R18 K109     ; R18 := "MiniMapOverlayMsg"
912 [-]: CONST     R19 10       ; R19 := 10.000000
913 [-]: CONST     R20 0        ; R20 := 0.000000
914 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
915 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
916 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
917 [-]: LOADK     R18 K167     ; R18 := "MiniMapOverlayMsg.Bg"
918 [-]: GETGLOBAL R19 K78      ; R19 := 0x0032441c
919 [-]: GETTABLE  R19 R19 K168 ; R19 := R19["UIMaterial_RectangleNoDepth"]
920 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
921 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
922 [-]: SELF      R16 R16 K169 ; R17 := R16; R16 := R16[0x91e13703]
923 [-]: LOADK     R18 K167     ; R18 := "MiniMapOverlayMsg.Bg"
924 [-]: LOADK     R19 K170     ; R19 := "RectInnerColor"
925 [-]: GETGLOBAL R20 K78      ; R20 := 0x0032441c
926 [-]: GETTABLE  R20 R20 K171 ; R20 := R20["UIColorObject_Black"]
927 [-]: GETTABLE  R20 R20 K172 ; R20 := R20["r"]
928 [-]: GETGLOBAL R21 K78      ; R21 := 0x0032441c
929 [-]: GETTABLE  R21 R21 K171 ; R21 := R21["UIColorObject_Black"]
930 [-]: GETTABLE  R21 R21 K173 ; R21 := R21["g"]
931 [-]: GETGLOBAL R22 K78      ; R22 := 0x0032441c
932 [-]: GETTABLE  R22 R22 K171 ; R22 := R22["UIColorObject_Black"]
933 [-]: GETTABLE  R22 R22 K174 ; R22 := R22["b"]
934 [-]: LOADK     R23 K175     ; R23 := 0.400000
935 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
936 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
937 [-]: SELF      R16 R16 K169 ; R17 := R16; R16 := R16[0x91e13703]
938 [-]: LOADK     R18 K167     ; R18 := "MiniMapOverlayMsg.Bg"
939 [-]: LOADK     R19 K176     ; R19 := "RectEdgeColor"
940 [-]: GETGLOBAL R20 K78      ; R20 := 0x0032441c
941 [-]: GETTABLE  R20 R20 K171 ; R20 := R20["UIColorObject_Black"]
942 [-]: GETTABLE  R20 R20 K172 ; R20 := R20["r"]
943 [-]: GETGLOBAL R21 K78      ; R21 := 0x0032441c
944 [-]: GETTABLE  R21 R21 K171 ; R21 := R21["UIColorObject_Black"]
945 [-]: GETTABLE  R21 R21 K173 ; R21 := R21["g"]
946 [-]: GETGLOBAL R22 K78      ; R22 := 0x0032441c
947 [-]: GETTABLE  R22 R22 K171 ; R22 := R22["UIColorObject_Black"]
948 [-]: GETTABLE  R22 R22 K174 ; R22 := R22["b"]
949 [-]: LOADK     R23 K175     ; R23 := 0.400000
950 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
951 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
952 [-]: SELF      R16 R16 K177 ; R17 := R16; R16 := R16[0x20b98db3]
953 [-]: LOADK     R18 K178     ; R18 := "MiniMapOverlayMsg.Label.text"
954 [-]: LOADK     R19 K179     ; R19 := "/Lotus/Language/SystemMessages/MapJammed"
955 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
956 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
957 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
958 [-]: LOADK     R18 K180     ; R18 := "MiniMapContainer.MiniMapMarkers.Marker1"
959 [-]: CONST     R19 11       ; R19 := 11.000000
960 [-]: LOADKB    R20 0 0      ; R20 := false
961 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
962 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
963 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
964 [-]: LOADK     R18 K181     ; R18 := "MiniMapContainer.Map"
965 [-]: CONST     R19 11       ; R19 := 11.000000
966 [-]: LOADKB    R20 0 0      ; R20 := false
967 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
968 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
969 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
970 [-]: LOADK     R18 K116     ; R18 := "Notification"
971 [-]: CONST     R19 10       ; R19 := 10.000000
972 [-]: CONST     R20 0        ; R20 := 0.000000
973 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
974 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
975 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
976 [-]: LOADK     R18 K182     ; R18 := "WeaponFrame.Rage"
977 [-]: CONST     R19 11       ; R19 := 11.000000
978 [-]: LOADKB    R20 0 0      ; R20 := false
979 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
980 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
981 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
982 [-]: LOADK     R18 K183     ; R18 := "WeaponFrame.Rage.ComboLabelA"
983 [-]: CONST     R19 11       ; R19 := 11.000000
984 [-]: LOADKB    R20 0 0      ; R20 := false
985 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
986 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
987 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
988 [-]: LOADK     R18 K184     ; R18 := "WeaponFrame.Rage.ComboLabelB"
989 [-]: CONST     R19 11       ; R19 := 11.000000
990 [-]: LOADKB    R20 0 0      ; R20 := false
991 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
992 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
993 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
994 [-]: LOADK     R18 K185     ; R18 := "WeaponFrame.Rage.ComboLabelMiddle"
995 [-]: CONST     R19 11       ; R19 := 11.000000
996 [-]: LOADKB    R20 0 0      ; R20 := false
997 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
998 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
999 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1000 [-]: LOADK     R18 K185     ; R18 := "WeaponFrame.Rage.ComboLabelMiddle"
1001 [-]: GETGLOBAL R19 K78      ; R19 := 0x0032441c
1002 [-]: GETTABLE  R19 R19 K186 ; R19 := R19["UIMaterial_SmoothEdgeNoDepthTest"]
1003 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1004 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1005 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
1006 [-]: LOADK     R18 K187     ; R18 := "WeaponFrame.ComboLabelA"
1007 [-]: CONST     R19 11       ; R19 := 11.000000
1008 [-]: LOADKB    R20 0 0      ; R20 := false
1009 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1010 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1011 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
1012 [-]: LOADK     R18 K188     ; R18 := "WeaponFrame.ComboLabelB"
1013 [-]: CONST     R19 11       ; R19 := 11.000000
1014 [-]: LOADKB    R20 0 0      ; R20 := false
1015 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1016 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1017 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
1018 [-]: LOADK     R18 K189     ; R18 := "WeaponFrame.ComboLabelMiddle"
1019 [-]: CONST     R19 11       ; R19 := 11.000000
1020 [-]: LOADKB    R20 0 0      ; R20 := false
1021 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1022 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1023 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
1024 [-]: LOADK     R18 K190     ; R18 := "WeaponFrame.ComboLabelTimer"
1025 [-]: CONST     R19 11       ; R19 := 11.000000
1026 [-]: LOADKB    R20 0 0      ; R20 := false
1027 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1028 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1029 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16[0xaade900e]
1030 [-]: LOADK     R18 K191     ; R18 := "WeaponFrame.ComboTitle"
1031 [-]: CONST     R19 11       ; R19 := 11.000000
1032 [-]: LOADKB    R20 0 0      ; R20 := false
1033 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1034 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1035 [-]: SELF      R16 R16 K177 ; R17 := R16; R16 := R16[0x20b98db3]
1036 [-]: LOADK     R18 K192     ; R18 := "WeaponFrame.ComboTitle.text"
1037 [-]: LOADK     R19 K193     ; R19 := "/Lotus/Language/Menu/Combo"
1038 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1039 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1040 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1041 [-]: LOADK     R18 K194     ; R18 := "WeaponFrame.ComboLabelTimer.Fill"
1042 [-]: CONST     R19 10       ; R19 := 10.000000
1043 [-]: CONST     R20 50       ; R20 := 50.000000
1044 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1045 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1046 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1047 [-]: LOADK     R18 K195     ; R18 := "WeaponFrame.LabelTimer.Fill"
1048 [-]: CONST     R19 10       ; R19 := 10.000000
1049 [-]: CONST     R20 50       ; R20 := 50.000000
1050 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1051 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1052 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1053 [-]: LOADK     R18 K196     ; R18 := "WeaponFrame.ComboLabelTimer.Bg"
1054 [-]: CONST     R19 10       ; R19 := 10.000000
1055 [-]: CONST     R20 30       ; R20 := 30.000000
1056 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1057 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1058 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1059 [-]: LOADK     R18 K197     ; R18 := "WeaponFrame.LabelTimer.Bg"
1060 [-]: CONST     R19 10       ; R19 := 10.000000
1061 [-]: CONST     R20 30       ; R20 := 30.000000
1062 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1063 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1064 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1065 [-]: LOADK     R18 K196     ; R18 := "WeaponFrame.ComboLabelTimer.Bg"
1066 [-]: CONST     R19 9        ; R19 := 9.000000
1067 [-]: CONST     R20 0        ; R20 := 0.000000
1068 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1069 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1070 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1071 [-]: LOADK     R18 K197     ; R18 := "WeaponFrame.LabelTimer.Bg"
1072 [-]: CONST     R19 9        ; R19 := 9.000000
1073 [-]: CONST     R20 0        ; R20 := 0.000000
1074 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1075 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1076 [-]: SELF      R16 R16 K198 ; R17 := R16; R16 := R16[0x5f56eeab]
1077 [-]: LOADK     R18 K199     ; R18 := "WeaponFrame.Name"
1078 [-]: CONST     R19 29       ; R19 := 29.000000
1079 [-]: LOADK     R20 K200     ; R20 := ""
1080 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1081 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1082 [-]: SELF      R16 R16 K177 ; R17 := R16; R16 := R16[0x20b98db3]
1083 [-]: LOADK     R18 K201     ; R18 := "Notification.Message.text"
1084 [-]: LOADK     R19 K202     ; R19 := "/Lotus/Language/Menu/LevelUp"
1085 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1086 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1087 [-]: SELF      R16 R16 K203 ; R17 := R16; R16 := R16[0x1cb415c1]
1088 [-]: LOADK     R18 K115     ; R18 := "SuccessfulHitNotification"
1089 [-]: GETGLOBAL R19 K204     ; R19 := 0x90e76fe1
1090 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1091 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1092 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1093 [-]: LOADK     R18 K115     ; R18 := "SuccessfulHitNotification"
1094 [-]: CONST     R19 10       ; R19 := 10.000000
1095 [-]: CONST     R20 0        ; R20 := 0.000000
1096 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1097 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1098 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1099 [-]: LOADK     R18 K205     ; R18 := "reloadTimer.Fill"
1100 [-]: GETGLOBAL R19 K206     ; R19 := 0x2545668b
1101 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1102 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1103 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1104 [-]: LOADK     R18 K207     ; R18 := "AbilityChargeProgress.Progress"
1105 [-]: GETGLOBAL R19 K206     ; R19 := 0x2545668b
1106 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1107 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1108 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1109 [-]: LOADK     R18 K208     ; R18 := "RevivePanel.HoldProgress.Backer"
1110 [-]: GETGLOBAL R19 K209     ; R19 := 0x1211e3e3
1111 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1112 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1113 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1114 [-]: LOADK     R18 K210     ; R18 := "RevivePanel.HoldProgress.Fill"
1115 [-]: GETGLOBAL R19 K211     ; R19 := 0xeebb769c
1116 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1117 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1118 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1119 [-]: LOADK     R18 K212     ; R18 := "RevivePanel.HoldProgress.IconContainer.Icon"
1120 [-]: GETGLOBAL R19 K213     ; R19 := 0xb2028b83
1121 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1122 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1123 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1124 [-]: LOADK     R18 K214     ; R18 := "RevivePanel.HoldProgress.Diamond"
1125 [-]: GETGLOBAL R19 K78      ; R19 := 0x0032441c
1126 [-]: GETTABLE  R19 R19 K79  ; R19 := R19["UIMaterial_Plain"]
1127 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1128 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1129 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1130 [-]: LOADK     R18 K215     ; R18 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
1131 [-]: GETGLOBAL R19 K78      ; R19 := 0x0032441c
1132 [-]: GETTABLE  R19 R19 K79  ; R19 := R19["UIMaterial_Plain"]
1133 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1134 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1135 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1136 [-]: LOADK     R18 K216     ; R18 := "RevivePanel.HoldProgress.IconContainer.Blur"
1137 [-]: GETGLOBAL R19 K78      ; R19 := 0x0032441c
1138 [-]: GETTABLE  R19 R19 K79  ; R19 := R19["UIMaterial_Plain"]
1139 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1140 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1141 [-]: SELF      R16 R16 K169 ; R17 := R16; R16 := R16[0x91e13703]
1142 [-]: LOADK     R18 K210     ; R18 := "RevivePanel.HoldProgress.Fill"
1143 [-]: LOADK     R19 K217     ; R19 := "AlphaTestThreshold"
1144 [-]: CONST     R20 0        ; R20 := 0.000000
1145 [-]: CONST     R21 0        ; R21 := 0.000000
1146 [-]: CONST     R22 0        ; R22 := 0.000000
1147 [-]: CONST     R23 0        ; R23 := 0.000000
1148 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
1149 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1150 [-]: SELF      R16 R16 K169 ; R17 := R16; R16 := R16[0x91e13703]
1151 [-]: LOADK     R18 K208     ; R18 := "RevivePanel.HoldProgress.Backer"
1152 [-]: LOADK     R19 K218     ; R19 := "CircleSettings"
1153 [-]: LOADK     R20 K219     ; R20 := 0.485000
1154 [-]: LOADK     R21 K220     ; R21 := 0.200000
1155 [-]: LOADK     R22 K221     ; R22 := 0.650000
1156 [-]: CONST     R23 0        ; R23 := 0.000000
1157 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
1158 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1159 [-]: SELF      R16 R16 K169 ; R17 := R16; R16 := R16[0x91e13703]
1160 [-]: LOADK     R18 K210     ; R18 := "RevivePanel.HoldProgress.Fill"
1161 [-]: LOADK     R19 K218     ; R19 := "CircleSettings"
1162 [-]: LOADK     R20 K219     ; R20 := 0.485000
1163 [-]: LOADK     R21 K220     ; R21 := 0.200000
1164 [-]: LOADK     R22 K221     ; R22 := 0.650000
1165 [-]: CONST     R23 0        ; R23 := 0.000000
1166 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
1167 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1168 [-]: SELF      R16 R16 K1   ; R17 := R16; R16 := R16[0x67bc869f]
1169 [-]: LOADK     R18 K130     ; R18 := "RevivePanel"
1170 [-]: CONST     R19 10       ; R19 := 10.000000
1171 [-]: CONST     R20 0        ; R20 := 0.000000
1172 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1173 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1174 [-]: SELF      R16 R16 K165 ; R17 := R16; R16 := R16[0xd5181643]
1175 [-]: LOADK     R18 K222     ; R18 := "AbilityPanel.Focus.FocusFx"
1176 [-]: GETGLOBAL R19 K223     ; R19 := 0x7d6d96e1
1177 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
1178 [-]: GETGLOBAL R16 K0       ; R16 := 0xae91e43b
1179 [-]: SELF      R16 R16 K26  ; R17 := R16; R16 := R16[0xcd73323e]
1180 [-]: CALL      R16 2 2      ; R16 := R16(R17)
1181 [-]: GETGLOBAL R17 K16      ; R17 := 0x7b998233
1182 [-]: MOVE      R18 R16      ; R18 := R16
1183 [-]: CALL      R17 2 2      ; R17 := R17(R18)
1184 [-]: TEST      R17 1        ; if R17 then PC := 1229
1185 [-]: JMP       1229         ; PC := 1229
1186 [-]: SELF      R17 R16 K224 ; R18 := R16; R17 := R16[0x6d7bfacb]
1187 [-]: CALL      R17 2 2      ; R17 := R17(R18)
1188 [-]: SETUPVAL  R17 U21      ; U82 := R21
1189 [-]: GETGLOBAL R17 K16      ; R17 := 0x7b998233
1190 [-]: GETUPVAL  R18 U21      ; R18 := U21
1191 [-]: CALL      R17 2 2      ; R17 := R17(R18)
1192 [-]: TEST      R17 1        ; if R17 then PC := 1229
1193 [-]: JMP       1229         ; PC := 1229
1194 [-]: GETGLOBAL R17 K15      ; R17 := 0xe72d2edb
1195 [-]: EQ        1 R17 K31    ; if R17 == 0.000000 then PC := 1201
1196 [-]: JMP       1201         ; PC := 1201
1197 [-]: GETUPVAL  R17 U21      ; R17 := U21
1198 [-]: SELF      R17 R17 K225 ; R18 := R17; R17 := R17[0xeaef69de]
1199 [-]: GETGLOBAL R19 K15      ; R19 := 0xe72d2edb
1200 [-]: CALL      R17 3 1      ; R17(R18,R19)
1201 [-]: GETUPVAL  R17 U21      ; R17 := U21
1202 [-]: SELF      R17 R17 K226 ; R18 := R17; R17 := R17[0x1e9695e9]
1203 [-]: MOVE      R19 R16      ; R19 := R16
1204 [-]: CALL      R17 3 1      ; R17(R18,R19)
1205 [-]: GETUPVAL  R17 U21      ; R17 := U21
1206 [-]: SELF      R17 R17 K227 ; R18 := R17; R17 := R17[0xe9aecb88]
1207 [-]: CALL      R17 2 1      ; R17(R18)
1208 [-]: GETUPVAL  R17 U21      ; R17 := U21
1209 [-]: SELF      R17 R17 K228 ; R18 := R17; R17 := R17[0xdae5251c]
1210 [-]: GETUPVAL  R19 U11      ; R19 := U11
1211 [-]: SELF      R19 R19 K229 ; R20 := R19; R19 := R19[0x2de3d774]
1212 [-]: LOADK     R21 K116     ; R21 := "Notification"
1213 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
1214 [-]: GETTABLE  R19 R19 K230 ; R19 := R19["y"]
1215 [-]: CALL      R17 3 1      ; R17(R18,R19)
1216 [-]: GETUPVAL  R17 U2       ; R17 := U2
1217 [-]: GETGLOBAL R18 K78      ; R18 := 0x0032441c
1218 [-]: GETTABLE  R18 R18 K231 ; R18 := R18["StalkerMode"]
1219 [-]: EQ        0 R18 K232   ; if R18 ~= nil then PC := 1222
1220 [-]: JMP       1222         ; PC := 1222
1221 [-]: LOADKB    R18 0 1      ; R18 := false; PC := 1222
1222 [-]: LOADKB    R18 1 0      ; R18 := true
1223 [-]: SETTABLE  R17 K231 R18 ; R17["StalkerMode"] := R18
1224 [-]: GETUPVAL  R17 U21      ; R17 := U21
1225 [-]: SELF      R17 R17 K233 ; R18 := R17; R17 := R17[0x9b069215]
1226 [-]: GETUPVAL  R19 U2       ; R19 := U2
1227 [-]: GETTABLE  R19 R19 K231 ; R19 := R19["StalkerMode"]
1228 [-]: CALL      R17 3 1      ; R17(R18,R19)
1229 [-]: GETGLOBAL R17 K13      ; R17 := _T
1230 [-]: GETGLOBAL R18 K235     ; R18 := 0xa421af95
1231 [-]: CALL      R18 1 2      ; R18 := R18()
1232 [-]: SETTABLE  R17 K234 R18 ; R17["velocityCoords"] := R18
1233 [-]: CLOSURE   R17 1        ; R17 := closure(Function #149.2)
1234 [-]: GETUPVAL  R0 U11       ; R0 := U11
1235 [-]: GETUPVAL  R0 U22       ; R0 := U22
1236 [-]: GETUPVAL  R0 U21       ; R0 := U21
1237 [-]: GETUPVAL  R0 U23       ; R0 := U23
1238 [-]: GETUPVAL  R0 U13       ; R0 := U13
1239 [-]: GETUPVAL  R0 U24       ; R0 := U24
1240 [-]: GETUPVAL  R0 U25       ; R0 := U25
1241 [-]: CLOSURE   R18 2        ; R18 := closure(Function #149.3)
1242 [-]: GETUPVAL  R0 U11       ; R0 := U11
1243 [-]: GETUPVAL  R0 U21       ; R0 := U21
1244 [-]: CLOSURE   R19 3        ; R19 := closure(Function #149.4)
1245 [-]: GETUPVAL  R0 U21       ; R0 := U21
1246 [-]: GETUPVAL  R0 U22       ; R0 := U22
1247 [-]: GETGLOBAL R20 K13      ; R20 := _T
1248 [-]: SETTABLE  R20 K236 R17 ; R20["HUD_AddMotionClip"] := R17
1249 [-]: GETGLOBAL R20 K13      ; R20 := _T
1250 [-]: SETTABLE  R20 K237 R18 ; R20["HUD_UpdateMotionClip"] := R18
1251 [-]: GETGLOBAL R20 K13      ; R20 := _T
1252 [-]: SETTABLE  R20 K238 R19 ; R20["HUD_RemoveMotionClip"] := R19
1253 [-]: LOADNIL   R20 R20      ; R20 := nil
1254 [-]: GETGLOBAL R21 K53      ; R21 := 0x34291f5c
1255 [-]: GETTABLE  R21 R21 K239 ; R21 := R21[0xe6b41adb]
1256 [-]: CALL      R21 1 2      ; R21 := R21()
1257 [-]: TEST      R21 0        ; if not R21 then PC := 1262
1258 [-]: JMP       1262         ; PC := 1262
1259 [-]: NEWTABLE  R21 0 0      ; R21 := {}
1260 [-]: MOVE      R20 R21      ; R20 := R21
1261 [-]: JMP       1268         ; PC := 1268
1262 [-]: NEWTABLE  R21 3 0      ; R21 := {}
1263 [-]: LOADK     R22 K102     ; R22 := "HealthAndShield"
1264 [-]: LOADK     R23 K104     ; R23 := "WeaponFrame"
1265 [-]: LOADK     R24 K106     ; R24 := "AbilityPanel"
1266 [-]: SETLIST   R21 3 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 3
1267 [-]: MOVE      R20 R21      ; R20 := R21
1268 [-]: GETGLOBAL R21 K50      ; R21 := 0xc8802016
1269 [-]: MOVE      R22 R20      ; R22 := R20
1270 [-]: CALL      R21 2 4      ; R21,R22,R23 := R21(R22)
1271 [-]: JMP       1285         ; PC := 1285
1272 [-]: GETGLOBAL R26 K15      ; R26 := 0xe72d2edb
1273 [-]: EQ        1 R26 K82    ; if R26 == 2.000000 then PC := 1281
1274 [-]: JMP       1281         ; PC := 1281
1275 [-]: GETGLOBAL R26 K0       ; R26 := 0xae91e43b
1276 [-]: SELF      R26 R26 K1   ; R27 := R26; R26 := R26[0x67bc869f]
1277 [-]: MOVE      R28 R25      ; R28 := R25
1278 [-]: CONST     R29 15       ; R29 := 15.000000
1279 [-]: MOVE      R30 R0       ; R30 := R0
1280 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
1281 [-]: MOVE      R26 R17      ; R26 := R17
1282 [-]: GETGLOBAL R27 K0       ; R27 := 0xae91e43b
1283 [-]: MOVE      R28 R25      ; R28 := R25
1284 [-]: CALL      R26 3 1      ; R26(R27,R28)
1285 [-]: TFORLOOP  R21 2        ; R24,R25 :=  R21(R22,R23); if R24 ~= nil then begin PC = 1272; R23 := R24 end
1286 [-]: JMP       1272         ; PC := 1272
1287 [-]: LOADNIL   R26 R26      ; R26 := nil
1288 [-]: GETGLOBAL R27 K53      ; R27 := 0x34291f5c
1289 [-]: GETTABLE  R27 R27 K239 ; R27 := R27[0xe6b41adb]
1290 [-]: CALL      R27 1 2      ; R27 := R27()
1291 [-]: TEST      R27 0        ; if not R27 then PC := 1296
1292 [-]: JMP       1296         ; PC := 1296
1293 [-]: NEWTABLE  R27 0 0      ; R27 := {}
1294 [-]: MOVE      R26 R27      ; R26 := R27
1295 [-]: JMP       1302         ; PC := 1302
1296 [-]: NEWTABLE  R27 3 0      ; R27 := {}
1297 [-]: LOADK     R28 K107     ; R28 := "MiniMapContainer"
1298 [-]: LOADK     R29 K110     ; R29 := "HudTracker"
1299 [-]: LOADK     R30 K109     ; R30 := "MiniMapOverlayMsg"
1300 [-]: SETLIST   R27 3 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 3
1301 [-]: MOVE      R26 R27      ; R26 := R27
1302 [-]: GETGLOBAL R27 K50      ; R27 := 0xc8802016
1303 [-]: MOVE      R28 R26      ; R28 := R26
1304 [-]: CALL      R27 2 4      ; R27,R28,R29 := R27(R28)
1305 [-]: JMP       1319         ; PC := 1319
1306 [-]: GETGLOBAL R32 K15      ; R32 := 0xe72d2edb
1307 [-]: EQ        1 R32 K82    ; if R32 == 2.000000 then PC := 1315
1308 [-]: JMP       1315         ; PC := 1315
1309 [-]: GETGLOBAL R32 K0       ; R32 := 0xae91e43b
1310 [-]: SELF      R32 R32 K1   ; R33 := R32; R32 := R32[0x67bc869f]
1311 [-]: MOVE      R34 R31      ; R34 := R31
1312 [-]: CONST     R35 15       ; R35 := 15.000000
1313 [-]: UNM       R36 R0       ; R36 :=  R0
1314 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1315 [-]: MOVE      R32 R17      ; R32 := R17
1316 [-]: GETGLOBAL R33 K0       ; R33 := 0xae91e43b
1317 [-]: MOVE      R34 R31      ; R34 := R31
1318 [-]: CALL      R32 3 1      ; R32(R33,R34)
1319 [-]: TFORLOOP  R27 2        ; R30,R31 :=  R27(R28,R29); if R30 ~= nil then begin PC = 1306; R29 := R30 end
1320 [-]: JMP       1306         ; PC := 1306
1321 [-]: GETGLOBAL R32 K0       ; R32 := 0xae91e43b
1322 [-]: SELF      R32 R32 K198 ; R33 := R32; R32 := R32[0x5f56eeab]
1323 [-]: LOADK     R34 K240     ; R34 := "HealthAndShield.SentinelName"
1324 [-]: CONST     R35 29       ; R35 := 29.000000
1325 [-]: LOADK     R36 K200     ; R36 := ""
1326 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1327 [-]: GETGLOBAL R32 K0       ; R32 := 0xae91e43b
1328 [-]: SELF      R32 R32 K1   ; R33 := R32; R32 := R32[0x67bc869f]
1329 [-]: LOADK     R34 K241     ; R34 := "HealthAndShield.SentinelAffinity"
1330 [-]: CONST     R35 10       ; R35 := 10.000000
1331 [-]: CONST     R36 0        ; R36 := 0.000000
1332 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1333 [-]: GETGLOBAL R32 K0       ; R32 := 0xae91e43b
1334 [-]: SELF      R32 R32 K198 ; R33 := R32; R32 := R32[0x5f56eeab]
1335 [-]: LOADK     R34 K242     ; R34 := "HealthAndShield.SentinelHealth"
1336 [-]: CONST     R35 29       ; R35 := 29.000000
1337 [-]: LOADK     R36 K200     ; R36 := ""
1338 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1339 [-]: GETGLOBAL R32 K0       ; R32 := 0xae91e43b
1340 [-]: SELF      R32 R32 K10  ; R33 := R32; R32 := R32[0xaade900e]
1341 [-]: LOADK     R34 K243     ; R34 := "HealthAndShield.Sentinel"
1342 [-]: CONST     R35 11       ; R35 := 11.000000
1343 [-]: LOADKB    R36 0 0      ; R36 := false
1344 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1345 [-]: GETGLOBAL R32 K134     ; R32 := 0x2d0fad09
1346 [-]: LOADK     R33 K244     ; R33 := "Lotus.Interface.Libs.TimerMgr"
1347 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1348 [-]: GETTABLE  R33 R32 K245 ; R33 := R32[0xde474187]
1349 [-]: CALL      R33 1 2      ; R33 := R33()
1350 [-]: SETUPVAL  R33 U26      ; U82 := R26
1351 [-]: NEWTABLE  R33 0 12     ; R33 := {}
1352 [-]: GETGLOBAL R34 K247     ; R34 := 0x2b66e51f
1353 [-]: SETTABLE  R33 K246 R34 ; R33["defaultBroadc