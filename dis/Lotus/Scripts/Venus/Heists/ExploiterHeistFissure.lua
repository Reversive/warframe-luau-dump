; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  78

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Utilities"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x2d0fad09
  5 [-]: LOADK     R2 K2        ; R2 := "Lotus.Interface.LotusUtilities"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x2d0fad09
  8 [-]: LOADK     R3 K3        ; R3 := "Lotus.Scripts.Libs.LandscapeLib"
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x2d0fad09
 11 [-]: LOADK     R4 K4        ; R4 := "Lotus.Scripts.Libs.TransmissionSet"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x2d0fad09
 14 [-]: LOADK     R5 K5        ; R5 := "Lotus.Interface.Libs.TimerMgr"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K0        ; R5 := 0x2d0fad09
 17 [-]: LOADK     R6 K6        ; R6 := "Lotus.Scripts.Libs.ObjectiveText"
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K7        ; R6 := 0x88efc25e
 20 [-]: LOADK     R7 K8        ; R7 := "/Lotus/Types/Game/MarkerInfos/ObjectiveMarkerInfo"
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: GETGLOBAL R7 K7        ; R7 := 0x88efc25e
 23 [-]: LOADK     R8 K9        ; R8 := "/Lotus/Types/Game/MarkerInfos/DefendMarkerInfo"
 24 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 25 [-]: LOADK     R8 K10       ; R8 := "/Lotus/Language/SolarisHeists/OrbHeistHarvestProgress"
 26 [-]: LOADK     R9 K11       ; R9 := "/Lotus/Language/SolarisHeists/OrbHeistHarvestComplete"
 27 [-]: LOADK     R10 K12      ; R10 := "/Lotus/Language/SolarisHeists/OrbHeistRecoverHarvester"
 28 [-]: LOADK     R11 K13      ; R11 := "/Lotus/Language/SolarisHeists/OrbHeistHarvesterDestroyed"
 29 [-]: LOADK     R12 K14      ; R12 := "/Lotus/Language/SolarisHeists/OrbHeistHarvesterBoost"
 30 [-]: LOADK     R13 K15      ; R13 := "<FISURE_CANISTER_MARKER_OUTLINE>"
 31 [-]: LOADK     R14 K16      ; R14 := "<FISURE_CANISTER_MARKER>"
 32 [-]: GETGLOBAL R15 K17      ; R15 := 0x0469f296
 33 [-]: LOADK     R16 K18      ; R16 := "FissuresClosed"
 34 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 35 [-]: GETGLOBAL R16 K17      ; R16 := 0x0469f296
 36 [-]: LOADK     R17 K19      ; R17 := "HeistCoolingProgress"
 37 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 38 [-]: GETGLOBAL R17 K17      ; R17 := 0x0469f296
 39 [-]: LOADK     R18 K20      ; R18 := "HeistCoolantBoost"
 40 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 41 [-]: GETGLOBAL R18 K17      ; R18 := 0x0469f296
 42 [-]: LOADK     R19 K21      ; R19 := "HeistFissure"
 43 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 44 [-]: GETGLOBAL R19 K17      ; R19 := 0x0469f296
 45 [-]: LOADK     R20 K22      ; R20 := "ExploiterHeistHarvester"
 46 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 47 [-]: LOADNIL   R20 R23      ; R20 := R21 := R22 := R23 := nil
 48 [-]: CONST     R24 0        ; R24 := 0.000000
 49 [-]: CONST     R25 0        ; R25 := 0.000000
 50 [-]: LOADNIL   R26 R29      ; R26 := R27 := R28 := R29 := nil
 51 [-]: NEWTABLE  R30 0 0      ; R30 := {}
 52 [-]: LOADNIL   R31 R31      ; R31 := nil
 53 [-]: CONST     R32 0        ; R32 := 0.000000
 54 [-]: CONST     R33 1        ; R33 := 1.000000
 55 [-]: CONST     R34 2        ; R34 := 2.000000
 56 [-]: CONST     R35 3        ; R35 := 3.000000
 57 [-]: CONST     R36 0        ; R36 := 0.500000
 58 [-]: CONST     R37 0        ; R37 := 0.000000
 59 [-]: LOADNIL   R38 R45      ; R38 := R39 := R40 := R41 := R42 := R43 := R44 := R45 := nil
 60 [-]: CONST     R46 0        ; R46 := 0.000000
 61 [-]: LOADNIL   R47 R49      ; R47 := R48 := R49 := nil
 62 [-]: CONST     R50 100      ; R50 := 100.000000
 63 [-]: LOADNIL   R51 R55      ; R51 := R52 := R53 := R54 := R55 := nil
 64 [-]: CONST     R56 45       ; R56 := 45.000000
 65 [-]: CONST     R57 3        ; R57 := 3.000000
 66 [-]: GETGLOBAL R58 K17      ; R58 := 0x0469f296
 67 [-]: LOADK     R59 K23      ; R59 := "HeatFissureEximus"
 68 [-]: CALL      R58 2 2      ; R58 := R58(R59)
 69 [-]: LOADNIL   R59 R59      ; R59 := nil
 70 [-]: NEWTABLE  R60 0 0      ; R60 := {}
 71 [-]: CLOSURE   R61 0        ; R61 := closure(Function #1)
 72 [-]: MOVE      R0 R48       ; R0 := R48
 73 [-]: MOVE      R0 R49       ; R0 := R49
 74 [-]: MOVE      R0 R39       ; R0 := R39
 75 [-]: CLOSURE   R62 1        ; R62 := closure(Function #2)
 76 [-]: MOVE      R0 R48       ; R0 := R48
 77 [-]: MOVE      R0 R49       ; R0 := R49
 78 [-]: MOVE      R0 R39       ; R0 := R39
 79 [-]: MOVE      R0 R40       ; R0 := R40
 80 [-]: LOADNIL   R63 R63      ; R63 := nil
 81 [-]: CLOSURE   R64 2        ; R64 := closure(Function #3)
 82 [-]: MOVE      R0 R51       ; R0 := R51
 83 [-]: MOVE      R0 R52       ; R0 := R52
 84 [-]: CLOSURE   R63 3        ; R63 := closure(Function #4)
 85 [-]: MOVE      R0 R52       ; R0 := R52
 86 [-]: MOVE      R0 R28       ; R0 := R28
 87 [-]: MOVE      R0 R51       ; R0 := R51
 88 [-]: MOVE      R0 R40       ; R0 := R40
 89 [-]: MOVE      R0 R54       ; R0 := R54
 90 [-]: MOVE      R0 R48       ; R0 := R48
 91 [-]: MOVE      R0 R49       ; R0 := R49
 92 [-]: MOVE      R0 R39       ; R0 := R39
 93 [-]: MOVE      R0 R64       ; R0 := R64
 94 [-]: CLOSURE   R65 4        ; R65 := closure(Function #5)
 95 [-]: MOVE      R0 R21       ; R0 := R21
 96 [-]: MOVE      R0 R22       ; R0 := R22
 97 [-]: MOVE      R0 R26       ; R0 := R26
 98 [-]: CLOSURE   R66 5        ; R66 := closure(Function #6)
 99 [-]: MOVE      R0 R56       ; R0 := R56
100 [-]: MOVE      R0 R22       ; R0 := R22
101 [-]: CLOSURE   R67 6        ; R67 := closure(Function #7)
102 [-]: MOVE      R0 R21       ; R0 := R21
103 [-]: MOVE      R0 R58       ; R0 := R58
104 [-]: MOVE      R0 R28       ; R0 := R28
105 [-]: MOVE      R0 R59       ; R0 := R59
106 [-]: CLOSURE   R68 7        ; R68 := closure(Function #8)
107 [-]: MOVE      R0 R21       ; R0 := R21
108 [-]: MOVE      R0 R58       ; R0 := R58
109 [-]: MOVE      R0 R59       ; R0 := R59
110 [-]: MOVE      R0 R28       ; R0 := R28
111 [-]: MOVE      R0 R67       ; R0 := R67
112 [-]: CLOSURE   R69 8        ; R69 := closure(Function #9)
113 [-]: MOVE      R0 R55       ; R0 := R55
114 [-]: MOVE      R0 R12       ; R0 := R12
115 [-]: MOVE      R0 R46       ; R0 := R46
116 [-]: MOVE      R0 R14       ; R0 := R14
117 [-]: MOVE      R0 R57       ; R0 := R57
118 [-]: MOVE      R0 R13       ; R0 := R13
119 [-]: CLOSURE   R70 9        ; R70 := closure(Function #10)
120 [-]: MOVE      R0 R37       ; R0 := R37
121 [-]: MOVE      R0 R45       ; R0 := R45
122 [-]: MOVE      R0 R69       ; R0 := R69
123 [-]: MOVE      R0 R20       ; R0 := R20
124 [-]: MOVE      R0 R16       ; R0 := R16
125 [-]: MOVE      R0 R5        ; R0 := R5
126 [-]: MOVE      R0 R50       ; R0 := R50
127 [-]: MOVE      R0 R29       ; R0 := R29
128 [-]: CLOSURE   R71 10       ; R71 := closure(Function #11)
129 [-]: MOVE      R0 R40       ; R0 := R40
130 [-]: MOVE      R0 R22       ; R0 := R22
131 [-]: SETGLOBAL R71 K24      ; OnKilled := R71
132 [-]: CLOSURE   R71 11       ; R71 := closure(Function #12)
133 [-]: MOVE      R0 R22       ; R0 := R22
134 [-]: SETGLOBAL R71 K25      ; OnActivated := R71
135 [-]: CLOSURE   R71 12       ; R71 := closure(Function #13)
136 [-]: MOVE      R0 R39       ; R0 := R39
137 [-]: MOVE      R0 R22       ; R0 := R22
138 [-]: CLOSURE   R72 13       ; R72 := closure(Function #14)
139 [-]: CLOSURE   R73 14       ; R73 := closure(Function #15)
140 [-]: MOVE      R0 R29       ; R0 := R29
141 [-]: MOVE      R0 R33       ; R0 := R33
142 [-]: MOVE      R0 R3        ; R0 := R3
143 [-]: MOVE      R0 R27       ; R0 := R27
144 [-]: MOVE      R0 R21       ; R0 := R21
145 [-]: MOVE      R0 R37       ; R0 := R37
146 [-]: MOVE      R0 R46       ; R0 := R46
147 [-]: MOVE      R0 R20       ; R0 := R20
148 [-]: MOVE      R0 R16       ; R0 := R16
149 [-]: MOVE      R0 R17       ; R0 := R17
150 [-]: MOVE      R0 R34       ; R0 := R34
151 [-]: MOVE      R0 R40       ; R0 := R40
152 [-]: MOVE      R0 R5        ; R0 := R5
153 [-]: MOVE      R0 R8        ; R0 := R8
154 [-]: MOVE      R0 R69       ; R0 := R69
155 [-]: MOVE      R0 R41       ; R0 := R41
156 [-]: MOVE      R0 R7        ; R0 := R7
157 [-]: MOVE      R0 R35       ; R0 := R35
158 [-]: MOVE      R0 R44       ; R0 := R44
159 [-]: MOVE      R0 R30       ; R0 := R30
160 [-]: MOVE      R0 R22       ; R0 := R22
161 [-]: MOVE      R0 R24       ; R0 := R24
162 [-]: MOVE      R0 R9        ; R0 := R9
163 [-]: MOVE      R0 R42       ; R0 := R42
164 [-]: MOVE      R0 R6        ; R0 := R6
165 [-]: MOVE      R0 R43       ; R0 := R43
166 [-]: MOVE      R0 R71       ; R0 := R71
167 [-]: MOVE      R0 R15       ; R0 := R15
168 [-]: MOVE      R0 R10       ; R0 := R10
169 [-]: CLOSURE   R74 15       ; R74 := closure(Function #16)
170 [-]: MOVE      R0 R17       ; R0 := R17
171 [-]: MOVE      R0 R46       ; R0 := R46
172 [-]: MOVE      R0 R44       ; R0 := R44
173 [-]: MOVE      R0 R57       ; R0 := R57
174 [-]: MOVE      R0 R69       ; R0 := R69
175 [-]: MOVE      R0 R50       ; R0 := R50
176 [-]: MOVE      R0 R47       ; R0 := R47
177 [-]: MOVE      R0 R72       ; R0 := R72
178 [-]: MOVE      R0 R39       ; R0 := R39
179 [-]: MOVE      R0 R53       ; R0 := R53
180 [-]: MOVE      R0 R45       ; R0 := R45
181 [-]: CLOSURE   R75 16       ; R75 := closure(Function #17)
182 [-]: MOVE      R0 R21       ; R0 := R21
183 [-]: MOVE      R0 R60       ; R0 := R60
184 [-]: MOVE      R0 R61       ; R0 := R61
185 [-]: MOVE      R0 R62       ; R0 := R62
186 [-]: MOVE      R0 R63       ; R0 := R63
187 [-]: MOVE      R0 R65       ; R0 := R65
188 [-]: MOVE      R0 R66       ; R0 := R66
189 [-]: MOVE      R0 R68       ; R0 := R68
190 [-]: MOVE      R0 R20       ; R0 := R20
191 [-]: MOVE      R0 R22       ; R0 := R22
192 [-]: MOVE      R0 R26       ; R0 := R26
193 [-]: MOVE      R0 R23       ; R0 := R23
194 [-]: MOVE      R0 R24       ; R0 := R24
195 [-]: MOVE      R0 R25       ; R0 := R25
196 [-]: MOVE      R0 R27       ; R0 := R27
197 [-]: MOVE      R0 R30       ; R0 := R30
198 [-]: MOVE      R0 R29       ; R0 := R29
199 [-]: MOVE      R0 R2        ; R0 := R2
200 [-]: MOVE      R0 R73       ; R0 := R73
201 [-]: MOVE      R0 R16       ; R0 := R16
202 [-]: MOVE      R0 R17       ; R0 := R17
203 [-]: MOVE      R0 R28       ; R0 := R28
204 [-]: MOVE      R0 R4        ; R0 := R4
205 [-]: MOVE      R0 R31       ; R0 := R31
206 [-]: MOVE      R0 R56       ; R0 := R56
207 [-]: MOVE      R0 R39       ; R0 := R39
208 [-]: MOVE      R0 R18       ; R0 := R18
209 [-]: MOVE      R0 R48       ; R0 := R48
210 [-]: MOVE      R0 R49       ; R0 := R49
211 [-]: MOVE      R0 R37       ; R0 := R37
212 [-]: MOVE      R0 R46       ; R0 := R46
213 [-]: MOVE      R0 R50       ; R0 := R50
214 [-]: MOVE      R0 R47       ; R0 := R47
215 [-]: MOVE      R0 R72       ; R0 := R72
216 [-]: MOVE      R0 R38       ; R0 := R38
217 [-]: MOVE      R0 R40       ; R0 := R40
218 [-]: MOVE      R0 R19       ; R0 := R19
219 [-]: MOVE      R0 R43       ; R0 := R43
220 [-]: MOVE      R0 R44       ; R0 := R44
221 [-]: MOVE      R0 R57       ; R0 := R57
222 [-]: MOVE      R0 R53       ; R0 := R53
223 [-]: MOVE      R0 R45       ; R0 := R45
224 [-]: MOVE      R0 R74       ; R0 := R74
225 [-]: MOVE      R0 R55       ; R0 := R55
226 [-]: MOVE      R0 R1        ; R0 := R1
227 [-]: MOVE      R0 R0        ; R0 := R0
228 [-]: MOVE      R0 R33       ; R0 := R33
229 [-]: CLOSURE   R76 17       ; R76 := closure(Function #18)
230 [-]: MOVE      R0 R60       ; R0 := R60
231 [-]: MOVE      R0 R46       ; R0 := R46
232 [-]: CLOSURE   R77 18       ; R77 := closure(Function #19)
233 [-]: MOVE      R0 R75       ; R0 := R75
234 [-]: MOVE      R0 R32       ; R0 := R32
235 [-]: MOVE      R0 R29       ; R0 := R29
236 [-]: MOVE      R0 R33       ; R0 := R33
237 [-]: MOVE      R0 R34       ; R0 := R34
238 [-]: MOVE      R0 R0        ; R0 := R0
239 [-]: MOVE      R0 R36       ; R0 := R36
240 [-]: MOVE      R0 R70       ; R0 := R70
241 [-]: MOVE      R0 R35       ; R0 := R35
242 [-]: MOVE      R0 R31       ; R0 := R31
243 [-]: MOVE      R0 R47       ; R0 := R47
244 [-]: MOVE      R0 R76       ; R0 := R76
245 [-]: MOVE      R0 R48       ; R0 := R48
246 [-]: MOVE      R0 R49       ; R0 := R49
247 [-]: MOVE      R0 R39       ; R0 := R39
248 [-]: MOVE      R0 R72       ; R0 := R72
249 [-]: MOVE      R0 R46       ; R0 := R46
250 [-]: MOVE      R0 R28       ; R0 := R28
251 [-]: MOVE      R0 R2        ; R0 := R2
252 [-]: MOVE      R0 R52       ; R0 := R52
253 [-]: MOVE      R0 R51       ; R0 := R51
254 [-]: MOVE      R0 R42       ; R0 := R42
255 [-]: MOVE      R0 R5        ; R0 := R5
256 [-]: MOVE      R0 R53       ; R0 := R53
257 [-]: MOVE      R0 R45       ; R0 := R45
258 [-]: MOVE      R0 R40       ; R0 := R40
259 [-]: MOVE      R0 R38       ; R0 := R38
260 [-]: MOVE      R0 R30       ; R0 := R30
261 [-]: MOVE      R0 R20       ; R0 := R20
262 [-]: MOVE      R0 R11       ; R0 := R11
263 [-]: MOVE      R0 R3        ; R0 := R3
264 [-]: MOVE      R0 R27       ; R0 := R27
265 [-]: MOVE      R0 R23       ; R0 := R23
266 [-]: MOVE      R0 R22       ; R0 := R22
267 [-]: SETGLOBAL R77 K26      ; Start := R77
268 [-]: CLOSURE   R77 19       ; R77 := closure(Function #20)
269 [-]: MOVE      R0 R30       ; R0 := R30
270 [-]: SETGLOBAL R77 K27      ; OnPlayersChanged := R77
271 [-]: CLOSURE   R77 20       ; R77 := closure(Function #21)
272 [-]: MOVE      R0 R2        ; R0 := R2
273 [-]: MOVE      R0 R22       ; R0 := R22
274 [-]: SETGLOBAL R77 K28      ; PlayersLeaving := R77
275 [-]: CLOSURE   R77 21       ; R77 := closure(Function #22)
276 [-]: MOVE      R0 R2        ; R0 := R2
277 [-]: MOVE      R0 R22       ; R0 := R22
278 [-]: SETGLOBAL R77 K29      ; PlayersReturning := R77
279 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 111
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7802aff7
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x89326c93
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x05909209]
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x7802aff7
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETUPVAL  R4 U1        ; R4 := U1
 11 [-]: GETUPVAL  R5 U2        ; R5 := U2
 12 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 13 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 117
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x5721f333
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x89326c93
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x05909209]
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x5721f333
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETUPVAL  R4 U1        ; R4 := U1
 11 [-]: GETUPVAL  R5 U2        ; R5 := U2
 12 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 13 [-]: GETGLOBAL R0 K2        ; R0 := 0x89326c93
 14 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x97dcff30]
 15 [-]: GETUPVAL  R2 U2        ; R2 := U2
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xd1586535]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K6        ; R4 := 0x6a8c74cf
 20 [-]: GETGLOBAL R5 K7        ; R5 := 0x5aa01d0f
 21 [-]: CONST     R6 0         ; R6 := 0.000000
 22 [-]: CONST     R7 8         ; R7 := 8.000000
 23 [-]: GETUPVAL  R8 U3        ; R8 := U3
 24 [-]: GETUPVAL  R9 U2        ; R9 := U2
 25 [-]: CONST     R10 8        ; R10 := 8.000000
 26 [-]: LOADKB    R11 0 0      ; R11 := false
 27 [-]: LOADKB    R12 1 0      ; R12 := true
 28 [-]: LOADKB    R13 0 0      ; R13 := false
 29 [-]: CONST     R14 1        ; R14 := 1.000000
 30 [-]: LOADKB    R15 1 0      ; R15 := true
 31 [-]: CALL      R0 16 1      ; R0(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15)
 32 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 125
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xdaa0c115]
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: LOADNIL   R1 R1        ; R1 := nil
 10 [-]: SETUPVAL  R1 U1        ; U82 := R1
 11 [-]: SETTABLE  R0 K2 K3     ; R0["onCooldown"] := false
 12 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 134
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x775c858b]
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: JMP       42           ; PC := 42
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 10 [-]: GETUPVAL  R2 U2        ; R2 := U2
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 21
 13 [-]: JMP       21           ; PC := 21
 14 [-]: GETUPVAL  R1 U3        ; R1 := U3
 15 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x511d26b8]
 16 [-]: GETGLOBAL R3 K3        ; R3 := 0x5bc693a0
 17 [-]: LOADKB    R4 0 0       ; R4 := false
 18 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 19 [-]: SETUPVAL  R1 U2        ; U82 := R2
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xeedfc816]
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 25 [-]: GETGLOBAL R2 K5        ; R2 := 0xba856e5d
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 42
 28 [-]: JMP       42           ; PC := 42
 29 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 30 [-]: GETUPVAL  R2 U4        ; R2 := U4
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 0         ; if not R1 then PC := 42
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETGLOBAL R1 K6        ; R1 := 0x89326c93
 35 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x05909209]
 36 [-]: GETGLOBAL R3 K5        ; R3 := 0xba856e5d
 37 [-]: GETUPVAL  R4 U5        ; R4 := U5
 38 [-]: GETUPVAL  R5 U6        ; R5 := U6
 39 [-]: GETUPVAL  R6 U7        ; R6 := U7
 40 [-]: CALL      R1 6 2       ; R1 := R1(R2,R3,R4,R5,R6)
 41 [-]: SETUPVAL  R1 U4        ; U82 := R4
 42 [-]: SETTABLE  R0 K8 K9     ; R0["onCooldown"] := true
 43 [-]: GETUPVAL  R1 U1        ; R1 := U1
 44 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbd2e96ea]
 45 [-]: CONST     R3 15        ; R3 := 15.000000
 46 [-]: CLOSURE   R4 0         ; R4 := closure(Function #4.1)
 47 [-]: GETUPVAL  R0 U8        ; R0 := U8
 48 [-]: MOVE      R0 R0        ; R0 := R0
 49 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 50 [-]: SETUPVAL  R1 U0        ; U82 := R0
 51 [-]: RETURN    R0 1         ; return 


; Function #4.1:
;
; Name:            
; Defined at line: 150
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 153
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: CONST     R0 1         ; R0 := 1.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ade896b
  3 [-]: CONST     R2 1         ; R2 := 1.000000
  4 [-]: FORPREP   R0 36        ; R0 -= R2; PC := 36
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x2883e796]
  7 [-]: GETGLOBAL R6 K2        ; R6 := 0xeb407f34
  8 [-]: GETUPVAL  R7 U1        ; R7 := U1
  9 [-]: CONST     R8 10        ; R8 := 10.000000
 10 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 11 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 12 [-]: MOVE      R6 R4        ; R6 := R4
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: TEST      R5 1         ; if R5 then PC := 36
 15 [-]: JMP       36           ; PC := 36
 16 [-]: SELF      R5 R4 K4     ; R6 := R4; R5 := R4[0xbb610e5b]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 19 [-]: GETGLOBAL R7 K5        ; R7 := 0x03faf875
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: TEST      R6 1         ; if R6 then PC := 30
 22 [-]: JMP       30           ; PC := 30
 23 [-]: GETGLOBAL R6 K6        ; R6 := 0x89326c93
 24 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x05909209]
 25 [-]: GETGLOBAL R8 K5        ; R8 := 0x03faf875
 26 [-]: SELF      R9 R5 K8     ; R10 := R5; R9 := R5[0xd1586535]
 27 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 28 [-]: GETGLOBAL R10 K9       ; R10 := ZERO_ROTATION
 29 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 30 [-]: GETUPVAL  R6 U2        ; R6 := U2
 31 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x2fb0041c]
 32 [-]: MOVE      R8 R4        ; R8 := R4
 33 [-]: CALL      R6 3 1       ; R6(R7,R8)
 34 [-]: SELF      R6 R4 K11    ; R7 := R4; R6 := R4[0x9e21e394]
 35 [-]: CALL      R6 2 1       ; R6(R7)
 36 [-]: FORLOOP   R0 5         ; R0 += R2; if R0 <= R1 then begin PC := 5; R3 := R0 end
 37 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 167
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: ADD       R0 R0 K0     ; R0 := R0 + 5.000000
  3 [-]: SETUPVAL  R0 U0        ; U82 := R0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x2d0a92ab]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: CALL      R0 3 1       ; R0(R1,R2)
  8 [-]: GETGLOBAL R0 K2        ; R0 := 0xd644c2f1
  9 [-]: LOADK     R1 K3        ; R1 := "enemy level boosted to "
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 173
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x350ca1d0]
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: GETUPVAL  R1 U2        ; R1 := U2
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x775c858b]
  7 [-]: GETUPVAL  R3 U3        ; R3 := U3
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: SETTABLE  R0 K2 K3     ; R0["onCooldown"] := false
 10 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 179
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xd644c2f1
  2 [-]: LOADK     R2 K1        ; R2 := "eximus incoming"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: SETTABLE  R0 K2 K3     ; R0["onCooldown"] := true
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x42d4a0b9]
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: CONST     R4 10        ; R4 := 10.000000
  9 [-]: CONST     R5 3         ; R5 := 3.000000
 10 [-]: CONST     R6 1         ; R6 := 1.000000
 11 [-]: LOADKB    R7 1 0       ; R7 := true
 12 [-]: CONST     R8 15        ; R8 := 15.000000
 13 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 14 [-]: GETUPVAL  R1 U3        ; R1 := U3
 15 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xbd2e96ea]
 16 [-]: CONST     R3 15        ; R3 := 15.000000
 17 [-]: CLOSURE   R4 0         ; R4 := closure(Function #8.1)
 18 [-]: GETUPVAL  R0 U4        ; R0 := U4
 19 [-]: MOVE      R0 R0        ; R0 := R0
 20 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 21 [-]: SETUPVAL  R1 U2        ; U82 := R2
 22 [-]: RETURN    R0 1         ; return 


; Function #8.1:
;
; Name:            
; Defined at line: 184
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 187
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R0 K0        ; R0 := "<p><font face=\"Noto Sans\">"
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x603636ad]
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: LOADK     R2 K2        ; R2 := "<br>"
  7 [-]: CONCAT    R0 R0 R2     ; R0 := R0 .. R1 .. R2
  8 [-]: CONST     R1 0         ; R1 := 0.000000
  9 [-]: GETUPVAL  R2 U2        ; R2 := U2
 10 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x603636ad]
 15 [-]: GETUPVAL  R4 U3        ; R4 := U3
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: CONCAT    R0 R2 R3     ; R0 := R2 .. R3
 18 [-]: ADD       R1 R1 K3     ; R1 := R1 + 1.000000
 19 [-]: JMP       9            ; PC := 9
 20 [-]: GETGLOBAL R2 K4        ; R2 := _T
 21 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["EscalateHeatFissure"]
 22 [-]: TEST      R2 0         ; if not R2 then PC := 35
 23 [-]: JMP       35           ; PC := 35
 24 [-]: GETUPVAL  R2 U4        ; R2 := U4
 25 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x603636ad]
 30 [-]: GETUPVAL  R4 U5        ; R4 := U5
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: CONCAT    R0 R2 R3     ; R0 := R2 .. R3
 33 [-]: ADD       R1 R1 K3     ; R1 := R1 + 1.000000
 34 [-]: JMP       24           ; PC := 24
 35 [-]: MOVE      R2 R0        ; R2 := R0
 36 [-]: LOADK     R3 K6        ; R3 := "</font></p>"
 37 [-]: CONCAT    R0 R2 R3     ; R0 := R2 .. R3
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0x3f8a850c]
 40 [-]: MOVE      R3 R0        ; R3 := R0
 41 [-]: CALL      R2 2 1       ; R2(R3)
 42 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 204
; #Upvalues:       8
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: MUL       R3 R0 R1     ; R3 := R0 * R1
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: ADD       R4 R4 R3     ; R4 := R4 + R3
  4 [-]: GETUPVAL  R5 U0        ; R5 := U0
  5 [-]: GETGLOBAL R6 K0        ; R6 := 0xffa9b2fe
  6 [-]: LT        0 R5 R6      ; if R5 >= R6 then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: GETGLOBAL R5 K0        ; R5 := 0xffa9b2fe
  9 [-]: LE        0 R5 R4      ; if R5 > R4 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R5 K1        ; R5 := _T
 12 [-]: SETTABLE  R5 K2 K3     ; R5["EscalateHeatFissure"] := nil
 13 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 14 [-]: GETUPVAL  R6 U1        ; R6 := U1
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: TEST      R5 1         ; if R5 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETUPVAL  R5 U1        ; R5 := U1
 19 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0xa2880940]
 20 [-]: CALL      R5 2 1       ; R5(R6)
 21 [-]: GETUPVAL  R5 U2        ; R5 := U2
 22 [-]: CALL      R5 1 1       ; R5()
 23 [-]: GETGLOBAL R5 K6        ; R5 := 0x5bced4c4
 24 [-]: GETTABLE  R5 R5 K7     ; R5 := R5[0x55f27c30]
 25 [-]: MOVE      R6 R4        ; R6 := R4
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: GETGLOBAL R6 K6        ; R6 := 0x5bced4c4
 28 [-]: GETTABLE  R6 R6 K7     ; R6 := R6[0x55f27c30]
 29 [-]: GETUPVAL  R7 U0        ; R7 := U0
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 38
 32 [-]: JMP       38           ; PC := 38
 33 [-]: GETUPVAL  R6 U3        ; R6 := U3
 34 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x751f061d]
 35 [-]: GETUPVAL  R8 U4        ; R8 := U4
 36 [-]: MOVE      R9 R5        ; R9 := R5
 37 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 38 [-]: SETUPVAL  R4 U0        ; U82 := R0
 39 [-]: GETUPVAL  R6 U5        ; R6 := U5
 40 [-]: GETTABLE  R6 R6 K9     ; R6 := R6[0xf3928f38]
 41 [-]: GETGLOBAL R7 K6        ; R7 := 0x5bced4c4
 42 [-]: GETTABLE  R7 R7 K10    ; R7 := R7[0xac1b386a]
 43 [-]: MOVE      R8 R5        ; R8 := R5
 44 [-]: GETUPVAL  R9 U6        ; R9 := U6
 45 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 46 [-]: GETUPVAL  R8 U6        ; R8 := U6
 47 [-]: CALL      R6 3 1       ; R6(R7,R8)
 48 [-]: GETUPVAL  R6 U0        ; R6 := U0
 49 [-]: GETUPVAL  R7 U6        ; R7 := U6
 50 [-]: LE        0 R7 R6      ; if R7 > R6 then PC := 56
 51 [-]: JMP       56           ; PC := 56
 52 [-]: GETUPVAL  R6 U7        ; R6 := U7
 53 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0x8abff40e]
 54 [-]: MOVE      R8 R2        ; R8 := R2
 55 [-]: CALL      R6 3 1       ; R6(R7,R8)
 56 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 230
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xfe9dc265]
  6 [-]: CONST     R3 5         ; R3 := 5.000000
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 236
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xfe9dc265]
  3 [-]: CONST     R3 4         ; R3 := 4.000000
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 240
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x659d451f]
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x485bcb08
  4 [-]: LOADKB    R3 0 0       ; R3 := false
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf5b3034c]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: GETGLOBAL R0 K3        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0x78731440]
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 246
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K0      ; if R0 ~= 0.000000 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: CONST     R1 -1        ; R1 := -1.000000
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       29           ; PC := 29
  6 [-]: EQ        0 R0 K1      ; if R0 ~= 1.000000 then PC := 14
  7 [-]: JMP       14           ; PC := 14
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x55730e1a
  9 [-]: CONST     R2 25        ; R2 := 25.000000
 10 [-]: CONST     R3 35        ; R3 := 35.000000
 11 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 12 [-]: RETURN    R1 0         ; return R1,...
 13 [-]: JMP       29           ; PC := 29
 14 [-]: EQ        0 R0 K3      ; if R0 ~= 2.000000 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R1 K2        ; R1 := 0x55730e1a
 17 [-]: CONST     R2 15        ; R2 := 15.000000
 18 [-]: CONST     R3 25        ; R3 := 25.000000
 19 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 20 [-]: RETURN    R1 0         ; return R1,...
 21 [-]: JMP       29           ; PC := 29
 22 [-]: EQ        0 R0 K4      ; if R0 ~= 3.000000 then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R1 K2        ; R1 := 0x55730e1a
 25 [-]: CONST     R2 5         ; R2 := 5.000000
 26 [-]: CONST     R3 15        ; R3 := 15.000000
 27 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 28 [-]: RETURN    R1 0         ; return R1,...
 29 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 260
; #Upvalues:       29
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x209398c2]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 33
  6 [-]: JMP       33           ; PC := 33
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x9742b85b]
  9 [-]: GETUPVAL  R2 U3        ; R2 := U3
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0x0469f296
 11 [-]: LOADK     R4 K3        ; R4 := "DefenseStarted"
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETUPVAL  R1 U4        ; R1 := U4
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x27d04add]
 16 [-]: CONST     R3 3         ; R3 := 3.000000
 17 [-]: CALL      R1 3 1       ; R1(R2,R3)
 18 [-]: CONST     R1 0         ; R1 := 0.000000
 19 [-]: SETUPVAL  R1 U5        ; U82 := R5
 20 [-]: CONST     R1 0         ; R1 := 0.000000
 21 [-]: SETUPVAL  R1 U6        ; U82 := R6
 22 [-]: GETUPVAL  R1 U7        ; R1 := U7
 23 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x751f061d]
 24 [-]: GETUPVAL  R3 U8        ; R3 := U8
 25 [-]: CONST     R4 0         ; R4 := 0.000000
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: GETUPVAL  R1 U7        ; R1 := U7
 28 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x751f061d]
 29 [-]: GETUPVAL  R3 U9        ; R3 := U9
 30 [-]: CONST     R4 0         ; R4 := 0.000000
 31 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 32 [-]: JMP       228          ; PC := 228
 33 [-]: GETUPVAL  R1 U10       ; R1 := U10
 34 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 79
 35 [-]: JMP       79           ; PC := 79
 36 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 37 [-]: GETUPVAL  R2 U11       ; R2 := U11
 38 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 39 [-]: TEST      R1 1         ; if R1 then PC := 228
 40 [-]: JMP       228          ; PC := 228
 41 [-]: GETGLOBAL R1 K7        ; R1 := 0x11a19c5e
 42 [-]: GETUPVAL  R2 U11       ; R2 := U11
 43 [-]: LOADK     R3 K8        ; R3 := "OnKilled"
 44 [-]: CALL      R1 3 1       ; R1(R2,R3)
 45 [-]: GETUPVAL  R1 U12       ; R1 := U12
 46 [-]: GETTABLE  R1 R1 K9     ; R1 := R1[0xea753e99]
 47 [-]: GETUPVAL  R2 U13       ; R2 := U13
 48 [-]: GETUPVAL  R3 U5        ; R3 := U5
 49 [-]: CONST     R4 100       ; R4 := 100.000000
 50 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 51 [-]: GETUPVAL  R1 U12       ; R1 := U12
 52 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0x1551aa65]
 53 [-]: GETUPVAL  R2 U11       ; R2 := U11
 54 [-]: CALL      R1 2 1       ; R1(R2)
 55 [-]: GETUPVAL  R1 U14       ; R1 := U14
 56 [-]: CALL      R1 1 1       ; R1()
 57 [-]: GETUPVAL  R1 U11       ; R1 := U11
 58 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xc9f6a7d7]
 59 [-]: GETGLOBAL R3 K12       ; R3 := gBaseMarkerInfoType
 60 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 61 [-]: SETUPVAL  R1 U15       ; U82 := R15
 62 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 63 [-]: GETUPVAL  R2 U15       ; R2 := U15
 64 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 65 [-]: TEST      R1 0         ; if not R1 then PC := 228
 66 [-]: JMP       228          ; PC := 228
 67 [-]: GETUPVAL  R1 U11       ; R1 := U11
 68 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x47901f07]
 69 [-]: GETUPVAL  R3 U16       ; R3 := U16
 70 [-]: GETGLOBAL R4 K14       ; R4 := EMPTY_SYMBOL
 71 [-]: GETGLOBAL R5 K15       ; R5 := 0xa421af95
 72 [-]: CONST     R6 0         ; R6 := 0.000000
 73 [-]: CONST     R7 1         ; R7 := 1.000000
 74 [-]: CONST     R8 0         ; R8 := 0.000000
 75 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 76 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 77 [-]: SETUPVAL  R1 U15       ; U82 := R15
 78 [-]: JMP       228          ; PC := 228
 79 [-]: GETUPVAL  R1 U17       ; R1 := U17
 80 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 228
 81 [-]: JMP       228          ; PC := 228
 82 [-]: GETUPVAL  R1 U12       ; R1 := U12
 83 [-]: GETTABLE  R1 R1 K16    ; R1 := R1[0xbd3ce95d]
 84 [-]: CALL      R1 1 1       ; R1()
 85 [-]: GETUPVAL  R1 U12       ; R1 := U12
 86 [-]: GETTABLE  R1 R1 K17    ; R1 := R1[0xedf59000]
 87 [-]: CALL      R1 1 1       ; R1()
 88 [-]: GETGLOBAL R1 K18       ; R1 := _T
 89 [-]: GETTABLE  R1 R1 K19    ; R1 := R1[0x1a41a3c1]
 90 [-]: LOADK     R2 K20       ; R2 := "HeatFissureBoostStatus"
 91 [-]: CALL      R1 2 1       ; R1(R2)
 92 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 93 [-]: GETUPVAL  R2 U11       ; R2 := U11
 94 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 95 [-]: TEST      R1 1         ; if R1 then PC := 112
 96 [-]: JMP       112          ; PC := 112
 97 [-]: GETUPVAL  R1 U11       ; R1 := U11
 98 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1[0x069d881f]
 99 [-]: LOADKB    R3 1 0       ; R3 := true
100 [-]: CALL      R1 3 1       ; R1(R2,R3)
101 [-]: GETUPVAL  R1 U11       ; R1 := U11
102 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0x1ac1655c]
103 [-]: CALL      R1 2 2       ; R1 := R1(R2)
104 [-]: SELF      R1 R1 K23    ; R2 := R1; R1 := R1[0xa383de31]
105 [-]: GETGLOBAL R3 K2        ; R3 := 0x0469f296
106 [-]: LOADK     R4 K24       ; R4 := "HarvesterInvuln"
107 [-]: CALL      R3 2 2       ; R3 := R3(R4)
108 [-]: CONST     R4 25        ; R4 := 25.000000
109 [-]: CONST     R5 6         ; R5 := 6.000000
110 [-]: CONST     R6 0         ; R6 := 0.000000
111 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
112 [-]: GETUPVAL  R1 U18       ; R1 := U18
113 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0xe1b1f1e9]
114 [-]: CALL      R1 2 1       ; R1(R2)
115 [-]: GETGLOBAL R1 K27       ; R1 := 0xbe190284
116 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1[0x0eb34c69]
117 [-]: GETUPVAL  R3 U9        ; R3 := U9
118 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
119 [-]: CONST     R2 1         ; R2 := 1.000000
120 [-]: MOVE      R3 R1        ; R3 := R1
121 [-]: CONST     R4 1         ; R4 := 1.000000
122 [-]: FORPREP   R2 126       ; R2 -= R4; PC := 126
123 [-]: GETUPVAL  R6 U18       ; R6 := U18
124 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xe1b1f1e9]
125 [-]: CALL      R6 2 1       ; R6(R7)
126 [-]: FORLOOP   R2 123       ; R2 += R4; if R2 <= R3 then begin PC := 123; R5 := R2 end
127 [-]: GETUPVAL  R6 U18       ; R6 := U18
128 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6[0x958b6075]
129 [-]: CALL      R6 2 2       ; R6 := R6(R7)
130 [-]: LE        0 R6 K30     ; if R6 > 3.000000 then PC := 139
131 [-]: JMP       139          ; PC := 139
132 [-]: GETUPVAL  R7 U2        ; R7 := U2
133 [-]: GETTABLE  R7 R7 K1     ; R7 := R7[0x9742b85b]
134 [-]: GETUPVAL  R8 U3        ; R8 := U3
135 [-]: GETGLOBAL R9 K2        ; R9 := 0x0469f296
136 [-]: LOADK     R10 K31      ; R10 := "DefenseCompleted"
137 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
138 [-]: CALL      R7 0 1       ; R7(R8,...)
139 [-]: GETGLOBAL R7 K32       ; R7 := 0xc8802016
140 [-]: GETUPVAL  R8 U19       ; R8 := U19
141 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
142 [-]: JMP       165          ; PC := 165
143 [-]: SELF      R12 R11 K33  ; R13 := R11; R12 := R11[0xbb610e5b]
144 [-]: CALL      R12 2 2      ; R12 := R12(R13)
145 [-]: GETGLOBAL R13 K6       ; R13 := 0x7b998233
146 [-]: MOVE      R14 R12      ; R14 := R12
147 [-]: CALL      R13 2 2      ; R13 := R13(R14)
148 [-]: TEST      R13 1        ; if R13 then PC := 165
149 [-]: JMP       165          ; PC := 165
150 [-]: SELF      R13 R12 K34  ; R14 := R12; R13 := R12[0x68d0cbed]
151 [-]: GETUPVAL  R15 U20      ; R15 := U20
152 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
153 [-]: GETUPVAL  R14 U21      ; R14 := U21
154 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 165
155 [-]: JMP       165          ; PC := 165
156 [-]: GETUPVAL  R13 U7       ; R13 := U7
157 [-]: SELF      R13 R13 K35  ; R14 := R13; R13 := R13[0x06d4c9eb]
158 [-]: MOVE      R15 R11      ; R15 := R11
159 [-]: GETUPVAL  R16 U22      ; R16 := U22
160 [-]: LOADK     R17 K36      ; R17 := ""
161 [-]: CONST     R18 0        ; R18 := 0.000000
162 [-]: CONST     R19 5        ; R19 := 5.000000
163 [-]: LOADKB    R20 1 0      ; R20 := true
164 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
165 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 143; R9 := R10 end
166 [-]: JMP       143          ; PC := 143
167 [-]: GETGLOBAL R13 K6       ; R13 := 0x7b998233
168 [-]: GETUPVAL  R14 U15      ; R14 := U15
169 [-]: CALL      R13 2 2      ; R13 := R13(R14)
170 [-]: TEST      R13 1        ; if R13 then PC := 175
171 [-]: JMP       175          ; PC := 175
172 [-]: GETUPVAL  R13 U15      ; R13 := U15
173 [-]: SELF      R13 R13 K37  ; R14 := R13; R13 := R13[0xa2880940]
174 [-]: CALL      R13 2 1      ; R13(R14)
175 [-]: GETGLOBAL R13 K6       ; R13 := 0x7b998233
176 [-]: GETUPVAL  R14 U11      ; R14 := U11
177 [-]: CALL      R13 2 2      ; R13 := R13(R14)
178 [-]: TEST      R13 1        ; if R13 then PC := 201
179 [-]: JMP       201          ; PC := 201
180 [-]: GETUPVAL  R13 U11      ; R13 := U11
181 [-]: SELF      R13 R13 K11  ; R14 := R13; R13 := R13[0xc9f6a7d7]
182 [-]: GETGLOBAL R15 K12      ; R15 := gBaseMarkerInfoType
183 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
184 [-]: SETUPVAL  R13 U23      ; U82 := R23
185 [-]: GETGLOBAL R13 K6       ; R13 := 0x7b998233
186 [-]: GETUPVAL  R14 U23      ; R14 := U23
187 [-]: CALL      R13 2 2      ; R13 := R13(R14)
188 [-]: TEST      R13 0        ; if not R13 then PC := 201
189 [-]: JMP       201          ; PC := 201
190 [-]: GETUPVAL  R13 U11      ; R13 := U11
191 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13[0x47901f07]
192 [-]: GETUPVAL  R15 U24      ; R15 := U24
193 [-]: GETGLOBAL R16 K14      ; R16 := EMPTY_SYMBOL
194 [-]: GETGLOBAL R17 K15      ; R17 := 0xa421af95
195 [-]: CONST     R18 0        ; R18 := 0.000000
196 [-]: CONST     R19 1        ; R19 := 1.000000
197 [-]: CONST     R20 0        ; R20 := 0.000000
198 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
199 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
200 [-]: SETUPVAL  R13 U23      ; U82 := R23
201 [-]: GETUPVAL  R13 U25      ; R13 := U25
202 [-]: SELF      R13 R13 K38  ; R14 := R13; R13 := R13[0x383d2e7d]
203 [-]: CALL      R13 2 1      ; R13(R14)
204 [-]: GETGLOBAL R13 K7       ; R13 := 0x11a19c5e
205 [-]: GETUPVAL  R14 U25      ; R14 := U25
206 [-]: LOADK     R15 K39      ; R15 := "OnActivated"
207 [-]: CALL      R13 3 1      ; R13(R14,R15)
208 [-]: GETUPVAL  R13 U26      ; R13 := U26
209 [-]: CALL      R13 1 1      ; R13()
210 [-]: GETGLOBAL R13 K27      ; R13 := 0xbe190284
211 [-]: SELF      R13 R13 K28  ; R14 := R13; R13 := R13[0x0eb34c69]
212 [-]: GETUPVAL  R15 U27      ; R15 := U27
213 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
214 [-]: GETGLOBAL R14 K27      ; R14 := 0xbe190284
215 [-]: SELF      R14 R14 K5   ; R15 := R14; R14 := R14[0x751f061d]
216 [-]: GETUPVAL  R16 U27      ; R16 := U27
217 [-]: ADD       R17 R13 R1   ; R17 := R13 + R1
218 [-]: ADD       R17 R17 K40  ; R17 := R17 + 1.000000
219 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
220 [-]: GETGLOBAL R14 K27      ; R14 := 0xbe190284
221 [-]: SELF      R14 R14 K41  ; R15 := R14; R14 := R14[0xd1961230]
222 [-]: LOADKB    R16 1 0      ; R16 := true
223 [-]: CALL      R14 3 1      ; R14(R15,R16)
224 [-]: GETUPVAL  R14 U12      ; R14 := U12
225 [-]: GETTABLE  R14 R14 K42  ; R14 := R14[0xa1df01d6]
226 [-]: GETUPVAL  R15 U28      ; R15 := U28
227 [-]: CALL      R14 2 1      ; R14(R15)
228 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 335
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xbe190284
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x0eb34c69]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: ADD       R2 R1 K2     ; R2 := R1 + 1.000000
  6 [-]: SETUPVAL  R2 U1        ; U82 := R1
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0xbe190284
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x751f061d]
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 12 [-]: CONST     R2 1         ; R2 := 1.000000
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: CONST     R4 1         ; R4 := 1.000000
 15 [-]: FORPREP   R2 19        ; R2 -= R4; PC := 19
 16 [-]: GETUPVAL  R6 U2        ; R6 := U2
 17 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6[0xe1b1f1e9]
 18 [-]: CALL      R6 2 1       ; R6(R7)
 19 [-]: FORLOOP   R2 16        ; R2 += R4; if R2 <= R3 then begin PC := 16; R5 := R2 end
 20 [-]: GETUPVAL  R6 U3        ; R6 := U3
 21 [-]: SUB       R6 R6 R0     ; R6 := R6 - R0
 22 [-]: SETUPVAL  R6 U3        ; U82 := R3
 23 [-]: GETUPVAL  R6 U4        ; R6 := U4
 24 [-]: CALL      R6 1 1       ; R6()
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: MUL       R6 R6 K5     ; R6 := R6 * 25.000000
 27 [-]: ADD       R6 K6 R6     ; R6 := 100.000000 + R6
 28 [-]: SETUPVAL  R6 U5        ; U82 := R5
 29 [-]: GETUPVAL  R6 U6        ; R6 := U6
 30 [-]: LT        0 R6 K7      ; if R6 >= 0.000000 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETUPVAL  R6 U7        ; R6 := U7
 33 [-]: GETUPVAL  R7 U1        ; R7 := U1
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: SETUPVAL  R6 U6        ; U82 := R6
 36 [-]: EQ        0 R1 K7      ; if R1 ~= 0.000000 then PC := 55
 37 [-]: JMP       55           ; PC := 55
 38 [-]: GETUPVAL  R6 U8        ; R6 := U8
 39 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0xc9f6a7d7]
 40 [-]: GETGLOBAL R8 K9        ; R8 := 0x0256a5a2
 41 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 42 [-]: GETGLOBAL R7 K10       ; R7 := 0x7b998233
 43 [-]: MOVE      R8 R6        ; R8 := R6
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: TEST      R7 1         ; if R7 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: SELF      R7 R6 K11    ; R8 := R6; R7 := R6[0xf4e253b6]
 48 [-]: CALL      R7 2 1       ; R7(R8)
 49 [-]: GETUPVAL  R7 U8        ; R7 := U8
 50 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0x47901f07]
 51 [-]: GETGLOBAL R9 K13       ; R9 := 0xc69bab1b
 52 [-]: GETGLOBAL R10 K14      ; R10 := EMPTY_SYMBOL
 53 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 54 [-]: SETUPVAL  R7 U9        ; U82 := R9
 55 [-]: GETUPVAL  R7 U1        ; R7 := U1
 56 [-]: GETUPVAL  R8 U3        ; R8 := U3
 57 [-]: LE        0 R8 R7      ; if R8 > R7 then PC := 69
 58 [-]: JMP       69           ; PC := 69
 59 [-]: GETGLOBAL R7 K15       ; R7 := _T
 60 [-]: SETTABLE  R7 K16 K17   ; R7["EscalateHeatFissure"] := nil
 61 [-]: GETGLOBAL R7 K10       ; R7 := 0x7b998233
 62 [-]: GETUPVAL  R8 U10       ; R8 := U10
 63 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 64 [-]: TEST      R7 1         ; if R7 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: GETUPVAL  R7 U10       ; R7 := U10
 67 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0xa2880940]
 68 [-]: CALL      R7 2 1       ; R7(R8)
 69 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 371
; #Upvalues:       47
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x29ef273d]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x66905cb0]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: SETUPVAL  R1 U0        ; U82 := R0
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xa2d83ed4]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0xcbd666e1
 13 [-]: CONST     R2 0         ; R2 := 0.000000
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: JMP       7            ; PC := 7
 16 [-]: NEWTABLE  R1 6 0       ; R1 := {}
 17 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 18 [-]: GETUPVAL  R3 U2        ; R3 := U2
 19 [-]: SETTABLE  R2 K5 R3     ; R2["fn"] := R3
 20 [-]: GETGLOBAL R3 K7        ; R3 := 0x5cd0cadf
 21 [-]: SETTABLE  R2 K6 R3     ; R2["chance"] := R3
 22 [-]: GETGLOBAL R3 K9        ; R3 := 0xc22ecfd8
 23 [-]: SETTABLE  R2 K8 R3     ; R2["requiredBoost"] := R3
 24 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 25 [-]: GETUPVAL  R4 U3        ; R4 := U3
 26 [-]: SETTABLE  R3 K5 R4     ; R3["fn"] := R4
 27 [-]: GETGLOBAL R4 K10       ; R4 := 0x07ede78e
 28 [-]: SETTABLE  R3 K6 R4     ; R3["chance"] := R4
 29 [-]: GETGLOBAL R4 K11       ; R4 := 0xe1327023
 30 [-]: SETTABLE  R3 K8 R4     ; R3["requiredBoost"] := R4
 31 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 32 [-]: GETUPVAL  R5 U4        ; R5 := U4
 33 [-]: SETTABLE  R4 K5 R5     ; R4["fn"] := R5
 34 [-]: GETGLOBAL R5 K12       ; R5 := 0xc2be17fb
 35 [-]: SETTABLE  R4 K6 R5     ; R4["chance"] := R5
 36 [-]: GETGLOBAL R5 K13       ; R5 := 0x29324b04
 37 [-]: SETTABLE  R4 K8 R5     ; R4["requiredBoost"] := R5
 38 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 39 [-]: GETUPVAL  R6 U5        ; R6 := U5
 40 [-]: SETTABLE  R5 K5 R6     ; R5["fn"] := R6
 41 [-]: GETGLOBAL R6 K14       ; R6 := 0x280420e8
 42 [-]: SETTABLE  R5 K6 R6     ; R5["chance"] := R6
 43 [-]: GETGLOBAL R6 K15       ; R6 := 0x3ca913cd
 44 [-]: SETTABLE  R5 K8 R6     ; R5["requiredBoost"] := R6
 45 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 46 [-]: GETUPVAL  R7 U6        ; R7 := U6
 47 [-]: SETTABLE  R6 K5 R7     ; R6["fn"] := R7
 48 [-]: GETGLOBAL R7 K16       ; R7 := 0x490d510e
 49 [-]: SETTABLE  R6 K6 R7     ; R6["chance"] := R7
 50 [-]: GETGLOBAL R7 K17       ; R7 := 0x6d2394a3
 51 [-]: SETTABLE  R6 K8 R7     ; R6["requiredBoost"] := R7
 52 [-]: NEWTABLE  R7 0 3       ; R7 := {}
 53 [-]: GETUPVAL  R8 U7        ; R8 := U7
 54 [-]: SETTABLE  R7 K5 R8     ; R7["fn"] := R8
 55 [-]: GETGLOBAL R8 K18       ; R8 := 0xbed36062
 56 [-]: SETTABLE  R7 K6 R8     ; R7["chance"] := R8
 57 [-]: GETGLOBAL R8 K19       ; R8 := 0x0c03b5c7
 58 [-]: SETTABLE  R7 K8 R8     ; R7["requiredBoost"] := R8
 59 [-]: SETLIST   R1 6 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 6
 60 [-]: SETUPVAL  R1 U1        ; U82 := R1
 61 [-]: GETGLOBAL R1 K20       ; R1 := 0xbe190284
 62 [-]: SETUPVAL  R1 U8        ; U82 := R8
 63 [-]: SETUPVAL  R0 U9        ; U82 := R9
 64 [-]: SELF      R1 R0 K21    ; R2 := R0; R1 := R0[0x891629fa]
 65 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 66 [-]: SETUPVAL  R1 U10       ; U82 := R10
 67 [-]: SELF      R1 R0 K22    ; R2 := R0; R1 := R0[0xd1586535]
 68 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 69 [-]: SETUPVAL  R1 U11       ; U82 := R11
 70 [-]: SELF      R1 R0 K23    ; R2 := R0; R1 := R0[0xc5b92518]
 71 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 72 [-]: SETUPVAL  R1 U12       ; U82 := R12
 73 [-]: SELF      R1 R0 K24    ; R2 := R0; R1 := R0[0x7c97b143]
 74 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 75 [-]: SETUPVAL  R1 U13       ; U82 := R13
 76 [-]: SELF      R1 R0 K25    ; R2 := R0; R1 := R0[0x4c976eda]
 77 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 78 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0xe4c355e2]
 79 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 80 [-]: SETUPVAL  R1 U14       ; U82 := R14
 81 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
 82 [-]: SELF      R1 R1 K27    ; R2 := R1; R1 := R1[0xb7d33840]
 83 [-]: LOADK     R3 K28       ; R3 := "OnPlayersChanged"
 84 [-]: CALL      R1 3 1       ; R1(R2,R3)
 85 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
 86 [-]: SELF      R1 R1 K29    ; R2 := R1; R1 := R1[0x7d108ddb]
 87 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 88 [-]: SETUPVAL  R1 U15       ; U82 := R15
 89 [-]: GETUPVAL  R1 U17       ; R1 := U17
 90 [-]: GETTABLE  R1 R1 K30    ; R1 := R1[0xc9013731]
 91 [-]: GETUPVAL  R2 U18       ; R2 := U18
 92 [-]: GETUPVAL  R3 U9        ; R3 := U9
 93 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 94 [-]: GETUPVAL  R5 U19       ; R5 := U19
 95 [-]: GETUPVAL  R6 U20       ; R6 := U20
 96 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 97 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 98 [-]: SETUPVAL  R1 U16       ; U82 := R16
 99 [-]: GETUPVAL  R1 U22       ; R1 := U22
100 [-]: GETTABLE  R1 R1 K31    ; R1 := R1[0xde474187]
101 [-]: CALL      R1 1 2       ; R1 := R1()
102 [-]: SETUPVAL  R1 U21       ; U82 := R21
103 [-]: GETUPVAL  R1 U17       ; R1 := U17
104 [-]: GETTABLE  R1 R1 K32    ; R1 := R1[0xa80cf6ff]
105 [-]: GETUPVAL  R2 U0        ; R2 := U0
106 [-]: MOVE      R3 R0        ; R3 := R0
107 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
108 [-]: SETUPVAL  R1 U23       ; U82 := R23
109 [-]: SELF      R1 R0 K33    ; R2 := R0; R1 := R0[0xe19c3f44]
110 [-]: LOADK     R3 K34       ; R3 := "PlayersLeaving"
111 [-]: GETGLOBAL R4 K35       ; R4 := 0x0469f296
112 [-]: LOADK     R5 K36       ; R5 := "LeavingCB"
113 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
114 [-]: CALL      R1 0 1       ; R1(R2,...)
115 [-]: SELF      R1 R0 K37    ; R2 := R0; R1 := R0[0x3f86f5a0]
116 [-]: LOADK     R3 K38       ; R3 := "PlayersReturning"
117 [-]: GETGLOBAL R4 K35       ; R4 := 0x0469f296
118 [-]: LOADK     R5 K39       ; R5 := "ReturningCB"
119 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
120 [-]: CALL      R1 0 1       ; R1(R2,...)
121 [-]: SELF      R1 R0 K40    ; R2 := R0; R1 := R0[0x2d0a92ab]
122 [-]: GETUPVAL  R3 U24       ; R3 := U24
123 [-]: CALL      R1 3 1       ; R1(R2,R3)
124 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
125 [-]: SELF      R1 R1 K41    ; R2 := R1; R1 := R1[0xc7b81e8d]
126 [-]: GETUPVAL  R3 U26       ; R3 := U26
127 [-]: GETUPVAL  R4 U11       ; R4 := U11
128 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
129 [-]: SETUPVAL  R1 U25       ; U82 := R25
130 [-]: GETGLOBAL R1 K42       ; R1 := 0x14459a1c
131 [-]: TEST      R1 0         ; if not R1 then PC := 148
132 [-]: JMP       148          ; PC := 148
133 [-]: GETGLOBAL R1 K43       ; R1 := 0x7b998233
134 [-]: GETUPVAL  R2 U25       ; R2 := U25
135 [-]: CALL      R1 2 2       ; R1 := R1(R2)
136 [-]: TEST      R1 0         ; if not R1 then PC := 148
137 [-]: JMP       148          ; PC := 148
138 [-]: GETGLOBAL R1 K4        ; R1 := 0xcbd666e1
139 [-]: LOADK     R2 K44       ; R2 := 0.100000
140 [-]: CALL      R1 2 1       ; R1(R2)
141 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
142 [-]: SELF      R1 R1 K41    ; R2 := R1; R1 := R1[0xc7b81e8d]
143 [-]: GETUPVAL  R3 U26       ; R3 := U26
144 [-]: GETUPVAL  R4 U11       ; R4 := U11
145 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
146 [-]: SETUPVAL  R1 U25       ; U82 := R25
147 [-]: JMP       133          ; PC := 133
148 [-]: GETUPVAL  R1 U25       ; R1 := U25
149 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0xd1586535]
150 [-]: CALL      R1 2 2       ; R1 := R1(R2)
151 [-]: SETUPVAL  R1 U27       ; U82 := R27
152 [-]: GETUPVAL  R1 U25       ; R1 := U25
153 [-]: SELF      R1 R1 K45    ; R2 := R1; R1 := R1[0xcb3851b8]
154 [-]: CALL      R1 2 2       ; R1 := R1(R2)
155 [-]: SETUPVAL  R1 U28       ; U82 := R28
156 [-]: GETUPVAL  R1 U8        ; R1 := U8
157 [-]: SELF      R1 R1 K46    ; R2 := R1; R1 := R1[0x0eb34c69]
158 [-]: GETUPVAL  R3 U19       ; R3 := U19
159 [-]: CONST     R4 0         ; R4 := 0.000000
160 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
161 [-]: SETUPVAL  R1 U29       ; U82 := R29
162 [-]: GETUPVAL  R1 U8        ; R1 := U8
163 [-]: SELF      R1 R1 K46    ; R2 := R1; R1 := R1[0x0eb34c69]
164 [-]: GETUPVAL  R3 U20       ; R3 := U20
165 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
166 [-]: SETUPVAL  R1 U30       ; U82 := R30
167 [-]: GETUPVAL  R1 U30       ; R1 := U30
168 [-]: MUL       R1 R1 K47    ; R1 := R1 * 25.000000
169 [-]: ADD       R1 K48 R1    ; R1 := 100.000000 + R1
170 [-]: SETUPVAL  R1 U31       ; U82 := R31
171 [-]: GETUPVAL  R1 U33       ; R1 := U33
172 [-]: GETUPVAL  R2 U30       ; R2 := U30
173 [-]: CALL      R1 2 2       ; R1 := R1(R2)
174 [-]: SETUPVAL  R1 U32       ; U82 := R32
175 [-]: GETUPVAL  R1 U25       ; R1 := U25
176 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1[0xc9f6a7d7]
177 [-]: GETGLOBAL R3 K50       ; R3 := 0x6ecc7ff5
178 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
179 [-]: SETUPVAL  R1 U34       ; U82 := R34
180 [-]: GETGLOBAL R1 K4        ; R1 := 0xcbd666e1
181 [-]: CONST     R2 0         ; R2 := 0.000000
182 [-]: CALL      R1 2 1       ; R1(R2)
183 [-]: GETGLOBAL R1 K51       ; R1 := _T
184 [-]: GETTABLE  R1 R1 K52    ; R1 := R1["gHeatFissureHarvesters"]
185 [-]: SELF      R1 R1 K53    ; R2 := R1; R1 := R1[0xe90cce31]
186 [-]: GETUPVAL  R3 U10       ; R3 := U10
187 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
188 [-]: SETUPVAL  R1 U35       ; U82 := R35
189 [-]: GETGLOBAL R1 K43       ; R1 := 0x7b998233
190 [-]: GETUPVAL  R2 U35       ; R2 := U35
191 [-]: CALL      R1 2 2       ; R1 := R1(R2)
192 [-]: TEST      R1 0         ; if not R1 then PC := 200
193 [-]: JMP       200          ; PC := 200
194 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
195 [-]: SELF      R1 R1 K41    ; R2 := R1; R1 := R1[0xc7b81e8d]
196 [-]: GETUPVAL  R3 U36       ; R3 := U36
197 [-]: GETUPVAL  R4 U11       ; R4 := U11
198 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
199 [-]: SETUPVAL  R1 U35       ; U82 := R35
200 [-]: GETGLOBAL R1 K43       ; R1 := 0x7b998233
201 [-]: GETUPVAL  R2 U35       ; R2 := U35
202 [-]: CALL      R1 2 2       ; R1 := R1(R2)
203 [-]: TEST      R1 1         ; if R1 then PC := 220
204 [-]: JMP       220          ; PC := 220
205 [-]: GETUPVAL  R1 U35       ; R1 := U35
206 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1[0xc9f6a7d7]
207 [-]: GETGLOBAL R3 K54       ; R3 := gContextActionType
208 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
209 [-]: SETUPVAL  R1 U37       ; U82 := R37
210 [-]: GETUPVAL  R1 U35       ; R1 := U35
211 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1[0xc9f6a7d7]
212 [-]: GETGLOBAL R3 K55       ; R3 := gLotusFissureHarvesterStateType
213 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
214 [-]: SETUPVAL  R1 U38       ; U82 := R38
215 [-]: GETUPVAL  R1 U38       ; R1 := U38
216 [-]: SELF      R1 R1 K56    ; R2 := R1; R1 := R1[0x958b6075]
217 [-]: CALL      R1 2 2       ; R1 := R1(R2)
218 [-]: SUB       R1 K57 R1    ; R1 := 3.000000 - R1
219 [-]: SETUPVAL  R1 U39       ; U82 := R39
220 [-]: GETUPVAL  R1 U30       ; R1 := U30
221 [-]: EQ        0 R1 K58     ; if R1 ~= 0.000000 then PC := 246
222 [-]: JMP       246          ; PC := 246
223 [-]: GETUPVAL  R1 U25       ; R1 := U25
224 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1[0xc9f6a7d7]
225 [-]: GETGLOBAL R3 K59       ; R3 := 0xc69bab1b
226 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
227 [-]: GETGLOBAL R2 K43       ; R2 := 0x7b998233
228 [-]: MOVE      R3 R1        ; R3 := R1
229 [-]: CALL      R2 2 2       ; R2 := R2(R3)
230 [-]: TEST      R2 1         ; if R2 then PC := 234
231 [-]: JMP       234          ; PC := 234
232 [-]: SELF      R2 R1 K60    ; R3 := R1; R2 := R1[0xa2880940]
233 [-]: CALL      R2 2 1       ; R2(R3)
234 [-]: GETUPVAL  R2 U25       ; R2 := U25
235 [-]: SELF      R2 R2 K49    ; R3 := R2; R2 := R2[0xc9f6a7d7]
236 [-]: GETGLOBAL R4 K61       ; R4 := 0x0256a5a2
237 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
238 [-]: GETGLOBAL R3 K43       ; R3 := 0x7b998233
239 [-]: MOVE      R4 R2        ; R4 := R2
240 [-]: CALL      R3 2 2       ; R3 := R3(R4)
241 [-]: TEST      R3 1         ; if R3 then PC := 273
242 [-]: JMP       273          ; PC := 273
243 [-]: SELF      R3 R2 K62    ; R4 := R2; R3 := R2[0x383d2e7d]
244 [-]: CALL      R3 2 1       ; R3(R4)
245 [-]: JMP       273          ; PC := 273
246 [-]: GETUPVAL  R3 U25       ; R3 := U25
247 [-]: SELF      R3 R3 K49    ; R4 := R3; R3 := R3[0xc9f6a7d7]
248 [-]: GETGLOBAL R5 K59       ; R5 := 0xc69bab1b
249 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
250 [-]: SETUPVAL  R3 U40       ; U82 := R40
251 [-]: GETGLOBAL R3 K43       ; R3 := 0x7b998233
252 [-]: GETUPVAL  R4 U40       ; R4 := U40
253 [-]: CALL      R3 2 2       ; R3 := R3(R4)
254 [-]: TEST      R3 0         ; if not R3 then PC := 262
255 [-]: JMP       262          ; PC := 262
256 [-]: GETUPVAL  R3 U25       ; R3 := U25
257 [-]: SELF      R3 R3 K63    ; R4 := R3; R3 := R3[0x47901f07]
258 [-]: GETGLOBAL R5 K59       ; R5 := 0xc69bab1b
259 [-]: GETGLOBAL R6 K64       ; R6 := EMPTY_SYMBOL
260 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
261 [-]: SETUPVAL  R3 U40       ; U82 := R40
262 [-]: GETUPVAL  R3 U25       ; R3 := U25
263 [-]: SELF      R3 R3 K49    ; R4 := R3; R3 := R3[0xc9f6a7d7]
264 [-]: GETGLOBAL R5 K61       ; R5 := 0x0256a5a2
265 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
266 [-]: GETGLOBAL R4 K43       ; R4 := 0x7b998233
267 [-]: MOVE      R5 R3        ; R5 := R3
268 [-]: CALL      R4 2 2       ; R4 := R4(R5)
269 [-]: TEST      R4 1         ; if R4 then PC := 273
270 [-]: JMP       273          ; PC := 273
271 [-]: SELF      R4 R3 K65    ; R5 := R3; R4 := R3[0xf4e253b6]
272 [-]: CALL      R4 2 1       ; R4(R5)
273 [-]: GETUPVAL  R4 U30       ; R4 := U30
274 [-]: GETUPVAL  R5 U39       ; R5 := U39
275 [-]: LT        0 R4 R5      ; if R4 >= R5 then PC := 300
276 [-]: JMP       300          ; PC := 300
277 [-]: GETUPVAL  R4 U29       ; R4 := U29
278 [-]: GETGLOBAL R5 K66       ; R5 := 0xffa9b2fe
279 [-]: LT        0 R4 R5      ; if R4 >= R5 then PC := 300
280 [-]: JMP       300          ; PC := 300
281 [-]: GETUPVAL  R4 U25       ; R4 := U25
282 [-]: SELF      R4 R4 K49    ; R5 := R4; R4 := R4[0xc9f6a7d7]
283 [-]: GETGLOBAL R6 K67       ; R6 := 0xc262ec64
284 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
285 [-]: SETUPVAL  R4 U41       ; U82 := R41
286 [-]: GETGLOBAL R4 K43       ; R4 := 0x7b998233
287 [-]: GETUPVAL  R5 U41       ; R5 := U41
288 [-]: CALL      R4 2 2       ; R4 := R4(R5)
289 [-]: TEST      R4 0         ; if not R4 then PC := 297
290 [-]: JMP       297          ; PC := 297
291 [-]: GETUPVAL  R4 U25       ; R4 := U25
292 [-]: SELF      R4 R4 K63    ; R5 := R4; R4 := R4[0x47901f07]
293 [-]: GETGLOBAL R6 K67       ; R6 := 0xc262ec64
294 [-]: GETGLOBAL R7 K64       ; R7 := EMPTY_SYMBOL
295 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
296 [-]: SETUPVAL  R4 U41       ; U82 := R41
297 [-]: GETGLOBAL R4 K51       ; R4 := _T
298 [-]: GETUPVAL  R5 U42       ; R5 := U42
299 [-]: SETTABLE  R4 K68 R5    ; R4["EscalateHeatFissure"] := R5
300 [-]: GETGLOBAL R4 K51       ; R4 := _T
301 [-]: GETTABLE  R4 R4 K69    ; R4 := R4[0x8ee923fe]
302 [-]: LOADK     R5 K70       ; R5 := "HeatFissureBoostStatus"
303 [-]: GETUPVAL  R6 U44       ; R6 := U44
304 [-]: GETTABLE  R6 R6 K71    ; R6 := R6["HT_LABEL"]
305 [-]: LOADK     R7 K44       ; R7 := 0.100000
306 [-]: LOADKB    R8 0 0       ; R8 := false
307 [-]: LOADKB    R9 1 0       ; R9 := true
308 [-]: CALL      R4 6 2       ; R4 := R4(R5,R6,R7,R8,R9)
309 [-]: SETUPVAL  R4 U43       ; U82 := R43
310 [-]: GETUPVAL  R4 U43       ; R4 := U43
311 [-]: GETTABLE  R4 R4 K72    ; R4 := R4[0x425b8f0d]
312 [-]: CONST     R5 80        ; R5 := 80.000000
313 [-]: LOADKB    R6 1 0       ; R6 := true
314 [-]: CALL      R4 3 1       ; R4(R5,R6)
315 [-]: GETUPVAL  R4 U9        ; R4 := U9
316 [-]: SELF      R4 R4 K73    ; R5 := R4; R4 := R4[0xabe61691]
317 [-]: CALL      R4 2 2       ; R4 := R4(R5)
318 [-]: GETUPVAL  R5 U16       ; R5 := U16
319 [-]: SELF      R5 R5 K74    ; R6 := R5; R5 := R5[0x8abff40e]
320 [-]: GETUPVAL  R7 U45       ; R7 := U45
321 [-]: GETTABLE  R7 R7 K75    ; R7 := R7[0x06d055f9]
322 [-]: EQ        1 R4 K58     ; if R4 == 0.000000 then PC := 325
323 [-]: JMP       325          ; PC := 325
324 [-]: LOADKB    R8 0 1       ; R8 := false; PC := 325
325 [-]: LOADKB    R8 1 0       ; R8 := true
326 [-]: GETUPVAL  R9 U46       ; R9 := U46
327 [-]: MOVE      R10 R4       ; R10 := R4
328 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
329 [-]: CALL      R5 0 1       ; R5(R6,...)
330 [-]: EQ        0 R4 K58     ; if R4 ~= 0.000000 then PC := 376
331 [-]: JMP       376          ; PC := 376
332 [-]: SELF      R5 R0 K76    ; R6 := R0; R5 := R0[0xefe6cad1]
333 [-]: CALL      R5 2 2       ; R5 := R5(R6)
334 [-]: EQ        0 R5 K78     ; if R5 ~= 1.000000 then PC := 376
335 [-]: JMP       376          ; PC := 376
336 [-]: GETGLOBAL R5 K43       ; R5 := 0x7b998233
337 [-]: GETUPVAL  R6 U35       ; R6 := U35
338 [-]: CALL      R5 2 2       ; R5 := R5(R6)
339 [-]: TEST      R5 1         ; if R5 then PC := 376
340 [-]: JMP       376          ; PC := 376
341 [-]: GETUPVAL  R5 U35       ; R5 := U35
342 [-]: SELF      R5 R5 K79    ; R6 := R5; R5 := R5[0x069d881f]
343 [-]: LOADKB    R7 0 0       ; R7 := false
344 [-]: CALL      R5 3 1       ; R5(R6,R7)
345 [-]: GETUPVAL  R5 U35       ; R5 := U35
346 [-]: SELF      R5 R5 K80    ; R6 := R5; R5 := R5[0x1ac1655c]
347 [-]: CALL      R5 2 2       ; R5 := R5(R6)
348 [-]: SELF      R5 R5 K81    ; R6 := R5; R5 := R5[0x8e3e343e]
349 [-]: GETGLOBAL R7 K35       ; R7 := 0x0469f296
350 [-]: LOADK     R8 K82       ; R8 := "HarvesterInvuln"
351 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
352 [-]: CALL      R5 0 1       ; R5(R6,...)
353 [-]: GETUPVAL  R5 U35       ; R5 := U35
354 [-]: SELF      R5 R5 K83    ; R6 := R5; R5 := R5[0x2047cfe7]
355 [-]: CALL      R5 2 2       ; R5 := R5(R6)
356 [-]: TEST      R5 1         ; if R5 then PC := 365
357 [-]: JMP       365          ; PC := 365
358 [-]: GETUPVAL  R5 U35       ; R5 := U35
359 [-]: SELF      R5 R5 K84    ; R6 := R5; R5 := R5[0x014db014]
360 [-]: GETUPVAL  R7 U35       ; R7 := U35
361 [-]: SELF      R7 R7 K85    ; R8 := R7; R7 := R7[0xb40c191a]
362 [-]: CALL      R7 2 2       ; R7 := R7(R8)
363 [-]: LOADKB    R8 0 0       ; R8 := false
364 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
365 [-]: GETUPVAL  R5 U35       ; R5 := U35
366 [-]: SELF      R5 R5 K80    ; R6 := R5; R5 := R5[0x1ac1655c]
367 [-]: CALL      R5 2 2       ; R5 := R5(R6)
368 [-]: SELF      R5 R5 K86    ; R6 := R5; R5 := R5[0x57369b8b]
369 [-]: GETUPVAL  R7 U35       ; R7 := U35
370 [-]: SELF      R7 R7 K80    ; R8 := R7; R7 := R7[0x1ac1655c]
371 [-]: CALL      R7 2 2       ; R7 := R7(R8)
372 [-]: SELF      R7 R7 K87    ; R8 := R7; R7 := R7[0xb87f958d]
373 [-]: LOADKB    R9 0 0       ; R9 := false
374 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
375 [-]: CALL      R5 0 1       ; R5(R6,...)
376 [-]: GETGLOBAL R5 K43       ; R5 := 0x7b998233
377 [-]: GETUPVAL  R6 U35       ; R6 := U35
378 [-]: CALL      R5 2 2       ; R5 := R5(R6)
379 [-]: TEST      R5 1         ; if R5 then PC := 386
380 [-]: JMP       386          ; PC := 386
381 [-]: GETUPVAL  R5 U35       ; R5 := U35
382 [-]: SELF      R5 R5 K83    ; R6 := R5; R5 := R5[0x2047cfe7]
383 [-]: CALL      R5 2 2       ; R5 := R5(R6)
384 [-]: TEST      R5 0         ; if not R5 then PC := 390
385 [-]: JMP       390          ; PC := 390
386 [-]: SELF      R5 R0 K88    ; R6 := R0; R5 := R0[0xfe9dc265]
387 [-]: CONST     R7 5         ; R7 := 5.000000
388 [-]: CALL      R5 3 1       ; R5(R6,R7)
389 [-]: JMP       393          ; PC := 393
390 [-]: SELF      R5 R0 K88    ; R6 := R0; R5 := R0[0xfe9dc265]
391 [-]: CONST     R7 2         ; R7 := 2.000000
392 [-]: CALL      R5 3 1       ; R5(R6,R7)
393 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 491
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: CONST     R1 0         ; R1 := 0.000000
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CONST     R3 1         ; R3 := 1.000000
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: LEN       R4 R4        ; R4 := # R4
  7 [-]: CONST     R5 1         ; R5 := 1.000000
  8 [-]: FORPREP   R3 23        ; R3 -= R5; PC := 23
  9 [-]: GETUPVAL  R7 U0        ; R7 := U0
 10 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 11 [-]: GETTABLE  R8 R7 K0     ; R8 := R7["onCooldown"]
 12 [-]: TEST      R8 1         ; if R8 then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETTABLE  R8 R7 K1     ; R8 := R7["requiredBoost"]
 15 [-]: GETUPVAL  R9 U1        ; R9 := U1
 16 [-]: ADD       R9 R9 K2     ; R9 := R9 + 1.000000
 17 [-]: LE        0 R8 R9      ; if R8 > R9 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: ADD       R2 R2 K2     ; R2 := R2 + 1.000000
 20 [-]: SETTABLE  R0 R2 R7     ; R0[R2] := R7
 21 [-]: GETTABLE  R8 R7 K3     ; R8 := R7["chance"]
 22 [-]: ADD       R1 R1 R8     ; R1 := R1 + R8
 23 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 24 [-]: GETGLOBAL R8 K4        ; R8 := 0x0c62abf7
 25 [-]: CALL      R8 1 2       ; R8 := R8()
 26 [-]: CONST     R9 0         ; R9 := 0.000000
 27 [-]: CONST     R10 1        ; R10 := 1.000000
 28 [-]: MOVE      R11 R2       ; R11 := R2
 29 [-]: CONST     R12 1        ; R12 := 1.000000
 30 [-]: FORPREP   R10 38       ; R10 -= R12; PC := 38
 31 [-]: GETTABLE  R14 R0 R13   ; R14 := R0[R13]
 32 [-]: GETTABLE  R15 R14 K3   ; R15 := R14["chance"]
 33 [-]: DIV       R15 R15 R1   ; R15 := R15 / R1
 34 [-]: ADD       R9 R9 R15    ; R9 := R9 + R15
 35 [-]: LE        0 R8 R9      ; if R8 > R9 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: RETURN    R14 2        ; return R14
 38 [-]: FORLOOP   R10 31       ; R10 += R12; if R10 <= R11 then begin PC := 31; R13 := R10 end
 39 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 518
; #Upvalues:       34
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: CONST     R1 0         ; R1 := 0.000000
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CONST     R3 0         ; R3 := 0.000000
  7 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0[0xefe6cad1]
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: LT        0 R4 K2      ; if R4 >= 4.000000 then PC := 90
 10 [-]: JMP       90           ; PC := 90
 11 [-]: GETGLOBAL R4 K3        ; R4 := 0xfff641af
 12 [-]: CALL      R4 1 2       ; R4 := R4()
 13 [-]: MOVE      R1 R4        ; R1 := R4
 14 [-]: GETUPVAL  R4 U2        ; R4 := U2
 15 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x209398c2]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: MOVE      R2 R4        ; R2 := R4
 18 [-]: GETUPVAL  R4 U3        ; R4 := U3
 19 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETUPVAL  R4 U2        ; R4 := U2
 22 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x8abff40e]
 23 [-]: GETUPVAL  R6 U4        ; R6 := U4
 24 [-]: CALL      R4 3 1       ; R4(R5,R6)
 25 [-]: JMP       72           ; PC := 72
 26 [-]: GETUPVAL  R4 U4        ; R4 := U4
 27 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 72
 28 [-]: JMP       72           ; PC := 72
 29 [-]: GETUPVAL  R4 U5        ; R4 := U5
 30 [-]: GETTABLE  R4 R4 K6     ; R4 := R4[0x06d055f9]
 31 [-]: LOADKB    R5 0 0       ; R5 := false
 32 [-]: GETUPVAL  R6 U6        ; R6 := U6
 33 [-]: MUL       R6 R6 K7     ; R6 := R6 * 20.000000
 34 [-]: GETUPVAL  R7 U6        ; R7 := U6
 35 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 36 [-]: MOVE      R3 R4        ; R3 := R4
 37 [-]: GETUPVAL  R4 U7        ; R4 := U7
 38 [-]: MOVE      R5 R3        ; R5 := R3
 39 [-]: MOVE      R6 R1        ; R6 := R1
 40 [-]: GETUPVAL  R7 U8        ; R7 := U8
 41 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 42 [-]: GETUPVAL  R4 U9        ; R4 := U9
 43 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xfaa69527]
 44 [-]: MOVE      R6 R1        ; R6 := R1
 45 [-]: CALL      R4 3 1       ; R4(R5,R6)
 46 [-]: GETUPVAL  R4 U10       ; R4 := U10
 47 [-]: LT        0 K9 R4      ; if 0.000000 >= R4 then PC := 72
 48 [-]: JMP       72           ; PC := 72
 49 [-]: GETUPVAL  R4 U10       ; R4 := U10
 50 [-]: SUB       R4 R4 R1     ; R4 := R4 - R1
 51 [-]: SETUPVAL  R4 U10       ; U82 := R10
 52 [-]: GETUPVAL  R4 U10       ; R4 := U10
 53 [-]: LE        0 R4 K9      ; if R4 > 0.000000 then PC := 72
 54 [-]: JMP       72           ; PC := 72
 55 [-]: GETUPVAL  R4 U11       ; R4 := U11
 56 [-]: CALL      R4 1 2       ; R4 := R4()
 57 [-]: TEST      R4 0         ; if not R4 then PC := 68
 58 [-]: JMP       68           ; PC := 68
 59 [-]: GETGLOBAL R5 K10       ; R5 := 0x89326c93
 60 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x05909209]
 61 [-]: GETGLOBAL R7 K12       ; R7 := 0xa9ca934c
 62 [-]: GETUPVAL  R8 U12       ; R8 := U12
 63 [-]: GETUPVAL  R9 U13       ; R9 := U13
 64 [-]: GETUPVAL  R10 U14      ; R10 := U14
 65 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 66 [-]: SELF      R5 R4 K13    ; R6 := R4; R5 := R4[0xc71c2412]
 67 [-]: CALL      R5 2 1       ; R5(R6)
 68 [-]: GETUPVAL  R5 U15       ; R5 := U15
 69 [-]: GETUPVAL  R6 U16       ; R6 := U16
 70 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 71 [-]: SETUPVAL  R5 U10       ; U82 := R10
 72 [-]: GETUPVAL  R5 U17       ; R5 := U17
 73 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0xfaa69527]
 74 [-]: MOVE      R7 R1        ; R7 := R1
 75 [-]: CALL      R5 3 1       ; R5(R6,R7)
 76 [-]: SELF      R5 R0 K14    ; R6 := R0; R5 := R0[0xd9531187]
 77 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 78 [-]: TEST      R5 0         ; if not R5 then PC := 86
 79 [-]: JMP       86           ; PC := 86
 80 [-]: GETUPVAL  R5 U18       ; R5 := U18
 81 [-]: GETTABLE  R5 R5 K15    ; R5 := R5[0xd712b9db]
 82 [-]: CALL      R5 1 1       ; R5()
 83 [-]: SELF      R5 R0 K16    ; R6 := R0; R5 := R0[0xfe9dc265]
 84 [-]: CONST     R7 5         ; R7 := 5.000000
 85 [-]: CALL      R5 3 1       ; R5(R6,R7)
 86 [-]: GETGLOBAL R5 K17       ; R5 := 0xcbd666e1
 87 [-]: CONST     R6 0         ; R6 := 0.000000
 88 [-]: CALL      R5 2 1       ; R5(R6)
 89 [-]: JMP       7            ; PC := 7
 90 [-]: GETUPVAL  R5 U19       ; R5 := U19
 91 [-]: TEST      R5 0         ; if not R5 then PC := 97
 92 [-]: JMP       97           ; PC := 97
 93 [-]: GETUPVAL  R5 U17       ; R5 := U17
 94 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0x775c858b]
 95 [-]: GETUPVAL  R7 U19       ; R7 := U19
 96 [-]: CALL      R5 3 1       ; R5(R6,R7)
 97 [-]: GETGLOBAL R5 K19       ; R5 := 0x7b998233
 98 [-]: GETUPVAL  R6 U20       ; R6 := U20
 99 [-]: CALL      R5 2 2       ; R5 := R5(R6)
100 [-]: TEST      R5 1         ; if R5 then PC := 106
101 [-]: JMP       106          ; PC := 106
102 [-]: GETGLOBAL R5 K10       ; R5 := 0x89326c93
103 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x59c96e77]
104 [-]: GETUPVAL  R7 U20       ; R7 := U20
105 [-]: CALL      R5 3 1       ; R5(R6,R7)
106 [-]: GETGLOBAL R5 K21       ; R5 := _T
107 [-]: SETTABLE  R5 K22 K23   ; R5["EscalateHeatFissure"] := nil
108 [-]: GETGLOBAL R5 K19       ; R5 := 0x7b998233
109 [-]: GETUPVAL  R6 U21       ; R6 := U21
110 [-]: CALL      R5 2 2       ; R5 := R5(R6)
111 [-]: TEST      R5 1         ; if R5 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: GETUPVAL  R5 U21       ; R5 := U21
114 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5[0xa2880940]
115 [-]: CALL      R5 2 1       ; R5(R6)
116 [-]: GETUPVAL  R5 U22       ; R5 := U22
117 [-]: GETTABLE  R5 R5 K25    ; R5 := R5[0xdc3b2033]
118 [-]: CALL      R5 1 1       ; R5()
119 [-]: GETUPVAL  R5 U22       ; R5 := U22
120 [-]: GETTABLE  R5 R5 K26    ; R5 := R5[0xbd3ce95d]
121 [-]: CALL      R5 1 1       ; R5()
122 [-]: GETUPVAL  R5 U22       ; R5 := U22
123 [-]: GETTABLE  R5 R5 K27    ; R5 := R5[0xedf59000]
124 [-]: CALL      R5 1 1       ; R5()
125 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0[0xefe6cad1]
126 [-]: CALL      R5 2 2       ; R5 := R5(R6)
127 [-]: EQ        1 R5 K2      ; if R5 == 4.000000 then PC := 247
128 [-]: JMP       247          ; PC := 247
129 [-]: GETGLOBAL R5 K21       ; R5 := _T
130 [-]: GETTABLE  R5 R5 K28    ; R5 := R5[0x1a41a3c1]
131 [-]: LOADK     R6 K29       ; R6 := "HeatFissureBoostStatus"
132 [-]: CALL      R5 2 1       ; R5(R6)
133 [-]: GETGLOBAL R5 K19       ; R5 := 0x7b998233
134 [-]: GETUPVAL  R6 U23       ; R6 := U23
135 [-]: CALL      R5 2 2       ; R5 := R5(R6)
136 [-]: TEST      R5 1         ; if R5 then PC := 152
137 [-]: JMP       152          ; PC := 152
138 [-]: GETUPVAL  R5 U23       ; R5 := U23
139 [-]: SELF      R5 R5 K30    ; R6 := R5; R5 := R5[0xf5b3034c]
140 [-]: CALL      R5 2 1       ; R5(R6)
141 [-]: GETUPVAL  R5 U14       ; R5 := U14
142 [-]: SELF      R5 R5 K31    ; R6 := R5; R5 := R5[0xc9f6a7d7]
143 [-]: GETGLOBAL R7 K32       ; R7 := 0x0256a5a2
144 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
145 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
146 [-]: MOVE      R7 R5        ; R7 := R5
147 [-]: CALL      R6 2 2       ; R6 := R6(R7)
148 [-]: TEST      R6 1         ; if R6 then PC := 152
149 [-]: JMP       152          ; PC := 152
150 [-]: SELF      R6 R5 K33    ; R7 := R5; R6 := R5[0x383d2e7d]
151 [-]: CALL      R6 2 1       ; R6(R7)
152 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
153 [-]: GETUPVAL  R7 U24       ; R7 := U24
154 [-]: CALL      R6 2 2       ; R6 := R6(R7)
155 [-]: TEST      R6 1         ; if R6 then PC := 160
156 [-]: JMP       160          ; PC := 160
157 [-]: GETUPVAL  R6 U24       ; R6 := U24
158 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6[0xa2880940]
159 [-]: CALL      R6 2 1       ; R6(R7)
160 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
161 [-]: GETUPVAL  R7 U25       ; R7 := U25
162 [-]: CALL      R6 2 2       ; R6 := R6(R7)
163 [-]: TEST      R6 1         ; if R6 then PC := 175
164 [-]: JMP       175          ; PC := 175
165 [-]: GETUPVAL  R6 U25       ; R6 := U25
166 [-]: SELF      R6 R6 K34    ; R7 := R6; R6 := R6[0x2047cfe7]
167 [-]: CALL      R6 2 2       ; R6 := R6(R7)
168 [-]: TEST      R6 1         ; if R6 then PC := 175
169 [-]: JMP       175          ; PC := 175
170 [-]: GETUPVAL  R6 U25       ; R6 := U25
171 [-]: SELF      R6 R6 K35    ; R7 := R6; R6 := R6[0x6e9719eb]
172 [-]: CONST     R8 1         ; R8 := 1.000000
173 [-]: CONST     R9 20        ; R9 := 20.000000
174 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
175 [-]: GETGLOBAL R6 K21       ; R6 := _T
176 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["gHeatFissureHarvesters"]
177 [-]: SELF      R6 R6 K38    ; R7 := R6; R6 := R6[0x2be8e33c]
178 [-]: GETUPVAL  R8 U25       ; R8 := U25
179 [-]: CALL      R6 3 1       ; R6(R7,R8)
180 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
181 [-]: GETUPVAL  R7 U26       ; R7 := U26
182 [-]: CALL      R6 2 2       ; R6 := R6(R7)
183 [-]: TEST      R6 1         ; if R6 then PC := 188
184 [-]: JMP       188          ; PC := 188
185 [-]: GETUPVAL  R6 U26       ; R6 := U26
186 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x383d2e7d]
187 [-]: CALL      R6 2 1       ; R6(R7)
188 [-]: GETGLOBAL R6 K39       ; R6 := 0xc8802016
189 [-]: GETUPVAL  R7 U27       ; R7 := U27
190 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
191 [-]: JMP       201          ; PC := 201
192 [-]: GETUPVAL  R11 U28      ; R11 := U28
193 [-]: SELF      R11 R11 K40  ; R12 := R11; R11 := R11[0x06d4c9eb]
194 [-]: MOVE      R13 R10      ; R13 := R10
195 [-]: GETUPVAL  R14 U29      ; R14 := U29
196 [-]: LOADK     R15 K41      ; R15 := ""
197 [-]: CONST     R16 0        ; R16 := 0.000000
198 [-]: CONST     R17 5        ; R17 := 5.000000
199 [-]: LOADKB    R18 0 0      ; R18 := false
200 [-]: CALL      R11 8 1      ; R11(R12,R13,R14,R15,R16,R17,R18)
201 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 192; R8 := R9 end
202 [-]: JMP       192          ; PC := 192
203 [-]: GETUPVAL  R11 U30      ; R11 := U30
204 [-]: GETTABLE  R11 R11 K42  ; R11 := R11[0x9742b85b]
205 [-]: GETUPVAL  R12 U31      ; R12 := U31
206 [-]: GETGLOBAL R13 K43      ; R13 := 0x0469f296
207 [-]: LOADK     R14 K44      ; R14 := "HarvesterDestroyed"
208 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
209 [-]: CALL      R11 0 1      ; R11(R12,...)
210 [-]: GETGLOBAL R11 K19      ; R11 := 0x7b998233
211 [-]: GETUPVAL  R12 U25      ; R12 := U25
212 [-]: CALL      R11 2 2      ; R11 := R11(R12)
213 [-]: TEST      R11 1        ; if R11 then PC := 219
214 [-]: JMP       219          ; PC := 219
215 [-]: GETUPVAL  R11 U25      ; R11 := U25
216 [-]: SELF      R11 R11 K45  ; R12 := R11; R11 := R11[0x259b9467]
217 [-]: CONST     R13 3        ; R13 := 3.000000
218 [-]: CALL      R11 3 1      ; R11(R12,R13)
219 [-]: GETGLOBAL R11 K17      ; R11 := 0xcbd666e1
220 [-]: CONST     R12 3        ; R12 := 3.000000
221 [-]: CALL      R11 2 1      ; R11(R12)
222 [-]: GETGLOBAL R11 K19      ; R11 := 0x7b998233
223 [-]: GETUPVAL  R12 U25      ; R12 := U25
224 [-]: CALL      R11 2 2      ; R11 := R11(R12)
225 [-]: TEST      R11 1        ; if R11 then PC := 230
226 [-]: JMP       230          ; PC := 230
227 [-]: GETUPVAL  R11 U25      ; R11 := U25
228 [-]: SELF      R11 R11 K24  ; R12 := R11; R11 := R11[0xa2880940]
229 [-]: CALL      R11 2 1      ; R11(R12)
230 [-]: GETGLOBAL R11 K10      ; R11 := 0x89326c93
231 [-]: SELF      R11 R11 K46  ; R12 := R11; R11 := R11[0xf16592c8]
232 [-]: GETGLOBAL R13 K43      ; R13 := 0x0469f296
233 [-]: LOADK     R14 K47      ; R14 := "VenusBeacon"
234 [-]: CALL      R13 2 2      ; R13 := R13(R14)
235 [-]: GETUPVAL  R14 U32      ; R14 := U32
236 [-]: CONST     R15 0        ; R15 := 0.000000
237 [-]: CONST     R16 150      ; R16 := 150.000000
238 [-]: CALL      R11 6 2      ; R11 := R11(R12,R13,R14,R15,R16)
239 [-]: GETGLOBAL R12 K39      ; R12 := 0xc8802016
240 [-]: MOVE      R13 R11      ; R13 := R11
241 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
242 [-]: JMP       245          ; PC := 245
243 [-]: SELF      R17 R16 K24  ; R18 := R16; R17 := R16[0xa2880940]
244 [-]: CALL      R17 2 1      ; R17(R18)
245 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 243; R14 := R15 end
246 [-]: JMP       243          ; PC := 243
247 [-]: GETUPVAL  R17 U33      ; R17 := U33
248 [-]: SELF      R17 R17 K48  ; R18 := R17; R17 := R17[0x3d412e0d]
249 [-]: GETGLOBAL R19 K43      ; R19 := 0x0469f296
250 [-]: LOADK     R20 K49      ; R20 := "LeavingCB"
251 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
252 [-]: CALL      R17 0 1      ; R17(R18,...)
253 [-]: GETUPVAL  R17 U33      ; R17 := U33
254 [-]: SELF      R17 R17 K50  ; R18 := R17; R17 := R17[0x136a027d]
255 [-]: GETGLOBAL R19 K43      ; R19 := 0x0469f296
256 [-]: LOADK     R20 K51      ; R20 := "ReturningCB"
257 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
258 [-]: CALL      R17 0 1      ; R17(R18,...)
259 [-]: GETUPVAL  R17 U2       ; R17 := U2
260 [-]: SELF      R17 R17 K52  ; R18 := R17; R17 := R17[0x588ed000]
261 [-]: CALL      R17 2 1      ; R17(R18)
262 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 630
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x7d108ddb]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: SETUPVAL  R0 U0        ; U82 := R0
  5 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 634
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x7e8a976a]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: LOADKB    R2 1 0       ; R2 := true
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 638
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x7e8a976a]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: LOADKB    R2 0 0       ; R2 := false
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


