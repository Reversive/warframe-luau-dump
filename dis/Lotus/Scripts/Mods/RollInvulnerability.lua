; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x0469f296
  2 [-]: LOADK     R1 K1        ; R1 := "RollInvuln"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x2d0fad09
  5 [-]: LOADK     R2 K3        ; R2 := "EE.Interface.Utilities"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: CLOSURE   R2 0         ; R2 := closure(Function #1)
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: SETGLOBAL R2 K4        ; GetDescription := R2
 10 [-]: CLOSURE   R2 1         ; R2 := closure(Function #2)
 11 [-]: MOVE      R0 R0        ; R0 := R0
 12 [-]: SETGLOBAL R2 K5        ; ApplyUpgrade := R2
 13 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 8
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R1 0 2       ; R1 := {}
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x1142c7a8]
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0xa44f37b2
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x5bced4c4
  6 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0xac1b386a]
  7 [-]: GETGLOBAL R5 K2        ; R5 := 0xa44f37b2
  8 [-]: LEN       R5 R5        ; R5 := # R5
  9 [-]: MOVE      R6 R0        ; R6 := R0
 10 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 11 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 12 [-]: CONST     R4 1         ; R4 := 1.000000
 13 [-]: LOADKB    R5 0 0       ; R5 := false
 14 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 15 [-]: SETTABLE  R1 K0 R2     ; R1["duration"] := R2
 16 [-]: GETGLOBAL R2 K6        ; R2 := 0x5527e443
 17 [-]: GETGLOBAL R3 K3        ; R3 := 0x5bced4c4
 18 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0xac1b386a]
 19 [-]: GETGLOBAL R4 K6        ; R4 := 0x5527e443
 20 [-]: LEN       R4 R4        ; R4 := # R4
 21 [-]: MOVE      R5 R0        ; R5 := R0
 22 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 23 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 24 [-]: SETTABLE  R1 K5 R2     ; R1["cooldown"] := R2
 25 [-]: GETGLOBAL R2 K7        ; R2 := cjson
 26 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0xb139d7bc]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 29 [-]: RETURN    R2 0         ; return R2,...
 30 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 17
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x89326c93
  2 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0x18d05d30]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 1         ; if R5 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0[0xf80fae85]
  7 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  8 [-]: TEST      R5 1         ; if R5 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 12 [-]: GETGLOBAL R6 K4        ; R6 := _T
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["rollInvuln"]
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 0         ; if not R5 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R5 K4        ; R5 := _T
 18 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 19 [-]: SETTABLE  R5 K5 R6     ; R5["rollInvuln"] := R6
 20 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0[0x388577d5]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 23 [-]: GETGLOBAL R7 K4        ; R7 := _T
 24 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["rollInvuln"]
 25 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 26 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 27 [-]: TEST      R6 1         ; if R6 then PC := 46
 28 [-]: JMP       46           ; PC := 46
 29 [-]: GETGLOBAL R6 K7        ; R6 := 0x55156ff7
 30 [-]: CALL      R6 1 2       ; R6 := R6()
 31 [-]: GETGLOBAL R7 K4        ; R7 := _T
 32 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["rollInvuln"]
 33 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 34 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 35 [-]: GETGLOBAL R7 K8        ; R7 := 0x5527e443
 36 [-]: GETGLOBAL R8 K9        ; R8 := 0x5bced4c4
 37 [-]: GETTABLE  R8 R8 K10    ; R8 := R8[0xac1b386a]
 38 [-]: GETGLOBAL R9 K8        ; R9 := 0x5527e443
 39 [-]: LEN       R9 R9        ; R9 := # R9
 40 [-]: MOVE      R10 R2       ; R10 := R2
 41 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 42 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 43 [-]: LT        0 R6 R7      ; if R6 >= R7 then PC := 46
 44 [-]: JMP       46           ; PC := 46
 45 [-]: RETURN    R0 1         ; return 
 46 [-]: GETGLOBAL R6 K4        ; R6 := _T
 47 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["rollInvuln"]
 48 [-]: GETGLOBAL R7 K7        ; R7 := 0x55156ff7
 49 [-]: CALL      R7 1 2       ; R7 := R7()
 50 [-]: SETTABLE  R6 R5 R7     ; R6[R5] := R7
 51 [-]: GETGLOBAL R6 K11       ; R6 := 0xa44f37b2
 52 [-]: GETGLOBAL R7 K9        ; R7 := 0x5bced4c4
 53 [-]: GETTABLE  R7 R7 K10    ; R7 := R7[0xac1b386a]
 54 [-]: GETGLOBAL R8 K11       ; R8 := 0xa44f37b2
 55 [-]: LEN       R8 R8        ; R8 := # R8
 56 [-]: MOVE      R9 R2        ; R9 := R2
 57 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 58 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 59 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0[0x1ac1655c]
 60 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 61 [-]: SELF      R8 R7 K13    ; R9 := R7; R8 := R7[0x4a9da24c]
 62 [-]: MOVE      R10 R6       ; R10 := R6
 63 [-]: MOVE      R11 R6       ; R11 := R6
 64 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 65 [-]: SELF      R8 R7 K14    ; R9 := R7; R8 := R7[0x47cb4a02]
 66 [-]: CALL      R8 2 1       ; R8(R9)
 67 [-]: SELF      R8 R7 K15    ; R9 := R7; R8 := R7[0x857557de]
 68 [-]: GETUPVAL  R10 U0       ; R10 := U0
 69 [-]: CALL      R8 3 1       ; R8(R9,R10)
 70 [-]: LT        0 K16 R6     ; if 0.000000 >= R6 then PC := 79
 71 [-]: JMP       79           ; PC := 79
 72 [-]: GETGLOBAL R8 K17       ; R8 := 0x67652851
 73 [-]: CALL      R8 1 2       ; R8 := R8()
 74 [-]: SUB       R6 R6 R8     ; R6 := R6 - R8
 75 [-]: GETGLOBAL R8 K18       ; R8 := 0xcbd666e1
 76 [-]: CONST     R9 0         ; R9 := 0.000000
 77 [-]: CALL      R8 2 1       ; R8(R9)
 78 [-]: JMP       70           ; PC := 70
 79 [-]: SELF      R8 R7 K19    ; R9 := R7; R8 := R7[0x571105c9]
 80 [-]: GETUPVAL  R10 U0       ; R10 := U0
 81 [-]: CALL      R8 3 1       ; R8(R9,R10)
 82 [-]: GETGLOBAL R8 K4        ; R8 := _T
 83 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["rollInvuln"]
 84 [-]: GETGLOBAL R9 K7        ; R9 := 0x55156ff7
 85 [-]: CALL      R9 1 2       ; R9 := R9()
 86 [-]: SETTABLE  R8 R5 R9     ; R8[R5] := R9
 87 [-]: GETGLOBAL R8 K20       ; R8 := 0x6c97a788
 88 [-]: GETTABLE  R8 R8 K21    ; R8 := R8[0x608bc054]
 89 [-]: CALL      R8 1 2       ; R8 := R8()
 90 [-]: SETTABLE  R8 K22 R0    ; R8["instigator"] := R0
 91 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 92 [-]: MOVE      R10 R0       ; R10 := R0
 93 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 94 [-]: SETTABLE  R8 K23 R9    ; R8["affected"] := R9
 95 [-]: SETTABLE  R8 K24 K25   ; R8["buffType"] := 1.000000
 96 [-]: SETTABLE  R8 K26 R4    ; R8["abilityType"] := R4
 97 [-]: GETGLOBAL R9 K8        ; R9 := 0x5527e443
 98 [-]: GETGLOBAL R10 K9       ; R10 := 0x5bced4c4
 99 [-]: GETTABLE  R10 R10 K10  ; R10 := R10[0xac1b386a]
100 [-]: GETGLOBAL R11 K8       ; R11 := 0x5527e443
101 [-]: LEN       R11 R11      ; R11 := # R11
102 [-]: MOVE      R12 R2       ; R12 := R2
103 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
104 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
105 [-]: SETTABLE  R8 K27 R9    ; R8["buffData"] := R9
106 [-]: SETTABLE  R8 K28 K29   ; R8["isDebuff"] := true
107 [-]: SELF      R9 R0 K30    ; R10 := R0; R9 := R0[0x37e45fb5]
108 [-]: MOVE      R11 R8       ; R11 := R8
109 [-]: LOADKB    R12 1 0      ; R12 := true
110 [-]: LOADKB    R13 0 0      ; R13 := false
111 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
112 [-]: RETURN    R0 1         ; return 


