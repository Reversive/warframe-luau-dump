; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  16

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x0469f296
  2 [-]: LOADK     R1 K1        ; R1 := "WpInvuln"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0xb009bbc6
  5 [-]: LOADK     R2 K3        ; R2 := "/Lotus/Fx/Gameplay/CephalonTear/CephalonTearCorrupted"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0xb009bbc6
  8 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Fx/Gameplay/CephalonTear/CephalonTearCorruptedProj"
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0xb009bbc6
 11 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Sounds/Gameplay/CephalonWeave/CephalonTearGrenadeCountdownSeq"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K6        ; R4 := 0x7ed0a956
 14 [-]: LOADK     R5 K7        ; R5 := "/Lotus/StoreItems/Types/Items/SyndicateDogTags/NoraGlassmakerDogTag"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: LOADK     R5 K8        ; R5 := 0.600000
 17 [-]: CONST     R6 600       ; R6 := 600.000000
 18 [-]: CONST     R7 50        ; R7 := 50.000000
 19 [-]: LOADK     R8 K9        ; R8 := 1.010000
 20 [-]: LOADKB    R9 1 0       ; R9 := true
 21 [-]: CONST     R10 25       ; R10 := 25.000000
 22 [-]: GETGLOBAL R11 K2       ; R11 := 0xb009bbc6
 23 [-]: LOADK     R12 K10      ; R12 := "/Lotus/Fx/Gameplay/CephalonTear/CephalonTearEnemyExplosion"
 24 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 25 [-]: CONST     R12 3        ; R12 := 3.000000
 26 [-]: GETGLOBAL R13 K6       ; R13 := 0x7ed0a956
 27 [-]: LOADK     R14 K11      ; R14 := "/Lotus/Types/Game/DestructibleComponents"
 28 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 29 [-]: CLOSURE   R14 0        ; R14 := closure(Function #1)
 30 [-]: MOVE      R0 R0        ; R0 := R0
 31 [-]: MOVE      R0 R1        ; R0 := R1
 32 [-]: CLOSURE   R15 1        ; R15 := closure(Function #2)
 33 [-]: MOVE      R0 R14       ; R0 := R14
 34 [-]: SETGLOBAL R15 K12      ; WeakpointsChanged := R15
 35 [-]: CLOSURE   R15 2        ; R15 := closure(Function #3)
 36 [-]: MOVE      R0 R1        ; R0 := R1
 37 [-]: MOVE      R0 R3        ; R0 := R3
 38 [-]: MOVE      R0 R12       ; R0 := R12
 39 [-]: MOVE      R0 R2        ; R0 := R2
 40 [-]: MOVE      R0 R6        ; R0 := R6
 41 [-]: MOVE      R0 R7        ; R0 := R7
 42 [-]: MOVE      R0 R9        ; R0 := R9
 43 [-]: MOVE      R0 R10       ; R0 := R10
 44 [-]: MOVE      R0 R11       ; R0 := R11
 45 [-]: SETGLOBAL R15 K13      ; PostDeathTickingBomb := R15
 46 [-]: CLOSURE   R15 3        ; R15 := closure(Function #4)
 47 [-]: MOVE      R0 R4        ; R0 := R4
 48 [-]: MOVE      R0 R5        ; R0 := R5
 49 [-]: SETGLOBAL R15 K14      ; OnKilled := R15
 50 [-]: CLOSURE   R15 4        ; R15 := closure(Function #5)
 51 [-]: MOVE      R0 R6        ; R0 := R6
 52 [-]: MOVE      R0 R7        ; R0 := R7
 53 [-]: MOVE      R0 R8        ; R0 := R8
 54 [-]: SETGLOBAL R15 K15      ; OnDamaged := R15
 55 [-]: CLOSURE   R15 5        ; R15 := closure(Function #6)
 56 [-]: MOVE      R0 R6        ; R0 := R6
 57 [-]: MOVE      R0 R7        ; R0 := R7
 58 [-]: SETGLOBAL R15 K16      ; ProjectorControlGlowByDamage := R15
 59 [-]: CLOSURE   R15 6        ; R15 := closure(Function #7)
 60 [-]: SETGLOBAL R15 K17      ; _AddGlassPortsChild := R15
 61 [-]: CLOSURE   R15 7        ; R15 := closure(Function #8)
 62 [-]: SETGLOBAL R15 K18      ; AddGlassPorts := R15
 63 [-]: CLOSURE   R15 8        ; R15 := closure(Function #9)
 64 [-]: MOVE      R0 R14       ; R0 := R14
 65 [-]: MOVE      R0 R13       ; R0 := R13
 66 [-]: SETGLOBAL R15 K19      ; HitproxyCleaner := R15
 67 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 25
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0xf2deaf69]
  7 [-]: GETGLOBAL R4 K2        ; R4 := gAvatarType
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x2047cfe7]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x1ac1655c]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x89326c93
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x18d05d30]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 0         ; if not R3 then PC := 84
 22 [-]: JMP       84           ; PC := 84
 23 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde9ee3a4]
 24 [-]: CONST     R5 19        ; R5 := 19.000000
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 27 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde9ee3a4]
 28 [-]: CONST     R5 16        ; R5 := 16.000000
 29 [-]: GETUPVAL  R6 U0        ; R6 := U0
 30 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 31 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde9ee3a4]
 32 [-]: CONST     R5 17        ; R5 := 17.000000
 33 [-]: GETUPVAL  R6 U0        ; R6 := U0
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde9ee3a4]
 36 [-]: CONST     R5 18        ; R5 := 18.000000
 37 [-]: GETUPVAL  R6 U0        ; R6 := U0
 38 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 39 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0f68c2b7]
 40 [-]: CONST     R5 6         ; R5 := 6.000000
 41 [-]: GETUPVAL  R6 U0        ; R6 := U0
 42 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 43 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0f68c2b7]
 44 [-]: CONST     R5 0         ; R5 := 0.000000
 45 [-]: GETUPVAL  R6 U0        ; R6 := U0
 46 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 47 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0f68c2b7]
 48 [-]: CONST     R5 3         ; R5 := 3.000000
 49 [-]: GETUPVAL  R6 U0        ; R6 := U0
 50 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 51 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0f68c2b7]
 52 [-]: CONST     R5 4         ; R5 := 4.000000
 53 [-]: GETUPVAL  R6 U0        ; R6 := U0
 54 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 55 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0f68c2b7]
 56 [-]: CONST     R5 5         ; R5 := 5.000000
 57 [-]: GETUPVAL  R6 U0        ; R6 := U0
 58 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 59 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0x1ac1655c]
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x8e3e343e]
 62 [-]: GETUPVAL  R5 U0        ; R5 := U0
 63 [-]: CALL      R3 3 1       ; R3(R4,R5)
 64 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0x1ac1655c]
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x9326ca4b]
 67 [-]: GETUPVAL  R5 U0        ; R5 := U0
 68 [-]: CALL      R3 3 1       ; R3(R4,R5)
 69 [-]: GETGLOBAL R3 K8        ; R3 := 0x34291f5c
 70 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0x35c16153]
 71 [-]: CALL      R3 1 2       ; R3 := R3()
 72 [-]: SELF      R4 R3 K13    ; R5 := R3; R4 := R3[0x1586e35e]
 73 [-]: CONST     R6 0         ; R6 := 0.000000
 74 [-]: CONST     R7 1         ; R7 := 1.000000
 75 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 76 [-]: SELF      R4 R3 K14    ; R5 := R3; R4 := R3[0xfc0e440a]
 77 [-]: CONST     R6 16        ; R6 := 16.000000
 78 [-]: LOADKB    R7 1 0       ; R7 := true
 79 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 80 [-]: SETTABLE  R3 K15 K16   ; R3["baseAmount"] := 0.000000
 81 [-]: SELF      R4 R0 K17    ; R5 := R0; R4 := R0[0x479483bb]
 82 [-]: MOVE      R6 R3        ; R6 := R3
 83 [-]: CALL      R4 3 1       ; R4(R5,R6)
 84 [-]: LE        0 K18 R1     ; if 1.000000 > R1 then PC := 158
 85 [-]: JMP       158          ; PC := 158
 86 [-]: GETGLOBAL R4 K19       ; R4 := 0x5bced4c4
 87 [-]: GETTABLE  R4 R4 K20    ; R4 := R4[0xb62ecfe0]
 88 [-]: CONST     R5 0         ; R5 := 0.000000
 89 [-]: GETGLOBAL R6 K21       ; R6 := 0x445f4e00
 90 [-]: MUL       R6 R6 R1     ; R6 := R6 * R1
 91 [-]: SUB       R6 K18 R6    ; R6 := 1.000000 - R6
 92 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 93 [-]: SELF      R5 R2 K22    ; R6 := R2; R5 := R2[0xa383de31]
 94 [-]: GETUPVAL  R7 U0        ; R7 := U0
 95 [-]: CONST     R8 25        ; R8 := 25.000000
 96 [-]: CONST     R9 6         ; R9 := 6.000000
 97 [-]: MOVE      R10 R4       ; R10 := R4
 98 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 99 [-]: SELF      R5 R2 K23    ; R6 := R2; R5 := R2[0x4cb29d1c]
100 [-]: GETUPVAL  R7 U0        ; R7 := U0
101 [-]: CONST     R8 25        ; R8 := 25.000000
102 [-]: CONST     R9 6         ; R9 := 6.000000
103 [-]: MOVE      R10 R4       ; R10 := R4
104 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
105 [-]: GETGLOBAL R5 K24       ; R5 := 0xcbd666e1
106 [-]: CONST     R6 0         ; R6 := 0.000000
107 [-]: CALL      R5 2 1       ; R5(R6)
108 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
109 [-]: MOVE      R6 R0        ; R6 := R0
110 [-]: CALL      R5 2 2       ; R5 := R5(R6)
111 [-]: TEST      R5 1         ; if R5 then PC := 182
112 [-]: JMP       182          ; PC := 182
113 [-]: GETGLOBAL R5 K5        ; R5 := 0x89326c93
114 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x18d05d30]
115 [-]: CALL      R5 2 2       ; R5 := R5(R6)
116 [-]: TEST      R5 0         ; if not R5 then PC := 182
117 [-]: JMP       182          ; PC := 182
118 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0[0x1ac1655c]
119 [-]: CALL      R5 2 2       ; R5 := R5(R6)
120 [-]: MOVE      R2 R5        ; R2 := R5
121 [-]: SELF      R5 R2 K25    ; R6 := R2; R5 := R2[0xb8b60bd3]
122 [-]: CONST     R7 19        ; R7 := 19.000000
123 [-]: GETUPVAL  R8 U0        ; R8 := U0
124 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
125 [-]: SELF      R5 R2 K25    ; R6 := R2; R5 := R2[0xb8b60bd3]
126 [-]: CONST     R7 16        ; R7 := 16.000000
127 [-]: GETUPVAL  R8 U0        ; R8 := U0
128 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
129 [-]: SELF      R5 R2 K25    ; R6 := R2; R5 := R2[0xb8b60bd3]
130 [-]: CONST     R7 17        ; R7 := 17.000000
131 [-]: GETUPVAL  R8 U0        ; R8 := U0
132 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
133 [-]: SELF      R5 R2 K25    ; R6 := R2; R5 := R2[0xb8b60bd3]
134 [-]: CONST     R7 18        ; R7 := 18.000000
135 [-]: GETUPVAL  R8 U0        ; R8 := U0
136 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
137 [-]: SELF      R5 R2 K26    ; R6 := R2; R5 := R2[0xaa0faa2c]
138 [-]: CONST     R7 6         ; R7 := 6.000000
139 [-]: GETUPVAL  R8 U0        ; R8 := U0
140 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
141 [-]: SELF      R5 R2 K26    ; R6 := R2; R5 := R2[0xaa0faa2c]
142 [-]: CONST     R7 0         ; R7 := 0.000000
143 [-]: GETUPVAL  R8 U0        ; R8 := U0
144 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
145 [-]: SELF      R5 R2 K26    ; R6 := R2; R5 := R2[0xaa0faa2c]
146 [-]: CONST     R7 3         ; R7 := 3.000000
147 [-]: GETUPVAL  R8 U0        ; R8 := U0
148 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
149 [-]: SELF      R5 R2 K26    ; R6 := R2; R5 := R2[0xaa0faa2c]
150 [-]: CONST     R7 4         ; R7 := 4.000000
151 [-]: GETUPVAL  R8 U0        ; R8 := U0
152 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
153 [-]: SELF      R5 R2 K26    ; R6 := R2; R5 := R2[0xaa0faa2c]
154 [-]: CONST     R7 5         ; R7 := 5.000000
155 [-]: GETUPVAL  R8 U0        ; R8 := U0
156 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
157 [-]: JMP       182          ; PC := 182
158 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
159 [-]: GETGLOBAL R6 K27       ; R6 := _T
160 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["CephalonTearDamageFreezeTable"]
161 [-]: CALL      R5 2 2       ; R5 := R5(R6)
162 [-]: TEST      R5 0         ; if not R5 then PC := 167
163 [-]: JMP       167          ; PC := 167
164 [-]: GETGLOBAL R5 K27       ; R5 := _T
165 [-]: NEWTABLE  R6 0 0       ; R6 := {}
166 [-]: SETTABLE  R5 K28 R6    ; R5["CephalonTearDamageFreezeTable"] := R6
167 [-]: GETGLOBAL R5 K27       ; R5 := _T
168 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["CephalonTearDamageFreezeTable"]
169 [-]: SELF      R6 R0 K29    ; R7 := R0; R6 := R0[0x388577d5]
170 [-]: CALL      R6 2 2       ; R6 := R6(R7)
171 [-]: SETTABLE  R5 R6 K30    ; R5[R6] := true
172 [-]: SELF      R5 R0 K31    ; R6 := R0; R5 := R0[0xc9f6a7d7]
173 [-]: GETUPVAL  R7 U1        ; R7 := U1
174 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
175 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
176 [-]: MOVE      R7 R5        ; R7 := R5
177 [-]: CALL      R6 2 2       ; R6 := R6(R7)
178 [-]: TEST      R6 1         ; if R6 then PC := 182
179 [-]: JMP       182          ; PC := 182
180 [-]: SELF      R6 R5 K32    ; R7 := R5; R6 := R5[0xa2880940]
181 [-]: CALL      R6 2 1       ; R6(R7)
182 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 88
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 92
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x0469f296
  2 [-]: LOADK     R2 K1        ; R2 := "PostDeathTickingBomb"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0xf2deaf69]
  5 [-]: GETGLOBAL R4 K3        ; R4 := gRagdollType
  6 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  7 [-]: TEST      R2 0         ; if not R2 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x9d668f53]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: LOADK     R5 K5        ; R5 := 0.001000
 12 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 13 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0x3334bcd0]
 14 [-]: CONST     R4 800       ; R4 := 800.000000
 15 [-]: CONST     R5 800       ; R5 := 800.000000
 16 [-]: LOADKB    R6 1 0       ; R6 := true
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0[0x3cae8ab0]
 19 [-]: LOADKB    R4 1 0       ; R4 := true
 20 [-]: CALL      R2 3 1       ; R2(R3,R4)
 21 [-]: SELF      R2 R0 K8     ; R3 := R0; R2 := R0[0x5163741e]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: MOVE      R0 R2        ; R0 := R2
 24 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 0         ; if not R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETGLOBAL R2 K10       ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["CephalonTearDamageCounterTable"]
 32 [-]: SELF      R3 R0 K12    ; R4 := R0; R3 := R0[0x388577d5]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 35 [-]: EQ        1 R2 K13     ; if R2 == nil then PC := 226
 36 [-]: JMP       226          ; PC := 226
 37 [-]: LT        0 K14 R2     ; if 0.000000 >= R2 then PC := 226
 38 [-]: JMP       226          ; PC := 226
 39 [-]: LOADNIL   R3 R3        ; R3 := nil
 40 [-]: GETGLOBAL R4 K10       ; R4 := _T
 41 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["CephalonTearDamageFreezeTable"]
 42 [-]: EQ        1 R4 K13     ; if R4 == nil then PC := 60
 43 [-]: JMP       60           ; PC := 60
 44 [-]: GETGLOBAL R4 K10       ; R4 := _T
 45 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["CephalonTearDamageFreezeTable"]
 46 [-]: SELF      R5 R0 K12    ; R6 := R0; R5 := R0[0x388577d5]
 47 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 48 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 49 [-]: TEST      R4 0         ; if not R4 then PC := 60
 50 [-]: JMP       60           ; PC := 60
 51 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x47901f07]
 52 [-]: GETUPVAL  R6 U0        ; R6 := U0
 53 [-]: GETGLOBAL R7 K17       ; R7 := EMPTY_SYMBOL
 54 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 55 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x47901f07]
 56 [-]: GETUPVAL  R6 U1        ; R6 := U1
 57 [-]: GETGLOBAL R7 K17       ; R7 := EMPTY_SYMBOL
 58 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 59 [-]: MOVE      R3 R4        ; R3 := R4
 60 [-]: CONST     R4 0         ; R4 := 0.000000
 61 [-]: GETGLOBAL R5 K0        ; R5 := 0x0469f296
 62 [-]: LOADK     R6 K18       ; R6 := "BaseColor"
 63 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 64 [-]: MOVE      R6 R0        ; R6 := R0
 65 [-]: LOADNIL   R7 R7        ; R7 := nil
 66 [-]: GETUPVAL  R8 U2        ; R8 := U2
 67 [-]: LT        0 R4 R8      ; if R4 >= R8 then PC := 132
 68 [-]: JMP       132          ; PC := 132
 69 [-]: GETGLOBAL R8 K19       ; R8 := 0xcbd666e1
 70 [-]: CONST     R9 0         ; R9 := 0.000000
 71 [-]: CALL      R8 2 1       ; R8(R9)
 72 [-]: GETGLOBAL R8 K9        ; R8 := 0x7b998233
 73 [-]: MOVE      R9 R6        ; R9 := R6
 74 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 75 [-]: TEST      R8 0         ; if not R8 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: RETURN    R0 1         ; return 
 78 [-]: JMP       106          ; PC := 106
 79 [-]: SELF      R8 R6 K2     ; R9 := R6; R8 := R6[0xf2deaf69]
 80 [-]: GETGLOBAL R10 K20      ; R10 := gLotusNpcAvatarType
 81 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 82 [-]: TEST      R8 0         ; if not R8 then PC := 106
 83 [-]: JMP       106          ; PC := 106
 84 [-]: GETGLOBAL R8 K9        ; R8 := 0x7b998233
 85 [-]: SELF      R9 R6 K21    ; R10 := R6; R9 := R6[0xb3ed31dd]
 86 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 87 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 88 [-]: TEST      R8 1         ; if R8 then PC := 106
 89 [-]: JMP       106          ; PC := 106
 90 [-]: SELF      R8 R6 K21    ; R9 := R6; R8 := R6[0xb3ed31dd]
 91 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 92 [-]: MOVE      R6 R8        ; R6 := R8
 93 [-]: SELF      R8 R6 K4     ; R9 := R6; R8 := R6[0x9d668f53]
 94 [-]: MOVE      R10 R1       ; R10 := R1
 95 [-]: LOADK     R11 K5       ; R11 := 0.001000
 96 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 97 [-]: SELF      R8 R6 K6     ; R9 := R6; R8 := R6[0x3334bcd0]
 98 [-]: CONST     R10 800      ; R10 := 800.000000
 99 [-]: CONST     R11 800      ; R11 := 800.000000
100 [-]: LOADKB    R12 1 0      ; R12 := true
101 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
102 [-]: SELF      R8 R6 K7     ; R9 := R6; R8 := R6[0x3cae8ab0]
103 [-]: LOADKB    R10 1 0      ; R10 := true
104 [-]: CALL      R8 3 1       ; R8(R9,R10)
105 [-]: LOADNIL   R7 R7        ; R7 := nil
106 [-]: GETGLOBAL R8 K22       ; R8 := 0x67652851
107 [-]: CALL      R8 1 2       ; R8 := R8()
108 [-]: ADD       R4 R4 R8     ; R4 := R4 + R8
109 [-]: GETUPVAL  R8 U2        ; R8 := U2
110 [-]: DIV       R8 R4 R8     ; R8 := R4 / R8
111 [-]: GETGLOBAL R9 K9        ; R9 := 0x7b998233
112 [-]: MOVE      R10 R7       ; R10 := R7
113 [-]: CALL      R9 2 2       ; R9 := R9(R10)
114 [-]: TEST      R9 0         ; if not R9 then PC := 121
115 [-]: JMP       121          ; PC := 121
116 [-]: SELF      R9 R6 K23    ; R10 := R6; R9 := R6[0xc9f6a7d7]
117 [-]: GETUPVAL  R11 U3       ; R11 := U3
118 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
119 [-]: MOVE      R7 R9        ; R7 := R9
120 [-]: JMP       66           ; PC := 66
121 [-]: MUL       R9 R8 R8     ; R9 := R8 * R8
122 [-]: MUL       R9 R9 R8     ; R9 := R9 * R8
123 [-]: MUL       R9 R9 K24    ; R9 := R9 * 8.000000
124 [-]: SELF      R10 R7 K25   ; R11 := R7; R10 := R7[0x986d2ab8]
125 [-]: MOVE      R12 R5       ; R12 := R5
126 [-]: MOVE      R13 R9       ; R13 := R9
127 [-]: MUL       R14 R9 K26   ; R14 := R9 * 0.150000
128 [-]: MUL       R15 R9 K27   ; R15 := R9 * 0.020000
129 [-]: CONST     R16 1        ; R16 := 1.000000
130 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
131 [-]: JMP       66           ; PC := 66
132 [-]: GETGLOBAL R10 K28      ; R10 := 0x5bced4c4
133 [-]: GETTABLE  R10 R10 K29  ; R10 := R10[0xac1b386a]
134 [-]: GETUPVAL  R11 U4       ; R11 := U4
135 [-]: GETUPVAL  R12 U5       ; R12 := U5
136 [-]: MUL       R12 R12 R2   ; R12 := R12 * R2
137 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
138 [-]: GETUPVAL  R11 U6       ; R11 := U6
139 [-]: TEST      R11 0        ; if not R11 then PC := 165
140 [-]: JMP       165          ; PC := 165
141 [-]: GETGLOBAL R11 K30      ; R11 := 0xbe190284
142 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11[0xef893aec]
143 [-]: CALL      R11 2 2      ; R11 := R11(R12)
144 [-]: SELF      R12 R0 K32   ; R13 := R0; R12 := R0[0xfa9e477f]
145 [-]: CALL      R12 2 2      ; R12 := R12(R13)
146 [-]: GETGLOBAL R13 K9       ; R13 := 0x7b998233
147 [-]: MOVE      R14 R11      ; R14 := R11
148 [-]: CALL      R13 2 2      ; R13 := R13(R14)
149 [-]: TEST      R13 1        ; if R13 then PC := 165
150 [-]: JMP       165          ; PC := 165
151 [-]: GETGLOBAL R13 K9       ; R13 := 0x7b998233
152 [-]: MOVE      R14 R12      ; R14 := R12
153 [-]: CALL      R13 2 2      ; R13 := R13(R14)
154 [-]: TEST      R13 1        ; if R13 then PC := 165
155 [-]: JMP       165          ; PC := 165
156 [-]: GETGLOBAL R13 K30      ; R13 := 0xbe190284
157 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13[0x0d10e037]
158 [-]: MOVE      R15 R10      ; R15 := R10
159 [-]: CONST     R16 0        ; R16 := 0.000000
160 [-]: GETTABLE  R17 R11 K35  ; R17 := R11["difficulty"]
161 [-]: SELF      R18 R12 K36  ; R19 := R12; R18 := R12[0xc45c884b]
162 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
163 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
164 [-]: MOVE      R10 R13      ; R10 := R13
165 [-]: GETGLOBAL R13 K34      ; R13 := 0x34291f5c
166 [-]: GETTABLE  R13 R13 K37  ; R13 := R13[0x5cb2adf8]
167 [-]: CALL      R13 1 2      ; R13 := R13()
168 [-]: SETTABLE  R13 K38 R10  ; R13["baseAmount"] := R10
169 [-]: GETUPVAL  R14 U7       ; R14 := U7
170 [-]: SETTABLE  R13 K39 R14  ; R13["radius"] := R14
171 [-]: SETTABLE  R13 K40 K41  ; R13["staticCoverOnly"] := true
172 [-]: SETTABLE  R13 K42 K43  ; R13["hostAuthoritative"] := false
173 [-]: SELF      R14 R13 K44  ; R15 := R13; R14 := R13[0x618938f0]
174 [-]: SELF      R16 R0 K45   ; R17 := R0; R16 := R0[0xf6ebd926]
175 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
176 [-]: CALL      R14 0 1      ; R14(R15,...)
177 [-]: SELF      R14 R13 K46  ; R15 := R13; R14 := R13[0x1586e35e]
178 [-]: CONST     R16 2        ; R16 := 2.000000
179 [-]: CONST     R17 1        ; R17 := 1.000000
180 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
181 [-]: SELF      R14 R13 K47  ; R15 := R13; R14 := R13[0xcdb40c41]
182 [-]: CONST     R16 200      ; R16 := 200.000000
183 [-]: CALL      R14 3 1      ; R14(R15,R16)
184 [-]: GETGLOBAL R14 K48      ; R14 := 0x89326c93
185 [-]: SELF      R14 R14 K49  ; R15 := R14; R14 := R14[0x97dcff30]
186 [-]: MOVE      R16 R13      ; R16 := R13
187 [-]: CALL      R14 3 1      ; R14(R15,R16)
188 [-]: GETGLOBAL R14 K9       ; R14 := 0x7b998233
189 [-]: MOVE      R15 R0       ; R15 := R0
190 [-]: CALL      R14 2 2      ; R14 := R14(R15)
191 [-]: TEST      R14 1        ; if R14 then PC := 207
192 [-]: JMP       207          ; PC := 207
193 [-]: GETGLOBAL R14 K48      ; R14 := 0x89326c93
194 [-]: SELF      R14 R14 K50  ; R15 := R14; R14 := R14[0x05909209]
195 [-]: GETUPVAL  R16 U8       ; R16 := U8
196 [-]: SELF      R17 R0 K51   ; R18 := R0; R17 := R0[0xd1586535]
197 [-]: CALL      R17 2 2      ; R17 := R17(R18)
198 [-]: GETGLOBAL R18 K52      ; R18 := 0xa421af95
199 [-]: CONST     R19 0        ; R19 := 0.000000
200 [-]: CONST     R20 0        ; R20 := 0.500000
201 [-]: CONST     R21 0        ; R21 := 0.000000
202 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
203 [-]: ADD       R17 R17 R18  ; R17 := R17 + R18
204 [-]: SELF      R18 R0 K53   ; R19 := R0; R18 := R0[0xcb3851b8]
205 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
206 [-]: CALL      R14 0 1      ; R14(R15,...)
207 [-]: GETGLOBAL R14 K9       ; R14 := 0x7b998233
208 [-]: MOVE      R15 R3       ; R15 := R3
209 [-]: CALL      R14 2 2      ; R14 := R14(R15)
210 [-]: TEST      R14 1        ; if R14 then PC := 214
211 [-]: JMP       214          ; PC := 214
212 [-]: SELF      R14 R3 K54   ; R15 := R3; R14 := R3[0xa2880940]
213 [-]: CALL      R14 2 1      ; R14(R15)
214 [-]: GETGLOBAL R14 K9       ; R14 := 0x7b998233
215 [-]: MOVE      R15 R7       ; R15 := R7
216 [-]: CALL      R14 2 2      ; R14 := R14(R15)
217 [-]: TEST      R14 1        ; if R14 then PC := 226
218 [-]: JMP       226          ; PC := 226
219 [-]: SELF      R14 R7 K25   ; R15 := R7; R14 := R7[0x986d2ab8]
220 [-]: MOVE      R16 R5       ; R16 := R5
221 [-]: CONST     R17 0        ; R17 := 0.000000
222 [-]: CONST     R18 0        ; R18 := 0.000000
223 [-]: CONST     R19 0        ; R19 := 0.000000
224 [-]: CONST     R20 1        ; R20 := 1.000000
225 [-]: CALL      R14 7 1      ; R14(R15,R16,R17,R18,R19,R20)
226 [-]: GETGLOBAL R14 K10      ; R14 := _T
227 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["CephalonTearDamageCounterTable"]
228 [-]: SELF      R15 R0 K12   ; R16 := R0; R15 := R0[0x388577d5]
229 [-]: CALL      R15 2 2      ; R15 := R15(R16)
230 [-]: SETTABLE  R14 R15 K13  ; R14[R15] := nil
231 [-]: GETGLOBAL R14 K10      ; R14 := _T
232 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["CephalonTearDamageFreezeTable"]
233 [-]: SELF      R15 R0 K12   ; R16 := R0; R15 := R0[0x388577d5]
234 [-]: CALL      R15 2 2      ; R15 := R15(R16)
235 [-]: SETTABLE  R14 R15 K13  ; R14[R15] := nil
236 [-]: EQ        1 R2 K13     ; if R2 == nil then PC := 268
237 [-]: JMP       268          ; PC := 268
238 [-]: LT        0 K14 R2     ; if 0.000000 >= R2 then PC := 268
239 [-]: JMP       268          ; PC := 268
240 [-]: GETGLOBAL R14 K9       ; R14 := 0x7b998233
241 [-]: MOVE      R15 R0       ; R15 := R0
242 [-]: CALL      R14 2 2      ; R14 := R14(R15)
243 [-]: TEST      R14 0        ; if not R14 then PC := 246
244 [-]: JMP       246          ; PC := 246
245 [-]: RETURN    R0 1         ; return 
246 [-]: SELF      R14 R0 K55   ; R15 := R0; R14 := R0[0xff7a9352]
247 [-]: CALL      R14 2 2      ; R14 := R14(R15)
248 [-]: LT        0 K14 R14    ; if 0.000000 >= R14 then PC := 261
249 [-]: JMP       261          ; PC := 261
250 [-]: CONST     R15 0        ; R15 := 0.000000
251 [-]: SUB       R16 R14 K56  ; R16 := R14 - 1.000000
252 [-]: CONST     R17 1        ; R17 := 1.000000
253 [-]: FORPREP   R15 259      ; R15 -= R17; PC := 259
254 [-]: SELF      R19 R0 K57   ; R20 := R0; R19 := R0[0xd008f0d8]
255 [-]: MOVE      R21 R18      ; R21 := R18
256 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
257 [-]: SELF      R20 R19 K54  ; R21 := R19; R20 := R19[0xa2880940]
258 [-]: CALL      R20 2 1      ; R20(R21)
259 [-]: FORLOOP   R15 254      ; R15 += R17; if R15 <= R16 then begin PC := 254; R18 := R15 end
260 [-]: JMP       268          ; PC := 268
261 [-]: GETGLOBAL R20 K9       ; R20 := 0x7b998233
262 [-]: MOVE      R21 R0       ; R21 := R0
263 [-]: CALL      R20 2 2      ; R20 := R20(R21)
264 [-]: TEST      R20 1        ; if R20 then PC := 268
265 [-]: JMP       268          ; PC := 268
266 [-]: SELF      R20 R0 K54   ; R21 := R0; R20 := R0[0xa2880940]
267 [-]: CALL      R20 2 1      ; R20(R21)
268 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 197
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CephalonTearDamageFreezeTable"]
  3 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0x388577d5]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SETTABLE  R1 R2 K3     ; R1[R2] := true
  6 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xd1213d8c]
  7 [-]: CONST     R3 2         ; R3 := 2.000000
  8 [-]: CONST     R4 1         ; R4 := 1.000000
  9 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 10 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0xb3ed31dd]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K7        ; R2 := 0x0469f296
 13 [-]: LOADK     R3 K8        ; R3 := "PostDeathTickingBomb"
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETGLOBAL R3 K9        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 0         ; if not R3 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: SELF      R3 R0 K10    ; R4 := R0; R3 := R0[0xd5f7912b]
 21 [-]: MOVE      R5 R2        ; R5 := R2
 22 [-]: LOADKB    R6 0 0       ; R6 := false
 23 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 24 [-]: JMP       29           ; PC := 29
 25 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1[0xd5f7912b]
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: LOADKB    R6 0 0       ; R6 := false
 28 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 29 [-]: GETGLOBAL R3 K11       ; R3 := 0x89326c93
 30 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x18d05d30]
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: TEST      R3 0         ; if not R3 then PC := 79
 33 [-]: JMP       79           ; PC := 79
 34 [-]: GETGLOBAL R3 K13       ; R3 := 0xb009bbc6
 35 [-]: GETUPVAL  R4 U0        ; R4 := U0
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: GETGLOBAL R4 K13       ; R4 := 0xb009bbc6
 38 [-]: SELF      R5 R3 K14    ; R6 := R3; R5 := R3[0xf278f8a1]
 39 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 40 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 41 [-]: GETGLOBAL R5 K15       ; R5 := 0x5bced4c4
 42 [-]: GETTABLE  R5 R5 K16    ; R5 := R5[0x55f27c30]
 43 [-]: SELF      R6 R3 K17    ; R7 := R3; R6 := R3[0x075cb724]
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: GETUPVAL  R7 U1        ; R7 := U1
 46 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
 47 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 48 [-]: GETGLOBAL R6 K11       ; R6 := 0x89326c93
 49 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0x7d108ddb]
 50 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 51 [-]: GETGLOBAL R7 K19       ; R7 := 0xcfc01047
 52 [-]: MOVE      R8 R6        ; R8 := R6
 53 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 54 [-]: JMP       77           ; PC := 77
 55 [-]: GETGLOBAL R12 K9       ; R12 := 0x7b998233
 56 [-]: MOVE      R13 R11      ; R13 := R11
 57 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 58 [-]: TEST      R12 1        ; if R12 then PC := 77
 59 [-]: JMP       77           ; PC := 77
 60 [-]: SELF      R12 R11 K20  ; R13 := R11; R12 := R11[0xd8140b94]
 61 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 62 [-]: TEST      R12 0        ; if not R12 then PC := 77
 63 [-]: JMP       77           ; PC := 77
 64 [-]: SELF      R12 R11 K21  ; R13 := R11; R12 := R11[0xbb610e5b]
 65 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 66 [-]: GETGLOBAL R13 K9       ; R13 := 0x7b998233
 67 [-]: MOVE      R14 R12      ; R14 := R12
 68 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 69 [-]: TEST      R13 1        ; if R13 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: SELF      R13 R12 K22  ; R14 := R12; R13 := R12[0xde321e6f]
 72 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 73 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13[0xec017efa]
 74 [-]: MOVE      R15 R4       ; R15 := R4
 75 [-]: MOVE      R16 R5       ; R16 := R5
 76 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 77 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 55; R9 := R10 end
 78 [-]: JMP       55           ; PC := 55
 79 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 228
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CephalonTearDamageCounterTable"]
  3 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0x388577d5]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  6 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K0        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["CephalonTearDamageFreezeTable"]
 11 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["CephalonTearDamageFreezeTable"]
 15 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0x388577d5]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 18 [-]: TEST      R1 0         ; if not R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0xbd1405a3]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0x52de0ed7]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 26 [-]: MOVE      R4 R2        ; R4 := R2
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: TEST      R3 1         ; if R3 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0xf2deaf69]
 31 [-]: GETGLOBAL R5 K9        ; R5 := gLotusNpcAvatarType
 32 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 33 [-]: TEST      R3 0         ; if not R3 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: RETURN    R0 1         ; return 
 36 [-]: GETGLOBAL R3 K10       ; R3 := 0x5bced4c4
 37 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[0x99675e23]
 38 [-]: GETUPVAL  R4 U0        ; R4 := U0
 39 [-]: GETUPVAL  R5 U1        ; R5 := U1
 40 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: GETGLOBAL R4 K0        ; R4 := _T
 43 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["CephalonTearDamageCounterTable"]
 44 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0[0x388577d5]
 45 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 46 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 47 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: SELF      R5 R0 K12    ; R6 := R0; R5 := R0[0x2d9ba74f]
 50 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0[0x65d389cb]
 51 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 52 [-]: GETUPVAL  R8 U2        ; R8 := U2
 53 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
 54 [-]: CALL      R5 3 1       ; R5(R6,R7)
 55 [-]: GETGLOBAL R5 K0        ; R5 := _T
 56 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["CephalonTearDamageCounterTable"]
 57 [-]: SELF      R6 R0 K2     ; R7 := R0; R6 := R0[0x388577d5]
 58 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 59 [-]: ADD       R7 R4 K14    ; R7 := R4 + 1.000000
 60 [-]: SETTABLE  R5 R6 R7     ; R5[R6] := R7
 61 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 254
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x647915f6]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x18d05d30]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 26
  7 [-]: JMP       26           ; PC := 26
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 26
 12 [-]: JMP       26           ; PC := 26
 13 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x28e744cf]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0xcbd666e1
 18 [-]: LOADK     R3 K6        ; R3 := 0.100000
 19 [-]: CALL      R2 2 1       ; R2(R3)
 20 [-]: JMP       8            ; PC := 8
 21 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x647915f6]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: MOVE      R1 R2        ; R1 := R2
 24 [-]: JMP       26           ; PC := 26
 25 [-]: JMP       8            ; PC := 8
 26 [-]: CONST     R2 1         ; R2 := 1.000000
 27 [-]: GETGLOBAL R3 K7        ; R3 := 0x0469f296
 28 [-]: LOADK     R4 K8        ; R4 := "TimeScalar"
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: GETGLOBAL R4 K7        ; R4 := 0x0469f296
 31 [-]: LOADK     R5 K9        ; R5 := "UnlitAtten"
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: GETUPVAL  R5 U0        ; R5 := U0
 34 [-]: GETUPVAL  R6 U1        ; R6 := U1
 35 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
 36 [-]: GETUPVAL  R6 U1        ; R6 := U1
 37 [-]: LE        0 R6 K10     ; if R6 > 0.000000 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: CONST     R5 100       ; R5 := 100.000000
 40 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 41 [-]: MOVE      R7 R1        ; R7 := R1
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: TEST      R6 1         ; if R6 then PC := 90
 44 [-]: JMP       90           ; PC := 90
 45 [-]: SELF      R6 R1 K11    ; R7 := R1; R6 := R1[0x2047cfe7]
 46 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 47 [-]: TEST      R6 1         ; if R6 then PC := 90
 48 [-]: JMP       90           ; PC := 90
 49 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 50 [-]: GETGLOBAL R7 K12       ; R7 := _T
 51 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["CephalonTearDamageCounterTable"]
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: TEST      R6 0         ; if not R6 then PC := 58
 54 [-]: JMP       58           ; PC := 58
 55 [-]: GETGLOBAL R6 K12       ; R6 := _T
 56 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 57 [-]: SETTABLE  R6 K13 R7    ; R6["CephalonTearDamageCounterTable"] := R7
 58 [-]: GETGLOBAL R6 K12       ; R6 := _T
 59 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["CephalonTearDamageCounterTable"]
 60 [-]: SELF      R7 R1 K14    ; R8 := R1; R7 := R1[0x388577d5]
 61 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 62 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 63 [-]: EQ        1 R6 R2      ; if R6 == R2 then PC := 85
 64 [-]: JMP       85           ; PC := 85
 65 [-]: EQ        1 R6 K15     ; if R6 == nil then PC := 85
 66 [-]: JMP       85           ; PC := 85
 67 [-]: GETGLOBAL R7 K16       ; R7 := 0x5bced4c4
 68 [-]: GETTABLE  R7 R7 K17    ; R7 := R7[0xac1b386a]
 69 [-]: MOVE      R8 R6        ; R8 := R6
 70 [-]: MOVE      R9 R5        ; R9 := R5
 71 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 72 [-]: DIV       R7 R7 R5     ; R7 := R7 / R5
 73 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0[0x986d2ab8]
 74 [-]: MOVE      R10 R3       ; R10 := R3
 75 [-]: MUL       R11 K19 R7   ; R11 := 4.000000 * R7
 76 [-]: ADD       R11 K20 R11  ; R11 := 1.000000 + R11
 77 [-]: CONST     R12 0        ; R12 := 0.000000
 78 [-]: CONST     R13 0        ; R13 := 0.000000
 79 [-]: CONST     R14 1        ; R14 := 1.000000
 80 [-]: CALL      R8 7 1       ; R8(R9,R10,R11,R12,R13,R14)
 81 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0[0x986d2ab8]
 82 [-]: MOVE      R10 R4       ; R10 := R4
 83 [-]: MUL       R11 R7 K21   ; R11 := R7 * 10.000000
 84 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 85 [-]: MOVE      R2 R6        ; R2 := R6
 86 [-]: GETGLOBAL R8 K5        ; R8 := 0xcbd666e1
 87 [-]: CONST     R9 0         ; R9 := 0.000000
 88 [-]: CALL      R8 2 1       ; R8(R9)
 89 [-]: JMP       40           ; PC := 40
 90 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 291
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x11a19c5e
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADK     R3 K1        ; R3 := "OnKilled"
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x05b9abd3]
  6 [-]: LOADK     R3 K3        ; R3 := "OnDamaged"
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 296
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
  2 [-]: GETGLOBAL R3 K1        ; R3 := gLotusNpcAvatarType
  3 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  4 [-]: TEST      R1 1         ; if R1 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x18d05d30]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 26
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0x28e744cf]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R1 K6        ; R1 := 0xcbd666e1
 21 [-]: LOADK     R2 K7        ; R2 := 0.100000
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: JMP       11           ; PC := 11
 24 [-]: JMP       26           ; PC := 26
 25 [-]: JMP       11           ; PC := 11
 26 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0x28e744cf]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: MOVE      R0 R1        ; R0 := R1
 29 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 1         ; if R1 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
 35 [-]: GETGLOBAL R3 K1        ; R3 := gLotusNpcAvatarType
 36 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 37 [-]: TEST      R1 1         ; if R1 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
 41 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x18d05d30]
 42 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 43 [-]: TEST      R1 1         ; if R1 then PC := 68
 44 [-]: JMP       68           ; PC := 68
 45 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 46 [-]: GETGLOBAL R2 K8        ; R2 := _T
 47 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["CephalonTearDamageCounterTable"]
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: TEST      R1 0         ; if not R1 then PC := 54
 50 [-]: JMP       54           ; PC := 54
 51 [-]: GETGLOBAL R1 K8        ; R1 := _T
 52 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 53 [-]: SETTABLE  R1 K9 R2     ; R1["CephalonTearDamageCounterTable"] := R2
 54 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 55 [-]: GETGLOBAL R2 K8        ; R2 := _T
 56 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CephalonTearDamageFreezeTable"]
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: TEST      R1 0         ; if not R1 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETGLOBAL R1 K8        ; R1 := _T
 61 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 62 [-]: SETTABLE  R1 K10 R2    ; R1["CephalonTearDamageFreezeTable"] := R2
 63 [-]: GETGLOBAL R1 K8        ; R1 := _T
 64 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["CephalonTearDamageCounterTable"]
 65 [-]: SELF      R2 R0 K11    ; R3 := R0; R2 := R0[0x388577d5]
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: SETTABLE  R1 R2 K12    ; R1[R2] := 0.000000
 68 [-]: SELF      R1 R0 K13    ; R2 := R0; R1 := R0[0x2047cfe7]
 69 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 70 [-]: TEST      R1 0         ; if not R1 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: RETURN    R0 1         ; return 
 73 [-]: SELF      R1 R0 K14    ; R2 := R0; R1 := R0[0xd5f7912b]
 74 [-]: GETGLOBAL R3 K15       ; R3 := 0x0469f296
 75 [-]: LOADK     R4 K16       ; R4 := "_AddGlassPortsChild"
 76 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 77 [-]: LOADKB    R4 0 0       ; R4 := false
 78 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 79 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 332
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xcbd666e1
  2 [-]: CONST     R2 0         ; R2 := 0.000000
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0xc9f6a7d7]
 11 [-]: GETGLOBAL R3 K3        ; R3 := gHitProxyType
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 31
 17 [-]: JMP       31           ; PC := 31
 18 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xd2715720]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: LT        0 K5 R2      ; if 0.000000 >= R2 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETGLOBAL R2 K0        ; R2 := 0xcbd666e1
 28 [-]: LOADK     R3 K6        ; R3 := 0.100000
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: JMP       13           ; PC := 13
 31 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R0        ; R3 := R0
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 86
 35 [-]: JMP       86           ; PC := 86
 36 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0xd2715720]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: LT        0 K5 R2      ; if 0.000000 >= R2 then PC := 86
 39 [-]: JMP       86           ; PC := 86
 40 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0[0x28e744cf]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 43 [-]: MOVE      R4 R2        ; R4 := R2
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 79
 46 [-]: JMP       79           ; PC := 79
 47 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0xf2deaf69]
 48 [-]: GETGLOBAL R5 K9        ; R5 := gRagdollType
 49 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 50 [-]: TEST      R3 0         ; if not R3 then PC := 55
 51 [-]: JMP       55           ; PC := 55
 52 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2[0x5163741e]
 53 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 54 [-]: MOVE      R2 R3        ; R2 := R3
 55 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 56 [-]: MOVE      R4 R2        ; R4 := R2
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: TEST      R3 1         ; if R3 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R3 U0        ; R3 := U0
 61 [-]: MOVE      R4 R2        ; R4 := R2
 62 [-]: CONST     R5 0         ; R5 := 0.000000
 63 [-]: CALL      R3 3 1       ; R3(R4,R5)
 64 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 65 [-]: MOVE      R4 R2        ; R4 := R2
 66 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 67 [-]: TEST      R3 1         ; if R3 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: SELF      R3 R2 K2     ; R4 := R2; R3 := R2[0xc9f6a7d7]
 70 [-]: GETUPVAL  R5 U1        ; R5 := U1
 71 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 72 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 73 [-]: MOVE      R5 R3        ; R5 := R3
 74 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 75 [-]: TEST      R4 1         ; if R4 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: SELF      R4 R3 K11    ; R5 := R3; R4 := R3[0xa2880940]
 78 [-]: CALL      R4 2 1       ; R4(R5)
 79 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 80 [-]: MOVE      R5 R0        ; R5 := R0
 81 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 82 [-]: TEST      R4 1         ; if R4 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: SELF      R4 R0 K11    ; R5 := R0; R4 := R0[0xa2880940]
 85 [-]: CALL      R4 2 1       ; R4(R5)
 86 [-]: RETURN    R0 1         ; return 


